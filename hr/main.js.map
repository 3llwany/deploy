{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/services/auth.service.ts","./src/app/auth/services/error-interceptor.service.ts","./src/app/auth/services/token-interceptor.service.ts","./src/app/auth/services/user-views.service.ts","./src/app/layouts/content/content-layout.component.ts","./src/app/layouts/content/content-layout.component.html","./src/app/layouts/full/full-layout.component.ts","./src/app/layouts/full/full-layout.component.html","./src/app/org-management/components/jobs-profile/add-job-profile/add-job-profile.component.ts","./src/app/org-management/components/jobs-profile/add-job-profile/add-job-profile.component.html","./src/app/org-management/components/jobs-profile/assign-job-to-org/assign-job-to-org.component.ts","./src/app/org-management/components/jobs-profile/assign-job-to-org/assign-job-to-org.component.html","./src/app/org-management/components/jobs-profile/job-appraisal-method/job-appraisal-method.component.ts","./src/app/org-management/components/jobs-profile/job-appraisal-method/job-appraisal-method.component.html","./src/app/org-management/components/jobs-profile/job-benefit/job-benefit.component.ts","./src/app/org-management/components/jobs-profile/job-benefit/job-benefit.component.html","./src/app/org-management/components/jobs-profile/job-career-path/job-career-path.component.ts","./src/app/org-management/components/jobs-profile/job-career-path/job-career-path.component.html","./src/app/org-management/components/jobs-profile/job-competence-level-details-dialog/job-competence-level-details-dialog.component.ts","./src/app/org-management/components/jobs-profile/job-competence-level-details-dialog/job-competence-level-details-dialog.component.html","./src/app/org-management/components/jobs-profile/job-competences/job-competences.component.ts","./src/app/org-management/components/jobs-profile/job-competences/job-competences.component.html","./src/app/org-management/components/jobs-profile/job-custodies/job-custodies.component.ts","./src/app/org-management/components/jobs-profile/job-custodies/job-custodies.component.html","./src/app/org-management/components/jobs-profile/job-description/job-description.component.ts","./src/app/org-management/components/jobs-profile/job-description/job-description.component.html","./src/app/org-management/components/jobs-profile/job-kpi/job-kpi.component.ts","./src/app/org-management/components/jobs-profile/job-kpi/job-kpi.component.html","./src/app/org-management/components/jobs-profile/job-training-path/job-training-path.component.ts","./src/app/org-management/components/jobs-profile/job-training-path/job-training-path.component.html","./src/app/org-management/components/policy-groups/load-policies-group/load-policies-group.component.ts","./src/app/org-management/components/policy-groups/load-policies-group/load-policies-group.component.html","./src/app/org-management/mapper/job-title.ts","./src/app/org-management/services/business-entity.service.ts","./src/app/org-management/services/competence.service.ts","./src/app/org-management/services/job-profile/assign-job-to-org.service.ts","./src/app/org-management/services/job-profile/job-appraisal-method.service.ts","./src/app/org-management/services/job-profile/job-benefit.service.ts","./src/app/org-management/services/job-profile/job-career-path.service.ts","./src/app/org-management/services/job-profile/job-competences.service.ts","./src/app/org-management/services/job-profile/job-custodies.service.ts","./src/app/org-management/services/job-profile/job-description.service.ts","./src/app/org-management/services/job-profile/job-kpi.service.ts","./src/app/org-management/services/job-profile/job-title.service.ts","./src/app/org-management/services/job-profile/job-training-path.service.ts","./src/app/org-management/services/org-location.service.ts","./src/app/org-management/services/org-structure/org-structure.service.ts","./src/app/org-management/services/policy-group.service.ts","./src/app/payroll/services/payment.service.ts","./src/app/payroll/services/variables.service.ts","./src/app/personnel-setup/components/employees/employee-general-info/emp-general-info-dialog/emp-general-info-dialog.component.ts","./src/app/personnel-setup/components/employees/employee-general-info/emp-general-info-dialog/emp-general-info-dialog.component.html","./src/app/personnel-setup/components/employees/employee-general-info/emp-general-info-form/emp-general-info-form.component.ts","./src/app/personnel-setup/components/employees/employee-general-info/emp-general-info-form/emp-general-info-form.component.html","./src/app/personnel-setup/components/employees/employee-select-table/employee-select-table.component.ts","./src/app/personnel-setup/components/employees/employee-select-table/employee-select-table.component.html","./src/app/personnel-setup/mapper/emp-career.ts","./src/app/personnel-setup/mapper/employee.ts","./src/app/personnel-setup/services/employees/assign-plan.service.ts","./src/app/personnel-setup/services/employees/career/employee-education.service.ts","./src/app/personnel-setup/services/employees/employees.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-custodies.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-hiring-document.service.ts","./src/app/personnel-setup/services/employees/general-info/emp-general-info.service.ts","./src/app/personnel-setup/services/employees/personal-info/employee-dependant.service.ts","./src/app/personnel-setup/services/employees/sap-integration/employee-erp-integration.service.ts","./src/app/personnel-setup/services/employees/sap-integration/employee-s4-hana.service.ts","./src/app/recruitment/mapper/recruitment-request.ts","./src/app/recruitment/services/candidate/candidate.service.ts","./src/app/recruitment/services/candidate/work-experience/candidate-work-experience.service.ts","./src/app/recruitment/services/employment-type.service.ts","./src/app/recruitment/services/plan/recruitment-plan.service.ts","./src/app/recruitment/services/recruitment-request.service.ts","./src/app/recruitment/services/request-reason.service.ts","./src/app/shared/Guards/check-token.guard.ts","./src/app/shared/Guards/get-module-id.guard.ts","./src/app/shared/components/checkbox/priorities-checkboxs/priorities-checkboxs.component.ts","./src/app/shared/components/checkbox/priorities-checkboxs/priorities-checkboxs.component.html","./src/app/shared/components/checkbox/weekdays-checkboxes/weekdays-checkboxes.component.ts","./src/app/shared/components/checkbox/weekdays-checkboxes/weekdays-checkboxes.component.html","./src/app/shared/components/dialogs/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/components/dialogs/confirm-dialog/confirm-dialog.component.html","./src/app/shared/components/dialogs/delete-dialog/delete-dialog.component.ts","./src/app/shared/components/dialogs/delete-dialog/delete-dialog.component.html","./src/app/shared/components/dropdowns/attendance-setup/attendance-location-dropdown/att-location-dropdown.component.ts","./src/app/shared/components/dropdowns/attendance-setup/attendance-location-dropdown/att-location-dropdown.component.html","./src/app/shared/components/dropdowns/attendance-setup/attendance-plan/attendance-plan-dropdown/attendance-plan-dropdown.component.ts","./src/app/shared/components/dropdowns/attendance-setup/attendance-plan/attendance-plan-dropdown/attendance-plan-dropdown.component.html","./src/app/shared/components/dropdowns/attendance-setup/attendance-plan/plan-by-policy-group-dropdown/plan-by-policy-group-dropdown.component.ts","./src/app/shared/components/dropdowns/attendance-setup/attendance-plan/plan-by-policy-group-dropdown/plan-by-policy-group-dropdown.component.html","./src/app/shared/components/dropdowns/attendance-setup/permission-type-dropdown/permission-type-dropdown.component.ts","./src/app/shared/components/dropdowns/attendance-setup/permission-type-dropdown/permission-type-dropdown.component.html","./src/app/shared/components/dropdowns/attendance-setup/vacation-type-dropdown/vacation-type-dropdown.component.ts","./src/app/shared/components/dropdowns/attendance-setup/vacation-type-dropdown/vacation-type-dropdown.component.html","./src/app/shared/components/dropdowns/bonus-setup/benefit-dropdown/benefit-dropdown.component.ts","./src/app/shared/components/dropdowns/bonus-setup/benefit-dropdown/benefit-dropdown.component.html","./src/app/shared/components/dropdowns/dashboard-setup/module-dropdown/module-dropdown.component.ts","./src/app/shared/components/dropdowns/dashboard-setup/module-dropdown/module-dropdown.component.html","./src/app/shared/components/dropdowns/dashboard-setup/properties-dropdown/properties-dropdowncomponent.ts","./src/app/shared/components/dropdowns/dashboard-setup/properties-dropdown/properties-dropdown.component.html","./src/app/shared/components/dropdowns/dashboard-setup/service-by-module-id-dropdown/service-by-module-id-dropdown.component.ts","./src/app/shared/components/dropdowns/dashboard-setup/service-by-module-id-dropdown/service-by-module-id-dropdown.component.html","./src/app/shared/components/dropdowns/dropdowns.module.ts","./src/app/shared/components/dropdowns/general-setup/attachment-dropdown/attachment-dropdown.component.ts","./src/app/shared/components/dropdowns/general-setup/attachment-dropdown/attachment-dropdown.component.html","./src/app/shared/components/dropdowns/general-setup/reports-dropdown/reports-dropdown.component.ts","./src/app/shared/components/dropdowns/general-setup/reports-dropdown/reports-dropdown.component.html","./src/app/shared/components/dropdowns/general-setup/service-dropdown/service-dropdown.component.ts","./src/app/shared/components/dropdowns/general-setup/service-dropdown/service-dropdown.component.html","./src/app/shared/components/dropdowns/general-setup/users-dropdown/users-dropdown.component.ts","./src/app/shared/components/dropdowns/general-setup/users-dropdown/users-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/bank-dropdown/bank-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/bank-dropdown/bank-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/blood-type-dropdown/blood-type-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/blood-type-dropdown/blood-type-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/contact-categories-by-contact-dropdown/categories-by-contact-type-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/contact-categories-by-contact-dropdown/categories-by-contact-type-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/contact-type-dropdown/contact-type-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/contact-type-dropdown/contact-type-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/contract-type-dropdown/contract-type-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/contract-type-dropdown/contract-type-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/country-dropdown/country-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/country-dropdown/country-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/education-degree-dropdown/education-degree-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/education-degree-dropdown/education-degree-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/education-grade-dropdown/education-grade-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/education-grade-dropdown/education-grade-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/gender-dropdown/gender-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/gender-dropdown/gender-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/governorate-by-country-dropdown/governorate-by-country-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/governorate-by-country-dropdown/governorate-by-country-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/hiring-document-by-service-dropdown/hiring-document-by-service-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/hiring-document-by-service-dropdown/hiring-document-by-service-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/identity-type-dropdown/identity-type-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/identity-type-dropdown/identity-type-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/institution-dropdown/institution-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/institution-dropdown/institution-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/insurance-office-dropdown/insurance-office-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/insurance-office-dropdown/insurance-office-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/job-status-dropdown/job-status-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/job-status-dropdown/job-status-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/job-status-event-by-status-dropdown/job-status-event-by-status-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/job-status-event-by-status-dropdown/job-status-event-by-status-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/kpi-dropdown/kpi-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/kpi-dropdown/kpi-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/marital-status-dropdown/marital-status-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/marital-status-dropdown/marital-status-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/military-grade-dropdown/military-grade-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/military-grade-dropdown/military-grade-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/military-status-dropdown/military-status-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/military-status-dropdown/military-status-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/nationality-dropdown/nationality-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/nationality-dropdown/nationality-dropdown.component.html","./src/app/shared/components/dropdowns/hr-setup/religion-dropdown/religion-dropdown.component.ts","./src/app/shared/components/dropdowns/hr-setup/religion-dropdown/religion-dropdown.component.html","./src/app/shared/components/dropdowns/localization-setup/local-types/local-types.component.ts","./src/app/shared/components/dropdowns/localization-setup/local-types/local-types.component.html","./src/app/shared/components/dropdowns/localization-setup/local-violation-types/local-violation-types.component.ts","./src/app/shared/components/dropdowns/localization-setup/local-violation-types/local-violation-types.component.html","./src/app/shared/components/dropdowns/localization-setup/penalty-dropdown/penalties-dropdown.component.ts","./src/app/shared/components/dropdowns/localization-setup/penalty-dropdown/penalties-dropdown.component.html","./src/app/shared/components/dropdowns/localization-setup/versions-dropdown/versions-dropdown.component.ts","./src/app/shared/components/dropdowns/localization-setup/versions-dropdown/versions-dropdown.component.html","./src/app/shared/components/dropdowns/localization-setup/violation-dropdown/violation-dropdown.component.ts","./src/app/shared/components/dropdowns/localization-setup/violation-dropdown/violation-dropdown.component.html","./src/app/shared/components/dropdowns/org-management-setup/competence-level-by-competence-dropdown/competence-level-by-competence-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management-setup/competence-level-by-competence-dropdown/competence-level-by-competence-dropdown.component.html","./src/app/shared/components/dropdowns/org-management-setup/custodies/custodies-by-employee-dropdown/custodies-by-employee-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management-setup/custodies/custodies-by-employee-dropdown/custodies-by-employee-dropdown.component.html","./src/app/shared/components/dropdowns/org-management-setup/custodies/custodies-dropdown/custodies-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management-setup/custodies/custodies-dropdown/custodies-dropdown.component.html","./src/app/shared/components/dropdowns/org-management-setup/job-family-by-org-dropdown/job-family-by-org-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management-setup/job-family-by-org-dropdown/job-family-by-org-dropdown.component.html","./src/app/shared/components/dropdowns/org-management-setup/job-family-dropdown/job-family-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management-setup/job-family-dropdown/job-family-dropdown.component.html","./src/app/shared/components/dropdowns/org-management-setup/org-types/org-types-dropdown-current-structure/org-types-dropdown-current-structure.component.ts","./src/app/shared/components/dropdowns/org-management-setup/org-types/org-types-dropdown-current-structure/org-types-dropdown-current-structure.component.html","./src/app/shared/components/dropdowns/org-management-setup/org-types/org-types-dropdown/org-types-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management-setup/org-types/org-types-dropdown/org-types-dropdown.component.html","./src/app/shared/components/dropdowns/org-management-setup/org/organization-by-org-type-dropdown/organization-by-org-type-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management-setup/org/organization-by-org-type-dropdown/organization-by-org-type-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/Business-dropdown/Business-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/Business-dropdown/Business-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/company-by-businessId-dropdown/company-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/company-by-businessId-dropdown/company-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/competence-dropdown/competence-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/competence-dropdown/competence-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/job-title/job-title-by-org-dropdown/job-title-by-org-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/job-title/job-title-by-org-dropdown/job-title-by-org-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/job-title/job-title-dropdown/job-title-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/job-title/job-title-dropdown/job-title-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/org-location-dropdown/org-location-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/org-location-dropdown/org-location-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/policy-group-type-dropdown/policy-group-type-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/policy-group-type-dropdown/policy-group-type-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/policy-groups/policy-groups-by-company-dropdown/policy-groups-by-company-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/policy-groups/policy-groups-by-company-dropdown/policy-groups-by-company-dropdown.component.html","./src/app/shared/components/dropdowns/org-management/policy-groups/policy-groups-dropdown/policy-groups-dropdown.component.ts","./src/app/shared/components/dropdowns/org-management/policy-groups/policy-groups-dropdown/policy-groups-dropdown.component.html","./src/app/shared/components/dropdowns/payroll-setup/element-groups-dropdown/element-groups-dropdown.component.ts","./src/app/shared/components/dropdowns/payroll-setup/element-groups-dropdown/element-groups-dropdown.component.html","./src/app/shared/components/dropdowns/payroll-setup/loan-types-dropdown/loan-types-dropdown.component.ts","./src/app/shared/components/dropdowns/payroll-setup/loan-types-dropdown/loan-types-dropdown.component.html","./src/app/shared/components/dropdowns/payroll/payment-dropdown/payment-dropdown.component.ts","./src/app/shared/components/dropdowns/payroll/payment-dropdown/payment-dropdown.component.html","./src/app/shared/components/dropdowns/payroll/variable-by-payment-dropdown/variable-by-payment-dropdown.component.ts","./src/app/shared/components/dropdowns/payroll/variable-by-payment-dropdown/variable-by-payment-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/attachment-types-by-employee-id-dropdown/attachment-types-by-employee-id-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/attachment-types-by-employee-id-dropdown/attachment-types-by-employee-id-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/cost-center-by-s4-system-instance-dropdown/cost-center-by-s4-system-instance-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/cost-center-by-s4-system-instance-dropdown/cost-center-by-s4-system-instance-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/education-year-dropdown/education-year-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/education-year-dropdown/education-year-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/employees-shared-company/employees-shared-company.component.ts","./src/app/shared/components/dropdowns/personnel-setup/employees-shared-company/employees-shared-company.component.html","./src/app/shared/components/dropdowns/personnel-setup/employees/employee-by-policy-group-dropdown/employee-by-policy-group-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/employees/employee-by-policy-group-dropdown/employee-by-policy-group-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/employees/employee-dropdown/employee-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/employees/employee-dropdown/employee-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/erp-integration/erp-group-code-customer-dropdown/erp-group-code-customer-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/erp-integration/erp-group-code-customer-dropdown/erp-group-code-customer-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/erp-integration/erp-group-code-vendor-dropdown/erp-group-code-vendor-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/erp-integration/erp-group-code-vendor-dropdown/erp-group-code-vendor-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/erp-integration/erp-resource-group-dropdown/erp-resource-group-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/erp-integration/erp-resource-group-dropdown/erp-resource-group-dropdown.component.html","./src/app/shared/components/dropdowns/personnel-setup/relationship-dropdown/relationship-dropdown.component.ts","./src/app/shared/components/dropdowns/personnel-setup/relationship-dropdown/relationship-dropdown.component.html","./src/app/shared/components/dropdowns/recruitment/employment-type-dropdown/employment-type-dropdown.component.ts","./src/app/shared/components/dropdowns/recruitment/employment-type-dropdown/employment-type-dropdown.component.html","./src/app/shared/components/dropdowns/recruitment/recruitment-plan-dropdown/recruitment-plan-dropdown.component.ts","./src/app/shared/components/dropdowns/recruitment/recruitment-plan-dropdown/recruitment-plan-dropdown.component.html","./src/app/shared/components/dropdowns/recruitment/request-reason-dropdown/request-reason-dropdown.component.ts","./src/app/shared/components/dropdowns/recruitment/request-reason-dropdown/request-reason-dropdown.component.html","./src/app/shared/components/dropdowns/recruitment/request/recruitment-request-by-plan-dropdown/recruitment-request-by-plan-dropdown.component.ts","./src/app/shared/components/dropdowns/recruitment/request/recruitment-request-by-plan-dropdown/recruitment-request-by-plan-dropdown.component.html","./src/app/shared/components/dropdowns/recruitment/resignation-reason-dropdown/resignation-reason-dropdown.component.ts","./src/app/shared/components/dropdowns/recruitment/resignation-reason-dropdown/resignation-reason-dropdown.component.html","./src/app/shared/components/dropdowns/recruitment/sourcing-type-dropdown/sourcing-type-dropdown.component.ts","./src/app/shared/components/dropdowns/recruitment/sourcing-type-dropdown/sourcing-type-dropdown.component.html","./src/app/shared/components/dropdowns/related-by-user/Business-dropdown-current-user/Business-dropdown-current-user.component.ts","./src/app/shared/components/dropdowns/related-by-user/Business-dropdown-current-user/Business-dropdown-current-user.component.html","./src/app/shared/components/dropdowns/related-by-user/company-by-businessId-dropdown/company-dropdown-current-user.component.ts","./src/app/shared/components/dropdowns/related-by-user/company-by-businessId-dropdown/company-dropdown-current-user.component.html","./src/app/shared/components/dropdowns/s4-setup/gl-account-by-s4-system-instance-dropdown/gl-account-by-s4-system-instance-dropdown.component.ts","./src/app/shared/components/dropdowns/s4-setup/gl-account-by-s4-system-instance-dropdown/gl-account-by-s4-system-instance-dropdown.component.html","./src/app/shared/components/dropdowns/s4-setup/s4-integration-purpose-by-system-instance-dropdown/s4-integration-purpose-by-system-instance-dropdown.component.ts","./src/app/shared/components/dropdowns/s4-setup/s4-integration-purpose-by-system-instance-dropdown/s4-integration-purpose-by-system-instance-dropdown.component.html","./src/app/shared/components/dropdowns/s4-setup/s4-system-instance-dropdown/s4-system-instance-dropdown.component.ts","./src/app/shared/components/dropdowns/s4-setup/s4-system-instance-dropdown/s4-system-instance-dropdown.component.html","./src/app/shared/components/dropdowns/sap-business-one-setup/sap-integration-purpose-by-system-instance-dropdown/sap-integration-purpose-by-system-instance-dropdown.component.ts","./src/app/shared/components/dropdowns/sap-business-one-setup/sap-integration-purpose-by-system-instance-dropdown/sap-integration-purpose-by-system-instance-dropdown.component.html","./src/app/shared/components/dropdowns/sap-business-one-setup/sap-system-instance-dropdown/sap-system-instance-dropdown.component.ts","./src/app/shared/components/dropdowns/sap-business-one-setup/sap-system-instance-dropdown/sap-system-instance-dropdown.component.html","./src/app/shared/components/dropdowns/training-setup/course-category-dropdown/course-category-dropdown.component.ts","./src/app/shared/components/dropdowns/training-setup/course-category-dropdown/course-category-dropdown.component.html","./src/app/shared/components/dropdowns/training-setup/course-type-dropdown/course-type-dropdown.component.ts","./src/app/shared/components/dropdowns/training-setup/course-type-dropdown/course-type-dropdown.component.html","./src/app/shared/components/dropdowns/training-setup/expenses-dropdown/expenses-dropdown.component.ts","./src/app/shared/components/dropdowns/training-setup/expenses-dropdown/expenses-dropdown.component.html","./src/app/shared/components/dropdowns/training-setup/reason-dropdown/reason-dropdown.component.ts","./src/app/shared/components/dropdowns/training-setup/reason-dropdown/reason-dropdown.component.html","./src/app/shared/components/dropdowns/training/business-objective-dropdown/business-objective-dropdown.component.ts","./src/app/shared/components/dropdowns/training/business-objective-dropdown/business-objective-dropdown.component.html","./src/app/shared/components/dropdowns/training/course/course-by-course-category-dropdown/course-by-course-category-dropdown.component.ts","./src/app/shared/components/dropdowns/training/course/course-by-course-category-dropdown/course-by-course-category-dropdown.component.html","./src/app/shared/components/dropdowns/training/course/course-by-plan-in-add-plan-dropdown/course-by-plan-dropdown.component.ts","./src/app/shared/components/dropdowns/training/course/course-by-plan-in-add-plan-dropdown/course-by-plan-dropdown.component.html","./src/app/shared/components/dropdowns/training/course/course-by-training-plan-dropdown/course-by-training-plan-dropdown.component.ts","./src/app/shared/components/dropdowns/training/course/course-by-training-plan-dropdown/course-by-training-plan-dropdown.component.html","./src/app/shared/components/dropdowns/training/instructor-dropdown/instructor-dropdown.component.ts","./src/app/shared/components/dropdowns/training/instructor-dropdown/instructor-dropdown.component.html","./src/app/shared/components/dropdowns/training/training-plan-dropdown/training-plan-dropdown.component.ts","./src/app/shared/components/dropdowns/training/training-plan-dropdown/training-plan-dropdown.component.html","./src/app/shared/components/dropdowns/training/tsp-dropdown/tsp-dropdown.component.ts","./src/app/shared/components/dropdowns/training/tsp-dropdown/tsp-dropdown.component.html","./src/app/shared/components/global-functions/global-functions.component.ts","./src/app/shared/components/global-functions/global-functions.component.html","./src/app/shared/components/mat-stepper-done-icon/mat-stepper-done-icon.component.ts","./src/app/shared/components/mat-stepper-done-icon/mat-stepper-done-icon.component.html","./src/app/shared/components/page-title/page-title.component.ts","./src/app/shared/components/page-title/page-title.component.html","./src/app/shared/components/resources/buttons/add-new-btn/add-new-btn.component.ts","./src/app/shared/components/resources/buttons/add-new-btn/add-new-btn.component.html","./src/app/shared/components/resources/buttons/back-btn/back-btn.component.ts","./src/app/shared/components/resources/buttons/back-btn/back-btn.component.html","./src/app/shared/components/resources/buttons/button/button.component.ts","./src/app/shared/components/resources/buttons/button/button.component.html","./src/app/shared/components/resources/buttons/close-dialog-btn/close-dialog-btn.component.ts","./src/app/shared/components/resources/buttons/close-dialog-btn/close-dialog-btn.component.html","./src/app/shared/components/resources/buttons/reset-form-btn/reset-form-btn.component.ts","./src/app/shared/components/resources/buttons/reset-form-btn/reset-form-btn.component.html","./src/app/shared/components/resources/buttons/submit-btn/submit-btn.component.ts","./src/app/shared/components/resources/buttons/submit-btn/submit-btn.component.html","./src/app/shared/components/resources/dynamic-form-field/button-file-input/button-file-input.component.html","./src/app/shared/components/resources/dynamic-form-field/button-file-input/button-file-input.component.ts","./src/app/shared/components/resources/dynamic-form-field/check-box/check-box.component.ts","./src/app/shared/components/resources/dynamic-form-field/check-box/check-box.component.html","./src/app/shared/components/resources/dynamic-form-field/datepicker/datepicker.component.ts","./src/app/shared/components/resources/dynamic-form-field/datepicker/datepicker.component.html","./src/app/shared/components/resources/dynamic-form-field/dropdown-with-search/dropdown-with-search.component.ts","./src/app/shared/components/resources/dynamic-form-field/dropdown-with-search/dropdown-with-search.component.html","./src/app/shared/components/resources/dynamic-form-field/file-input/file-input.component.ts","./src/app/shared/components/resources/dynamic-form-field/file-input/file-input.component.html","./src/app/shared/components/resources/dynamic-form-field/input-validation-msg/input-validation-msg.component.ts","./src/app/shared/components/resources/dynamic-form-field/input-validation-msg/input-validation-msg.component.html","./src/app/shared/components/resources/dynamic-form-field/input/input.component.ts","./src/app/shared/components/resources/dynamic-form-field/input/input.component.html","./src/app/shared/components/resources/dynamic-form-field/mat-select-search/mat-select-search.component.ts","./src/app/shared/components/resources/dynamic-form-field/mat-select-search/mat-select-search.component.html","./src/app/shared/components/resources/dynamic-form-field/prime-ng/calendar/calendar.component.ts","./src/app/shared/components/resources/dynamic-form-field/prime-ng/calendar/calendar.component.html","./src/app/shared/components/resources/dynamic-form-field/prime-ng/dropdown-core/dropdown-core.component.ts","./src/app/shared/components/resources/dynamic-form-field/prime-ng/dropdown-core/dropdown-core.component.html","./src/app/shared/components/resources/dynamic-form-field/prime-ng/file-upload-card/file-upload-card.component.ts","./src/app/shared/components/resources/dynamic-form-field/prime-ng/file-upload-card/file-upload-card.component.html","./src/app/shared/components/resources/dynamic-form-field/prime-ng/file-upload/file-upload.component.ts","./src/app/shared/components/resources/dynamic-form-field/prime-ng/file-upload/file-upload.component.html","./src/app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component.ts","./src/app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component.html","./src/app/shared/components/resources/dynamic-form-field/select/select.component.ts","./src/app/shared/components/resources/dynamic-form-field/select/select.component.html","./src/app/shared/components/resources/dynamic-form-field/slide-toggle/slide-toggle.component.ts","./src/app/shared/components/resources/dynamic-form-field/slide-toggle/slide-toggle.component.html","./src/app/shared/components/resources/dynamic-form-field/slider/slider.component.ts","./src/app/shared/components/resources/dynamic-form-field/slider/slider.component.html","./src/app/shared/components/resources/dynamic-form-field/text-editor/text-editor.component.ts","./src/app/shared/components/resources/dynamic-form-field/text-editor/text-editor.component.html","./src/app/shared/components/resources/dynamic-form-field/textarea/textarea.component.ts","./src/app/shared/components/resources/dynamic-form-field/textarea/textarea.component.html","./src/app/shared/components/resources/dynamic-form-field/timepicker/timepicker.component.ts","./src/app/shared/components/resources/dynamic-form-field/timepicker/timepicker.component.html","./src/app/shared/components/resources/mat-paginator/mat-paginator.component.ts","./src/app/shared/components/resources/mat-paginator/mat-paginator.component.html","./src/app/shared/components/resources/material-table/material-table.component.ts","./src/app/shared/components/resources/material-table/material-table.component.html","./src/app/shared/components/resources/prime-paginator/prime-paginator.component.ts","./src/app/shared/components/resources/prime-paginator/prime-paginator.component.html","./src/app/shared/components/resources/primrng-table/primrng-table.component.ts","./src/app/shared/components/resources/primrng-table/primrng-table.component.html","./src/app/shared/components/row-functions/row-functions.component.ts","./src/app/shared/components/row-functions/row-functions.component.html","./src/app/shared/components/side-helping-menu/side-helping-menu.component.ts","./src/app/shared/components/side-helping-menu/side-helping-menu.component.html","./src/app/shared/components/steps-footer/steps-footer.component.ts","./src/app/shared/components/steps-footer/steps-footer.component.html","./src/app/shared/components/view-data-row-item/view-data-row-item.component.ts","./src/app/shared/components/view-data-row-item/view-data-row-item.component.html","./src/app/shared/customizer/customizer.component.ts","./src/app/shared/customizer/customizer.component.html","./src/app/shared/directives/paginator-style.directive.ts","./src/app/shared/directives/scrollable-horizontal.directive.ts","./src/app/shared/directives/sidebar-anchor-toggle.directive.ts","./src/app/shared/directives/sidebar-dropdown.directive.ts","./src/app/shared/directives/sidebar-link.directive.ts","./src/app/shared/directives/sidebar.directive.ts","./src/app/shared/directives/toggle-fullscreen.directive.ts","./src/app/shared/directives/topmenu-anchor-toggle.directive.ts","./src/app/shared/directives/topmenu-dropdown.directive.ts","./src/app/shared/directives/topmenu-link.directive.ts","./src/app/shared/directives/topmenu.directive.ts","./src/app/shared/enums/btns.enum.ts","./src/app/shared/enums/dashboard-properties-type.enum.ts","./src/app/shared/enums/files-exe.ts","./src/app/shared/enums/insuranceSide.enum.ts","./src/app/shared/enums/languages.enum.ts","./src/app/shared/enums/mat-theme.enum.ts","./src/app/shared/enums/message-types.enum.ts","./src/app/shared/enums/route-path-match.enum.ts","./src/app/shared/enums/tostPositions.enum.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/home-menu/home-menu.component.ts","./src/app/shared/home-menu/home-menu.component.html","./src/app/shared/horizontal-menu/horizontal-menu.component.ts","./src/app/shared/horizontal-menu/horizontal-menu.component.html","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/notification-sidebar/notification-sidebar.component.ts","./src/app/shared/notification-sidebar/notification-sidebar.component.html","./src/app/shared/pipes/file-size.pipe.ts","./src/app/shared/pipes/filter.pipe.ts","./src/app/shared/pipes/pipe.module.ts","./src/app/shared/pipes/search.pipe.ts","./src/app/shared/pipes/short-name.pipe.ts","./src/app/shared/resources/app-helpers.ts","./src/app/shared/resources/assets-manager.ts","./src/app/shared/resources/base-dropdown.ts","./src/app/shared/resources/constants.ts","./src/app/shared/resources/database-tabels.ts","./src/app/shared/resources/helpers-functions.ts","./src/app/shared/resources/local-storage.ts","./src/app/shared/resources/strings-manager.ts","./src/app/shared/resources/styles-path.ts","./src/app/shared/resources/views-manager.ts","./src/app/shared/routes/content-layout.routes.ts","./src/app/shared/routes/full-layout.routes.ts","./src/app/shared/services/app-client.service.ts","./src/app/shared/services/dialogs.service.ts","./src/app/shared/services/encrypt-decrypt-data.service.ts","./src/app/shared/services/file.service.ts","./src/app/shared/services/language.service.ts","./src/app/shared/services/loading.service.ts","./src/app/shared/services/messages.service.ts","./src/app/shared/services/params.service.ts","./src/app/shared/services/sweet-alert.service.ts","./src/app/shared/services/theme-options/config.service.ts","./src/app/shared/services/theme-options/customizer.service.ts","./src/app/shared/services/theme-options/layout.service.ts","./src/app/shared/services/theme-options/window.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/skeletons/chart-skeleton/chart-skeleton.component.ts","./src/app/shared/skeletons/chart-skeleton/chart-skeleton.component.html","./src/app/shared/skeletons/employee/emp-card-item-skeleton/emp-card-item-skeleton.component.ts","./src/app/shared/skeletons/employee/emp-card-item-skeleton/emp-card-item-skeleton.component.html","./src/app/shared/skeletons/employee/emp-payment-skeleton/emp-payment-skeleton.component.ts","./src/app/shared/skeletons/employee/emp-payment-skeleton/emp-payment-skeleton.component.html","./src/app/shared/skeletons/employee/emp-plan-card-dashboard-skeleton/emp-plan-card-dashboard-skeleton.component.ts","./src/app/shared/skeletons/employee/emp-plan-card-dashboard-skeleton/emp-plan-card-dashboard-skeleton.component.html","./src/app/shared/skeletons/employee/employee-profile-card-skeleton/employee-profile-card-skeleton.component.ts","./src/app/shared/skeletons/employee/employee-profile-card-skeleton/employee-profile-card-skeleton.component.html","./src/app/shared/skeletons/hire-document-skeleton/hire-document-skeleton.component.ts","./src/app/shared/skeletons/hire-document-skeleton/hire-document-skeleton.component.html","./src/app/shared/skeletons/input-skeleton/input-skeleton.component.ts","./src/app/shared/skeletons/input-skeleton/input-skeleton.component.html","./src/app/shared/skeletons/job-competence-details-dialog-skeleton/job-competence-details-dialog-skelton.component.ts","./src/app/shared/skeletons/job-competence-details-dialog-skeleton/job-competence-details-dialog-skeleton.component.html","./src/app/shared/skeletons/org-details-employees-list-skeleton/org-details-employees-list-skeleton.component.ts","./src/app/shared/skeletons/org-details-employees-list-skeleton/org-details-employees-list-skeleton.component.html","./src/app/shared/skeletons/structure-employee-card-skeleton/structure-employee-card-skeleton.component.ts","./src/app/shared/skeletons/structure-employee-card-skeleton/structure-employee-card-skeleton.component.html","./src/app/shared/skeletons/table-skeleton/table-skeleton.component.ts","./src/app/shared/skeletons/table-skeleton/table-skeleton.component.html","./src/app/shared/skeletons/view-card-row-skeleton/view-card-row-skeleton.component.ts","./src/app/shared/skeletons/view-card-row-skeleton/view-card-row-skeleton.component.html","./src/app/shared/skeletons/view-row-item-skeleton/view-row-item-skeleton.component.ts","./src/app/shared/skeletons/view-row-item-skeleton/view-row-item-skeleton.component.html","./src/app/shared/uimodules/material.module.ts","./src/app/shared/uimodules/primeng.module.ts","./src/app/shared/validators/custom.validator.ts","./src/app/shared/vertical-menu/vertical-menu.component.ts","./src/app/shared/vertical-menu/vertical-menu.component.html","./src/app/system-setup/attendance-setup/components/location/location.component.ts","./src/app/system-setup/attendance-setup/components/location/location.component.html","./src/app/system-setup/attendance-setup/components/permissions/add-permission/add-permission.component.ts","./src/app/system-setup/attendance-setup/components/permissions/add-permission/add-permission.component.html","./src/app/system-setup/attendance-setup/components/plan/add-plan/add-plan.component.ts","./src/app/system-setup/attendance-setup/components/plan/add-plan/add-plan.component.html","./src/app/system-setup/attendance-setup/components/plan/plan-form/plan-form.component.ts","./src/app/system-setup/attendance-setup/components/plan/plan-form/plan-form.component.html","./src/app/system-setup/attendance-setup/components/vacation/vacation-age/vacation-age.component.ts","./src/app/system-setup/attendance-setup/components/vacation/vacation-age/vacation-age.component.html","./src/app/system-setup/attendance-setup/components/vacation/vacation-insurance/vacation-insurance.component.ts","./src/app/system-setup/attendance-setup/components/vacation/vacation-insurance/vacation-insurance.component.html","./src/app/system-setup/attendance-setup/components/vacation/vacation-type/vacation-type.component.ts","./src/app/system-setup/attendance-setup/components/vacation/vacation-type/vacation-type.component.html","./src/app/system-setup/attendance-setup/mapper/vacation.ts","./src/app/system-setup/attendance-setup/services/att-location.service.ts","./src/app/system-setup/attendance-setup/services/attendance-plan.service.ts","./src/app/system-setup/attendance-setup/services/permissions.service.ts","./src/app/system-setup/attendance-setup/services/shifts.service.ts","./src/app/system-setup/attendance-setup/services/vacation/vacation-age.service.ts","./src/app/system-setup/attendance-setup/services/vacation/vacation-insurance.service.ts","./src/app/system-setup/attendance-setup/services/vacation/vacation.service.ts","./src/app/system-setup/bonus-setup/services/benefit.service.ts","./src/app/system-setup/dashboard-setup/components/dashboard-dispaly-details/dashboard-dispaly-details.component.ts","./src/app/system-setup/dashboard-setup/components/dashboard-dispaly-details/dashboard-dispaly-details.component.html","./src/app/system-setup/dashboard-setup/components/dashboard-dispaly/dashboard-display.component.ts","./src/app/system-setup/dashboard-setup/components/dashboard-dispaly/dashboard-display.component.html","./src/app/system-setup/dashboard-setup/components/properties/properties.component.ts","./src/app/system-setup/dashboard-setup/components/properties/properties.component.html","./src/app/system-setup/dashboard-setup/mapper/dashboard.ts","./src/app/system-setup/dashboard-setup/services/dashboard.service.ts","./src/app/system-setup/dashboard-setup/services/properties.service.ts","./src/app/system-setup/general-setup/components/users/add-user/add-user.component.ts","./src/app/system-setup/general-setup/components/users/add-user/add-user.component.html","./src/app/system-setup/general-setup/components/users/user-companies/user-companies.component.ts","./src/app/system-setup/general-setup/components/users/user-companies/user-companies.component.html","./src/app/system-setup/general-setup/components/users/user-group/user-group.component.ts","./src/app/system-setup/general-setup/components/users/user-group/user-group.component.html","./src/app/system-setup/general-setup/components/users/user-policy-groups/user-policy-groups.component.ts","./src/app/system-setup/general-setup/components/users/user-policy-groups/user-policy-groups.component.html","./src/app/system-setup/general-setup/mapper/policies.ts","./src/app/system-setup/general-setup/mapper/users.ts","./src/app/system-setup/general-setup/services/attachment-types.service.ts","./src/app/system-setup/general-setup/services/groups.service.ts","./src/app/system-setup/general-setup/services/iso-code.service.ts","./src/app/system-setup/general-setup/services/priority.service.ts","./src/app/system-setup/general-setup/services/service.service.ts","./src/app/system-setup/general-setup/services/users/user-company.service.ts","./src/app/system-setup/general-setup/services/users/user-groups.service.ts","./src/app/system-setup/general-setup/services/users/user-policies.service.ts","./src/app/system-setup/general-setup/services/users/users.service.ts","./src/app/system-setup/hr-setup/components/bank/add-bank/add-bank.component.ts","./src/app/system-setup/hr-setup/components/bank/add-bank/add-bank.component.html","./src/app/system-setup/hr-setup/components/bank/bank-branch/bank-branch.component.ts","./src/app/system-setup/hr-setup/components/bank/bank-branch/bank-branch.component.html","./src/app/system-setup/hr-setup/components/contact-category/contact-category.component.ts","./src/app/system-setup/hr-setup/components/contact-category/contact-category.component.html","./src/app/system-setup/hr-setup/components/contact-type/contact-type.component.ts","./src/app/system-setup/hr-setup/components/contact-type/contact-type.component.html","./src/app/system-setup/hr-setup/components/contract-type/contract-type.component.ts","./src/app/system-setup/hr-setup/components/contract-type/contract-type.component.html","./src/app/system-setup/hr-setup/components/country/country.component.ts","./src/app/system-setup/hr-setup/components/country/country.component.html","./src/app/system-setup/hr-setup/components/documents/hire-documents/hire-documents.component.ts","./src/app/system-setup/hr-setup/components/documents/hire-documents/hire-documents.component.html","./src/app/system-setup/hr-setup/components/governorate/governorate.component.ts","./src/app/system-setup/hr-setup/components/governorate/governorate.component.html","./src/app/system-setup/hr-setup/components/identity-type/identity-type.component.ts","./src/app/system-setup/hr-setup/components/identity-type/identity-type.component.html","./src/app/system-setup/hr-setup/components/institution/institution.component.ts","./src/app/system-setup/hr-setup/components/institution/institution.component.html","./src/app/system-setup/hr-setup/components/insurance-office/insurance-office.component.ts","./src/app/system-setup/hr-setup/components/insurance-office/insurance-office.component.html","./src/app/system-setup/hr-setup/components/kpi/kpi.component.ts","./src/app/system-setup/hr-setup/components/kpi/kpi.component.html","./src/app/system-setup/hr-setup/components/nationality/nationality.component.ts","./src/app/system-setup/hr-setup/components/nationality/nationality.component.html","./src/app/system-setup/hr-setup/components/religion/religion.component.ts","./src/app/system-setup/hr-setup/components/religion/religion.component.html","./src/app/system-setup/hr-setup/mapper/contac-category.ts","./src/app/system-setup/hr-setup/mapper/governorate.ts","./src/app/system-setup/hr-setup/mapper/hire-document.ts","./src/app/system-setup/hr-setup/services/bank/bank-branch.service.ts","./src/app/system-setup/hr-setup/services/bank/bank.service.ts","./src/app/system-setup/hr-setup/services/blood-type.service.ts","./src/app/system-setup/hr-setup/services/contact-category.service.ts","./src/app/system-setup/hr-setup/services/contact-type.service.ts","./src/app/system-setup/hr-setup/services/contract-type.service.ts","./src/app/system-setup/hr-setup/services/country.service.ts","./src/app/system-setup/hr-setup/services/education-degree.service.ts","./src/app/system-setup/hr-setup/services/education-grade.service.ts","./src/app/system-setup/hr-setup/services/emp-job-status.service.ts","./src/app/system-setup/hr-setup/services/gender.service.ts","./src/app/system-setup/hr-setup/services/governorate.service.ts","./src/app/system-setup/hr-setup/services/hire-documents/hire-documents.service.ts","./src/app/system-setup/hr-setup/services/identity-type.service.ts","./src/app/system-setup/hr-setup/services/institution.service.ts","./src/app/system-setup/hr-setup/services/insurance-office.service.ts","./src/app/system-setup/hr-setup/services/kpi.service.ts","./src/app/system-setup/hr-setup/services/marital-status.service.ts","./src/app/system-setup/hr-setup/services/military.service.ts","./src/app/system-setup/hr-setup/services/nationality.service.ts","./src/app/system-setup/hr-setup/services/religion.service.ts","./src/app/system-setup/localization-setup/components/localization-penalties/loc-penalties.component.ts","./src/app/system-setup/localization-setup/components/localization-penalties/loc-penalties.component.html","./src/app/system-setup/localization-setup/components/localization-version/localization-add-version/loc-add-version.component.ts","./src/app/system-setup/localization-setup/components/localization-version/localization-add-version/loc-add-version.component.html","./src/app/system-setup/localization-setup/components/localization-violation-types/loc-violation-types.component.ts","./src/app/system-setup/localization-setup/components/localization-violation-types/loc-violation-types.component.html","./src/app/system-setup/localization-setup/components/localization-violations/localization-add-violation/loc-add-violation.component.ts","./src/app/system-setup/localization-setup/components/localization-violations/localization-add-violation/loc-add-violation.component.html","./src/app/system-setup/localization-setup/localization-core/localization-core.component.ts","./src/app/system-setup/localization-setup/localization-core/localization-core.component.html","./src/app/system-setup/localization-setup/mapper/localization-violations.ts","./src/app/system-setup/localization-setup/services/localization-penalties.service.ts","./src/app/system-setup/localization-setup/services/localization-version.service.ts","./src/app/system-setup/localization-setup/services/localization-violation-types.service.ts","./src/app/system-setup/localization-setup/services/localization-violations.service.ts","./src/app/system-setup/org-management-setup/components/custodies/custodies.component.ts","./src/app/system-setup/org-management-setup/components/custodies/custodies.component.html","./src/app/system-setup/org-management-setup/components/job-families/job-families.component.ts","./src/app/system-setup/org-management-setup/components/job-families/job-families.component.html","./src/app/system-setup/org-management-setup/components/organization-types/organization-types.component.ts","./src/app/system-setup/org-management-setup/components/organization-types/organization-types.component.html","./src/app/system-setup/org-management-setup/services/competence-level.service.ts","./src/app/system-setup/org-management-setup/services/competence-type.service.ts","./src/app/system-setup/org-management-setup/services/custodies.service.ts","./src/app/system-setup/org-management-setup/services/grades.service.ts","./src/app/system-setup/org-management-setup/services/job-families.service.ts","./src/app/system-setup/org-management-setup/services/organization-types.service.ts","./src/app/system-setup/org-management-setup/services/organizations.service.ts","./src/app/system-setup/payroll-setup/components/loan types/loan-types/loan-types.component.ts","./src/app/system-setup/payroll-setup/components/loan types/loan-types/loan-types.component.html","./src/app/system-setup/payroll-setup/mapper/loan-type.ts","./src/app/system-setup/payroll-setup/services/element-group.service.ts","./src/app/system-setup/payroll-setup/services/loan-types.service.ts","./src/app/system-setup/s4-setup/components/s4-system-instance/add-s4-system-instance/add-s4-system-instance.component.ts","./src/app/system-setup/s4-setup/components/s4-system-instance/add-s4-system-instance/add-s4-system-instance.component.html","./src/app/system-setup/s4-setup/components/s4-system-instance/s4-system-instance-methods/s4-system-instance-methods.component.ts","./src/app/system-setup/s4-setup/components/s4-system-instance/s4-system-instance-methods/s4-system-instance-methods.component.html","./src/app/system-setup/s4-setup/components/s4-system-instance/s4-system-instance-purpose/s4-system-instance-purpose.component.ts","./src/app/system-setup/s4-setup/components/s4-system-instance/s4-system-instance-purpose/s4-system-instance-purpose.component.html","./src/app/system-setup/s4-setup/mapper/s4-system-instance.ts","./src/app/system-setup/s4-setup/services/gl-account.service.ts","./src/app/system-setup/s4-setup/services/s4-system-instance-methods.service.ts","./src/app/system-setup/s4-setup/services/s4-system-instance-purpose.service.ts","./src/app/system-setup/s4-setup/services/s4-sytem-instance.service.ts","./src/app/system-setup/sap-business-one-setup/components/system-instance/add-system-instance/add-system-instance.component.ts","./src/app/system-setup/sap-business-one-setup/components/system-instance/add-system-instance/add-system-instance.component.html","./src/app/system-setup/sap-business-one-setup/components/system-instance/system-instance-purpose/system-instance-purpose.component.ts","./src/app/system-setup/sap-business-one-setup/components/system-instance/system-instance-purpose/system-instance-purpose.component.html","./src/app/system-setup/sap-business-one-setup/mapper/sap-system-instance.ts","./src/app/system-setup/sap-business-one-setup/services/system-instance-purpose.service.ts","./src/app/system-setup/sap-business-one-setup/services/system-instance.service.ts","./src/app/system-setup/training-setup/components/course-category/course-category.component.ts","./src/app/system-setup/training-setup/components/course-category/course-category.component.html","./src/app/system-setup/training-setup/components/course-type/course-type.component.ts","./src/app/system-setup/training-setup/components/course-type/course-type.component.html","./src/app/system-setup/training-setup/components/expense/expense.component.ts","./src/app/system-setup/training-setup/components/expense/expense.component.html","./src/app/system-setup/training-setup/components/reasons/reasons.component.ts","./src/app/system-setup/training-setup/components/reasons/reasons.component.html","./src/app/system-setup/training-setup/services/course-category.service.ts","./src/app/system-setup/training-setup/services/course-type.service.ts","./src/app/system-setup/training-setup/services/expense.service.ts","./src/app/system-setup/training-setup/services/reasons.service.ts","./src/app/training/components/courses/add-course/add-course-form/add-course-form.component.ts","./src/app/training/components/courses/add-course/add-course-form/add-course-form.component.html","./src/app/training/components/courses/add-course/course-attachments/course-attachments.component.ts","./src/app/training/components/courses/add-course/course-attachments/course-attachments.component.html","./src/app/training/components/instructor/add-instructor/add-instructor.component.ts","./src/app/training/components/instructor/add-instructor/add-instructor.component.html","./src/app/training/components/training-plan/add-paln/plan-core/plan-core.component.ts","./src/app/training/components/training-plan/add-paln/plan-core/plan-core.component.html","./src/app/training/components/training-plan/add-paln/plan-courses-and-expensis/plan-courses-and-expensis.component.ts","./src/app/training/components/training-plan/add-paln/plan-courses-and-expensis/plan-courses-and-expensis.component.html","./src/app/training/components/training-plan/add-paln/plan-expenses/plan-expenses.component.ts","./src/app/training/components/training-plan/add-paln/plan-expenses/plan-expenses.component.html","./src/app/training/components/training-plan/add-paln/plan-general-data/plan-general-data.component.ts","./src/app/training/components/training-plan/add-paln/plan-general-data/plan-general-data.component.html","./src/app/training/components/training-plan/add-paln/training-needs-analysis/training-needs-analysis.component.ts","./src/app/training/components/training-plan/add-paln/training-needs-analysis/training-needs-analysis.component.html","./src/app/training/components/tsp/add-tsp/add-tsp.component.ts","./src/app/training/components/tsp/add-tsp/add-tsp.component.html","./src/app/training/mapper/course.ts","./src/app/training/mapper/training-plan.ts","./src/app/training/mapper/training-request.ts","./src/app/training/mapper/tsp.ts","./src/app/training/services/course/course-attachment.service.ts","./src/app/training/services/course/course-general.service.ts","./src/app/training/services/course/course.service.ts","./src/app/training/services/instructor.service.ts","./src/app/training/services/training-request.service.ts","./src/app/training/services/traning-plan/plan-courses.service.ts","./src/app/training/services/traning-plan/plan-expenses.service.ts","./src/app/training/services/traning-plan/training-needs-analysis.service.ts","./src/app/training/services/traning-plan/training-plan-index.service.ts","./src/app/training/services/tsp.service.ts","./src/environments/environment.ts","./src/main.ts","ignored|F:\\Front-End\\hr\\node_modules\\crypto-js|crypto"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { ContentLayoutComponent } from \"./layouts/content/content-layout.component\";\r\nimport { FullLayoutComponent } from \"./layouts/full/full-layout.component\";\r\n\r\nimport { pathMatch } from \"./shared/enums/route-path-match.enum\";\r\nimport { CONTENT_ROUTES } from \"./shared/routes/content-layout.routes\";\r\nimport { Full_ROUTES } from \"./shared/routes/full-layout.routes\";\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"home\",\r\n    pathMatch: pathMatch.full,\r\n  },\r\n\r\n  {\r\n    path: \"\",\r\n    component: FullLayoutComponent,\r\n    data: {title: \"full Views\"},\r\n    children: Full_ROUTES,\r\n  },\r\n  {\r\n    path: \"\",\r\n    component: ContentLayoutComponent,\r\n    data: {title: \"content Views\"},\r\n    children: CONTENT_ROUTES,\r\n  },\r\n  {\r\n    path: \"**\",\r\n    redirectTo: \"pages/error\",\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes, {\r\n      initialNavigation: \"enabledBlocking\",\r\n      //\tpreloadingStrategy: PreloadAllModules,\r\n      relativeLinkResolution: \"legacy\",\r\n      paramsInheritanceStrategy: \"always\",\r\n      scrollPositionRestoration: \"top\"\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, inject, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { NavigationEnd, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { AuthService } from \"./auth/services/auth.service\";\r\nimport { Storage } from \"./shared/resources/local-storage\";\r\nimport { LanguageService } from \"./shared/services/language.service\";\r\nimport { LoadingService } from \"app/shared/services/loading.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessageService } from \"primeng/api\";\r\n\r\n@Component({\r\n    selector: \"app-root\",\r\n    templateUrl: \"./app.component.html\",\r\n})\r\n// extends AppSettings\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n    subscription: Subscription;\r\n    loading: boolean = true;\r\n    isUserLoggedIn: boolean = false;\r\n    spinner = inject(NgxSpinnerService);\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private languageService: LanguageService,\r\n        private authService: AuthService,\r\n        private LoadingService: LoadingService,\r\n        private messageService: MessageService,\r\n    ) {\r\n        this.isUserLoggedIn = Storage.isUserLoggedIn;\r\n        //  if (!this.authService.isTokenExpired) this.authService.CompanyAndBusiness();\r\n        this.authService.isUserLogin$.subscribe((user) => {\r\n            this.isUserLoggedIn = user;\r\n\r\n            if (user) {\r\n                //  this.authService.CompanyAndBusiness();\r\n                // this.authService.BusinessList$.subscribe((val) => {\r\n                //   if (!Storage.getBusinessID)\r\n                //     authService.onSelectBusiness(val[0].businessId);\r\n                //   if (!Storage.getCompanyID)\r\n                //     authService.onSelectCompany(val[0].companies[0].id);\r\n                // });\r\n                // this.authService.BusinessID$.subscribe((val) => {\r\n                //   console.log(\"AppComponent BusinessID$\", val);\r\n                // });\r\n                // this.authService.CompanyID$.subscribe((val) => {\r\n                //   console.log(\"AppComponent CompanyID$\", val);\r\n                // });\r\n            }\r\n        });\r\n\r\n        // this.authService.BusinessID$.subscribe((val) => {\r\n        //   console.log(\"BusinessID$\", val);\r\n        // });\r\n        // this.authService.CompanyID$.subscribe((val) => {\r\n        //   console.log(\"CompanyID$\", val);\r\n        // });\r\n        let isLoadingDisplay: boolean;\r\n        this.LoadingService.$display.subscribe(show => {\r\n            if (show && !isLoadingDisplay) this.LoadingService.show();\r\n            else this.LoadingService.hide();\r\n\r\n            isLoadingDisplay = show;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.router.events\r\n            .pipe(filter((event) => event instanceof NavigationEnd))\r\n            .subscribe(() => window.scrollTo(0, 0));\r\n\r\n        let currentLang: string = this.languageService.currentLang;\r\n        this.languageService.changeLanguage(currentLang);\r\n\r\n        setTimeout(() => {\r\n            this.loading = false;\r\n        }, 3500);\r\n\r\n\r\n        // setTimeout(() => {\r\n        //     this.messageService.add({\r\n        //         key: \"delete\",\r\n        //         sticky: true,\r\n        //         severity: \"warn\",\r\n        //         summary: \"General.confirmDelete\",\r\n        //         detail: \"this.data\"\r\n        //     });\r\n        // }, 3000);\r\n    }\r\n\r\n\r\n    onConfirm() {\r\n        this.messageService.clear(\"delete\");\r\n    }\r\n\r\n    onReject() {\r\n        this.messageService.clear(\"delete\");\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","<!-- <app-navbar *ngIf=\"isUserLoggedIn\"></app-navbar> -->\r\n<router-outlet></router-outlet>\r\n<ngx-spinner></ngx-spinner>\r\n<!--<ngx-spinner [name]=\"'main'\"></ngx-spinner>-->\r\n\r\n<!--<p-toast styleClass=\"toast-delete\" position=\"bottom-center\" key=\"delete\" (onClose)=\"onReject()\"-->\r\n<!--         [baseZIndex]=\"9999999999\">-->\r\n<!--  <ng-template let-message pTemplate=\"message\">-->\r\n<!--    <div class=\"flex flex-column\" style=\"flex: 1\">-->\r\n<!--      <div class=\"text-center\">-->\r\n<!--        <i class=\"pi pi-exclamation-triangle mb-4 mt-2\" style=\"font-size: 3rem\"></i>-->\r\n<!--        <h4>{{ message.summary | translate }}</h4>-->\r\n<!--        <p> {{ 'confirmDeleteMsg' | translate }} <strong> {{ message.detail }}</strong></p>-->\r\n<!--      </div>-->\r\n<!--      <div class=\"row p-fluid\">-->\r\n<!--        <div class=\"col-6\">-->\r\n<!--          <button type=\"button\" (click)=\"onConfirm()\" class=\"btn btn-darkBlue btn-block\">-->\r\n<!--            {{ \"General.delete\" | translate }}-->\r\n<!--          </button>-->\r\n<!--        </div>-->\r\n\r\n<!--        <div class=\"col-6\">-->\r\n<!--          <button type=\"button\" (click)=\"onReject()\" class=\"btn btn-light btn-block\">-->\r\n<!--            {{ \"General.noThanks\" | translate }}-->\r\n<!--          </button>-->\r\n<!--        </div>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </ng-template>-->\r\n<!--</p-toast>-->\r\n","import { ErrorHandler, NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\n\r\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from \"@angular/common/http\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\r\nimport { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule, } from \"ngx-perfect-scrollbar\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { ContentLayoutComponent } from \"./layouts/content/content-layout.component\";\r\nimport { FullLayoutComponent } from \"./layouts/full/full-layout.component\";\r\nimport { SharedModule } from \"./shared/shared.module\";\r\n\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { JwtModule } from \"@auth0/angular-jwt\";\r\nimport { environment } from \"environments/environment\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { BreadcrumbModule } from \"xng-breadcrumb\";\r\nimport { ErrorInterceptor } from \"./auth/services/error-interceptor.service\";\r\nimport { TokenInterceptorService } from \"./auth/services/token-interceptor.service\";\r\nimport { ToasterPosition } from \"./shared/enums/tostPositions.enum\";\r\nimport { Storage } from \"./shared/resources/local-storage\";\r\nimport { WINDOW_PROVIDERS } from \"./shared/services/theme-options/window.service\";\r\nimport { MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { EncryptDecryptAuthInterceptor } from \"app/auth/services/encrypt-decrypt-interceptor\";\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: false,\r\n};\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, \"./assets/translate/\", \".json\");\r\n}\r\n\r\nexport function tokenGetter() {\r\n  return Storage.getToken;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, FullLayoutComponent, ContentLayoutComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    BreadcrumbModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoader,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n\r\n    ToastrModule.forRoot({\r\n      progressBar: false,\r\n      positionClass: ToasterPosition.bottomCenter,\r\n      enableHtml: true,\r\n      preventDuplicates: false,\r\n      //  autoDismiss: false,\r\n      // timeOut: 7000, // use with auto autoDismiss(true)\r\n      // timeOut: 0, // use with auto autoDismiss(true)\r\n      // extendedTimeOut: 0,\r\n      // closeButton: true,\r\n    }),\r\n\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: [environment.baseUrl],\r\n        // disallowedRoutes: [\"http://localhost:4200/auth/login\"],\r\n      },\r\n    }),\r\n\r\n    PerfectScrollbarModule,\r\n  ],\r\n  providers: [\r\n    MessageService,\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: MAT_DIALOG_DATA, useValue: {}\r\n    },\r\n    {\r\n      provide: MatDialogRef, useValue: {}\r\n    },\r\n    {provide: MAT_DATE_LOCALE, useValue: \"en-GB\"},\r\n\r\n    // Using for encrypt data\r\n    // {\r\n    //   provide: \"BASE_URL\",\r\n    //   useFactory: getBaseUrl\r\n    // },\r\n    // {\r\n    //   provide: HTTP_INTERCEPTORS,\r\n    //   useClass: EncryptDecryptAuthInterceptor,\r\n    //   multi: true\r\n    // },\r\n    WINDOW_PROVIDERS,\r\n    DatePipe,\r\n    // {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {float: \"always\"}},\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName(\"base\")[0].href;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\nimport { StringsManager } from \"app/shared/resources/strings-manager\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { loginRequest } from \"../models/login\";\r\nimport { IBusinessEntityModel } from \"app/org-management/model/business-entity\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService extends AppClientService {\r\n  isUserLogin$ = new BehaviorSubject<boolean>(Storage.isUserLoggedIn);\r\n  // BusinessID$ = new Subject<number>();\r\n  // CompanyID$ = new Subject<number>();\r\n  ContractID$ = new BehaviorSubject<number>(null);\r\n  BusinessList$ = new BehaviorSubject<IBusinessEntityModel[]>([]);\r\n  appStrings: StringsManager = new StringsManager();\r\n  http = inject(HttpClient);\r\n\r\n  constructor(private router: Router, private jwtHelper: JwtHelperService) {\r\n    super();\r\n  }\r\n\r\n  // START LOGIN\r\n  login(body: loginRequest) {\r\n    return this.post(\"Login/AuthorizationAndLogin/Login\", body, {}, false);\r\n  }\r\n\r\n  logout() {\r\n    Storage.customClearStorag(this.appStrings.CURRENT_LANG);\r\n    this.router.navigateByUrl(\"/auth/login\");\r\n    this.isUserLogin$.next(false);\r\n  }\r\n\r\n  // getUserFunctions() {\r\n  // \treturn this.get(`usermanagement/return-functions`);\r\n  // }\r\n\r\n  // getUserRowFunctions(view: string) {\r\n  // \treturn this.get(`usermanagement/return-children-functions-by-parentId/${view}`);\r\n  // }\r\n\r\n  get isTokenExpired() {\r\n    return this.jwtHelper.isTokenExpired(Storage.getToken);\r\n  }\r\n\r\n  get getUserId() {\r\n    // not used now => used from localstorage\r\n    return this.jwtHelper.decodeToken(Storage.getToken).UID;\r\n  }\r\n\r\n  get getUsername(): string {\r\n    return this.jwtHelper.decodeToken(Storage.getToken).name ?? \"\";\r\n  }\r\n\r\n  // CompanyAndBusiness() {\r\n  //   return this.get<IBusinessResponse>(\r\n  //     \"Login/AuthorizationAndLogin/GetUserUserCompanyAndBusiness\"\r\n  //   ).subscribe((res: IBusinessResponse) => {\r\n  //     if (!Storage.getBusinessID)\r\n  //       this.onSelectBusiness(res.data[0]?.businessId);\r\n  //     if (!Storage.getCompanyID)\r\n  //       this.onSelectCompany(res.data[0]?.companies[0].id);\r\n  //     this.BusinessList$.next(res.data);\r\n  //   });\r\n  // }\r\n\r\n  getCompanyAndBusiness() {\r\n    return this.get<IResponse<IBusinessEntityModel[]>>(\r\n      \"Login/AuthorizationAndLogin/GetUserUserCompanyAndBusiness\",\r\n      {},\r\n      false\r\n    );\r\n  }\r\n\r\n  // onSelectBusiness(value: number) {\r\n  // \tthis.BusinessID$.next(value);\r\n  // \tStorage.setBusinessID(value);\r\n  // }\r\n\r\n  // onSelectCompany(value: number) {\r\n  // \tthis.CompanyID$.next(value);\r\n  // \tStorage.setCompanyID(value);\r\n  // }\r\n} //end class\r\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LoadingService } from \"app/shared/services/loading.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { EMPTY, Observable, throwError } from \"rxjs\";\r\nimport { catchError, finalize, retry } from \"rxjs/operators\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  private totalRequests = 0;\r\n  spinnerName: string;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private spinner: LoadingService,\r\n    private toastr: MessagesService\r\n  ) {\r\n    // spinner.$spinnerName.subscribe(name => {\r\n    //   this.spinnerName = name;\r\n    // });\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.totalRequests++;\r\n    let stopRequests = false;\r\n    if (stopRequests) {\r\n      return EMPTY;\r\n    }\r\n    return next.handle(request).pipe(\r\n      retry(1),\r\n      catchError((err: HttpErrorResponse) => {\r\n        let error;\r\n        //  this.spinner.hide(this.spinnerName);\r\n        // this.toastr.error(error, \"Error\");\r\n\r\n        this.spinner.$display.next(false);\r\n        error = err.message || err.statusText;\r\n        console.log(\"Error\", error);\r\n\r\n        if ([401, 403].indexOf(err.status) !== -1) { // auto logout if 401 Unauthorized or 403 Forbidden\r\n          error = \"Unauthorized, please login\";\r\n          this.toastr.error(error);\r\n          this.authService.logout();\r\n          this.router.navigateByUrl(\"auth/login\");\r\n          // return throwError(\"Session has expired!\");\r\n          // return throwError(\"Session has expired!\");\r\n          return throwError(error);\r\n        }\r\n\r\n        else if (err.status === 404) {\t// not Found\r\n          return throwError(error);\r\n        }\r\n\r\n        if (err.status === 500 || err.status === 400) {\r\n          return throwError(error);\r\n        }\r\n\r\n        else {\r\n          error = err.message || err.statusText;\r\n          return throwError(error);\r\n        }\r\n      }),\r\n      finalize(() => {\r\n        this.totalRequests--;\r\n        if (this.totalRequests <= 0) {\r\n          this.spinner.hide(this.spinnerName);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const tokenReq = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${Storage.getToken}`,\r\n        \"Accept-language\": Storage.getLocalLang,\r\n        // \"Content-Type\": \"application/json\"\r\n      },\r\n    });\r\n\r\n    return next.handle(tokenReq);\r\n  }\r\n}\r\n","import { inject, Injectable } from \"@angular/core\";\r\nimport { IGUIModel, IRowActionsModel, ISubRowActionsModel, IUM_ModulesModel, IUM_ServicesModel, } from \"app/shared/interfaces/user-views\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BreadcrumbService } from \"xng-breadcrumb\";\r\nimport { ParamsService } from \"app/shared/services/params.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserViewsService extends AppClientService {\r\n  menuItems$ = new BehaviorSubject<IUM_ServicesModel[] | IUM_ModulesModel[]>([]);\r\n  UserModules$ = new BehaviorSubject<IUM_ModulesModel[]>(null);\r\n  UserModules: IUM_ModulesModel[];\r\n  // selectedModuleId$ = new BehaviorSubject<number>(Storage.getSelectedModule);\r\n  paramsService = inject(ParamsService);\r\n  moduleId: number;\r\n  parentModuleId: number;\r\n\r\n  constructor(private breadcrumbService: BreadcrumbService) {\r\n    super();\r\n    this.moduleId = this.paramsService.moduleId$.getValue();\r\n    this.parentModuleId = this.paramsService.parentModuleId$.getValue();\r\n\r\n    this.paramsService.moduleId$.subscribe((val) => {\r\n      this.moduleId = val;\r\n    });\r\n    this.paramsService.parentModuleId$.subscribe((val) => {\r\n      this.parentModuleId = val;\r\n    });\r\n  }\r\n\r\n  getUserModules() {\r\n    return this.get<IResponse<IUM_ModulesModel[]>>(\"Login/UserAuthorizatin/GetUserModules\");\r\n  }\r\n\r\n  getUserModulesMaped() {\r\n    this.menuItems$.next([]);\r\n    return this.getUserModules().pipe(\r\n      map((res: IResponse<IUM_ModulesModel[]>) => {\r\n        res.data.sort((a, b) => a.order_No - b.order_No);\r\n        res?.data.map((module: IUM_ModulesModel) => {\r\n          module.url = module.path;\r\n          module.displayName = msgTranslate(module.arbName, module.engName);\r\n          module.uM_Services.sort((a, b) => a.order_No - b.order_No);\r\n          delete module.path;\r\n          if (module.children) {\r\n            module.children.map((child: IUM_ModulesModel) => {\r\n              child.url = child.path;\r\n              child.parantId = module.id;\r\n              child.displayName = msgTranslate(child.arbName, child.engName);\r\n              delete child.path;\r\n              child.isExternalLink = false;\r\n              child.icon = child.imageClass;\r\n              child.uM_Services.sort((a, b) => a.order_No - b.order_No);\r\n              child.uM_Services.map((service: IUM_ServicesModel) => {\r\n                return this.serviceMap(child, service);\r\n              });\r\n              child.class = \"dropdown has-sub\";\r\n              child.submenu = child.uM_Services;\r\n            });\r\n          }\r\n          else {\r\n            module?.uM_Services.map((service: IUM_ServicesModel) => {\r\n              return this.serviceMap(module, service);\r\n            });\r\n          }\r\n          module.submenu = module.uM_Services;\r\n          module.icon = module.imageClass;\r\n          delete module.imageClass;\r\n          // mod.path = `${mod.path}/${mod.id}`;\r\n        });\r\n        this.UserModules = res.data;\r\n        this.UserModules$.next(res.data);\r\n\r\n        // console.log(\"modules\", this.modules);\r\n        //console.log(\"UserModules\", this.UserModules);\r\n\r\n        return res;\r\n      })\r\n    )\r\n      .subscribe();\r\n  }\r\n\r\n  serviceMap(module: IUM_ModulesModel, service: IUM_ServicesModel) {\r\n    let rowFunctions = {} as IRowActionsModel; // (first level row functions)\r\n    let basic: IGUIModel[] = []; // basic row functions  (first level)\r\n    let dropdown: IGUIModel[] = []; // dropdown row functions (first level)\r\n    let subRow: ISubRowActionsModel[] = []; // (second level row functions)\r\n    let globalFunctions: IGUIModel[] = []; // global functions (first level)\r\n    let views: IGUIModel[] = []; // view (first level) #index page only\r\n    let customViews: IGUIModel[] = []; // customViews is an GUI not (isGlobal or isView or isRow or have parentId) using for internal view like(tabs in \"add employee\")\r\n    let customViewChildren: IGUIModel[] = []; // is an GUI not (isGlobal or isView or isRow and have parentId) using for internal views Children like(sections in tabs content in \"add employee\")\r\n\r\n    // Start Set uM_GUI [globalFunctions, rowFunctions, views, subRowFunctions, isCustomView]\r\n    service?.uM_GUI?.map((GUI: IGUIModel) => {\r\n      GUI.icon = GUI.imageClass;\r\n      GUI.isCustomView = !GUI.isGlobal && !GUI.isRow && !GUI.isView ? true : false;\r\n      if (GUI?.path != null) {\r\n        GUI.path = `/${module.url}/${module.id}/${GUI?.path}`;\r\n      }\r\n      delete GUI.imageClass;\r\n\r\n      // push globals\r\n      if (GUI.isGlobal) {\r\n        globalFunctions.push(GUI);\r\n      }\r\n\r\n      // push views\r\n      if (GUI.isView) {\r\n        views.push(GUI);\r\n      }\r\n\r\n      // push Custom Views (using as view but not display in sidebar almost used for TABS)\r\n      if (GUI.isCustomView && !GUI.parantId) {\r\n        customViews.push(GUI);\r\n      }\r\n\r\n      if (GUI.isCustomView && GUI.parantId) {\r\n        customViewChildren.push(GUI);\r\n      }\r\n\r\n      // push row function (first level view)\r\n      if (GUI.isRow && GUI.parantId === null) {\r\n        if (!GUI.isDropdown) {\r\n          basic.push(GUI);\r\n        }\r\n        else {\r\n          dropdown.push(GUI);\r\n        }\r\n        rowFunctions.basic = basic;\r\n        rowFunctions.dropdown = dropdown;\r\n      }\r\n\r\n      // push sub row function (second level view)\r\n      if (GUI.isRow && GUI.parantId !== null) {\r\n        let subRowItem = {} as ISubRowActionsModel;\r\n        let subRowList = {} as IRowActionsModel;\r\n        let subRowBasic: IGUIModel[] = []; // Edit && Delete sub row functions\r\n        let subRowDropdown: IGUIModel[] = []; // dropdown sub row functions\r\n\r\n        let parentRowId = service.uM_GUI.findIndex((e) => e.id == GUI.parantId);\r\n\r\n        subRowItem.viewName = service.uM_GUI[parentRowId]?.viewName;\r\n        subRowItem.parantId = GUI.parantId;\r\n        if (!GUI.isDropdown) {\r\n          subRowBasic.push(GUI);\r\n        }\r\n        else {\r\n          subRowDropdown.push(GUI);\r\n        }\r\n\r\n        subRowList.basic = subRowBasic;\r\n        subRowList.dropdown = subRowDropdown;\r\n        subRowItem.row = subRowList;\r\n        subRow.push(subRowItem);\r\n      }\r\n\r\n      this.breadcrumbService?.set(GUI.name, {\r\n        label: GUI.name,\r\n        disable: true,\r\n      });\r\n    });\r\n\r\n    // Set service local data\r\n    service.displayName = msgTranslate(service.arbName, service.engName);\r\n    service.icon = service.imageClass;\r\n    delete service.imageClass;\r\n    service.class = \"dropdown nav-item\";\r\n    service.isExternalLink = false;\r\n    service.submenu = [];\r\n    service.rows = rowFunctions;\r\n    service.global = globalFunctions;\r\n    service.customViews = customViews;\r\n    service.customViewChildren = customViewChildren;\r\n    service.views = views;\r\n    service.subRow = subRow; //  this.groupByService.groupBy(subRow, 'viewName');\r\n    // delete service.uM_GUI;\r\n    //service.path = `${module.path}/${module.id}/${service?.views[0]?.path}`;\r\n\r\n    // first view is default\r\n    service.path = service?.views[0]?.path;\r\n    service.viewName = service?.views[0]?.viewName;\r\n    service.icon = service?.views[0]?.icon;\r\n\r\n    return service;\r\n  }\r\n\r\n  selectedModuleIndex(moduleId: number): number {\r\n    return this.UserModules?.findIndex((e: IUM_ModulesModel) => {\r\n      return e.id == moduleId;\r\n      // return e.children\r\n      //   ? e.children.find((child) => child.id == moduleId)\r\n      //   : e.id == moduleId;\r\n    });\r\n  }\r\n\r\n  getModuleServices(moduleId: number) {\r\n    this.menuItems$.next([]);\r\n    let i = this.selectedModuleIndex(moduleId);\r\n\r\n    if (i >= 0) {\r\n      this.menuItems$.next(\r\n        this.UserModules[i].children\r\n          ? // second level menu\r\n          this.UserModules[i].children\r\n          : // first level menu\r\n          this.UserModules[i].uM_Services\r\n      );\r\n    }\r\n  }\r\n\r\n  getRowFunctions(viewName: string): IRowActionsModel {\r\n    if (viewName != null && this.UserModules?.length > 0) {\r\n      // find selected module data\r\n      let modI = this.selectedModuleIndex(this.moduleId);\r\n      let pModI = this.selectedModuleIndex(this.parentModuleId);\r\n\r\n      let uM_Services: IUM_ServicesModel[] = null;\r\n      if (this.UserModules[pModI]?.children) {\r\n        let subI = this.UserModules[pModI].children.findIndex(\r\n          (child: IUM_ModulesModel) => child.id == this.moduleId\r\n        );\r\n\r\n        uM_Services = this.UserModules[pModI]?.children[subI]?.uM_Services;\r\n      }\r\n      else {\r\n        uM_Services = this.UserModules[modI]?.uM_Services;\r\n      }\r\n\r\n      // find selected module services (current view)\r\n      let serI = uM_Services?.findIndex((e) => e.viewName == viewName) ?? null;\r\n\r\n      // find current view global Functions\r\n      let row: IRowActionsModel;\r\n      if (serI != null) {\r\n        row = uM_Services[serI]?.rows ?? null;\r\n      }\r\n\r\n      return row;\r\n    }\r\n  }\r\n\r\n  getSubRowFunctions(parentView: string, viewName: string): IRowActionsModel {\r\n    // parentView means (Service viewName)\r\n    // viewName means (GUI viewName)\r\n    if (parentView != null && this.UserModules?.length > 0) {\r\n      // find selected module data\r\n      let modI = this.selectedModuleIndex(this.moduleId);\r\n      let pModI = this.selectedModuleIndex(this.parentModuleId);\r\n\r\n      let uM_Services: IUM_ServicesModel[] = null;\r\n      if (this.UserModules[pModI]?.children) {\r\n        let subI = this.UserModules[pModI].children.findIndex(\r\n          (child: IUM_ModulesModel) => child.id == this.moduleId\r\n        );\r\n        uM_Services = this.UserModules[pModI]?.children[subI]?.uM_Services;\r\n      }\r\n      else {\r\n        uM_Services = this.UserModules[modI]?.uM_Services;\r\n      }\r\n\r\n      // find selected module services (current view)\r\n      let serI = uM_Services?.findIndex((e) => e.viewName == parentView) ?? null;\r\n\r\n      let list: IRowActionsModel = {\r\n        basic: [],\r\n        dropdown: [],\r\n      };\r\n      if (serI != null) {\r\n        uM_Services[serI]?.subRow.forEach((e) => {\r\n          if (e.viewName === viewName) {\r\n            if (e.row.basic.length > 0) {\r\n              list.basic.push(e.row.basic[0]);\r\n            }\r\n            if (e.row.dropdown.length > 0) {\r\n              list.dropdown.push(e.row.dropdown[0]);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      return list;\r\n    }\r\n  }\r\n\r\n  getGlobalFunctions(viewName: string): IGUIModel[] {\r\n    if (viewName != null && this.UserModules?.length > 0) {\r\n      // find selected module data\r\n      let modI = this.selectedModuleIndex(this.moduleId);\r\n      let pModI = this.selectedModuleIndex(this.parentModuleId);\r\n\r\n      let uM_Services: IUM_ServicesModel[] = null;\r\n      if (this.UserModules[pModI]?.children) {\r\n        let subI = this.UserModules[pModI]?.children.findIndex(\r\n          (child: IUM_ModulesModel) => child.id == this.moduleId\r\n        );\r\n        uM_Services = this.UserModules[pModI]?.children[subI]?.uM_Services;\r\n      }\r\n      else {\r\n        uM_Services = this.UserModules[modI]?.uM_Services;\r\n      }\r\n\r\n      // find selected module services (current view)\r\n      let serI = uM_Services?.findIndex((e) => e.viewName == viewName) ?? null;\r\n\r\n      // find current view global Functions\r\n      let global: IGUIModel[];\r\n      if (serI != null) {\r\n        global = uM_Services[serI]?.global?.reverse() ?? null;\r\n      }\r\n\r\n      return global ?? [];\r\n    }\r\n  }\r\n\r\n  getCustomViews(viewName: string): IGUIModel[] {\r\n    if (viewName != null && this.UserModules?.length > 0) {\r\n      // find selected module data\r\n      let modI = this.selectedModuleIndex(this.moduleId);\r\n      let pModI = this.selectedModuleIndex(this.parentModuleId);\r\n\r\n      let uM_Services: IUM_ServicesModel[] = null;\r\n      if (this.UserModules[pModI]?.children) {\r\n        let subI = this.UserModules[pModI]?.children.findIndex(\r\n          (child: IUM_ModulesModel) => child.id == this.moduleId\r\n        );\r\n        uM_Services = this.UserModules[pModI]?.children[subI]?.uM_Services;\r\n      }\r\n      else {\r\n        uM_Services = this.UserModules[modI]?.uM_Services;\r\n      }\r\n\r\n      // find selected module services (current view)\r\n      let serI = uM_Services?.findIndex((e) => e.viewName == viewName) ?? null;\r\n\r\n      // find current view global Functions\r\n      let Views: IGUIModel[];\r\n      if (serI != null) {\r\n        Views = uM_Services[serI]?.customViews ?? null;\r\n      }\r\n      return Views ?? [];\r\n    }\r\n  }\r\n\r\n  getCustomViewChildren(parentView: string, viewName: string): IGUIModel[] {\r\n    if (this.UserModules?.length > 0) {\r\n      // find selected module data\r\n      let modI = this.selectedModuleIndex(this.moduleId);\r\n      let pModI = this.selectedModuleIndex(this.parentModuleId);\r\n\r\n      let uM_Services: IUM_ServicesModel[] = null;\r\n      if (this.UserModules[pModI]?.children) {\r\n        let subI = this.UserModules[pModI]?.children.findIndex(\r\n          (child: IUM_ModulesModel) => child.id == this.moduleId\r\n        );\r\n        uM_Services = this.UserModules[pModI]?.children[subI]?.uM_Services;\r\n      }\r\n      else {\r\n        uM_Services = this.UserModules[modI]?.uM_Services;\r\n      }\r\n\r\n      // find selected module services (current view)\r\n      let serI = uM_Services?.findIndex((e) => e.viewName == parentView) ?? null;\r\n      let parentId = uM_Services[serI]?.uM_GUI?.find((gui) => gui.viewName == viewName).id;\r\n\r\n      // find current view global Functions\r\n      let ViewChildren: IGUIModel[];\r\n      ViewChildren =\r\n        uM_Services[serI]?.customViewChildren.filter((gui) => gui.parantId === parentId) ?? [];\r\n      return ViewChildren;\r\n    }\r\n\r\n  }\r\n\r\n  isViewAllowed(viewNamm: string): boolean {\r\n    let isAllow = false;\r\n    this.UserModules?.forEach((module) => {\r\n      if (module.children?.length > 0) {\r\n        module.children?.forEach((child) => {\r\n          child.uM_Services?.forEach((service) => {\r\n            service?.uM_GUI?.forEach((GUI) => {\r\n              if (GUI.viewName === viewNamm) {\r\n                isAllow = true;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      }\r\n      else {\r\n        module.uM_Services?.forEach((service) => {\r\n          service?.uM_GUI?.forEach((GUI) => {\r\n            if (GUI.viewName === viewNamm) {\r\n              isAllow = true;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    return isAllow;\r\n  }\r\n\r\n\r\n  getViewPath(viewNamm: string): string {\r\n    let path: string;\r\n    this.UserModules?.forEach((module) => {\r\n      if (module.children?.length > 0) {\r\n        module.children?.forEach((child) => {\r\n          child.uM_Services?.forEach((service) => {\r\n            service?.uM_GUI?.forEach((GUI) => {\r\n              if (GUI.viewName === viewNamm) {\r\n                path = GUI.path;\r\n              }\r\n            });\r\n          });\r\n        });\r\n      }\r\n      else {\r\n        module.uM_Services?.forEach((service) => {\r\n          service?.uM_GUI?.forEach((GUI) => {\r\n            if (GUI.viewName === viewNamm) {\r\n              path = GUI.path;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    return path;\r\n  }\r\n\r\n\r\n  getServiceId(viewName: string): number {\r\n    if (viewName != null && this.UserModules?.length > 0) {\r\n      // find selected module data\r\n      let modI = this.selectedModuleIndex(this.moduleId);\r\n      let pModI = this.selectedModuleIndex(this.parentModuleId);\r\n\r\n      let servicesId: number;\r\n      if (this.UserModules[pModI]?.children) {\r\n        let subI = this.UserModules[pModI]?.children.findIndex(\r\n          (child: IUM_ModulesModel) => child.id == this.moduleId\r\n        );\r\n\r\n        servicesId = this.UserModules[pModI]?.children[subI]?.uM_Services.find(e => e.viewName === viewName)?.id;\r\n      }\r\n      else {\r\n        servicesId = this.UserModules[modI]?.uM_Services.find(e => e.viewName === viewName)?.id;\r\n      }\r\n      return servicesId;\r\n    }\r\n  }\r\n\r\n\r\n  getRowFunByViewname(viewName: string): IRowActionsModel {\r\n    let row: IRowActionsModel;\r\n    this.UserModules?.forEach((module) => {\r\n      if (module.children?.length > 0) {\r\n        module.children?.forEach((child) => {\r\n          let data = child.uM_Services.filter(e => e.viewName == viewName)[0]?.rows;\r\n          if (data) row = child.uM_Services.filter(e => e.viewName == viewName)[0]?.rows;\r\n        });\r\n      }\r\n      else {\r\n        let data = module.uM_Services.filter(e => e.viewName == viewName)[0]?.rows;\r\n        if (data) row = module.uM_Services.filter(e => e.viewName == viewName)[0]?.rows;\r\n      }\r\n    });\r\n    return row;\r\n  }\r\n}\r\n","import { DOCUMENT } from \"@angular/common\";\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { ConfigService } from \"app/shared/services/theme-options/config.service\";\r\nimport { CustomizerService } from \"app/shared/services/theme-options/customizer.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-content-layout\",\r\n  templateUrl: \"./content-layout.component.html\",\r\n  styleUrls: [\"./content-layout.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ContentLayoutComponent implements OnInit, OnDestroy {\r\n  public config: any = {};\r\n  layoutSub: Subscription;\r\n  @ViewChild(\"content-wrapper\") wrapper: ElementRef;\r\n  constructor(\r\n    private configService: ConfigService,\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef,\r\n    private customizerService: CustomizerService\r\n  ) {\r\n    this.config = this.configService.templateConf;\r\n    this.renderer.addClass(this.document.body, \"auth-page\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.layoutSub = this.configService.templateConf$.subscribe(\r\n      (templateConf) => {\r\n        if (templateConf) {\r\n          this.config = templateConf;\r\n        }\r\n        this.loadLayout();\r\n        this.cdr.markForCheck();\r\n      }\r\n    );\r\n  }\r\n\r\n  loadLayout() {\r\n    this.removeTransparentBGClasses();\r\n\r\n    if (this.config.layout.variant === \"Light\") {\r\n      this.renderer.removeClass(this.document.body, \"layout-dark\");\r\n      this.renderer.removeClass(this.document.body, \"layout-transparent\");\r\n    } else if (this.config.layout.variant === \"Dark\") {\r\n      this.renderer.removeClass(this.document.body, \"layout-transparent\");\r\n      this.renderer.addClass(this.document.body, \"layout-dark\");\r\n    } else if (this.config.layout.variant === \"Transparent\") {\r\n      this.renderer.addClass(this.document.body, \"layout-dark\");\r\n      this.renderer.addClass(this.document.body, \"layout-transparent\");\r\n      this.renderer.addClass(\r\n        this.document.body,\r\n        this.config.layout.sidebar.backgroundColor\r\n      );\r\n    }\r\n\r\n    this.renderer.removeClass(this.document.body, \"menu-expanded\");\r\n    this.renderer.removeClass(this.document.body, \"navbar-static\");\r\n    this.renderer.removeClass(this.document.body, \"menu-open\");\r\n    this.renderer.addClass(this.document.body, \"blank-page\");\r\n  }\r\n\r\n  removeTransparentBGClasses() {\r\n    this.customizerService.transparent_colors.forEach((_) => {\r\n      this.renderer.removeClass(this.document.body, _.class);\r\n    });\r\n\r\n    this.customizerService.transparent_colors_with_shade.forEach((_) => {\r\n      this.renderer.removeClass(this.document.body, _.class);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.renderer.removeClass(this.document.body, \"auth-page\");\r\n    if (this.layoutSub) {\r\n      this.layoutSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<!-- *NAVBAR* starts -->\r\n<!-- <app-navbar *ngIf=\"isUserLoggedIn\"></app-navbar> -->\r\n<!-- *NAVBAR* ends -->\r\n\r\n<div class=\"wrapper\">\r\n  <div class=\"main-panel\">\r\n    <!-- BEGIN : Main Content-->\r\n    <div class=\"main-content\">\r\n      <div class=\"content-overlay\"></div>\r\n      <div class=\"content-wrapper p-0\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Inject,\r\n  Renderer2,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  HostListener\r\n} from \"@angular/core\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { DeviceDetectorService } from 'ngx-device-detector';\r\nimport { WINDOW } from 'app/shared/services/theme-options/window.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ConfigService } from \"app/shared/services/theme-options/config.service\";\r\nimport { CustomizerService } from \"app/shared/services/theme-options/customizer.service\";\r\nimport { LayoutService } from \"app/shared/services/theme-options/layout.service\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\n\r\n@Component({\r\n  selector: \"app-full-layout\",\r\n  templateUrl: \"./full-layout.component.html\",\r\n  styleUrls: [\"./full-layout.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class FullLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  hideSidebar: boolean = true;\r\n  overlayContent = false;\r\n  configSub: Subscription;\r\n  layoutSub: Subscription;\r\n  bgImage: string;\r\n  bgColor: string;\r\n  isSmallScreen = false;\r\n  menuPosition = 'Side';\r\n  displayOverlayMenu = false; // Vertical Side menu for screenSize < 1200\r\n  public config: any = {};\r\n  public innerWidth: any;\r\n  isMenuCollapsedOnHover = false;\r\n  isNavbarSeachTextEmpty = true;\r\n  isScrollTopVisible = false;\r\n  resizeTimeout;\r\n  isUserLoggedIn: boolean = false;\r\n  perfectScrollbarEnable = true;\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private layoutService: LayoutService,\r\n    private router: Router,\r\n    private customizerService: CustomizerService,\r\n    @Inject(DOCUMENT) private document: Document,\r\n    @Inject(WINDOW) private window: Window,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef,\r\n    private deviceService: DeviceDetectorService\r\n  ) {\r\n    this.isUserLoggedIn = Storage.isUserLoggedIn;\r\n    this.config = this.configService.templateConf;\r\n    this.innerWidth = window.innerWidth;\r\n\r\n    // On toggle sidebar menu\r\n    this.layoutSub = layoutService.toggleSidebar$.subscribe(\r\n      isShow => {\r\n        this.hideSidebar = !isShow;\r\n        if (this.hideSidebar) {\r\n          this.overlayContent = false;\r\n        } else {\r\n          this.overlayContent = true;\r\n        }\r\n        this.toggleSidebar();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.configSub = this.configService.templateConf$.subscribe((templateConf) => {\r\n      if (templateConf) {\r\n        this.config = templateConf;\r\n      }\r\n      //load layout\r\n      this.loadLayout();\r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n    //hide overlay class on router change\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((routeChange) => {\r\n      if (this.config.layout.menuPosition === \"Side\" || this.displayOverlayMenu) { // Vertical Menu\r\n        if (this.innerWidth < 1200) {\r\n          this.layoutService.toggleSidebarSmallScreen(false);\r\n          this.overlayContent = false;\r\n          this.renderer.removeClass(this.document.body, \"overflow-hidden\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setMenuLayout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //Unsubcribe subscriptions\r\n    if (this.configSub) {\r\n      this.configSub.unsubscribe();\r\n    }\r\n    if (this.layoutSub) {\r\n      this.layoutSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  //adjust layout\r\n  setMenuLayout() {\r\n    this.overlayContent = false;\r\n    this.renderer.removeClass(this.document.body, \"blank-page\");\r\n    if (this.config.layout.menuPosition === \"Top\") { // Horizontal Menu\r\n      if (this.innerWidth < 1200) { // Screen size < 1200\r\n        this.displayOverlayMenu = true;\r\n        this.hideSidebar = true;\r\n        this.renderer.removeClass(this.document.body, \"horizontal-menu\");\r\n        this.renderer.removeClass(this.document.body, \"menu-open\");\r\n\r\n        this.renderer.addClass(this.document.body, \"horizontal-layout\");\r\n        this.renderer.addClass(this.document.body, \"horizontal-menu-padding\");\r\n        this.renderer.addClass(this.document.body, \"vertical-layout\");\r\n        this.renderer.addClass(this.document.body, \"vertical-overlay-menu\");\r\n        this.renderer.addClass(this.document.body, \"fixed-navbar\");\r\n        this.renderer.addClass(this.document.body, \"menu-hide\");\r\n      }\r\n      else { // Screen size > 1200\r\n        this.displayOverlayMenu = false;\r\n        this.hideSidebar = false;\r\n        this.renderer.setAttribute(this.document.body, \"data-menu\", \"horizontal-menu\");\r\n        this.renderer.removeClass(this.document.body, \"vertical-layout\");\r\n        this.renderer.removeClass(this.document.body, \"vertical-overlay-menu\");\r\n        this.renderer.removeClass(this.document.body, \"fixed-navbar\");\r\n        this.renderer.removeClass(this.document.body, \"menu-hide\");\r\n        this.renderer.removeClass(this.document.body, \"vertical-menu\");\r\n        this.renderer.addClass(this.document.body, \"horizontal-menu\");\r\n        this.renderer.addClass(this.document.body, \"horizontal-layout\");\r\n        this.renderer.addClass(this.document.body, \"horizontal-menu-padding\");\r\n      }\r\n    }\r\n    else if (this.config.layout.menuPosition === \"Side\") { // Vertical Menu\r\n      if (this.innerWidth < 1200) { // If Screen size < 1200\r\n        this.displayOverlayMenu = true;\r\n        this.renderer.removeClass(this.document.body, \"horizontal-layout\");\r\n        this.renderer.removeClass(this.document.body, \"horizontal-menu\");\r\n        this.renderer.removeClass(this.document.body, \"horizontal-menu-padding\");\r\n        this.renderer.removeClass(this.document.body, \"menu-expanded\");\r\n        this.renderer.removeClass(this.document.body, \"vertical-menu\");\r\n        this.renderer.removeClass(this.document.body, \"menu-open\");\r\n        this.renderer.removeClass(this.document.body, \"nav-collapsed\");\r\n\r\n        this.renderer.addClass(this.document.body, \"vertical-layout\");\r\n        this.renderer.addClass(this.document.body, \"menu-hide\");\r\n\r\n      }\r\n      else { // If Screen size > 1200\r\n        this.displayOverlayMenu = false;\r\n\r\n        this.renderer.removeClass(this.document.body, \"horizontal-layout\");\r\n        this.renderer.removeClass(this.document.body, \"horizontal-menu\");\r\n        this.renderer.removeClass(this.document.body, \"horizontal-menu-padding\");\r\n\r\n        this.renderer.setAttribute(this.document.body, \"data-menu\", \"vertical-menu\");\r\n        this.renderer.addClass(this.document.body, \"vertical-layout\");\r\n        if (!this.config.layout.sidebar.collapsed) {\r\n          this.renderer.addClass(this.document.body, \"menu-expanded\");\r\n          this.renderer.addClass(this.document.body, \"menu-open\");\r\n        }\r\n        this.renderer.addClass(this.document.body, \"vertical-menu\");\r\n        this.renderer.removeClass(this.document.body, \"menu-hide\");\r\n        this.renderer.removeClass(this.document.body, \"vertical-overlay-menu\");\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  loadLayout() {\r\n\r\n    //menu position \"SIDE\" or \"TOP\"\r\n    if (this.config.layout.menuPosition && this.config.layout.menuPosition.toString().trim() != \"\") {\r\n      this.menuPosition = this.config.layout.menuPosition;\r\n    }\r\n\r\n    //Hide/show sidebar menu background image\r\n    if (!this.config.layout.sidebar.backgroundImage) {\r\n      this.bgImage = \"\";\r\n    } else {\r\n      this.bgImage = this.config.layout.sidebar.backgroundImageURL;\r\n    }\r\n\r\n    //Set sidebar menu background color\r\n    if (!this.config.layout.sidebar.backgroundColor) {\r\n      this.bgColor = this.customizerService.light_dark_colors[7].code;\r\n    } else {\r\n      this.bgColor = this.config.layout.sidebar.backgroundColor;\r\n    }\r\n\r\n    //toggle side menu\r\n    if (this.config.layout.menuPosition === \"Side\") {\r\n      if (this.config.layout.sidebar.collapsed) {\r\n        this.isMenuCollapsedOnHover = true;\r\n      }\r\n      else {\r\n        this.isMenuCollapsedOnHover = true;\r\n      }\r\n      this.toggleSidebar();\r\n    }\r\n\r\n    this.removeTransparentBGClasses();\r\n\r\n    // Layout variants\r\n    if (this.config.layout.variant === \"Light\") {\r\n      this.renderer.removeClass(this.document.body, \"layout-dark\");\r\n      this.renderer.removeClass(this.document.body, \"layout-transparent\");\r\n    }\r\n    else if (this.config.layout.variant === \"Dark\") {\r\n      this.renderer.removeClass(this.document.body, \"layout-transparent\");\r\n      this.renderer.addClass(this.document.body, \"layout-dark\");\r\n    }\r\n    else if (this.config.layout.variant === \"Transparent\") {\r\n      this.renderer.addClass(this.document.body, \"layout-dark\");\r\n      this.renderer.addClass(this.document.body, \"layout-transparent\");\r\n      this.renderer.addClass(this.document.body, this.bgColor);\r\n      this.bgImage = \"\";\r\n    }\r\n\r\n    this.setMenuLayout();\r\n\r\n    // For Sidebar width\r\n    if (this.config.layout.sidebar.size === 'sidebar-sm') {\r\n      this.renderer.removeClass(this.document.body, \"sidebar-lg\");\r\n      this.renderer.addClass(this.document.body, \"sidebar-sm\");\r\n    }\r\n    else if (this.config.layout.sidebar.size === 'sidebar-lg') {\r\n      this.renderer.removeClass(this.document.body, \"sidebar-sm\");\r\n      this.renderer.addClass(this.document.body, \"sidebar-lg\");\r\n    }\r\n    else {\r\n      this.renderer.removeClass(this.document.body, \"sidebar-sm\");\r\n      this.renderer.removeClass(this.document.body, \"sidebar-lg\");\r\n    }\r\n\r\n    if (this.config.layout.menuPosition === \"Side\") {\r\n      // vertical/Side menu expanded/collapse\r\n      if (this.config.layout.sidebar.collapsed && !this.isSmallScreen) { // collapse side menu\r\n        this.renderer.removeClass(this.document.body, \"menu-expanded\");\r\n        this.renderer.addClass(this.document.body, \"nav-collapsed\");\r\n      }\r\n      else { // expand side menu\r\n        this.renderer.removeClass(this.document.body, \"nav-collapsed\");\r\n        this.renderer.addClass(this.document.body, \"menu-expanded\");\r\n      }\r\n    }\r\n\r\n    //Navbar types\r\n    if (this.config.layout.navbar.type === 'Static') {\r\n      this.renderer.removeClass(this.document.body, \"navbar-sticky\");\r\n      this.renderer.addClass(this.document.body, \"navbar-static\");\r\n    }\r\n    else if (this.config.layout.navbar.type === 'Fixed') {\r\n      this.renderer.removeClass(this.document.body, \"navbar-static\");\r\n      this.renderer.addClass(this.document.body, \"navbar-sticky\");\r\n    }\r\n\r\n  }\r\n\r\n  toggleSidebar() {\r\n    if (this.hideSidebar) { // on sidebar collapse\r\n      this.renderer.removeClass(this.document.body, \"menu-expanded\");\r\n      this.renderer.removeClass(this.document.body, \"vertical-menu\");\r\n      this.renderer.removeClass(this.document.body, \"menu-open\");\r\n\r\n      this.renderer.addClass(this.document.body, \"vertical-layout\");\r\n      this.renderer.addClass(this.document.body, \"menu-hide\");\r\n\r\n      if (this.config.layout.menuPosition === \"Top\") {\r\n        this.renderer.addClass(this.document.body, \"vertical-overlay-menu\");\r\n      }\r\n    }\r\n    else { // on sidebar expand\r\n      this.renderer.addClass(this.document.body, \"vertical-layout\");\r\n      this.renderer.addClass(this.document.body, \"menu-expanded\");\r\n      this.renderer.addClass(this.document.body, \"vertical-menu\");\r\n      if (this.config.layout.sidebar.collapsed) {\r\n        this.renderer.removeClass(this.document.body, \"menu-open\");\r\n      }\r\n      else {\r\n        this.renderer.addClass(this.document.body, \"menu-open\");\r\n      }\r\n      this.renderer.removeClass(this.document.body, \"menu-hide\");\r\n    }\r\n    this.isTouchDevice();\r\n  }\r\n\r\n  isTouchDevice() {\r\n\r\n    const isMobile = this.deviceService.isMobile();\r\n    const isTablet = this.deviceService.isTablet();\r\n\r\n    if (isMobile || isTablet) {\r\n      this.perfectScrollbarEnable = false;\r\n      if (!this.hideSidebar) {\r\n         this.renderer.addClass(this.document.body, \"overflow-hidden\");\r\n      } else {\r\n        this.perfectScrollbarEnable = true;\r\n        this.renderer.removeClass(this.document.body, \"overflow-hidden\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  hideCompactMenuOnSmallScreen() {\r\n    if (this.innerWidth < 1200) {\r\n      let conf = this.config;\r\n      conf.layout.sidebar.collapsed = false;\r\n      this.configService.applyTemplateConfigChange({ layout: conf.layout });\r\n    }\r\n  }\r\n\r\n  //Remove transparent layout classes\r\n  removeTransparentBGClasses() {\r\n    this.customizerService.transparent_colors.forEach(_ => {\r\n      this.renderer.removeClass(this.document.body, _.class);\r\n    });\r\n\r\n    this.customizerService.transparent_colors_with_shade.forEach(_ => {\r\n      this.renderer.removeClass(this.document.body, _.class);\r\n    });\r\n  }\r\n\r\n  sidebarMouseenter(e) {\r\n    if (this.config.layout.sidebar.collapsed) {\r\n      this.isMenuCollapsedOnHover = false;\r\n      this.layoutService.overlaySidebartoggle(this.isMenuCollapsedOnHover);\r\n    }\r\n  }\r\n\r\n  sidebarMouseleave(e) {\r\n    if (this.config.layout.sidebar.collapsed) {\r\n      this.isMenuCollapsedOnHover = true;\r\n      this.layoutService.overlaySidebartoggle(this.isMenuCollapsedOnHover);\r\n    }\r\n  }\r\n\r\n  //scroll to top on click\r\n  scrollToTop() {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  }\r\n\r\n  onOutsideClick(e) {\r\n    if (this.innerWidth < 1200) {\r\n      if (\r\n        !e.target.classList.contains(\"toggleSidebarNavbarButton\")\r\n      ) {\r\n        this.layoutService.toggleSidebarSmallScreen(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  onWrapperClick() {\r\n    this.isNavbarSeachTextEmpty = true;\r\n  }\r\n\r\n  checkNavbarSeachTextEmpty($event) {\r\n    this.isNavbarSeachTextEmpty = $event;\r\n  }\r\n\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    if (this.resizeTimeout) {\r\n      clearTimeout(this.resizeTimeout);\r\n    }\r\n    this.resizeTimeout = setTimeout((() => {\r\n      this.innerWidth = event.target.innerWidth;\r\n      this.setMenuLayout();\r\n      this.hideCompactMenuOnSmallScreen();\r\n    }).bind(this), 500);\r\n  }\r\n\r\n\r\n  //Add/remove classes on page scroll\r\n  @HostListener(\"window:scroll\", [])\r\n  onWindowScroll() {\r\n    let number = this.window.pageYOffset || this.document.documentElement.scrollTop || this.document.body.scrollTop || 0;\r\n    if (number > 60) {\r\n      this.renderer.addClass(this.document.body, \"navbar-scrolled\");\r\n    } else {\r\n      this.renderer.removeClass(this.document.body, \"navbar-scrolled\");\r\n    }\r\n\r\n    if (number > 400) {\r\n      this.isScrollTopVisible = true;\r\n    } else {\r\n      this.isScrollTopVisible = false;\r\n    }\r\n\r\n    if (number > 20) {\r\n      this.renderer.addClass(this.document.body, \"page-scrolled\");\r\n    } else {\r\n      this.renderer.removeClass(this.document.body, \"page-scrolled\");\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- *NAVBAR* starts -->\r\n<app-navbar (seachTextEmpty)=\"checkNavbarSeachTextEmpty($event)\"></app-navbar>\r\n<!-- *NAVBAR* ends -->\r\n\r\n<div\r\n\tclass=\"wrapper\"\r\n\t[ngClass]=\"{ 'show-overlay': !isNavbarSeachTextEmpty }\"\r\n\t(click)=\"onWrapperClick()\"\r\n\t(window:resize)=\"onResize($event)\"\r\n>\r\n\t<!-- *TOP* Menu starts -->\r\n\t<app-horizontal-menu\r\n\t\tappTopMenu\r\n\t\t*ngIf=\"menuPosition === 'Top' && !displayOverlayMenu\"\r\n\t></app-horizontal-menu>\r\n\t<!-- *TOP* Menu ends -->\r\n\r\n\t<!-- *SIDE* Menu starts -->\r\n\t<div\r\n\t\tappSidebar\r\n\t\t*ngIf=\"menuPosition === 'Side' || displayOverlayMenu\"\r\n\t\t[ngClass]=\"{\r\n\t\t\t'main-menu': menuPosition === 'Side' || displayOverlayMenu,\r\n\t\t\t'menu-fixed': menuPosition === 'Side' || displayOverlayMenu,\r\n\t\t\t'menu-native-scroll': !perfectScrollbarEnable\r\n\t\t}\"\r\n\t\tclass=\"app-sidebar\"\r\n\t\t(mouseenter)=\"sidebarMouseenter($event)\"\r\n\t\t(mouseleave)=\"sidebarMouseleave($event)\"\r\n\t\tdata-active-color=\"white\"\r\n\t\t[attr.data-background-color]=\"config?.layout.variant === 'Transparent' ? 'black' : bgColor\"\r\n\t\t[attr.data-image]=\"bgImage\"\r\n\t>\r\n\t\t<app-sidebar></app-sidebar>\r\n\t\t<div\r\n\t\t\tclass=\"sidebar-background\"\r\n\t\t\t[ngStyle]=\"{ 'background-image': 'url(' + bgImage + ')' }\"\r\n\t\t\t*ngIf=\"config?.layout.sidebar.backgroundImage\"\r\n\t\t></div>\r\n\t</div>\r\n\t<!-- *SIDE* Menu ends -->\r\n\r\n\t<div class=\"main-panel\">\r\n\t\t<div class=\"main-content\">\r\n\t\t\t<!-- START: breadcrumb -->\r\n\t\t\t<!-- <xng-breadcrumb>\r\n\t\t\t\t<ng-container *xngBreadcrumbItem=\"let breadcrumb; let info = info; let first = first\">\r\n\t\t\t\t\t<i *ngIf=\"info\" [class]=\"info\" class=\"mright-3 mleft-3\"></i>\r\n\t\t\t\t\t<ng-container>\r\n\t\t\t\t\t\t{{ breadcrumb | translate }}\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t</ng-container>\r\n\t\t\t</xng-breadcrumb> -->\r\n\t\t\t<div class=\"content-overlay\"></div>\r\n\t\t\t<div class=\"content-wrapper\">\r\n\t\t\t\t<router-outlet></router-outlet>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<!-- FOOTER -->\r\n\t\t<app-footer></app-footer>\r\n\t\t<!-- Scroll to top button -->\r\n\t\t<button\r\n\t\t\tclass=\"btn btn-darkBlue scroll-top\"\r\n\t\t\ttype=\"button\"\r\n\t\t\t*ngIf=\"isScrollTopVisible\"\r\n\t\t\t(click)=\"scrollToTop()\"\r\n\t\t>\r\n\t\t\t<i class=\"ft-arrow-up\"></i>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<!-- *NOTIFICATION-SIDEBAR* starts -->\r\n  <!--\t <app-notification-sidebar></app-notification-sidebar>-->\r\n\r\n<!--  <side-helping-menu title=\"Employee dashboard\" subTitle=\"employee reports & employee dashboard\">-->\r\n<!--    <div class=\"row\">-->\r\n<!--      <div class=\"col\">-->\r\n<!--        <button class=\"btn btn-darkBlue\"> reports</button>-->\r\n<!--      </div>-->\r\n<!--      <div class=\"col\">-->\r\n<!--        <button class=\"btn btn-outline-secondary\"> dashboard</button>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </side-helping-menu>-->\r\n\t<!-- *NOTIFICATION-SIDEBAR* ends -->\r\n\r\n\t<!-- *CUSTOMIZER* starts -- Uncomment below code if you want to use customizer in your project -->\r\n<!--\t <app-customizer></app-customizer>-->\r\n\t<!-- *CUSTOMIZER* ends -->\r\n\r\n\t<div\r\n\t\tclass=\"sidenav-overlay\"\r\n\t\t(click)=\"onOutsideClick($event)\"\r\n\t\t[ngClass]=\"{\r\n\t\t\t'd-none': displayOverlayMenu && hideSidebar && !overlayContent,\r\n\t\t\t'd-block': displayOverlayMenu && !hideSidebar && overlayContent && innerWidth < 1200\r\n\t\t}\"\r\n\t></div>\r\n\t<div class=\"drag-target\"></div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { IGradeModel } from \"app/system-setup/org-management-setup/models/grades\";\r\nimport { IJobFamilyModel } from \"app/system-setup/org-management-setup/models/job-families\";\r\nimport { IJobProfileRequest, IJobTitleModel, } from \"app/org-management/model/job-title\";\r\nimport { JobTitleService } from \"app/org-management/services/job-profile/job-title.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { GradesService } from \"app/system-setup/org-management-setup/services/grades.service\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\n\r\n@Component({\r\n  selector: \"app-add-job-profile\",\r\n  templateUrl: \"./add-job-profile.component.html\",\r\n  styleUrls: [\"./add-job-profile.component.scss\"],\r\n})\r\nexport class AddJobProfileComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  jobId: number = 0;\r\n\r\n  // jobFamilyList: IJobFamilyModel[] = [];\r\n  parentJobTitleList: IJobTitleModel[] = [];\r\n  gradeList: IGradeModel[] = [];\r\n  selectedGrade: IGradeModel;\r\n\r\n  constructor(\r\n    private jobTitleService: JobTitleService,\r\n    // private jobFamiliesService: JobFamiliesService,\r\n    private gradesService: GradesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddJobProfileComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.jobId = Number(params.get(\"jobId\")) ?? 0;\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      code: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      job_Family_ID: [null],\r\n      parentJobTitleID: [null],\r\n      grade_ID: [null],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      // this.getAllJobFamilies();\r\n      this.getAllParentJobTitles();\r\n      this.getAllgrades();\r\n      if (this.jobId > 0) this.getById();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getById() {\r\n    this.showLoading();\r\n    this.jobTitleService\r\n      .getById(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobTitleModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.jobProfileToEdit(res.data[0]);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  jobProfileToEdit(jobProfile: IJobTitleModel) {\r\n    this.form.patchValue(jobProfile);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IJobProfileRequest = {\r\n        job_title: {\r\n          ID: this.form.value.id,\r\n          ar_Name: this.form.value.ar_Name,\r\n          en_Name: this.form.value.en_Name,\r\n          code: this.form.value.code,\r\n          job_Family_ID: this.form.value.job_Family_ID,\r\n          parentJobTitleID: this.form.value.parentJobTitleID,\r\n          grade_ID: this.form.value.grade_ID,\r\n        },\r\n        extraData: {},\r\n      };\r\n\r\n      model.job_title.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IJobProfileRequest) {\r\n    this.showLoading();\r\n    this.jobTitleService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IJobTitleModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.jobId = res.data.id;\r\n          this.formCtrls.id.setValue(this.jobId);\r\n          let url = `/org-management/${this.moduleId}/job-profile/edit/${this.jobId}`;\r\n          if (!this.data.isDialog) this.navigateTo(url);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IJobProfileRequest) {\r\n    this.showLoading();\r\n    this.jobTitleService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IJobTitleModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  // job Family List\r\n  // getAllJobFamilies() {\r\n  //   this.showLoading();\r\n  //   this.jobFamiliesService\r\n  //     .getAll()\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponse<IJobFamilyModel[]>) => {\r\n  //       if ((res.message.messageType = MessageTypes.Success)) {\r\n  //         this.jobFamilyList = res.data;\r\n  //       }\r\n  //       else this.errorList(res?.message?.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  // parent Job Title List\r\n  getAllParentJobTitles() {\r\n    this.showLoading();\r\n    this.jobTitleService\r\n      .getAllParentJobTitles(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobTitleModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.parentJobTitleList = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  // grade List\r\n  getAllgrades() {\r\n    this.showLoading();\r\n    this.gradesService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IGradeModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.gradeList = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onChangeGrade(values: IGradeModel[]) {\r\n    this.selectedGrade = values ? values[0] : null;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"jobProfile\"\r\n          editTitle=\"editJobProfile\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n\r\n        <!-- add new btn -->\r\n        <app-add-new-btn\r\n          *ngIf=\"formCtrls.id.value > 0\"\r\n          url=\"/org-management/{{ moduleId }}/job-profile/add\"\r\n          [params]=\"parentParam\"\r\n        >\r\n        </app-add-new-btn>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          *ngIf=\"!data.isDialog\"\r\n          url=\"/org-management/{{ moduleId }}/job-profile/index\"\r\n          [params]=\"pageParams\"\r\n        >\r\n        </app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-tab-group class=\"col-12 w-100 view-tabs-group justify-content-start \"\r\n                     [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n        <mat-tab label=\"{{ 'jobProfile' | translate | titlecase }}\">\r\n          <mat-card-content class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <form [formGroup]=\"form\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <app-job-family-dropdown [control]=\"formCtrls.job_Family_ID\"\r\n                                               [submitted]=\"submitted\">\r\n                      </app-job-family-dropdown>\r\n                      <!--                      <app-prime-dropdown [control]=\"formCtrls.job_Family_ID\"-->\r\n                      <!--                                          label=\"jobFamily\"-->\r\n                      <!--                                          [submitted]=\"submitted\"-->\r\n                      <!--                                          [List]=\"jobFamilyList\"-->\r\n                      <!--                                          [filter]=\"true\">-->\r\n                      <!--                      </app-prime-dropdown>-->\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.code\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"code\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.en_Name\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"en_Name\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.ar_Name\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"ar_Name\">\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <app-prime-dropdown\r\n                        [control]=\"formCtrls.parentJobTitleID\"\r\n                        label=\"parentJobTitle\"\r\n                        [submitted]=\"submitted\"\r\n                        [List]=\"parentJobTitleList\"\r\n                        [filter]=\"true\">\r\n                      </app-prime-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <app-prime-dropdown\r\n                        [control]=\"formCtrls.grade_ID\"\r\n                        label=\"jobGrade\"\r\n                        [submitted]=\"submitted\"\r\n                        [List]=\"gradeList\"\r\n                        [filter]=\"true\"\r\n                        (change)=\"onChangeGrade($event)\">\r\n                      </app-prime-dropdown>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-4 col-12 mb-2\">\r\n                      <div class=\"badge bg-light-info font-size-14\">\r\n                        {{ \"middel_Salary\" | translate }}\r\n                        {{ selectedGrade?.middel_Salary }}\r\n                        <span *ngIf=\"selectedGrade && !selectedGrade.middel_Salary\">\r\n                        ---\r\n                      </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-12 mb-2\">\r\n                      <div class=\"badge bg-light-info font-size-14\">\r\n                        {{ \"miN_SALARY\" | translate }}\r\n                        {{ selectedGrade?.miN_SALARY }}\r\n                        <span *ngIf=\"selectedGrade && !selectedGrade.miN_SALARY\">\r\n                        ---\r\n                      </span>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-4 col-12 mb-2\">\r\n                      <div class=\"badge bg-light-info font-size-14\">\r\n                        {{ \"maX_SALARY\" | translate }}\r\n                        {{ selectedGrade?.maX_SALARY }}\r\n                        <span *ngIf=\"selectedGrade && !selectedGrade.maX_SALARY\">\r\n                        ---\r\n                      </span>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n\r\n          <mat-card-actions align=\"end\">\r\n            <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n            <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n          </mat-card-actions>\r\n        </mat-tab>\r\n\r\n        <ng-container *ngIf=\"!data.isDialog\">\r\n\r\n          <mat-tab label=\"{{ 'jobDescription' | translate | titlecase }}\">\r\n            <app-job-description [jobId]=\"jobId\"></app-job-description>\r\n          </mat-tab>\r\n\r\n          <mat-tab label=\"{{ 'careerPath' | translate | titlecase }}\">\r\n            <app-job-career-path [jobId]=\"jobId\"></app-job-career-path>\r\n          </mat-tab>\r\n\r\n          <mat-tab label=\"{{ 'competences' | translate | titlecase }}\">\r\n            <app-job-competences [jobId]=\"jobId\"></app-job-competences>\r\n          </mat-tab>\r\n\r\n          <mat-tab label=\"{{ 'kpi' | translate | uppercase }}\">\r\n            <app-job-kpi [jobId]=\"jobId\"></app-job-kpi>\r\n          </mat-tab>\r\n\r\n          <mat-tab label=\"{{ 'appraisalMethod' | translate | titlecase }}\">\r\n            <app-job-appraisal-method [jobId]=\"jobId\">\r\n            </app-job-appraisal-method>\r\n          </mat-tab>\r\n\r\n          <mat-tab label=\"{{ 'custodies' | translate | titlecase }}\">\r\n            <app-job-custodies [jobId]=\"jobId\"></app-job-custodies>\r\n          </mat-tab>\r\n\r\n          <mat-tab label=\"{{ 'trainingPath' | translate | titlecase }}\">\r\n            <app-job-training-path [jobId]=\"jobId\"></app-job-training-path>\r\n          </mat-tab>\r\n          <mat-tab label=\"{{ 'benefit' | translate | titlecase }}\">\r\n            <app-job-benefit [jobId]=\"jobId\"></app-job-benefit>\r\n          </mat-tab>\r\n\r\n        </ng-container>\r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { assignJobToOrgToMap } from \"app/org-management/mapper/job-title\";\r\nimport {\r\n  IAssignJobToOrgDeleteRequest,\r\n  IAssignJobToOrgModel,\r\n  IAssignJobToOrgRequest,\r\n  IJobTitleModel,\r\n} from \"app/org-management/model/job-title\";\r\nimport { AssignJobToOrgService } from \"app/org-management/services/job-profile/assign-job-to-org.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IOrganizationTypeModel } from \"app/system-setup/org-management-setup/models/organization-types\";\r\nimport { OrganizationTypesService } from \"app/system-setup/org-management-setup/services/organization-types.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-assign-job-to-org\",\r\n  templateUrl: \"./assign-job-to-org.component.html\",\r\n  styleUrls: [\"./assign-job-to-org.component.scss\"],\r\n})\r\nexport class AssignJobToOrgComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"jobTitle\",\r\n    \"manPowerCapacity\",\r\n    \"currentEmployeeNumber\",\r\n    \"remaining\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = true;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IAssignJobToOrgModel>;\r\n\r\n  notAssignedJobTitleList: IJobTitleModel[];\r\n\r\n  constructor(\r\n    private assignJobToOrgService: AssignJobToOrgService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AssignJobToOrgComponent>,\r\n    private organizationTypesService: OrganizationTypesService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      OrgTypeId: [null, [Validators.required]],\r\n      Org_ID: [null, [Validators.required]],\r\n      Job_Ids: [null, [Validators.required]],\r\n      Max_Employee: [null, [Validators.required, CustomValidators.digits, CustomValidators.gte(0)]],\r\n      IsInfinity: [null],\r\n    });\r\n\r\n    if(this.data.isDialog) {\r\n      this.getOrgTypeByOrgId(this.data.id);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getallJobsNotAssignedInOrg();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    let orgId = this.formCtrls.Org_ID.value;\r\n    if (orgId > 0) {\r\n      if (!this.data.isDialog) {\r\n        this.isLoaded = false;\r\n        this.assignJobToOrgService\r\n          .getAllByOrgId(orgId)\r\n          .pipe(this.cancelRequest())\r\n          .subscribe((res: IResponse<IAssignJobToOrgModel[]>) => {\r\n            if (res.message.messageType == MessageTypes.Success) {\r\n              res.data.map((item) => {\r\n                if (item.max_Employee == 0) {\r\n                  item.manPowerCapacity = this.translate(\"open\");\r\n                  item.remaining = this.translate(\"unlimited\");\r\n                }\r\n              });\r\n              this.dataSource = new MatTableDataSource(assignJobToOrgToMap(res.data));\r\n              this.isLoaded = true;\r\n            }\r\n            else this.errorList(res?.message?.messages);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IAssignJobToOrgRequest = {\r\n        Org_ID: this.form.value.Org_ID,\r\n        Job_Ids: this.form.value.Job_Ids,\r\n        Max_Employee: this.form.value.Max_Employee,\r\n        IsInfinity: this.form.value.IsInfinity ?? false,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n\tcreate(model: IAssignJobToOrgRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.assignJobToOrgService.create(model).subscribe((res: IResponse<IAssignJobToOrgModel>) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getAll();\r\n        if(this.data.isDialog) this.dialogRef.close();\r\n\t\t\t\t// update dropdown\r\n\t\t\t\telse this.getallJobsNotAssignedInOrg();\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n  onDelete(orgJob: IAssignJobToOrgModel): void {\r\n    let msg = this.msgTranslate(orgJob.jobTitle);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(orgJob);\r\n    });\r\n  }\r\n\r\n  delete(orgJob: IAssignJobToOrgModel) {\r\n    let params: IAssignJobToOrgDeleteRequest = {\r\n      Orgid: orgJob.org_ID,\r\n      JobId: orgJob.job_Title_ID,\r\n    };\r\n    this.showLoading();\r\n    this.assignJobToOrgService.Delete(params).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.getAll();\r\n        // update dropdown\r\n        this.getallJobsNotAssignedInOrg();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.formCtrls.Job_Ids.reset();\r\n    this.formCtrls.Max_Employee.reset();\r\n    this.formCtrls.IsInfinity.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  // jobs not assigned in selected org\r\n  getallJobsNotAssignedInOrg() {\r\n    this.notAssignedJobTitleList = [];\r\n    let orgId = this.formCtrls.Org_ID.value ?? 0;\r\n    // if (orgId > 0) {\r\n    this.assignJobToOrgService\r\n      .getAllJobTitleNotAssignedInOrgID(orgId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobTitleModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.notAssignedJobTitleList = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n    // }\r\n  }\r\n\r\n\tonCloseDialog() {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n  getOrgTypeByOrgId(orgId: number) {\r\n    this.showLoading();\r\n    this.organizationTypesService\r\n      .getByOrgId(orgId)\r\n      .subscribe((res: IResponse<IOrganizationTypeModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.formCtrls.OrgTypeId.setValue(res.data[0].id);\r\n          this.formCtrls.Org_ID.setValue(orgId);\r\n          this.hideLoading();\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"assignJobToOrg\"></page-title>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          *ngIf=\"!data.isDialog\"\r\n          url=\"/org-management/{{ moduleId }}/job-profile/index\"\r\n          [params]=\"pageParams\"\r\n        >\r\n        </app-back-btn>\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\" #dialogContainer>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-org-types-dropdown-current-structure\r\n                    [control]=\"formCtrls.OrgTypeId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-org-types-dropdown-current-structure>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-organization-by-org-type-dropdown\r\n                    [control]=\"formCtrls.Org_ID\"\r\n                    [orgTypeControl]=\"formCtrls.OrgTypeId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    (change)=\"getAll(); getallJobsNotAssignedInOrg()\"\r\n                  >\r\n                  </app-organization-by-org-type-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-prime-dropdown\r\n                    [control]=\"formCtrls.Job_Ids\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"notAssignedJobTitleList\"\r\n                    label=\"jobTitle\"\r\n                    [filter]=\"true\"\r\n                    [multi]=\"true\"\r\n                  >\r\n                  </app-prime-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12 \">\r\n                  <app-input\r\n                    [control]=\"formCtrls.Max_Employee\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"manPowerCapacity\"\r\n                    type=\"number\"\r\n                    [disabled]=\"formCtrls.IsInfinity.value\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12 ptop-15 pbottom-15\">\r\n                  <app-check-box [control]=\"formCtrls.IsInfinity\" label=\"open\">\r\n                  </app-check-box>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n      <ng-container *ngIf=\"!data.isDialog && formCtrls.Org_ID.value > 0\">\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [actions]=\"rowFunctions\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n          [showPaginator]=\"false\"\r\n          [showFilter]=\"false\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport {\r\n  IJobAppraisalMethodModel,\r\n  IJobAppraisalMethodRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { OrganizationsService } from \"app/system-setup/org-management-setup/services/organizations.service\";\r\nimport { IOrganizationModel } from \"app/system-setup/org-management-setup/models/organizations\";\r\nimport { JobAppraisalMethodService } from \"app/org-management/services/job-profile/job-appraisal-method.service\";\r\n\r\n@Component({\r\n  selector: \"app-job-appraisal-method\",\r\n  templateUrl: \"./job-appraisal-method.component.html\",\r\n  styleUrls: [\"./job-appraisal-method.component.scss\"],\r\n})\r\nexport class JobAppraisalMethodComponent extends AppHelpers implements OnInit {\r\n  @Input() jobId: number;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  organizationList: IOrganizationModel[] = [];\r\n\r\n  constructor(\r\n    private jobAppraisalMethodService: JobAppraisalMethodService,\r\n    private organizationsService: OrganizationsService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      managerPercentage: [\r\n        null,\r\n        [CustomValidators.gte(0), CustomValidators.lte(100)],\r\n      ],\r\n      internalColleaguePercentage: [\r\n        null,\r\n        [CustomValidators.gte(0), CustomValidators.lte(100)],\r\n      ],\r\n      externalColleaguePercentage: [\r\n        null,\r\n        [CustomValidators.gte(0), CustomValidators.lte(100)],\r\n      ],\r\n      relatedOrgJobTitle: [null],\r\n      subordinatePercentage: [\r\n        null,\r\n        [CustomValidators.gte(0), CustomValidators.lte(100)],\r\n      ],\r\n      mySelfPercentage: [\r\n        null,\r\n        [CustomValidators.gte(0), CustomValidators.lte(100)],\r\n      ],\r\n      customerPercentage: [\r\n        null,\r\n        [CustomValidators.gte(0), CustomValidators.lte(100)],\r\n      ],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAllOrganizations();\r\n      if (this.jobId > 0) this.getAll();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.showLoading();\r\n    this.jobAppraisalMethodService\r\n      .getAllByJobTitleId(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobAppraisalMethodModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.form.patchValue(res.data.job_Title);\r\n          this.formCtrls.relatedOrgJobTitle.setValue(\r\n            res.data.relatedOrgJobTitle\r\n          );\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IJobAppraisalMethodRequest = {\r\n        ExtraaJobttile: {\r\n          ID: this.jobId,\r\n          managerPercentage: this.form.value.managerPercentage,\r\n          internalColleaguePercentage:\r\n            this.form.value.internalColleaguePercentage,\r\n          externalColleaguePercentage:\r\n            this.form.value.externalColleaguePercentage,\r\n          subordinatePercentage: this.form.value.subordinatePercentage,\r\n          mySelfPercentage: this.form.value.mySelfPercentage,\r\n          customerPercentage: this.form.value.customerPercentage,\r\n        },\r\n      };\r\n      if (model.ExtraaJobttile.externalColleaguePercentage > 0)\r\n        model.RelatedOrgJobTitle = this.form.value.relatedOrgJobTitle;\r\n\r\n      // check if sum of percentages = 100\r\n      let sum = 0;\r\n      for (let key in model.ExtraaJobttile) {\r\n        if (key != \"ID\") sum += model.ExtraaJobttile[key] ?? 0;\r\n      }\r\n      if (sum == 100) this.create(model);\r\n      else this.warning(\"SummationOfPercentageError\");\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IJobAppraisalMethodRequest) {\r\n    this.showLoading();\r\n    this.jobAppraisalMethodService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IJobAppraisalMethodModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getAll();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  // organizations list\r\n  getAllOrganizations() {\r\n    this.showLoading();\r\n    this.organizationsService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IOrganizationModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.organizationList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.managerPercentage\"\r\n              label=\"manager%\"\r\n              [submitted]=\"submitted\"\r\n              type=\"number\"\r\n              [isDecimalNumber]=\"true\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.internalColleaguePercentage\"\r\n              label=\"internalDepartment%\"\r\n              [submitted]=\"submitted\"\r\n              type=\"number\"\r\n              [isDecimalNumber]=\"true\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.externalColleaguePercentage\"\r\n              label=\"externalDepartment%\"\r\n              [submitted]=\"submitted\"\r\n              type=\"number\"\r\n              [isDecimalNumber]=\"true\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div\r\n            class=\"col-12\"\r\n            *ngIf=\"formCtrls.externalColleaguePercentage.value > 0\"\r\n          >\r\n            <app-prime-dropdown\r\n              [control]=\"formCtrls.relatedOrgJobTitle\"\r\n              label=\"relatedOrganizations\"\r\n              [submitted]=\"submitted\"\r\n              [List]=\"organizationList\"\r\n              [filter]=\"true\"\r\n              [multi]=\"true\"\r\n            >\r\n            </app-prime-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.subordinatePercentage\"\r\n              label=\"subordinate%\"\r\n              [submitted]=\"submitted\"\r\n              type=\"number\"\r\n              [isDecimalNumber]=\"true\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.mySelfPercentage\"\r\n              label=\"mySelf%\"\r\n              [submitted]=\"submitted\"\r\n              type=\"number\"\r\n              [isDecimalNumber]=\"true\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.customerPercentage\"\r\n              label=\"customer%\"\r\n              [submitted]=\"submitted\"\r\n              type=\"number\"\r\n              [isDecimalNumber]=\"true\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <submit-btn (onClick)=\"submit()\" [disabled]=\"!jobId\"> </submit-btn>\r\n</mat-card-actions>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { JobBenefitService } from \"app/org-management/services/job-profile/job-benefit.service\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IJobBenefitModel, IJobBenefitRequest } from \"app/org-management/model/job-benefit\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IBenefitModel } from \"app/system-setup/bonus-setup/models/benefit\";\r\nimport { th } from \"date-fns/locale\";\r\nimport { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\n\r\n@Component({\r\n  selector: \"app-job-benefit\",\r\n  templateUrl: \"./job-benefit.component.html\",\r\n  styleUrls: [\"./job-benefit.component.scss\"]\r\n})\r\nexport class JobBenefitComponent extends AppHelpers implements OnInit {\r\n  @Input() jobId: number;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"benefit\", \"numMonth\", \"fromMoney\", \"toMoney\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IJobBenefitModel>;\r\n  showMoney: boolean = false;\r\n\r\n  constructor(private benefitService: JobBenefitService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      joB_Title_ID: [this.jobId, [Validators.required]],\r\n      benefit_ID: [null, [Validators.required]],\r\n      numMonth: [null, [Validators.required, Validators.min(0)]],\r\n      fromMoney: [null],\r\n      toMoney: [null],\r\n    });\r\n\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany() && this.jobId > 0) {\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n\r\n  getAll() {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.benefitService\r\n      .getAll(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobBenefitModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data.map(e => e.benefit = msgTranslate(e.bon_Benefit.ar_Name, e.bon_Benefit.en_Name));\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IJobBenefitRequest = {\r\n        joB_Title_ID: this.jobId,\r\n        Benefit_ID: this.formCtrls.benefit_ID.value,\r\n        NumMonth: this.formCtrls.numMonth.value,\r\n        FromMoney: this.formCtrls.fromMoney.value,\r\n        ToMoney: this.formCtrls.toMoney.value\r\n      };\r\n      this.create(model);\r\n    }\r\n    else this.error(\"General.formNotValid\");\r\n    console.log(this.form);\r\n  }\r\n\r\n  create(model: IJobBenefitRequest) {\r\n    this.showLoading();\r\n    this.benefitService.create(model).subscribe((res: IResponse<IJobBenefitModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.getAll();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(benefit: IJobBenefitModel): void {\r\n    this.deleteDialog(benefit.benefit).subscribe((confirm) => {\r\n      if (confirm) this.delete(benefit.joB_Title_ID, benefit.benefit_ID);\r\n    });\r\n  }\r\n\r\n  delete(JobId: number, jobBenefitId: number) {\r\n    this.showLoading();\r\n    this.benefitService.Delete(JobId, jobBenefitId).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.getAll();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({joB_Title_ID: this.jobId});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onChangeBenefit(benefits: IBenefitModel[]) {\r\n    this.showMoney = benefits[0]?.bon_Benefit_Type?.isRange;\r\n    if (this.showMoney) {\r\n      this.formCtrls.fromMoney.setValidators([Validators.required, Validators.min(0)]);\r\n      this.formCtrls.toMoney.setValidators([Validators.required, Validators.min(0)]);\r\n    }\r\n    else {\r\n      this.formCtrls.fromMoney.reset();\r\n      this.formCtrls.toMoney.reset();\r\n      this.formCtrls.fromMoney.removeValidators([Validators.required, Validators.min(0)]);\r\n      this.formCtrls.toMoney.removeValidators([Validators.required, Validators.min(0)]);\r\n    }\r\n    this.formCtrls.fromMoney.updateValueAndValidity();\r\n    this.formCtrls.toMoney.updateValueAndValidity();\r\n  }\r\n}\r\n","<mat-card-content class=\"container-fluid\" #container>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-benefit-dropdown [control]=\"formCtrls.benefit_ID\"\r\n                                  [submitted]=\"submitted\"\r\n                                  (change)=\"onChangeBenefit($event)\">\r\n            </app-benefit-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-input [control]=\"formCtrls.numMonth\"\r\n                       [submitted]=\"submitted\"\r\n                       label=\"numMonth\"\r\n                       type=\"number\">\r\n            </app-input>\r\n          </div>\r\n\r\n          <ng-container *ngIf=\"showMoney\">\r\n            <div class=\"col-md-3 col-12\">\r\n              <app-input [control]=\"formCtrls.fromMoney\"\r\n                         [submitted]=\"submitted\"\r\n                         label=\"fromMoney\"\r\n                         type=\"number\">\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <app-input [control]=\"formCtrls.toMoney\"\r\n                         [submitted]=\"submitted\"\r\n                         label=\"toMoney\"\r\n                         type=\"number\">\r\n              </app-input>\r\n            </div>\r\n          </ng-container>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <submit-btn (onClick)=\"submit()\" [disabled]=\"!jobId\"></submit-btn>\r\n</mat-card-actions>\r\n\r\n<app-material-table [isLoaded]=\"isLoaded\"\r\n                    *ngIf=\"jobId > 0\"\r\n                    [dataSource]=\"dataSource\"\r\n                    [mandatoryColomns]=\"mandatoryColomns\"\r\n                    [optionalColomns]=\"optionalColomns\"\r\n                    [actions]=\"rowFunctions\"\r\n                    (deleteRow)=\"onDelete($event)\"\r\n                    [showPaginator]=\"false\"\r\n                    [showFilter]=\"false\">\r\n</app-material-table>\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n\tIJobCareerPathRequest,\r\n\tIJobCareerPathModel,\r\n\tIJobTitleModel,\r\n\tIJobCareerPathDeleteRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { JobCareerPathService } from \"app/org-management/services/job-profile/job-career-path.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { jobCareerToMap } from \"app/org-management/mapper/job-title\";\r\n\r\n@Component({\r\n\tselector: \"app-job-career-path\",\r\n\ttemplateUrl: \"./job-career-path.component.html\",\r\n\tstyleUrls: [\"./job-career-path.component.scss\"],\r\n})\r\nexport class JobCareerPathComponent extends AppHelpers implements OnInit, OnChanges {\r\n\t@Input() jobId: number;\r\n\t@Input() showIndexOnly: boolean = false;\r\n\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\r\n\tmandatoryColomns: string[] = [\r\n\t\t\"Ser\",\r\n\t\t\"nextJobTitle\",\r\n\t\t\"yeaR_NO\",\r\n\t\t\"pmS_VALUE\",\r\n\t\t\"iS_MANDATORY\",\r\n\t\t\"actions\",\r\n\t];\r\n\toptionalColomns: string[] = [\"responsabilities\"];\r\n\r\n\tdataSource: MatTableDataSource<IJobCareerPathModel>;\r\n\tisLoaded: boolean = false;\r\n\tnextJobTitleList: IJobTitleModel[];\r\n\r\n\tconstructor(private jobCareerPathService: JobCareerPathService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tjoB_Title_NEXT_ID: [null, [Validators.required]],\r\n\t\t\tyeaR_NO: [null, [CustomValidators.digits, CustomValidators.gte(0)]],\r\n\t\t\tpmS_VALUE: [null, [CustomValidators.digits, CustomValidators.gte(0)]],\r\n\t\t\tiS_MANDATORY: [null],\r\n\t\t\tresponsabilities: [null],\r\n\t\t});\r\n\r\n    if(this.showIndexOnly) {\r\n      // remove \"ser\"\r\n      this.mandatoryColomns.shift();\r\n      // remove \"actions\"\r\n      this.mandatoryColomns.pop();\r\n      this.optionalColomns = [];\r\n    }\r\n\t}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.jobId?.currentValue > 0) this.getAll();\r\n  }\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.checkNoBusinessOrCompany()) {\r\n\t\t\tthis.getAllNextJobTitles();\r\n\t\t\tif (this.jobId > 0) this.getAll();\r\n\t\t}\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\tgetAll() {\r\n    this.dataSource = new MatTableDataSource(null)\r\n    this.isLoaded = false;\r\n\t\tthis.jobCareerPathService\r\n\t\t\t.getAllByJobTitleId(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IJobCareerPathModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(jobCareerToMap(res.data));\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\t// console.log(this.form.value);\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst model: IJobCareerPathRequest = {\r\n\t\t\t\tjoB_Title_ID: this.jobId,\r\n\t\t\t\tjoB_Title_NEXT_ID: this.form.value.joB_Title_NEXT_ID,\r\n\t\t\t\tyeaR_NO: this.form.value.yeaR_NO,\r\n\t\t\t\tpmS_VALUE: this.form.value.pmS_VALUE,\r\n\t\t\t\tiS_MANDATORY: this.form.value.iS_MANDATORY ?? false,\r\n\t\t\t\tresponsabilities: this.form.value.responsabilities,\r\n\t\t\t};\r\n\r\n\t\t\tthis.create(model);\r\n\t\t} // else this.toastr.error(\"General.formNotValid\");\r\n\t}\r\n\r\n\tcreate(model: IJobCareerPathRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.jobCareerPathService.create(model).subscribe((res: IResponse<IJobCareerPathModel>) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getAll();\r\n\t\t\t\t// update dropdown\r\n\t\t\t\tthis.getAllNextJobTitles();\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tonDelete(jobCareerPath: IJobCareerPathModel): void {\r\n\t\tlet msg = this.msgTranslate(jobCareerPath.nextJobTitle);\r\n\t\tthis.deleteDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(jobCareerPath);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(jobCareerPath: IJobCareerPathModel) {\r\n\t\tlet params: IJobCareerPathDeleteRequest = {\r\n\t\t\tNextJobId: jobCareerPath.joB_Title_NEXT_ID,\r\n\t\t\tJobId: jobCareerPath.joB_Title_ID,\r\n\t\t};\r\n\t\tthis.showLoading();\r\n\t\tthis.jobCareerPathService.Delete(params).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getAll();\r\n\t\t\t\t// update dropdown\r\n\t\t\t\tthis.getAllNextJobTitles();\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tclearForm() {\r\n\t\tthis.form.reset({ id: 0 });\r\n\t\tthis.submitted = false;\r\n\t}\r\n\r\n\t// next Job Title List\r\n\tgetAllNextJobTitles() {\r\n\t\tthis.showLoading();\r\n\t\tthis.jobCareerPathService\r\n      .getAllNextJobTitles(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobTitleModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.nextJobTitleList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n\t}\r\n}\r\n","<ng-container *ngIf=\"!showIndexOnly\">\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-prime-dropdown\r\n                [control]=\"formCtrls.joB_Title_NEXT_ID\"\r\n                label=\"nextJobTitle\"\r\n                [submitted]=\"submitted\"\r\n                [List]=\"nextJobTitleList\"\r\n                [filter]=\"true\"\r\n              >\r\n              </app-prime-dropdown>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.yeaR_NO\"\r\n                [submitted]=\"submitted\"\r\n                label=\"yeaR_NO\"\r\n                type=\"number\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.pmS_VALUE\"\r\n                [submitted]=\"submitted\"\r\n                label=\"pmS_VALUE\"\r\n                type=\"number\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12 ptop-15 pbottom-15\">\r\n              <app-check-box\r\n                [control]=\"formCtrls.iS_MANDATORY\"\r\n                label=\"isMandatory\"\r\n              >\r\n              </app-check-box>\r\n            </div>\r\n\r\n<!--            <div class=\"col-12\">-->\r\n<!--              <app-textarea-->\r\n<!--                [control]=\"formCtrls.responsabilities\"-->\r\n<!--                [submitted]=\"submitted\"-->\r\n<!--                label=\"responsabilities\"-->\r\n<!--                [rows]=\"4\"-->\r\n<!--              >-->\r\n<!--              </app-textarea>-->\r\n<!--            </div>-->\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n  <mat-card-actions align=\"end\">\r\n    <submit-btn (onClick)=\"submit()\" [disabled]=\"!jobId\"> </submit-btn>\r\n  </mat-card-actions>\r\n</ng-container>\r\n\r\n<app-material-table\r\n  [isLoaded]=\"isLoaded\"\r\n  *ngIf=\"jobId > 0\"\r\n  [dataSource]=\"dataSource\"\r\n  [mandatoryColomns]=\"mandatoryColomns\"\r\n  [optionalColomns]=\"optionalColomns\"\r\n  [actions]=\"rowFunctions\"\r\n  (deleteRow)=\"onDelete($event)\"\r\n  [showPaginator]=\"false\"\r\n  [showFilter]=\"false\"\r\n  [showSpaceTop]=\"!showIndexOnly\"\r\n  [ngClass]=\"{'table-in-forms small-table': showIndexOnly}\"\r\n>\r\n</app-material-table>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CompetenceService } from \"app/org-management/services/competence.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICompetenceLevelDetailsModel } from \"app/org-management/model/competence\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Component({\r\n  selector: \"app-job-competence-level-details-dialog\",\r\n  templateUrl: \"./job-competence-level-details-dialog.component.html\",\r\n  styleUrls: [\"./job-competence-level-details-dialog.component.scss\"],\r\n})\r\nexport class JobCompetenceLevelDetailsDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  competenceId: number;\r\n  competencelevelId: number;\r\n  levelDetails: ICompetenceLevelDetailsModel;\r\n\r\n  constructor(\r\n    private competenceService: CompetenceService,\r\n    public dialogRef: MatDialogRef<JobCompetenceLevelDetailsDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    super();\r\n    this.competenceId = data.competenceId;\r\n    this.competencelevelId = data.competencelevelId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (\r\n      this.checkNoBusinessOrCompany() &&\r\n      this.competenceId > 0 &&\r\n      this.competencelevelId > 0\r\n    )\r\n      this.getDetails();\r\n  }\r\n\r\n  getDetails() {\r\n    this.competenceService\r\n      .getDetailsByCompetenceAndLevelIds(\r\n        this.competenceId,\r\n        this.competencelevelId\r\n      )\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICompetenceLevelDetailsModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          // [this.levelDetails] = res.data.slice(-1);\r\n          this.levelDetails = res.data[0];\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n}\r\n","<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title\r\n      class=\"d-inline-block mtop-5 mbottom-10\"\r\n      title=\"competenceLevelDetails\"\r\n    ></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    [mat-dialog-close]=\"true\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <div *ngIf=\"levelDetails; else noData\">\r\n    <label>{{ \"en_Desc\" | translate | titlecase }}</label>\r\n    <div class=\"content\">{{ levelDetails.en_Description }}</div>\r\n\r\n    <label>{{ \"ar_Desc\" | translate | titlecase }}</label>\r\n    <div class=\"content\">{{ levelDetails.ar_Description }}</div>\r\n  </div>\r\n\r\n  <ng-template #noData>\r\n    <app-job-competence-details-dialog-skeleton></app-job-competence-details-dialog-skeleton>\r\n  </ng-template>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary mb-2\"\r\n    [mat-dialog-close]=\"true\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n\tIJobCompetenceRequest,\r\n\tIJobCompetenceModel,\r\n\tIJobCompetenceDeleteRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { JobCompetencesService } from \"app/org-management/services/job-profile/job-competences.service\";\r\nimport { ICompetenceTypeModel } from \"app/system-setup/org-management-setup/models/competence-type\";\r\nimport { CompetenceTypeService } from \"app/system-setup/org-management-setup/services/competence-type.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { JobCompetenceLevelDetailsDialogComponent } from \"../job-competence-level-details-dialog/job-competence-level-details-dialog.component\";\r\nimport { jobCompetenceToMap } from \"app/org-management/mapper/job-title\";\r\n\r\n@Component({\r\n\tselector: \"app-job-competences\",\r\n\ttemplateUrl: \"./job-competences.component.html\",\r\n\tstyleUrls: [\"./job-competences.component.scss\"],\r\n})\r\nexport class JobCompetencesComponent extends AppHelpers implements OnInit, OnChanges {\r\n\t@Input() jobId: number;\r\n\t@Input() showIndexOnly: boolean = false;\r\n\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\r\n\tmandatoryColomns: string[] = [\r\n\t\t\"Ser\",\r\n\t\t// \"id\",\r\n\t\t\"competence\",\r\n\t\t\"competenceLevel\",\r\n\t\t\"competencE_Weight\",\r\n\t\t\"competenceType\",\r\n\t\t\"actions\",\r\n\t];\r\n\tisLoaded: boolean = false;\r\n\toptionalColomns: string[] = [];\r\n\r\n\tdataSource: MatTableDataSource<IJobCompetenceModel>;\r\n\r\n\tcompetenceTypeList: ICompetenceTypeModel[];\r\n\r\n\tconstructor(\r\n\t\tprivate jobCompetencesService: JobCompetencesService,\r\n\t\tprivate competenceTypeService: CompetenceTypeService,\r\n\t\tprivate dialog: MatDialog\r\n\t) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\t// id: [0, { nonNullable: true }],\r\n\t\t\tcompetenceId: [null, [Validators.required]],\r\n\t\t\tcompetenceLevelId: [{ value: null, disabled: true }, [Validators.required]],\r\n\t\t\tcompetencE_Weight: [\r\n\t\t\t\tnull,\r\n\t\t\t\t[\r\n\t\t\t\t\tValidators.required,\r\n\t\t\t\t\tCustomValidators.digits,\r\n\t\t\t\t\tCustomValidators.gte(0),\r\n\t\t\t\t\tCustomValidators.lte(2147483647),\r\n\t\t\t\t],\r\n\t\t\t],\r\n\t\t\tcompetenceTypeId: [null, [Validators.required]],\r\n\t\t});\r\n\r\n    if(this.showIndexOnly) {\r\n      // remove \"ser\"\r\n      this.mandatoryColomns.shift();\r\n      // remove \"actions\"\r\n      this.mandatoryColomns.pop();\r\n    }\r\n\t}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.jobId?.currentValue > 0) this.getAll();\r\n  }\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.checkNoBusinessOrCompany()) {\r\n\t\t\tthis.getAllCompetenceTypes();\r\n\t\t\tif (this.jobId > 0) this.getAll();\r\n\t\t}\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\tgetAll() {\r\n    this.dataSource = new MatTableDataSource(null)\r\n    this.isLoaded = false;\r\n\t\tthis.jobCompetencesService\r\n\t\t\t.getAllByJobTitleId(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IJobCompetenceModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(jobCompetenceToMap(res.data));\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\t// console.log(this.form.value);\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst model: IJobCompetenceRequest = {\r\n\t\t\t\tComptenceID: this.form.value.competenceId,\r\n\t\t\t\tComptenceLevelID: this.form.value.competenceLevelId,\r\n\t\t\t\tComptence_Jobtitle: {\r\n\t\t\t\t\tJOB_Title_ID: this.jobId,\r\n\t\t\t\t\tCOMPETENCE_TYPE_ID: this.form.value.competenceTypeId,\r\n\t\t\t\t\tCOMPETENCE_Weight: this.form.value.competencE_Weight,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tthis.create(model);\r\n\t\t} // else this.toastr.error(\"General.formNotValid\");\r\n\t}\r\n\r\n\tcreate(model: IJobCompetenceRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.jobCompetencesService.create(model).subscribe((res: IResponse<IJobCompetenceModel>) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getAll();\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tonDelete(jobCompetence: IJobCompetenceModel): void {\r\n\t\tlet msg = this.msgTranslate(jobCompetence.competence);\r\n\t\tthis.deleteDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(jobCompetence);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(jobCompetence: IJobCompetenceModel) {\r\n\t\tlet params: IJobCompetenceDeleteRequest = {\r\n\t\t\tJobId: this.jobId,\r\n\t\t\tComDetailsId: jobCompetence.competencE_Detail_ID,\r\n\t\t};\r\n\r\n\t\tthis.showLoading();\r\n\t\tthis.jobCompetencesService.Delete(params).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getAll();\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tclearForm() {\r\n\t\tthis.form.reset({ id: 0 });\r\n\t\tthis.submitted = false;\r\n\t}\r\n\r\n\topenCompetenceLevelDetailsDialog() {\r\n\t\tthis.dialog\r\n\t\t\t.open(JobCompetenceLevelDetailsDialogComponent, {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tcompetenceId: this.formCtrls.competenceId.value,\r\n\t\t\t\t\tcompetencelevelId: this.formCtrls.competenceLevelId.value,\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\ttop: \"40px\",\r\n\t\t\t\t},\r\n        minWidth:\"50vw\",\r\n\t\t\t\tmaxWidth: \"85vw\",\r\n\t\t\t\tpanelClass: \"dialog-emp-form\",\r\n\t\t\t\tautoFocus: false,\r\n\t\t\t})\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe(() => {});\r\n\t}\r\n\r\n\t// Competence Type List\r\n\tgetAllCompetenceTypes() {\r\n\t\tthis.showLoading();\r\n\t\tthis.competenceTypeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICompetenceTypeModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.competenceTypeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n\t}\r\n}\r\n","<ng-container *ngIf=\"!showIndexOnly\">\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-competence-dropdown\r\n                [control]=\"formCtrls.competenceId\"\r\n                [submitted]=\"submitted\"\r\n                [filter]=\"true\"\r\n              >\r\n              </app-competence-dropdown>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12 icon-with-input\">\r\n              <app-competence-level-by-competence-dropdown\r\n                [control]=\"formCtrls.competenceLevelId\"\r\n                [competenceControl]=\"formCtrls.competenceId\"\r\n                [submitted]=\"submitted\"\r\n                [filter]=\"true\"\r\n                class=\"input-to-flex\"\r\n              >\r\n              </app-competence-level-by-competence-dropdown>\r\n\r\n              <button\r\n                mat-button\r\n                type=\"button\"\r\n                class=\"float-right darkBlue\"\r\n                matTooltip=\"{{ 'competenceLevelDetails' | translate }}\"\r\n                [class.disable-link]=\"!formCtrls.competenceLevelId.value\"\r\n                (click)=\"openCompetenceLevelDetailsDialog()\"\r\n              >\r\n                <i class=\"fa fa-info\"></i>\r\n              </button>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.competencE_Weight\"\r\n                [submitted]=\"submitted\"\r\n                label=\"competencE_Weight\"\r\n                type=\"number\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-prime-dropdown\r\n                [control]=\"formCtrls.competenceTypeId\"\r\n                label=\"competenceType\"\r\n                [submitted]=\"submitted\"\r\n                [List]=\"competenceTypeList\"\r\n                [filter]=\"true\"\r\n              >\r\n              </app-prime-dropdown>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n  <mat-card-actions align=\"end\">\r\n    <submit-btn (onClick)=\"submit()\" [disabled]=\"!jobId\"> </submit-btn>\r\n  </mat-card-actions>\r\n</ng-container>\r\n\r\n<app-material-table\r\n  [isLoaded]=\"isLoaded\"\r\n  *ngIf=\"jobId > 0\"\r\n  [dataSource]=\"dataSource\"\r\n  [mandatoryColomns]=\"mandatoryColomns\"\r\n  [optionalColomns]=\"optionalColomns\"\r\n  [actions]=\"rowFunctions\"\r\n  (deleteRow)=\"onDelete($event)\"\r\n  [showPaginator]=\"false\"\r\n  [showFilter]=\"false\"\r\n  [showSpaceTop]=\"!showIndexOnly\"\r\n  [ngClass]=\"{ 'table-in-forms small-table': showIndexOnly }\"\r\n>\r\n</app-material-table>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  IJobCustodiesModel,\r\n  IJobCustodiesRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { JobCustodiesService } from \"app/org-management/services/job-profile/job-custodies.service\";\r\n\r\n@Component({\r\n  selector: \"app-job-custodies\",\r\n  templateUrl: \"./job-custodies.component.html\",\r\n  styleUrls: [\"./job-custodies.component.scss\"],\r\n})\r\nexport class JobCustodiesComponent extends AppHelpers implements OnInit {\r\n  @Input() jobId: number;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private jobCustodiesService: JobCustodiesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      custody_Ids: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.jobId > 0) this.getAll();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.showLoading();\r\n    this.jobCustodiesService\r\n      .getAllByJobTitleId(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobCustodiesModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.formCtrls.custody_Ids.setValue(\r\n            res.data.map((custody) => custody.covenantId)\r\n          );\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IJobCustodiesRequest = {\r\n        JobId: this.jobId,\r\n        conv_Ids: this.form.value.custody_Ids,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IJobCustodiesRequest) {\r\n    this.showLoading();\r\n    this.jobCustodiesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IJobCustodiesModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getAll();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-custodies-dropdown\r\n              [control]=\"formCtrls.custody_Ids\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n              [multi]=\"true\"\r\n            >\r\n            </app-custodies-dropdown>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <submit-btn (onClick)=\"submit()\" [disabled]=\"!jobId\"> </submit-btn>\r\n</mat-card-actions>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { IJobDescriptionModel, IJobDescriptionRequest } from \"app/org-management/model/job-title\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { JobDescriptionService } from \"app/org-management/services/job-profile/job-description.service\";\r\n\r\n@Component({\r\n\tselector: \"app-job-description\",\r\n\ttemplateUrl: \"./job-description.component.html\",\r\n\tstyleUrls: [\"./job-description.component.scss\"],\r\n})\r\nexport class JobDescriptionComponent extends AppHelpers implements OnInit {\r\n\t@Input() jobId: number;\r\n\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\r\n\tconstructor(private jobDescriptionService: JobDescriptionService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tjoB_PURPOSE: [null, [Validators.required]],\r\n\t\t\tresponsibilitieS_DUTIES: [null],\r\n\t\t\tknowledgE_SKILLS: [null],\r\n\t\t\teducation: [null],\r\n\t\t\texperience: [null],\r\n\t\t\tworkinG_CONDITIONS: [null],\r\n\t\t});\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) {\r\n\t\t\tif (this.jobId > 0) this.getAll();\r\n\t\t}\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\tthis.showLoading();\r\n\t\tthis.jobDescriptionService\r\n\t\t\t.getAllByJobTitleId(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IJobDescriptionModel>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.form.patchValue(res.data);\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t\tthis.hideLoading();\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\t// console.log(this.form.value);\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst model: IJobDescriptionRequest = {\r\n\t\t\t\tjob_Title_ID: this.jobId,\r\n\t\t\t\tjoB_PURPOSE: this.form.value.joB_PURPOSE,\r\n\t\t\t\tresponsibilitieS_DUTIES: this.form.value.responsibilitieS_DUTIES,\r\n\t\t\t\tknowledgE_SKILLS: this.form.value.knowledgE_SKILLS,\r\n\t\t\t\teducation: this.form.value.education,\r\n\t\t\t\texperience: this.form.value.experience,\r\n\t\t\t\tworkinG_CONDITIONS: this.form.value.workinG_CONDITIONS,\r\n\t\t\t};\r\n\r\n\t\t\tthis.create(model);\r\n\t\t} // else this.toastr.error(\"General.formNotValid\");\r\n\t}\r\n\r\n\tcreate(model: IJobDescriptionRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.jobDescriptionService.create(model).subscribe((res: IResponse<IJobDescriptionModel>) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\t// this.getAll();\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\" #editorContainer>\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <mat-accordion>\r\n\r\n          <!-- jobPurpose and responsibilities Duties -->\r\n          <mat-expansion-panel>\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title>\r\n                {{ 'jobPurpose'|translate }} & {{ 'responsibilitiesDuties'| translate }}\r\n              </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-panel-description>\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-6\">\r\n                  <app-text-editor [control]=\"formCtrls.joB_PURPOSE\"\r\n                                   label=\"jobPurpose\"\r\n                                   [bounds]=\"editorContainer\">\r\n                  </app-text-editor>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-lg-6\">\r\n                  <app-text-editor [control]=\"formCtrls.responsibilitieS_DUTIES\"\r\n                                   label=\"responsibilitiesDuties\"\r\n                                   [bounds]=\"editorContainer\">\r\n                  </app-text-editor>\r\n                </div>\r\n              </div>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel>\r\n\r\n\r\n          <!-- knowledge Skills and  education -->\r\n          <mat-expansion-panel>\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title>\r\n                {{ 'knowledgeSkills'|translate }} & {{ 'education'| translate }}\r\n              </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-panel-description>\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-6\">\r\n                  <app-text-editor [control]=\"formCtrls.knowledgE_SKILLS\"\r\n                                   label=\"knowledgeSkills\"\r\n                                   [bounds]=\"editorContainer\">\r\n                  </app-text-editor>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-lg-6\">\r\n                  <app-text-editor [control]=\"formCtrls.education\"\r\n                                   label=\"education\"\r\n                                   [bounds]=\"editorContainer\">\r\n                  </app-text-editor>\r\n                </div>\r\n              </div>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel>\r\n\r\n          <!-- experience and working Conditions  -->\r\n          <mat-expansion-panel>\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title>\r\n                {{ 'knowledgeSkills'|translate }} & {{ 'education'| translate }}\r\n              </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <mat-panel-description>\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-6\">\r\n                  <app-text-editor [control]=\"formCtrls.experience\"\r\n                                   label=\"experience\"\r\n                                   [bounds]=\"editorContainer\">\r\n                  </app-text-editor>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12 col-lg-6\">\r\n                  <app-text-editor [control]=\"formCtrls.workinG_CONDITIONS\"\r\n                                   label=\"workingConditions\"\r\n                                   [bounds]=\"editorContainer\">\r\n                  </app-text-editor>\r\n                </div>\r\n              </div>\r\n            </mat-panel-description>\r\n          </mat-expansion-panel>\r\n\r\n        </mat-accordion>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <submit-btn (onClick)=\"submit()\" [disabled]=\"!jobId\"></submit-btn>\r\n</mat-card-actions>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  IJobKpiModel,\r\n  IJobKpiRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { JobKpiService } from \"app/org-management/services/job-profile/job-kpi.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-job-kpi\",\r\n  templateUrl: \"./job-kpi.component.html\",\r\n  styleUrls: [\"./job-kpi.component.scss\"],\r\n})\r\nexport class JobKpiComponent extends AppHelpers implements OnInit {\r\n  @Input() jobId: number;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private jobKpiService: JobKpiService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      KPI_Ids: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.jobId > 0) this.getAll();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.showLoading();\r\n    this.jobKpiService\r\n      .getAllByJobTitleId(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobKpiModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.formCtrls.KPI_Ids.setValue(res.data.map((kpi) => kpi.kpI_Id));\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IJobKpiRequest = {\r\n        JobId: this.jobId,\r\n        KPI_Ids: this.form.value.KPI_Ids,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IJobKpiRequest) {\r\n    this.showLoading();\r\n    this.jobKpiService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IJobKpiModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getAll();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-kpi-dropdown\r\n              [control]=\"formCtrls.KPI_Ids\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n              [multi]=\"true\"\r\n            ></app-kpi-dropdown>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <submit-btn (onClick)=\"submit()\" [disabled]=\"!jobId\"> </submit-btn>\r\n</mat-card-actions>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n\tIJobTrainingPathRequest,\r\n\tIJobTrainingPathModel,\r\n\tIJobTrainingPathDeleteRequest,\r\n\tIJobTrainingPathPriorityModel,\r\n} from \"app/org-management/model/job-title\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { JobTrainingPathService } from \"app/org-management/services/job-profile/job-training-path.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ICourseToDisplay } from \"app/training/models/course/course\";\r\nimport { CourseService } from \"app/training/services/course/course.service\";\r\nimport { jobTrainingToMap } from \"app/org-management/mapper/job-title\";\r\n\r\n@Component({\r\n\tselector: \"app-job-training-path\",\r\n\ttemplateUrl: \"./job-training-path.component.html\",\r\n\tstyleUrls: [\"./job-training-path.component.scss\"],\r\n})\r\nexport class JobTrainingPathComponent extends AppHelpers implements OnInit {\r\n\t@Input() jobId: number;\r\n\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\r\n\tmandatoryColomns: string[] = [\"Ser\", \"course\", \"period\", \"pre_Required\", \"priority\", \"actions\"];\r\n\tisLoaded: boolean = false;\r\n\toptionalColomns: string[] = [];\r\n\r\n\tdataSource: MatTableDataSource<IJobTrainingPathModel>;\r\n\r\n\tcourseList: ICourseToDisplay[];\r\n\tpriorityList: IJobTrainingPathPriorityModel[];\r\n\r\n\tconstructor(\r\n\t\tprivate jobTrainingPathService: JobTrainingPathService,\r\n\t\tprivate courseService: CourseService\r\n\t) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tcourse_ID: [null, [Validators.required]],\r\n\t\t\tperiod: [\r\n\t\t\t\tnull,\r\n\t\t\t\t[CustomValidators.digits, CustomValidators.gte(0), CustomValidators.lte(2147483647)],\r\n\t\t\t],\r\n\t\t\tpre_Required: [null],\r\n\t\t\tpriority_ID: [null],\r\n\t\t});\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.checkNoBusinessOrCompany()) {\r\n\t\t\tthis.getAllCourses();\r\n\t\t\tthis.getAllPriorities();\r\n\t\t\tif (this.jobId > 0) this.getAll();\r\n\t\t}\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\tgetAll() {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n\t\tthis.jobTrainingPathService\r\n\t\t\t.getAllByJobTitleId(this.jobId)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IJobTrainingPathModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(jobTrainingToMap(res.data));\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\t// console.log(this.form.value);\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst model: IJobTrainingPathRequest = {\r\n\t\t\t\tjoB_Title_ID: this.jobId,\r\n\t\t\t\tcourse_ID: this.form.value.course_ID,\r\n\t\t\t\tperiod: this.form.value.period,\r\n\t\t\t\tpre_Required: this.form.value.pre_Required ?? false,\r\n\t\t\t\tpriority_ID: this.form.value.priority_ID,\r\n\t\t\t};\r\n\r\n\t\t\tthis.create(model);\r\n\t\t} // else this.toastr.error(\"General.formNotValid\");\r\n\t}\r\n\r\n\tcreate(model: IJobTrainingPathRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.jobTrainingPathService.create(model).subscribe((res: IResponse<IJobTrainingPathModel>) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getAll();\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tonDelete(jobTrainingPath: IJobTrainingPathModel): void {\r\n\t\tlet msg = this.msgTranslate(jobTrainingPath.course);\r\n\t\tthis.deleteDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(jobTrainingPath);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(jobTrainingPath: IJobTrainingPathModel) {\r\n\t\tlet params: IJobTrainingPathDeleteRequest = {\r\n\t\t\tCourseId: jobTrainingPath.course_ID,\r\n\t\t\tJobId: jobTrainingPath.joB_Title_ID,\r\n\t\t};\r\n\t\tthis.showLoading();\r\n\t\tthis.jobTrainingPathService.Delete(params).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getAll();\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tclearForm() {\r\n\t\tthis.form.reset({ id: 0 });\r\n\t\tthis.submitted = false;\r\n\t}\r\n\r\n\t// course List\r\n\tgetAllCourses() {\r\n\t\tthis.showLoading();\r\n\t\tthis.courseService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICourseToDisplay[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.courseList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n\t}\r\n\r\n\t// priority List\r\n\tgetAllPriorities() {\r\n\t\tthis.showLoading();\r\n\t\tthis.jobTrainingPathService\r\n      .getAllPriority()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobTrainingPathPriorityModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.priorityList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n\t}\r\n}\r\n","<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-prime-dropdown\r\n              [control]=\"formCtrls.course_ID\"\r\n              label=\"course\"\r\n              [submitted]=\"submitted\"\r\n              [List]=\"courseList\"\r\n              [filter]=\"true\"\r\n            >\r\n            </app-prime-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-prime-dropdown\r\n              [control]=\"formCtrls.priority_ID\"\r\n              label=\"priority\"\r\n              [submitted]=\"submitted\"\r\n              [List]=\"priorityList\"\r\n              [filter]=\"true\"\r\n            >\r\n            </app-prime-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.period\"\r\n              [submitted]=\"submitted\"\r\n              label=\"period\"\r\n              type=\"number\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12 ptop-15 pbottom-15\">\r\n            <app-check-box\r\n              [control]=\"formCtrls.pre_Required\"\r\n              label=\"pre_Required\"\r\n            >\r\n            </app-check-box>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <submit-btn (onClick)=\"submit()\" [disabled]=\"!jobId\"> </submit-btn>\r\n</mat-card-actions>\r\n\r\n<app-material-table\r\n\t\t\t\t\t[isLoaded]=\"isLoaded\"\r\n  *ngIf=\"jobId > 0\"\r\n  [dataSource]=\"dataSource\"\r\n  [mandatoryColomns]=\"mandatoryColomns\"\r\n  [optionalColomns]=\"optionalColomns\"\r\n  [actions]=\"rowFunctions\"\r\n  (deleteRow)=\"onDelete($event)\"\r\n  [showPaginator]=\"false\"\r\n  [showFilter]=\"false\"\r\n>\r\n</app-material-table>\r\n","import { AfterViewInit, Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { PolicyGroupService } from \"app/org-management/services/policy-group.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IPolicyGroupModel, LoadPoliciesParams, } from \"app/org-management/model/policy-group\";\r\n\r\n@Component({\r\n  selector: \"load-policies-group\",\r\n  templateUrl: \"./load-policies-group.component.html\",\r\n  styleUrls: [\"./load-policies-group.component.scss\"],\r\n})\r\nexport class LoadPoliciesGroupComponent extends AppHelpers implements OnChanges, AfterViewInit {\r\n  @Input() control = new FormControl();\r\n  @Input() jobControl = new FormControl();\r\n  @Input() orgControl = new FormControl();\r\n  @Input() locationControl = new FormControl();\r\n  @Input() submitted: boolean = false;\r\n  @Input() filterByOrgAndJob: boolean = false;\r\n  policyGroup: IPolicyGroupModel[];\r\n  selectedPolicyGroup: IPolicyGroupModel[] = [];\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private policyGroupService: PolicyGroupService) { super(); }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    // location control\r\n    this.locationControl?.valueChanges.subscribe((id) => {\r\n      this.control.setValue(null);\r\n      this.policyGroup = [];\r\n      this.selectedPolicyGroup = [];\r\n      if (id > 0) {\r\n        this.loadPolicies();\r\n      }\r\n    });\r\n\r\n\r\n    // org control\r\n    this.orgControl?.valueChanges.subscribe((id) => {\r\n      this.control.setValue(null);\r\n      this.policyGroup = [];\r\n      this.selectedPolicyGroup = [];\r\n      if (id > 0 && !this.filterByOrgAndJob) {\r\n        console.log(\"org\", id);\r\n        this.loadPolicies();\r\n      }\r\n    });\r\n\r\n    // job title control\r\n    this.jobControl?.valueChanges.subscribe((id) => {\r\n      this.control.setValue(null);\r\n      this.policyGroup = [];\r\n      this.selectedPolicyGroup = [];\r\n      if (id > 0) {\r\n        this.loadPolicies();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes?.control && this.policyGroup?.length > 0)\r\n      this.moveFromSourceToTarget();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() &&\r\n      (this.orgControl?.value > 0 || this.jobControl?.value > 0 || this.locationControl?.value > 0)\r\n    )\r\n      this.loadPolicies();\r\n  }\r\n\r\n  loadPolicies() {\r\n    let params: LoadPoliciesParams = {\r\n      orgId: this.orgControl?.value ?? 0,\r\n      jobTitleId: this.jobControl?.value ?? 0,\r\n      locatonId: this.locationControl?.value ?? 0,\r\n    };\r\n\r\n    this.policyGroupService\r\n      .loadPolicies(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPolicyGroupModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // console.log(res);\r\n          this.policyGroup = res.data;\r\n          this.moveFromSourceToTarget();\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  moveFromSourceToTarget() {\r\n    this.policyGroup = [...this.policyGroup, ...this.selectedPolicyGroup];\r\n    this.selectedPolicyGroup = [];\r\n    this.control?.value?.forEach((selected) => {\r\n      let selectedIndex = this.policyGroup?.findIndex(\r\n        (ele) => ele.id == selected\r\n      );\r\n      if (selectedIndex >= 0) {\r\n        this.selectedPolicyGroup.push(this.policyGroup[selectedIndex]);\r\n        this.policyGroup.splice(selectedIndex, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  onMove($event) {\r\n    let selected: number[] = [];\r\n    this.selectedPolicyGroup?.forEach((e) => {\r\n      selected.push(e.id);\r\n    });\r\n    this.control.setValue(selected);\r\n  }\r\n}\r\n","<p-pickList *ngIf=\"isLoaded\"\r\n            [source]=\"policyGroup\"\r\n            [target]=\"selectedPolicyGroup\"\r\n            [dragdrop]=\"true\"\r\n            [responsive]=\"true\"\r\n            [showSourceControls]=\"false\"\r\n            [showTargetControls]=\"false\"\r\n            [stripedRows]=\"true\"\r\n            sourceHeader=\"{{ 'policyGroups' | translate }}\"\r\n            targetHeader=\"{{ 'selectedPolicesGroups' | translate }}\"\r\n            styleClass=\"mb-1\"\r\n            [sourceStyle]=\"{ 'max-height': '150px' }\"\r\n            [targetStyle]=\"{ 'max-height': '150px' }\"\r\n            (onMoveToTarget)=\"onMove($event)\"\r\n            (onMoveToSource)=\"onMove($event)\"\r\n            (onMoveAllToTarget)=\"onMove($event)\"\r\n            (onMoveAllToSource)=\"onMove($event)\"\r\n>\r\n  <ng-template let-policy pTemplate=\"item\">\r\n    <!--    <mat-list>-->\r\n    <!--      <mat-list-item>-->\r\n    <!--        <div class=\"d-block\">-->\r\n    <!--          {{ msgTranslate(policy.ar_Name, policy.en_Name) }}-->\r\n    <!--        </div>-->\r\n\r\n    <!--        <div class=\"d-md-block gray\">-->\r\n    <!--          <i class=\"pi pi-tag product-category-icon\"></i>-->\r\n    <!--          {{-->\r\n    <!--            msgTranslate(-->\r\n    <!--              policy.core_PolicyGroup_Type.ar_Name,-->\r\n    <!--              policy.core_PolicyGroup_Type.en_Name-->\r\n    <!--            )-->\r\n    <!--          }}-->\r\n    <!--        </div>-->\r\n\r\n    <!--      </mat-list-item>-->\r\n    <!--      <mat-divider></mat-divider>-->\r\n    <!--    </mat-list>-->\r\n\r\n    <li class=\"p-ripple p-element cdk-drag p-picklist-item\">\r\n      <div class=\"product-item border-bottom p-1\">\r\n        <div class=\"product-list-detail\">\r\n          <h6 class=\"mb-0\"> {{ msgTranslate(policy?.ar_Name, policy?.en_Name) }} </h6>\r\n          <ng-container *ngIf=\"policy?.core_PolicyGroup_Type\">\r\n            <i class=\"fas fa-th product-category-icon font-small-1 mright-4 gray\"></i>\r\n            <span class=\"product-category font-small-2 gray\">\r\n               {{\r\n                msgTranslate(\r\n                  policy?.core_PolicyGroup_Type?.ar_Name,\r\n                  policy?.core_PolicyGroup_Type?.en_Name\r\n                )\r\n              }}\r\n          </span>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </li>\r\n\r\n  </ng-template>\r\n</p-pickList>\r\n\r\n<span class=\"error\">\r\n  <input-validation-msg [control]=\"control\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\">\r\n  </input-validation-msg>\r\n</span>\r\n\r\n<div class=\"row\" *ngIf=\"!isLoaded\">\r\n  <div class=\"col-6\">\r\n    <p-skeleton width=\"100%\" height=\"120px\"></p-skeleton>\r\n  </div>\r\n  <div class=\"col-6\">\r\n    <p-skeleton width=\"100%\" height=\"120px\"></p-skeleton>\r\n  </div>\r\n</div>\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IAssignJobToOrgModel,\r\n  IJobCareerPathModel,\r\n  IJobCompetenceModel,\r\n  IJobKpiModel,\r\n  IJobTitleModel,\r\n  IJobTrainingPathModel,\r\n} from \"../model/job-title\";\r\n\r\nexport function jobCareerToMap(\r\n  jobCareers: IJobCareerPathModel[]\r\n): IJobCareerPathModel[] {\r\n  return jobCareers.map((jobCareer) => {\r\n    return <IJobCareerPathModel>{\r\n      ...jobCareer,\r\n      nextJobTitle: msgTranslate(\r\n        jobCareer.next_Job_Title?.ar_Name,\r\n        jobCareer.next_Job_Title?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function jobCompetenceToMap(\r\n  jobCompetences: IJobCompetenceModel[]\r\n): IJobCompetenceModel[] {\r\n  return jobCompetences.map((jobCompetence) => {\r\n    return <IJobCompetenceModel>{\r\n      ...jobCompetence,\r\n      competence: msgTranslate(\r\n        jobCompetence.core_Competence_Detail?.core_Competence?.ar_Name,\r\n        jobCompetence.core_Competence_Detail?.core_Competence?.en_Name\r\n      ),\r\n      competenceLevel: msgTranslate(\r\n        jobCompetence.core_Competence_Detail?.core_Competence_Level?.ar_Name,\r\n        jobCompetence.core_Competence_Detail?.core_Competence_Level?.en_Name\r\n      ),\r\n      competenceType: msgTranslate(\r\n        jobCompetence.core_Competence_TYPE?.ar_NAme,\r\n        jobCompetence.core_Competence_TYPE?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function jobTrainingToMap(\r\n  jobTrainings: IJobTrainingPathModel[]\r\n): IJobTrainingPathModel[] {\r\n  return jobTrainings.map((jobTraining) => {\r\n    return <IJobTrainingPathModel>{\r\n      ...jobTraining,\r\n      course: msgTranslate(\r\n        jobTraining.trA_Course?.ar_Name,\r\n        jobTraining.trA_Course?.en_Name\r\n      ),\r\n      priority: msgTranslate(\r\n        jobTraining.comm_Priority?.ar_Name,\r\n        jobTraining.comm_Priority?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function jobToMap(jobs: IJobTitleModel[]): IJobTitleModel[] {\r\n  return jobs.map((job) => {\r\n    return <IJobTitleModel>{\r\n      ...job,\r\n      jobFamily: msgTranslate(\r\n        job.core_Job_Title_Family?.ar_Name,\r\n        job.core_Job_Title_Family?.en_Name\r\n      ),\r\n      parentJobTitleName: msgTranslate(\r\n        job.parentJobTitle?.ar_Name,\r\n        job.parentJobTitle?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function assignJobToOrgToMap(\r\n  assignJobToOrgs: IAssignJobToOrgModel[]\r\n): IAssignJobToOrgModel[] {\r\n  return assignJobToOrgs.map((assignJobToOrg) => {\r\n    return <IAssignJobToOrgModel>{\r\n      ...assignJobToOrg,\r\n      jobTitle: msgTranslate(\r\n        assignJobToOrg.core_Job_Title?.ar_Name,\r\n        assignJobToOrg.core_Job_Title?.en_Name\r\n      ),\r\n      manPowerCapacity:\r\n        assignJobToOrg.max_Employee != 0\r\n          ? assignJobToOrg.max_Employee\r\n          : assignJobToOrg.manPowerCapacity,\r\n    };\r\n  });\r\n}\r\n\r\nexport function jobKpiToMap(data: IJobKpiModel[]): IJobKpiModel[] {\r\n  return data.map((ele) => {\r\n    return <IJobKpiModel>{\r\n      ...ele,\r\n      kpi: msgTranslate(ele.core_KPI?.ar_Name, ele.core_KPI?.en_Name),\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IBusinessEntityModel } from \"../model/business-entity\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BusinessEntityService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IBusinessEntityModel[]>>(\r\n      \"BusinessEntity/GetAll\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ICompetenceLevelDetailsModel, ICompetenceModel } from \"../model/competence\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CompetenceService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ICompetenceModel[]>>(\r\n      \"OrgManagement/Competence/GetAll\"\r\n    );\r\n  }\r\n\r\n  // competence details\r\n  getDetailsByCompetenceAndLevelIds(\r\n    competenceId: number,\r\n    competenceLevelId: number\r\n  ) {\r\n    return this.get<IResponse<ICompetenceLevelDetailsModel[]>>(\r\n      \"OrgManagement/Competence/GetAll_CompetenceDetail\",\r\n      {\r\n        params: {\r\n          $filter: `Competence_ID eq ${competenceId} and Competence_Level_ID eq ${competenceLevelId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IAssignJobToOrgDeleteRequest,\r\n  IAssignJobToOrgModel,\r\n  IAssignJobToOrgRequest,\r\n  IJobTitleModel,\r\n} from \"app/org-management/model/job-title\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AssignJobToOrgService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IAssignJobToOrgRequest) {\r\n    return this.post<IResponse<IAssignJobToOrgModel>>(\r\n      \"OrgManagement/jobtitle/Create_JobTitleAssignOrg\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllByOrgId(orgId: number) {\r\n    return this.get<IResponse<IAssignJobToOrgModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleAssignOrg\",\r\n      {\r\n        params: {\r\n          $filter: `org_ID eq ${orgId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IAssignJobToOrgDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"OrgManagement/jobtitle/Delete_JobTitleAssignOrg\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllJobTitleNotAssignedInOrgID(orgId: number) {\r\n    return this.get<IResponse<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleNotInOrgID\",\r\n      {\r\n        params: {\r\n          OrgID: orgId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IJobAppraisalMethodModel,\r\n  IJobAppraisalMethodRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobAppraisalMethodService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IJobAppraisalMethodRequest) {\r\n    return this.post<IResponse<IJobAppraisalMethodModel>>(\r\n      \"OrgManagement/jobtitle/Create_JobTitleAppraisalMethod\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllByJobTitleId(jobId: number) {\r\n    return this.get<IResponse<IJobAppraisalMethodModel>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleAppraisalMethod\",\r\n      {\r\n        params: {\r\n          JobId: jobId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { IJobBenefitModel, IJobBenefitRequest } from \"app/org-management/model/job-benefit\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JobBenefitService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  create(data: IJobBenefitRequest) {\r\n    return this.post<IResponse<IJobBenefitModel>>(\r\n      \"OrgManagement/JobTitle/Create_JobTitleBenefit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll(JobId: number,) {\r\n    return this.get<IResponse<IJobBenefitModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleBenefit\", {\r\n        params: {\r\n          $filter: `JOB_Title_ID eq ${JobId}`,\r\n          $expand: `${db.Bon_Benefit}.${db.bon_Benefit_Type}`\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(JobId: number, jobBenefitId: number) {\r\n    return this.delete<IResponse>(\"OrgManagement/JobTitle/Delete_JobTitleBenefit\", {\r\n      params: {JobId: JobId, benefitid: jobBenefitId},\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IJobCareerPathDeleteRequest,\r\n  IJobCareerPathModel,\r\n  IJobCareerPathRequest,\r\n  IJobTitleModel,\r\n} from \"app/org-management/model/job-title\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobCareerPathService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IJobCareerPathRequest) {\r\n    return this.post<IResponse<IJobCareerPathModel>>(\r\n      \"OrgManagement/jobtitle/Create_JobTitleCareerPath\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getListByJobTitleId(jobId: number) {\r\n    return this.get<IResponseList<IJobCareerPathModel[]>>(\r\n      \"OrgManagement/JobTitle/GetList_JobTitleCareerPath\",\r\n      {\r\n        params: {\r\n          $filter: `joB_Title_ID eq ${jobId}`,\r\n          $expand: db.next_Job_Title,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllByJobTitleId(jobId: number) {\r\n    return this.get<IResponse<IJobCareerPathModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleCareerPath\",\r\n      {\r\n        params: {\r\n          $filter: `joB_Title_ID eq ${jobId}`,\r\n          $expand: db.next_Job_Title,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IJobCareerPathDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"OrgManagement/jobtitle/Delete_JobTitleCareerPath\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllNextJobTitles(jobId: number) {\r\n    return this.get<IResponse<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_NextJobTitle\",\r\n      {\r\n        params: {\r\n          JobId: jobId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IJobCompetenceDeleteRequest,\r\n  IJobCompetenceModel,\r\n  IJobCompetenceRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobCompetencesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IJobCompetenceRequest) {\r\n    return this.post<IResponse<IJobCompetenceModel>>(\r\n      \"OrgManagement/jobtitle/Create_JobTitleCompetence\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllByJobTitleId(jobId: number) {\r\n    return this.get<IResponse<IJobCompetenceModel[]>>(\r\n      \"OrgManagement/jobtitle/GetAll_JobTitleCompetence\",\r\n      {\r\n        params: {\r\n          $filter: `joB_Title_ID eq ${jobId}`,\r\n          $expand: `${db.core_Competence_TYPE},${db.core_Competence_Detail}.${db.core_Competence},${db.core_Competence_Detail}.${db.core_Competence_Level}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IJobCompetenceDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"OrgManagement/jobtitle/Delete_JobTitleCompetence\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IJobCustodiesModel,\r\n  IJobCustodiesRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobCustodiesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IJobCustodiesRequest) {\r\n    return this.post<IResponse<IJobCustodiesModel>>(\r\n      \"OrgManagement/jobtitle/Create_JobTitleCustodies\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllByJobTitleId(jobId: number) {\r\n    return this.get<IResponse<IJobCustodiesModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleCustodies\",\r\n      {\r\n        params: {\r\n          JobId: jobId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IJobDescriptionModel,\r\n  IJobDescriptionRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobDescriptionService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IJobDescriptionRequest) {\r\n    return this.post<IResponse<IJobDescriptionModel>>(\r\n      \"OrgManagement/jobtitle/Create_JobTitleDescription\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllByJobTitleId(jobId: number) {\r\n    return this.get<IResponse<IJobDescriptionModel>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleDescription\",\r\n      {\r\n        params: {\r\n          JobId: jobId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IJobKpiModel,\r\n  IJobKpiRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobKpiService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IJobKpiRequest) {\r\n    return this.post<IResponse<IJobKpiModel>>(\r\n      \"OrgManagement/jobtitle/Create_JobTitleKpi\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllByJobTitleId(jobId: number) {\r\n    return this.get<IResponse<IJobKpiModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleKpi\",\r\n      {\r\n        params: {\r\n          JobId: jobId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IJobProfileRequest, IJobTitleModel } from \"../../model/job-title\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobTitleService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IJobProfileRequest) {\r\n    return this.post<IResponse<IJobTitleModel>>(\r\n      \"OrgManagement/JobTitle/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IJobProfileRequest) {\r\n    return this.post<IResponse<IJobTitleModel>>(\r\n      \"OrgManagement/JobTitle/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $expand: `${db.Core_Job_Title_Family}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll\"\r\n    );\r\n  }\r\n\r\n  getAllParentJobTitles(jobId: number) {\r\n    return this.get<IResponse<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_ParentJobtitle\",\r\n      {\r\n        params: {\r\n          Jobid: jobId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getById(Id: number) {\r\n    return this.get<IResponse<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${Id}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getDetailsById(Id: number) {\r\n    return this.get<IResponse<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${Id}`,\r\n          $expand: `${db.Core_Job_Title_Family},${db.parentJobTitle},${db.core_Grade},${db.core_Job_Description},${db.core_Job_Title_KPI}.${db.core_KPI}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllByOrgId(organizationId: number) {\r\n    return this.get<IResponse<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll\",\r\n      {\r\n        params: {\r\n          $expand: db.Core_Org_Job_Title,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res: IResponse<IJobTitleModel[]>) => {\r\n        let data: IJobTitleModel[] = [];\r\n        res.data.map((job) =>\r\n          job.core_Org_Job_Title.forEach((org) => {\r\n            if (org.org_ID == organizationId) {\r\n              data.push(job);\r\n            }\r\n          })\r\n        );\r\n\r\n        // res.data = res.data.filter(\r\n        //   (job) => {\r\n        //     job.core_Org_Job_Title.find(e => e.org_ID == organizationId)?.org_ID == organizationId;\r\n        //     //job.core_Org_Job_Title.find(e => e.org_ID == organizationId);\r\n        //     console.log(job.core_Org_Job_Title.find(e => e.org_ID == organizationId)?.org_ID == organizationId);\r\n        //   },\r\n        // );\r\n        res.data = data;\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"OrgManagement/JobTitle/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IJobTrainingPathDeleteRequest,\r\n  IJobTrainingPathModel,\r\n  IJobTrainingPathPriorityModel,\r\n  IJobTrainingPathRequest,\r\n} from \"app/org-management/model/job-title\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobTrainingPathService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IJobTrainingPathRequest) {\r\n    return this.post<IResponse<IJobTrainingPathModel>>(\r\n      \"OrgManagement/jobtitle/Create_JobTitleTrainingPath\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllByJobTitleId(jobId: number) {\r\n    return this.get<IResponse<IJobTrainingPathModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_JobTitleTrainingPath\",\r\n      {\r\n        params: {\r\n          $filter: `joB_Title_ID eq ${jobId}`,\r\n          $expand: `${db.trA_Course},${db.comm_Priority}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IJobTrainingPathDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"OrgManagement/jobtitle/Delete_JobTitleTrainingPath\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllPriority() {\r\n    return this.get<IResponse<IJobTrainingPathPriorityModel[]>>(\r\n      \"Priority/GetAll\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IOrgLocationModel, IOrgLocationRequest } from \"app/org-management/model/location\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class OrgLocationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IOrgLocationRequest) {\r\n    return this.post<IResponse<IOrgLocationModel>>(\r\n      \"OrgManagement/Location/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IOrgLocationRequest) {\r\n    return this.post<IResponse<IOrgLocationModel>>(\r\n      \"OrgManagement/Location/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IOrgLocationModel[]>>(\r\n      \"OrgManagement/Location/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(govId: number, countryId: number) {\r\n    return this.get<IResponse<IOrgLocationModel[]>>(\r\n      \"OrgManagement/Location/GetAll\",\r\n      {\r\n        params: this.getFilter(govId, countryId)\r\n      }\r\n    ).pipe(\r\n      map(res => {\r\n        res.data.map(location => {\r\n          location.ar_Name = location.location;\r\n          location.en_Name = location.location;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"OrgManagement/Location/Delete\", {\r\n      params: {Id: id},\r\n    });\r\n  }\r\n\r\n\r\n  getFilter(govId: number, countryId: number) {\r\n    if (govId > 0) return {$filter: `governament_ID eq ${govId}`};\r\n    if (countryId > 0) return {$filter: `country_ID  eq ${countryId}`};\r\n    else return;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IOrganizationModel } from \"app/system-setup/org-management-setup/models/organizations\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IOrgStructureAddRequest,\r\n  IOrgStructureEditRequest,\r\n  IOrgStructureModel,\r\n  IOrgStructureNodeDeleteParams,\r\n  IOrgStructureNodeModel,\r\n  IOrgStructureNodeRequest,\r\n} from \"../../model/org-structure\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class OrgStructureService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IOrgStructureAddRequest) {\r\n    return this.post<IResponse<IOrgStructureModel>>(\r\n      \"OrgStructure/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IOrgStructureEditRequest) {\r\n    return this.post<IResponse<IOrgStructureModel>>(\"OrgStructure/Edit\", data);\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IOrgStructureModel[]>>(\r\n      \"OrgStructure/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IOrgStructureModel[]>>(\"OrgStructure/GetAll\");\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<IOrgStructureModel[]>>(\"OrgStructure/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${id}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  getByIdWithHierarchy(id: number) {\r\n    return this.get<IResponse<IOrgStructureModel[]>>(\r\n      \"OrgStructure/GetAll_WithHireicky\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${id}`,\r\n          $expand: `${db.Core_Org_Structure_Org}/${db.Core_Org_TYPE},${db.Core_Org_Structure_Org}/${db.core_Org}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"OrgStructure/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  // structure nodes\r\n\r\n  createNode(data: IOrgStructureNodeRequest) {\r\n    return this.post<IResponse<IOrgStructureNodeModel>>(\r\n      \"OrgStructure/Create_Nodes\",\r\n      data\r\n    );\r\n  }\r\n\r\n  // updateNode(data: IOrgStructureNodeRequest) {\r\n  //   return this.post<IResponse<IOrgStructureNodeModel>>(\r\n  //     \"OrgStructure/Edit_Nodes\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  DeleteNode(params: IOrgStructureNodeDeleteParams) {\r\n    return this.delete<IResponse>(\"OrgStructure/Delete_Nodes\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  // current companies by business id\r\n  getCurrentCompaniesByBusinessId(BusinessId: number) {\r\n    return this.get<IResponse<IOrganizationModel[]>>(\r\n      \"OrgStructure/GetCurrentStructureCompnies\",\r\n      {\r\n        params: {\r\n          Business_Entity_ID: BusinessId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  ICustomPolicyResponse,\r\n  IDeletePolicyGroupDetail,\r\n  IIntersectionEmpRequest,\r\n  IPolicyGroupDetailModel,\r\n  IPolicyGroupIndexModel,\r\n  IPolicyGroupModel,\r\n  IPolicyGroupRequest,\r\n  IPolicyGroupType,\r\n  LoadPoliciesParams,\r\n} from \"app/org-management/model/policy-group\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PolicyGroupService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IPolicyGroupRequest) {\r\n    return this.post <ICustomPolicyResponse>(\r\n      \"OrgManagement/PolicyGroup/Create\", data\r\n    );\r\n  }\r\n\r\n  edit(data: IPolicyGroupRequest) {\r\n    return this.post<ICustomPolicyResponse>(\r\n      \"OrgManagement/PolicyGroup/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IPolicyGroupModel[]>>(\r\n      \"OrgManagement/PolicyGroup/GetAll\",\r\n      {\r\n        params: {\r\n          $expand: db.core_PolicyGroup_Type,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getById(policyGroupId?: number) {\r\n    return this.get<IResponse<IPolicyGroupModel[]>>(\r\n      \"OrgManagement/PolicyGroup/GetAll\",\r\n      {\r\n        params: {\r\n          $expand: db.core_PolicyGroup_Type,\r\n          $filter: `id eq ${policyGroupId}`\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IPolicyGroupIndexModel[]>>(\r\n      \"OrgManagement/PolicyGroup/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"OrgManagement/PolicyGroup/Delete\", {\r\n      params: {Id: Id},\r\n    });\r\n  }\r\n\r\n  saveIntersectionEmployees(data: IIntersectionEmpRequest[]) {\r\n    return this.post<IResponse<any>>(\r\n      \"OrgManagement/PolicyGroup/SaveIntersectionEmployees\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getDetailsList(params: IPageParams, PolicyGroupId: number) {\r\n    return this.get<IResponseList<IPolicyGroupDetailModel[]>>(\r\n      \"OrgManagement/PolicyGroup/PolicyGroupGroupingDetail\", {\r\n        params: {...params, PolicyGroupId: PolicyGroupId}\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteDetails(params: IDeletePolicyGroupDetail) {\r\n    return this.delete<IResponse>(\"OrgManagement/PolicyGroup/DeletePolicyGroupGroupingDetail\", {\r\n      params: {\r\n        PolicyGroupId: params.PolicyGroupId,\r\n        itemId: params.itemId,\r\n        gropingType: params.gropingType\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  loadPolicies(params: LoadPoliciesParams) {\r\n    return this.get<IResponse<IPolicyGroupModel[]>>(\r\n      \"OrgManagement/PolicyGroup/loadPolicies\",\r\n      {\r\n        params: params,\r\n        //params: this.loadPoliciesParams(params),\r\n      }\r\n    );\r\n  }\r\n\r\n  getPolicesByCompany(params: { compId: number }) {\r\n    return this.get<IResponse<IPolicyGroupModel[]>>(\r\n      \"OrgManagement/PolicyGroup/GetPoliceiesByCompany\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  loadPoliciesParams(params: LoadPoliciesParams) {\r\n    if (params.orgId) {\r\n      return {orgId: params.orgId};\r\n    }\r\n    if (params.jobTitleId) {\r\n      return {jobTitleId: params.jobTitleId};\r\n    }\r\n    if (params.locatonId) {\r\n      return {locatonId: params.locatonId};\r\n    }\r\n  }\r\n\r\n\r\n  getAllPolicyGroupType() {\r\n    return this.get<IResponse<IPolicyGroupType[]>>(\r\n      \"OrgManagement/PolicyGroup/GetAllPolicyGroupType\");\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll().pipe(\r\n      map((res) => {\r\n       // res.data = policyGroupDisplay(res.data);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IPaymentModel } from \"../models/payment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PaymentService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  GetAll() {\r\n    return this.get<IResponse<IPaymentModel[]>>(\"Payment/GetAll\");\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IPayVariable } from \"../models/variables\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class VariablesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  GetAllByPaymentId(paymentId: number) {\r\n    return this.get<IResponse<IPayVariable[]>>(\r\n      \"Payment/GetAll_Varaible_By_PaymentID\",\r\n      {\r\n        params: {\r\n          Payment_ID: paymentId,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res: IResponse<IPayVariable[]>) => {\r\n        res.data.map((ele: IPayVariable) => {\r\n          ele.ar_Name = ele.arName;\r\n          ele.en_Name = ele.name;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ISaveEmpGeneralInfo} from \"app/personnel-setup/models/employees\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"app-employee-general-info-dialog\",\r\n\ttemplateUrl: \"./emp-general-info-dialog.component.html\",\r\n\tstyleUrls: [\"./emp-general-info-dialog.component.scss\"],\r\n})\r\nexport class EmployeeGeneralInfoDialogComponent extends AppHelpers implements OnInit {\r\n\temployeeId: number = 0;\r\n\tconstructor(public dialogRef: MatDialogRef<EmployeeGeneralInfoDialogComponent>) {\r\n\t\tsuper();\r\n\t\tthis.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\t}\r\n\r\n\tngOnInit(): void {}\r\n\r\n\tonSave(data: ISaveEmpGeneralInfo) {\r\n\t\tthis.dialogRef.close({ isUpdate: data.isUpdate, data: data.data });\r\n\t}\r\n}\r\n","<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n\t<h4>\r\n\t\t<page-title class=\"d-inline-block mtop-5\" title=\"generalInfo\"> </page-title>\r\n\t</h4>\r\n\r\n\t<button mat-icon-button class=\"float-right mb-1 mr-1\" [mat-dialog-close]=\"null\">\r\n\t\t<i class=\"pi pi-times\"></i>\r\n\t</button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0 h-100\" #dialogContainer>\r\n\t<emp-general-info-form [isGeneral]=\"true\" (onSave)=\"onSave($event)\"> </emp-general-info-form>\r\n</mat-dialog-content>\r\n","import { Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { SwalComponent } from \"@sweetalert2/ngx-sweetalert2\";\r\nimport {\r\n  IEmployee,\r\n  IEmployeeRequest,\r\n  ISaveEmpGeneralInfo,\r\n  ISharedCompaniesRequest,\r\n} from \"app/personnel-setup/models/employees\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeesService } from \"app/personnel-setup/services/employees/employees.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { AssetsManager } from \"app/shared/resources/assets-manager\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { SweetAlertService } from \"app/shared/services/sweet-alert.service\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"emp-general-info-form\",\r\n  templateUrl: \"./emp-general-info-form.component.html\",\r\n  styleUrls: [\"./emp-general-info-form.component.scss\"],\r\n})\r\nexport class EmpGeneralInfoFormComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  employee: IEmployee;\r\n  @Input() isGeneral: boolean;\r\n  @Input() isPersonal: boolean;\r\n  @Input() isSocialInsurance: boolean;\r\n  @Input() isBlood_type: boolean;\r\n  @Output() onSave = new EventEmitter<ISaveEmpGeneralInfo>();\r\n  @ViewChild(\"Swal\") public readonly swal!: SwalComponent;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  disabledIds: number[] = [];\r\n  existingEmployee: IEmployee;\r\n  assetsManager = new AssetsManager();\r\n\r\n  constructor(\r\n    private employeesService: EmployeesService,\r\n    private empGeneralInfoService: EmpGeneralInfoService,\r\n    private sweetService: SweetAlertService,\r\n    @Inject(MAT_DIALOG_DATA) public dataFromDropdown: ICreateDialog,\r\n    public dialogRef: MatDialogRef<EmpGeneralInfoFormComponent>,\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employee = this.empGeneralInfoService.employee$.getValue();\r\n    this.empGeneralInfoService.employee$.subscribe((emp) => {\r\n      this.employee = emp;\r\n      // Edit Mode\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      code: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      CompanyCode: [null],\r\n      gender_ID: [null],\r\n      external_Code: [null],\r\n      nationalid: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          CustomValidator.whiteSpace,\r\n          CustomValidators.number,\r\n          CustomValidator.Length(Constants.nationalId),\r\n        ],\r\n      ],\r\n      religioN_ID: [null],\r\n      dob: [null], // isPersonal\r\n      hireDate: [null, [Validators.required, CustomValidators.date]],\r\n      blooD_TYPE_ID: [null], // isBlood_type\r\n      insurance_Years: [null], // isInsurance\r\n      insurance_No: [null], // isInsurance\r\n      nationality: [null],\r\n      country: [null], // isPersonal\r\n      isShared: [false],\r\n      isMainCompany: [false],\r\n      companyIds: [null],\r\n      SharedCompanies: [this.fb.array([])],\r\n    });\r\n\r\n    // Insurance Info section Validation\r\n    if (this.isSocialInsurance) {\r\n      this.formCtrls.insurance_Years.addValidators([Validators.required, CustomValidators.number]);\r\n      this.formCtrls.insurance_No.addValidators([Validators.required]);\r\n    }\r\n\r\n    // Personal Info section Validation\r\n    if (this.isPersonal) {\r\n      this.formCtrls.dob.addValidators([Validators.required, CustomValidators.date]);\r\n      // this.formCtrls.country.addValidators([Validators.required]);\r\n    }\r\n\r\n    // Blood Type section Validation\r\n    if (this.isBlood_type) {\r\n      this.formCtrls.blooD_TYPE_ID.addValidators([Validators.required]);\r\n    }\r\n\r\n    // Edit Mode\r\n    if (this.employee?.person?.id) {\r\n      this.employeeId = this.employee?.person?.id;\r\n      this.employeeToEdit(this.employee);\r\n    }\r\n\r\n    // to change dropdown (company, business) > use dynamic\r\n    if (this.dataFromDropdown?.value) {\r\n      this.isGeneral = true;\r\n      this.formCtrls.ar_Name.setValue(this.dataFromDropdown.value);\r\n      this.formCtrls.en_Name.setValue(this.dataFromDropdown.value);\r\n    }\r\n\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const sharedCompanies: ISharedCompaniesRequest[] = [];\r\n      this.formCtrls.companyIds?.value?.forEach((company) => {\r\n        sharedCompanies.push({company_Id: company, isDefaultCompany: false});\r\n      });\r\n      const model: IEmployeeRequest = {\r\n        person: {\r\n          id: this.form.value.id,\r\n          ar_Name: this.form.value.ar_Name,\r\n          en_Name: this.form.value.en_Name,\r\n          code: this.form.value.code,\r\n          external_Code: this.form.value.external_Code,\r\n          gender_ID: this.form.value.gender_ID,\r\n          blooD_TYPE_ID: this.form.value.blooD_TYPE_ID,\r\n          dob: HelpersFunctions.mapDateReverse(this.form.value.dob),\r\n          hireDate: HelpersFunctions.mapDateReverse(this.form.value.hireDate),\r\n          insurance_Years: this.form.value.insurance_Years,\r\n          insurance_No: this.form.value.insurance_No,\r\n          nationalid: this.form.value.nationalid,\r\n          religioN_ID: this.form.value.religioN_ID,\r\n        },\r\n        companyCode: this.form.value.CompanyCode,\r\n        nationality: this.form.value.nationality ? {id: this.form.value.nationality} : null,\r\n        country: this.form.value.country ? {id: this.form.value.country} : null,\r\n        sharedCompanies: sharedCompanies,\r\n      };\r\n\r\n      model.person.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n    // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeRequest) {\r\n    this.showLoading(\"emp-general-info\");\r\n    this.employeesService.create(model).subscribe((res: IResponse<IEmployeeRequest>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.employeeId = res.data.person.id;\r\n        this.onSave.emit({\r\n          isUpdate: false,\r\n          data: res.data,\r\n          isGeneral: this.isGeneral,\r\n          isPersonal: this.isPersonal,\r\n          isInsurance: this.isSocialInsurance,\r\n        });\r\n        if (this.dataFromDropdown.isDialog) this.dialogRef.close();\r\n      }\r\n      else {\r\n        res?.message?.messages.forEach((msg) => {\r\n          if (msg.code == 200) {\r\n            // code(200) employee Exist and Resigned in anthor company\r\n            this.getExistingEmployee(msg.refrenceID);\r\n          }\r\n        });\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n      this.hideLoading(\"emp-general-info\");\r\n    });\r\n  }\r\n\r\n  update(model: IEmployeeRequest) {\r\n    this.showLoading(\"emp-general-info\");\r\n    this.employeesService.update(model).subscribe((res: IResponse<IEmployeeRequest>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.empGeneralInfoService.getEmployeeShared(this.employeeId);\r\n        this.onSave.emit({\r\n          isUpdate: true,\r\n          data: res.data,\r\n          isGeneral: this.isGeneral,\r\n          isPersonal: this.isPersonal,\r\n          isInsurance: this.isSocialInsurance,\r\n        });\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading(\"emp-general-info\");\r\n    });\r\n  }\r\n\r\n  employeeToEdit(employee: IEmployee) {\r\n    this.form.patchValue(employee.person);\r\n    this.formCtrls.nationality.setValue(employee.nationality?.id);\r\n    this.formCtrls.country.setValue(employee.country?.id);\r\n    this.formCtrls.CompanyCode.setValue(employee.companyCode);\r\n    this.formCtrls.isShared.setValue(employee.isShared);\r\n    this.formCtrls.isMainCompany.setValue(employee.isMainCompany);\r\n    let sharedCompanies: number[] = [];\r\n    employee.sharedCompanies.forEach((company) => {\r\n      sharedCompanies.push(company.company_Id);\r\n      this.formCtrls.companyIds.setValue(sharedCompanies);\r\n      if (company.isDefaultCompany) this.disabledIds.push(company.company_Id);\r\n    });\r\n  }\r\n\r\n  // if this employee Exist in anthor company and Resigned,\r\n  getExistingEmployee(employeeId: number) {\r\n    this.empGeneralInfoService\r\n      .getEmployee(employeeId, {stopCompanyFilter: true})\r\n      .subscribe((res: IResponse<IEmployee>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.existingEmployee = res.data;\r\n          this.swal.swalOptions = this.swalOptions;\r\n          this.swal.fire();\r\n        }\r\n      });\r\n  }\r\n\r\n  // if this employee Exist in anthor company and Resigned, return to current company\r\n  ShareToCurrentCompany(personelId: number) {\r\n    this.empGeneralInfoService.shareToCurrentCompany(personelId).subscribe((res) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.onSave.emit({\r\n          isUpdate: null,\r\n          data: null,\r\n          isGeneral: this.isGeneral,\r\n          isPersonal: this.isPersonal,\r\n          isInsurance: this.isSocialInsurance,\r\n        });\r\n        let url = `/personnel-setup/${this.moduleId}/employees/edit/${personelId}`;\r\n        this.router.navigate([url], {queryParams: this.parentParam});\r\n      }\r\n    });\r\n  }\r\n\r\n  swalOptions = {\r\n    confirmButtonText: this.translate(\"goEmployee\"),\r\n    cancelButtonText: this.translate(\"General.cancel\"),\r\n    ...this.sweetService.customSwalOptions,\r\n  };\r\n\r\n  // clearForm() {\r\n  // \tif (this.employeeId == 0)\r\n  // \t\tthis.form.reset({\r\n  // \t\t\tid: 0,\r\n  // \t\t\tSharedCompanies: false,\r\n  // \t\t\tbusinessIds: [this.businessCompanyParams.BusinessEntityID],\r\n  // \t\t\tcompanyIds: [this.businessCompanyParams.CompanyID],\r\n  // \t\t});\r\n  // \telse this.employeeToEdit();\r\n  // \tthis.submitted = false;\r\n  // \t// console.log(this.form.value);\r\n  // }\r\n}\r\n","<ngx-spinner [name]=\"'emp-general-info'\"></ngx-spinner>\r\n\r\n\r\n<form [formGroup]=\"form\" #dialogContainer>\r\n  <!--START: General Info Section -->\r\n  <ng-container *ngIf=\"isGeneral\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.code\"\r\n          [submitted]=\"submitted\"\r\n          label=\"employeeCode\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.CompanyCode\"\r\n          [submitted]=\"submitted\"\r\n          label=\"CompanyCode\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.ar_Name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"ar_Name\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.en_Name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"en_Name\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.hireDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"hireDate\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-gender-dropdown\r\n          [control]=\"formCtrls.gender_ID\"\r\n          [submitted]=\"submitted\"\r\n          [appendTo]=\"dialogContainer\"\r\n        >\r\n        </app-gender-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <religion-dropdown\r\n          [control]=\"formCtrls.religioN_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        >\r\n        </religion-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-nationality-dropdown\r\n          [control]=\"formCtrls.nationality\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-nationality-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.nationalid\"\r\n          [submitted]=\"submitted\"\r\n          label=\"nationalid\">\r\n          <ng-container class=\"msg-after\">{{ (formCtrls.nationalid.value?.length ?? 0) + \"/\" + 14 }}</ng-container>\r\n        </app-input>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-4 col-sm-12 ptop-15 pbottom-15\">\r\n        <app-check-box\r\n          [control]=\"formCtrls.isShared\"\r\n          label=\"SharedCompanies\"\r\n          color=\"primary\"\r\n        >\r\n        </app-check-box>\r\n      </div>\r\n      <ng-container *ngIf=\"formCtrls.isShared.value\">\r\n        <div class=\"col-lg-4 col-sm-6 col-12\">\r\n          <company-by-businessId-dropdown\r\n            [control]=\"formCtrls.companyIds\"\r\n            [submitted]=\"submitted\"\r\n            [multi]=\"true\"\r\n            [appendTo]=\"dialogContainer\"\r\n            [disabledIds]=\"disabledIds\"\r\n            [disable]=\"employeeId > 0 && !employee?.isMainCompany\"\r\n          >\r\n          </company-by-businessId-dropdown>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <!--START: Personal Info Section -->\r\n  <ng-container *ngIf=\"isPersonal\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.dob\"\r\n          [submitted]=\"submitted\"\r\n          label=\"dob\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-sm-6 col-12\">\r\n        <app-country-dropdown\r\n          [control]=\"formCtrls.country\"\r\n          [submitted]=\"submitted\"\r\n          label=\"country\"\r\n          [appendTo]=\"dialogContainer\"\r\n          filter=\"true\"\r\n        >\r\n        </app-country-dropdown>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <!--START: Social Insurance Section -->\r\n  <ng-container *ngIf=\"isSocialInsurance\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.insurance_No\"\r\n          [submitted]=\"submitted\"\r\n          label=\"insurance_No\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.insurance_Years\"\r\n          [submitted]=\"submitted\"\r\n          label=\"insurance_Years\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <!--START: Medical Insurance Section [Blood Type]-->\r\n  <ng-container *ngIf=\"isBlood_type\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-lg-4 col-sm-6 col-12\">\r\n        <app-blood-type-dropdown\r\n          [control]=\"formCtrls.blooD_TYPE_ID\"\r\n          [submitted]=\"submitted\"\r\n        >\r\n        </app-blood-type-dropdown>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</form>\r\n\r\n<mat-dialog-actions class=\"border-0\" align=\"end\">\r\n  <submit-btn label=\"General.save\"\r\n              (onClick)=\"submit()\"\r\n              [disabled]=\"!employeeId && !isGeneral\"\r\n              [color]=\"btn.darkBlue\"\r\n              icon=\"fas fa-save\"\r\n              [iconPositionBefore]=\"false\">\r\n  </submit-btn>\r\n\r\n  <!-- <button mat-raised-button [mat-dialog-close]=\"null\" class=\"btn bg-light-secondary\">\r\n    {{ \"General.close\" | translate }}\r\n  </button> -->\r\n</mat-dialog-actions>\r\n\r\n\r\n<!--  START: if Existing Employee -->\r\n<swal\r\n  #Swal\r\n  title=\"{{ 'EmployeeExistingBefore' | translate }}\"\r\n  icon=\"error\"\r\n  (confirm)=\"ShareToCurrentCompany(existingEmployee.person.id)\"\r\n>\r\n  <div *swalPortal class=\"media\">\r\n    <img\r\n      [src]=\"fileService.preview(existingEmployee.img) ?? assetsManager.avatar\"\r\n      alt=\"profile-img\"\r\n      class=\"rounded mr-3\"\r\n      height=\"64\"\r\n      width=\"64\"\r\n    />\r\n    <div class=\"media-body\">\r\n      <div\r\n        class=\"col-12 d-flex flex-sm-row flex-column justify-content-start px-0 mb-sm-2\"\r\n      >\r\n        <h6 class=\"mb-sm-0 dark\">\r\n          {{\r\n            msgTranslate(\r\n              existingEmployee?.person?.ar_Name,\r\n              existingEmployee?.person?.en_Name\r\n            )\r\n          }}\r\n        </h6>\r\n      </div>\r\n      <p class=\"text-muted mb-0 mt-1 mt-sm-0\">\r\n        <span class=\"mb-sm-0 d-block text-left\">\r\n          {{ existingEmployee?.person?.nationalid }}\r\n        </span>\r\n        <span class=\"mb-sm-0 d-block text-left\">\r\n          <ng-container *ngIf=\"existingEmployee?.sharedCompanies\">\r\n            <span\r\n              *ngFor=\"\r\n                let company of existingEmployee.sharedCompanies;\r\n                let last = last\r\n              \"\r\n            >\r\n              {{\r\n                msgTranslate(\r\n                  company?.core_Company.ar_Name,\r\n                  company?.core_Company?.en_Name\r\n                )\r\n              }}\r\n              <span *ngIf=\"!last\"> - </span>\r\n            </span>\r\n          </ng-container>\r\n        </span>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</swal>\r\n","import { Component, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges, } from \"@angular/core\";\r\nimport { IPerson } from \"app/personnel-setup/models/employees\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { EmployeesService } from \"app/personnel-setup/services/employees/employees.service\";\r\nimport { IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"app-employee-select-table\",\r\n  templateUrl: \"./employee-select-table.component.html\",\r\n  styleUrls: [\"./employee-select-table.component.scss\"]\r\n})\r\nexport class EmployeeSelectTableComponent extends AppHelpers implements OnChanges, OnDestroy {\r\n  @Input() reset: boolean;\r\n  @Output() onSelect = new EventEmitter<IPerson[]>();\r\n  @Output() length = new EventEmitter<number>();\r\n  employeeList: IPerson[] = [];\r\n  selectedItemsList: IPerson[] = [];\r\n  // is table vars\r\n  mandatoryColomns: string[] = [\r\n    \"employee\",\r\n    Constants.selectColName,\r\n  ];\r\n  dataSource: MatTableDataSource<IPerson>;\r\n  isLoaded: boolean = false;\r\n\r\n\r\n  constructor(private employeeServ: EmployeesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.reset) {\r\n      this.dataSource?.data.map(e => e.isSelected = false);\r\n      this.selectedItemsList = [];\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    }\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.employeeServ\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IPerson[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data.map((e: any | IPerson) => e.employee = msgTranslate(e.ar_Name, e.en_Name));\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n          this.length.emit(res.meta.totalItemCount);\r\n          this.isLoaded = true;\r\n\r\n          // check selected items\r\n          this.selectedItemsList.forEach(selected => {\r\n            let item = this.dataSource.data.find(x => x.id == selected.id);\r\n            if (item) {\r\n              item.isSelected = true;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  selectedItems(list: IPerson[]) {\r\n    this.dataSource.data.map((ele, index) => {\r\n      // search if item selected before\r\n      let i = this.selectedItemsList.findIndex(x => x.id == ele.id);\r\n\r\n      // START: select & unselect items\r\n      if (ele.isSelected) {\r\n        if (i < 0) {\r\n          this.selectedItemsList.push(ele);\r\n        }\r\n      }\r\n      else if (i >= 0) {\r\n        this.selectedItemsList.splice(i, 1);\r\n        ele.isSelected = false;\r\n      }\r\n    });\r\n    this.onSelect.emit(this.selectedItemsList);\r\n  }\r\n\r\n\r\n  // onChange(jobTitle: IPerson[]) {\r\n  //   this.change.emit(jobTitle);\r\n  // }\r\n\r\n  ngOnDestroy() {\r\n    this.length.emit(0);\r\n  }\r\n}\r\n","<app-material-table [isLoaded]=\"isLoaded\"\r\n                    [dataSource]=\"dataSource\"\r\n                    [mandatoryColomns]=\"mandatoryColomns\"\r\n                    [optionalColomns]=\"[]\"\r\n                    [page]=\"page\"\r\n                    [showPaginator]=\"true\"\r\n                    [showSpaceTop]=\"false\"\r\n                    [isDialogSize]=\"false\"\r\n                    class=\"table-in-forms\"\r\n                    checkboxColumnName=\"isSelected\"\r\n                    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                    (selectedItems)=\"selectedItems($event)\">\r\n</app-material-table>\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IEmpWorkExperienceDisplay,\r\n  IEmpWorkExperienceModel,\r\n} from \"app/personnel-setup/models/employee-career/emp-work-experience\";\r\nimport {Idropdown} from \"app/shared/interfaces/dropdown.interface\";\r\nimport {IEmployeeEducationModel} from \"app/personnel-setup/models/employee-career/emp-education\";\r\n\r\nexport function empCareerDisplay(\r\n  data: IEmpWorkExperienceModel[]\r\n): IEmpWorkExperienceDisplay[] {\r\n  return data.map((work) => {\r\n    return <IEmpWorkExperienceDisplay>{\r\n      ...work,\r\n      id: work.id,\r\n      companyName: work.companyName,\r\n      department: work.org_Name,\r\n      position: work.job_Title_Name,\r\n      startDate: HelpersFunctions.mapDate(work.from_Date),\r\n      endDate: HelpersFunctions.mapDate(work.to_Date),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empEducationDisplay(\r\n  data: IEmployeeEducationModel[]\r\n): IEmployeeEducationModel[] {\r\n  return data.map((education) => {\r\n    return <IEmployeeEducationModel>{\r\n      ...education,\r\n      institution: msgTranslate(\r\n        education.comm_Institution?.ar_Name,\r\n        education.comm_Institution?.en_Name\r\n      ),\r\n      degree: msgTranslate(\r\n        education.comm_Education_Degree?.ar_Name,\r\n        education.comm_Education_Degree?.en_Name\r\n      ),\r\n      grade: msgTranslate(\r\n        education.comm_Grade_Type?.ar_Name,\r\n        education.comm_Grade_Type?.en_Name\r\n      ),\r\n      gpaGrade:\r\n        `${education.gpa ?? '-'} - ` +\r\n        msgTranslate(\r\n          education.comm_Grade_Type?.ar_Name,\r\n          education.comm_Grade_Type?.en_Name\r\n        ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empEducationYearMap(data: string[]): Idropdown[] {\r\n  return data.map((year) => {\r\n    return <Idropdown>{\r\n      id: year,\r\n      ar_Name: year,\r\n      en_Name: year,\r\n    };\r\n  });\r\n}\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { IEmployeeCardModel } from \"../models/employees\";\r\n\r\nexport function employeeToMap(\r\n  employees: IEmployeeCardModel[]\r\n): IEmployeeCardModel[] {\r\n  return employees.map((employee) => {\r\n    return <IEmployeeCardModel>{\r\n      id: employee.id,\r\n      code: employee.code,\r\n      en_Name: employee.en_Name,\r\n      ar_Name: employee.ar_Name,\r\n      email: employee.email,\r\n      isActive: employee.isActive,\r\n      //...employee,\r\n      jobTitleName: msgTranslate(\r\n        employee.jobTitleNameAr,\r\n        employee.jobTitleName\r\n      ),\r\n      organization: msgTranslate(\r\n        employee.organizationAr,\r\n        employee.organization\r\n      ),\r\n      status: msgTranslate(employee.statusAr, employee.status),\r\n      statusProperty: msgTranslate(\r\n        employee.statusPropertyAr,\r\n        employee.statusProperty\r\n      ),\r\n      contact: employee.contacts.map((contact) => contact.value).join(\", \"),\r\n      address: employee.addresses.join(\", \"),\r\n      img: employee.img == \"/\" ? \"\" : employee.img,\r\n      manageSolidEmpNo: employee.solidEmp?.length ?? 0,\r\n      manageDotesEmpNo: employee.dotesEmp?.length ?? 0,\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IAttendancePlanModel } from \"app/system-setup/attendance-setup/models/plan\";\r\nimport { IAssignPlanEmployeesRequest } from \"app/personnel-setup/models/assign-plan\";\r\nimport { IEmployeeWorkScheduleModel } from \"app/personnel-setup/models/emp-employment-info/work-schedule\";\r\nimport { IPersonInstanceModel } from \"app/personnel-setup/models/employees\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AssignPlanService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getPlansByPolicyGroup(policyGroupId: number) {\r\n    return this.get<IResponse<IAttendancePlanModel[]>>(\r\n      \"Personnel/Employees/GetPlanByPolicyGroup\",\r\n      {\r\n        params: { PolicyGroupID: policyGroupId },\r\n      }\r\n    );\r\n  }\r\n\r\n  getEmployeesByPolicyGroup(policyGroupId: number) {\r\n    return this.get<IResponse<IPersonInstanceModel[]>>(\r\n      \"Personnel/Employees/GetEmployeesByPolicyGroup\",\r\n      {\r\n        params: { PolicyGroupID: policyGroupId },\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(planId: number, params: IPageParams) {\r\n    return this.get<IResponse<IEmployeeWorkScheduleModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeAttendencePlan\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Plan_ID eq ${planId}`,\r\n          $expand: `${db.att_Plan},${db.Core_Person_Instance}.${db.Core_Person}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  create(data: IAssignPlanEmployeesRequest) {\r\n    return this.post<IResponse<IEmployeeWorkScheduleModel>>(\r\n      \"Personnel/Employees/Create_Many_EmployeeAttendencePlan\",\r\n      data\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    // return this.getAll();\r\n  }\r\n}\r\n","import { db } from \"app/shared/resources/database-tabels\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEditEmployeeEducationRequest,\r\n  IEmployeeEducationDeleteParams,\r\n  IEmployeeEducationModel,\r\n  IEmployeeEducationRequest,\r\n} from \"app/personnel-setup/models/employee-career/emp-education\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeEducationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeEducationRequest) {\r\n    return this.post<IResponse<IEmployeeEducationModel>>(\r\n      \"Personnel/Employees/Create_EmployeeEducation\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEditEmployeeEducationRequest) {\r\n    return this.post<IResponse<IEmployeeEducationModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeEducation\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeEducationModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeEducation\",\r\n      {\r\n        params: {\r\n          $filter: `PersonID eq ${employeeId}`,\r\n          $expand: `${db.comm_Education_Degree},${db.comm_Institution},${db.comm_Grade_Type}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(employeeId: number, params: IPageParams) {\r\n    return this.get<IResponse<IEmployeeEducationModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeEducation\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `PersonID eq ${employeeId}`,\r\n          $expand: `${db.comm_Education_Degree},${db.comm_Institution},${db.comm_Grade_Type}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmployeeEducationDeleteParams) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeEducation\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllYears() {\r\n    return this.get<IResponse<string[]>>(\"Personnel/Employees/GetYears\");\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IEmployeeRequest,\r\n  IPerson,\r\n  IEmployeeCardModel,\r\n  IEmployee,\r\n} from \"app/personnel-setup/models/employees\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { employeeToMap } from \"app/personnel-setup/mapper/employee\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ////////// employees index\r\n  getListCard(params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeCardModel[]>>(\r\n      \"personnel/Employees/GetList_EmployeesCard\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllCard() {\r\n    return this.get<IResponse<IEmployeeCardModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeesCard\"\r\n    ).pipe(\r\n      map((res: IResponse<IEmployeeCardModel[]>) => {\r\n        res.data = employeeToMap(res.data);\r\n        res.data.map((e) => {\r\n          delete e.img;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getEmployeeCardById(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeCardModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeesCard\",\r\n      {\r\n        params: {\r\n          $filter: `Person_Instance_ID eq ${employeeId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IPerson[]>>(\"Personnel/Employees/GetList\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IPerson[]>>(\"Personnel/Employees/GetAll\");\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<IPerson[]>>(\"Personnel/Employees/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${id}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Personnel/Employees/Delete\", {\r\n      params: {Id: Id},\r\n    });\r\n  }\r\n\r\n  create(data: IEmployeeRequest) {\r\n    return this.post<IResponse<IEmployee>>(\"Personnel/Employees/Create\", data);\r\n  }\r\n\r\n  update(data: IEmployeeRequest) {\r\n    return this.post<IResponse<IEmployeeRequest>>(\r\n      \"Personnel/Employees/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  // get all employees by structure and organization id\r\n\r\n  getAllByStructureAndOrgId(structureId: number, orgId: number) {\r\n    return this.get<IResponse<IPerson[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeByOrg\",\r\n      {\r\n        params: {\r\n          StructureId: structureId,\r\n          Org_ID: orgId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllSharedCompany(person_ID: number) {\r\n    return this.get<IResponse<IPerson[]>>(\r\n      \"Personnel/Employees/GetAll_SharedCompany\",\r\n      {params: {person_ID: person_ID}}\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAllCard();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ICustodyModel } from \"app/system-setup/org-management-setup/models/custodies\";\r\nimport {\r\n  IEmpCustodyModel,\r\n  IEmpCustodyRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/custodies\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeCustodiesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmpCustodyRequest) {\r\n    return this.post<IResponse<IEmpCustodyModel>>(\r\n      \"Personnel/Employees/Create_EmployeeCustodies\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmpCustodyRequest) {\r\n    return this.post<IResponse<IEmpCustodyModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeCustodies\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(personInstancId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmpCustodyModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeCustodies\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `personInstanceId eq ${personInstancId}`,\r\n          $expand: db.core_Covenant,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(personInstancId: number) {\r\n    return this.get<IResponse<IEmpCustodyModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeCustodies\",\r\n      {\r\n        params: {\r\n          $filter: `personInstanceId eq ${personInstancId}`,\r\n          $expand: db.core_Covenant,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeCustodies\",\r\n      {\r\n        params: { Id: Id },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllCustodiesForEmployee(personInstancId: number) {\r\n    return this.get<IResponse<ICustodyModel[]>>(\r\n      \"Personnel/Employees/GetAll_CovenantForEmp\",\r\n      {\r\n        params: {\r\n          personInstancId: personInstancId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {IAttachmentTypesModel} from 'app/system-setup/general-setup/models/attachment-types';\r\nimport {\r\n  IEmpHiringDocumentModel,\r\n  IEmpHiringDocumentDeleteRequest,\r\n} from 'app/personnel-setup/models/emp-employment-info/hiring-documents';\r\nimport {IPageParams} from 'app/shared/interfaces/params';\r\nimport {IResponse, IResponseList} from 'app/shared/interfaces/responces';\r\nimport {AppClientService} from 'app/shared/services/app-client.service';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeHiringDocumentService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: FormData) {\r\n    return this.post<IResponse<IEmpHiringDocumentModel>>(\r\n      \"Personnel/Employees/Create_EmployeeDocument\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: FormData) {\r\n    return this.post<IResponse<IEmpHiringDocumentModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeDocument\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeInstanceId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmpHiringDocumentModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeDocument\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `ID eq ${employeeInstanceId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeInstanceId: number) {\r\n    return this.get<IResponse<IEmpHiringDocumentModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeDocument\",\r\n      {\r\n        params: {\r\n          $filter: `ID eq ${employeeInstanceId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmpHiringDocumentDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeDocument\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  DeleteFile(empId: number, attachId: number) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_Attachment_EmployeeDocument\",\r\n      {\r\n        params: { perInsId: empId, AttachmentID: attachId },\r\n      }\r\n    );\r\n  }\r\n\r\n  // get document completion percentag\r\n  getCard(employeeInstanceId: number) {\r\n    return this.get<IResponse<number>>(\"Personnel/Employees/GetDocumentCard\", {\r\n      params: {\r\n        perId: employeeInstanceId,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAllAttachment(employeeInstanceId: number) {\r\n    return this.get<IResponse<IAttachmentTypesModel[]>>(\r\n      \"Personnel/Employees/GetAll_AttachmentType\",\r\n      {\r\n        params: {\r\n          perId: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IEmployee } from \"app/personnel-setup/models/employees\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { BehaviorSubject, Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { IEmpStatusCardDisplayModel } from \"app/personnel-setup/models/employee-employment-info\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmpGeneralInfoService extends AppClientService {\r\n  employee$ = new BehaviorSubject<IEmployee>(undefined);\r\n  static employeeStatusPosition$ = new BehaviorSubject<IEmpStatusCardDisplayModel>(undefined);\r\n  static employeeId$ = new BehaviorSubject<number>(undefined);\r\n  static employeeInstanceId$ = new BehaviorSubject<number>(undefined);\r\n  public cancelRequest$ = new Subject<void>();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getEmployeeShared(id: number, params?: { stopCompanyFilter: boolean }) {\r\n    this.employee$.next(null);\r\n    this.getEmployee(id, params)\r\n      .pipe(takeUntil(this.cancelRequest$))\r\n      .subscribe((res: IResponse<IEmployee>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n\r\n          this.employee$.next(res.data);\r\n          let employeeInstanceId = res.data.person.core_Person_Instance.filter(\r\n            (e) => e.person_Type_ID == 1\r\n          )[0].id;\r\n\r\n          if (employeeInstanceId != EmpGeneralInfoService.EmployeeInstanceId)\r\n            EmpGeneralInfoService.employeeInstanceId$.next(employeeInstanceId);\r\n        }\r\n      });\r\n  }\r\n\r\n  getEmployee(id: number, params?: { stopCompanyFilter: boolean }) {\r\n    return this.get<IResponse<IEmployee>>(\"Personnel/Employees/GetEmployee\", {\r\n      params: {\r\n        PerID: id,\r\n        $expand: `${db.CORE_GENDER},${db.Core_Religion},${db.Core_Blood_Type}`,\r\n        ...params,\r\n      },\r\n    });\r\n  }\r\n\r\n  shareToCurrentCompany(personelId: number) {\r\n    return this.post<IResponse>(\r\n      \"Personnel/Employees/ShareToCurrentCompany\",\r\n      null,\r\n      {\r\n        params: {\r\n          PerID: personelId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  public static get EmployeeId(): number {\r\n    return this.employeeId$.getValue();\r\n  }\r\n\r\n  public static get EmployeeInstanceId(): number {\r\n    return this.employeeInstanceId$.getValue();\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmployeeDependantModel,\r\n  IEmployeeDependantRequest,\r\n} from \"app/personnel-setup/models/emp-personal-info/dependants\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeDependantService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeDependantRequest) {\r\n    return this.post<IResponse<IEmployeeDependantModel>>(\r\n      \"Personnel/Employees/Create_EmployeeDependent\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmployeeDependantRequest) {\r\n    return this.post<IResponse<IEmployeeDependantModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeDependent\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeDependantModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeDependent\",\r\n      {\r\n        params: {\r\n          $filter: `Person_ID eq ${employeeId}`,\r\n          $expand: `${db.corE_Family_Relation}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(employeeId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeDependantModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeDependent\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_ID eq ${employeeId}`,\r\n          $expand: `${db.corE_Family_Relation}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeDependent\",\r\n      {\r\n        params: { Id: Id },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllFamilyRelationships() {\r\n    return this.get<IResponse<Idropdown[]>>(\r\n      \"Personnel/Employees/GetAll_Relations\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmployeeErpIntegrationModel,\r\n  IEmployeeErpIntegrationRequest,\r\n  IErpGroupCodeCustomerModel,\r\n  IErpGroupCodeVendorModel,\r\n  IErpResourceGroupModel,\r\n} from \"app/personnel-setup/models/emp-sap-integration/erp-integration\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeErpIntegrationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeErpIntegrationRequest) {\r\n    return this.post<IResponse<IEmployeeErpIntegrationModel>>(\r\n      \"Personnel/Employees/Create_ERP_Integration\",\r\n      data\r\n    );\r\n  }\r\n\r\n  // update(data: IEmployeeErpIntegrationRequest) {\r\n  //   return this.post<IResponse<IEmployeeErpIntegrationModel>>(\r\n  //     \"Personnel/Employees/Edit_ERP_Integration\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeErpIntegrationModel[]>>(\r\n      \"Personnel/Employees/GetAll_ERP_Integration\",\r\n      {\r\n        params: {\r\n          id: employeeId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  // Delete(Id: number) {\r\n  //   return this.delete<IResponse>(\r\n  //     \"Personnel/Employees/Delete_ERP_Integration\",\r\n  //     {\r\n  //       params: { Id: Id },\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  getAllErpGroupCodeVendor() {\r\n    return this.get<IResponse<IErpGroupCodeVendorModel[]>>(\r\n      \"Personnel/Employees/GroupCodeVendor\"\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: IErpGroupCodeVendorModel) => {\r\n          item.id = item.GroupCode;\r\n          item.ar_Name = item.GroupName;\r\n          item.en_Name = item.GroupName;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getAllErpGroupCodeCustomer() {\r\n    return this.get<IResponse<IErpGroupCodeCustomerModel[]>>(\r\n      \"Personnel/Employees/GroupCodeCustomer\"\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: IErpGroupCodeCustomerModel) => {\r\n          item.id = item.GroupCode;\r\n          item.ar_Name = item.GroupName;\r\n          item.en_Name = item.GroupName;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getAllErpResourceGroup() {\r\n    return this.get<IResponse<IErpResourceGroupModel[]>>(\r\n      \"Personnel/Employees/SAP_LoadResourceGroup\"\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: IErpResourceGroupModel) => {\r\n          item.id = item.GroupID;\r\n          item.ar_Name = item.GroupName;\r\n          item.en_Name = item.GroupName;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmployeeS4HanaModel,\r\n  IEmployeeS4HanaRequest,\r\n  IS4CostCenter,\r\n} from \"app/personnel-setup/models/emp-sap-integration/s4-hana\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeS4HanaService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeS4HanaRequest) {\r\n    return this.post<IResponse<IEmployeeS4HanaModel>>(\r\n      \"Personnel/Employees/Create_EmployeeS4CostCenter\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmployeeS4HanaRequest) {\r\n    return this.post<IResponse<IEmployeeS4HanaModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeS4CostCenter\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeS4HanaModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeS4CostCenter\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `person_Instance_ID eq ${employeeId}`,\r\n          $expand: db.s4_SystemInstance,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeS4HanaModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeS4CostCenter\",\r\n      {\r\n        params: {\r\n          $filter: `person_Instance_ID eq ${employeeId}`,\r\n          $expand: db.s4_SystemInstance,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeS4CostCenter\",\r\n      {\r\n        params: { Id: Id },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllS4CostCenterBySystemInstance(systemInstanceId: number) {\r\n    return this.get<IResponse<IS4CostCenter[]>>(\r\n      \"Personnel/Employees/GetAll_s4_LoadCostCenter\",\r\n      {\r\n        params: {\r\n          Systemins: systemInstanceId,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res) => {\r\n        // res.data = [\r\n        //   {\r\n        //     Cost_Center: \"19990220\",\r\n        //     CostCenterName: \"19990220-kkk\",\r\n        //     id: null,\r\n        //   },\r\n        // ];\r\n        res.data.map((item: IS4CostCenter) => {\r\n          item.id = item.Cost_Center;\r\n          item.ar_Name = item.CostCenterName;\r\n          item.en_Name = item.CostCenterName;\r\n          item.costCenter_Text =\r\n            item.CostCenterName.split(\"-\")[1] ?? item.CostCenterName;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IRecruitmentRequestDisplayModel,\r\n  IRecruitmentRequestModel,\r\n} from \"../models/recruitment-request\";\r\n\r\nexport function recruitmentRequestToDisplay(\r\n  data: IRecruitmentRequestModel[]\r\n): IRecruitmentRequestDisplayModel[] {\r\n  return data.map((request) => {\r\n    return <IRecruitmentRequestDisplayModel>{\r\n      id: request.request?.id,\r\n      jobTitle: msgTranslate(\r\n        request.job_Title?.ar_Name,\r\n        request.job_Title?.en_Name\r\n      ),\r\n      vacantPlaces: request.request?.emp_No,\r\n      fromDateExpected: HelpersFunctions.mapDate(request.request?.from_Date),\r\n      toDateExpected: HelpersFunctions.mapDate(request.request?.to_Date),\r\n      notes: request.request?.note,\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ICandidateCardListModel,\r\n  ICandidateGenaralIsDoneRequest,\r\n  ICandidateGenaralRequest,\r\n  ICandidateListModel,\r\n} from \"app/recruitment/models/candidate/candidate\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CandidateService extends AppClientService {\r\n  submitted$ = new BehaviorSubject<boolean>(false);\r\n  isDone$ = new BehaviorSubject<ICandidateGenaralIsDoneRequest>({\r\n    GeneralData: false,\r\n    MaritalData: false,\r\n    MilitaryData: false,\r\n    AddressData: false,\r\n    ContactData: false,\r\n    EducationData: false,\r\n    TrainingData: false,\r\n    CertificationData: false,\r\n    WorkExperincesData: false,\r\n    DocumentData: false,\r\n    RefrenceData: false,\r\n    JobInfoData: false,\r\n    relatedData: false,\r\n  });\r\n  candidateData$ = new BehaviorSubject<ICandidateGenaralRequest>({\r\n    GeneralData: null,\r\n    MaritalData: null,\r\n    MilitaryData: null,\r\n    AddressData: null,\r\n    ContactData: [],\r\n    EducationData: [],\r\n    TrainingData: [],\r\n    CertificationData: [],\r\n    WorkExperincesData: [],\r\n    DocumentData: [],\r\n    RefrenceData: [],\r\n    JobInfoData: [],\r\n    relatedData: [],\r\n  });\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // create(data: ICandidateRequest) {\r\n  //   return this.post<IResponse<ICandidateModel>>(\r\n  //     \"Recruitment/Candidate/Create\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  // update(data: ICandidateRequest) {\r\n  //   return this.post<IResponse<ICandidateModel>>(\r\n  //     \"Recruitment/Candidate/Edit\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  createGeneral(data: FormData) {\r\n    return this.post<IResponse<ICandidateGenaralRequest>>(\r\n      \"Recruitment/Candidate/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ICandidateListModel[]>>(\r\n      \"Recruitment/GeneralData/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getListCard() {\r\n    return this.get<IResponseList<ICandidateCardListModel[]>>(\r\n      \"Recruitment/GeneralData/getListCard\"\r\n\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<any[]>>(\"Recruitment/GeneralData/GetAll\");\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<ICandidateListModel[]>>(\r\n      \"Recruitment/GeneralData/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `Person_ID  eq ${id}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Recruitment/GeneralData/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll().pipe(\r\n      map((res: IResponse<any[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // res.data = recruitmentRequestToDisplay(res.data);\r\n          return res;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getAllSourcingType() {\r\n    return this.get<IResponse<Idropdown[]>>(\"Recruitment/Resource/GetAll\");\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ICandidateWorkExperienceModel,\r\n  ICandidateWorkExperienceRequest,\r\n} from \"app/recruitment/models/candidate/work-experience/work-experience\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CandidateWorkExperienceService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ICandidateWorkExperienceRequest) {\r\n    return this.post<IResponse<ICandidateWorkExperienceModel>>(\r\n      \"Recruitment/WorkingExperince/Add\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ICandidateWorkExperienceRequest) {\r\n    return this.post<IResponse<ICandidateWorkExperienceModel>>(\r\n      \"Recruitment/WorkingExperince/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll(candidateId: number) {\r\n    return this.get<IResponse<ICandidateWorkExperienceModel[]>>(\r\n      \"Recruitment/WorkingExperince/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `Person_Instance_ID eq ${candidateId}`,\r\n          $expand: db.Core_Resignation_Reason,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"Recruitment/WorkingExperince/Delete\", {\r\n      params: { ID: id },\r\n    });\r\n  }\r\n\r\n  getAllResignationReason() {\r\n    return this.get<IResponse<Idropdown[]>>(\"ResignationReason/GetAll\");\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IEmploymentTypeModel } from \"../models/employment-type\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmploymentTypeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IEmploymentTypeModel[]>>(\r\n      \"Recruitment/EmploymentType/GetAll\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IRecruitmentPlanModel } from \"app/recruitment/models/plan/recruitment-plan\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RecruitmentPlanService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IRecruitmentPlanModel[]>>(\r\n      \"Recruitment/Plan/GetAll\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { recruitmentRequestToDisplay } from \"../mapper/recruitment-request\";\r\nimport {\r\n  IRecruitmentRequestModel,\r\n  IRecruitmentRequestRequest,\r\n} from \"../models/recruitment-request\";\r\nimport {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RecruitmentRequestService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IRecruitmentRequestRequest) {\r\n    return this.post<IResponse<IRecruitmentRequestRequest>>(\r\n      \"Recruitment/Request/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IRecruitmentRequestRequest) {\r\n    return this.post<IResponse<IRecruitmentRequestRequest>>(\r\n      \"Recruitment/Request/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IRecruitmentRequestModel[]>>(\r\n      \"Recruitment/Request/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          // $expand: `${db.rec_request},${db.Core_Job_Title}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IRecruitmentRequestModel[]>>(\r\n      \"Recruitment/Request/GetAll\"\r\n      // {\r\n      //   params: {\r\n      //     $expand: `${db.rec_request},${db.Core_Job_Title}`,\r\n      //   },\r\n      // }\r\n    );\r\n  }\r\n\r\n  getAllByPlanId(planId: number) {\r\n    return this.get<IResponse<IRecruitmentRequestModel[]>>(\r\n      \"Recruitment/Request/GetAllByPlanId\",\r\n      {\r\n        params: {\r\n          $filter: `Plan_ID eq ${planId}`,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: IRecruitmentRequestModel) => {\r\n          item.id = item.request.id;\r\n          item.ar_Name = `${msgTranslate(\r\n            item.job_Title?.ar_Name,\r\n            item.job_Title?.en_Name\r\n          )} (${HelpersFunctions.mapDate(\r\n            item.request?.from_Date\r\n          )} - ${HelpersFunctions.mapDate(item.request?.to_Date)})`;\r\n          item.en_Name = `${msgTranslate(\r\n            item.job_Title?.ar_Name,\r\n            item.job_Title?.en_Name\r\n          )} (${HelpersFunctions.mapDate(\r\n            item.request?.from_Date\r\n          )} - ${HelpersFunctions.mapDate(item.request?.to_Date)})`;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<IRecruitmentRequestModel[]>>(\r\n      \"Recruitment/Request/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `request_ID eq ${id}`,\r\n          // $expand: `${db.rec_request},${db.Core_Job_Title},${db.CORE_GENDER},${db.core_Org}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Recruitment/Request/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll().pipe(\r\n      map((res: IResponse<any[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data = recruitmentRequestToDisplay(res.data);\r\n          return res;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IRequestReasonModel } from \"../models/request-reason\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RequestReasonService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IRequestReasonModel[]>>(\r\n      \"Recruitment/recReason/GetAll\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from \"@angular/router\";\r\nimport { AuthService } from \"app/auth/services/auth.service\";\r\nimport { Storage } from \"../resources/local-storage\";\r\nimport { StringsManager } from \"../resources/strings-manager\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CheckTokenGuard implements CanActivate {\r\n  appStrings: StringsManager = new StringsManager();\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (this.authService.isTokenExpired) {\r\n      Storage.customClearStorag(this.appStrings.CURRENT_LANG);\r\n      this.router.navigate([\"/auth/login\"], {\r\n        queryParams: { returnUrl: state.url },\r\n      });\r\n    } else return true;\r\n  }\r\n}\r\n","import {inject, Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot,} from \"@angular/router\";\r\nimport {ParamsService} from \"app/shared/services/params.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GetModuleIdGuard implements CanActivate {\r\n  paramsService = inject(ParamsService);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    this.paramsService.moduleId$.next(route.params.moduleId)\r\n    this.paramsService.parentModuleId$.next(route.queryParams.parentModuleId)\r\n    // let parentModuleId = route.queryParams.parentModuleId;\r\n    // let moduleId = route.params.moduleId;\r\n    // console.log('moduleId', moduleId)\r\n    // console.log('parentModuleId', parentModuleId)\r\n    // Storage.setParentModule(parentModuleId);\r\n    // Storage.setSelectedModule(moduleId);\r\n\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IPriorityModel } from \"app/system-setup/general-setup/models/priority\";\r\nimport { PriorityService } from \"app/system-setup/general-setup/services/priority.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-priorities-checkboxs\",\r\n  templateUrl: \"./priorities-checkboxs.component.html\",\r\n  styleUrls: [\"./priorities-checkboxs.component.scss\"],\r\n})\r\nexport class PrioritiesCheckboxsComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean;\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IPriorityModel[]>();\r\n\r\n  priorityList: IPriorityModel[];\r\n  selectedItems: number[] = [];\r\n  defControl = new FormControl();\r\n\r\n  constructor(private priorityService: PriorityService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.control.value.length == 0) {\r\n      this.defControl.reset();\r\n      this.priorityList = this.priorityList?.map((priority) => {\r\n        return {...priority, isChecked: false};\r\n      });\r\n      this.selectedItems = [];\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.priorityService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPriorityModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.priorityList = res.data;\r\n        }\r\n        else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange($event, id: number) {\r\n    if ($event) {\r\n      this.selectedItems.push(id);\r\n    }\r\n    else {\r\n      const index = this.selectedItems.indexOf(id);\r\n      this.selectedItems.splice(index, 1);\r\n    }\r\n    this.control.setValue(this.selectedItems);\r\n    // console.log(this.control.value)\r\n    // this.change.emit(values);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"pr-1 pl-1\" *ngFor=\"let priority of priorityList\">\r\n    <app-check-box\r\n      [label]=\"msgTranslate(priority.ar_Name, priority.en_Name)\"\r\n      labelPosition=\"before\"\r\n      [modelName]=\"priority.isChecked\"\r\n      (onChange)=\"onChange($event, priority.id)\"\r\n      [control]=\"defControl\"\r\n      [disabled]=\"disable\"\r\n    ></app-check-box>\r\n  </div>\r\n</div>\r\n\r\n<span class=\"danger\">\r\n  <input-validation-msg\r\n    [control]=\"defControl\"\r\n    [submitted]=\"submitted\"\r\n  ></input-validation-msg>\r\n</span>\r\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"weekdays-checkboxes\",\r\n  templateUrl: \"./weekdays-checkboxes.component.html\",\r\n  styleUrls: [\"./weekdays-checkboxes.component.scss\"],\r\n})\r\nexport class WeekdaysCheckboxesComponent implements OnInit, OnChanges {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean;\r\n  @Input() disable: boolean = false;\r\n\r\n  selectedItems: number[] = [];\r\n  defControl = new FormControl();\r\n\r\n  weekdaysList: { value: number; label: string; isChecked?: boolean }[] = [\r\n    {\r\n      value: 6,\r\n      label: \"saturday\",\r\n    },\r\n    {\r\n      value: 0,\r\n      label: \"sunday\",\r\n    },\r\n    {\r\n      value: 1,\r\n      label: \"monday\",\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"tuesday\",\r\n    },\r\n    {\r\n      value: 3,\r\n      label: \"wednesday\",\r\n    },\r\n    {\r\n      value: 4,\r\n      label: \"thursday\",\r\n    },\r\n    {\r\n      value: 5,\r\n      label: \"friday\",\r\n    },\r\n  ];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(): void {\r\n    if (this.control.value.length == 0) {\r\n      this.defControl.reset();\r\n      this.weekdaysList = this.weekdaysList?.map((priority) => {\r\n        return {...priority, isChecked: false};\r\n      });\r\n      this.selectedItems = [];\r\n    }\r\n  }\r\n\r\n  onChange($event, value: number) {\r\n    if ($event) {\r\n      this.selectedItems.push(value);\r\n    }\r\n    else {\r\n      const index = this.selectedItems.indexOf(value);\r\n      this.selectedItems.splice(index, 1);\r\n    }\r\n    this.control.setValue(this.selectedItems);\r\n  }\r\n}\r\n","<div class=\"d-flex flex-wrap\">\r\n  <div class=\"weekdays-checkbox-label\">{{ \"targetWeekdays\" | translate }}</div>\r\n\r\n  <div class=\"pleft-10 pright-10\" *ngFor=\"let day of weekdaysList\">\r\n    <div class=\"inputs-box-with-label\">\r\n      <div class=\"box-label no-content\">\r\n        <app-check-box\r\n          [label]=\"day.label | translate\"\r\n          labelPosition=\"before\"\r\n          (onChange)=\"onChange($event, day.value)\"\r\n          [control]=\"defControl\"\r\n          [modelName]=\"day.isChecked\"\r\n          [disabled]=\"disable\"\r\n          class=\"w-100\"\r\n        ></app-check-box>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<span class=\"danger validation\">\r\n  <input-validation-msg\r\n    [control]=\"control\"\r\n    [submitted]=\"submitted\"\r\n    [isSelect]=\"true\"\r\n  ></input-validation-msg>\r\n</span>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-confirm-dialog\",\r\n  templateUrl: \"./confirm-dialog.component.html\",\r\n  styleUrls: [\"./confirm-dialog.component.scss\"],\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\r\n  ngOnInit(): void {}\r\n}\r\n","<div mat-dialog-container>\r\n  <h1 mat-dialog-title class=\"primary-color\">\r\n    {{ data.title | translate }}\r\n  </h1>\r\n  <div mat-dialog-content>\r\n    <p>{{ data.msg | translate }}</p>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button\r\n      mat-raised-button\r\n      [mat-dialog-close]=\"false\"\r\n      class=\"btn btn-danger float-right\"\r\n    >\r\n      {{ \"General.noThanks\" | translate }}\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      [mat-dialog-close]=\"true\"\r\n      cdkFocusInitial\r\n      class=\"btn btn-primary float-right\"\r\n    >\r\n      {{ data.btn | translate }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, Inject } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MessageService } from \"primeng/api\";\r\n\r\n@Component({\r\n  selector: \"app-delete-dialog\",\r\n  templateUrl: \"./delete-dialog.component.html\",\r\n  styleUrls: [\"./delete-dialog.component.scss\"],\r\n})\r\nexport class DeleteDialogComponent implements AfterViewInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    private messageService: MessageService,\r\n  ) {\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    Promise.resolve().then(() => {\r\n      setTimeout(() => {\r\n        this.messageService.clear();\r\n        this.messageService.add({\r\n          key: \"delete\",\r\n          sticky: true,\r\n          severity: \"warn\",\r\n          summary: \"General.confirmDelete\",\r\n          detail: this.data\r\n        });\r\n      }, 200);\r\n    });\r\n  }\r\n\r\n\r\n  onConfirm() {\r\n    this.messageService.clear(\"delete\");\r\n    setTimeout(() => {\r\n      this.dialogRef.close(true);\r\n    }, 300);\r\n\r\n  }\r\n\r\n  onReject() {\r\n    this.messageService.clear(\"delete\");\r\n    setTimeout(() => {\r\n      this.dialogRef.close(false);\r\n    }, 300);\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n","<!--<h1 mat-dialog-title class=\"primary-color\">-->\r\n<!--  {{ \"General.confirmDelete\" | translate }}-->\r\n<!--</h1>-->\r\n<!--<div mat-dialog-content>-->\r\n<!--  {{ \"confirmDeleteMsg\" | translate }}-->\r\n<!--  <span class=\"danger font-weight-bold\"> {{ data | translate }} </span>-->\r\n<!--</div>-->\r\n<!--<div mat-dialog-actions>-->\r\n<!--  <button-->\r\n<!--    mat-raised-button-->\r\n<!--    [mat-dialog-close]=\"false\"-->\r\n<!--    class=\"btn btn-info float-right\"-->\r\n<!--  >-->\r\n<!--    {{ \"General.noThanks\" | translate }}-->\r\n<!--  </button>-->\r\n<!--  <button-->\r\n<!--    mat-raised-button-->\r\n<!--    [mat-dialog-close]=\"true\"-->\r\n<!--    cdkFocusInitial-->\r\n<!--    class=\"btn btn-danger float-right\"-->\r\n<!--  >-->\r\n<!--    {{ \"General.delete\" | translate }}-->\r\n<!--  </button>-->\r\n<!--</div>-->\r\n\r\n<!--<button type=\"button\" pButton (click)=\"show()\" label=\"open\" class=\"p-button-success\"></button>-->\r\n\r\n<div class=\"delete-dialog-card\">\r\n  <p-toast styleClass=\"toast-delete\" position=\"bottom-center\" key=\"delete\" (onClose)=\"onReject()\"\r\n           [baseZIndex]=\"9999999999\">\r\n    <ng-template let-message pTemplate=\"message\">\r\n      <div class=\"flex flex-column\" style=\"flex: 1\">\r\n        <div class=\"text-center\">\r\n          <!--          <i class=\"pi pi-exclamation-triangle mb-2 mt-1\" style=\"font-size: 3rem\"></i>-->\r\n          <h4>{{ message.summary | translate }}</h4>\r\n          <p> {{ 'confirmDeleteMsg' | translate }} <strong> {{ message.detail }}</strong></p>\r\n        </div>\r\n        <div class=\"row p-fluid\">\r\n          <div class=\"col-6\">\r\n            <button type=\"button\" (click)=\"onConfirm()\" class=\"btn btn-darkBlue btn-block\">\r\n              {{ \"General.delete\" | translate }}\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <button type=\"button\" (click)=\"onReject()\" class=\"btn btn-light btn-block\">\r\n              {{ \"General.close\" | translate }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </p-toast>\r\n</div>\r\n\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { AttLocationService } from \"app/system-setup/attendance-setup/services/att-location.service\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { LocationComponent } from \"app/system-setup/attendance-setup/components/location/location.component\";\r\nimport { IAttLocationModel } from \"app/system-setup/attendance-setup/models/att-location\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"attendance-location-dropdown\",\r\n  templateUrl: \"./att-location-dropdown.component.html\",\r\n  styleUrls: [\"./att-location-dropdown.component.scss\"],\r\n})\r\nexport class AttLocationDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"location\";\r\n  @Input() appendTo: string | HTMLElement;\r\n\r\n  locationsList: IAttLocationModel[];\r\n  viewName: string;\r\n\r\n  constructor(private locationService: AttLocationService) {\r\n    super();\r\n    this.viewName = ViewsManager.location;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.locationService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IAttLocationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.locationsList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(LocationComponent, value)\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.getAll();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"locationsList\"\r\n  [filter]=\"filter\"\r\n  [appendTo]=\"appendTo\"\r\n  [multi]=\"multi\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { AttendancePlanService } from \"app/system-setup/attendance-setup/services/attendance-plan.service\";\r\nimport { IAttendancePlanModel } from \"app/system-setup/attendance-setup/models/plan\";\r\nimport { AddPlanComponent } from \"app/system-setup/attendance-setup/components/plan/add-plan/add-plan.component\";\r\n\r\n@Component({\r\n  selector: \"app-attendance-plan-dropdown\",\r\n  templateUrl: \"./attendance-plan-dropdown.component.html\",\r\n  styleUrls: [\"./attendance-plan-dropdown.component.scss\"],\r\n})\r\nexport class AttendancePlanDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"attendancePlan\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IAttendancePlanModel[]>();\r\n  viewName: string;\r\n\r\n  plantList: IAttendancePlanModel[];\r\n\r\n  constructor(private attendancePlanService: AttendancePlanService) {\r\n    super();\r\n    this.viewName = ViewsManager.add_plan;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllPlans();\r\n  }\r\n\r\n  getAllPlans() {\r\n    this.attendancePlanService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IAttendancePlanModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.plantList = res.data;\r\n        }\r\n        else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddPlanComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllPlans();\r\n      });\r\n  }\r\n\r\n  onChange(values: IAttendancePlanModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"plantList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IAttendancePlanModel } from \"app/system-setup/attendance-setup/models/plan\";\r\nimport { AssignPlanService } from \"app/personnel-setup/services/employees/assign-plan.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-plan-by-policy-group-dropdown\",\r\n  templateUrl: \"./plan-by-policy-group-dropdown.component.html\",\r\n  styleUrls: [\"./plan-by-policy-group-dropdown.component.scss\"],\r\n})\r\nexport class PlanByPolicyGroupDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() policyGroupCtrl?: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"plans\";\r\n  @Output() change = new EventEmitter<IAttendancePlanModel[]>();\r\n\r\n  planList: IAttendancePlanModel[] = [];\r\n\r\n  constructor(private assignPlanService: AssignPlanService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n    this.policyGroupCtrl?.valueChanges.subscribe((policyId) => {\r\n      this.control.setValue(null);\r\n      if (policyId > 0) {\r\n        this.getPlansByPolicyGroup();\r\n        if (!this.disable) this.control.enable();\r\n      } else {\r\n        this.planList = [];\r\n        this.control.disable();\r\n      }\r\n    });\r\n  }\r\n\r\n  getPlansByPolicyGroup() {\r\n    this.assignPlanService\r\n      .getPlansByPolicyGroup(this.policyGroupCtrl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IAttendancePlanModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.planList = res.data;\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(model: IAttendancePlanModel[]) {\r\n    this.change.emit(model);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"planList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { AddPermissionComponent } from \"app/system-setup/attendance-setup/components/permissions/add-permission/add-permission.component\";\r\nimport { IPermissionTypeModel } from \"app/system-setup/attendance-setup/models/permissions\";\r\nimport { PermissionTypeService } from \"app/system-setup/attendance-setup/services/permissions.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-permission-type-dropdown\",\r\n  templateUrl: \"./permission-type-dropdown.component.html\",\r\n  styleUrls: [\"./permission-type-dropdown.component.scss\"],\r\n})\r\nexport class PermissionTypeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"permissionType\";\r\n  @Input() appendTo: string;\r\n  @Output() change = new EventEmitter<IPermissionTypeModel[]>();\r\n\r\n  permissionTypeList: IPermissionTypeModel[];\r\n  viewName: string;\r\n\r\n  constructor(private permissionTypeService: PermissionTypeService) {\r\n    super();\r\n    this.viewName = ViewsManager.add_permission;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllPermissionTypes();\r\n  }\r\n\r\n  getAllPermissionTypes() {\r\n    this.permissionTypeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPermissionTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.permissionTypeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddPermissionComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllPermissionTypes();\r\n      });\r\n  }\r\n\r\n  onChange(values: IPermissionTypeModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"permissionTypeList\"\r\n\t[filter]=\"filter\"\r\n\t[multi]=\"multi\"\r\n\t[appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { VacationTypeComponent } from \"app/system-setup/attendance-setup/components/vacation/vacation-type/vacation-type.component\";\r\nimport { IVacationModel, IVacationResponse, } from \"app/system-setup/attendance-setup/models/vacation\";\r\nimport { VacationService } from \"app/system-setup/attendance-setup/services/vacation/vacation.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { vacationToMap } from \"app/system-setup/attendance-setup/mapper/vacation\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-vacation-type-dropdown\",\r\n  templateUrl: \"./vacation-type-dropdown.component.html\",\r\n  styleUrls: [\"./vacation-type-dropdown.component.scss\"],\r\n})\r\nexport class VacationTypeDropdownComponent\r\n  extends BaseDropdown\r\n {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"vacationType\";\r\n  @Input() appendTo: string = \"body\";\r\n  @Output() change = new EventEmitter<IVacationModel[]>();\r\n  viewsManager = ViewsManager;\r\n  vacationList: IVacationModel[];\r\n\r\n  constructor(private vacationServ: VacationService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllVacations();\r\n  }\r\n\r\n  getAllVacations() {\r\n    this.vacationServ\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IVacationResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.vacationList = vacationToMap(res.data);\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(att_Vacation: IVacationModel[]) {\r\n    this.change.emit(att_Vacation);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(VacationTypeComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllVacations();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[multi]=\"multi\"\r\n\t[List]=\"vacationList\"\r\n\t[submitted]=\"submitted\"\r\n\t[filter]=\"filter\"\r\n\t[appendTo]=\"appendTo\"\r\n  [disable]=\"disable\"\r\n\t(change)=\"onChange($event)\"\r\n\t[viewName]=\"viewsManager.add_vacation\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IBenefitModel } from \"app/system-setup/bonus-setup/models/benefit\";\r\nimport { BenefitService } from \"app/system-setup/bonus-setup/services/benefit.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\n\r\n@Component({\r\n  selector: \"app-benefit-dropdown\",\r\n  templateUrl: \"./benefit-dropdown.component.html\",\r\n  styleUrls: [\"./benefit-dropdown.component.scss\"]\r\n})\r\nexport class BenefitDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = true;\r\n  @Input() label: string = \"benefit\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IBenefitModel[]>();\r\n\r\n  list: IBenefitModel[];\r\n  viewName: string;\r\n\r\n  constructor(private benefitService: BenefitService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.benefitService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IBenefitModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.list = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    //     this.dialogsService\r\n    //         .addFromDropdownDialog(NationalityComponent, value)\r\n    //         .afterClosed()\r\n    //         .subscribe(() => {\r\n    //             this.getAll();\r\n    //         });\r\n  }\r\n\r\n  onChange(values: IBenefitModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"list\"\r\n                    [filter]=\"filter\"\r\n                    [appendTo]=\"appendTo\"\r\n                    [multi]=\"multi\"\r\n                    (change)=\"onChange($event)\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\">\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport {\r\n  IModuleModel,\r\n  IUM_ModulesModel,\r\n} from \"app/shared/interfaces/user-views\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-module-dropdown\",\r\n  templateUrl: \"./module-dropdown.component.html\",\r\n  styleUrls: [\"./module-dropdown.component.scss\"],\r\n})\r\nexport class ModuleDropdaownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"module\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<any>();\r\n\r\n  modules: IModuleModel[] = [];\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllmodules();\r\n  }\r\n\r\n  onChange(moduleId:number) {\r\n    this.change.emit(moduleId);\r\n  }\r\n\r\n  getAllmodules() {\r\n    this.viewsService\r\n      .getUserModules()\r\n      .subscribe((res: IResponse<IUM_ModulesModel[]>) => {\r\n        res.data.map((data) => {\r\n          let item = {\r\n            id: data.id,\r\n            ar_Name: data.arbName,\r\n            en_Name: data.engName,\r\n          } as IModuleModel;\r\n          this.modules.push(item);\r\n        });\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"modules\"\r\n  [filter]=\"filter\"\r\n  [appendTo]=\"appendTo\"\r\n  [multi]=\"multi\"\r\n  (change)=\"onChange($event)\"\r\n\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { PropertiesService } from \"app/system-setup/dashboard-setup/services/properties.service\";\r\nimport { IPropertyModel } from \"app/system-setup/dashboard-setup/models/properties\";\r\nimport { PropertiesComponent } from \"app/system-setup/dashboard-setup/components/properties/properties.component\";\r\n\r\n@Component({\r\n  selector: \"app-properties-dropdown\",\r\n  templateUrl: \"./properties-dropdown.component.html\",\r\n  styleUrls: [\"./properties-dropdown.component.scss\"],\r\n})\r\nexport class PropertiesDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"properties\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IPropertyModel[]>();\r\n  viewName: string;\r\n  propertyList: IPropertyModel[];\r\n\r\n  constructor(private propertiesService: PropertiesService) {\r\n    super();\r\n    this.viewName = ViewsManager.properties;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.propertiesService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPropertyModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          // ar_Name not required\r\n          res.data.map((ele) => {\r\n            if (!ele.ar_Name) ele.ar_Name = ele.en_Name;\r\n          });\r\n          this.propertyList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IPropertyModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(PropertiesComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[multi]=\"multi\"\r\n\t[List]=\"propertyList\"\r\n\t[submitted]=\"submitted\"\r\n\t[filter]=\"filter\"\r\n  [appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { IServiceModel } from \"app/system-setup/general-setup/models/service\";\r\nimport { ServiceService } from \"app/system-setup/general-setup/services/service.service\";\r\n\r\n@Component({\r\n  selector: \"app-service-by-module-id-dropdown\",\r\n  templateUrl: \"./service-by-module-id-dropdown.component.html\",\r\n  styleUrls: [\"./service-by-module-id-dropdown.component.scss\"],\r\n})\r\nexport class ServiceByModuleIdDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() moduleControl: FormControl;\r\n\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"service\";\r\n  servicesList: IServiceModel[];\r\n\r\n  constructor(private serviceService: ServiceService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n    }\r\n    this.control.disable();\r\n    this.moduleControl.valueChanges.subscribe((moduleId) => {\r\n      if (moduleId) {\r\n        this.getAllService();\r\n        this.control.enable();\r\n      }\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAllService();\r\n    }\r\n  }\r\n\r\n  getAllService() {\r\n    let params = {\r\n      ...this.businessCompanyParams,\r\n      $filter: `ModuleID eq ${this.moduleControl.value}`,\r\n    };\r\n    this.serviceService\r\n      .GetAll(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IServiceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.servicesList = res.data;\r\n        } else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"servicesList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n>\r\n</app-prime-dropdown>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { PrimengModule } from \"app/shared/uimodules/primeng.module\";\r\n\r\n// COMPONENTS\r\nimport { InputValidationMsgComponent } from \"../resources/dynamic-form-field/input-validation-msg/input-validation-msg.component\";\r\n\r\n// DROPDOWNS\r\nimport { AttLocationDropdownComponent } from \"./attendance-setup/attendance-location-dropdown/att-location-dropdown.component\";\r\nimport {\r\n  AttendancePlanDropdownComponent\r\n} from \"./attendance-setup/attendance-plan/attendance-plan-dropdown/attendance-plan-dropdown.component\";\r\nimport {\r\n  PlanByPolicyGroupDropdownComponent\r\n} from \"./attendance-setup/attendance-plan/plan-by-policy-group-dropdown/plan-by-policy-group-dropdown.component\";\r\nimport { PermissionTypeDropdownComponent } from \"./attendance-setup/permission-type-dropdown/permission-type-dropdown.component\";\r\nimport { VacationTypeDropdownComponent } from \"./attendance-setup/vacation-type-dropdown/vacation-type-dropdown.component\";\r\nimport { AttachmentDropdownComponent } from \"./general-setup/attachment-dropdown/attachment-dropdown.component\";\r\nimport { ReportsDrpdownComponent } from \"./general-setup/reports-dropdown/reports-dropdown.component\";\r\nimport { ServiceDropdownComponent } from \"./general-setup/service-dropdown/service-dropdown.component\";\r\nimport { UsersDropdownComponent } from \"./general-setup/users-dropdown/users-dropdown.component\";\r\nimport { BankDropdownComponent } from \"./hr-setup/bank-dropdown/bank-dropdown.component\";\r\nimport { BloodTypeDropdownComponent } from \"./hr-setup/blood-type-dropdown/blood-type-dropdown.component\";\r\nimport {\r\n  CategoriesByContactTypeDropdownComponent\r\n} from \"./hr-setup/contact-categories-by-contact-dropdown/categories-by-contact-type-dropdown.component\";\r\nimport { ContactTypeDropdownComponent } from \"./hr-setup/contact-type-dropdown/contact-type-dropdown.component\";\r\nimport { ContractTypeDropdownComponent } from \"./hr-setup/contract-type-dropdown/contract-type-dropdown.component\";\r\nimport { GovernorateDropdownComponent } from \"./hr-setup/country-dropdown/country-dropdown.component\";\r\nimport { EducationDegreeDropdownComponent } from \"./hr-setup/education-degree-dropdown/education-degree-dropdown.component\";\r\nimport { EducationGradeDropdownComponent } from \"./hr-setup/education-grade-dropdown/education-grade-dropdown.component\";\r\nimport { GenderDropdownComponent } from \"./hr-setup/gender-dropdown/gender-dropdown.component\";\r\nimport {\r\n  GovernorateByCountryDropdownComponent\r\n} from \"./hr-setup/governorate-by-country-dropdown/governorate-by-country-dropdown.component\";\r\nimport {\r\n  HiringDocumentByServiceDropdownComponent\r\n} from \"./hr-setup/hiring-document-by-service-dropdown/hiring-document-by-service-dropdown.component\";\r\nimport { IdentityTypeDropdownComponent } from \"./hr-setup/identity-type-dropdown/identity-type-dropdown.component\";\r\nimport { InstitutionDropdownComponent } from \"./hr-setup/institution-dropdown/institution-dropdown.component\";\r\nimport { InsuranceOfficeDropdownComponent } from \"./hr-setup/insurance-office-dropdown/insurance-office-dropdown.component\";\r\nimport { JobStatusDropdownComponent } from \"./hr-setup/job-status-dropdown/job-status-dropdown.component\";\r\nimport {\r\n  JobStatusEventByStatusDropdownComponent\r\n} from \"./hr-setup/job-status-event-by-status-dropdown/job-status-event-by-status-dropdown.component\";\r\nimport { KpiDropdownComponent } from \"./hr-setup/kpi-dropdown/kpi-dropdown.component\";\r\nimport { MaritalStatusDropdownComponent } from \"./hr-setup/marital-status-dropdown/marital-status-dropdown.component\";\r\nimport { MilitaryGradeDropdownComponent } from \"./hr-setup/military-grade-dropdown/military-grade-dropdown.component\";\r\nimport { MilitaryStatusDropdownComponent } from \"./hr-setup/military-status-dropdown/military-status-dropdown.component\";\r\nimport { NationalityDropdownComponent } from \"./hr-setup/nationality-dropdown/nationality-dropdown.component\";\r\nimport { ReligionDropdownComponent } from \"./hr-setup/religion-dropdown/religion-dropdown.component\";\r\nimport {\r\n  CompetenceLevelByCompetenceDropdownComponent\r\n} from \"./org-management-setup/competence-level-by-competence-dropdown/competence-level-by-competence-dropdown.component\";\r\nimport {\r\n  CustodiesByEmployeeDropdownComponent\r\n} from \"./org-management-setup/custodies/custodies-by-employee-dropdown/custodies-by-employee-dropdown.component\";\r\nimport { CustodiesDropdownComponent } from \"./org-management-setup/custodies/custodies-dropdown/custodies-dropdown.component\";\r\nimport { JobFamilyByOrgDropdownComponent } from \"./org-management-setup/job-family-by-org-dropdown/job-family-by-org-dropdown.component\";\r\nimport {\r\n  OrgTypesDropdownCurrentStructureComponent\r\n} from \"./org-management-setup/org-types/org-types-dropdown-current-structure/org-types-dropdown-current-structure.component\";\r\nimport { OrgTypesDropdownComponent } from \"./org-management-setup/org-types/org-types-dropdown/org-types-dropdown.component\";\r\nimport {\r\n  OrganizationByOrgTypeDropdownComponent\r\n} from \"./org-management-setup/org/organization-by-org-type-dropdown/organization-by-org-type-dropdown.component\";\r\nimport { BusinessDropdownComponent } from \"./org-management/Business-dropdown/Business-dropdown.component\";\r\nimport { CompanyDropdownComponent } from \"./org-management/company-by-businessId-dropdown/company-dropdown.component\";\r\nimport { CompetenceDropdownComponent } from \"./org-management/competence-dropdown/competence-dropdown.component\";\r\nimport { JobTitleByOrgDropdownComponent } from \"./org-management/job-title/job-title-by-org-dropdown/job-title-by-org-dropdown.component\";\r\nimport { JobTitleDropdownComponent } from \"./org-management/job-title/job-title-dropdown/job-title-dropdown.component\";\r\nimport { OrgLocationDropdownComponent } from \"./org-management/org-location-dropdown/org-location-dropdown.component\";\r\nimport { PolicyGroupTypeDropdownComponent } from \"./org-management/policy-group-type-dropdown/policy-group-type-dropdown.component\";\r\nimport {\r\n  PolicyGroupsByCompanyDropdownComponent\r\n} from \"./org-management/policy-groups/policy-groups-by-company-dropdown/policy-groups-by-company-dropdown.component\";\r\nimport { PolicyGroupsDropdownComponent } from \"./org-management/policy-groups/policy-groups-dropdown/policy-groups-dropdown.component\";\r\nimport { ElementGroupsDropdownComponent } from \"./payroll-setup/element-groups-dropdown/element-groups-dropdown.component\";\r\nimport { LoanTypesDropdownComponent } from \"./payroll-setup/loan-types-dropdown/loan-types-dropdown.component\";\r\nimport { PaymentDropdownComponent } from \"./payroll/payment-dropdown/payment-dropdown.component\";\r\nimport { VariableByPaymentDropdownComponent } from \"./payroll/variable-by-payment-dropdown/variable-by-payment-dropdown.component\";\r\nimport {\r\n  AttachmentTypesByEmployeeIdDropdownComponent\r\n} from \"./personnel-setup/attachment-types-by-employee-id-dropdown/attachment-types-by-employee-id-dropdown.component\";\r\nimport {\r\n  CostCenterByS4SystemInstanceDropdownComponent\r\n} from \"./personnel-setup/cost-center-by-s4-system-instance-dropdown/cost-center-by-s4-system-instance-dropdown.component\";\r\nimport { EducationYearDropdownComponent } from \"./personnel-setup/education-year-dropdown/education-year-dropdown.component\";\r\nimport {\r\n  EmployeeByPolicyGroupDropdownComponent\r\n} from \"./personnel-setup/employees/employee-by-policy-group-dropdown/employee-by-policy-group-dropdown.component\";\r\nimport { RelationshipDropdownComponent } from \"./personnel-setup/relationship-dropdown/relationship-dropdown.component\";\r\nimport {\r\n  BusinessDropdownCurrentUserComponent\r\n} from \"./related-by-user/Business-dropdown-current-user/Business-dropdown-current-user.component\";\r\nimport {\r\n  CompanyDropdownCurrentUserComponent\r\n} from \"./related-by-user/company-by-businessId-dropdown/company-dropdown-current-user.component\";\r\nimport {\r\n  GlAccountByS4SystemInstanceDropdownComponent\r\n} from \"./s4-setup/gl-account-by-s4-system-instance-dropdown/gl-account-by-s4-system-instance-dropdown.component\";\r\nimport {\r\n  S4IntegrationPurposeBySystemInstanceDropdownComponent\r\n} from \"./s4-setup/s4-integration-purpose-by-system-instance-dropdown/s4-integration-purpose-by-system-instance-dropdown.component\";\r\nimport { S4SystemInstanceDropdownComponent } from \"./s4-setup/s4-system-instance-dropdown/s4-system-instance-dropdown.component\";\r\nimport {\r\n  SapIntegrationPurposeBySystemInstanceDropdownComponent\r\n} from \"./sap-business-one-setup/sap-integration-purpose-by-system-instance-dropdown/sap-integration-purpose-by-system-instance-dropdown.component\";\r\nimport {\r\n  SapSystemInstanceDropdownComponent\r\n} from \"./sap-business-one-setup/sap-system-instance-dropdown/sap-system-instance-dropdown.component\";\r\nimport { CourseCategoryDropdownComponent } from \"./training-setup/course-category-dropdown/course-category-dropdown.component\";\r\nimport { CourseTypeDropdownComponent } from \"./training-setup/course-type-dropdown/course-type-dropdown.component\";\r\nimport { ExpensesDropdownComponent } from \"./training-setup/expenses-dropdown/expenses-dropdown.component\";\r\nimport { ReasonDropdownComponent } from \"./training-setup/reason-dropdown/reason-dropdown.component\";\r\nimport { BusinessObjectiveDropdownComponent } from \"./training/business-objective-dropdown/business-objective-dropdown.component\";\r\nimport {\r\n  CourseByCourseCategoryDropdownComponent\r\n} from \"./training/course/course-by-course-category-dropdown/course-by-course-category-dropdown.component\";\r\nimport { CourseByPlanDropdownComponent } from \"./training/course/course-by-plan-in-add-plan-dropdown/course-by-plan-dropdown.component\";\r\nimport {\r\n  CourseByTrainingPlanDropdownComponent\r\n} from \"./training/course/course-by-training-plan-dropdown/course-by-training-plan-dropdown.component\";\r\nimport { IstructorDropdownComponent } from \"./training/instructor-dropdown/instructor-dropdown.component\";\r\nimport { TrainingPlanDropdownComponent } from \"./training/training-plan-dropdown/training-plan-dropdown.component\";\r\nimport { TspDropdownComponent } from \"./training/tsp-dropdown/tsp-dropdown.component\";\r\nimport { PropertiesDropdownComponent } from \"./dashboard-setup/properties-dropdown/properties-dropdowncomponent\";\r\nimport { DropdownCoreComponent } from \"app/shared/components/resources/dynamic-form-field/prime-ng/dropdown-core/dropdown-core.component\";\r\nimport { EmploymentTypeDropdownComponent } from \"./recruitment/employment-type-dropdown/employment-type-dropdown.component\";\r\nimport { RequestReasonDropdownComponent } from \"./recruitment/request-reason-dropdown/request-reason-dropdown.component\";\r\nimport {\r\n  ServiceByModuleIdDropdownComponent\r\n} from \"./dashboard-setup/service-by-module-id-dropdown/service-by-module-id-dropdown.component\";\r\nimport {\r\n  ErpResourceGroupDropdownComponent\r\n} from \"./personnel-setup/erp-integration/erp-resource-group-dropdown/erp-resource-group-dropdown.component\";\r\nimport {\r\n  ErpGroupCodeVendorDropdownComponent\r\n} from \"./personnel-setup/erp-integration/erp-group-code-vendor-dropdown/erp-group-code-vendor-dropdown.component\";\r\nimport {\r\n  ErpGroupCodeCustomerDropdownComponent\r\n} from \"./personnel-setup/erp-integration/erp-group-code-customer-dropdown/erp-group-code-customer-dropdown.component\";\r\nimport { SourcingTypeDropdownComponent } from \"./recruitment/sourcing-type-dropdown/sourcing-type-dropdown.component\";\r\nimport { ResignationReasonDropdownComponent } from \"./recruitment/resignation-reason-dropdown/resignation-reason-dropdown.component\";\r\nimport {\r\n  JobFamilyDropdownComponent\r\n} from \"app/shared/components/dropdowns/org-management-setup/job-family-dropdown/job-family-dropdown.component\";\r\nimport { VersionsDropdownComponent } from \"./localization-setup/versions-dropdown/versions-dropdown.component\";\r\nimport { LocalViolationTypesComponent } from \"./localization-setup/local-violation-types/local-violation-types.component\";\r\nimport { LocalTypesComponent } from \"./localization-setup/local-types/local-types.component\";\r\nimport { ViolationDropdownComponent } from \"./localization-setup/violation-dropdown/violation-dropdown.component\";\r\nimport {\r\n  PenaltiesDropdownComponent\r\n} from \"app/shared/components/dropdowns/localization-setup/penalty-dropdown/penalties-dropdown.component\";\r\nimport { RecruitmentPlanDropdownComponent } from \"./recruitment/recruitment-plan-dropdown/recruitment-plan-dropdown.component\";\r\nimport {\r\n  RecruitmentRequestByPlanDropdownComponent\r\n} from \"./recruitment/request/recruitment-request-by-plan-dropdown/recruitment-request-by-plan-dropdown.component\";\r\nimport { BenefitDropdownComponent } from \"./bonus-setup/benefit-dropdown/benefit-dropdown.component\";\r\n\r\nconst component = [\r\n  DropdownCoreComponent,\r\n  InputValidationMsgComponent,\r\n  BusinessDropdownComponent,\r\n  CompanyDropdownComponent,\r\n  AttachmentDropdownComponent,\r\n  JobTitleDropdownComponent,\r\n  ServiceDropdownComponent,\r\n  GovernorateDropdownComponent,\r\n  ElementGroupsDropdownComponent,\r\n  UsersDropdownComponent,\r\n  PaymentDropdownComponent,\r\n  VariableByPaymentDropdownComponent,\r\n  SapSystemInstanceDropdownComponent,\r\n  SapIntegrationPurposeBySystemInstanceDropdownComponent,\r\n  OrgTypesDropdownComponent,\r\n  JobFamilyDropdownComponent,\r\n  JobFamilyByOrgDropdownComponent,\r\n  BankDropdownComponent,\r\n  OrganizationByOrgTypeDropdownComponent,\r\n  LoanTypesDropdownComponent,\r\n  JobTitleByOrgDropdownComponent,\r\n  S4SystemInstanceDropdownComponent,\r\n  S4IntegrationPurposeBySystemInstanceDropdownComponent,\r\n  GlAccountByS4SystemInstanceDropdownComponent,\r\n  VacationTypeDropdownComponent,\r\n  GenderDropdownComponent,\r\n  PolicyGroupsByCompanyDropdownComponent,\r\n  CompanyDropdownCurrentUserComponent,\r\n  BusinessDropdownCurrentUserComponent,\r\n  NationalityDropdownComponent,\r\n  OrgTypesDropdownCurrentStructureComponent,\r\n  CustodiesDropdownComponent,\r\n  ReligionDropdownComponent,\r\n  MaritalStatusDropdownComponent,\r\n  ContactTypeDropdownComponent,\r\n  CategoriesByContactTypeDropdownComponent,\r\n  GovernorateByCountryDropdownComponent,\r\n  RelationshipDropdownComponent,\r\n  MilitaryStatusDropdownComponent,\r\n  MilitaryGradeDropdownComponent,\r\n  IdentityTypeDropdownComponent,\r\n  InstitutionDropdownComponent,\r\n  EducationYearDropdownComponent,\r\n  EducationDegreeDropdownComponent,\r\n  EducationGradeDropdownComponent,\r\n  JobStatusDropdownComponent,\r\n  JobStatusEventByStatusDropdownComponent,\r\n  AttendancePlanDropdownComponent,\r\n  HiringDocumentByServiceDropdownComponent,\r\n  BloodTypeDropdownComponent,\r\n  PermissionTypeDropdownComponent,\r\n  CostCenterByS4SystemInstanceDropdownComponent,\r\n  CustodiesByEmployeeDropdownComponent,\r\n  InsuranceOfficeDropdownComponent,\r\n  CompetenceDropdownComponent,\r\n  CompetenceLevelByCompetenceDropdownComponent,\r\n  AttLocationDropdownComponent,\r\n  OrgLocationDropdownComponent,\r\n  CourseCategoryDropdownComponent,\r\n  CourseTypeDropdownComponent,\r\n  TspDropdownComponent,\r\n  IstructorDropdownComponent,\r\n  AttachmentTypesByEmployeeIdDropdownComponent,\r\n  ContractTypeDropdownComponent,\r\n  CourseByCourseCategoryDropdownComponent,\r\n  ReasonDropdownComponent,\r\n  BusinessObjectiveDropdownComponent,\r\n  ExpensesDropdownComponent,\r\n  PolicyGroupsDropdownComponent,\r\n  PlanByPolicyGroupDropdownComponent,\r\n  EmployeeByPolicyGroupDropdownComponent,\r\n  KpiDropdownComponent,\r\n  CourseByPlanDropdownComponent,\r\n  TrainingPlanDropdownComponent,\r\n  CourseByTrainingPlanDropdownComponent,\r\n  PolicyGroupTypeDropdownComponent,\r\n  PolicyGroupTypeDropdownComponent,\r\n  ReportsDrpdownComponent,\r\n  PropertiesDropdownComponent,\r\n  EmploymentTypeDropdownComponent,\r\n  RequestReasonDropdownComponent,\r\n  ServiceByModuleIdDropdownComponent,\r\n  ErpResourceGroupDropdownComponent,\r\n  ErpGroupCodeVendorDropdownComponent,\r\n  ErpGroupCodeCustomerDropdownComponent,\r\n  SourcingTypeDropdownComponent,\r\n  ResignationReasonDropdownComponent,\r\n  VersionsDropdownComponent,\r\n  LocalViolationTypesComponent,\r\n  LocalTypesComponent,\r\n  ViolationDropdownComponent,\r\n  PenaltiesDropdownComponent,\r\n  RecruitmentPlanDropdownComponent,\r\n  RecruitmentRequestByPlanDropdownComponent,\r\n  BenefitDropdownComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: [component],\r\n  imports: [CommonModule, TranslateModule, ReactiveFormsModule, PrimengModule],\r\n  exports: [component, TranslateModule, ReactiveFormsModule, PrimengModule],\r\n})\r\nexport class DropdownsModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { AttachmentTypesService } from \"app/system-setup/general-setup/services/attachment-types.service\";\r\nimport { IAttachmentTypesModel } from \"app/system-setup/general-setup/models/attachment-types\";\r\n\r\n@Component({\r\n  selector: \"app-attachment-dropdown\",\r\n  templateUrl: \"./attachment-dropdown.component.html\",\r\n  styleUrls: [\"./attachment-dropdown.component.scss\"],\r\n})\r\nexport class AttachmentDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean;\r\n  @Input() multiple: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"attachments\";\r\n  @Input() appendTo: string = \"body\";\r\n  @Output() change = new EventEmitter<IAttachmentTypesModel[]>();\r\n\r\n  attachmentsList: IAttachmentTypesModel[];\r\n\r\n  constructor(private attachmentTypesService: AttachmentTypesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllAttachments();\r\n  }\r\n\r\n  getAllAttachments() {\r\n    this.attachmentTypesService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IAttachmentTypesModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.attachmentsList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IAttachmentTypesModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"attachmentsList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multiple\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IReportsModel } from \"app/system-setup/general-setup/models/iso-code\";\r\nimport { IsoCodeService } from \"app/system-setup/general-setup/services/iso-code.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"reports-dropdown\",\r\n\ttemplateUrl: \"./reports-dropdown.component.html\",\r\n\tstyleUrls: [\"./reports-dropdown.component.scss\"],\r\n})\r\nexport class ReportsDrpdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = true;\r\n\t@Input() multiple: boolean = false;\r\n\t@Input() filter: boolean = true;\r\n\t@Input() label: string = \"reports\";\r\n\t@Input() isoChanged: boolean;\r\n\t@Output() select = new EventEmitter<IReportsModel>();\r\n\treportsList: IReportsModel[];\r\n\tconstructor(private _reportNameService: IsoCodeService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.GetAllReports();\r\n\t}\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.GetAllReports();\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges): void {\r\n\t\tthis.GetAllReports();\r\n\t}\r\n\r\n\tGetAllReports() {\r\n\t\tthis._reportNameService\r\n      .GetAllReports()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IReportsModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.reportsList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n\t}\r\n\r\n\tonSelect($event: IReportsModel[]) {\r\n\t\tif ($event?.length > 0) this.select.emit($event[0]);\r\n\t\telse this.select.emit(null);\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"reportsList\"\r\n\t[filter]=\"filter\"\r\n\t[multi]=\"multiple\"\r\n  (change)=\"onSelect($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {IServiceModel} from 'app/system-setup/general-setup/models/service';\r\nimport {ServiceService} from 'app/system-setup/general-setup/services/service.service';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: 'app-service-dropdown',\r\n  templateUrl: './service-dropdown.component.html',\r\n  styleUrls: ['./service-dropdown.component.scss'],\r\n})\r\nexport class ServiceDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() filterId: number;\r\n  @Input() label: string = 'service';\r\n  servicesList: IServiceModel[];\r\n\r\n  constructor(private serviceService: ServiceService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAllService();\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAllService();\r\n    }\r\n  }\r\n\r\n  getAllService() {\r\n    let params = {\r\n      ...this.businessCompanyParams,\r\n      $filter: `id eq ${this.filterId}`,\r\n    };\r\n    this.serviceService\r\n      .GetAll(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IServiceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data.map((item: IServiceModel) => {\r\n            item.ar_Name = item.arbName;\r\n            item.en_Name = item.engName;\r\n          });\r\n          this.servicesList = res.data;\r\n        } else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"servicesList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { AddUserComponent } from \"app/system-setup/general-setup/components/users/add-user/add-user.component\";\r\nimport { IUMUsers } from \"app/system-setup/general-setup/models/users\";\r\nimport { UsersService } from \"app/system-setup/general-setup/services/users/users.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Component({\r\n\tselector: \"app-users-dropdown\",\r\n\ttemplateUrl: \"./users-dropdown.component.html\",\r\n\tstyleUrls: [\"./users-dropdown.component.scss\"],\r\n})\r\nexport class UsersDropdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"user\";\r\n\tviewName: string;\r\n\r\n\tusersList: IUMUsers[];\r\n\r\n\tconstructor(private usersService: UsersService) {\r\n\t\tsuper();\r\n\t\tthis.viewName = ViewsManager.add_user;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.businessId > 0 && this.companyId > 0) this.getAllUsers();\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.getAllUsers();\r\n\t}\r\n\r\n\tgetAllUsers() {\r\n\t\tthis.usersService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IUMUsers[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.usersList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n\t}\r\n\r\n\tcreateDialog(value: string) {\r\n\t\tthis.dialogsService\r\n\t\t\t.addFromDropdownDialog(AddUserComponent, value)\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tthis.getAllUsers();\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"usersList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, Input, OnInit} from \"@angular/core\";\r\nimport {AbstractControl, FormControl} from \"@angular/forms\";\r\nimport {AddBankComponent} from \"app/system-setup/hr-setup/components/bank/add-bank/add-bank.component\";\r\nimport {IBankModel} from \"app/system-setup/hr-setup/models/bank\";\r\nimport {BankService} from \"app/system-setup/hr-setup/services/bank/bank.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-bank-dropdown\",\r\n  templateUrl: \"./bank-dropdown.component.html\",\r\n  styleUrls: [\"./bank-dropdown.component.scss\"],\r\n})\r\nexport class BankDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl | AbstractControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"bank\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  viewName: string;\r\n  bankList: IBankModel[];\r\n\r\n  constructor(private bankService: BankService) {\r\n    super();\r\n    this.viewName = ViewsManager.add_bank;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllBanks();\r\n  }\r\n\r\n  getAllBanks() {\r\n    this.bankService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IBankModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.bankList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddBankComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllBanks();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[multi]=\"multi\"\r\n\t[List]=\"bankList\"\r\n\t[submitted]=\"submitted\"\r\n\t[filter]=\"filter\"\r\n  [appendTo]=\"appendTo\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, Input} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {IBloodTypeModel} from \"app/system-setup/hr-setup/models/blood-type\";\r\nimport {BloodTypeService} from \"app/system-setup/hr-setup/services/blood-type.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-blood-type-dropdown\",\r\n  templateUrl: \"./blood-type-dropdown.component.html\",\r\n  styleUrls: [\"./blood-type-dropdown.component.scss\"],\r\n})\r\nexport class BloodTypeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"bloodType\";\r\n  @Input() appendTo: string | HTMLElement;\r\n\r\n  bloodTypeList: IBloodTypeModel[];\r\n\r\n  constructor(private bloodTypeService: BloodTypeService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllBloodTypes();\r\n  }\r\n\r\n  getAllBloodTypes() {\r\n    this.bloodTypeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: any) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.bloodTypeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"bloodTypeList\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n\t[appendTo]=\"appendTo\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ContactCategoryComponent } from \"app/system-setup/hr-setup/components/contact-category/contact-category.component\";\r\nimport {\r\n  IContactCategoryModel,\r\n  IContactCategoryResponse,\r\n} from \"app/system-setup/hr-setup/models/contact-category\";\r\nimport { ContactCategoryService } from \"app/system-setup/hr-setup/services/contact-category.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"contact-categories-by-contact-dropdown\",\r\n  templateUrl: \"./categories-by-contact-type-dropdown.component.html\",\r\n  styleUrls: [\"./categories-by-contact-type-dropdown.component.scss\"],\r\n})\r\nexport class CategoriesByContactTypeDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() contactTypControl: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"contactCategory\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n\r\n  // added from current structure\r\n  contactCategoryList: IContactCategoryModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(private contactCategoryService: ContactCategoryService) {\r\n    super();\r\n    this.viewName = ViewsManager.contact_category;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n\r\n    this.contactTypControl?.valueChanges.subscribe((contactTypId) => {\r\n      this.control.setValue(null);\r\n      if (contactTypId > 0) {\r\n        this.getAllCategoriesByContactType();\r\n        if (!this.disable) this.control.enable();\r\n      }\r\n      else this.control.disable();\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.contactTypControl.value > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllCategoriesByContactType();\r\n  }\r\n\r\n  getAllCategoriesByContactType() {\r\n    this.contactCategoryService\r\n      .getAllCategoriesByTypeId(this.contactTypControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IContactCategoryResponse[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          const list: IContactCategoryModel[] = [];\r\n          res.data.map((item) => {\r\n            list.push(item.comm_Contact_Category);\r\n          });\r\n          this.contactCategoryList = list;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(contactCategory: Idropdown[]) {\r\n    this.change.emit(contactCategory);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(\r\n        ContactCategoryComponent,\r\n        value,\r\n        this.contactTypControl.value\r\n      )\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.getAllCategoriesByContactType();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"contactCategoryList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ContactTypeComponent } from \"app/system-setup/hr-setup/components/contact-type/contact-type.component\";\r\nimport { IContactTypeModel } from \"app/system-setup/hr-setup/models/contact-type\";\r\nimport { ContactTypeService } from \"app/system-setup/hr-setup/services/contact-type.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-contact-type-dropdown\",\r\n  templateUrl: \"./contact-type-dropdown.component.html\",\r\n  styleUrls: [\"./contact-type-dropdown.component.scss\"],\r\n})\r\nexport class ContactTypeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"contactType\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IContactTypeModel[]>();\r\n\r\n  contactTypesList: IContactTypeModel[];\r\n  viewName: string;\r\n\r\n  constructor(private contactService: ContactTypeService) {\r\n    super();\r\n    this.viewName = ViewsManager.contact_type;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllContactType();\r\n  }\r\n\r\n  getAllContactType() {\r\n    this.contactService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IContactTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.contactTypesList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IContactTypeModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(ContactTypeComponent, value)\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.getAllContactType();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"contactTypesList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ContractTypeComponent } from \"app/system-setup/hr-setup/components/contract-type/contract-type.component\";\r\nimport { IContractTypeModel } from \"app/system-setup/hr-setup/models/contract-type\";\r\nimport { ContractTypeService } from \"app/system-setup/hr-setup/services/contract-type.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-contract-type-dropdown\",\r\n  templateUrl: \"./contract-type-dropdown.component.html\",\r\n  styleUrls: [\"./contract-type-dropdown.component.scss\"],\r\n})\r\nexport class ContractTypeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"contractType\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IContractTypeModel[]>();\r\n\r\n  contractTypesList: IContractTypeModel[];\r\n  viewName: string;\r\n\r\n  constructor(private contractService: ContractTypeService) {\r\n    super();\r\n    this.viewName = ViewsManager.contract_type;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllContractType();\r\n  }\r\n\r\n  getAllContractType() {\r\n    this.contractService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IContractTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.contractTypesList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IContractTypeModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(ContractTypeComponent, value)\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.getAllContractType();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"contractTypesList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { CountryComponent } from \"app/system-setup/hr-setup/components/country/country.component\";\r\nimport { ICountryModel } from \"app/system-setup/hr-setup/models/country\";\r\nimport { CountryService } from \"app/system-setup/hr-setup/services/country.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\n\r\n@Component({\r\n  selector: \"app-country-dropdown\",\r\n  templateUrl: \"./country-dropdown.component.html\",\r\n  styleUrls: [\"./country-dropdown.component.scss\"],\r\n})\r\nexport class GovernorateDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() setDefaultVal: boolean = false;\r\n  @Input() label: string = \"country\";\r\n  @Input() appendTo: string | HTMLElement | any;\r\n  @Output() change = new EventEmitter<ICountryModel[]>();\r\n\r\n  countrytList: ICountryModel[];\r\n  viewName: string;\r\n\r\n  constructor(private countryService: CountryService) {\r\n    super();\r\n    this.viewName = ViewsManager.country;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllCountry();\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ICountryModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.countrytList = res.data;\r\n          if (this.setDefaultVal && !Storage.getCountryID) this.control.setValue(res.data[0].id);\r\n        }\r\n        else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(CountryComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllCountry();\r\n      });\r\n  }\r\n\r\n  onChange(countries: ICountryModel[]) {\r\n    this.change.emit(countries);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"countrytList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IEducationDegreeModel } from \"app/system-setup/hr-setup/models/education-degree\";\r\nimport { EducationDegreeService } from \"app/system-setup/hr-setup/services/education-degree.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-education-degree-dropdown\",\r\n  templateUrl: \"./education-degree-dropdown.component.html\",\r\n  styleUrls: [\"./education-degree-dropdown.component.scss\"],\r\n})\r\nexport class EducationDegreeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"degree\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IEducationDegreeModel[]>();\r\n\r\n  degreeList: IEducationDegreeModel[];\r\n\r\n  constructor(private educationDegreeService: EducationDegreeService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllDegrees();\r\n  }\r\n\r\n  getAllDegrees() {\r\n    this.educationDegreeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEducationDegreeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.degreeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IEducationDegreeModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"degreeList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, Input, Output, EventEmitter} from \"@angular/core\";\r\nimport {AbstractControl, FormControl} from \"@angular/forms\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {Idropdown} from \"app/shared/interfaces/dropdown.interface\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {EducationGradeService} from \"app/system-setup/hr-setup/services/education-grade.service\";\r\n\r\n@Component({\r\n  selector: \"app-education-grade-dropdown\",\r\n  templateUrl: \"./education-grade-dropdown.component.html\",\r\n  styleUrls: [\"./education-grade-dropdown.component.scss\"],\r\n})\r\nexport class EducationGradeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl | AbstractControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"grade\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n\r\n  gradeList: Idropdown[];\r\n\r\n  constructor(private educationGradeService: EducationGradeService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllGrades();\r\n  }\r\n\r\n  getAllGrades() {\r\n    this.educationGradeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<Idropdown[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.gradeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: Idropdown[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"gradeList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { GenderService } from \"app/system-setup/hr-setup/services/gender.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-gender-dropdown\",\r\n  templateUrl: \"./gender-dropdown.component.html\",\r\n  styleUrls: [\"./gender-dropdown.component.scss\"],\r\n})\r\nexport class GenderDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() inculdeBoth: boolean = false;\r\n  @Input() label: string = \"gender\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n  genderList: Idropdown[];\r\n\r\n  constructor(private genderService: GenderService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllGenders();\r\n  }\r\n\r\n  getAllGenders() {\r\n    (this.inculdeBoth\r\n      ? this.genderService.getAllIncludeBoth()\r\n      : this.genderService.getAll()\r\n    )\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: any) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.genderList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: Idropdown[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"genderList\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n\t[appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {GovernorateComponent} from \"app/system-setup/hr-setup/components/governorate/governorate.component\";\r\nimport {IGovernorateModel} from \"app/system-setup/hr-setup/models/governorate\";\r\nimport {GovernorateService} from \"app/system-setup/hr-setup/services/governorate.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-governorate-by-country-dropdown\",\r\n  templateUrl: \"./governorate-by-country-dropdown.component.html\",\r\n  styleUrls: [\"./governorate-by-country-dropdown.component.scss\"],\r\n})\r\nexport class GovernorateByCountryDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() countryControl: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"governorate\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IGovernorateModel[]>();\r\n  viewName: string;\r\n\r\n  // added from current structure\r\n  governorateList: IGovernorateModel[] = [];\r\n\r\n  constructor(private governorateService: GovernorateService) {\r\n    super();\r\n    this.viewName = ViewsManager.governorate;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n\r\n    this.countryControl?.valueChanges.subscribe((countryId) => {\r\n      this.control.setValue(null);\r\n      if (countryId > 0) {\r\n        this.getAllGovernorateByCountry();\r\n        if (!this.disable) this.control.enable();\r\n      } else this.control.disable();\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.countryControl.value > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllGovernorateByCountry();\r\n  }\r\n\r\n  getAllGovernorateByCountry() {\r\n    this.governorateService\r\n      .getAllByCountryId(this.countryControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IGovernorateModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.governorateList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(governorate: IGovernorateModel[]) {\r\n    this.change.emit(governorate);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(\r\n        GovernorateComponent,\r\n        value,\r\n        this.countryControl.value\r\n      )\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllGovernorateByCountry();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"governorateList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {AfterViewInit, Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {HireDocumentsComponent} from 'app/system-setup/hr-setup/components/documents/hire-documents/hire-documents.component';\r\nimport {attachmentToMap} from 'app/system-setup/hr-setup/mapper/hire-document';\r\nimport {IHireDocumentsModel} from 'app/system-setup/hr-setup/models/hire-documents';\r\nimport {HireDocumentsService} from 'app/system-setup/hr-setup/services/hire-documents/hire-documents.service';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {ViewsManager} from 'app/shared/resources/views-manager';\r\nimport { IAttachmentTypesModel } from 'app/system-setup/general-setup/models/attachment-types';\r\n\r\n@Component({\r\n  selector: 'app-hiring-document-by-service-dropdown',\r\n  templateUrl: './hiring-document-by-service-dropdown.component.html',\r\n  styleUrls: ['./hiring-document-by-service-dropdown.component.scss'],\r\n})\r\nexport class HiringDocumentByServiceDropdownComponent extends BaseDropdown implements AfterViewInit {\r\n  @Input() control: FormControl;\r\n  @Input() serviceControl?: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multiple: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = 'hiringDocument';\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IAttachmentTypesModel[]>();\r\n  viewName: string;\r\n\r\n  serviceId?: number;\r\n  hiringDocumentList: IAttachmentTypesModel[];\r\n\r\n  constructor(private hireDocumentsService: HireDocumentsService) {\r\n    super();\r\n    this.viewName = ViewsManager.hire_documents;\r\n    this.serviceId = this.paramsService.serviceId$.getValue();\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    // console.log(this.serviceControl)\r\n    if (!this.serviceControl) {\r\n      this.paramsService.serviceId$.subscribe(serviceId => {\r\n        // console.log('serviceId$.subscribe', serviceId)\r\n        this.serviceId = serviceId\r\n        if (serviceId > 0) {\r\n          this.getAllHiringDocument();\r\n        }\r\n      })\r\n    } else {\r\n      this.control.disable();\r\n\r\n      this.serviceControl?.valueChanges.subscribe((serviceId) => {\r\n        this.serviceId = serviceId;\r\n        this.control.setValue(null);\r\n        if (serviceId > 0) {\r\n          this.getAllHiringDocument();\r\n          if (!this.disable) {\r\n            this.control.enable();\r\n          }\r\n        } else {\r\n          this.control.disable();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  // this.paramsService.serviceId$.subscribe(serviceId => {\r\n  //   console.log('serviceId$.subscribe', serviceId)\r\n  //   this.serviceId = serviceId\r\n  //   if (serviceId > 0) {\r\n  //     this.getAllHiringDocument();\r\n  //   }\r\n  // })\r\n  // for employee\r\n  // if (this.serviceId > 0) {\r\n  //   return;\r\n  // }\r\n  // if (!this.serviceControl) {\r\n  //   this.serviceId = this.paramsService.serviceId$.getValue();\r\n  //   this.hiringDocumentList = null;\r\n  //   this.getAllHiringDocument();\r\n  // } else {\r\n  //   this.control.disable();\r\n  //\r\n  //   this.serviceControl?.valueChanges.subscribe((serviceId) => {\r\n  //     this.serviceId = serviceId;\r\n  //     this.control.setValue(null);\r\n  //     if (serviceId > 0) {\r\n  //       this.getAllHiringDocument();\r\n  //       if (!this.disable) {\r\n  //         this.control.enable();\r\n  //       }\r\n  //     } else {\r\n  //       this.control.disable();\r\n  //     }\r\n  //   });\r\n  // }\r\n//  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.serviceId > 0) {\r\n      this.getAllHiringDocument();\r\n    }\r\n  }\r\n\r\n  getAllHiringDocument() {\r\n    // console.log(this.serviceId)\r\n    this.hireDocumentsService\r\n      .GetAllByServiceId(this.serviceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IHireDocumentsModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.hiringDocumentList = attachmentToMap(res.data);\r\n        } else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(values: IAttachmentTypesModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(HireDocumentsComponent, value, this.serviceId)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllHiringDocument();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"hiringDocumentList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multiple\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\">\r\n  >\r\n</app-prime-dropdown>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IdentityTypeComponent } from \"app/system-setup/hr-setup/components/identity-type/identity-type.component\";\r\nimport { IIdentityTypeModel } from \"app/system-setup/hr-setup/models/identity-type\";\r\nimport { IdentityTypeService } from \"app/system-setup/hr-setup/services/identity-type.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-identity-type-dropdown\",\r\n  templateUrl: \"./identity-type-dropdown.component.html\",\r\n  styleUrls: [\"./identity-type-dropdown.component.scss\"],\r\n})\r\nexport class IdentityTypeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"identityType\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IIdentityTypeModel[]>();\r\n\r\n  identityTypetList: IIdentityTypeModel[];\r\n  viewName: string;\r\n\r\n  constructor(private identityTypeService: IdentityTypeService) {\r\n    super();\r\n    this.viewName = ViewsManager.identity_type;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllIdentityType();\r\n  }\r\n\r\n  getAllIdentityType() {\r\n    this.identityTypeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IIdentityTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.identityTypetList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(IdentityTypeComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllIdentityType();\r\n      });\r\n  }\r\n\r\n  onChange(values: IIdentityTypeModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"identityTypetList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, Input, Output, EventEmitter} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {InstitutionComponent} from \"app/system-setup/hr-setup/components/institution/institution.component\";\r\nimport {IInstitutionModel} from \"app/system-setup/hr-setup/models/institution\";\r\nimport {InstitutionService} from \"app/system-setup/hr-setup/services/institution.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-institution-dropdown\",\r\n  templateUrl: \"./institution-dropdown.component.html\",\r\n  styleUrls: [\"./institution-dropdown.component.scss\"],\r\n})\r\nexport class InstitutionDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"institution\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IInstitutionModel[]>();\r\n\r\n  institutiontList: IInstitutionModel[];\r\n  viewName: string;\r\n\r\n  constructor(private institutionService: InstitutionService) {\r\n    super();\r\n    this.viewName = ViewsManager.identity_type;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllIdentityType();\r\n  }\r\n\r\n  getAllIdentityType() {\r\n    this.institutionService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IInstitutionModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.institutiontList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(InstitutionComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllIdentityType();\r\n      });\r\n  }\r\n\r\n  onChange(values: IInstitutionModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"institutiontList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {InsuranceOfficeService} from \"app/system-setup/hr-setup/services/insurance-office.service\";\r\nimport {AbstractControl, FormControl} from \"@angular/forms\";\r\nimport {IInsuranceOfficeModel} from \"app/system-setup/hr-setup/models/insurance-office\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {InsuranceOfficeComponent} from \"app/system-setup/hr-setup/components/insurance-office/insurance-office.component\";\r\n\r\n@Component({\r\n  selector: 'insurance-office-dropdown',\r\n  templateUrl: './insurance-office-dropdown.component.html',\r\n  styleUrls: ['./insurance-office-dropdown.component.scss']\r\n})\r\nexport class InsuranceOfficeDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl | AbstractControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"insuranceOffice\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IInsuranceOfficeModel[]>();\r\n\r\n  insuranceOfficeList: IInsuranceOfficeModel[];\r\n  viewName: string;\r\n\r\n  constructor(private insuranceOfficeService: InsuranceOfficeService) {\r\n    super();\r\n    this.viewName = ViewsManager.insurance_office;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(InsuranceOfficeComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n\r\n\r\n  getAll() {\r\n    this.insuranceOfficeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IInsuranceOfficeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.insuranceOfficeList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IInsuranceOfficeModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"insuranceOfficeList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IJobStatusModel } from \"app/system-setup/hr-setup/models/emp-job-status\";\r\nimport { EmpJobStatusService } from \"app/system-setup/hr-setup/services/emp-job-status.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-job-status-dropdown\",\r\n  templateUrl: \"./job-status-dropdown.component.html\",\r\n  styleUrls: [\"./job-status-dropdown.component.scss\"],\r\n})\r\nexport class JobStatusDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"status\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IJobStatusModel[]>();\r\n\r\n  statustList: IJobStatusModel[];\r\n\r\n  constructor(private empJobStatusService: EmpJobStatusService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllStatus();\r\n  }\r\n\r\n  getAllStatus() {\r\n    this.empJobStatusService\r\n      .getAllStatus()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobStatusModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.statustList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IJobStatusModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"statustList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IJobStatusEventModel } from \"app/system-setup/hr-setup/models/emp-job-status\";\r\nimport { EmpJobStatusService } from \"app/system-setup/hr-setup/services/emp-job-status.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-job-status-event-by-status-dropdown\",\r\n  templateUrl: \"./job-status-event-by-status-dropdown.component.html\",\r\n  styleUrls: [\"./job-status-event-by-status-dropdown.component.scss\"],\r\n})\r\nexport class JobStatusEventByStatusDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() statusControl: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"statusEvent\";\r\n  @Input() disable: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IJobStatusEventModel[]>();\r\n\r\n  // added from current structure\r\n  statusEventList: IJobStatusEventModel[] = [];\r\n\r\n  constructor(private empJobStatusService: EmpJobStatusService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n\r\n    this.statusControl?.valueChanges.subscribe((statusId) => {\r\n      this.control.setValue(null);\r\n      if (statusId > 0) {\r\n        this.getAllStatusEventByStatus();\r\n        if(!this.disable) this.control.enable();\r\n      } else this.control.disable();\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.statusControl.value > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllStatusEventByStatus();\r\n  }\r\n\r\n  getAllStatusEventByStatus() {\r\n    this.empJobStatusService\r\n      .getAllStatusEvents(this.statusControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobStatusEventModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.statusEventList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(statusEvent: IJobStatusEventModel[]) {\r\n    this.change.emit(statusEvent);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"statusEventList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { KpiComponent } from \"app/system-setup/hr-setup/components/kpi/kpi.component\";\r\nimport { IKpiModel } from \"app/system-setup/hr-setup/models/kpi\";\r\nimport { KpiService } from \"app/system-setup/hr-setup/services/kpi.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-kpi-dropdown\",\r\n  templateUrl: \"./kpi-dropdown.component.html\",\r\n  styleUrls: [\"./kpi-dropdown.component.scss\"],\r\n})\r\nexport class KpiDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"kpi\";\r\n\r\n  kpiList: IKpiModel[];\r\n  viewName: string;\r\n\r\n  constructor(private kpiService: KpiService) {\r\n    super();\r\n    this.viewName = ViewsManager.kpi;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.kpiService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IKpiModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.kpiList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(KpiComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[multi]=\"multi\"\r\n\t[List]=\"kpiList\"\r\n\t[submitted]=\"submitted\"\r\n\t[filter]=\"filter\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IMaritalStatusModel } from \"app/system-setup/hr-setup/models/marital-status\";\r\nimport { MaritalStatusService } from \"app/system-setup/hr-setup/services/marital-status.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-marital-status-dropdown\",\r\n  templateUrl: \"./marital-status-dropdown.component.html\",\r\n  styleUrls: [\"./marital-status-dropdown.component.scss\"],\r\n})\r\nexport class MaritalStatusDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"maritalStatus\";\r\n  @Input() appendTo: string | HTMLElement;\r\n\t@Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IMaritalStatusModel[]>();\r\n\r\n  maritalStatusList: IMaritalStatusModel[];\r\n\r\n  constructor(private maritalStatusService: MaritalStatusService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllMaritalStatus();\r\n  }\r\n\r\n  getAllMaritalStatus() {\r\n    this.maritalStatusService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IMaritalStatusModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.maritalStatusList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IMaritalStatusModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"maritalStatusList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IMilitaryGradeModel } from \"app/system-setup/hr-setup/models/military\";\r\nimport { MilitaryService } from \"app/system-setup/hr-setup/services/military.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-military-grade-dropdown\",\r\n  templateUrl: \"./military-grade-dropdown.component.html\",\r\n  styleUrls: [\"./military-grade-dropdown.component.scss\"],\r\n})\r\nexport class MilitaryGradeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"grade\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IMilitaryGradeModel[]>();\r\n\r\n  militaryGradeList: IMilitaryGradeModel[];\r\n\r\n  constructor(private militaryService: MilitaryService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllMilitaryGrade();\r\n  }\r\n\r\n  getAllMilitaryGrade() {\r\n    this.militaryService\r\n      .getAllMilitaryGrades()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IMilitaryGradeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.militaryGradeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IMilitaryGradeModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"militaryGradeList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IMilitaryStatusModel } from \"app/system-setup/hr-setup/models/military\";\r\nimport { MilitaryService } from \"app/system-setup/hr-setup/services/military.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-military-status-dropdown\",\r\n  templateUrl: \"./military-status-dropdown.component.html\",\r\n  styleUrls: [\"./military-status-dropdown.component.scss\"],\r\n})\r\nexport class MilitaryStatusDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"status\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IMilitaryStatusModel[]>();\r\n\r\n  militaryStatusList: IMilitaryStatusModel[];\r\n\r\n  constructor(private militaryService: MilitaryService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllMilitaryStatus();\r\n  }\r\n\r\n  getAllMilitaryStatus() {\r\n    this.militaryService\r\n      .getAllMilitaryStatus()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IMilitaryStatusModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.militaryStatusList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IMilitaryStatusModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"militaryStatusList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { NationalityComponent } from \"app/system-setup/hr-setup/components/nationality/nationality.component\";\r\nimport { INationalityModel } from \"app/system-setup/hr-setup/models/nationality\";\r\nimport { NationalityService } from \"app/system-setup/hr-setup/services/nationality.service\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-nationality-dropdown\",\r\n  templateUrl: \"./nationality-dropdown.component.html\",\r\n  styleUrls: [\"./nationality-dropdown.component.scss\"],\r\n})\r\nexport class NationalityDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"nationality\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<INationalityModel[]>();\r\n\r\n  nationalities: INationalityModel[];\r\n  viewName: string;\r\n\r\n  constructor(private nationalityService: NationalityService) {\r\n    super();\r\n    this.viewName = ViewsManager.nationality;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllNationalities();\r\n  }\r\n\r\n  getAllNationalities() {\r\n    this.nationalityService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<INationalityModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.nationalities = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(NationalityComponent, value)\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.getAllNationalities();\r\n      });\r\n  }\r\n\r\n  onChange(values: INationalityModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"nationalities\"\r\n\t[filter]=\"filter\"\r\n\t[appendTo]=\"appendTo\"\r\n\t[multi]=\"multi\"\r\n\t(change)=\"onChange($event)\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ReligionComponent } from \"app/system-setup/hr-setup/components/religion/religion.component\";\r\nimport { IReligionModel } from \"app/system-setup/hr-setup/models/religion\";\r\nimport { ReligionService } from \"app/system-setup/hr-setup/services/religion.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"religion-dropdown\",\r\n  templateUrl: \"./religion-dropdown.component.html\",\r\n  styleUrls: [\"./religion-dropdown.component.scss\"],\r\n})\r\nexport class ReligionDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"religion\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IReligionModel[]>();\r\n  religions: IReligionModel[];\r\n  viewsManager = ViewsManager;\r\n\r\n  constructor(private religionService: ReligionService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllReligions();\r\n  }\r\n\r\n  getAllReligions() {\r\n    this.religionService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IReligionModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.religions = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(ReligionComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllReligions();\r\n      });\r\n  }\r\n\r\n  onChange(values: IReligionModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[submitted]=\"submitted\"\r\n\tlabel=\"religion\"\r\n\t[List]=\"religions\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n\t[appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n\t[viewName]=\"viewsManager.religion\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { LocViolationsService } from \"app/system-setup/localization-setup/services/localization-violations.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ILocViolationAllType } from \"app/system-setup/localization-setup/models/localization-violations\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\n\r\n@Component({\r\n  selector: \"app-local-types\",\r\n  templateUrl: \"./local-types.component.html\",\r\n  styleUrls: [\"./local-types.component.scss\"],\r\n})\r\nexport class LocalTypesComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = true;\r\n  @Input() setDefaultVal: boolean = false;\r\n  @Input() label: string = \"typeName\";\r\n  @Input() appendTo: string | HTMLElement | any;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n\r\n  typesList: Idropdown[] = [];\r\n\r\n  constructor(private violationsService: LocViolationsService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.checkNoVersionOrCountry())\r\n      this.getAllTypes();\r\n  }\r\n\r\n  override onChangeVersionOrCountry() {\r\n    if (this.checkNoBusinessOrCompany() && this.checkNoVersionOrCountry())\r\n      this.getAllTypes();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getAllTypes() {\r\n    this.violationsService\r\n      .getAllTypes()\r\n      .subscribe((res: IResponse<ILocViolationAllType[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.typesList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(versions: Idropdown[]) {\r\n    this.change.emit(versions);\r\n  }\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"typesList\"\r\n                    [filter]=\"filter\"\r\n                    [multi]=\"multi\"\r\n                    [appendTo]=\"appendTo\"\r\n                    (change)=\"onChange($event)\">\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { IViolationTypeModel } from \"app/system-setup/penalty-regulations-setup/models/violation-types\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { LocViolationTypesService } from \"app/system-setup/localization-setup/services/localization-violation-types.service\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport {\r\n  LocViolationTypesComponent\r\n} from \"app/system-setup/localization-setup/components/localization-violation-types/loc-violation-types.component\";\r\nimport { ILocViolationTypeModel } from \"app/system-setup/localization-setup/models/localization-violation-types\";\r\n\r\n@Component({\r\n  selector: \"local-violation-types\",\r\n  templateUrl: \"./local-violation-types.component.html\",\r\n  styleUrls: [\"./local-violation-types.component.scss\"],\r\n})\r\nexport class LocalViolationTypesComponent\r\n  extends BaseDropdown\r\n  implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = true;\r\n  @Input() setDefaultVal: boolean = false;\r\n  @Input() label: string = \"violationType\";\r\n  @Input() appendTo: string | HTMLElement | any;\r\n  @Output() change = new EventEmitter<IViolationTypeModel[]>();\r\n\r\n  violationTypesList: ILocViolationTypeModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(private violationTypesService: LocViolationTypesService) {\r\n    super();\r\n    this.viewName = ViewsManager.violation_types;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.checkNoVersionOrCountry())\r\n      this.getAll();\r\n  }\r\n\r\n  override onChangeVersionOrCountry() {\r\n    if (this.checkNoBusinessOrCompany() && this.checkNoVersionOrCountry())\r\n      this.getAll();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getAll() {\r\n    this.violationTypesService\r\n      .getAll()\r\n      .subscribe((res: IResponse<ILocViolationTypeModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.violationTypesList = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(LocViolationTypesComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n\r\n  onChange(Violation: IViolationTypeModel[]) {\r\n    this.change.emit(Violation);\r\n  }\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"violationTypesList\"\r\n                    [filter]=\"filter\"\r\n                    [multi]=\"multi\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\"\r\n                    [appendTo]=\"appendTo\"\r\n                    (change)=\"onChange($event)\">\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ILocPenaltyModel } from \"app/system-setup/localization-setup/models/localization-penalties\";\r\nimport { LocPenaltiesService } from \"app/system-setup/localization-setup/services/localization-penalties.service\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { LocPenaltiesComponent } from \"app/system-setup/localization-setup/components/localization-penalties/loc-penalties.component\";\r\n\r\n@Component({\r\n  selector: \"loc-penalties-dropdown\",\r\n  templateUrl: \"./penalties-dropdown.component.html\",\r\n  styleUrls: [\"./penalties-dropdown.component.scss\"]\r\n})\r\nexport class PenaltiesDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = true;\r\n  @Input() label: string = \"penalty\";\r\n  @Input() appendTo: string | HTMLElement | any;\r\n  @Output() change = new EventEmitter<ILocPenaltyModel[]>();\r\n  list: ILocPenaltyModel[];\r\n  viewName: string;\r\n\r\n  constructor(private penaltiesService: LocPenaltiesService) {\r\n    super();\r\n    this.viewName = ViewsManager.localization_penalties;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  override onChangeVersionOrCountry() {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.penaltiesService\r\n      .getAll()\r\n      .subscribe((res: IResponse<ILocPenaltyModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.list = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(LocPenaltiesComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n\r\n  onChange(versions: ILocPenaltyModel[]) {\r\n    this.change.emit(versions);\r\n  }\r\n\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"list\"\r\n                    [filter]=\"filter\"\r\n                    [multi]=\"multi\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\"\r\n                    [appendTo]=\"appendTo\"\r\n                    (change)=\"onChange($event)\">\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ILocVersion, ILocVersionsGetAllDropdown, } from \"app/system-setup/localization-setup/models/localization-version\";\r\nimport { LocVersionService } from \"app/system-setup/localization-setup/services/localization-version.service\";\r\nimport {\r\n  LocAddVersionComponent\r\n} from \"app/system-setup/localization-setup/components/localization-version/localization-add-version/loc-add-version.component\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\n\r\n@Component({\r\n  selector: \"app-versions-dropdown\",\r\n  templateUrl: \"./versions-dropdown.component.html\",\r\n  styleUrls: [\"./versions-dropdown.component.scss\"],\r\n})\r\nexport class VersionsDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = true;\r\n  @Input() setDefaultVal: boolean = false;\r\n  @Input() hideCreateNew: boolean = false;\r\n  @Input() label: string = \"versions\";\r\n  @Input() appendTo: string | HTMLElement | any;\r\n  @Output() change = new EventEmitter<ILocVersion[]>();\r\n\r\n  list: ILocVersionsGetAllDropdown[];\r\n  viewName: string;\r\n\r\n  constructor(private versionService: LocVersionService) {\r\n    super();\r\n    this.viewName = ViewsManager.version_index;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllVersions();\r\n  }\r\n\r\n  override onChangeVersionOrCountry() {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllVersions();\r\n  }\r\n\r\n  getAllVersions() {\r\n    this.versionService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ILocVersionsGetAllDropdown[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data.map((e) => {\r\n            e.ar_Name = e.name;\r\n            e.en_Name = e.name;\r\n          });\r\n          this.list = res.data;\r\n          if (this.setDefaultVal && !Storage.getVersionID)\r\n            this.control.setValue(res.data[0].id);\r\n        }\r\n        else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(LocAddVersionComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllVersions();\r\n      });\r\n  }\r\n\r\n  onChange(versions: ILocVersionsGetAllDropdown[]) {\r\n    this.change.emit(versions);\r\n  }\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"list\"\r\n                    [filter]=\"filter\"\r\n                    [multi]=\"multi\"\r\n                    [viewName]=\"!hideCreateNew?viewName:null\"\r\n                    (createNewDialog)=\"createDialog($event)\"\r\n                    [appendTo]=\"appendTo\"\r\n                    (change)=\"onChange($event)\">\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { LocViolationsService } from \"app/system-setup/localization-setup/services/localization-violations.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ILocViolationModel, ILocViolationResponse } from \"app/system-setup/localization-setup/models/localization-violations\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { locViolationToMap } from \"app/system-setup/localization-setup/mapper/localization-violations\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport {\r\n  LocAddViolationComponent\r\n} from \"app/system-setup/localization-setup/components/localization-violations/localization-add-violation/loc-add-violation.component\";\r\n\r\n@Component({\r\n  selector: \"loc-violation-dropdown\",\r\n  templateUrl: \"./violation-dropdown.component.html\",\r\n  styleUrls: [\"./violation-dropdown.component.scss\"]\r\n})\r\nexport class ViolationDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = true;\r\n  @Input() label: string = \"violations\";\r\n  @Input() appendTo: string | HTMLElement | any;\r\n  @Output() change = new EventEmitter<ILocViolationModel[]>();\r\n  viewName: string;\r\n  list: ILocViolationModel[];\r\n\r\n  constructor(private violationsService: LocViolationsService,) {\r\n    super();\r\n    this.viewName = ViewsManager.localization_violations_index;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  override onChangeVersionOrCountry() {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.violationsService\r\n      .getAll()\r\n      .subscribe((res: IResponse<ILocViolationResponse[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.list = locViolationToMap(res.data);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(LocAddViolationComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n\r\n  onChange(versions: ILocViolationModel[]) {\r\n    this.change.emit(versions);\r\n  }\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"list\"\r\n                    [filter]=\"filter\"\r\n                    [multi]=\"multi\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\"\r\n                    [appendTo]=\"appendTo\"\r\n                    (change)=\"onChange($event)\">\r\n</app-prime-dropdown>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {ICompetenceLevelModel} from \"app/system-setup/org-management-setup/models/competence-level\";\r\nimport {CompetenceLevelService} from \"app/system-setup/org-management-setup/services/competence-level.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-competence-level-by-competence-dropdown\",\r\n  templateUrl: \"./competence-level-by-competence-dropdown.component.html\",\r\n  styleUrls: [\"./competence-level-by-competence-dropdown.component.scss\"],\r\n})\r\nexport class CompetenceLevelByCompetenceDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() competenceControl: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"competenceLevel\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<ICompetenceLevelModel[]>();\r\n  // viewName: string;\r\n  competenceLevelList: ICompetenceLevelModel[] = [];\r\n\r\n  constructor(private competenceLevelService: CompetenceLevelService) {\r\n    super();\r\n    // this.viewName = ViewsManager.add_competence_details;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n\r\n    this.competenceControl?.valueChanges.subscribe((competenceId) => {\r\n      this.control.setValue(null);\r\n      if (competenceId > 0) {\r\n        this.getAllCompetenceLevelsByCompetence();\r\n        if (!this.disable) this.control.enable();\r\n      } else this.control.disable();\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.competenceControl.value > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllCompetenceLevelsByCompetence();\r\n  }\r\n\r\n  getAllCompetenceLevelsByCompetence() {\r\n    this.competenceLevelService\r\n      .getAllByCompetenceId(this.competenceControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICompetenceLevelModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.competenceLevelList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(competenceLevel: ICompetenceLevelModel[]) {\r\n    this.change.emit(competenceLevel);\r\n  }\r\n\r\n  // createDialog(value: string) {\r\n  //   this.dialogsService\r\n  //     .addFromDropdownDialog(\r\n  //       /* add competence details */,\r\n  //       value,\r\n  //       this.competenceControl.value\r\n  //     )\r\n  //     .afterClosed()\r\n  //     .subscribe((res) => {\r\n  //       this.getAllCompetenceLevelsByCompetence();\r\n  //     });\r\n  // }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"competenceLevelList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n<!--\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n -->\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {ICustodyModel} from \"app/system-setup/org-management-setup/models/custodies\";\r\nimport {\r\n  EmployeeCustodiesService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-custodies.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-custodies-by-employee-dropdown\",\r\n  templateUrl: \"./custodies-by-employee-dropdown.component.html\",\r\n  styleUrls: [\"./custodies-by-employee-dropdown.component.scss\"],\r\n})\r\nexport class CustodiesByEmployeeDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"custodies\";\r\n  @Input() employeeInstanceId: number = 0;\r\n  // viewName: string;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<ICustodyModel[]>();\r\n\r\n  custodies: ICustodyModel[];\r\n\r\n  constructor(private employeeCustodiesService: EmployeeCustodiesService) {\r\n    super();\r\n    // this.viewName = ViewsManager.custodies;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.employeeInstanceId > 0)\r\n      this.getAllCustodies();\r\n  }\r\n\r\n  getAllCustodies() {\r\n    this.employeeCustodiesService\r\n      .getAllCustodiesForEmployee(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICustodyModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.custodies = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  // createDialog(value: string) {\r\n  //   this.dialogsService\r\n  //     .addFromDropdownDialog(CustodiesComponent, value)\r\n  //     .afterClosed()\r\n  //     .subscribe((res) => {\r\n  //       this.getAllCustodies();\r\n  //     });\r\n  // }\r\n\r\n  onChange(values: ICustodyModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"custodies\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n\t[appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n<!--\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n -->\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { CustodiesComponent } from \"app/system-setup/org-management-setup/components/custodies/custodies.component\";\r\nimport { ICustodyModel } from \"app/system-setup/org-management-setup/models/custodies\";\r\nimport { CustodiesService } from \"app/system-setup/org-management-setup/services/custodies.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-custodies-dropdown\",\r\n  templateUrl: \"./custodies-dropdown.component.html\",\r\n  styleUrls: [\"./custodies-dropdown.component.scss\"],\r\n})\r\nexport class CustodiesDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"custodies\";\r\n  viewName: string;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<ICustodyModel[]>();\r\n\r\n  custodies: ICustodyModel[];\r\n\r\n  constructor(private custodiesService: CustodiesService) {\r\n    super();\r\n    this.viewName = ViewsManager.custodies;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllCustodies();\r\n  }\r\n\r\n  getAllCustodies() {\r\n    this.custodiesService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICustodyModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.custodies = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(CustodiesComponent, value)\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.getAllCustodies();\r\n      });\r\n  }\r\n\r\n  onChange(values: ICustodyModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"custodies\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n\t[appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { JobFamiliesComponent } from \"app/system-setup/org-management-setup/components/job-families/job-families.component\";\r\nimport { IJobFamilyModel } from \"app/system-setup/org-management-setup/models/job-families\";\r\nimport { JobFamiliesService } from \"app/system-setup/org-management-setup/services/job-families.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n\tselector: \"app-job-family-by-org-dropdown\",\r\n\ttemplateUrl: \"./job-family-by-org-dropdown.component.html\",\r\n\tstyleUrls: [\"./job-family-by-org-dropdown.component.scss\"],\r\n})\r\nexport class JobFamilyByOrgDropdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() organizationControl: FormControl;\r\n\t@Input() organizationControlRequired: boolean = true;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() disable: boolean = false;\r\n\t@Input() label: string = \"jobFamily\";\r\n\tviewName: string;\r\n\r\n\tjobFamiliesList: IJobFamilyModel[] = [];\r\n\tfilteredJobFamiliesList: IJobFamilyModel[] = [];\r\n\r\n\tconstructor(private jobFamiliesService: JobFamiliesService) {\r\n\t\tsuper();\r\n\t}\r\n\toverride onModulesChanged() {\r\n\t\tthis.viewName = ViewsManager.job_families;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.getAllJobFamillies();\r\n\r\n\t\tif (this.organizationControlRequired) this.control.disable();\r\n\t\tthis.organizationControl?.valueChanges.subscribe((organizationId) => {\r\n\t\t\t// if org control is required\r\n\t\t\tif (this.organizationControlRequired) {\r\n\t\t\t\tthis.resetControl();\r\n\t\t\t\tif (organizationId > 0) {\r\n\t\t\t\t\tthis.getAllJobFamilliesByOrgId();\r\n\t\t\t\t\tif(!this.disable) this.control.enable();\r\n\t\t\t\t} else this.control.disable();\r\n\t\t\t}\r\n\t\t\t// if org control not required\r\n\t\t\telse {\r\n\t\t\t\tif (organizationId > 0) {\r\n\t\t\t\t\tthis.resetControl();\r\n\t\t\t\t\tthis.getAllJobFamilliesByOrgId();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany())\r\n\t\t\tthis.organizationControl?.value > 0\r\n\t\t\t\t? this.getAllJobFamilliesByOrgId()\r\n\t\t\t\t: this.getAllJobFamillies();\r\n\t}\r\n\r\n\tgetAllJobFamilliesByOrgId() {\r\n\t\tthis.jobFamiliesService\r\n\t\t\t.getAllByOrgId(this.organizationControl.value)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IJobFamilyModel[]>) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\tthis.filteredJobFamiliesList = res.data;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetAllJobFamillies() {\r\n\t\tthis.jobFamiliesService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobFamilyModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.jobFamiliesList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n\t}\r\n\r\n\tresetControl() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.control.reset();\r\n\t\t}, 10);\r\n\t}\r\n\tcreateDialog(value: string) {\r\n\t\tthis.dialogsService\r\n\t\t\t.addFromDropdownDialog(JobFamiliesComponent, value)\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tthis.getAllJobFamillies();\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[multi]=\"multi\"\r\n\t[List]=\"organizationControl.value > 0 ? filteredJobFamiliesList : jobFamiliesList\"\r\n\t[submitted]=\"submitted\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { IJobFamilyModel } from \"app/system-setup/org-management-setup/models/job-families\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { JobFamiliesService } from \"app/system-setup/org-management-setup/services/job-families.service\";\r\nimport { JobFamiliesComponent } from \"app/system-setup/org-management-setup/components/job-families/job-families.component\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-job-family-dropdown\",\r\n  templateUrl: \"./job-family-dropdown.component.html\",\r\n  styleUrls: [\"./job-family-dropdown.component.scss\"]\r\n})\r\nexport class JobFamilyDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = true;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"jobFamily\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IJobFamilyModel[]>();\r\n\r\n  viewName: string;\r\n  jobFamilyList: IJobFamilyModel[] = [];\r\n\r\n  constructor(private jobFamiliesService: JobFamiliesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onModulesChanged() {\r\n    this.viewName = ViewsManager.job_families;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.jobFamiliesService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobFamilyModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.jobFamilyList = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(JobFamiliesComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n\r\n\r\n  onChange(values: IJobFamilyModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"jobFamilyList\"\r\n                    [filter]=\"filter\"\r\n                    [multi]=\"multi\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\"\r\n                    [appendTo]=\"appendTo\"\r\n                    (change)=\"onChange($event)\">\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IOrganizationTypeModel } from \"app/system-setup/org-management-setup/models/organization-types\";\r\nimport { OrganizationTypesService } from \"app/system-setup/org-management-setup/services/organization-types.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-org-types-dropdown-current-structure\",\r\n\ttemplateUrl: \"./org-types-dropdown-current-structure.component.html\",\r\n\tstyleUrls: [\"./org-types-dropdown-current-structure.component.scss\"],\r\n})\r\nexport class OrgTypesDropdownCurrentStructureComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() disable: boolean = false;\r\n\t@Input() label: string = \"organizationTypes\";\r\n\t@Input() appendTo: string | HTMLElement;\r\n\t@Output() change = new EventEmitter<IOrganizationTypeModel[]>();\r\n\t//viewName: string;\r\n\r\n\torganizationTypeList: IOrganizationTypeModel[];\r\n\r\n\tconstructor(private organizationTypesService: OrganizationTypesService) {\r\n\t\tsuper();\r\n\t\t//this.viewName = ViewsManager.add_org_structure;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.CheckNoBusinessOrCompany()) this.getAllCurrentOrganizationTypes();\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.getAllCurrentOrganizationTypes();\r\n\t}\r\n\r\n\tgetAllCurrentOrganizationTypes() {\r\n\t\tthis.organizationTypesService\r\n\t\t\t.getAllInCurrentStructure()\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IOrganizationTypeModel[]>) => {\r\n\t\t\t\tif ((res.message.messageType = MessageTypes.Success)) {\r\n\t\t\t\t\tthis.organizationTypeList = res.data;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tonChange(orgType: IOrganizationTypeModel[]) {\r\n\t\tthis.change.emit(orgType);\r\n\t}\r\n\t// createDialog(value: string) {\r\n\t//   this.dialogsService\r\n\t//     .addFromDropdownDialog(AddOrgStructureComponent, value)\r\n\t//     .afterClosed()\r\n\t//     .subscribe((res) => {\r\n\t//       this.getAllCurrentOrganizationTypes();\r\n\t//     });\r\n\t// }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"organizationTypeList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n\r\n>\r\n</app-prime-dropdown>\r\n<!--\r\n<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"organizationTypeList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown> -->\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { OrganizationTypesComponent } from \"app/system-setup/org-management-setup/components/organization-types/organization-types.component\";\r\nimport { IOrganizationTypeModel } from \"app/system-setup/org-management-setup/models/organization-types\";\r\nimport { OrganizationTypesService } from \"app/system-setup/org-management-setup/services/organization-types.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-org-types-dropdown\",\r\n\ttemplateUrl: \"./org-types-dropdown.component.html\",\r\n\tstyleUrls: [\"./org-types-dropdown.component.scss\"],\r\n})\r\nexport class OrgTypesDropdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"organizationTypes\";\r\n\t@Input() appendTo: string | HTMLElement = \"body\";\r\n\t@Input() optionDisabled: string = \"isDisabled\";\r\n\t@Output() change = new EventEmitter<IOrganizationTypeModel[]>();\r\n\r\n\t// use in org strcuture\r\n\t@Input() disableCompany: boolean = false;\r\n\t// @Input() selectCompanyOnly: boolean = false;\r\n\r\n\torganizationTypeList: IOrganizationTypeModel[];\r\n\tviewName: string;\r\n\r\n\tconstructor(private organizationTypesService: OrganizationTypesService) {\r\n\t\tsuper();\r\n\t\tthis.viewName = ViewsManager.organization_types;\r\n\t}\r\n\r\n\tngOnInit(): void {}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.getAllOrganizationTypes();\r\n\t}\r\n\r\n\tgetAllOrganizationTypes() {\r\n\t\t// this.showLoading();\r\n\t\tthis.organizationTypesService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IOrganizationTypeModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (this.disableCompany)\r\n            res.data.map((type) => (type.isDisabled = this.isCompany(type)));\r\n          this.organizationTypeList = res.data;\r\n\r\n          // if (this.selectCompanyOnly) {\r\n          //   this.control.setValue(1);\r\n          //   this.control.disable();\r\n          // }\r\n        } else this.errorList(res?.message?.messages);\r\n        // this.hideLoading();\r\n      });\r\n\t}\r\n\r\n\tonChange(orgType: IOrganizationTypeModel[]) {\r\n\t\tthis.change.emit(orgType);\r\n\t}\r\n\r\n\tisCompany(orgType: IOrganizationTypeModel) {\r\n\t\treturn (\r\n\t\t\torgType.en_Name.toLowerCase() == \"company\" ||\r\n\t\t\torgType.ar_Name.includes(\"شركة\") ||\r\n\t\t\torgType.ar_Name.includes(\"شركه\")\r\n\t\t);\r\n\t}\r\n\r\n\tcreateDialog(value: string) {\r\n\t\tthis.dialogsService\r\n\t\t\t.addFromDropdownDialog(OrganizationTypesComponent, value)\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tthis.getAllOrganizationTypes();\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[multi]=\"multi\"\r\n\t[List]=\"organizationTypeList\"\r\n\t[submitted]=\"submitted\"\r\n\t[filter]=\"filter\"\r\n\t[optionDisabled]=\"optionDisabled\"\r\n\t[appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IOrganizationModel } from \"app/system-setup/org-management-setup/models/organizations\";\r\nimport { OrganizationsService } from \"app/system-setup/org-management-setup/services/organizations.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-organization-by-org-type-dropdown\",\r\n  templateUrl: \"./organization-by-org-type-dropdown.component.html\",\r\n  styleUrls: [\"./organization-by-org-type-dropdown.component.scss\"],\r\n})\r\nexport class OrganizationByOrgTypeDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() orgTypeControl: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"organization\";\r\n  @Input() disable: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IOrganizationModel[]>();\r\n\r\n  // added from current structure\r\n  organizationList: IOrganizationModel[] = [];\r\n\r\n  constructor(private organizationsService: OrganizationsService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control!.disable();\r\n\r\n    this.orgTypeControl?.valueChanges.subscribe((orgTypeId) => {\r\n      this.control!.setValue(null);\r\n      if (orgTypeId > 0) {\r\n        this.getAllOrganizationsByOrgType();\r\n        if (!this.disable) this.control.enable();\r\n      }\r\n      else {\r\n        this.control.disable();\r\n        this.organizationList = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.orgTypeControl.value > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllOrganizationsByOrgType();\r\n  }\r\n\r\n  getAllOrganizationsByOrgType() {\r\n    this.organizationsService\r\n      .GetAllInCurrentStructureByOrgType(this.orgTypeControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IOrganizationModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.organizationList = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(organization: IOrganizationModel[]) {\r\n    //  console.log(\"organization\", organization);\r\n    this.change.emit(organization);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"organizationList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IBusinessEntityModel } from \"app/org-management/model/business-entity\";\r\nimport { BusinessEntityService } from \"app/org-management/services/business-entity.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-Business-dropdown\",\r\n  templateUrl: \"./Business-dropdown.component.html\",\r\n  styleUrls: [\"./Business-dropdown.component.scss\"],\r\n})\r\nexport class BusinessDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"Business\";\r\n\r\n  businessList: IBusinessEntityModel[];\r\n\r\n  constructor(private businessEntityService: BusinessEntityService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllBusiness();\r\n  }\r\n\r\n  getAllBusiness() {\r\n    this.businessEntityService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IBusinessEntityModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.businessList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"businessList\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IOrganizationModel } from \"app/system-setup/org-management-setup/models/organizations\";\r\nimport { OrgStructureService } from \"app/org-management/services/org-structure/org-structure.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"company-by-businessId-dropdown\",\r\n  templateUrl: \"./company-dropdown.component.html\",\r\n  styleUrls: [\"./company-dropdown.component.scss\"],\r\n})\r\nexport class CompanyDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() businessControl = new FormControl();\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() disabledIds: number[];\r\n  @Input() label: string = \"company\";\r\n  @Input() appendTo: string | HTMLElement;\r\n\r\n  companyList: IOrganizationModel[];\r\n\r\n  // private destroy$ = new Subject<void>();\r\n\r\n  constructor(private orgStructureService: OrgStructureService) {\r\n    super();\r\n    if (this.businessControl.value) this.companyList = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n\r\n    this.businessControl?.valueChanges.subscribe((businessId) => {\r\n      //\tthis.control.setValue(null);\r\n      if (businessId > 0) {\r\n        this.getAllcompanysByBusiness();\r\n        if (!this.disable) this.control.enable();\r\n      }\r\n      else this.control.disable();\r\n    });\r\n\r\n    if (!this.businessControl?.value) {\r\n      this.businessControl?.setValue(this.businessCompanyParams.BusinessEntityID);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.businessControl?.value > 0 && this.checkNoBusinessOrCompany()) {\r\n    }\r\n    //\tthis.getAllcompanysByBusiness();\r\n  }\r\n\r\n  getAllcompanysByBusiness() {\r\n    this.orgStructureService\r\n      .getCurrentCompaniesByBusinessId(this.businessControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: any) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          res.data.map((item) => {\r\n            if (this.disabledIds?.includes(item.id)) item.isDisabled = true;\r\n          });\r\n          this.companyList = res.data;\r\n          //\tconsole.log(\"companyList\", this.companyList);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  // \t// Unsubscribe from all observables to prevent memory leaks\r\n  // \tthis.destroy$.next();\r\n  // \tthis.destroy$.complete();\r\n  // }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"companyList\"\r\n\t[filter]=\"filter\"\r\n\t[multi]=\"multi\"\r\n\t[disable]=\"disable\"\r\n\t[appendTo]=\"appendTo\"\r\n\toptionDisabled=\"isDisabled\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {ICompetenceModel} from \"app/org-management/model/competence\";\r\nimport {CompetenceService} from \"app/org-management/services/competence.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-competence-dropdown\",\r\n  templateUrl: \"./competence-dropdown.component.html\",\r\n  styleUrls: [\"./competence-dropdown.component.scss\"],\r\n})\r\nexport class CompetenceDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"competence\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<ICompetenceModel[]>();\r\n  // viewName: string;\r\n  competenceList: ICompetenceModel[];\r\n\r\n  constructor(private competenceService: CompetenceService) {\r\n    super();\r\n    // this.viewName = ViewsManager.add_competence;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllCompetences();\r\n  }\r\n\r\n  getAllCompetences() {\r\n    this.competenceService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICompetenceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.competenceList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(competence: ICompetenceModel[]) {\r\n    this.change.emit(competence);\r\n  }\r\n\r\n  // createDialog(value: string) {\r\n  //   this.dialogsService\r\n  //     .addFromDropdownDialog(/* add competence component */, value)\r\n  //     .afterClosed()\r\n  //     .subscribe((res) => {\r\n  //       this.getAllCompetences();\r\n  //     });\r\n  // }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"competenceList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n<!--\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n -->\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { AssignJobToOrgComponent } from \"app/org-management/components/jobs-profile/assign-job-to-org/assign-job-to-org.component\";\r\nimport { IJobTitleModel } from \"app/org-management/model/job-title\";\r\nimport { JobTitleService } from \"app/org-management/services/job-profile/job-title.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-job-title-by-org-dropdown\",\r\n  templateUrl: \"./job-title-by-org-dropdown.component.html\",\r\n  styleUrls: [\"./job-title-by-org-dropdown.component.scss\"],\r\n})\r\nexport class JobTitleByOrgDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() organizationControl: FormControl;\r\n  @Input() organizationControlRequired: boolean = false;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"jobTitle\";\r\n  @Input() disable: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IJobTitleModel[]>();\r\n  viewName: string;\r\n\r\n  jobTitleList: IJobTitleModel[];\r\n  filteredJobTitleList: IJobTitleModel[];\r\n\r\n  constructor(private jobTitleService: JobTitleService) {\r\n    super();\r\n    this.viewName = ViewsManager.assign_job_to_org;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getAllJobTitles();\r\n\r\n    if (this.organizationControlRequired) {\r\n      this.control.disable();\r\n      this.filteredJobTitleList = [];\r\n      this.jobTitleList = [];\r\n    }\r\n    this.organizationControl?.valueChanges.subscribe((organizationId) => {\r\n      this.control.setValue(null);\r\n      // if org control is required\r\n      if (this.organizationControlRequired) {\r\n        this.filteredJobTitleList = organizationId > 0 ? null : [];\r\n        this.resetControl();\r\n        if (organizationId > 0) {\r\n          this.getAllJobTitlesByOrgId();\r\n          if (!this.disable) {\r\n            this.control.enable();\r\n          }\r\n        }\r\n        else {\r\n          this.control.disable();\r\n        }\r\n      }\r\n\r\n      // if org control not required\r\n      else {\r\n        this.getAllJobTitles();\r\n        // if (organizationId > 0) {\r\n        //   this.resetControl();\r\n        //   this.getAllJobTitlesByOrgId();\r\n        // }\r\n      }\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n\r\n      // if org control is required\r\n      if (this.organizationControlRequired) {\r\n        this.resetControl();\r\n        if (this.organizationControl.value > 0) {\r\n          this.getAllJobTitlesByOrgId();\r\n          if (!this.disable) {\r\n            this.control.enable();\r\n          }\r\n        }\r\n        else {\r\n          this.control.disable();\r\n        }\r\n      }\r\n\r\n      // if org control not required\r\n      else {\r\n        this.getAllJobTitles();\r\n        // if (organizationId > 0) {\r\n        //   this.resetControl();\r\n        //   this.getAllJobTitlesByOrgId();\r\n        // }\r\n      }\r\n\r\n      //   this.organizationControl?.value > 0 ? this.getAllJobTitlesByOrgId() : this.getAllJobTitles();\r\n    }\r\n  }\r\n\r\n  getAllJobTitlesByOrgId() {\r\n    this.jobTitleService\r\n      .getAllByOrgId(this.organizationControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobTitleModel[]>) => {\r\n        if (res.data) {\r\n          this.filteredJobTitleList = res.data;\r\n          //  console.log(\"JobTitlesByOrgId\", this.filteredJobTitleList);\r\n        }\r\n        // else {\r\n        //   this.errorList(res?.message?.messages);\r\n        // }\r\n      });\r\n  }\r\n\r\n  getAllJobTitles() {\r\n    this.jobTitleService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobTitleModel[]>) => {\r\n        if ((res.message.messageType == MessageTypes.Success)) {\r\n          this.jobTitleList = res.data;\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  resetControl() {\r\n    setTimeout(() => {\r\n      this.control.reset();\r\n    }, 10);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AssignJobToOrgComponent, value, this.organizationControl.value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllJobTitles();\r\n      });\r\n  }\r\n\r\n  onChange(jobTitle: IJobTitleModel[]) {\r\n    this.change.emit(jobTitle);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[multi]=\"multi\"\r\n\t[List]=\"organizationControl?.value > 0 ? filteredJobTitleList : jobTitleList\"\r\n\t[submitted]=\"submitted\"\r\n\t[filter]=\"filter\"\r\n\t[disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {\r\n  AddJobProfileComponent\r\n} from \"app/org-management/components/jobs-profile/add-job-profile/add-job-profile.component\";\r\nimport {IJobTitleModel} from \"app/org-management/model/job-title\";\r\nimport {JobTitleService} from \"app/org-management/services/job-profile/job-title.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-job-title-dropdown\",\r\n  templateUrl: \"./job-title-dropdown.component.html\",\r\n  styleUrls: [\"./job-title-dropdown.component.scss\"],\r\n})\r\nexport class JobTitleDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl | AbortController;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"jobTitle\";\r\n  @Output() change = new EventEmitter<IJobTitleModel[]>();\r\n  jobTitleList: IJobTitleModel[];\r\n\r\n  viewName: string;\r\n\r\n  constructor(private jobTitleService: JobTitleService) {\r\n    super();\r\n    this.viewName = ViewsManager.add_job_profile;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllJobTitle();\r\n  }\r\n\r\n  getAllJobTitle() {\r\n    this.jobTitleService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IJobTitleModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.jobTitleList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(jobTitle: IJobTitleModel[]) {\r\n    this.change.emit(jobTitle);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    console.log(value);\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddJobProfileComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllJobTitle();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"jobTitleList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { LocationComponent } from \"app/system-setup/attendance-setup/components/location/location.component\";\r\nimport { IOrgLocationModel } from \"app/org-management/model/location\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { OrgLocationService } from \"app/org-management/services/org-location.service\";\r\n\r\n@Component({\r\n  selector: \"org-location-dropdown\",\r\n  templateUrl: \"./org-location-dropdown.component.html\",\r\n  styleUrls: [\"./org-location-dropdown.component.scss\"],\r\n})\r\nexport class OrgLocationDropdownComponent extends BaseDropdown implements OnInit {\r\n  // ! Important\r\n  //note: if need to get All Locations send governorateControl=null. if need to get location by governorateId send governorateControl\r\n  @Input() governorateControl: FormControl;\r\n  @Input() countryControl: FormControl;\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() filterByGov: boolean = false;\r\n  @Input() filterByCountry: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"location\";\r\n  @Input() appendTo: string | HTMLElement | any;\r\n  @Output() change = new EventEmitter<IOrgLocationModel[]>();\r\n  locationsList: IOrgLocationModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(private locationService: OrgLocationService) {\r\n    super();\r\n    this.viewName = ViewsManager.location;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n    if (this.filterByGov) {\r\n      this.governorateControl?.valueChanges.subscribe((govId: number) => {\r\n        this.control.setValue(null);\r\n        if (govId > 0) {\r\n          this.getAll(govId, null);\r\n          if (!this.disable) this.control.enable();\r\n        }\r\n        else this.control.disable();\r\n      });\r\n    }\r\n\r\n    if (this.filterByCountry) {\r\n      this.countryControl?.valueChanges.subscribe((countryId: number) => {\r\n        this.control.setValue(null);\r\n        if (countryId > 0) {\r\n          this.getAll(null, countryId);\r\n          if (!this.disable) this.control.enable();\r\n        }\r\n        else this.control.disable();\r\n      });\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n\r\n      if (this.filterByGov && this.governorateControl?.value > 0)\r\n        this.getAll(this.governorateControl.value, null);\r\n\r\n      if (this.filterByCountry && this.countryControl?.value > 0)\r\n        this.getAll(null, this.countryControl.value);\r\n\r\n      else if (!this.filterByGov) this.getAll(null, null);\r\n    }\r\n  }\r\n\r\n  getAll(govId: number, countryId: number) {\r\n    this.locationService\r\n      .getAll(govId, countryId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IOrgLocationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.locationsList = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(LocationComponent, value)\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        // this.getAll();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"locationsList\"\r\n                    [filter]=\"filter\"\r\n                    [appendTo]=\"appendTo\"\r\n                    [multi]=\"multi\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\">\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { AbstractControl, FormControl } from \"@angular/forms\";\r\nimport { IPolicyGroupType } from \"app/org-management/model/policy-group\";\r\nimport { PolicyGroupService } from \"app/org-management/services/policy-group.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"policy-group-type-dropdown\",\r\n  templateUrl: \"./policy-group-type-dropdown.component.html\",\r\n  styleUrls: [\"./policy-group-type-dropdown.component.scss\"]\r\n})\r\nexport class PolicyGroupTypeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl | AbstractControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"policyGroupType\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IPolicyGroupType[]>();\r\n  list: IPolicyGroupType[];\r\n\r\n  constructor(private policyGroupService: PolicyGroupService) {\r\n    super();\r\n  }\r\n\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.policyGroupService\r\n      .getAllPolicyGroupType()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPolicyGroupType[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.list = res.data;\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"list\"\r\n  [filter]=\"filter\"\r\n  [appendTo]=\"appendTo\"\r\n  [disable]=\"disable\"\r\n  [multi]=\"multi\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, Input, OnInit} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {IPolicyGroupModel} from \"app/org-management/model/policy-group\";\r\nimport {PolicyGroupService} from \"app/org-management/services/policy-group.service\";\r\n\r\n@Component({\r\n  selector: \"policy-groups-by-company-dropdown\",\r\n  templateUrl: \"./policy-groups-by-company-dropdown.component.html\",\r\n  styleUrls: [\"./policy-groups-by-company-dropdown.component.scss\"],\r\n})\r\nexport class PolicyGroupsByCompanyDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"policyGroups\";\r\n  @Input() companyCtrl?: FormControl;\r\n  policyGroupList: IPolicyGroupModel[] = [];\r\n\r\n  constructor(private userPoliciesService: PolicyGroupService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.control.disable();\r\n    this.companyCtrl?.valueChanges.subscribe((companyId) => {\r\n      if (companyId > 0) {\r\n        this.getPoliceiesByCompany();\r\n        if (!this.disable) this.control.enable();\r\n      } else {\r\n        this.policyGroupList = [];\r\n        this.control.disable();\r\n      }\r\n    });\r\n  }\r\n\r\n  getPoliceiesByCompany() {\r\n    const params = {\r\n      compId: this.companyCtrl.value,\r\n    };\r\n\r\n    this.userPoliciesService\r\n      .getPolicesByCompany(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPolicyGroupModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.policyGroupList = res.data;\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"policyGroupList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n>\r\n</app-prime-dropdown>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IPolicyGroupModel } from \"app/org-management/model/policy-group\";\r\nimport { PolicyGroupService } from \"app/org-management/services/policy-group.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-policy-groups-dropdown\",\r\n  templateUrl: \"./policy-groups-dropdown.component.html\",\r\n  styleUrls: [\"./policy-groups-dropdown.component.scss\"],\r\n})\r\nexport class PolicyGroupsDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"policyGroups\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Input() courseCategoryId: number;\r\n  @Output() change = new EventEmitter<IPolicyGroupModel[]>();\r\n\r\n  policyGroupsList: IPolicyGroupModel[];\r\n\r\n  constructor(private policyGroupService: PolicyGroupService) {\r\n    super();\r\n    // this.viewName = ViewsManager.policy_groups;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.policyGroupService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPolicyGroupModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.policyGroupsList = res.data;\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(model: IPolicyGroupModel[]) {\r\n    this.change.emit(model);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"policyGroupsList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IElemenGroupModel } from \"app/system-setup/payroll-setup/models/element-group\";\r\nimport { ElementGroupService } from \"app/system-setup/payroll-setup/services/element-group.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-element-groups-dropdown\",\r\n  templateUrl: \"./element-groups-dropdown.component.html\",\r\n  styleUrls: [\"./element-groups-dropdown.component.scss\"],\r\n})\r\nexport class ElementGroupsDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"elementGroup\";\r\n\r\n  elementGroupList: IElemenGroupModel[];\r\n\r\n  constructor(private elementGroupService: ElementGroupService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.businessId > 0 && this.companyId > 0) this.getAllElementGroups();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllElementGroups();\r\n  }\r\n\r\n  getAllElementGroups() {\r\n    this.elementGroupService\r\n      .GetAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IElemenGroupModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.elementGroupList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"elementGroupList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { LoanTypesComponent } from \"app/system-setup/payroll-setup/components/loan types/loan-types/loan-types.component\";\r\nimport { ILoanTypeModel } from \"app/system-setup/payroll-setup/models/loan-types\";\r\nimport { LoanTypesService } from \"app/system-setup/payroll-setup/services/loan-types.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-loan-types-dropdown\",\r\n\ttemplateUrl: \"./loan-types-dropdown.component.html\",\r\n\tstyleUrls: [\"./loan-types-dropdown.component.scss\"],\r\n})\r\nexport class LoanTypesDropdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"loanType\";\r\n\tloanTypeList: ILoanTypeModel[];\r\n\tviewName: string;\r\n\r\n\tconstructor(private loanTypesService: LoanTypesService) {\r\n\t\tsuper();\r\n\t\tthis.viewName = ViewsManager.loan_types;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.CheckNoBusinessOrCompany()) this.getAllLoanTypes();\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.getAllLoanTypes();\r\n\t}\r\n\r\n\tgetAllLoanTypes() {\r\n\t\tthis.loanTypesService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ILoanTypeModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.loanTypeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n\t}\r\n\r\n\tcreateDialog(value: string) {\r\n\t\tthis.dialogsService\r\n\t\t\t.addFromDropdownDialog(LoanTypesComponent, value)\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tthis.getAllLoanTypes();\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[multi]=\"multi\"\r\n\t[List]=\"loanTypeList\"\r\n\t[submitted]=\"submitted\"\r\n\t[filter]=\"filter\"\r\n\t[viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IPaymentModel } from \"app/payroll/models/payment\";\r\nimport { PaymentService } from \"app/payroll/services/payment.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-payment-dropdown\",\r\n\ttemplateUrl: \"./payment-dropdown.component.html\",\r\n\tstyleUrls: [\"./payment-dropdown.component.scss\"],\r\n})\r\nexport class PaymentDropdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"payment\";\r\n\r\n\tpaymentList: IPaymentModel[];\r\n\r\n\tconstructor(private paymentService: PaymentService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.CheckNoBusinessOrCompany()) this.getAllPayments();\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.getAllPayments();\r\n\t}\r\n\r\n\tgetAllPayments() {\r\n\t\tthis.paymentService\r\n      .GetAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPaymentModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.paymentList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"paymentList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IPayVariable } from \"app/payroll/models/variables\";\r\nimport { VariablesService } from \"app/payroll/services/variables.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-variable-by-payment-dropdown\",\r\n\ttemplateUrl: \"./variable-by-payment-dropdown.component.html\",\r\n\tstyleUrls: [\"./variable-by-payment-dropdown.component.scss\"],\r\n})\r\nexport class VariableByPaymentDropdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() paymentControl: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"variable\";\r\n\t@Input() disable: boolean = false;\r\n\r\n\tvariableList: IPayVariable[] = [];\r\n\r\n\tconstructor(private variablesService: VariablesService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.control.disable();\r\n\r\n\t\tthis.paymentControl?.valueChanges.subscribe((paymentId) => {\r\n\t\t\tthis.control.setValue(null);\r\n\r\n\t\t\tif (paymentId > 0) {\r\n\t\t\t\tthis.getAllVariablesByPayment();\r\n\t\t\t\tif(!this.disable) this.control.enable();\r\n\t\t\t} else this.control.disable();\r\n\t\t});\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.paymentControl?.value > 0 && this.checkNoBusinessOrCompany())\r\n\t\t\tthis.getAllVariablesByPayment();\r\n\t}\r\n\r\n\tgetAllVariablesByPayment() {\r\n\t\t// this.showLoading();\r\n\t\tthis.variablesService\r\n      .GetAllByPaymentId(this.paymentControl?.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPayVariable[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.variableList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n        // this.hideLoading();\r\n      });\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"variableList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n>\r\n</app-prime-dropdown>\r\n","import { EmployeeHiringDocumentService } from \"app/personnel-setup/services/employees/employement-information/employee-hiring-document.service\";\r\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { IAttachmentTypesModel } from \"app/system-setup/general-setup/models/attachment-types\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { HireDocumentsComponent } from \"app/system-setup/hr-setup/components/documents/hire-documents/hire-documents.component\";\r\n\r\n@Component({\r\n  selector: \"app-attachment-types-by-employee-id-dropdown\",\r\n  templateUrl: \"./attachment-types-by-employee-id-dropdown.component.html\",\r\n  styleUrls: [\"./attachment-types-by-employee-id-dropdown.component.scss\"],\r\n})\r\nexport class AttachmentTypesByEmployeeIdDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() employeeInstanceId?: number;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"documentName\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<IAttachmentTypesModel[]>();\r\n  viewName: string;\r\n\r\n  hiringDocumenttList: IAttachmentTypesModel[];\r\n\r\n  constructor(\r\n    private employeeHiringDocumentService: EmployeeHiringDocumentService\r\n  ) {\r\n    super();\r\n    this.viewName = ViewsManager.hire_documents;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllHiringDocument();\r\n  }\r\n\r\n  getAllHiringDocument() {\r\n    this.employeeHiringDocumentService\r\n      .getAllAttachment(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IAttachmentTypesModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.hiringDocumenttList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IAttachmentTypesModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(HireDocumentsComponent, value, 8)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllHiringDocument();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"hiringDocumenttList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\">\r\n  >\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { IS4CostCenter } from \"app/personnel-setup/models/emp-sap-integration/s4-hana\";\r\nimport { EmployeeS4HanaService } from \"app/personnel-setup/services/employees/sap-integration/employee-s4-hana.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-cost-center-by-s4-system-instance-dropdown\",\r\n  templateUrl: \"./cost-center-by-s4-system-instance-dropdown.component.html\",\r\n  styleUrls: [\"./cost-center-by-s4-system-instance-dropdown.component.scss\"],\r\n})\r\nexport class CostCenterByS4SystemInstanceDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() s4SystemInstanceControl: FormGroup;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"costCenter\";\r\n  @Input() appendTo: string = \"body\";\r\n  @Output() change = new EventEmitter<IS4CostCenter[]>();\r\n\r\n  costCenterList: IS4CostCenter[] = [];\r\n\r\n  constructor(private employeeS4HanaService: EmployeeS4HanaService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n\r\n    this.s4SystemInstanceControl?.valueChanges.subscribe(\r\n      (s4SystemInstanceId) => {\r\n        this.control.setValue(null);\r\n\r\n        if (s4SystemInstanceId > 0) {\r\n          this.getAllCostCenterBySystemInstance();\r\n          if (!this.disable) this.control.enable();\r\n        } else this.control.disable();\r\n      }\r\n    );\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (\r\n      this.s4SystemInstanceControl?.value > 0 &&\r\n      this.checkNoBusinessOrCompany()\r\n    )\r\n      this.getAllCostCenterBySystemInstance();\r\n  }\r\n\r\n  getAllCostCenterBySystemInstance() {\r\n    this.employeeS4HanaService\r\n      .getAllS4CostCenterBySystemInstance(this.s4SystemInstanceControl?.value)\r\n      .subscribe((res: IResponse<IS4CostCenter[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.costCenterList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(costCenter: IS4CostCenter[]) {\r\n    this.change.emit(costCenter);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"costCenterList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { empEducationYearMap } from \"app/personnel-setup/mapper/emp-career\";\r\nimport { EmployeeEducationService } from \"app/personnel-setup/services/employees/career/employee-education.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-education-year-dropdown\",\r\n  templateUrl: \"./education-year-dropdown.component.html\",\r\n  styleUrls: [\"./education-year-dropdown.component.scss\"],\r\n})\r\nexport class EducationYearDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"year\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n\r\n  yearList: Idropdown[];\r\n\r\n  constructor(private employeeEducationService: EmployeeEducationService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllMajors();\r\n  }\r\n\r\n  getAllMajors() {\r\n    this.employeeEducationService\r\n      .getAllYears()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<string[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.yearList = empEducationYearMap(res.data);\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: Idropdown[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"yearList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {EmployeesService} from 'app/personnel-setup/services/employees/employees.service';\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {IEmployeeSharedCompany} from 'app/personnel-setup/models/employees';\r\n\r\n@Component({\r\n  selector: 'employees-shared-company',\r\n  templateUrl: './employees-shared-company.component.html',\r\n  styleUrls: ['./employees-shared-company.component.scss']\r\n})\r\nexport class EmployeesSharedCompanyComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() person_ID: number;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = 'body';\r\n  @Input() label: string = 'SharedCompany';\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IEmployeeSharedCompany[]>();\r\n\r\n  list: IEmployeeSharedCompany[];\r\n\r\n  // viewName: string;\r\n\r\n  constructor(private employeesService: EmployeesService) {\r\n    super();\r\n    // this.viewName = ViewsManager.expense;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.person_ID > 0) {\r\n      this.getAllSharedCompany();\r\n    }\r\n  }\r\n\r\n  getAllSharedCompany() {\r\n    this.employeesService\r\n      .getAllSharedCompany(this.person_ID)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeSharedCompany[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.list = res.data;\r\n          console.log(this.list)\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(expense: IEmployeeSharedCompany[]) {\r\n    this.change.emit(expense);\r\n  }\r\n\r\n  // createDialog(value: string) {\r\n  //   this.dialogsService\r\n  //     .addFromDropdownDialog(ExpenseComponent, value)\r\n  //     .afterClosed()\r\n  //     .subscribe((res) => {\r\n  //       this.getAllSharedCompany();\r\n  //     });\r\n  // }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"list\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport {\r\n  IPerson,\r\n  IPersonInstanceModel,\r\n} from \"app/personnel-setup/models/employees\";\r\nimport { AssignPlanService } from \"app/personnel-setup/services/employees/assign-plan.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-employee-by-policy-group-dropdown\",\r\n  templateUrl: \"./employee-by-policy-group-dropdown.component.html\",\r\n  styleUrls: [\"./employee-by-policy-group-dropdown.component.scss\"],\r\n})\r\nexport class EmployeeByPolicyGroupDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() policyGroupCtrl?: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = \"employees\";\r\n\r\n  employeeList: IPerson[] = [];\r\n\r\n  constructor(private assignPlanService: AssignPlanService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n    this.policyGroupCtrl?.valueChanges.subscribe((policyId) => {\r\n      this.control.setValue(null);\r\n      if (policyId > 0) {\r\n        this.getEmployeesByPolicyGroup();\r\n        if (!this.disable) this.control.enable();\r\n      } else {\r\n        this.employeeList = [];\r\n        this.control.disable();\r\n      }\r\n    });\r\n  }\r\n\r\n  getEmployeesByPolicyGroup() {\r\n    this.assignPlanService\r\n      .getEmployeesByPolicyGroup(this.policyGroupCtrl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPersonInstanceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.employeeList = res.data.map((ele) => ele.core_Person);\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"employeeList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport {\r\n  EmployeeGeneralInfoDialogComponent\r\n} from \"app/personnel-setup/components/employees/employee-general-info/emp-general-info-dialog/emp-general-info-dialog.component\";\r\nimport { IPerson } from \"app/personnel-setup/models/employees\";\r\nimport { EmployeesService } from \"app/personnel-setup/services/employees/employees.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"app-employee-dropdown\",\r\n  templateUrl: \"./employee-dropdown.component.html\",\r\n  styleUrls: [\"./employee-dropdown.component.scss\"],\r\n})\r\nexport class EmployeeDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl | AbortController;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() isTable: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"employees\";\r\n  @Output() change = new EventEmitter<IPerson[]>();\r\n  viewName: string;\r\n  employeeList: IPerson[];\r\n\r\n  // is table vars\r\n  mandatoryColomns: string[] = [\r\n    \"ar_Name\",\r\n    Constants.selectColName,\r\n  ];\r\n  dataSource: MatTableDataSource<IPerson>;\r\n  dataSource1: MatTableDataSource<IPerson>;\r\n  dataSource2: MatTableDataSource<IPerson>;\r\n  isLoaded: boolean = false;\r\n\r\n\r\n  constructor(private employeeServ: EmployeesService) {\r\n    super();\r\n    // add parent viewname beacuse it does  not have route\r\n\r\n    this.viewName = ViewsManager.add_user;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAllEmployees();\r\n    }\r\n  }\r\n\r\n  getAllEmployees() {\r\n    this.employeeServ\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPerson[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.employeeList = res.data;\r\n          //  let len = res.data?.length / 3;\r\n          let list = [];\r\n          let list1 = [];\r\n          let list2 = [];\r\n          // res.data.forEach((e, i) => {\r\n          //\r\n          //   if (i <= len) {\r\n          //     console.log(\"step 1\", i);\r\n          //     list.push(e);\r\n          //   }\r\n          //\r\n          //   if (i > len && i <= (len * 2)) {\r\n          //     console.log(\"step 2\", i);\r\n          //     list1.push(e);\r\n          //   }\r\n          //\r\n          //   if (i > (len * 2) && i < (len * 3)) {\r\n          //     console.log(\"step 3\", i);\r\n          //     list2.push(e);\r\n          //   }\r\n          //\r\n          // });\r\n\r\n          this.dataSource = new MatTableDataSource(list);\r\n          this.dataSource1 = new MatTableDataSource(list1);\r\n          this.dataSource2 = new MatTableDataSource(list2);\r\n\r\n          // console.log(list.length);\r\n          // console.log(list1.length);\r\n          // console.log(list2.length);\r\n\r\n          // this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n        }\r\n        else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(jobTitle: IPerson[]) {\r\n    this.change.emit(jobTitle);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(EmployeeGeneralInfoDialogComponent, value, null, {\r\n        //  panelClass: \"p-2\",\r\n        height: \"550px\"\r\n      })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllEmployees();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown *ngIf=\"!isTable\"\r\n                    [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [multi]=\"multi\"\r\n                    [List]=\"employeeList\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"filter\"\r\n                    [appendTo]=\"appendTo\"\r\n                    (change)=\"onChange($event)\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\">\r\n</app-prime-dropdown>\r\n\r\n<div class=\"row\" *ngIf=\"isTable\">\r\n  <div class=\"col-lg-4 col-12\">\r\n    <app-material-table [isLoaded]=\"isLoaded\"\r\n                        [dataSource]=\"dataSource\"\r\n                        [mandatoryColomns]=\"mandatoryColomns\"\r\n                        [optionalColomns]=\"[]\"\r\n                        class=\"table-in-forms\"\r\n                        [showPaginator]=\"false\"\r\n                        [showSpaceTop]=\"false\"\r\n                        checkboxColumnName=\"isSelected\">\r\n    </app-material-table>\r\n  </div>\r\n\r\n  <div class=\"col-lg-4 col-12\">\r\n    <app-material-table [isLoaded]=\"isLoaded\"\r\n                        [dataSource]=\"dataSource1\"\r\n                        [mandatoryColomns]=\"mandatoryColomns\"\r\n                        [optionalColomns]=\"[]\"\r\n                        class=\"table-in-forms\"\r\n                        [showPaginator]=\"false\"\r\n                        [showSpaceTop]=\"false\"\r\n                        checkboxColumnName=\"isSelected\">\r\n    </app-material-table>\r\n  </div>\r\n\r\n  <div class=\"col-lg-4 col-12\">\r\n    <app-material-table [isLoaded]=\"isLoaded\"\r\n                        [dataSource]=\"dataSource2\"\r\n                        [mandatoryColomns]=\"mandatoryColomns\"\r\n                        [optionalColomns]=\"[]\"\r\n                        class=\"table-in-forms\"\r\n                        [showPaginator]=\"false\"\r\n                        [showSpaceTop]=\"false\"\r\n                        checkboxColumnName=\"isSelected\">\r\n    </app-material-table>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IErpGroupCodeCustomerModel } from \"app/personnel-setup/models/emp-sap-integration/erp-integration\";\r\nimport { EmployeeErpIntegrationService } from \"app/personnel-setup/services/employees/sap-integration/employee-erp-integration.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-erp-group-code-customer-dropdown\",\r\n  templateUrl: \"./erp-group-code-customer-dropdown.component.html\",\r\n  styleUrls: [\"./erp-group-code-customer-dropdown.component.scss\"],\r\n})\r\nexport class ErpGroupCodeCustomerDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"groupCodeCustomer\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IErpGroupCodeCustomerModel[]>();\r\n\r\n  groupCustomerList: IErpGroupCodeCustomerModel[];\r\n\r\n  constructor(\r\n    private employeeErpIntegrationService: EmployeeErpIntegrationService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.employeeErpIntegrationService\r\n      .getAllErpGroupCodeCustomer()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IErpGroupCodeCustomerModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.groupCustomerList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IErpGroupCodeCustomerModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"groupCustomerList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IErpGroupCodeVendorModel } from \"app/personnel-setup/models/emp-sap-integration/erp-integration\";\r\nimport { EmployeeErpIntegrationService } from \"app/personnel-setup/services/employees/sap-integration/employee-erp-integration.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-erp-group-code-vendor-dropdown\",\r\n  templateUrl: \"./erp-group-code-vendor-dropdown.component.html\",\r\n  styleUrls: [\"./erp-group-code-vendor-dropdown.component.scss\"],\r\n})\r\nexport class ErpGroupCodeVendorDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"groupCodeVendor\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IErpGroupCodeVendorModel[]>();\r\n\r\n  groupVendorList: IErpGroupCodeVendorModel[];\r\n\r\n  constructor(\r\n    private employeeErpIntegrationService: EmployeeErpIntegrationService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.employeeErpIntegrationService\r\n      .getAllErpGroupCodeCustomer()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IErpGroupCodeVendorModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.groupVendorList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IErpGroupCodeVendorModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"groupVendorList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IErpResourceGroupModel } from \"app/personnel-setup/models/emp-sap-integration/erp-integration\";\r\nimport { EmployeeErpIntegrationService } from \"app/personnel-setup/services/employees/sap-integration/employee-erp-integration.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-erp-resource-group-dropdown\",\r\n  templateUrl: \"./erp-resource-group-dropdown.component.html\",\r\n  styleUrls: [\"./erp-resource-group-dropdown.component.scss\"],\r\n})\r\nexport class ErpResourceGroupDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"resourceGroup\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IErpResourceGroupModel[]>();\r\n\r\n  resourceGroupList: IErpResourceGroupModel[];\r\n\r\n  constructor(\r\n    private employeeErpIntegrationService: EmployeeErpIntegrationService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.employeeErpIntegrationService\r\n      .getAllErpGroupCodeCustomer()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IErpResourceGroupModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.resourceGroupList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: IErpResourceGroupModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"resourceGroupList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { EmployeeDependantService } from \"app/personnel-setup/services/employees/personal-info/employee-dependant.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-relationship-dropdown\",\r\n  templateUrl: \"./relationship-dropdown.component.html\",\r\n  styleUrls: [\"./relationship-dropdown.component.scss\"],\r\n})\r\nexport class RelationshipDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"relationship\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n\r\n  relationshipList: Idropdown[];\r\n\r\n  constructor(private employeeDependantService: EmployeeDependantService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllRelationship();\r\n  }\r\n\r\n  getAllRelationship() {\r\n    this.employeeDependantService\r\n      .getAllFamilyRelationships()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<Idropdown[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.relationshipList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: Idropdown[]) {\r\n    this.change.emit(values);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"relationshipList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IEmploymentTypeModel } from \"app/recruitment/models/employment-type\";\r\nimport { EmploymentTypeService } from \"app/recruitment/services/employment-type.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-employment-type-dropdown\",\r\n  templateUrl: \"./employment-type-dropdown.component.html\",\r\n  styleUrls: [\"./employment-type-dropdown.component.scss\"],\r\n})\r\nexport class EmploymentTypeDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"employmentType\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IEmploymentTypeModel[]>();\r\n\r\n  employmentTypeList: IEmploymentTypeModel[];\r\n\r\n  constructor(private employmentTypeService: EmploymentTypeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.employmentTypeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmploymentTypeModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.employmentTypeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(employmentType: IEmploymentTypeModel[]) {\r\n    this.change.emit(employmentType);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"employmentTypeList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IRecruitmentPlanModel } from \"app/recruitment/models/plan/recruitment-plan\";\r\nimport { RecruitmentPlanService } from \"app/recruitment/services/plan/recruitment-plan.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-recruitment-plan-dropdown\",\r\n  templateUrl: \"./recruitment-plan-dropdown.component.html\",\r\n  styleUrls: [\"./recruitment-plan-dropdown.component.scss\"],\r\n})\r\nexport class RecruitmentPlanDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"plan\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IRecruitmentPlanModel[]>();\r\n  planList: IRecruitmentPlanModel[] = [];\r\n  // viewName: string;\r\n\r\n  constructor(private recruitmentPlanService: RecruitmentPlanService) {\r\n    super();\r\n    // this.viewName = ViewsManager.add_recruitment_plan;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllPlans();\r\n  }\r\n\r\n  getAllPlans() {\r\n    this.recruitmentPlanService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IRecruitmentPlanModel[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.planList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(plan: IRecruitmentPlanModel[]) {\r\n    this.change.emit(plan);\r\n  }\r\n\r\n  // createDialog(value: string) {\r\n  //   this.dialogsService\r\n  //     .addFromDropdownDialog(addRecruitmentPlan, value)\r\n  //     .afterClosed()\r\n  //     .subscribe((res) => {\r\n  //       this.getAllPlans();\r\n  //     });\r\n  // }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"planList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n\r\n<!-- \r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n-->\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IRequestReasonModel } from \"app/recruitment/models/request-reason\";\r\nimport { RequestReasonService } from \"app/recruitment/services/request-reason.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-request-reason-dropdown\",\r\n  templateUrl: \"./request-reason-dropdown.component.html\",\r\n  styleUrls: [\"./request-reason-dropdown.component.scss\"],\r\n})\r\nexport class RequestReasonDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"requestReason\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IRequestReasonModel[]>();\r\n\r\n  requestReasonList: IRequestReasonModel[];\r\n\r\n  constructor(private requestReasonService: RequestReasonService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.requestReasonService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IRequestReasonModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.requestReasonList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(requestReason: IRequestReasonModel[]) {\r\n    this.change.emit(requestReason);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"requestReasonList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IRecruitmentRequestModel } from \"app/recruitment/models/recruitment-request\";\r\nimport { RecruitmentRequestService } from \"app/recruitment/services/recruitment-request.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-recruitment-request-by-plan-dropdown\",\r\n  templateUrl: \"./recruitment-request-by-plan-dropdown.component.html\",\r\n  styleUrls: [\"./recruitment-request-by-plan-dropdown.component.scss\"],\r\n})\r\nexport class RecruitmentRequestByPlanDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"recruitmentRequest\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Input() disable: boolean = false;\r\n  @Input() planControl: FormControl;\r\n  @Output() change = new EventEmitter<IRecruitmentRequestModel[]>();\r\n  requestList: IRecruitmentRequestModel[] = [];\r\n  // viewName: string;\r\n\r\n  constructor(private recruitmentRequestService: RecruitmentRequestService) {\r\n    super();\r\n    // this.viewName = ViewsManager.assign_request_to_plan;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n    this.planControl.valueChanges.subscribe((planId) => {\r\n      this.control.setValue(null);\r\n      if (planId > 0) {\r\n        this.getAllRequestsByPlanId();\r\n        if (!this.disable) this.control.enable();\r\n      } else this.control.disable();\r\n    });\r\n  }\r\n\r\n  getAllRequestsByPlanId() {\r\n    this.recruitmentRequestService\r\n      .getAllByPlanId(this.planControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IRecruitmentRequestModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.requestList = res.data;\r\n        } else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(request: IRecruitmentRequestModel[]) {\r\n    this.change.emit(request);\r\n  }\r\n\r\n  // createDialog(value: string) {\r\n  //   this.dialogsService\r\n  //     .addFromDropdownDialog(\r\n  //       assignRequestToPlan,\r\n  //       value,\r\n  //       this.planControl.value\r\n  //     )\r\n  //     .afterClosed()\r\n  //     .subscribe((res) => {\r\n  //       this.getAllRequestsByPlanId();\r\n  //     });\r\n  // }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"requestList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n\r\n<!-- \r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n-->\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { CandidateWorkExperienceService } from \"app/recruitment/services/candidate/work-experience/candidate-work-experience.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-resignation-reason-dropdown\",\r\n  templateUrl: \"./resignation-reason-dropdown.component.html\",\r\n  styleUrls: [\"./resignation-reason-dropdown.component.scss\"],\r\n})\r\nexport class ResignationReasonDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"resignationReason\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n\r\n  resignationReasonList: Idropdown[];\r\n\r\n  constructor(\r\n    private candidateWorkExperienceService: CandidateWorkExperienceService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.candidateWorkExperienceService\r\n      .getAllResignationReason()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<Idropdown[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.resignationReasonList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(resignationReason: Idropdown[]) {\r\n    this.change.emit(resignationReason);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"resignationReasonList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { CandidateService } from \"app/recruitment/services/candidate/candidate.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-sourcing-type-dropdown\",\r\n  templateUrl: \"./sourcing-type-dropdown.component.html\",\r\n  styleUrls: [\"./sourcing-type-dropdown.component.scss\"],\r\n})\r\nexport class SourcingTypeDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"sourcingType\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n\r\n  sourcingTypeList: Idropdown[];\r\n\r\n  constructor(private candidateService: CandidateService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.candidateService\r\n      .getAllSourcingType()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<Idropdown[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.sourcingTypeList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(sourcingType: Idropdown[]) {\r\n    this.change.emit(sourcingType);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"sourcingTypeList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { AuthService } from \"app/auth/services/auth.service\";\r\nimport { IBusinessEntityModel } from \"app/org-management/model/business-entity\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n\tselector: \"app-Business-dropdown-current-user\",\r\n\ttemplateUrl: \"./Business-dropdown-current-user.component.html\",\r\n\tstyleUrls: [\"./Business-dropdown-current-user.component.scss\"],\r\n})\r\nexport class BusinessDropdownCurrentUserComponent implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"Business\";\r\n\tappearance = Constants.defaultInputAppearance;\r\n\tbusinessList: IBusinessEntityModel[];\r\n\r\n\t// currentBussinesId: number;\r\n\t// BusinessList$ = new Observable<IBusinessModel[]>();\r\n\r\n\tconstructor(public authService: AuthService, public languageService: LanguageService) {\r\n\t\t//    if (this.authService.BusinessList$)\r\n\t\t// this.authService.getCompanyAndBusiness();\r\n\t\t// this.currentBussinesId = Storage.getBusinessID;\r\n\t\t//\tthis.BusinessList$ = authService.BusinessList$;\r\n\t\t// this.authService.BusinessID$.subscribe((b) => {\r\n\t\t// \tif (this.currentBussinesId != b) this.currentBussinesId = b;\r\n\t\t// });\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.authService.BusinessList$.subscribe((res) => {\r\n\t\t\tthis.businessList = res;\r\n\t\t});\r\n\t}\r\n\r\n\t// onSelect(value: number) {\r\n\t// \tthis.authService.onSelectCompany(null);\r\n\t// \tthis.authService.onSelectBusiness(value);\r\n\t// \tthis.currentBussinesId = value;\r\n\t// }\r\n}\r\n","<!-- <div [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n\t<mat-form-field [appearance]=\"appearance\" class=\"select-business\">\r\n\t\t<mat-label>{{ \"Business\" | translate }}</mat-label>\r\n\t\t<mat-select placeholder=\"Business\">\r\n\t\t\t<mat-option [value]=\"null\" disabled>\r\n\t\t\t\t{{ \"General.choose\" | translate }}\r\n\t\t\t</mat-option>\r\n\t\t\t<mat-option *ngFor=\"let business of BusinessList$ | async\" [value]=\"business.businessId\">\r\n\t\t\t\t{{ languageService.isArabic ? business.ar_Name : business.en_Name }}\r\n\t\t\t</mat-option>\r\n\t\t</mat-select>\r\n\t\t<mat-hint> </mat-hint>\r\n\t</mat-form-field>\r\n</div> -->\r\n\r\n<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"businessList\"\r\n\t[filter]=\"filter\"\r\n\t[multi]=\"multi\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\n import { AuthService } from \"app/auth/services/auth.service\";\r\nimport { ICompanyModel } from \"app/org-management/model/business-entity\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\nimport { ParamsService } from \"app/shared/services/params.service\";\r\n\r\n@Component({\r\n\tselector: \"company-by-businessId-dropdown-current-user\",\r\n\ttemplateUrl: \"./company-dropdown-current-user.component.html\",\r\n\tstyleUrls: [\"./company-dropdown-current-user.component.scss\"],\r\n})\r\nexport class CompanyDropdownCurrentUserComponent implements OnInit {\r\n\t@Input() control: FormControl; ///company control\r\n\t@Input() businessCtrl?: FormControl; // optional can filter by businessCtrl or general businessId in local storage\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() appendTo: string | HTMLElement;\r\n\t@Input() label: string = \"company\";\r\n\tappearance = Constants.defaultInputAppearance;\r\n\t//\tbusinessList: IBusinessModel[];\r\n\tcompanyList: ICompanyModel[];\r\n\t// businessList: IBusinessModel[] = [];\r\n\t// curBusinessId: number;\r\n\t// appearance = AppSettings.defaultInputAppearance;\r\n\t// currentCompanyId: number;\r\n\r\n\tconstructor(private authService: AuthService, private paramsService: ParamsService) {\r\n\t\t// this.curBusinessId = Storage.getBusinessID;\r\n\t\t// this.currentCompanyId = Storage.getCompanyID;\r\n\t\t// this.authService.BusinessList$.subscribe((business: IBusinessModel[]) => {\r\n\t\t// \t// console.log(\"BusinessList$\", business);\r\n\t\t// \tthis.businessList = business;\r\n\t\t// \tthis.getCompanies();\r\n\t\t// });\r\n\t\t// this.authService.BusinessID$.subscribe((businessId) => {\r\n\t\t// \tif (this.curBusinessId != businessId) {\r\n\t\t// \t\tthis.curBusinessId = businessId;\r\n\t\t// \t\t// this.onSelect(null);\r\n\t\t// \t\tthis.getCompanies();\r\n\t\t// \t}\r\n\t\t// });\r\n\t\t// this.authService.CompanyID$.subscribe((companyId) => {\r\n\t\t// \tthis.currentCompanyId = companyId;\r\n\t\t// });\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\tngOnChanges() {\r\n\t\tif (this.businessCtrl) {\r\n\t\t\t//  filter by businessCtrl\r\n\t\t\tthis.businessCtrl.valueChanges.subscribe((businessId) => {\r\n\t\t\t\tif (businessId > 0) {\r\n\t\t\t\t\tthis.getCompanies(businessId);\r\n\t\t\t\t} else this.companyList = [];\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// filter by general businessId in local storage\r\n\t\t\tthis.getCompanies(Storage.getBusinessID);\r\n\t\t\tthis.paramsService.BusinessID$.subscribe((businessId) => {\r\n\t\t\t\tthis.getCompanies(businessId);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tgetCompanies(businessId: number) {\r\n\t\tthis.authService.BusinessList$.subscribe((res) => {\r\n\t\t\tlet index = res?.findIndex((e) => e.businessId == businessId);\r\n\t\t\tthis.companyList = res[index]?.companies ?? [];\r\n\t\t});\r\n\t}\r\n}\r\n","<!-- <div  [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n<mat-form-field\r\n  [appearance]=\"appearance\"\r\n  class=\"select-business\"\r\n >\r\n  <mat-label>{{ \"company\" | translate }}</mat-label>\r\n  <mat-select\r\n    placeholder=\"company\"\r\n    (selectionChange)=\"onSelect($event.value)\"\r\n    [value]=\"currentCompanyId\"\r\n  >\r\n    <mat-option [value]=\"null\" disabled>\r\n      {{ \"General.choose\" | translate }}\r\n    </mat-option>\r\n    <mat-option *ngFor=\"let company of companyList\" [value]=\"company.id\">\r\n      {{ languageService.isArabic ? company.ar_Name : company.en_Name }}\r\n    </mat-option>\r\n  </mat-select>\r\n  <mat-hint> </mat-hint>\r\n</mat-form-field>\r\n</div> -->\r\n\r\n<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"companyList\"\r\n\t[filter]=\"filter\"\r\n\t[multi]=\"multi\"\r\n\t[appendTo]=\"appendTo\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IGlAccountModel } from \"app/system-setup/s4-setup/models/s4-account-map\";\r\nimport { GlAccountService } from \"app/system-setup/s4-setup/services/gl-account.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-gl-account-by-s4-system-instance-dropdown\",\r\n\ttemplateUrl: \"./gl-account-by-s4-system-instance-dropdown.component.html\",\r\n\tstyleUrls: [\"./gl-account-by-s4-system-instance-dropdown.component.scss\"],\r\n})\r\nexport class GlAccountByS4SystemInstanceDropdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() s4SystemInstanceControl: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() disable: boolean = false;\r\n\t@Input() label: string = \"glAccount\";\r\n\t@Output() change = new EventEmitter<IGlAccountModel[]>();\r\n\r\n\tglAccountList: IGlAccountModel[] = [];\r\n\r\n\tconstructor(private glAccountService: GlAccountService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.control.disable();\r\n\r\n\t\tthis.s4SystemInstanceControl?.valueChanges.subscribe((s4SystemInstanceId) => {\r\n\t\t\tthis.control.setValue(null);\r\n\r\n\t\t\tif (s4SystemInstanceId > 0) {\r\n\t\t\t\tthis.getAllIntegrationPurposesBySystemInstance();\r\n\t\t\t\tif(!this.disable) this.control.enable();\r\n\t\t\t} else this.control.disable();\r\n\t\t});\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.s4SystemInstanceControl?.value > 0 && this.checkNoBusinessOrCompany())\r\n\t\t\tthis.getAllIntegrationPurposesBySystemInstance();\r\n\t}\r\n\r\n\tgetAllIntegrationPurposesBySystemInstance() {\r\n\t\tthis.glAccountService\r\n\t\t\t.getAllByS4SystemInstnaceId(this.s4SystemInstanceControl?.value)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IGlAccountModel[]>) => {\r\n\t\t\t\tif ((res.message.messageType = MessageTypes.Success)) {\r\n\t\t\t\t\tthis.glAccountList = res.data;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tonChange(glAccount: IGlAccountModel[]) {\r\n\t\tthis.change.emit(glAccount);\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"glAccountList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { S4SystemInstancePurposeComponent } from \"app/system-setup/s4-setup/components/s4-system-instance/s4-system-instance-purpose/s4-system-instance-purpose.component\";\r\nimport { IS4SystemInstancePurposeModel } from \"app/system-setup/s4-setup/models/s4-system-instance\";\r\nimport { S4SystemInstancePurposeService } from \"app/system-setup/s4-setup/services/s4-system-instance-purpose.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-s4-integration-purpose-by-system-instance-dropdown\",\r\n\ttemplateUrl: \"./s4-integration-purpose-by-system-instance-dropdown.component.html\",\r\n\tstyleUrls: [\"./s4-integration-purpose-by-system-instance-dropdown.component.scss\"],\r\n})\r\nexport class S4IntegrationPurposeBySystemInstanceDropdownComponent\r\n\textends BaseDropdown\r\n\timplements OnInit\r\n{\r\n\t@Input() control: FormControl;\r\n\t@Input() s4SystemInstanceControl: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"integrationPurpose\";\r\n\t@Input() disable: boolean = false;\r\n\t@Output() change = new EventEmitter<IS4SystemInstancePurposeModel[]>();\r\n\r\n\tintegrationPurposeList: IS4SystemInstancePurposeModel[] = [];\r\n\tviewName: string;\r\n\r\n\tconstructor(private s4SystemInstancePurposeService: S4SystemInstancePurposeService) {\r\n\t\tsuper();\r\n\t\t// add parent viewname beacuse it does  not have route\r\n\r\n\t\tthis.viewName = ViewsManager.add_s4_system_instance;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.control.disable();\r\n\r\n\t\tthis.s4SystemInstanceControl?.valueChanges.subscribe((s4SystemInstanceId) => {\r\n\t\t\tthis.control.setValue(null);\r\n\r\n\t\t\tif (s4SystemInstanceId > 0) {\r\n\t\t\t\tthis.getAllIntegrationPurposesBySystemInstance();\r\n\t\t\t\tif(!this.disable) this.control.enable();\r\n\t\t\t} else this.control.disable();\r\n\t\t});\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.s4SystemInstanceControl?.value > 0 && this.checkNoBusinessOrCompany())\r\n\t\t\tthis.getAllIntegrationPurposesBySystemInstance();\r\n\t}\r\n\r\n\tgetAllIntegrationPurposesBySystemInstance() {\r\n\t\tthis.s4SystemInstancePurposeService\r\n\t\t\t.getAllBySystemInstanceId(this.s4SystemInstanceControl.value)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IS4SystemInstancePurposeModel[]>) => {\r\n\t\t\t\tif ((res.message.messageType = MessageTypes.Success)) {\r\n\t\t\t\t\tthis.integrationPurposeList = res.data;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tonChange(purpose: IS4SystemInstancePurposeModel[]) {\r\n\t\tthis.change.emit(purpose);\r\n\t}\r\n\tcreateDialog(value: string) {\r\n\t\tthis.dialogsService\r\n\t\t\t.addFromDropdownDialog(\r\n\t\t\t\tS4SystemInstancePurposeComponent,\r\n\t\t\t\tvalue,\r\n\t\t\t\tthis.s4SystemInstanceControl.value\r\n\t\t\t)\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tthis.getAllIntegrationPurposesBySystemInstance();\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"integrationPurposeList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport {\r\n  AddS4SystemInstanceComponent\r\n} from \"app/system-setup/s4-setup/components/s4-system-instance/add-s4-system-instance/add-s4-system-instance.component\";\r\nimport { IS4SystemInstanceModel } from \"app/system-setup/s4-setup/models/s4-system-instance\";\r\nimport { S4SytemInstanceService } from \"app/system-setup/s4-setup/services/s4-sytem-instance.service\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n  selector: \"app-s4-system-instance-dropdown\",\r\n  templateUrl: \"./s4-system-instance-dropdown.component.html\",\r\n  styleUrls: [\"./s4-system-instance-dropdown.component.scss\"],\r\n})\r\nexport class S4SystemInstanceDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"s4SystemInstance\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Output() change = new EventEmitter<IS4SystemInstanceModel[]>();\r\n  viewName: string;\r\n\r\n  s4SystemInstanceList: IS4SystemInstanceModel[];\r\n\r\n  constructor(private s4SytemInstanceService: S4SytemInstanceService) {\r\n    super();\r\n    this.viewName = ViewsManager.add_s4_system_instance;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getAllS4SystemInstances();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllS4SystemInstances();\r\n  }\r\n\r\n  getAllS4SystemInstances() {\r\n    this.s4SytemInstanceService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IS4SystemInstanceModel[]) => {\r\n        this.s4SystemInstanceList = res;\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddS4SystemInstanceComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllS4SystemInstances();\r\n      });\r\n  }\r\n\r\n  onChange(items: IS4SystemInstanceModel[]) {\r\n    this.change.emit(items);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"s4SystemInstanceList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [appendTo]=\"appendTo\"\r\n  [viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { SystemInstancePurposeComponent } from \"app/system-setup/sap-business-one-setup/components/system-instance/system-instance-purpose/system-instance-purpose.component\";\r\nimport { ISapSystemInstancePurposeModel } from \"app/system-setup/sap-business-one-setup/models/system-instance\";\r\nimport { SystemInstancePurposeService } from \"app/system-setup/sap-business-one-setup/services/system-instance-purpose.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-sap-integration-purpose-by-system-instance-dropdown\",\r\n\ttemplateUrl: \"./sap-integration-purpose-by-system-instance-dropdown.component.html\",\r\n\tstyleUrls: [\"./sap-integration-purpose-by-system-instance-dropdown.component.scss\"],\r\n})\r\nexport class SapIntegrationPurposeBySystemInstanceDropdownComponent\r\n\textends BaseDropdown\r\n\timplements OnInit\r\n{\r\n\t@Input() control: FormControl;\r\n\t@Input() systemInstanceControl: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"integrationPurpose\";\r\n\t@Input() disable: boolean = false;\r\n\tviewName: string;\r\n\r\n\tintegrationPurposeList: ISapSystemInstancePurposeModel[] = [];\r\n\r\n\tconstructor(private systemInstancePurposeService: SystemInstancePurposeService) {\r\n\t\tsuper();\r\n\t\t// add parent viewname beacuse it does  not have route\r\n\t\tthis.viewName = ViewsManager.add_system_instance;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.control.disable();\r\n\r\n\t\tthis.systemInstanceControl?.valueChanges.subscribe((systemInstanceId) => {\r\n\t\t\tthis.control.setValue(null);\r\n\r\n\t\t\tif (systemInstanceId > 0) {\r\n\t\t\t\tthis.getAllIntegrationPurposesBySystemInstance();\r\n\t\t\t\tif(!this.disable) this.control.enable();\r\n\t\t\t} else this.control.disable();\r\n\t\t});\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.systemInstanceControl?.value > 0 && this.checkNoBusinessOrCompany())\r\n\t\t\tthis.getAllIntegrationPurposesBySystemInstance();\r\n\t}\r\n\r\n\tgetAllIntegrationPurposesBySystemInstance() {\r\n\t\tthis.systemInstancePurposeService\r\n\t\t\t.getAllBySystemInstanceId(this.systemInstanceControl.value)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponseList<ISapSystemInstancePurposeModel[]>) => {\r\n\t\t\t\tif ((res.message.messageType = MessageTypes.Success)) {\r\n\t\t\t\t\tthis.integrationPurposeList = res.data;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tcreateDialog(value: string) {\r\n\t\tthis.dialogsService\r\n\t\t\t.addFromDropdownDialog(\r\n\t\t\t\tSystemInstancePurposeComponent,\r\n\t\t\t\tvalue,\r\n\t\t\t\tthis.systemInstanceControl.value\r\n\t\t\t)\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tthis.getAllIntegrationPurposesBySystemInstance();\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"integrationPurposeList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { AddSystemInstanceComponent } from \"app/system-setup/sap-business-one-setup/components/system-instance/add-system-instance/add-system-instance.component\";\r\nimport { ISapSystemInstanceModel } from \"app/system-setup/sap-business-one-setup/models/system-instance\";\r\nimport { SystemInstanceService } from \"app/system-setup/sap-business-one-setup/services/system-instance.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\n\r\n@Component({\r\n\tselector: \"app-sap-system-instance-dropdown\",\r\n\ttemplateUrl: \"./sap-system-instance-dropdown.component.html\",\r\n\tstyleUrls: [\"./sap-system-instance-dropdown.component.scss\"],\r\n})\r\nexport class SapSystemInstanceDropdownComponent extends BaseDropdown implements OnInit {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() multi: boolean = false;\r\n\t@Input() filter: boolean = false;\r\n\t@Input() label: string = \"sapSystemInstance\";\r\n\t@Input() appendTo: string | HTMLElement = \"body\";\r\n\tviewName: string;\r\n\r\n\tsystemInstanceList: ISapSystemInstanceModel[];\r\n\r\n\tconstructor(private systemInstanceService: SystemInstanceService) {\r\n\t\tsuper();\r\n\t\tthis.viewName = ViewsManager.add_system_instance;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.CheckNoBusinessOrCompany()) this.getAllSystemInstances();\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany()) this.getAllSystemInstances();\r\n\t}\r\n\r\n\tgetAllSystemInstances() {\r\n\t\tthis.systemInstanceService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ISapSystemInstanceModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.systemInstanceList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n\t}\r\n\r\n\tcreateDialog(value: string) {\r\n\t\tthis.dialogsService\r\n\t\t\t.addFromDropdownDialog(AddSystemInstanceComponent, value)\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tthis.getAllSystemInstances();\r\n\t\t\t});\r\n\t}\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"systemInstanceList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [appendTo]=\"appendTo\"\r\n  [viewName]=\"viewName\"\r\n\t(createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CourseCategoryComponent } from \"app/system-setup/training-setup/components/course-category/course-category.component\";\r\nimport { ICourseCategoryModel } from \"app/system-setup/training-setup/models/course-category\";\r\nimport { CourseCategoryService } from \"app/system-setup/training-setup/services/course-category.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-category-dropdown\",\r\n  templateUrl: \"./course-category-dropdown.component.html\",\r\n  styleUrls: [\"./course-category-dropdown.component.scss\"],\r\n})\r\nexport class CourseCategoryDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"courseCategory\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n  courseCategoryList: ICourseCategoryModel[];\r\n  viewName: string;\r\n\r\n  constructor(private courseCategoryService: CourseCategoryService) {\r\n    super();\r\n    this.viewName = ViewsManager.course_category;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllCourseCategory();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getAllCourseCategory() {\r\n    this.courseCategoryService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICourseCategoryModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.courseCategoryList = res.data;\r\n        }\r\n        else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: ICourseCategoryModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(CourseCategoryComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllCourseCategory();\r\n        // this.control.setValue(this.courseCategoryList.find(e => value == e.ar_Name).id);\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"courseCategoryList\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n\t[appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n   [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, EventEmitter, Input, Output} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {Idropdown} from \"app/shared/interfaces/dropdown.interface\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CourseTypeComponent } from \"app/system-setup/training-setup/components/course-type/course-type.component\";\r\nimport {ICourseTypeModel} from \"app/system-setup/training-setup/models/course-type\";\r\nimport {CourseTypeService} from \"app/system-setup/training-setup/services/course-type.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-type-dropdown\",\r\n  templateUrl: \"./course-type-dropdown.component.html\",\r\n  styleUrls: [\"./course-type-dropdown.component.scss\"],\r\n})\r\nexport class CourseTypeDropdownComponent extends BaseDropdown {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"courseType\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Output() change = new EventEmitter<Idropdown[]>();\r\n  courseTypeList: ICourseTypeModel[];\r\n  viewName: string;\r\n\r\n  constructor(private courseTypeService: CourseTypeService) {\r\n    super();\r\n    this.viewName = ViewsManager.course_type;\r\n\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllCourseType();\r\n  }\r\n\r\n  getAllCourseType() {\r\n    this.courseTypeService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res:IResponse<ICourseTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.courseTypeList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(values: ICourseTypeModel[]) {\r\n    this.change.emit(values);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(CourseTypeComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllCourseType();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[List]=\"courseTypeList\"\r\n\t[filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n\t[appendTo]=\"appendTo\"\r\n\t(change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { ExpenseComponent } from \"app/system-setup/training-setup/components/expense/expense.component\";\r\nimport { IExpenseModel } from \"app/system-setup/training-setup/models/expense\";\r\nimport { ExpenseService } from \"app/system-setup/training-setup/services/expense.service\";\r\n\r\n@Component({\r\n  selector: \"app-expenses-dropdown\",\r\n  templateUrl: \"./expenses-dropdown.component.html\",\r\n  styleUrls: [\"./expenses-dropdown.component.scss\"],\r\n})\r\nexport class ExpensesDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"expenses\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IExpenseModel[]>();\r\n\r\n  expenseList: IExpenseModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(private expenseService: ExpenseService) {\r\n    super();\r\n    this.viewName = ViewsManager.expense;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllexpenses();\r\n  }\r\n\r\n  getAllexpenses() {\r\n    this.expenseService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IExpenseModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.expenseList = res.data;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(expense: IExpenseModel[]) {\r\n    this.change.emit(expense);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(ExpenseComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllexpenses();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"expenseList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {AbstractControl, FormControl} from '@angular/forms';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {ViewsManager} from 'app/shared/resources/views-manager';\r\nimport {ReasonsComponent} from 'app/system-setup/training-setup/components/reasons/reasons.component';\r\nimport {IReasonsModel} from 'app/system-setup/training-setup/models/reasons';\r\nimport {ReasonsService} from 'app/system-setup/training-setup/services/reasons.service';\r\n\r\n@Component({\r\n  selector: 'app-reason-dropdown',\r\n  templateUrl: './reason-dropdown.component.html',\r\n  styleUrls: ['./reason-dropdown.component.scss']\r\n})\r\nexport class ReasonDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl | AbstractControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = 'reason';\r\n  @Input() disable: boolean = false;\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Input() courseCategoryId: number;\r\n  @Output() change = new EventEmitter<IReasonsModel[]>();\r\n\r\n  viewName: string;\r\n  reasonList: IReasonsModel[];\r\n\r\n  constructor(private reasonsService: ReasonsService) {\r\n    super();\r\n    this.viewName = ViewsManager.reasons\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.reasonsService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IReasonsModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.reasonList = res.data;\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  onChange(model: IReasonsModel[]) {\r\n    this.change.emit(model);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(ReasonsComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"reasonList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [disable]=\"disable\"\r\n  [viewName]=\"viewName\"\r\n  [appendTo]=\"appendTo\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {AbstractControl, FormControl} from '@angular/forms';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport {TrainingRequestService} from 'app/training/services/training-request.service';\r\nimport {IBusinessObjectiveModel} from 'app/training/models/training-request';\r\n\r\n@Component({\r\n  selector: 'business-objective-dropdown',\r\n  templateUrl: './business-objective-dropdown.component.html',\r\n  styleUrls: ['./business-objective-dropdown.component.scss']\r\n})\r\nexport class BusinessObjectiveDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl | AbstractControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() label: string = 'businessObjective';\r\n  @Input() appendTo: string | HTMLElement = 'body';\r\n  @Output() change = new EventEmitter<IBusinessObjectiveModel[]>();\r\n\r\n  //viewName: string;\r\n  objectiveList: IBusinessObjectiveModel[];\r\n\r\n  constructor(private trainingRequestService: TrainingRequestService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.loadBusinessObjective();\r\n    }\r\n  }\r\n\r\n  loadBusinessObjective() {\r\n    this.trainingRequestService\r\n      .loadBusinessObjective()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IBusinessObjectiveModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.objectiveList = res.data;\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(model: IBusinessObjectiveModel[]) {\r\n    this.change.emit(model);\r\n  }\r\n\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [submitted]=\"submitted\"\r\n  [List]=\"objectiveList\"\r\n  [filter]=\"filter\"\r\n  [multi]=\"multi\"\r\n  [appendTo]=\"appendTo\"\r\n  [disable]=\"disable\"\r\n  (change)=\"onChange($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AddCourseComponent } from \"app/training/components/courses/add-course/add-course-core/add-course.component\";\r\nimport { ICourseToDisplay } from \"app/training/models/course/course\";\r\nimport { CourseService } from \"app/training/services/course/course.service\";\r\nimport { AddCourseFormComponent } from \"app/training/components/courses/add-course/add-course-form/add-course-form.component\";\r\n\r\n@Component({\r\n  selector: \"app-course-by-course-category-dropdown\",\r\n  templateUrl: \"./course-by-course-category-dropdown.component.html\",\r\n  styleUrls: [\"./course-by-course-category-dropdown.component.scss\"],\r\n})\r\nexport class CourseByCourseCategoryDropdownComponent extends BaseDropdown\r\n  implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"course\";\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Input() disable: boolean = false;\r\n  courseList: ICourseToDisplay[];\r\n  viewName: string;\r\n  @Input() courseCategoryControl: FormControl;\r\n\r\n  constructor(private courseService: CourseService) {\r\n    super();\r\n    this.viewName = ViewsManager.add_course;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n    this.courseCategoryControl.valueChanges.subscribe((courseCategoryId) => {\r\n      this.control.setValue(null);\r\n      if (courseCategoryId > 0) {\r\n        this.getAllCourseByCourseCategoryId();\r\n        if (!this.disable) this.control.enable();\r\n      }\r\n      else this.control.disable();\r\n    });\r\n  }\r\n\r\n  getAllCourseByCourseCategoryId() {\r\n    this.courseService\r\n      .getCourseByCategoryId(this.courseCategoryControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICourseToDisplay[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.courseList = res.data;\r\n        }\r\n        else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddCourseFormComponent, value, this.courseCategoryControl.value, {\r\n        height: \"90vh\",\r\n        maxHeight: \"90vh\",\r\n        width: \"85vw\",\r\n        maxWidth: \"100vw\"\r\n      })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllCourseByCourseCategoryId();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"courseList\"\r\n                    [filter]=\"filter\"\r\n                    [multi]=\"multi\"\r\n                    [disable]=\"disable\"\r\n                    [appendTo]=\"appendTo\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\">\r\n</app-prime-dropdown>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ICourseModel } from \"app/training/models/course/course\";\r\nimport { PlanCoursesService } from \"app/training/services/traning-plan/plan-courses.service\";\r\nimport { AddCourseFormComponent } from \"app/training/components/courses/add-course/add-course-form/add-course-form.component\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-course-by-plan-dropdown\",\r\n  templateUrl: \"./course-by-plan-dropdown.component.html\",\r\n  styleUrls: [\"./course-by-plan-dropdown.component.scss\"],\r\n})\r\nexport class CourseByPlanDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() planId: number;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"courses\";\r\n  @Input() disable: boolean = false;\r\n  @Input() appendTo: string | HTMLElement;\r\n  @Input() courseCategoryId: number;\r\n  @Input() changeList: boolean;\r\n  @Output() change = new EventEmitter<ICourseModel[]>();\r\n\r\n  courseList: ICourseModel[];\r\n  viewName: string;\r\n\r\n  constructor(private planCoursesService: PlanCoursesService) {\r\n    super();\r\n  //  this.viewName = ViewsManager.add_course;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.planId > 0) this.getAll();\r\n    else this.courseList = [];\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      ((changes.planId?.currentValue != changes.planId?.previousValue &&\r\n          !changes.planId?.firstChange) ||\r\n        changes.changeList) &&\r\n      this.checkNoBusinessOrCompany()\r\n    )\r\n      this.getAll();\r\n  }\r\n\r\n  // use in add plan course (courses can be assign to this plan)\r\n  getAll() {\r\n    this.planCoursesService\r\n      .getAllCourses(this.planId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ICourseModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.courseList = res.data;\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  onChange(model: ICourseModel[]) {\r\n    this.change.emit(model);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddCourseFormComponent, value, null, {\r\n        height: \"90vh\",\r\n        maxHeight: \"90vh\",\r\n        width: \"85vw\",\r\n        maxWidth: \"100vw\"\r\n      })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"courseList\"\r\n                    [filter]=\"filter\"\r\n                    [multi]=\"multi\"\r\n                    [disable]=\"disable\"\r\n                    [appendTo]=\"appendTo\"\r\n                    [viewName]=\"viewName\"\r\n                    (change)=\"onChange($event)\">\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { PlanCoreComponent } from \"app/training/components/training-plan/add-paln/plan-core/plan-core.component\";\r\nimport { IPlanCourseModel } from \"app/training/models/training-plan/plan-courses-expenses\";\r\nimport { PlanCoursesService } from \"app/training/services/traning-plan/plan-courses.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-by-training-plan-dropdown\",\r\n  templateUrl: \"./course-by-training-plan-dropdown.component.html\",\r\n  styleUrls: [\"./course-by-training-plan-dropdown.component.scss\"],\r\n})\r\nexport class CourseByTrainingPlanDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() planControl: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() label: string = \"planCourse\";\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IPlanCourseModel[]>();\r\n  courseList: IPlanCourseModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(private courseService: PlanCoursesService) {\r\n    super();\r\n    this.viewName = ViewsManager.add_training_plan;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.disable();\r\n    this.planControl.valueChanges.subscribe((planId) => {\r\n      this.control.setValue(null);\r\n      if (planId > 0) {\r\n        this.getAllCourseByPlanId();\r\n        if (!this.disable) this.control.enable();\r\n      } else this.control.disable();\r\n    });\r\n  }\r\n\r\n  getAllCourseByPlanId() {\r\n    this.courseService\r\n      .getAll(this.planControl.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPlanCourseModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.courseList = res.data;\r\n        } else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(PlanCoreComponent, value, this.planControl.value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllCourseByPlanId();\r\n      });\r\n  }\r\n\r\n  onChange(course: IPlanCourseModel[]) {\r\n    this.change.emit(course);\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"courseList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AddInstructorComponent } from \"app/training/components/instructor/add-instructor/add-instructor.component\";\r\nimport { IInstructorModel } from \"app/training/models/instructor\";\r\nimport { InstructorService } from \"app/training/services/instructor.service\";\r\n\r\n@Component({\r\n  selector: \"app-instructor-dropdown\",\r\n  templateUrl: \"./instructor-dropdown.component.html\",\r\n  styleUrls: [\"./instructor-dropdown.component.scss\"],\r\n})\r\nexport class IstructorDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"instructors\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<IInstructorModel[]>();\r\n  instructorList: IInstructorModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(private instructorService: InstructorService) {\r\n    super();\r\n    this.viewName = ViewsManager.instructor_index;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllInstructors();\r\n  }\r\n\r\n  getAllInstructors() {\r\n    this.instructorService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IInstructorModel[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.instructorList = res.data;\r\n        }\r\n        else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(instructor: IInstructorModel[]) {\r\n    this.change.emit(instructor);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddInstructorComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllInstructors();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"instructorList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { PlanCoreComponent } from \"app/training/components/training-plan/add-paln/plan-core/plan-core.component\";\r\nimport { ITrainingPlanModel } from \"app/training/models/training-plan/training-plan\";\r\nimport { TrainingPlanIndexService } from \"app/training/services/traning-plan/training-plan-index.service\";\r\n\r\n@Component({\r\n  selector: \"app-training-plan-dropdown\",\r\n  templateUrl: \"./training-plan-dropdown.component.html\",\r\n  styleUrls: [\"./training-plan-dropdown.component.scss\"],\r\n})\r\nexport class TrainingPlanDropdownComponent\r\n  extends BaseDropdown\r\n  implements OnInit\r\n{\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"plan\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<ITrainingPlanModel[]>();\r\n  planList: ITrainingPlanModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(private trainingPlanIndexService: TrainingPlanIndexService) {\r\n    super();\r\n    this.viewName = ViewsManager.add_training_plan;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.trainingPlanIndexService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ITrainingPlanModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.planList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(plan: ITrainingPlanModel[]) {\r\n    this.change.emit(plan);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(PlanCoreComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown\r\n  [control]=\"control\"\r\n  [label]=\"label\"\r\n  [multi]=\"multi\"\r\n  [List]=\"planList\"\r\n  [submitted]=\"submitted\"\r\n  [filter]=\"filter\"\r\n  [disable]=\"disable\"\r\n  [appendTo]=\"appendTo\"\r\n  (change)=\"onChange($event)\"\r\n  [viewName]=\"viewName\"\r\n  (createNewDialog)=\"createDialog($event)\"\r\n>\r\n</app-prime-dropdown>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AddTspComponent } from \"app/training/components/tsp/add-tsp/add-tsp.component\";\r\nimport { ISTPModel } from \"app/training/models/tsp\";\r\nimport { TspService } from \"app/training/services/tsp.service\";\r\n\r\n@Component({\r\n  selector: \"app-tsp-dropdown\",\r\n  templateUrl: \"./tsp-dropdown.component.html\",\r\n  styleUrls: [\"./tsp-dropdown.component.scss\"],\r\n})\r\nexport class TspDropdownComponent extends BaseDropdown implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() multi: boolean = false;\r\n  @Input() filter: boolean = false;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() label: string = \"TSP\";\r\n  @Input() disable: boolean = false;\r\n  @Output() change = new EventEmitter<ISTPModel[]>();\r\n  TSPList: ISTPModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(private tspService: TspService) {\r\n    super();\r\n    this.viewName = ViewsManager.tsp_index;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.tspService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<ISTPModel[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.TSPList = res.data;\r\n        }\r\n        else this.errorList(res.message?.messages);\r\n      });\r\n  }\r\n\r\n  onChange(tsp: ISTPModel[]) {\r\n    this.change.emit(tsp);\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(AddTspComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAll();\r\n      });\r\n  }\r\n}\r\n","<app-prime-dropdown [control]=\"control\"\r\n                    [label]=\"label\"\r\n                    [multi]=\"multi\"\r\n                    [List]=\"TSPList\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"filter\"\r\n                    [disable]=\"disable\"\r\n                    [appendTo]=\"appendTo\"\r\n                    (change)=\"onChange($event)\"\r\n                    [viewName]=\"viewName\"\r\n                    (createNewDialog)=\"createDialog($event)\">\r\n</app-prime-dropdown>\r\n\r\n","import {Component, EventEmitter, Input, Output} from \"@angular/core\";\r\nimport {IGUIModel} from \"app/shared/interfaces/user-views\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\n\r\n@Component({\r\n  selector: \"app-global-functions\",\r\n  templateUrl: \"./global-functions.component.html\",\r\n  styleUrls: [\"./global-functions.component.scss\"],\r\n})\r\nexport class GlobalFunctionsComponent {\r\n  @Input() functions: IGUIModel[];\r\n  @Output() action = new EventEmitter<any>();\r\n  appSettings: AppHelpers = new AppHelpers();\r\n  parentView: string;\r\n  params: {};\r\n\r\n  constructor(public detectorService:DeviceDetectorService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.parentView = this.appSettings.getViewName;\r\n    this.params = {\r\n      parentView: this.parentView,\r\n      ...this.appSettings.parentModuleIdParam,\r\n    };\r\n  }\r\n\r\n\r\n  Action(globalFun: IGUIModel) {\r\n    this.action.emit(globalFun);\r\n  }\r\n}\r\n","<ng-container *ngIf=\"functions?.length > 0\">\r\n  <ng-container *ngFor=\"let fun of functions\">\r\n    <!-- fun with routerLink (External row fun ) -->\r\n    <button mat-stroked-button\r\n            *ngIf=\"fun.path\"\r\n            [matTooltip]=\"fun.name | translate\"\r\n            [routerLink]=\"fun.path\"\r\n            [queryParams]=\"params\"\r\n            id=\"global-{{fun.id}}\"\r\n            class=\"btn btn-outline-{{ fun.color }} mr-2 ml-2 mb-1 global-fun-btn\">\r\n      <i [class]=\"fun.icon\" class=\"font-size-14 mx-lg-1\"></i>\r\n      <ng-container *ngIf=\"!detectorService.isMobile()\">\r\n        {{ fun.name | translate }}\r\n      </ng-container>\r\n    </button>\r\n\r\n    <!-- fun without routerLink (internal row fun ) -->\r\n    <button\r\n      mat-stroked-button\r\n      *ngIf=\"!fun.path\"\r\n      type=\"button\"\r\n      [matTooltip]=\"fun.name | translate\"\r\n      (click)=\"Action(fun)\"\r\n      id=\"global-{{fun.id}}\"\r\n      class=\"btn btn-outline-{{ fun.color }}  round mx-lg-1 ml-2 mb-1 global-fun-btn\">\r\n      <i [class]=\"fun.icon\" class=\"font-size-14 mr-1 ml-1\"></i>\r\n      <ng-container *ngIf=\"!detectorService.isMobile()\">\r\n        {{ fun.name | translate }}\r\n      </ng-container>\r\n    </button>\r\n  </ng-container>\r\n</ng-container>\r\n\r\n<!-- // Loading skeleton  -->\r\n<ng-container *ngIf=\"functions == null\">\r\n  <p-skeleton shape=\"rectangle\" width=\"55px\" height=\"2rem\" styleClass=\"p-mr-2 mr-1 d-inline-block\">\r\n  </p-skeleton>\r\n  <p-skeleton shape=\"rectangle\" width=\"55px\" height=\"2rem\" styleClass=\"p-mr-2  d-inline-block \">\r\n  </p-skeleton>\r\n</ng-container>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mat-stepper-done-icon\",\r\n  templateUrl: \"./mat-stepper-done-icon.component.html\",\r\n  styleUrls: [\"./mat-stepper-done-icon.component.scss\"]\r\n})\r\nexport class MatStepperDoneIconComponent implements OnInit {\r\n  @Input() icon: string = \"fas fa-check\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ng-template matStepperIcon=\"edit\">\r\n  <i [class]=\"icon\"></i>\r\n</ng-template>\r\n\r\n<!--<ng-template matStepperIcon=\"edit\">-->\r\n<!--  <i class=\"fas fa-check\"></i>-->\r\n<!--</ng-template>-->\r\n","import {Component, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\r\nimport {IGUIModel, IRowActionsModel} from \"app/shared/interfaces/user-views\";\r\n\r\n@Component({\r\n  selector: \"page-title\",\r\n  templateUrl: \"./page-title.component.html\",\r\n  styleUrls: [\"./page-title.component.scss\"],\r\n})\r\nexport class PageTitleComponent implements OnInit {\r\n  @Input() id: number;\r\n  @Input() addTitle: string;\r\n  @Input() editTitle: string;\r\n  @Input() title?: string;\r\n  @Input() color?: string;\r\n  @Input() icon?: string;\r\n  @Input() globalFunctions?: IGUIModel[] = [];\r\n  @Output() action = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  Action(globalFun: IRowActionsModel) {\r\n    this.action.emit(globalFun);\r\n  }\r\n}\r\n","<!-- IF add or edit title -->\r\n<span class=\"title page-title\" *ngIf=\"id >= 0\">\r\n\t<i *ngIf=\"icon\" [ngClass]=\"[icon, color]\" class=\"mr-1\"></i>\r\n\t<span *ngIf=\"id == 0\" [class]=\"color\">\r\n\t\t{{ addTitle | translate | titlecase }}\r\n\t</span>\r\n\t<span *ngIf=\"id > 0\" [class]=\"color\">\r\n\t\t{{ editTitle | translate | titlecase }}\r\n\t</span>\r\n\t<ng-content></ng-content>\r\n</span>\r\n\r\n<!-- IF just title -->\r\n<span class=\"title page-title\" *ngIf=\"!id && title\" [class]=\"color\">\r\n\t<i *ngIf=\"icon\" [ngClass]=\"icon\" class=\"mr-1\"></i>\r\n  {{ title | translate | titlecase }}\r\n  <ng-content></ng-content>\r\n</span>\r\n\r\n<!-- global Functions  -->\r\n\r\n<!-- *ngIf=\"globalFunctions\" -->\r\n<span class=\"float-right\">\r\n\t<app-global-functions [functions]=\"globalFunctions\" (action)=\"Action($event)\">\r\n\t</app-global-functions>\r\n</span>\r\n\r\n<!--<hr>-->\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-add-new-btn\",\r\n  templateUrl: \"./add-new-btn.component.html\",\r\n  styleUrls: [\"./add-new-btn.component.scss\"],\r\n})\r\nexport class AddNewBtnComponent {\r\n  @Input() url: string;\r\n  @Input() label?: string;\r\n  @Input() params: any;\r\n  @Input() class?: any;\r\n  @Output() onClick? = new EventEmitter<any>();\r\n\r\n  constructor(private router: Router) {}\r\n\r\n\r\n  click($event) {\r\n    // this.router.navigate([this.url], {queryParams: this.params});\r\n    this.router.navigateByUrl(\"/\", {skipLocationChange: true}).then(() => {\r\n      this.router.navigate([this.url], {queryParams: this.params});\r\n    });\r\n    this.onClick.emit($event);\r\n  }\r\n\r\n}\r\n","<button\r\n  mat-button\r\n  class=\"btn btn-info bg-light-info float-right mx-1\"\r\n  id=\"add_new_btn\"\r\n  [class]=\"class\"\r\n  (click)=\"click($event)\">\r\n  {{ (label?.trim() ? label : \"General.addNew\") | translate | titlecase }}\r\n</button>\r\n\r\n\r\n<!--[routerLink]=\"[url]\"-->\r\n<!--[queryParams]=\"params\"-->\r\n","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-back-btn\",\r\n  templateUrl: \"./back-btn.component.html\",\r\n  styleUrls: [\"./back-btn.component.scss\"],\r\n})\r\nexport class BackBtnComponent {\r\n  @Input() url: string;\r\n  @Input() params: any;\r\n  @Input() class?: any;\r\n\r\n  constructor() {}\r\n\r\n}\r\n","<button mat-button\r\n        class=\"btn btn-warn bg-light float-right back-btn pright-16 pleft-6\"\r\n        id=\"back_btn\"\r\n        [class]=\"class\"\r\n        [routerLink]=\"[url]\"\r\n        [queryParams]=\"params\">\r\n  <i class=\"ft-chevron-left font-size-25\"></i>\r\n  {{ \"General.back\" | translate | titlecase }}\r\n</button>\r\n<div class=\"clearfix d-inline\"></div>\r\n\r\n<!--<app-button [class]=\"class\"-->\r\n<!--            [routerLink]=\"[url]\"-->\r\n<!--            [queryParams]=\"params\"-->\r\n<!--            label=\"General.back\"-->\r\n<!--            icon=\"ft-chevron-left font-size-25\"-->\r\n<!--            color=\"bg-light\"-->\r\n<!--            class=\"float-right\"-->\r\n<!--&gt;-->\r\n\r\n<!--</app-button>-->\r\n","import { LanguageService } from \"app/shared/services/language.service\";\r\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-button\",\r\n  templateUrl: \"./button.component.html\",\r\n  styleUrls: [\"./button.component.scss\"],\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() class?: string = \"\";\r\n  @Input() label?: string;\r\n  @Input() icon?: string;\r\n  @Input() iconPositionBefore?: boolean = true;\r\n  @Input() color: string = Constants.defaultButtonColor; // css color class\r\n  @Input() id: number = 0;\r\n  @Input() disabled: boolean = false;\r\n  @Input() url: string = null;\r\n  @Input() params: any = null;\r\n  @Input() decreasePaddingWithIcon?: boolean = false;\r\n  @Input() isRaisedBtn: boolean = true;\r\n  @Output() onClick? = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    public route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.decreasePaddingWithIcon && this.icon)\r\n      (this.iconPositionBefore && this.languageService.isArabic) ||\r\n      (!this.iconPositionBefore && this.languageService.isEnglish)\r\n        ? (this.class += \" pright-6 pleft-16\")\r\n        : (this.class += \" pright-16 pleft-6\");\r\n  }\r\n\r\n  click($event) {\r\n    this.onClick.emit($event);\r\n  }\r\n}\r\n","<button\r\n  class=\"btn mx-1 clearfix d-block\"\r\n  [ngClass]=\"[\r\n    color,\r\n    class,\r\n    isRaisedBtn ? 'mat-raised-button' : 'mat-stroked-button'\r\n  ]\"\r\n  (click)=\"click($event)\"\r\n  [disabled]=\"disabled\"\r\n  [routerLink]=\"url ? [url] : []\"\r\n  [queryParams]=\"url ? params : route.snapshot.queryParams\"\r\n  type=\"button\"\r\n>\r\n  <span\r\n    class=\"d-flex align-items-center\"\r\n    [ngClass]=\"iconPositionBefore ? 'flex-row' : 'flex-row-reverse'\"\r\n  >\r\n    <i\r\n      *ngIf=\"icon\"\r\n      [class]=\"icon\"\r\n      [ngClass]=\"iconPositionBefore ? 'mr-1 ml-0' : 'ml-1 mr-0'\"\r\n    >\r\n    </i>\r\n    {{ label | translate | titlecase }}\r\n  </span>\r\n</button>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"close-dialog-btn\",\r\n\ttemplateUrl: \"./close-dialog-btn.component.html\",\r\n\tstyleUrls: [\"./close-dialog-btn.component.scss\"],\r\n})\r\nexport class CloseDialogBtnComponent implements OnInit {\r\n\t//@Output() onClick? = new EventEmitter<any>();\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {}\r\n\r\n\tclick($event) {\r\n\t\t//\tthis.onClick.emit($event);\r\n\t}\r\n}\r\n","<button\r\n  mat-icon-button\r\n  id=\"close_dialog_btn\"\r\n  class=\"float-right mb-1\"\r\n  (click)=\"click($event)\"\r\n>\r\n  <i class=\"pi pi-times\"></i>\r\n</button>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"reset-form-btn\",\r\n  templateUrl: \"./reset-form-btn.component.html\",\r\n  styleUrls: [\"./reset-form-btn.component.scss\"],\r\n})\r\nexport class ResetFormBtnComponent implements OnInit {\r\n  @Input() class?: any;\r\n  @Output() click = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onClick($event) {\r\n    this.click.emit($event);\r\n  }\r\n}\r\n","<button mat-raised-button\r\n        id=\"reset_form_btn\"\r\n        class=\"btn btn-outline-light mx-2 px-3 d-block box-shadow-0 border\"\r\n        [class]=\"class\"\r\n        (click)=\"onClick($event)\">\r\n  {{ \"General.reset\" | translate }}\r\n</button>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\r\nimport {Constants} from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"submit-btn\",\r\n  templateUrl: \"./submit-btn.component.html\",\r\n  styleUrls: [\"./submit-btn.component.scss\"],\r\n})\r\nexport class SubmitBtnComponent implements OnInit {\r\n  @Input() class?: string = \"\";\r\n  @Input() label?: string;\r\n  @Input() icon?: string;\r\n  @Input() iconPositionBefore?: boolean = true;\r\n  @Input() color: string = Constants.defaultButtonColor; // css color class\r\n  @Input() id: number = 0;\r\n  @Input() disabled: boolean = false;\r\n  @Output() onClick? = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  click($event) {\r\n    this.onClick.emit($event);\r\n  }\r\n\r\n  getLabel(): string {\r\n    if (this.label) return this.label\r\n    else if (this.id > 0) return \"General.update\"\r\n    else return \"General.save\"\r\n  }\r\n}\r\n","<button mat-raised-button\r\n        class=\"btn mr-1 ml-1 mb-1 clearfix\"\r\n        id=\"submit_btn\"\r\n        [ngClass]=\"[color, class]\"\r\n        (click)=\"click($event)\"\r\n        [disabled]=\"disabled\"\r\n        type=\"button\">\r\n\r\n  <span *ngIf=\"id == 0 || !id\"\r\n        class=\"d-flex align-items-center\"\r\n        [ngClass]=\"iconPositionBefore ? 'flex-row' : 'flex-row-reverse'\">\r\n\r\n    <i *ngIf=\"icon\" [class]=\"icon\" class=\"mr-1 ml-1\"></i>\r\n    {{ (label ? label : \"General.save\") | translate }}\r\n  </span>\r\n\r\n  <span *ngIf=\"id > 0\"\r\n        class=\"d-flex align-items-center\"\r\n        [ngClass]=\"iconPositionBefore ? 'flex-row' : 'flex-row-reverse'\">\r\n\r\n    <i *ngIf=\"icon\" [class]=\"icon\" class=\"mr-1 ml-1\"></i>\r\n    {{ (label ? label : \"General.update\") | translate }}\r\n\r\n  </span>\r\n</button>\r\n\r\n<!--<app-button [ngClass]=\"[color, class]\"-->\r\n<!--            [disabled]=\"disabled\"-->\r\n<!--            [iconPositionBefore]=\"iconPositionBefore\"-->\r\n<!--            [icon]=\"icon\"-->\r\n<!--            [color]=\"color\"-->\r\n<!--            [label]=\"getLabel()\"-->\r\n<!--            (click)=\"click($event)\"-->\r\n<!--&gt;-->\r\n\r\n<!--</app-button>-->\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-info bg-light-info btn-sm\"\r\n      mat-raised-button\r\n      (click)=\"fileInput.click()\"\r\n    >\r\n      <i class=\"fa fa-upload mr-1\" *ngIf=\"showIcon\"></i>\r\n      {{ label | translate }}\r\n    </button>\r\n\r\n    <input\r\n      hidden\r\n      #fileInput\r\n      [id]=\"htmlId\"\r\n      class=\"form-control\"\r\n      type=\"file\"\r\n      [accept]=\"accept\"\r\n      (change)=\"uploadFile($event)\"\r\n      \r\n    />\r\n\r\n    <span class=\"danger\">\r\n      <input-validation-msg\r\n        [control]=\"control\"\r\n        [submitted]=\"submitted\"\r\n        [isFile]=\"true\"\r\n      >\r\n      </input-validation-msg>\r\n    </span>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\n//import { FileModel } from \"app/shared/models/general/general\";\r\n//import { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-button-file-input\",\r\n  templateUrl: \"./button-file-input.component.html\",\r\n  styleUrls: [\"./button-file-input.component.scss\"],\r\n})\r\nexport class ButtonFileInputComponent  implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() accept?: string;\r\n  @Input() removeFile?: boolean;\r\n  @Input() htmlId: string;\r\n  @Input() showIcon: boolean = true;\r\n  @Input() label: string = \"General.upload\";\r\n\r\n  constructor(\r\n    //private fileService: UploadFileService,\r\n  ) {\r\n   ;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  ngOnChanges(): void {\r\n    if (this.removeFile) {\r\n      //this.fileService.resetFileById(this.htmlId);\r\n    }\r\n  }\r\n\r\n  async uploadFile(event) {\r\n    //   await this.fileService.uploadFile(event).then((file: FileModel) => {\r\n    //     // file to large > 10 .MB\r\n    //     if (file.size > 10485760) {\r\n    //       this.warning(\"General.largFileError\");\r\n    //       if (this.htmlId) this.fileService.resetFileById(this.htmlId);\r\n    //     } else {\r\n    //       setTimeout(() => {\r\n    //         this.control?.setValue(file);\r\n    //       }, 100);\r\n    //     }\r\n    //   });\r\n  }\r\n}\r\n","import { Component, EventEmitter, inject, Input, OnInit, Output, SimpleChanges, } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ThemePalette } from \"@angular/material/core\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-check-box\",\r\n  templateUrl: \"./check-box.component.html\",\r\n  styleUrls: [\"./check-box.component.scss\"],\r\n})\r\nexport class CheckBoxComponent implements OnInit {\r\n  @Input() control?: FormControl;\r\n  @Input() modelName?;\r\n  @Input() label: string = \"\";\r\n  @Input() labelPosition?: string = \"after\"; // 'before' | 'after'\r\n  @Input() submitted?: boolean = false;\r\n  @Input() color: ThemePalette = \"primary\";\r\n  @Input() class?: string;\r\n  @Input() id?: string;\r\n  @Input() disabled: boolean = false;\r\n  @Output() onChange = new EventEmitter<boolean>();\r\n\r\n  public languageService = inject(LanguageService);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.control?.value == null) {\r\n      this.control?.setValue(false);\r\n    }\r\n\r\n    if (!this.modelName) this.modelName = this.control.value;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled?.currentValue) {\r\n      this.control?.disable();\r\n    }\r\n    else if (!changes.disabled?.currentValue) {\r\n      this.control?.enable();\r\n    }\r\n  }\r\n\r\n  change(value: boolean) {\r\n    this.onChange.emit(value);\r\n  }\r\n}\r\n","<mat-checkbox [formControl]=\"control\"\r\n              [color]=\"color\"\r\n              [class]=\"class\"\r\n              [id]=\"id\"\r\n              [labelPosition]=\"labelPosition\"\r\n              (change)=\"change($event.checked)\"\r\n              [(ngModel)]=\"modelName\">\r\n  <span\r\n    [ngClass]=\"{\r\n      lableBeforeEnglish:\r\n        labelPosition === 'before' && languageService.isEnglish,\r\n      lableBeforeArabic: labelPosition === 'before' && languageService.isArabic\r\n    }\"\r\n  >{{ label | translate }}</span\r\n  >\r\n</mat-checkbox>\r\n\r\n<span class=\"danger\" *ngIf=\"control\">\r\n  <input-validation-msg [control]=\"control\" [submitted]=\"submitted\">\r\n\r\n    <ng-container class=\"before\">\r\n      <ng-content select=\".msg-before\"></ng-content>\r\n    </ng-container>\r\n\r\n    <ng-container class=\"after\">\r\n      <ng-content select=\".msg-after\"></ng-content>\r\n    </ng-container>\r\n\r\n  </input-validation-msg>\r\n</span>\r\n","import { Component, EventEmitter, inject, Input, Output, SimpleChanges } from \"@angular/core\";\r\nimport { AbstractControl, FormControl } from \"@angular/forms\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-datepicker\",\r\n  templateUrl: \"./datepicker.component.html\",\r\n  styleUrls: [\"./datepicker.component.scss\"],\r\n})\r\nexport class DatepickerComponent {\r\n  @Input() control: FormControl | AbstractControl;\r\n  @Input() label: string;\r\n  @Input() placeholder?: string;\r\n  @Input() submitted: boolean = false;\r\n  @Input() appearance: string = Constants.defaultInputAppearance;\r\n  @Input() maxDate: Date = null;\r\n  @Input() minDate: Date = null;\r\n  @Input() disabled?: boolean = false;\r\n  @Input() readonly?: boolean = false;\r\n\r\n  @Output() keyUp? = new EventEmitter<any>();\r\n  @Output() keyDown? = new EventEmitter<any>();\r\n  @Output() keyPress? = new EventEmitter<any>();\r\n  @Output() keyEnter? = new EventEmitter<any>();\r\n  @Output() change? = new EventEmitter<any>();\r\n  isFloatLabel: boolean = Constants.defaultFloatLabel;\r\n\r\n  public languageService = inject(LanguageService);\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.disabled) {\r\n      this.control?.disable();\r\n    }\r\n    else if (!this.disabled) {\r\n      this.control?.enable();\r\n    }\r\n    //\telse this.control?.enable();\r\n  }\r\n\r\n  onkeyup(value: any) {\r\n    this.keyUp.emit(value);\r\n  }\r\n\r\n  onkeydown(value: any) {\r\n    this.keyDown.emit(value);\r\n  }\r\n\r\n  onkeypress(value: any) {\r\n    this.keyPress.emit(value);\r\n  }\r\n\r\n  onkeyEnter(value: any) {\r\n    this.keyEnter.emit(value);\r\n  }\r\n\r\n  onChange(value: any) {\r\n    this.change.emit(value);\r\n  }\r\n}\r\n","<div [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n  <mat-label *ngIf=\"!isFloatLabel\">\r\n    {{ label | translate }}\r\n  </mat-label>\r\n  <mat-form-field [appearance]=\"appearance\">\r\n    <mat-label *ngIf=\"isFloatLabel\">\r\n      {{ label | translate }}\r\n    </mat-label>\r\n    <input matInput\r\n           [matDatepicker]=\"date\"\r\n           [formControl]=\"control\"\r\n           [placeholder]=\"placeholder | translate\"\r\n           [max]=\"maxDate\"\r\n           [min]=\"minDate\"\r\n           [readonly]=\"readonly\"\r\n           (keyup)=\"onkeyup($event.target.value)\"\r\n           (keydown)=\"onkeydown($event.target.value)\"\r\n           (keypress)=\"onkeypress($event.target.value)\"\r\n           (keyup.enter)=\"onkeyEnter($event.target.value)\"\r\n           (dateChange)=\"onChange($event.target.value)\"\r\n           (focus)=\"date.open()\"/>\r\n    <mat-datepicker-toggle matSuffix [for]=\"date\"></mat-datepicker-toggle>\r\n    <mat-datepicker #date></mat-datepicker>\r\n    <mat-hint>\r\n      <input-validation-msg [control]=\"control\" [submitted]=\"submitted\" [isDate]=\"true\">\r\n        <ng-container class=\"before\">\r\n          <ng-content select=\".msg\"></ng-content>\r\n        </ng-container>\r\n        <ng-container class=\"after\">\r\n          <ng-content select=\".msg\"></ng-content>\r\n        </ng-container>\r\n      </input-validation-msg>\r\n    </mat-hint>\r\n  </mat-form-field>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MatSelect, MatSelectChange } from \"@angular/material/select\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { ReplaySubject, Subject } from \"rxjs\";\r\nimport { take, takeUntil } from \"rxjs/operators\";\r\n\r\ninterface GeneralVM {\r\n  id: number;\r\n  ar_name: String;\r\n  en_name: string;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-dropdown-search\",\r\n  templateUrl: \"./dropdown-with-search.component.html\",\r\n  styleUrls: [\"./dropdown-with-search.component.scss\"],\r\n})\r\nexport class DropdownWithSearchComponent implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() filterControl: FormControl;\r\n  @Input() List: GeneralVM[] = [];\r\n  @Input() label: string;\r\n  @Output() onChange? = new EventEmitter<any>();\r\n\r\n  filteredList: ReplaySubject<GeneralVM[]> = new ReplaySubject<GeneralVM[]>(1);\r\n\r\n  @ViewChild(\"singleSelect\") singleSelect: MatSelect;\r\n\r\n  // Subject that emits when the component has been destroyed\r\n  private _onDestroy = new Subject<void>();\r\n\r\n  constructor(public languageService: LanguageService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.filteredList.next(this.List.slice());\r\n    console.log(this.control.value);\r\n\r\n    // listen for search field value changes\r\n    this.filterControl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterCategories();\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.List.currentValue != changes.List.previousValue) {\r\n      this.filteredList.next(this.List.slice());\r\n    }\r\n  }\r\n\r\n  change(event: MatSelectChange) {\r\n    this.onChange.emit(event.value);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setInitialValue();\r\n  }\r\n\r\n  // Sets the initial value after the filteredList are loaded initially\r\n  private setInitialValue() {\r\n    this.filteredList\r\n      .pipe(take(1), takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        // setting the compareWith property to a comparison function\r\n        // triggers initializing the selection according to the initial value of\r\n        // the form control (i.e. _initializeSelection())\r\n        // this needs to be done after the filteredList are loaded initially\r\n        // and after the mat-option elements are available\r\n        this.singleSelect.compareWith = (a: number, b: number) => a == b;\r\n      });\r\n  }\r\n\r\n  private filterCategories() {\r\n    if (!this.List) {\r\n      return;\r\n    }\r\n    // get the search keyword\r\n    let search = this.filterControl.value;\r\n    if (!search) {\r\n      this.filteredList.next(this.List.slice());\r\n      return;\r\n    } else {\r\n      search = search.toLowerCase();\r\n    }\r\n    // filter the list\r\n    this.filteredList.next(\r\n      this.List.filter(\r\n        (category) =>\r\n          category.ar_name.toLowerCase().indexOf(search) > -1 ||\r\n          category.en_name.toLowerCase().indexOf(search) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n}\r\n","<mat-form-field>\r\n  <mat-label> {{ label | translate }}</mat-label>\r\n  <mat-select\r\n    [formControl]=\"control\"\r\n    #singleSelect\r\n    (selectionChange)=\"change($event)\"\r\n  >\r\n    <!-- [placeholderLabel]=\"label\"  for  mat-select-search input placeholder default is 'Search' -->\r\n    <mat-select-search [formControl]=\"filterControl\"></mat-select-search>\r\n    <mat-option [value]=\"0\">{{ \"General.choose\" | translate }}</mat-option>\r\n    <mat-option *ngFor=\"let ele of filteredList | async\" [value]=\"ele.id\" #d>\r\n      {{\r\n        languageService.isArabic\r\n          ? ele.ar_name ?? ele.en_name\r\n          : ele.en_name ?? ele.ar_name\r\n      }}\r\n    </mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n","import { Component, inject, Input, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { IFileBase64 } from \"app/shared/interfaces/files\";\r\nimport { FileService } from \"app/shared/services/file.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-file-input\",\r\n  templateUrl: \"./file-input.component.html\",\r\n  styleUrls: [\"./file-input.component.scss\"],\r\n})\r\nexport class FileInputComponent implements OnInit {\r\n  @Input() control: FormControl;\r\n  @Input() submitted: boolean = false;\r\n  @Input() accept?: string;\r\n  @Input() removeFile?: boolean;\r\n  @Input() htmlId: string;\r\n  @Input() label: string;\r\n  @Input() isBase64: boolean = false;\r\n  fileService = inject(FileService);\r\n  messageService = inject(MessagesService);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(): void {\r\n    if (this.removeFile) {\r\n      this.fileService.resetFileById(this.htmlId);\r\n    }\r\n  }\r\n\r\n  onChange(files) {\r\n    if (this.isBase64) this.uploadBase64(files);\r\n    else this.upload(files);\r\n  }\r\n\r\n  public upload = (files) => {\r\n    this.control.setValue(this.fileService.upload(files));\r\n  };\r\n\r\n  async uploadBase64(event) {\r\n    await this.fileService.uploadBase64(event).then((file: IFileBase64) => {\r\n      // file to large > 10 .MB\r\n      if (file.size > 10485760) {\r\n        this.messageService.warning(\"General.largFileError\");\r\n        if (this.htmlId) this.fileService.resetFileById(this.htmlId);\r\n      }\r\n      else {\r\n        setTimeout(() => {\r\n          this.control?.setValue(file);\r\n        }, 100);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\" [ngClass]=\"{ 'row ml-0': label }\">\r\n    <mat-label [ngClass]=\"{ 'col-md-4 col-12': label }\" class=\"pt-2 pl-0\">\r\n      {{ label | translate }}\r\n    </mat-label>\r\n    <input\r\n      [id]=\"htmlId\"\r\n      class=\"form-control\"\r\n      type=\"file\"\r\n      [accept]=\"accept\"\r\n      name=\"answerFourImage\"\r\n      #file\r\n      (change)=\"onChange(file.files)\"\r\n      [ngClass]=\"{ 'col-md-8 col-12': label }\"\r\n    />\r\n    <span class=\"danger\">\r\n      <input-validation-msg\r\n        [control]=\"control\"\r\n        [submitted]=\"submitted\"\r\n        [isFile]=\"true\"\r\n      >\r\n      </input-validation-msg>\r\n    </span>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n\tselector: \"input-validation-msg\",\r\n\ttemplateUrl: \"./input-validation-msg.component.html\",\r\n\tstyleUrls: [\"./input-validation-msg.component.scss\"],\r\n})\r\nexport class InputValidationMsgComponent {\r\n\t@Input() control: FormControl;\r\n\t@Input() submitted: boolean = false;\r\n\t@Input() isSelect?: boolean = false;\r\n\t@Input() isDate?: boolean = false;\r\n\t@Input() isFile?: boolean = false;\r\n\tmobileLength: number;\r\n\tmobileStartsWith: string;\r\n\r\n\tconstructor() {\r\n\t\tthis.mobileLength = Constants.mobileLength;\r\n\t\tthis.mobileStartsWith = Constants.mobileStartsWith;\r\n\t}\r\n\r\n\t// get control name (equalTo & notEqualTo validators)\r\n\tgetControlName(validatorName: string): string | null {\r\n\t\tconst parent = this.control.errors[validatorName].control.parent;\r\n\t\tif (parent) {\r\n\t\t\tconst controls = parent.controls;\r\n\t\t\tconst controlName = Object.keys(controls).find(\r\n\t\t\t\t(name) => controls[name].value === this.control.errors[validatorName].value\r\n\t\t\t);\r\n\t\t\treturn controlName || null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n","<span class=\"mx-1 float-left\">\r\n  <ng-content select=\".before\"></ng-content>\r\n</span>\r\n<span class=\"text-danger\"\r\n      *ngIf=\"control.invalid && (control.touched || submitted)\">\r\n\r\n<!--  required or whiteSpace input -->\r\n  <span\r\n    *ngIf=\"\r\n      (control.errors?.required || control.errors?.whiteSpace) &&\r\n      !isSelect &&\r\n      !isDate &&\r\n      !isFile\r\n    \"\r\n  >\r\n    {{ \"mustEnterValue\" | translate }}\r\n  </span>\r\n\r\n  <!--  required Select -->\r\n  <span *ngIf=\"control?.errors?.required && isSelect\">\r\n    {{ \"mustChoosevalue\" | translate }}\r\n  </span>\r\n\r\n  <!--  required File -->\r\n  <span *ngIf=\"control?.errors?.required && isFile\" class=\"file-error\">\r\n    {{ \"mustSelectFile\" | translate }}\r\n  </span>\r\n\r\n  <!--  required Date -->\r\n  <span *ngIf=\"control.errors?.required && isDate\">\r\n    {{ \"mustEnterDate\" | translate }}\r\n  </span>\r\n\r\n  <!--  pattern -->\r\n  <span *ngIf=\"control.errors?.pattern\">\r\n    {{ \"mustEnterCorrectValue\" | translate }}\r\n  </span>\r\n\r\n  <!--  email -->\r\n  <span *ngIf=\"control.errors?.email\">\r\n    {{ \"mustEnterValidEmail\" | translate }}\r\n  </span>\r\n\r\n  <!--  Length -->\r\n  <span *ngIf=\"control.errors?.Length\">\r\n    {{ \"LengthErr\" | translate }}\r\n    {{ control.errors?.value }}\r\n    <!--    <span class=\"float-right dark\">-->\r\n    <!--      {{ control.errors?.value - control?.value?.length }}-->\r\n    <!--    </span>-->\r\n  </span>\r\n\r\n  <!--  minlength -->\r\n  <span *ngIf=\"control.errors?.minlength\">\r\n    {{ \"minLength\" | translate }}\r\n    {{ control.errors?.minlength.requiredLength }}\r\n  </span>\r\n\r\n  <!--  maxlength -->\r\n  <span *ngIf=\"control.errors?.maxlength\">\r\n    {{ \"maxLength\" | translate }}\r\n    {{ control.errors?.maxlength.requiredLength }}\r\n  </span>\r\n\r\n  <!--  max -->\r\n  <span *ngIf=\"control.errors?.max\">\r\n    {{ \"maxNum\" | translate }}\r\n    {{ control.errors?.max.max ?? control.errors.max.value }}\r\n  </span>\r\n\r\n  <!--  min -->\r\n  <span *ngIf=\"control.errors?.min\">\r\n    {{ \"minNum\" | translate }}\r\n    {{ control.errors?.min.min ?? control.errors.min.value }}\r\n  </span>\r\n\r\n  <!--  smallerThanNumbers -->\r\n  <span *ngIf=\"control.errors?.smallerThanNumbers\">\r\n    {{ \"smallerThan\" | translate }} {{ control.errors.value }}\r\n  </span>\r\n\r\n  <!--  compareDates -->\r\n  <span *ngIf=\"control.errors?.compareDates && isDate\">\r\n    {{ \"toDatedIsBefore\" | translate }}\r\n  </span>\r\n\r\n  <!--  timeBefore -->\r\n  <span *ngIf=\"control.errors?.timeBefore\">\r\n    {{ control.errors.from | translate }} {{ \"mustBeBefore\" | translate }}\r\n    {{ control.errors.to | translate }}\r\n  </span>\r\n\r\n  <!--  timeAfter -->\r\n  <span *ngIf=\"control.errors?.timeAfter\">\r\n    {{ control.errors.from | translate }}\r\n    {{ \"mustBeAfter\" | translate }}\r\n    {{ control.errors.to | translate }}\r\n  </span>\r\n\r\n  <!--  MobileStartsWith -->\r\n  <span *ngIf=\"control.errors?.MobileStartsWith\">\r\n    {{ \"numberMustStartWith\" | translate }} ({{ mobileStartsWith }})\r\n  </span>\r\n\r\n  <!--  mobileLength -->\r\n  <span *ngIf=\"control.errors?.mobileLength\">\r\n    {{ \"mobileLength\" | translate }} ({{ mobileLength }})\r\n  </span>\r\n\r\n  <!--  greaterThan -->\r\n  <span *ngIf=\"control.errors?.greaterThan\">\r\n    {{ \"greaterThanMsg\" | translate }} {{ control.errors.value }}\r\n  </span>\r\n\r\n  <!--  pattern -->\r\n  <span *ngIf=\"control.errors?.noSpace\">\r\n    {{ \"noSpace\" | translate }}\r\n  </span>\r\n\r\n  <!--  at Least One Character -->\r\n  <span *ngIf=\"control.errors?.atLeastOneCharacter\">\r\n    {{ \"atLeastOneCharacter\" | translate }}\r\n  </span>\r\n\r\n  <!-- ////////////////////// ngx-custom-validators ////////////////////// -->\r\n  <span *ngIf=\"control.errors?.rangeLength\">\r\n    {{ \"rangeLengthMsg\" | translate }}\r\n    {{ control.errors.rangeLength.value[0] }} {{ \"to\" | translate | lowercase }}\r\n    {{ control.errors.rangeLength.value[1] }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.gt\">\r\n    {{ \"greaterThanMsg\" | translate }} {{ control.errors.gt.value }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.gte\">\r\n    {{ \"greaterThanEqualMsg\" | translate }} {{ control.errors.gte.value }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.lt\">\r\n    {{ \"lessThanMsg\" | translate }} {{ control.errors.lt.value }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.lte\">\r\n    {{ \"lessThanEqualMsg\" | translate }} {{ control.errors.lte.value }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.range\">\r\n    {{ \"rangeNumberMsg\" | translate }}\r\n    {{ control.errors.range.value[0] }} {{ \"to\" | translate | lowercase }}\r\n    {{ control.errors.range.value[1] }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.digits\">\r\n    {{ \"digitsMsg\" | translate }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.number\">\r\n    {{ \"numberMsg\" | translate }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.url\">\r\n    {{ \"urlMsg\" | translate }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.date || control.errors?.dateISO\">\r\n    {{ \"dateMsg\" | translate }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.minDate\">\r\n    {{ \"minDateMsg\" | translate }}\r\n    {{ control.errors.minDate.value | date : \"mediumDate\" }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.maxDate\">\r\n    {{ \"maxDateMsg\" | translate }}\r\n    {{ control.errors.maxDate.value | date : \"mediumDate\" }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.creditCard\">\r\n    {{ \"creditCardMsg\" | translate }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.json\">\r\n    {{ \"jsonMsg\" | translate }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.base64\">\r\n    {{ \"base64Msg\" | translate }}\r\n  </span>\r\n\r\n  <!-- accept 3, 4, 5, all -->\r\n  <!-- <span *ngIf=\"control.errors?.uuid\">\r\n    {{ \"uuidMsg\" | translate }}\r\n  </span> -->\r\n\r\n  <!-- equal a value -->\r\n  <span *ngIf=\"control.errors?.equal\">\r\n    {{ \"equalMsg\" | translate }} {{ control.errors.equal.value }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.notEqual\">\r\n    {{ \"notEqualMsg\" | translate }} {{ control.errors.notEqual.value }}\r\n  </span>\r\n\r\n  <!-- equal another control value -->\r\n  <span *ngIf=\"control.errors?.equalTo\">\r\n    {{ \"equalToMsg\" | translate }}\r\n    {{ getControlName(\"equalTo\") | translate }}\r\n  </span>\r\n\r\n  <span *ngIf=\"control.errors?.notEqualTo\">\r\n    {{ \"notEqualToMsg\" | translate }}\r\n    {{ getControlName(\"notEqualTo\") | translate }}\r\n  </span>\r\n\r\n  <!-- compare the value with the value of a property on the parent object -->\r\n  <!-- <span *ngIf=\"control.errors?.hasProperty\">\r\n    {{ \"hasPropertyMsg\" | translate }}\r\n    {{ control.errors.hasProperty.value }}\r\n  </span> -->\r\n\r\n  <!-- use in dropdown to determine min no. of items must select -->\r\n  <span *ngIf=\"control.errors?.arrayLength\">\r\n    {{ \"arrayLengthMsg\" | translate }}\r\n    {{ control.errors.arrayLength.minLength }} {{ \"items\" | translate }}\r\n  </span>\r\n\r\n\r\n  <!--  START: customs-->\r\n    <span *ngIf=\"control.errors?.orgDateMustBigStatus\">\r\n    {{ \"orgDateMustBigStatus\" | translate }}\r\n   </span>\r\n\r\n  <span *ngIf=\"control.errors?.jobDateMustBigOrg\">\r\n    {{ \"jobDateMustBigOrg\" | translate }}\r\n   </span>\r\n\r\n</span>\r\n\r\n<span class=\"mx-1 float-right\">\r\n<ng-content select=\".after\"></ng-content>\r\n</span>\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"app-input\",\r\n  templateUrl: \"./input.component.html\",\r\n  styleUrls: [\"./input.component.scss\"],\r\n})\r\nexport class InputComponent implements OnChanges {\r\n  @Input() control: FormControl;\r\n  @Input() label: string;\r\n  @Input() submitted?: boolean = false;\r\n  @Input() type?: string = \"text\";\r\n  @Input() placeholder?: string = \"\";\r\n  @Input() disabled?: boolean = false;\r\n  @Input() readonly?: boolean = false;\r\n  @Input() appearance?: string = Constants.defaultInputAppearance;\r\n  @Input() class?: string;\r\n  @Input() id?: string;\r\n  @Input() step?: number = 1;\r\n  @Input() isDecimalNumber?: boolean = false;\r\n  @Input() autocomplete?: string;\r\n  @Input() matAutocomplete?: any = null;\r\n  @Output() keyUp? = new EventEmitter<any>();\r\n  @Output() keyDown? = new EventEmitter<any>();\r\n  @Output() keyPress? = new EventEmitter<any>();\r\n  @Output() keyEnter? = new EventEmitter<any>();\r\n  @Output() Change? = new EventEmitter<any>();\r\n  @Output() Blur? = new EventEmitter<any>();\r\n  isFloatLabel: boolean = Constants.defaultFloatLabel;\r\n\r\n  constructor(\r\n    public languageService: LanguageService) { }\r\n\r\n  validators;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.disabled) {\r\n      this.control?.disable();\r\n    }\r\n    else if (!this.disabled) {\r\n      this.control?.enable();\r\n    }\r\n    //\telse this.control?.enable();\r\n\r\n    // if (this.control) this.validators = this.control?.validator({} as FormControl);\r\n    // console.log(this.control);\r\n    // console.log(this.control, this.validators);\r\n  }\r\n\r\n  onkeyup(value: any) {\r\n    this.keyUp.emit(value);\r\n  }\r\n\r\n\r\n  onkeydown(value: any) {\r\n    this.keyDown.emit(value);\r\n  }\r\n\r\n  onkeypress(value: any) {\r\n    this.keyPress.emit(value);\r\n  }\r\n\r\n  onkeyEnter(value: any) {\r\n    this.keyEnter.emit(value);\r\n  }\r\n\r\n  onChange(value: any) {\r\n    this.Change.emit(value);\r\n  }\r\n\r\n  onInput(value) {\r\n    this.onChange(value);\r\n    this.onkeyEnter(value);\r\n    this.onkeypress(value);\r\n    this.onkeydown(value);\r\n    this.onkeyup(value);\r\n    this.onkeyup(value);\r\n  }\r\n\r\n  onBlur(value: any) {\r\n    this.Blur.emit(value);\r\n  }\r\n}\r\n","<!-- material Design input -->\r\n<div [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n  <ng-container *ngIf=\"type != 'number'\">\r\n    <mat-label *ngIf=\"!isFloatLabel\">\r\n      {{ label | translate }}\r\n    </mat-label>\r\n    <mat-form-field [appearance]=\"appearance\" [class]=\"class\">\r\n      <mat-label *ngIf=\"isFloatLabel\">\r\n        {{ label | translate }}\r\n      </mat-label>\r\n      <input matInput\r\n             [step]=\"step\"\r\n             [type]=\"type\"\r\n             [formControl]=\"control\"\r\n             [readonly]=\"readonly\"\r\n             [autocomplete]=\"autocomplete\"\r\n             [matAutocomplete]=\"matAutocomplete\"\r\n             [matAutocompleteDisabled]=\"!matAutocomplete\"\r\n             [placeholder]=\"placeholder | translate\"\r\n             (keyup)=\"onkeyup($event?.target?.value)\"\r\n             (keydown)=\"onkeydown($event?.target?.value)\"\r\n             (keypress)=\"onkeypress($event?.target?.value)\"\r\n             (keyup.enter)=\"onkeyEnter($event?.target?.value)\"\r\n             (blur)=\"onBlur($event?.target?.value)\"\r\n             (change)=\"onChange($event?.target?.value)\"/>\r\n\r\n      <mat-hint class=\"full-width\">\r\n        <input-validation-msg [control]=\"control\" [submitted]=\"submitted\">\r\n\r\n          <ng-container class=\"before\">\r\n            <ng-content select=\".msg-before\"></ng-content>\r\n          </ng-container>\r\n\r\n          <ng-container class=\"after\">\r\n            <ng-content select=\".msg-after\"></ng-content>\r\n          </ng-container>\r\n\r\n        </input-validation-msg>\r\n      </mat-hint>\r\n    </mat-form-field>\r\n  </ng-container>\r\n\r\n  <span class=\"d-block inputNumber-box mt-1\" [class]=\"class\" *ngIf=\"type === 'number'\">\r\n      <span [class.p-float-label]=\"isFloatLabel\">\r\n        <label class=\"d-block\" *ngIf=\"!isFloatLabel\">{{ label | translate }}</label>\r\n        <p-inputNumber [step]=\"step\"\r\n                       [formControl]=\"control\"\r\n                       [autocomplete]=\"autocomplete\"\r\n                       [showButtons]=\"true\"\r\n                       value=\"null\"\r\n                       [minFractionDigits]=\"isDecimalNumber ? 1 : null\"\r\n                       [format]=\"isDecimalNumber ? true : false\"\r\n                       [placeholder]=\"placeholder | translate\"\r\n                       incrementButtonClass=\"incClass\"\r\n                       decrementButtonClass=\"decClass\"\r\n                       styleClass=\"w-100\"\r\n                       (onInput)=\"onInput(control.value)\"\r\n                       (keyup)=\"onkeyup($event?.target?.value)\"\r\n                       (keydown)=\"onkeydown($event?.target?.value)\"\r\n                       (keypress)=\"onkeypress($event?.target?.value)\"\r\n                       (keyup.enter)=\"onkeyEnter($event?.target?.value)\"\r\n                       (blur)=\"onBlur($event?.target?.value)\"\r\n                       (change)=\"onChange($event?.target?.value)\">\r\n        </p-inputNumber>\r\n        <label class=\"d-block\" *ngIf=\"isFloatLabel\">{{ label | translate }}</label>\r\n      </span>\r\n    <mat-hint class=\"full-width d-block\">\r\n      <input-validation-msg [control]=\"control\" [submitted]=\"submitted\"></input-validation-msg>\r\n    </mat-hint>\r\n  </span>\r\n</div>\r\n\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChild,\r\n  forwardRef,\r\n} from \"@angular/core\";\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\r\nimport {MatOption} from \"@angular/material/core\";\r\nimport {MatSelect} from \"@angular/material/select\";\r\nimport {Subject} from \"rxjs/Subject\";\r\nimport {take, takeUntil} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"mat-select-search\",\r\n  templateUrl: \"./mat-select-search.component.html\",\r\n  styleUrls: [\"./mat-select-search.component.scss\"],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MatSelectSearchComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatSelectSearchComponent\r\n  implements OnInit, OnDestroy, AfterViewInit, ControlValueAccessor {\r\n  /** Label of the search placeholder */\r\n  @Input() placeholderLabel = \"General.search\";\r\n\r\n  /** Label to be shown when no entries are found. Set to null if no message should be shown. */\r\n  @Input() noEntriesFoundLabel = \"Response.noDataFound\";\r\n\r\n  /** Reference to the search input field */\r\n  @ViewChild(\"searchSelectInput\", {read: ElementRef})\r\n  searchSelectInput: ElementRef;\r\n\r\n  /** Current search value */\r\n  get value(): string {\r\n    return this._value;\r\n  }\r\n\r\n  private _value: string;\r\n\r\n  onChange: Function = (_: any) => {\r\n  };\r\n  onTouched: Function = (_: any) => {\r\n  };\r\n\r\n  /** Reference to the MatSelect options */\r\n  public _options: QueryList<MatOption>;\r\n\r\n  /** Previously selected values when using <mat-select [multiple]=\"true\">*/\r\n  private previousSelectedValues: any[];\r\n\r\n  /** Whether the backdrop class has been set */\r\n  private overlayClassSet = false;\r\n\r\n  /** Event that emits when the current value changes */\r\n  private change = new EventEmitter<string>();\r\n\r\n  /** Subject that emits when the component has been destroyed. */\r\n  private _onDestroy = new Subject<void>();\r\n\r\n  constructor(\r\n    @Inject(MatSelect) public matSelect: MatSelect,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // set custom panel class\r\n    const panelClass = \"mat-select-search-panel\";\r\n    if (this.matSelect.panelClass) {\r\n      if (Array.isArray(this.matSelect.panelClass)) {\r\n        this.matSelect.panelClass.push(panelClass);\r\n      } else if (typeof this.matSelect.panelClass === \"string\") {\r\n        this.matSelect.panelClass = [this.matSelect.panelClass, panelClass];\r\n      } else if (typeof this.matSelect.panelClass === \"object\") {\r\n        this.matSelect.panelClass[panelClass] = true;\r\n      }\r\n    } else {\r\n      this.matSelect.panelClass = panelClass;\r\n    }\r\n\r\n    // when the select dropdown panel is opened or closed\r\n    this.matSelect.openedChange\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe((opened) => {\r\n        if (opened) {\r\n          // focus the search field when opening\r\n          this._focus();\r\n        } else {\r\n          // clear it when closing\r\n          this._reset();\r\n        }\r\n      });\r\n\r\n    // set the first item active after the options changed\r\n    this.matSelect.openedChange\r\n      .pipe(take(1))\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this._options = this.matSelect.options;\r\n        this._options.changes.pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n          const keyManager = this.matSelect._keyManager;\r\n          if (keyManager && this.matSelect.panelOpen) {\r\n            // avoid \"expression has been changed\" error\r\n            setTimeout(() => {\r\n              keyManager.setFirstItemActive();\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n    // detect changes when the input changes\r\n    this.change.pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n      this.changeDetectorRef.detectChanges();\r\n    });\r\n\r\n    this.initMultipleHandling();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setOverlayClass();\r\n  }\r\n\r\n  /**\r\n   * Handles the key down event with MatSelect.\r\n   * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\r\n   * @param {KeyboardEvent} event\r\n   * @private\r\n   */\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    if (event.keyCode === 32) {\r\n      // do not propagate spaces to MatSelect, as this would select the currently active option\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  writeValue(value: string) {\r\n    const valueChanged = value !== this._value;\r\n    if (valueChanged) {\r\n      this._value = value;\r\n      this.change.emit(value);\r\n    }\r\n  }\r\n\r\n  onInputChange(value) {\r\n    const valueChanged = value !== this._value;\r\n    if (valueChanged) {\r\n      this._value = value;\r\n      this.onChange(value);\r\n      this.change.emit(value);\r\n    }\r\n  }\r\n\r\n  onBlur(value: string) {\r\n    this.writeValue(value);\r\n    this.onTouched();\r\n  }\r\n\r\n  registerOnChange(fn: Function) {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Focuses the search input field\r\n   * @private\r\n   */\r\n  public _focus() {\r\n    if (!this.searchSelectInput) {\r\n      return;\r\n    }\r\n    // save and restore scrollTop of panel, since it will be reset by focus()\r\n    // note: this is hacky\r\n    const panel = this.matSelect.panel.nativeElement;\r\n    const scrollTop = panel.scrollTop;\r\n\r\n    // focus\r\n    this.searchSelectInput.nativeElement.focus();\r\n\r\n    panel.scrollTop = scrollTop;\r\n  }\r\n\r\n  /**\r\n   * Resets the current search value\r\n   * @param {boolean} focus whether to focus after resetting\r\n   * @private\r\n   */\r\n  public _reset(focus?: boolean) {\r\n    if (!this.searchSelectInput) {\r\n      return;\r\n    }\r\n    this.searchSelectInput.nativeElement.value = \"\";\r\n    this.onInputChange(\"\");\r\n    if (focus) {\r\n      this._focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the overlay class  to correct offsetY\r\n   * so that the selected option is at the position of the select box when opening\r\n   */\r\n  private setOverlayClass() {\r\n    if (this.overlayClassSet) {\r\n      return;\r\n    }\r\n    const overlayClass = \"cdk-overlay-pane-select-search\";\r\n\r\n    this.matSelect.openedChange\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe((opened: boolean) => {\r\n        if (opened) {\r\n          // note: this is hacky, but currently there is no better way to do this\r\n          let element: HTMLElement = this.searchSelectInput.nativeElement;\r\n          let overlayElement: HTMLElement;\r\n          while ((element = element.parentElement)) {\r\n            if (element.classList.contains(\"cdk-overlay-pane\")) {\r\n              overlayElement = element;\r\n              break;\r\n            }\r\n          }\r\n          if (overlayElement) {\r\n            overlayElement.classList.add(overlayClass);\r\n          }\r\n        }\r\n      });\r\n\r\n    this.overlayClassSet = true;\r\n  }\r\n\r\n  /**\r\n   * Initializes handling <mat-select [multiple]=\"true\">\r\n   * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\r\n   */\r\n  private initMultipleHandling() {\r\n    // if <mat-select [multiple]=\"true\">\r\n    // store previously selected values and restore them when they are deselected\r\n    // because the option is not available while we are currently filtering\r\n    this.matSelect.valueChange\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe((values) => {\r\n        if (this.matSelect.multiple) {\r\n          let restoreSelectedValues = false;\r\n          if (\r\n            this._value &&\r\n            this._value.length &&\r\n            this.previousSelectedValues &&\r\n            Array.isArray(this.previousSelectedValues)\r\n          ) {\r\n            if (!values || !Array.isArray(values)) {\r\n              values = [];\r\n            }\r\n            const optionValues = this.matSelect.options.map(\r\n              (option) => option.value\r\n            );\r\n            this.previousSelectedValues.forEach((previousValue) => {\r\n              if (\r\n                values.indexOf(previousValue) === -1 &&\r\n                optionValues.indexOf(previousValue) === -1\r\n              ) {\r\n                // if a value that was selected before is deselected and not found in the options, it was deselected\r\n                // due to the filtering, so we restore it.\r\n                values.push(previousValue);\r\n                restoreSelectedValues = true;\r\n              }\r\n            });\r\n          }\r\n\r\n          if (restoreSelectedValues) {\r\n            this.matSelect._onChange(values);\r\n          }\r\n\r\n          this.previousSelectedValues = values;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<input matInput class=\"mat-select-search-input mat-select-search-hidden\" />\r\n\r\n<div\r\n  class=\"mat-select-search-inner\"\r\n  [ngClass]=\"{ 'mat-select-search-inner-multiple': matSelect.multiple }\"\r\n>\r\n  <input\r\n    matInput\r\n    class=\"mat-select-search-input\"\r\n    #searchSelectInput\r\n    (keydown)=\"_handleKeydown($event)\"\r\n    (input)=\"onInputChange($event.target.value)\"\r\n    (blur)=\"onBlur($event.target.value)\"\r\n    [placeholder]=\"placeholderLabel | translate\"\r\n  />\r\n  <button\r\n    mat-button\r\n    *ngIf=\"value\"\r\n    mat-icon-button\r\n    aria-label=\"Clear\"\r\n    (click)=\"_reset(true)\"\r\n    class=\"mat-select-search-clear\"\r\n  >\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<div\r\n  *ngIf=\"noEntriesFoundLabel && value && _options?.length === 0\"\r\n  class=\"mat-select-search-no-entries-found\"\r\n>\r\n  {{ noEntriesFoundLabel | translate }}\r\n</div>\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-calendar\",\r\n  templateUrl: \"./calendar.component.html\",\r\n  styleUrls: [\"./calendar.component.scss\"],\r\n})\r\nexport class CalendarComponent {\r\n  @Input() control: FormControl;\r\n  @Input() label: string;\r\n  @Input() submitted: boolean = false;\r\n  @Input() view: string = \"date\"; // 'date' | 'month' | 'year'\r\n  @Input() dateFormat: string = \"dd/mm/yy\";\r\n  @Input() class: string;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n}\r\n","<div class=\"field\">\r\n  <span class=\"p-float-label\">\r\n    <p-calendar\r\n      inputId=\"calendar\"\r\n      [formControl]=\"control\"\r\n      [view]=\"view\"\r\n      [dateFormat]=\"dateFormat\"\r\n      [appendTo]=\"appendTo\"\r\n    ></p-calendar>\r\n    <label for=\"calendar\">{{ label | translate | uppercase }}</label>\r\n  </span>\r\n</div>\r\n\r\n<span class=\"error\">\r\n  <input-validation-msg\r\n    [control]=\"control\"\r\n    [submitted]=\"submitted\"\r\n    [isDate]=\"true\"\r\n  >\r\n  </input-validation-msg>\r\n</span>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MultiSelect } from \"primeng/multiselect\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"app-prime-dropdown\",\r\n  templateUrl: \"./dropdown-core.component.html\",\r\n  styleUrls: [\"./dropdown-core.component.scss\"],\r\n})\r\nexport class DropdownCoreComponent extends AppHelpers implements OnInit, OnChanges {\r\n  @Input() control: FormControl;\r\n  @Input() label: string;\r\n  @Input() List: Idropdown[] = null;\r\n  @Input() multi: boolean = false;\r\n  @Input() submitted: boolean = false;\r\n  @Input() filter: boolean = true;\r\n  @Input() readonly: boolean = false;\r\n  @Input() disable: boolean = false;\r\n  @Input() optionDisabled: string = null;\r\n  @Input() class: string;\r\n  @Input() appendTo: string | HTMLElement = \"body\";\r\n  @Input() viewName: string;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() createNewDialog = new EventEmitter<any>();\r\n  @Input() alloweCreateNew: boolean = false;\r\n  @ViewChild(\"multiSelectRef\") multiSelectRef!: MultiSelect;\r\n  isFloatLabel: boolean = Constants.defaultFloatLabel;\r\n\r\n  filterValue: string;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(public languageService: LanguageService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.control?.valueChanges.subscribe((id) => {\r\n      this.onChange(id);\r\n    });\r\n    this.alloweCreateNew = this.isViewAllowed(this.viewName);\r\n    // if (this.disable) this.control.disable();\r\n    // else this.control.enable();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // console.log(\"List\", this.List);\r\n    if (this.List?.length >= 0) this.isLoaded = true;\r\n    if (changes.List?.previousValue?.length == 0 && changes.List?.currentValue?.length != 0) {\r\n      setTimeout(() => {\r\n        this.control.markAsPristine();\r\n      }, 100);\r\n      // if list get its value after control\r\n      if (this.control.value > 0) this.onChange(this.control.value);\r\n    }\r\n    if (changes.List?.currentValue?.length > 0 && this.filterValue && this.multi) {\r\n      this.multiSelectRef.filterValue = '';\r\n      setTimeout(() => {\r\n        this.multiSelectRef.filterValue = this.filterValue;\r\n      }, 100);\r\n    }\r\n\r\n    if (changes.disable?.currentValue == true) this.control?.disable();\r\n    else if (changes.disable?.previousValue && changes.disable?.currentValue == false)\r\n      this.control?.enable();\r\n  }\r\n\r\n  override onModulesChanged() {\r\n    this.alloweCreateNew = this.isViewAllowed(this.viewName);\r\n  }\r\n\r\n  onChange(value: any) {\r\n    // console.log(\"value\", value);\r\n    let selectedObject: any[] = [];\r\n    if (value) {\r\n      if (value?.length > 1) selectedObject = this.List?.filter((ele) => value.includes(ele.id));\r\n      else selectedObject = this.List?.filter((ele) => ele?.id == value);\r\n    }\r\n\r\n    // console.log(selectedObject);\r\n    this.change.emit(selectedObject);\r\n  }\r\n\r\n  onCreateDialog(value: string) {\r\n    this.createNewDialog.emit(value);\r\n    this.multiSelectRef.hide(); // to hide create new button when dialog is opened\r\n  }\r\n\r\n  onFilter($event) {\r\n    this.filterValue = $event.filter;\r\n  }\r\n\r\n  isItemDisabled(id: any): boolean {\r\n    return this.List?.find((item) => item.id == id)?.isDisabled ?? false;\r\n  }\r\n}\r\n","<div class=\"dropdown-container pb-0 field\" [class]=\"class\">\r\n  <!-- ####### START: multi Select ###################### -->\r\n  <span [class.p-float-label]=\"isFloatLabel\" *ngIf=\"multi\">\r\n     <label *ngIf=\"!isFloatLabel\" for=\"multiselect\">{{ label | translate }}</label>\r\n\r\n    <p-multiSelect #multiSelectRef\r\n                   id=\"multiselect\"\r\n                   inputId=\"multiselect\"\r\n                   optionValue=\"id\"\r\n                   [options]=\"List\"\r\n                   [formControl]=\"control\"\r\n                   [placeholder]=\"label | translate\"\r\n                   [defaultLabel]=\"label | translate \"\r\n                   [optionLabel]=\"languageService.isArabic ? 'ar_Name' : 'en_Name'\"\r\n                   [filter]=\"filter\"\r\n                   [filterBy]=\"languageService.isArabic ? 'ar_Name' : 'en_Name'\"\r\n                   [showClear]=\"true\"\r\n                   display=\"chip\"\r\n                   [ngClass]=\"{ 'custom-rtl': languageService.isArabic }\"\r\n                   [appendTo]=\"appendTo\"\r\n                   [readonly]=\"readonly\"\r\n                   [optionDisabled]=\"optionDisabled\"\r\n                   (onFilter)=\"onFilter($event)\"\r\n                   [dropdownIcon]=\"!isLoaded ? 'pi pi-spinner pi-spin' : 'pi pi-chevron-down'\">\r\n\r\n      <!-- header -->\r\n      <ng-template pTemplate=\"header\">\r\n        <div class=\"checkbox-all-text\">{{ 'all' | translate }}</div>\r\n      </ng-template>\r\n\r\n      <!-- selected Items: Customize the selected badges (hide clear icon if it's disabled)  -->\r\n       <ng-template let-value pTemplate=\"selectedItems\">\r\n        <ng-container *ngIf=\"List?.length > 0 && value?.length > 0\">\r\n          <div\r\n            *ngFor=\"let item of value; let i = index\"\r\n            class=\"p-multiselect-token\"\r\n            [class.disabledItem]=\"isItemDisabled(item)\">\r\n            <span class=\"p-multiselect-token-label\">\r\n              {{ multiSelectRef?.findLabelByValue(item) }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"!isItemDisabled(item)\"\r\n              class=\"p-multiselect-token-icon pi pi-times-circle\"\r\n              (click)=\"multiSelectRef?.removeChip(item, $event)\">\r\n            </span>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!value || value.length === 0\">\r\n          {{ multiSelectRef?.defaultLabel }}\r\n        </ng-container>\r\n      </ng-template>\r\n\r\n      <!-- empty filter: Create new Item btn (show only if no data in filter) -->\r\n       <ng-template pTemplate=\"emptyfilter\" let-options=\"options\">\r\n        <span *ngIf=\"!alloweCreateNew\">\r\n          {{ \"noResultsFound\" | translate }} \"{{ filterValue }}\"\r\n        </span>\r\n        <button\r\n          *ngIf=\"alloweCreateNew\"\r\n          class=\"createNew font-size-13 border-top border-bottom\"\r\n          (click)=\"onCreateDialog(filterValue)\">\r\n          <i class=\"fas fa-plus mr-1 ml-1\"></i>\r\n          {{ \"General.create\" | translate }} {{ label | translate }}\r\n          {{ filterValue }}\r\n        </button>\r\n      </ng-template>\r\n    </p-multiSelect>\r\n\r\n    <label *ngIf=\"isFloatLabel\" for=\"multiselect\">{{ label | translate }}</label>\r\n   </span>\r\n\r\n  <!-- #######  START: Single Select ###################### -->\r\n  <span [class.p-float-label]=\"isFloatLabel\" *ngIf=\"!multi\">\r\n      <label *ngIf=\"!isFloatLabel\" for=\"dropdown\">{{ label | translate }}</label>\r\n    <p-dropdown #multiSelectRef\r\n                id=\"dropdown\"\r\n                inputId=\"dropdown\"\r\n                optionValue=\"id\"\r\n                [autoDisplayFirst]=\"false\"\r\n                [options]=\"List\"\r\n                [formControl]=\"control\"\r\n                [placeholder]=\"label | translate\"\r\n                [optionLabel]=\"languageService.isArabic ? 'ar_Name' : 'en_Name'\"\r\n                [filter]=\"filter\"\r\n                [filterBy]=\"languageService.isArabic ? 'ar_Name' : 'en_Name'\"\r\n                [showClear]=\"true\"\r\n                [ngClass]=\"{ 'custom-rtl': languageService.isArabic }\"\r\n                [appendTo]=\"appendTo\"\r\n                [readonly]=\"readonly\"\r\n                [optionDisabled]=\"optionDisabled\"\r\n                (onFilter)=\"onFilter($event)\"\r\n                [dropdownIcon]=\"!isLoaded ? 'pi pi-spinner pi-spin' : 'pi pi-chevron-down'\">\r\n      <!--  Create new Item btn (show only if no data in filter) -->\r\n      <ng-template pTemplate=\"emptyfilter\" let-options=\"options\">\r\n        <span *ngIf=\"!alloweCreateNew\">\r\n          {{ \"noResultsFound\" | translate }} \"{{ filterValue }}\"\r\n        </span>\r\n        <button\r\n          *ngIf=\"alloweCreateNew\"\r\n          class=\"createNew font-size-13 border-top border-bottom\"\r\n          (click)=\"onCreateDialog(filterValue)\">\r\n          <i class=\"fas fa-plus mr-1 ml-1\"></i>\r\n          {{ \"General.create\" | translate }} {{ label | translate }}\r\n          {{ filterValue }}\r\n        </button>\r\n      </ng-template>\r\n    </p-dropdown>\r\n\r\n     <label *ngIf=\"isFloatLabel\" for=\"dropdown\">{{ label | translate }}</label>\r\n  </span>\r\n</div>\r\n\r\n<!-- <app-input-skeleton *ngIf=\"!isLoaded\" [label]=\"label\"></app-input-skeleton> -->\r\n<!-- *ngIf=\"control.errors\" -->\r\n<span class=\"error\">\r\n  <input-validation-msg [control]=\"control\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\">\r\n  </input-validation-msg>\r\n</span>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { FileService } from \"app/shared/services/file.service\";\r\n\r\n@Component({\r\n  selector: \"primeng-file-upload-card\",\r\n  templateUrl: \"./file-upload-card.component.html\",\r\n  styleUrls: [\"./file-upload-card.component.scss\"],\r\n})\r\nexport class FileUploadCardComponent {\r\n  @Input() file: any; // File || IFileData\r\n  @Input() isHexImg: boolean = false;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isUploaded: boolean = false;\r\n  @Input() iconPath: string;\r\n  @Input() isFileObject: boolean = true;\r\n  @Output() removeFile = new EventEmitter();\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    public fileService: FileService\r\n  ) {}\r\n\r\n  isImage(type: string): boolean {\r\n    return type.includes(\"image\");\r\n  }\r\n\r\n  urlFromFile(file: File) {\r\n    let objectURL = URL.createObjectURL(file);\r\n    return this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n  }\r\n\r\n  onRemoveFile(file?: File) {\r\n    this.removeFile.emit(file);\r\n  }\r\n}\r\n","<section class=\"file-preview-container\">\r\n  <p-image\r\n    *ngIf=\"isImage(file.type); else noImage\"\r\n    [src]=\"\r\n      isFileObject\r\n        ? urlFromFile(file)\r\n        : isHexImg\r\n        ? fileService.previewHexImage(file)\r\n        : fileService.preview(file.path)\r\n    \"\r\n    alt=\"image\"\r\n    class=\"img-view\"\r\n    preview=\"true\"\r\n  >\r\n  </p-image>\r\n\r\n  <ng-template #noImage>\r\n    <div class=\"file-view\">\r\n      <img [src]=\"fileService.getFileIcon(file?.name)\" alt=\"file\" />\r\n    </div>\r\n  </ng-template>\r\n</section>\r\n\r\n<section\r\n  class=\"main-data-container\"\r\n  [style]=\"{\r\n    '--action-width':\r\n      !isImage(file.type) && !isFileObject\r\n        ? '67px'\r\n        : isUploaded || isEdit || !isFileObject\r\n        ? '54px'\r\n        : '27px'\r\n  }\"\r\n>\r\n  <div class=\"row m-auto\">\r\n    <div class=\"data\">\r\n      <p class=\"name\" [matTooltip]=\"file.name\">{{ file.name }}</p>\r\n      <p class=\"extra\" *ngIf=\"file.extra\" [matTooltip]=\"file.extra\">\r\n        {{ file.extra }}\r\n      </p>\r\n      <p class=\"size\">{{ file.size | fileSize }}</p>\r\n    </div>\r\n\r\n    <div class=\"icons\">\r\n      <a\r\n        class=\"darkBlue\"\r\n        *ngIf=\"!isImage(file.type) && !isFileObject\"\r\n        (click)=\"fileService.download(file.path)\"\r\n        matTooltip=\"{{ 'General.preview' | translate }}\"\r\n      >\r\n        <i class=\"far fa-eye\"></i>\r\n      </a>\r\n      <a\r\n        class=\"success\"\r\n        matTooltip=\"{{ 'General.uploaded' | translate }}\"\r\n        *ngIf=\"isUploaded || isEdit || !isFileObject\"\r\n      >\r\n        <i class=\"pi pi-check ml-2 mr-0\"></i>\r\n      </a>\r\n      <a\r\n        [ngClass]=\"[\r\n          isUploaded || isEdit || !isFileObject ? 'danger' : 'secondary'\r\n        ]\"\r\n        (click)=\"onRemoveFile(file)\"\r\n        matTooltip=\"{{ 'Delete' | translate | lowercase }}\"\r\n      >\r\n        <i class=\"pi pi-trash ml-2 mr-0\"></i>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  inject,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { Params } from \"@angular/router\";\r\nimport { IFileBinary, IFileData } from \"app/shared/interfaces/files\";\r\nimport { SvgManager } from \"app/shared/resources/assets-manager\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { environment } from \"environments/environment\";\r\nimport { FileUpload } from \"primeng/fileupload\";\r\n\r\nexport interface UploadEvent {\r\n  originalEvent: Event;\r\n  files: File[];\r\n}\r\n\r\n@Component({\r\n  selector: \"primeng-file-upload\",\r\n  templateUrl: \"./file-upload.component.html\",\r\n  styleUrls: [\"./file-upload.component.scss\"],\r\n})\r\nexport class FileUploadComponent extends BaseDropdown implements OnChanges {\r\n  @ViewChild(\"fileUpload\", {static: false}) fileUpload: FileUpload;\r\n  @Input() control: FormControl;\r\n  @Input() multiple: boolean = true;\r\n  @Input() accept: string = \"\";\r\n  @Input() label: string = \"\";\r\n  @Input() submitted: boolean = false;\r\n  @Input() isHexImg: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n  @Input() removeFiles: boolean = false;\r\n  @Input() isEdit: boolean = false;\r\n  @Input() isDragDrop: boolean = false;\r\n  @Input() existingFiles: IFileData[] = [];\r\n  @Output() onselect = new EventEmitter<any>();\r\n  @Output() onremove = new EventEmitter<any>();\r\n  @Output() ondelete = new EventEmitter<any>();\r\n  // use in direct upload\r\n  @Input() url: string = null;\r\n  @Input() fileNameAtBackend: string = \"files\";\r\n  @Input() isFormValid: boolean = true;\r\n  @Input() params: any;\r\n  @Output() onsubmit = new EventEmitter<boolean>();\r\n  @Output() afterupload = new EventEmitter<boolean>();\r\n\r\n  baseUrl = `${environment.baseUrl}/api/`;\r\n\r\n  languageService = inject(LanguageService);\r\n  messagesService = inject(MessagesService);\r\n  assets: SvgManager = new SvgManager();\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // console.log(changes);\r\n\r\n    if (changes.removeFiles?.currentValue || changes.isEdit) {\r\n      this.fileUpload?.clear();\r\n    }\r\n\r\n    if (\r\n      changes.isEdit?.currentValue &&\r\n      !this.multiple &&\r\n      this.control.value &&\r\n      this.isHexImg\r\n    ) {\r\n      this.fileUpload.files = [\r\n        this.fileService.createFileFromHex(this.control.value, \"\", \"image/*\"),\r\n      ];\r\n    }\r\n  }\r\n\r\n  async uploadHexImage(files) {\r\n    this.isEdit = false;\r\n    await this.fileService.uploadHexImage(files).then((file: IFileBinary) => {\r\n      setTimeout(() => {\r\n        this.control?.setValue(file.hexString);\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  onDeleteFile(file?: any): void {\r\n    let msg = this.languageService.translate(\"attachment\").toLocaleLowerCase();\r\n    this.dialogsService.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.removeFileFromList(file);\r\n      }\r\n    });\r\n  }\r\n\r\n  removeFileFromList(file?: IFileData) {\r\n    this.ondelete.emit(file);\r\n    // console.log(file);\r\n  }\r\n\r\n  removeFileNotUploaded(file?: File) {\r\n    if (!this.multiple) {\r\n      this.control?.setValue(null);\r\n      this.fileUpload.clear();\r\n      // console.log(\"not multiple\");\r\n    }\r\n    else {\r\n      let i = this.fileUpload.files.findIndex(\r\n        (ele) => ele.name == file.name && ele.size == file.size\r\n      );\r\n      this.fileUpload.files.splice(i, 1);\r\n      this.select(this.fileUpload.files, true);\r\n    }\r\n  }\r\n\r\n  select(files, afterRemove: boolean = false) {\r\n    if(!this.isHexImg) {\r\n      this.isEdit = false;\r\n      for (let i = 0; i < files.length; i++) {\r\n        delete files[i].objectURL;\r\n      }\r\n      this.control?.setValue(this.multiple ? files : files[0]);\r\n      if (!afterRemove) this.onselect.emit(files);\r\n      else this.onremove.emit(files);\r\n    }\r\n  }\r\n\r\n  // // files with form submit\r\n  // public uploadFiles = (files) => {\r\n  //   this.isEdit = false;\r\n  //   this.control.setValue(this.fileService.upload(files));\r\n  // };\r\n\r\n  // async uploadBase64(files) {\r\n  //   this.isEdit = false;\r\n  //   await this.fileService.uploadBase64(files).then((file: IFileBase64) => {\r\n  //     setTimeout(() => {\r\n  //       this.control?.setValue(file);\r\n  //     }, 100);\r\n  //   });\r\n  // }\r\n\r\n  beforeUpload() {\r\n    this.onsubmit.emit(true);\r\n  }\r\n\r\n  afterUpload(event) {\r\n    this.messagesService.success(\r\n      event?.originalEvent?.body?.message?.messageTypeName\r\n    );\r\n    this.afterupload.emit(true);\r\n  }\r\n\r\n  getUrl(): string {\r\n    if (this.isFormValid) {\r\n      const params: Params = {\r\n        ...this.businessCompanyParams,\r\n        ...this.params,\r\n      };\r\n\r\n      return (\r\n        this.baseUrl + this.url + \"?\" + new URLSearchParams(params).toString()\r\n      );\r\n    }\r\n    else return null;\r\n  }\r\n\r\n  chooseFile() {\r\n    this.fileUpload.choose();\r\n  }\r\n}\r\n","<div class=\"flex justify-content-center\">\r\n  <!-- [formControl]=\"control\" -->\r\n  <!-- [files]=\"multiple ? existingFiles : []\" -->\r\n  <p-fileUpload\r\n    *ngIf=\"url\"\r\n    method=\"post\"\r\n    #fileUpload\r\n    [multiple]=\"multiple\"\r\n    [url]=\"getUrl()\"\r\n    [name]=\"fileNameAtBackend\"\r\n    [accept]=\"accept\"\r\n    maxFileSize=\"10000000\"\r\n    chooseLabel=\"{{\r\n      ('General.choose' | translate) + ' ' + (label | translate)\r\n    }}\"\r\n    [uploadLabel]=\"'General.upload' | translate\"\r\n    [cancelLabel]=\"'General.cancel' | translate\"\r\n    chooseStyleClass=\"btn-darkBlue\"\r\n    uploadStyleClass=\"btn-darkBlue\"\r\n    [class.empty]=\"\r\n      fileUpload.files.length == 0 && existingFiles.length == 0 && !isDragDrop\r\n    \"\r\n    [class.drag-drop-container]=\"isDragDrop\"\r\n    [showCancelButton]=\"false\"\r\n    (onSelect)=\"select($event.files)\"\r\n    (onBeforeUpload)=\"beforeUpload()\"\r\n    (onUpload)=\"afterUpload($event)\"\r\n    [disabled]=\"disabled\"\r\n  >\r\n    <!-- primeng - display file or files if new choosen -->\r\n    <ng-template let-file pTemplate=\"file\">\r\n      <div class=\"p-fileupload-row\" [class.single]=\"!multiple\">\r\n        <primeng-file-upload-card\r\n          [file]=\"file\"\r\n          [isHexImg]=\"isHexImg\"\r\n          [isEdit]=\"isEdit\"\r\n          [isUploaded]=\"false\"\r\n          [iconPath]=\"assets.pdf\"\r\n          [isFileObject]=\"true\"\r\n          (removeFile)=\"removeFileNotUploaded($event)\"\r\n        ></primeng-file-upload-card>\r\n      </div>\r\n    </ng-template>\r\n    <!-- end primeng -->\r\n\r\n    <ng-template pTemplate=\"content\">\r\n      <!-- show for all -->\r\n      <div class=\"files-title\" *ngIf=\"!isDragDrop\">\r\n        {{ \"attachments\" | translate | titlecase }}\r\n      </div>\r\n\r\n      <div class=\"drag-drop\" *ngIf=\"isDragDrop\">\r\n        <!-- <i class=\"pi pi-cloud-upload\"></i> -->\r\n        <i class=\"fas fa-cloud-upload-alt\"></i>\r\n        <div>\r\n          <span>\r\n            {{ \"dragAndDrop\" | translate }}\r\n          </span>\r\n          <span (click)=\"chooseFile()\">\r\n            {{ \"browse\" | translate | titlecase }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- existing files (uploaded files) -->\r\n      <div *ngIf=\"existingFiles.length > 0\">\r\n        <div class=\"p-fileupload-row\" *ngFor=\"let file of existingFiles\">\r\n          <primeng-file-upload-card\r\n            [file]=\"file\"\r\n            [isHexImg]=\"isHexImg\"\r\n            [isEdit]=\"isEdit\"\r\n            [isUploaded]=\"true\"\r\n            [iconPath]=\"assets.pdf\"\r\n            [isFileObject]=\"false\"\r\n            (removeFile)=\"onDeleteFile($event)\"\r\n          ></primeng-file-upload-card>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </p-fileUpload>\r\n\r\n  <!-- [formControl]=\"control\" -->\r\n  <!-- [files]=\"multiple ? existingFiles : []\" -->\r\n  <p-fileUpload\r\n    #fileUpload\r\n    *ngIf=\"!url\"\r\n    [customUpload]=\"true\"\r\n    [auto]=\"true\"\r\n    (uploadHandler)=\"\r\n      isHexImg ? uploadHexImage($event.files) : select($event.files)\r\n    \"\r\n    [multiple]=\"multiple\"\r\n    [accept]=\"accept\"\r\n    maxFileSize=\"10000000\"\r\n    (onRemove)=\"onDeleteFile()\"\r\n    chooseLabel=\"{{\r\n      ('General.upload' | translate) + ' ' + (label | translate)\r\n    }}\"\r\n    chooseIcon=\"pi pi-upload\"\r\n    chooseStyleClass=\"btn-darkBlue\"\r\n    [class.empty]=\"\r\n      fileUpload.files.length == 0 &&\r\n      existingFiles.length == 0 &&\r\n      !control.value &&\r\n      !isDragDrop\r\n    \"\r\n    [class.drag-drop-container]=\"isDragDrop\"\r\n    [class.no-url-file-uploader]=\"isDragDrop\"\r\n    (onSelect)=\"select($event.files)\"\r\n    [disabled]=\"disabled\"\r\n  >\r\n    <!-- primeng - display file or files if new choosen -->\r\n    <ng-template let-file pTemplate=\"file\">\r\n      <div class=\"p-fileupload-row\" [class.single]=\"!multiple\">\r\n        <primeng-file-upload-card\r\n          [file]=\"file\"\r\n          [isHexImg]=\"isHexImg\"\r\n          [isEdit]=\"isEdit\"\r\n          [isUploaded]=\"false\"\r\n          [iconPath]=\"assets.pdf\"\r\n          [isFileObject]=\"true\"\r\n          (removeFile)=\"removeFileNotUploaded($event)\"\r\n        ></primeng-file-upload-card>\r\n      </div>\r\n    </ng-template>\r\n    <!-- end primeng -->\r\n\r\n    <ng-template pTemplate=\"content\">\r\n      <!-- show for all -->\r\n      <div class=\"files-title\" *ngIf=\"!isDragDrop\">\r\n        {{ \"attachments\" | translate | titlecase }}\r\n      </div>\r\n\r\n      <div class=\"drag-drop\" *ngIf=\"isDragDrop\">\r\n        <!-- <i class=\"pi pi-cloud-upload\"></i> -->\r\n        <i class=\"fas fa-cloud-upload-alt\"></i>\r\n        <div>\r\n          <span>\r\n            {{ \"dragAndDrop\" | translate }}\r\n          </span>\r\n          <span (click)=\"chooseFile()\">\r\n            {{ \"browse\" | translate | titlecase }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- existing files (uploaded files) -->\r\n      <div *ngIf=\"existingFiles.length > 0\">\r\n        <div class=\"p-fileupload-row\" *ngFor=\"let file of existingFiles\">\r\n          <primeng-file-upload-card\r\n            [file]=\"file\"\r\n            [isHexImg]=\"isHexImg\"\r\n            [isEdit]=\"isEdit\"\r\n            [isUploaded]=\"true\"\r\n            [iconPath]=\"assets.pdf\"\r\n            [isFileObject]=\"false\"\r\n            (removeFile)=\"onDeleteFile($event)\"\r\n          ></primeng-file-upload-card>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- in edit - display existing image if exist - not hex image - file with path -->\r\n\r\n      <!-- single file -->\r\n      <ng-container *ngIf=\"!multiple && isEdit && control?.value && !isHexImg\">\r\n        <div class=\"p-fileupload-row\" [class.single]=\"!multiple\">\r\n          <primeng-file-upload-card\r\n            [file]=\"control?.value\"\r\n            [isHexImg]=\"isHexImg\"\r\n            [isEdit]=\"isEdit\"\r\n            [isUploaded]=\"false\"\r\n            [iconPath]=\"assets.pdf\"\r\n            [isFileObject]=\"false\"\r\n            (removeFile)=\"onDeleteFile($event)\"\r\n          ></primeng-file-upload-card>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <!-- multiple files -->\r\n      <ng-container *ngIf=\"multiple && isEdit && control?.value && !isHexImg\">\r\n        <div class=\"p-fileupload-row\" *ngFor=\"let file of control.value\">\r\n          <primeng-file-upload-card\r\n            [file]=\"file\"\r\n            [isHexImg]=\"isHexImg\"\r\n            [isEdit]=\"isEdit\"\r\n            [isUploaded]=\"false\"\r\n            [iconPath]=\"assets.pdf\"\r\n            [isFileObject]=\"false\"\r\n            (removeFile)=\"onDeleteFile($event)\"\r\n          ></primeng-file-upload-card>\r\n        </div>\r\n      </ng-container>\r\n      <!-- end edit -->\r\n    </ng-template>\r\n  </p-fileUpload>\r\n</div>\r\n\r\n<span class=\"error\">\r\n  <input-validation-msg\r\n    [control]=\"control\"\r\n    [submitted]=\"submitted\"\r\n    [isFile]=\"true\"\r\n  >\r\n  </input-validation-msg>\r\n</span>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MatRadioChange } from \"@angular/material/radio\";\r\n\r\n@Component({\r\n  selector: \"app-radio-button\",\r\n  templateUrl: \"./radio-button.component.html\",\r\n  styleUrls: [\"./radio-button.component.scss\"],\r\n})\r\nexport class RadioButtonComponent {\r\n  @Input() control?: FormControl | AbortController;\r\n  @Input() label?: string;\r\n  @Input() radioList: RadioButtonModel[];\r\n  @Input() submitted: boolean = false;\r\n  @Input() class: string;\r\n  @Input() titleClass: string = \"col-4\";\r\n  @Output() change? = new EventEmitter<any>();\r\n\r\n  onChange(event: MatRadioChange) {\r\n    this.change.emit(event.value);\r\n  }\r\n}\r\n\r\nexport interface RadioButtonModel {\r\n  label: string;\r\n  value: any;\r\n  cssClass?: string;\r\n  disabled?: boolean;\r\n}\r\n","<div class=\"row\" [class]=\"class\">\r\n  <mat-label *ngIf=\"label\"\r\n             class=\" radio-group-label d-flex align-items-center\"\r\n             [class]=\"titleClass\">\r\n    {{ label | translate }}\r\n  </mat-label>\r\n\r\n  <div class=\"radio-group-div col\"\r\n       [class.mtop-10]=\"label\">\r\n    <!--    [ngClass]=\"label ? 'col-8' : 'col-12'\"-->\r\n\r\n    <mat-radio-group [formControl]=\"control\" class=\"row\">\r\n      <div *ngFor=\"let radio of radioList\"\r\n           [class]=\"radio.cssClass ?? 'col-md-6 col-12'\">\r\n\r\n        <mat-radio-button [value]=\"radio.value\" (change)=\"onChange($event)\" [disabled]=\"radio.disabled\">\r\n          <div class=\"radio-label\">{{ radio.label | translate }}</div>\r\n        </mat-radio-button>\r\n\r\n      </div>\r\n    </mat-radio-group>\r\n  </div>\r\n\r\n</div>\r\n<mat-hint class=\"error mb-2 d-block\">\r\n  <input-validation-msg [control]=\"control\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\">\r\n    <ng-container class=\"before\">\r\n      <ng-content select=\".msg-before\"></ng-content>\r\n    </ng-container>\r\n\r\n    <ng-container class=\"after\">\r\n      <ng-content select=\".msg-after\"></ng-content>\r\n    </ng-container>\r\n\r\n  </input-validation-msg>\r\n</mat-hint>\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"app-select\",\r\n  templateUrl: \"./select.component.html\",\r\n  styleUrls: [\"./select.component.scss\"],\r\n})\r\nexport class SelectComponent {\r\n  @Input() control: FormControl;\r\n  @Input() label: string;\r\n  @Input() submitted: boolean;\r\n  @Input() disabled: boolean = false;\r\n  @Input() multiple: boolean = false;\r\n  @Input() reload: boolean = false;\r\n  @Input() appearance: string = Constants.defaultInputAppearance;\r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","<mat-form-field [appearance]=\"appearance\">\r\n  <mat-label>{{ label | translate }}</mat-label>\r\n  <mat-select [formControl]=\"control\" [multiple]=\"multiple\">\r\n    <mat-option [value]=\"null\" *ngIf=\"!multiple\">\r\n      {{ \"General.choose\" | translate }}\r\n    </mat-option>\r\n    <ng-content></ng-content>\r\n  </mat-select>\r\n  <mat-hint>\r\n    <input-validation-msg\r\n      [control]=\"control\"\r\n      [submitted]=\"submitted\"\r\n      [isSelect]=\"true\"\r\n    >\r\n    </input-validation-msg>\r\n  </mat-hint>\r\n</mat-form-field>\r\n\r\n<select [formControl]=\"control\" class=\"form-control def-select\">\r\n  <ng-content></ng-content>\r\n</select>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ThemePalette } from \"@angular/material/core\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"slide-toggle\",\r\n  templateUrl: \"./slide-toggle.component.html\",\r\n  styleUrls: [\"./slide-toggle.component.scss\"],\r\n})\r\nexport class SlideToggleComponent {\r\n  @Input() control: FormControl;\r\n  // @Input() submitted?: boolean = false;\r\n  @Input() label: string;\r\n  @Input() labelPosition?: string = \"after\"; // 'before' | 'after'\r\n  @Input() disabled?: boolean = false;\r\n  @Input() submitted?: boolean = false;\r\n  @Input() class?: string;\r\n  @Input() id?: string;\r\n  @Input() color?: ThemePalette = Constants.defaultSliderColor;\r\n  @Output() onChange? = new EventEmitter<boolean>();\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.disabled?.currentValue) this.control?.disable();\r\n    else if (!changes.disabled?.currentValue) this.control?.enable();\r\n  }\r\n\r\n  change(value: boolean) {\r\n    this.onChange.emit(value);\r\n  }\r\n}\r\n","<mat-slide-toggle\r\n  [formControl]=\"control\"\r\n  [color]=\"color\"\r\n  [class]=\"class\"\r\n  [id]=\"id\"\r\n  [labelPosition]=\"labelPosition\"\r\n  (change)=\"change($event.checked)\"\r\n>\r\n  {{ label | translate }}\r\n</mat-slide-toggle>\r\n<input-validation-msg [control]=\"control\" [submitted]=\"submitted\">\r\n\r\n  <ng-container class=\"before\">\r\n    <ng-content select=\".msg-before\"></ng-content>\r\n  </ng-container>\r\n\r\n  <ng-container class=\"after\">\r\n    <ng-content select=\".msg-after\"></ng-content>\r\n  </ng-container>\r\n\r\n</input-validation-msg>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input, OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ThemePalette } from \"@angular/material/core\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"slider\",\r\n  templateUrl: \"./slider.component.html\",\r\n  styleUrls: [\"./slider.component.scss\"],\r\n})\r\nexport class SliderComponent implements OnChanges {\r\n  @Input() control: FormControl;\r\n  @Input() submitted?: boolean = false;\r\n  @Input() label: string;\r\n  @Input() disabled?: boolean = false;\r\n  @Input() class?: string;\r\n  @Input() boxClass?: string;\r\n  @Input() id?: string;\r\n  @Input() color?: ThemePalette = Constants.defaultSliderColor;\r\n  @Input() min?: number = 0;\r\n  @Input() max?: number = 100;\r\n  @Input() step?: number = 1;\r\n  // show label with value when change slider\r\n  @Input() thumbLabel?: boolean = true;\r\n  // function to format displayed value on slider\r\n  @Input() displayWith?: (value: number) => string;\r\n  @Input() invert?: boolean = false;\r\n  @Input() vertical?: boolean = false;\r\n  // show intervals on slider\r\n  @Input() tickInterval?: number = null;\r\n  @Output() onChange? = new EventEmitter<number>();\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.disabled) this.control?.disable();\r\n    else if (!this.disabled) this.control?.enable();\r\n  }\r\n\r\n  change(value: number) {\r\n    this.onChange.emit(value);\r\n  }\r\n}\r\n","<div [class]=\"boxClass\">\r\n  <mat-label class=\"d-block\">\r\n    {{ label | translate }}\r\n  </mat-label>\r\n\r\n  <mat-slider [formControl]=\"control\"\r\n              [class]=\"class\"\r\n              [id]=\"id\"\r\n              [color]=\"color\"\r\n              [min]=\"min\"\r\n              [max]=\"max\"\r\n              [step]=\"step\"\r\n              [thumbLabel]=\"thumbLabel\"\r\n              [invert]=\"invert\"\r\n              [vertical]=\"vertical\"\r\n              [tickInterval]=\"tickInterval\"\r\n              [displayWith]=\"displayWith\"\r\n              (change)=\"change($event.value)\">\r\n  </mat-slider>\r\n  <span class=\"slider-value\" [class.disabled]=\"disabled\">\r\n  {{ control.value ? control.value + '%' : '' }}\r\n</span>\r\n\r\n  <!--<p-slider [formControl]=\"control\"-->\r\n  <!--          [disabled]=\"disabled\"-->\r\n  <!--          [min]=\"min\"-->\r\n  <!--          [max]=\"max\"-->\r\n  <!--          [step]=\"step\"-->\r\n  <!--          [styleClass]=\"class\"-->\r\n  <!--          (onChange)=\"change($event.value)\"-->\r\n  <!--&gt;</p-slider>-->\r\n\r\n  <mat-hint class=\"d-block\">\r\n    <input-validation-msg [control]=\"control\"\r\n                          [submitted]=\"submitted\"\r\n                          [isSelect]=\"true\">\r\n\r\n      <ng-container class=\"before\">\r\n        <ng-content select=\".msg-before\"></ng-content>\r\n      </ng-container>\r\n\r\n      <ng-container class=\"after\">\r\n        <ng-content select=\".msg-after\"></ng-content>\r\n      </ng-container>\r\n\r\n    </input-validation-msg>\r\n  </mat-hint>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\nexport interface ITextEditorModel {\r\n  // with tags > with font styles\r\n  htmlValue: string;\r\n  // only plain text\r\n  textValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-text-editor\",\r\n  templateUrl: \"./text-editor.component.html\",\r\n  styleUrls: [\"./text-editor.component.scss\"],\r\n})\r\nexport class TextEditorComponent {\r\n  @Input() control: FormControl;\r\n  @Input() label: string;\r\n  @Input() placeholder: string = \"\";\r\n  @Input() submitted: boolean = false;\r\n  @Input() height: string = \"320\";\r\n  @Input() class?: string;\r\n  @Input() bounds?: string = \"body\";\r\n  @Output() textChange? = new EventEmitter<ITextEditorModel>();\r\n\r\n  onTextChange(value: ITextEditorModel) {\r\n    this.textChange.emit(value);\r\n  }\r\n}\r\n","<div class=\"mb-4\">\r\n  <label class=\"mb-2\">\r\n    {{ label | translate }}\r\n  </label>\r\n\r\n  <p-editor\r\n    [class]=\"class\"\r\n    [formControl]=\"control\"\r\n    [placeholder]=\"placeholder | translate\"\r\n    [style]=\"{ height: height + 'px' }\"\r\n    [bounds]=\"bounds\"\r\n    (onTextChange)=\"onTextChange($event)\"\r\n  >\r\n    <ng-template pTemplate=\"header\">\r\n      <div class=\"ql-toolbar\">\r\n        <span class=\"ql-formats\">\r\n          <select class=\"ql-size\">\r\n            <option value=\"small\"></option>\r\n            <option selected value=\"normal\"></option>\r\n            <option value=\"large\"></option>\r\n            <option value=\"huge\"></option>\r\n          </select>\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <select class=\"ql-font\">\r\n            <option></option>\r\n            <option value=\"serif\"></option>\r\n            <option value=\"monospace\"></option>\r\n          </select>\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <button class=\"ql-bold\"></button>\r\n          <button class=\"ql-italic\"></button>\r\n          <button class=\"ql-underline\"></button>\r\n          <button class=\"ql-strike\"></button>\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <select class=\"ql-color\">\r\n            <option value=\"\"></option>\r\n            <option value=\"#e60000\"></option>\r\n            <option value=\"#ff9900\"></option>\r\n            <option value=\"#ffff00\"></option>\r\n            <option value=\"#008a00\"></option>\r\n            <option value=\"#0066cc\"></option>\r\n            <option value=\"#9933ff\"></option>\r\n            <option value=\"#ffffff\"></option>\r\n            <option value=\"#facccc\"></option>\r\n            <option value=\"#ffebcc\"></option>\r\n            <option value=\"#ffffcc\"></option>\r\n            <option value=\"#cce8cc\"></option>\r\n            <option value=\"#cce0f5\"></option>\r\n            <option value=\"#ebd6ff\"></option>\r\n            <option value=\"#bbbbbb\"></option>\r\n            <option value=\"#f06666\"></option>\r\n            <option value=\"#ffc266\"></option>\r\n            <option value=\"#ffff66\"></option>\r\n            <option value=\"#66b966\"></option>\r\n            <option value=\"#66a3e0\"></option>\r\n            <option value=\"#c285ff\"></option>\r\n            <option value=\"#888888\"></option>\r\n            <option value=\"#a10000\"></option>\r\n            <option value=\"#b26b00\"></option>\r\n            <option value=\"#b2b200\"></option>\r\n            <option value=\"#006100\"></option>\r\n            <option value=\"#0047b2\"></option>\r\n            <option value=\"#6b24b2\"></option>\r\n            <option value=\"#444444\"></option>\r\n            <option value=\"#5c0000\"></option>\r\n            <option value=\"#663d00\"></option>\r\n            <option value=\"#666600\"></option>\r\n            <option value=\"#003700\"></option>\r\n            <option value=\"#002966\"></option>\r\n            <option value=\"#3d1466\"></option>\r\n          </select>\r\n          <select class=\"ql-background\">\r\n            <option value=\"black\"></option>\r\n            <option value=\"#e60000\"></option>\r\n            <option value=\"#ff9900\"></option>\r\n            <option value=\"#ffff00\"></option>\r\n            <option value=\"#008a00\"></option>\r\n            <option value=\"#0066cc\"></option>\r\n            <option value=\"#9933ff\"></option>\r\n            <option value=\"#ffffff\"></option>\r\n            <option value=\"#facccc\"></option>\r\n            <option value=\"#ffebcc\"></option>\r\n            <option value=\"#ffffcc\"></option>\r\n            <option value=\"#cce8cc\"></option>\r\n            <option value=\"#cce0f5\"></option>\r\n            <option value=\"#ebd6ff\"></option>\r\n            <option value=\"#bbbbbb\"></option>\r\n            <option value=\"#f06666\"></option>\r\n            <option value=\"#ffc266\"></option>\r\n            <option value=\"#ffff66\"></option>\r\n            <option value=\"#66b966\"></option>\r\n            <option value=\"#66a3e0\"></option>\r\n            <option value=\"#c285ff\"></option>\r\n            <option value=\"#888888\"></option>\r\n            <option value=\"#a10000\"></option>\r\n            <option value=\"#b26b00\"></option>\r\n            <option value=\"#b2b200\"></option>\r\n            <option value=\"#006100\"></option>\r\n            <option value=\"#0047b2\"></option>\r\n            <option value=\"#6b24b2\"></option>\r\n            <option value=\"#444444\"></option>\r\n            <option value=\"#5c0000\"></option>\r\n            <option value=\"#663d00\"></option>\r\n            <option value=\"#666600\"></option>\r\n            <option value=\"#003700\"></option>\r\n            <option value=\"#002966\"></option>\r\n            <option value=\"#3d1466\"></option>\r\n          </select>\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <button class=\"ql-list\" value=\"ordered\"></button>\r\n          <button class=\"ql-list\" value=\"bullet\"></button>\r\n          <button class=\"ql-indent\" value=\"-1\"></button>\r\n          <button class=\"ql-indent\" value=\"+1\"></button>\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <button class=\"ql-direction\" value=\"rtl\"></button>\r\n          <select class=\"ql-align ql-picker ql-icon-picker\">\r\n            <option></option>\r\n            <option value=\"right\"></option>\r\n            <option value=\"center\"></option>\r\n            <option value=\"justify\"></option>\r\n          </select>\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <button class=\"ql-script\" value=\"sub\"></button>\r\n          <button class=\"ql-script\" value=\"super\"></button>\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <button class=\"ql-header\" value=\"1\"></button>\r\n          <button class=\"ql-header\" value=\"2\"></button>\r\n          <button class=\"ql-blockquote\"></button>\r\n          <button class=\"ql-code-block\"></button>\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <button class=\"ql-link\"></button>\r\n          <button class=\"ql-image\"></button>\r\n          <!-- <button class=\"ql-formula\"></button> -->\r\n        </span>\r\n\r\n        <span class=\"ql-formats\">\r\n          <button class=\"ql-clean\"></button>\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n  </p-editor>\r\n\r\n  <mat-hint>\r\n    <input-validation-msg [control]=\"control\" [submitted]=\"submitted\">\r\n    </input-validation-msg>\r\n  </mat-hint>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-textarea\",\r\n  templateUrl: \"./textarea.component.html\",\r\n  styleUrls: [\"./textarea.component.scss\"],\r\n})\r\nexport class TextareaComponent {\r\n  @Input() control: FormControl;\r\n  @Input() label: string;\r\n  @Input() id?: string;\r\n  @Input() placeholder: string = \"\";\r\n  @Input() rows: number;\r\n  @Input() cols: number;\r\n  @Input() submitted: boolean = false;\r\n  @Input() appearance: string = Constants.defaultInputAppearance;\r\n  @Input() class?: string;\r\n  @Output() keyup? = new EventEmitter<any>();\r\n  @Output() keydown? = new EventEmitter<any>();\r\n  @Output() keypress? = new EventEmitter<any>();\r\n  @Output() keyEnter? = new EventEmitter<any>();\r\n  isFloatLabel: boolean = Constants.defaultFloatLabel;\r\n\r\n  constructor(public languageService: LanguageService) {}\r\n\r\n  onkeyup(value: any) {\r\n    this.keyup.emit(value);\r\n  }\r\n\r\n  onkeydown(value: any) {\r\n    this.keydown.emit(value);\r\n  }\r\n\r\n  onkeypress(value: any) {\r\n    this.keypress.emit(value);\r\n  }\r\n\r\n  onkeyEnter(value: any) {\r\n    this.keyEnter.emit(value);\r\n  }\r\n}\r\n","<div [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n  <mat-label *ngIf=\"!isFloatLabel\">\r\n    {{ label | translate }}\r\n  </mat-label>\r\n  <mat-form-field [appearance]=\"appearance\" [class]=\"class\">\r\n    <mat-label *ngIf=\"isFloatLabel\">\r\n      {{ label | translate }}\r\n    </mat-label>\r\n    <textarea\r\n      matInput\r\n      [formControl]=\"control\"\r\n      [placeholder]=\"placeholder | translate\"\r\n      [rows]=\"rows\"\r\n      [cols]=\"cols\"\r\n      (keyup)=\"onkeyup($event.target.value)\"\r\n      (keydown)=\"onkeydown($event.target.value)\"\r\n      (keypress)=\"onkeypress($event.target.value)\"\r\n      (keyup.enter)=\"onkeyEnter($event.target.value)\"\r\n    >\r\n    </textarea>\r\n    <mat-hint>\r\n      <input-validation-msg [control]=\"control\" [submitted]=\"submitted\">\r\n\r\n        <ng-container class=\"before\">\r\n          <ng-content select=\".msg-before\"></ng-content>\r\n        </ng-container>\r\n\r\n        <ng-container class=\"after\">\r\n          <ng-content select=\".msg-after\"></ng-content>\r\n        </ng-container>\r\n\r\n\r\n      </input-validation-msg>\r\n    </mat-hint>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<!--\r\n<span class=\"p-float-label   prime-inpt\">\r\n  <textarea\r\n    [id]=\"id ?? control\"\r\n    pInputTextarea\r\n    [formControl]=\"control\"\r\n    [placeholder]=\"placeholder | translate\"\r\n    [rows]=\"rows\"\r\n    [cols]=\"cols\"\r\n    (keyup)=\"onkeyup($event.target.value)\"\r\n    (keydown)=\"onkeydown($event.target.value)\"\r\n    (keypress)=\"onkeypress($event.target.value)\"\r\n    (keyup.enter)=\"onkeyEnter($event.target.value)\"\r\n  ></textarea>\r\n  <label [htmlFor]=\"id ?? control\"> {{ label | translate }}</label>\r\n  <span class=\"error\">\r\n    <input-validation-msg [control]=\"control\" [submitted]=\"submitted\">\r\n    </input-validation-msg>\r\n  </span>\r\n</span> -->\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-timepicker\",\r\n  templateUrl: \"./timepicker.component.html\",\r\n  styleUrls: [\"./timepicker.component.scss\"],\r\n})\r\nexport class TimepickerComponent {\r\n  @Input() control: FormControl;\r\n  @Input() label: string;\r\n  @Input() submitted?: boolean = false;\r\n  @Input() disabled?: boolean = false;\r\n  @Output() keyUp? = new EventEmitter<any>();\r\n  @Output() keyDown? = new EventEmitter<any>();\r\n  @Output() keyPress? = new EventEmitter<any>();\r\n  @Output() keyEnter? = new EventEmitter<any>();\r\n  @Output() change? = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n\r\n\r\n  onkeyup(value: any) {\r\n    this.keyUp.emit(value);\r\n  }\r\n\r\n  onkeydown(value: any) {\r\n    this.keyDown.emit(value);\r\n  }\r\n\r\n  onkeypress(value: any) {\r\n    this.keyPress.emit(value);\r\n  }\r\n\r\n  onkeyEnter(value: any) {\r\n    this.keyEnter.emit(value);\r\n  }\r\n\r\n  onChange(value: any) {\r\n    this.change.emit(value);\r\n  }\r\n}\r\n","<app-input\r\n\t[control]=\"control\"\r\n\t[label]=\"label\"\r\n\t[submitted]=\"submitted\"\r\n\t[disabled]=\"disabled\"\r\n\tstep=\"1\"\r\n\ttype=\"time\"\r\n\t(keyup)=\"onkeyup($event)\"\r\n\t(keydown)=\"onkeydown($event)\"\r\n\t(keypress)=\"onkeypress($event)\"\r\n\t(keyup.enter)=\"onkeyEnter($event)\"\r\n\t(Change)=\"onChange($event)\"\r\n>\r\n</app-input>\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { Page } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-mat-paginator\",\r\n  templateUrl: \"./mat-paginator.component.html\",\r\n  styleUrls: [\"./mat-paginator.component.scss\"],\r\n})\r\nexport class MatPaginatorComponent {\r\n  @Input() page: Page;\r\n  @Input() paginator: MatPaginator;\r\n  @Input() isDialogSize: boolean = false;\r\n  @Output() onChangePage = new EventEmitter<PageEvent>();\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  onChange($event: PageEvent) {\r\n    this.onChangePage.emit($event);\r\n  }\r\n}\r\n","<mat-paginator #paginator\r\n               [pageSizeOptions]=\"page.pageSizeOptions\"\r\n               (page)=\"onChange($event)\"\r\n               [length]=\"page.length\"\r\n               [pageSize]=\"isDialogSize ? page.dialogSize : page.pageSize\"\r\n               [pageIndex]=\"page.pageIndex - 1\"\r\n               [hidePageSize]=\"isDialogSize\"\r\n               [showFirstLastButtons]=\"true\"\r\n>\r\n</mat-paginator>\r\n","import {\r\n  AfterViewChecked,\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  inject,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IRowActionsModel } from \"app/shared/interfaces/user-views\";\r\nimport { AppHelpers, Page } from \"app/shared/resources/app-helpers\";\r\nimport { AssetsManager } from \"app/shared/resources/assets-manager\";\r\nimport { FileService } from \"app/shared/services/file.service\";\r\nimport { Paginator } from \"primeng/paginator\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { Languages } from \"app/shared/enums/languages.enum\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\n\r\nexport interface IMergeImgWithColumnData {\r\n  isMerge: boolean;\r\n  columnImgName: string;\r\n  columnTextName: string;\r\n}\r\n\r\nexport interface IAttachIconColumnData {\r\n  columnName: string;\r\n  icon: string;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-material-table\",\r\n  templateUrl: \"./material-table.component.html\",\r\n  styleUrls: [\"./material-table.component.scss\"],\r\n})\r\nexport class MaterialTableComponent implements OnInit, OnChanges, AfterViewChecked {\r\n  public router = inject(Router);\r\n\r\n  @Input() dataSource: MatTableDataSource<any> | any;\r\n  @Input() mandatoryColomns: string[] = [];\r\n  @Input() optionalColomns: string[] = [];\r\n  @Input() page: Page;\r\n  @Input() actions: IRowActionsModel;\r\n  @Input() isHexImg: boolean = false;\r\n  @Input() showPaginator: boolean = true;\r\n  @Input() showFilter: boolean = true;\r\n  @Input() showLoader: boolean = true;\r\n  @Input() isLoaded: boolean = false;\r\n  @Input() isDialogSize: boolean = false;\r\n  @Input() isMatPaginator: boolean = false; // for material paginator\r\n  @Input() showSpaceTop: boolean = true;\r\n  @Input() showFirstLastButtons: boolean = true; // for material paginator\r\n  @Input() hidePageSize: boolean = false; // for material paginator\r\n  @Input() class: string = \"\";\r\n  @Input() isRowClickable: boolean;\r\n  @Input() checkboxColumnName: string = Constants.checkboxColumnName;\r\n  @Input() exportService: any; // send index service to call getAll (ExportExcel) Function from service\r\n  @Input() mergeImgWithName: IMergeImgWithColumnData = null;\r\n  @Input() attachIconColumnData: IAttachIconColumnData = null;\r\n  @Output() onChangePage = new EventEmitter<PageEvent>();\r\n  @Output() deleteRow = new EventEmitter<any>();\r\n  @Output() editRow = new EventEmitter<any>();\r\n  @Output() rowactions = new EventEmitter<any>();\r\n  @Output() selectedItems = new EventEmitter<any[]>(); // emitt selected items list\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(\"PrimePaginator\", {static: true}) PrimePaginator: Paginator;\r\n\r\n  appHelpers: AppHelpers = new AppHelpers();\r\n  parentView: string;\r\n  params;\r\n  displayedColumns: string[] = [];\r\n  assetsManager: AssetsManager = new AssetsManager();\r\n  input: HTMLInputElement;\r\n\r\n  allowClickRow: boolean = false;\r\n\r\n  selectedItemsList = []; // use to save list of selected items\r\n  checkedAll = false; // using for check optional Columns if selected all\r\n  constructor(public fileService: FileService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.displayedColumns = this.mandatoryColomns.slice();\r\n    this.parentView = this.appHelpers.getViewName;\r\n    this.params = {\r\n      parentView: this.parentView,\r\n      ...this.appHelpers.pageParams,\r\n    };\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      !changes.dataSource?.firstChange &&\r\n      changes.dataSource?.currentValue.data\r\n    ) {\r\n      this.isLoaded = true;\r\n      if (this.checkboxColumnName) {\r\n        this.changeCheckbox();\r\n        this.changeCheckBoxPosition(100);\r\n      }\r\n    }\r\n\r\n    // check if can using row click or no\r\n    if (this.isRowClickable) {\r\n      let url = this.actions?.basic?.find(e => e.isRow && (e.name.toLowerCase() == \"edit\" || e.name.toLowerCase() == \"view\"))?.path;\r\n      if (!url) {\r\n        this.allowClickRow = false;\r\n      }\r\n      else {\r\n        this.allowClickRow = true;\r\n      }\r\n    }\r\n\r\n    if(changes.mandatoryColomns) {\r\n      this.displayedColumns = this.mandatoryColomns.slice();\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.sort) {\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n\r\n  onClickRow(ele) {\r\n    if (this.isRowClickable) {\r\n      let url = this.actions?.basic?.find(e => e.isRow && (e.name.toLowerCase() == \"edit\" || e.name.toLowerCase() == \"view\"))?.path;\r\n      this.router.navigate([`${url}/${ele?.id}`], {queryParams: this.params});\r\n    }\r\n  }\r\n\r\n\r\n  // page change event\r\n  // material paginator\r\n  change(page: PageEvent) {\r\n    this.params.page = page.pageIndex + 1;\r\n    this.onChangePage.emit(page);\r\n    this.dataSource = null;\r\n    this.isLoaded = false;\r\n  }\r\n\r\n  // primeng paginator\r\n  changePage(event: {\r\n    first: number;\r\n    page: number;\r\n    pageCount: number;\r\n    rows: number;\r\n  }) {\r\n    this.params.page = event.page + 1;\r\n    this.dataSource = null;\r\n    this.isLoaded = false;\r\n    let page: Page = new Page();\r\n    page.pageSize = event.rows;\r\n    page.pageIndex = event.page;\r\n    page.length = event.rows * event.pageCount;\r\n    // page.meta.totalItemCount = event.rows * event.pageCount;\r\n    this.onChangePage.emit(page);\r\n  }\r\n\r\n  onAction(event: { data; fun }) {\r\n    this.rowactions.emit({data: event.data, fun: event.fun});\r\n  }\r\n\r\n  onEdit(data) {\r\n    this.editRow.emit(data);\r\n  }\r\n\r\n  onDelete(data) {\r\n    this.deleteRow.emit(data);\r\n  }\r\n\r\n  // row action event\r\n  // Action(data: any, fun: IGUIModel) {\r\n  //   if (fun.name.toLocaleLowerCase().search('edit') != -1) {\r\n  //     this.edit(data, fun);\r\n  //   }\r\n  //   if (fun.name.toLocaleLowerCase().search('delete') != -1) {\r\n  //     this.delete(data);\r\n  //   } else {\r\n  //     this.rowactions.emit({data, fun: fun});\r\n  //   }\r\n  // }\r\n  //\r\n  // // edit row event\r\n  // edit(data, fun: IGUIModel) {\r\n  //   //let row = {} as any;\r\n  //   data.function = fun;\r\n  //   this.editRow.emit(data);\r\n  // }\r\n  //\r\n  // // delete row event\r\n  // delete(data) {\r\n  //   this.deleteRow.emit(data);\r\n  // }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editColumnsToView(index: number, selected: boolean) {\r\n    if (selected) {\r\n      this.displayedColumns.splice(\r\n        this.mandatoryColomns.includes(\"actions\")\r\n          ? this.displayedColumns.length - 1\r\n          : this.displayedColumns.length,\r\n        0,\r\n        this.optionalColomns[index]\r\n      );\r\n      let checkedAll = true;\r\n      this.optionalColomns.forEach(e => {\r\n        if (!this.displayedColumns.includes(e)) checkedAll = false;\r\n      });\r\n      this.checkedAll = checkedAll;\r\n    }\r\n\r\n    else {\r\n      let indexInTable = this.displayedColumns.findIndex(\r\n        (ele) => ele == this.optionalColomns[index]\r\n      );\r\n      this.displayedColumns.splice(indexInTable, 1);\r\n      let checkedAll = true;\r\n      this.optionalColomns.forEach(e => {\r\n        if (!this.displayedColumns.includes(e)) checkedAll = false;\r\n      });\r\n      this.checkedAll = checkedAll;\r\n      // if (this.mandatoryColomns == this.displayedColumns) {\r\n      //   this.checkedAll = false;\r\n      // }\r\n    }\r\n  }\r\n\r\n  // select cols to display (For cols in table)\r\n  selectAllColumnsToView(selected: boolean) {\r\n    let mandatory = [];\r\n    this.mandatoryColomns.forEach(e => {\r\n        if (!mandatory.includes(e)) mandatory.push(e);\r\n      }\r\n    );\r\n    if (selected) {\r\n      this.displayedColumns = mandatory;\r\n      this.displayedColumns.splice(\r\n        this.mandatoryColomns.includes(\"actions\")\r\n          ? this.displayedColumns.length - 1\r\n          : this.displayedColumns.length,\r\n        0,\r\n        ...this.optionalColomns\r\n      );\r\n      this.checkedAll = true;\r\n    }\r\n    else {\r\n      this.optionalColomns.forEach(e => {\r\n        if (this.displayedColumns.includes(e))\r\n          this.displayedColumns.splice(this.displayedColumns.findIndex((ele) => ele == e), 1);\r\n      });\r\n      this.checkedAll = false;\r\n    }\r\n  }\r\n\r\n  isImage(col: string, value: any = \"\"): boolean {\r\n    return !this.isAttach(col) &&\r\n    (col == \"logo\" ||\r\n      (typeof value === \"string\" && value.includes(\"Attachments/\")) ||\r\n      // display image with en name\r\n      (this.mergeImgWithName?.isMerge &&\r\n        col == this.mergeImgWithName?.columnTextName))\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  isIcon(col: string): boolean {\r\n    return col == \"icon\" ? true : false;\r\n  }\r\n\r\n  isAttach(col: string): boolean {\r\n    return this.attachIconColumnData?.columnName == col ? true : false;\r\n  }\r\n\r\n  isBooleanType(value: any): boolean {\r\n    return typeof value === \"boolean\";\r\n  }\r\n\r\n  isCheckbox(col: string) {\r\n    return col === Constants.selectColName;\r\n  }\r\n\r\n  // select & deselect all checkboxes (For data in table)\r\n  selectAll(checkboxValue: boolean) {\r\n    this.dataSource.data.forEach((ele) => {\r\n      ele[this.checkboxColumnName] = checkboxValue;\r\n    });\r\n    this.selectedItemsList = this.dataSource.data.filter(e => e.isSelected);\r\n    this.selectedItems.emit(this.selectedItemsList);\r\n  }\r\n\r\n  // update select all checkbox if any single one changed\r\n  isAllCheckboxSelected: boolean = false;\r\n\r\n  changeCheckbox() {\r\n    this.isAllCheckboxSelected = this.dataSource.data.every(\r\n      (ele) => ele[this.checkboxColumnName]\r\n    );\r\n    this.selectedItemsList = this.dataSource.data.filter(e => e.isSelected);\r\n    this.selectedItems.emit(this.selectedItemsList);\r\n  }\r\n\r\n\r\n  /*#region START: Export data to excel */\r\n\r\n  // get all table data to export as excel\r\n  getAllDataToExport() {\r\n    if (this.exportService) {\r\n      this.appHelpers.showLoading();\r\n      if (this.exportService?.exportExcel()) {\r\n        this.exportService?.exportExcel().subscribe((res) => {\r\n          this.exportExcel(res.data);\r\n        });\r\n      }\r\n      else {\r\n        this.exportService.getAll().subscribe((res) => {\r\n          this.exportExcel(res.data);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  exportExcel(data) {\r\n    data?.map(e => {\r\n      delete e?.creat_User_ID;\r\n      delete e?.create_Date;\r\n      delete e?.last_Update_Date;\r\n      delete e?.last_Update_User_ID;\r\n      delete e?.is_Delete;\r\n    });\r\n    import(\"xlsx\").then((xlsx) => {\r\n      const worksheet = xlsx.utils?.json_to_sheet(data);\r\n      worksheet[\"A1\"].v = worksheet[\"A1\"].v.substring(0, 32767);\r\n      const workbook = {Sheets: {data: worksheet}, SheetNames: [\"data\"]};\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      this.saveAsExcelFile(\r\n        excelBuffer,\r\n        this.appHelpers.title.getTitle().toLowerCase()\r\n      );\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    let EXCEL_EXTENSION = \".xlsx\";\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    FileSaver.saveAs(\r\n      data,\r\n      fileName +\r\n      \"_\" +\r\n      HelpersFunctions.mapDate(new Date().toDateString()) +\r\n      EXCEL_EXTENSION\r\n    );\r\n    this.appHelpers.hideLoading();\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onWindowResize(event) {\r\n    this.changeCheckBoxPosition();\r\n  }\r\n\r\n  changeCheckBoxPosition(time = 0) {\r\n    setTimeout(() => {\r\n      let checkboxLabelWidth = document.getElementById(\r\n        \"checkbox-header-label\"\r\n      )?.offsetWidth;\r\n      document\r\n        .querySelectorAll(\".td-checkbox\")\r\n        .forEach((element: HTMLElement) => {\r\n          if (Storage.getLocalLang == Languages.ar)\r\n            element.style.marginRight = `${checkboxLabelWidth + 8}px`;\r\n          else element.style.marginLeft = `${checkboxLabelWidth + 8}px`;\r\n        });\r\n    }, time);\r\n  }\r\n}\r\n\r\n//#endregion\r\n","<ng-container *ngIf=\"dataSource?.data?.length > 0 || dataSource?.length > 0\">\r\n  <mat-card-content [class]=\"class\" #tableContainer>\r\n    <!--    table card header -->\r\n    <div [class.pt-3]=\"showSpaceTop\">\r\n      <!-- filter columns -->\r\n      <div class=\"filter-dropdown m-0 float-right py-1\">\r\n        <!--export excel sheet-->\r\n        <!--        <button *ngIf=\"exportService\"-->\r\n        <!--                mat-button-->\r\n        <!--                class=\"btn btn-outline-success mr-1 d-inline-block\"-->\r\n        <!--        >-->\r\n        <!--          &lt;!&ndash;          <i class=\"far fa-file-excel\" style=\"font-size: 1.5rem\"> </i>&ndash;&gt;-->\r\n        <!--        </button>-->\r\n\r\n        <img *ngIf=\"exportService\"\r\n             [src]=\"this.appHelpers.svgManager.excel\"\r\n             width=\"35\"\r\n             height=\"35\"\r\n             matTooltip=\"export to Excel\"\r\n             alt=\"export to Excel\"\r\n             class=\"d-inline-block pointer\"\r\n             (click)=\"getAllDataToExport()\">\r\n        <!--filter -->\r\n        <ng-container *ngIf=\"optionalColomns.length > 0\">\r\n          <button mat-button\r\n                  [matMenuTriggerFor]=\"menu\"\r\n                  matTooltip=\"{{ 'General.changeColumns' | translate }}\">\r\n            <i class=\"ft-filter\" style=\"font-size: 1.5rem\"> </i>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item\r\n                    (click)=\"$event.stopPropagation()\">\r\n              <mat-checkbox color=\"primary\"\r\n                            class=\"checkbox-dropdown-filter text-left\"\r\n                            [checked]=\"checkedAll\"\r\n                            (change)=\"selectAllColumnsToView($event.checked)\">\r\n                {{ (checkedAll ? 'deselectAll' : 'selectAll') | translate }}\r\n              </mat-checkbox>\r\n            </button>\r\n\r\n            <button mat-menu-item\r\n                    *ngFor=\"let column of optionalColomns; let i = index\"\r\n                    (click)=\"$event.stopPropagation()\">\r\n              <mat-checkbox [checked]=\"displayedColumns.includes(column) \"\r\n                            color=\"primary\"\r\n                            class=\"checkbox-dropdown-filter text-left\"\r\n                            (change)=\"editColumnsToView(i, $event.checked)\">\r\n                {{ column | translate }}\r\n              </mat-checkbox>\r\n            </button>\r\n          </mat-menu>\r\n        </ng-container\r\n        >\r\n      </div>\r\n\r\n      <!-- search input -->\r\n      <div class=\"col-sm-12 col-md-6 p-0 filter-container\" *ngIf=\"showFilter\">\r\n        <div class=\"p-inputgroup\">\r\n          <span class=\"p-input-icon-left\">\r\n            <i class=\"pi pi-search\"></i>\r\n            <input\r\n              id=\"filter-input\"\r\n              type=\"text\"\r\n              pInputText\r\n              (keyup.enter)=\"applyFilter(filterInput.value)\"\r\n              (keyup)=\"applyFilter(filterInput.value)\"\r\n              [placeholder]=\"'General.search' | translate\"\r\n              #filterInput\r\n            />\r\n          </span>\r\n          <button\r\n            type=\"button\"\r\n            pButton\r\n            pRipple\r\n            icon=\"pi pi-search\"\r\n            styleClass=\"p-button-warn\"\r\n            (click)=\"applyFilter(filterInput.value)\"\r\n          ></button>\r\n\r\n          <!--          <ng-container>-->\r\n          <!--            <mat-checkbox color=\"primary\"-->\r\n          <!--                          class=\"mx-2\"-->\r\n          <!--                          (change)=\"selectAll($event.checked)\"-->\r\n          <!--                          [(ngModel)]=\"isAllCheckboxSelected\">-->\r\n          <!--              {{ 'selectall' | translate }}-->\r\n          <!--            </mat-checkbox>-->\r\n          <!--          </ng-container>-->\r\n        </div>\r\n        <!-- <div class=\"form-group row pt-2\">\r\n          <label class=\"col-md-3 p-0\" for=\"filter-input\">\r\n            {{ \"General.filter\" | translate }} :\r\n          </label>\r\n          <div class=\"col-md-9 p-0\">\r\n            <input\r\n              id=\"filter-input\"\r\n              class=\"form-control\"\r\n              (keyup)=\"applyFilter($event.target.value)\"\r\n              placeholder=\"Ex. abc\"\r\n              #input\r\n            />\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix\"></div>\r\n    <!-- table -->\r\n    <div class=\"mat-elevation-z8 f-w table-container\" appScrollableHorizontal>\r\n      <table mat-table [dataSource]=\"dataSource\" matSort [class.table-hover]=\"allowClickRow\">\r\n        <ng-container *ngFor=\"let col of displayedColumns\">\r\n          <!-- Serial Col -->\r\n          <ng-container *ngIf=\"col == 'Ser'\" [matColumnDef]=\"col\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              {{ col }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; index as i\" class=\"ser-col\" (click)=\"onClickRow(element)\">\r\n              {{\r\n                page?.meta?.firstItemOnPage\r\n                  ? page?.meta?.firstItemOnPage + i\r\n                  : (i + 1)\r\n              }}\r\n              <!--              <i class=\"fas fa-bars\"></i>-->\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Cols  -->\r\n          <ng-container\r\n            *ngIf=\"col != 'actions' && col != 'Ser'\"\r\n            [matColumnDef]=\"col\">\r\n            <!-- disable > remove sort on image & file columns & select -->\r\n            <th\r\n              mat-header-cell\r\n              *matHeaderCellDef\r\n              mat-sort-header\r\n              [disabled]=\"\r\n                (isImage(col) && !mergeImgWithName) ||\r\n                isAttach(col) ||\r\n                isCheckbox(col)\r\n                  ? true\r\n                  : false\r\n              \">\r\n              <span id=\"checkbox-header-label\"\r\n                    *ngIf=\"isCheckbox(col); else noSelect\">\r\n                {{ col | translate }}\r\n              </span>\r\n              <ng-template #noSelect>{{ col | translate }}</ng-template>\r\n\r\n              <ng-container *ngIf=\"isCheckbox(col)\">\r\n                <mat-checkbox color=\"primary\"\r\n                              class=\"mright-8 mleft-8\"\r\n                              (change)=\"selectAll($event.checked)\"\r\n                              [(ngModel)]=\"isAllCheckboxSelected\">\r\n\r\n                </mat-checkbox>\r\n              </ng-container>\r\n            </th>\r\n            <td class=\"select-all\" mat-cell *matCellDef=\"let element; index as i\" (click)=\"onClickRow(element)\">\r\n              <!-- Boolean Col: display (yes) or (no) -->\r\n              <ng-container *ngIf=\"isBooleanType(element[col])\">\r\n                <!-- yes col-->\r\n                <span *ngIf=\"element[col]; else no\"\r\n                      class=\"success\">\r\n                  {{ \"yes\" | translate }}\r\n                </span>\r\n                <!-- no col -->\r\n                <ng-template #no>\r\n                  <span class=\"danger\">\r\n                    {{ \"no\" | translate }}\r\n                  </span>\r\n                </ng-template>\r\n              </ng-container>\r\n\r\n              <!-- img cols -->\r\n              <ng-container *ngIf=\"isImage(col, element[col])\">\r\n                <ng-container *ngIf=\"!mergeImgWithName; else mergingCell\">\r\n                  <p-image\r\n                    *ngIf=\"element[col]\"\r\n                    [src]=\"\r\n                      isHexImg\r\n                        ? fileService.previewHexImage(element[col])\r\n                        : fileService.preview(element[col])\r\n                    \"\r\n                    alt=\"{{ col | translate }}\"\r\n                    class=\"image-preview\"\r\n                    preview=\"true\"\r\n                  >\r\n                  </p-image>\r\n                </ng-container>\r\n\r\n                <!-- in merging > show name with img -->\r\n                <ng-template #mergingCell>\r\n                  <span class=\"img-merge-cell\">\r\n                    <!-- alt=\"{{ 'img' | translate }}\" -->\r\n                    <p-image\r\n                      *ngIf=\"element[mergeImgWithName?.columnImgName]\"\r\n                      [src]=\"\r\n                        isHexImg\r\n                          ? fileService.previewHexImage(\r\n                              element[mergeImgWithName?.columnImgName]\r\n                            )\r\n                          : fileService.preview(\r\n                              element[mergeImgWithName?.columnImgName]\r\n                            )\r\n                      \"\r\n                      class=\"image-preview\"\r\n                      preview=\"true\">\r\n                    </p-image>\r\n\r\n                    <span>\r\n                      {{ element[col] }}\r\n                    </span>\r\n                  </span>\r\n                </ng-template>\r\n              </ng-container>\r\n\r\n              <!--Icon Col: display icon -->\r\n              <ng-container *ngIf=\"isIcon(col)\">\r\n                <i [class]=\"element[col]\" class=\"font-size-30\"></i>\r\n              </ng-container>\r\n\r\n              <!-- is Attach COL -->\r\n              <ng-container *ngIf=\"isAttach(col)\">\r\n                <i *ngIf=\"element[col]\"\r\n                   [class]=\"attachIconColumnData.icon\"\r\n                   class=\"font-size-20 darkBlue cursor-pointer\"\r\n                   (click)=\"fileService.download(element[col])\">\r\n                </i>\r\n              </ng-container>\r\n\r\n              <!-- is Checkbox COL -->\r\n              <ng-container *ngIf=\"isCheckbox(col)\">\r\n                <mat-checkbox\r\n                  class=\"td-checkbox\"\r\n                  color=\"primary\"\r\n                  [(ngModel)]=\"element[checkboxColumnName]\"\r\n                  (change)=\"changeCheckbox()\"\r\n                ></mat-checkbox>\r\n              </ng-container>\r\n\r\n              <!-- normal COL -->\r\n              <ng-container\r\n                *ngIf=\"\r\n                  !isBooleanType(element[col]) &&\r\n                  !isImage(col, element[col]) &&\r\n                  !isIcon(col) &&\r\n                  !isAttach(col)\r\n                \">\r\n               <span class=\"ellipsis-col\" [title]=\"element[col]\">\r\n                  {{ element[col] }}\r\n               </span>\r\n              </ng-container>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Actions  -->\r\n          <ng-container *ngIf=\"col == 'actions'\" [matColumnDef]=\"col\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              {{ col | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element; index as i\">\r\n              <app-row-functions\r\n                [actions]=\"actions\"\r\n                [element]=\"element\"\r\n                [pageIndex]=\"page?.pageIndex ?? 1\"\r\n                (editRow)=\"onEdit($event)\"\r\n                (deleteRow)=\"onDelete($event)\"\r\n                (onAction)=\"onAction($event)\"\r\n              >\r\n              </app-row-functions>\r\n            </td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" [attr.colspan]=\"displayedColumns.length\">\r\n            No data matching the filter \"{{ input?.value }}\"\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n\r\n  <mat-paginator #paginator\r\n                 *ngIf=\"showPaginator && isMatPaginator && page.length>(isDialogSize ? page.dialogSize : page.pageSize)\"\r\n                 [pageSizeOptions]=\"page.pageSizeOptions\"\r\n                 (page)=\"change($event)\"\r\n                 [length]=\"page.length\"\r\n                 [pageSize]=\"isDialogSize ? page.dialogSize : page.pageSize\"\r\n                 [pageIndex]=\"page.pageIndex - 1\"\r\n                 [hidePageSize]=\"isDialogSize || hidePageSize\"\r\n                 [showFirstLastButtons]=\"showFirstLastButtons\">\r\n  </mat-paginator>\r\n\r\n  <p-paginator #PrimePaginator\r\n               *ngIf=\"showPaginator && !isMatPaginator && page.length>(isDialogSize ? page.dialogSize : page.pageSize)\"\r\n               [rows]=\"isDialogSize ? page.dialogSize : page.pageSize\"\r\n               [totalRecords]=\"page.length\"\r\n               [rowsPerPageOptions]=\"isDialogSize?page.dialogSizeOptions:page.pageSizeOptions\"\r\n               [pageLinkSize]=\"page.numberOfNavs\"\r\n               [showJumpToPageDropdown]=\"true\"\r\n               [showJumpToPageInput]=\"false\"\r\n               [first]=\"\r\n               (page.pageIndex - 1) * (isDialogSize ? page.dialogSize : page.pageSize)\"\r\n               (onPageChange)=\"changePage($event)\"\r\n               [dropdownAppendTo]=\"isDialogSize ? tableContainer : null\"\r\n  >\r\n  </p-paginator>\r\n</ng-container>\r\n\r\n<div class=\"text-center\"\r\n     *ngIf=\"\r\n    (dataSource?.data?.length == 0 && isLoaded) || (!dataSource && isLoaded)\">\r\n\r\n  <div class=\"clearfix\"></div>\r\n  <img [src]=\"assetsManager.empty\"/>\r\n  <br/>\r\n  {{ \"emptytable\" | translate }}\r\n</div>\r\n\r\n<div *ngIf=\"showLoader && !isLoaded\" class=\"mtop-25\">\r\n  <app-table-skeleton [displayedColumns]=\"displayedColumns\">\r\n\r\n  </app-table-skeleton>\r\n</div>\r\n<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Page } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-prime-paginator\",\r\n  templateUrl: \"./prime-paginator.component.html\",\r\n  styleUrls: [\"./prime-paginator.component.scss\"]\r\n})\r\nexport class PrimePaginatorComponent {\r\n  @Input() page: Page;\r\n  @Input() isDialogSize: boolean = false;\r\n  @Output() onChangePage = new EventEmitter<Page>();\r\n\r\n  constructor() { }\r\n\r\n  // primeng paginator\r\n  changePage(event: {\r\n    first: number;\r\n    page: number;\r\n    pageCount: number;\r\n    rows: number;\r\n  }) {\r\n    // this.params.page = event.page + 1;\r\n    // this.dataSource = null;\r\n    // this.isLoaded = false;\r\n    let page: Page = new Page();\r\n    page.pageSize = event.rows;\r\n    page.pageIndex = event.page;\r\n    page.length = event.rows * event.pageCount;\r\n    this.onChangePage.emit(page);\r\n  }\r\n\r\n}\r\n","<p-paginator #PrimePaginator\r\n             [rows]=\"isDialogSize ? page.dialogSize : page.pageSize\"\r\n             [totalRecords]=\"page.length\"\r\n             [rowsPerPageOptions]=\"isDialogSize?page.dialogSizeOptions:page.pageSizeOptions\"\r\n             [pageLinkSize]=\"page.numberOfNavs\"\r\n             [showJumpToPageDropdown]=\"true\"\r\n             [showJumpToPageInput]=\"false\"\r\n             [first]=\"\r\n      (page.pageIndex - 1) * (isDialogSize ? page.dialogSize : page.pageSize)\r\n    \"\r\n             (onPageChange)=\"changePage($event)\"\r\n>\r\n</p-paginator>\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { Page } from \"app/shared/resources/app-helpers\";\r\nimport { SortEvent } from \"primeng/api\";\r\nimport { Table } from \"primeng/table\";\r\n\r\n@Component({\r\n  selector: \"app-primeng-table\",\r\n  templateUrl: \"./primrng-table.component.html\",\r\n  styleUrls: [\"./primrng-table.component.scss\"],\r\n})\r\nexport class PrimengTableComponent {\r\n  @Input() cols: any;\r\n  @Input() list: any[];\r\n  page: Page = new Page();\r\n\r\n  customSort(event: SortEvent) {\r\n    event.data.sort((data1, data2) => {\r\n      let value1 = data1[event.field];\r\n      let value2 = data2[event.field];\r\n      let result = null;\r\n\r\n      if (value1 == null && value2 != null) result = -1;\r\n      else if (value1 != null && value2 == null) result = 1;\r\n      else if (value1 == null && value2 == null) result = 0;\r\n      else if (typeof value1 === \"string\" && typeof value2 === \"string\")\r\n        result = value1.localeCompare(value2);\r\n      else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\r\n\r\n      return event.order * result;\r\n    });\r\n  }\r\n\r\n  clear(table: Table) {\r\n    table.clear();\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <p-table\r\n    #dt1\r\n    [columns]=\"cols\"\r\n    [value]=\"list\"\r\n    [rows]=\"page.pageSize\"\r\n    [showCurrentPageReport]=\"true\"\r\n    [rowsPerPageOptions]=\"page.pageSizeOptions\"\r\n    [paginator]=\"true\"\r\n    (sortFunction)=\"customSort($event)\"\r\n    [customSort]=\"true\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n    [globalFilterFields]=\"['id', 'en_Name', 'ar_Name', 'miN_SALARY']\"\r\n  >\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"flex\">\r\n        <button\r\n          pButton\r\n          label=\"Clear\"\r\n          class=\"p-button-outlined\"\r\n          icon=\"pi pi-filter-slash\"\r\n          (click)=\"clear(dt1)\"\r\n        ></button>\r\n        <span class=\"p-input-icon-left ml-auto\">\r\n          <i class=\"pi pi-search\"></i>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            (input)=\"dt1.filterGlobal($event.target.value, 'contains')\"\r\n            placeholder=\"Search keyword\"\r\n          />\r\n        </span>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n      <tr>\r\n        <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.header\">\r\n          {{ col.header }} <p-sortIcon [field]=\"col.field\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n      <tr>\r\n        <td *ngFor=\"let col of columns\">\r\n          {{ rowData[col.field] }}\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\">No customers found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { IGUIModel, IRowActionsModel } from \"app/shared/interfaces/user-views\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-row-functions\",\r\n  templateUrl: \"./row-functions.component.html\",\r\n  styleUrls: [\"./row-functions.component.scss\"]\r\n})\r\nexport class RowFunctionsComponent implements OnInit {\r\n  @Input() actions: IRowActionsModel;\r\n  @Input() element: any;\r\n  @Input() iconSize: string = \"font-medium-1\";\r\n  @Input() pageIndex: number = 1;\r\n  @Output() deleteRow = new EventEmitter<any>();\r\n  @Output() editRow = new EventEmitter<any>();\r\n  @Output() onAction = new EventEmitter<any>();\r\n  appSettings: AppHelpers = new AppHelpers();\r\n  parentView: string;\r\n  params;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.parentView = this.appSettings.getViewName;\r\n    this.params = {\r\n      parentView: this.parentView,\r\n      page: this.pageIndex,\r\n      ...this.appSettings.parentModuleIdParam,\r\n    };\r\n  }\r\n\r\n  onActionClicked(fun: IGUIModel, data?: any,) {\r\n    if (fun.name.toLocaleLowerCase().search(\"edit\") != -1) {\r\n      this.edit(data, fun);\r\n    }\r\n    if (fun.name.toLocaleLowerCase().search(\"delete\") != -1) {\r\n      this.delete(data);\r\n    } else {\r\n      this.onAction.emit({data, fun: fun});\r\n    }\r\n  }\r\n\r\n\r\n  edit(data, fun: IGUIModel) {\r\n    //let row = {} as any;\r\n    if (data) {\r\n      data.function = fun;\r\n    }\r\n    this.editRow.emit(data);\r\n  }\r\n\r\n  // delete row event\r\n  delete(data) {\r\n    this.deleteRow.emit(data);\r\n  }\r\n\r\n}\r\n","<!--  basic row functions -->\r\n<ng-container *ngIf=\"actions?.basic?.length > 0; else loading\">\r\n  <ng-container *ngFor=\"let fun of actions?.basic\">\r\n\r\n    <ng-container>\r\n      <a *ngIf=\"fun.path\"\r\n         [class]=\"fun.color\"\r\n         [matTooltip]=\"fun.name | translate\"\r\n         [routerLink]=\"[fun.path, element.id]\"\r\n         [queryParams]=\"params\"\r\n         id=\"row-{{fun.id}}\"\r\n         class=\"global-fun-btn\">\r\n        <i [ngClass]=\"[fun?.icon, iconSize]\" class=\"mr-2 p-0\"> </i>\r\n      </a>\r\n\r\n      <!-- fun without routerLink (internal row fun ) -->\r\n      <a *ngIf=\"!fun.path\"\r\n         [class]=\"fun.color\"\r\n         [matTooltip]=\"fun.name | translate\"\r\n         (click)=\"onActionClicked(fun, element)\"\r\n         id=\"row-{{fun.id}}\"\r\n         class=\"global-fun-btn\">\r\n        <i [ngClass]=\"[fun?.icon, iconSize]\" class=\"mr-2 p-0\"></i>\r\n      </a>\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-container>\r\n\r\n<!--  Dropdown row functions -->\r\n<div class=\"d-inline-block\" *ngIf=\"actions?.dropdown?.length > 0\">\r\n  <button\r\n    mat-icon-button\r\n    class=\"menu-row-dropdown font-medium-3 info global-fun-btn\"\r\n    [matMenuTriggerFor]=\"menuRow\"\r\n    [matTooltip]=\"'more functions'\">\r\n    <i class=\"fas fa-ellipsis-h\"></i>\r\n  </button>\r\n  <mat-menu #menuRow=\"matMenu\">\r\n    <ng-container\r\n      *ngIf=\"actions?.dropdown?.length > 0; else loading\">\r\n      <ng-container *ngFor=\"let fun of actions?.dropdown\">\r\n        <!-- <ng-container *ngIf=\"fun.parantId == null\"> -->\r\n        <!-- fun with routerLink (External row fun ) -->\r\n        <a mat-menu-item\r\n           *ngIf=\"fun.path\"\r\n           [class]=\"fun.color\"\r\n           [matTooltip]=\"fun.name | translate\"\r\n           [routerLink]=\"[fun.path, element.id]\"\r\n           [queryParams]=\"params\"\r\n           id=\"row-{{fun.id}}\"\r\n           (click)=\"$event.stopPropagation()\"\r\n           class=\"global-fun-btn\">\r\n          <i *ngIf=\"fun?.icon\" [ngClass]=\"[fun?.icon, iconSize]\" class=\"mr-2 p-0\"> </i>\r\n          {{ fun?.name | translate }}\r\n        </a>\r\n\r\n        <!-- fun without routerLink (internal row fun ) -->\r\n        <a mat-menu-item\r\n           *ngIf=\"!fun.path\"\r\n           [class]=\"fun.color\"\r\n           [matTooltip]=\"fun.name | translate\"\r\n           id=\"row-{{fun.id}}\"\r\n           (click)=\"onActionClicked(fun, element); $event.stopPropagation()\"\r\n           class=\"global-fun-btn\">\r\n          <i *ngIf=\"fun?.icon\" [ngClass]=\"[fun?.icon, iconSize]\"\r\n             class=\"mr-2 p-0\">\r\n          </i>\r\n          {{ fun?.name | translate }}\r\n        </a>\r\n        <!-- </ng-container> -->\r\n      </ng-container>\r\n    </ng-container>\r\n  </mat-menu>\r\n</div>\r\n\r\n<!-- Loading -->\r\n<ng-template #loading>\r\n  <p-skeleton width=\"5rem\" styleClass=\"p-mb-2\"></p-skeleton>\r\n</ng-template>\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild, ViewEncapsulation, } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"side-helping-menu\",\r\n  templateUrl: \"./side-helping-menu.component.html\",\r\n  styleUrls: [\"./side-helping-menu.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SideHelpingMenuComponent implements OnInit {\r\n  @Input() title: string;\r\n  @Input() subTitle: string;\r\n  @Input() icon: string = \"fas fa-info-circle\";\r\n   @ViewChild(\"helpingMenu\") helpingMenu: ElementRef;\r\n  size: string;\r\n  isOpen = false;\r\n  public config: any = {};\r\n\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  @Output() directionEvent = new EventEmitter<Object>();\r\n\r\n  ngOnInit() {}\r\n\r\n  toggleCustomizer() {\r\n    if (this.isOpen) {\r\n      this.renderer.removeClass(this.helpingMenu.nativeElement, \"open\");\r\n      this.isOpen = false;\r\n    }\r\n    else {\r\n      this.renderer.addClass(this.helpingMenu.nativeElement, \"open\");\r\n      this.isOpen = true;\r\n    }\r\n  }\r\n\r\n  closeCustomizer() {\r\n    this.renderer.removeClass(this.helpingMenu.nativeElement, \"open\");\r\n    this.isOpen = false;\r\n  }\r\n\r\n}\r\n","<!-- Theme customizer Starts-->\r\n<aside #helpingMenu\r\n       class=\"notification-sidebar customizer d-none d-lg-none d-xl-block helpingMenu\"\r\n       id=\"notification-sidebar\"\r\n       [ngClass]=\"{ open: isOpen }\">\r\n  <a class=\"notification-sidebar-close\" (click)=\"closeCustomizer()\">\r\n    <i class=\"ft-x font-medium-3 dark darken-1\"></i>\r\n  </a>\r\n  <a class=\"customizer-toggle bg-darkBlue\" id=\"customizer-toggle-icon\" (click)=\"toggleCustomizer()\">\r\n    <!-- <i class=\"ft-settings font-medium-1 spinner white align-middle\"></i> -->\r\n    <i class=\"font-medium-2 white align-middle\" [class]=\"icon\"></i>\r\n  </a>\r\n  <div [perfectScrollbar]\r\n       class=\"customizer-content p-3 ps-container ps-theme-dark\"\r\n       data-ps-id=\"df6a5ce4-a175-9172-4402-dabd98fc9c0a\">\r\n    <h4 class=\"text-uppercase\"> {{ title }}</h4>\r\n    <p> {{ subTitle }}</p>\r\n\r\n    <div class=\"ct-layout\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</aside>\r\n\r\n<!-- Theme customizer Ends-->\r\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { MatStepper } from \"@angular/material/stepper\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Btn } from \"app/shared/enums/btns.enum\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"steps-footer\",\r\n  templateUrl: \"./steps-footer.component.html\",\r\n  styleUrls: [\"./steps-footer.component.scss\"],\r\n})\r\nexport class StepsFooterComponent {\r\n  @Input() stepper: MatStepper;\r\n  @Input() parentParam: any;\r\n  @Input() pageParams: any;\r\n  @Input() url: string;\r\n  @Input() showCancel: boolean = true;\r\n  @Input() returnAfterFinish: boolean = true;\r\n  @Output() finish = new EventEmitter();\r\n  btn = Btn;\r\n\r\n  constructor(\r\n    public languageService: LanguageService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  next() {\r\n    // if (this.activeIndex < this.items.length - 1) {\r\n    //   this.activeIndex++;\r\n    // }\r\n\r\n    if (this.stepper.selectedIndex < this.stepper.steps.length - 1) {\r\n      this.stepper.next();\r\n    }\r\n  }\r\n\r\n  back() {\r\n    // if (this.activeIndex > 0) {\r\n    //   this.activeIndex--;\r\n    // }\r\n\r\n    if (this.stepper.selectedIndex > 0) {\r\n      this.stepper.previous();\r\n    }\r\n  }\r\n\r\n  onFinish() {\r\n    this.finish.emit();\r\n    if (this.returnAfterFinish)\r\n      this.router.navigate([this.url], { queryParams: this.pageParams });\r\n  }\r\n}\r\n","<mat-card-actions class=\"steps-footer long-btns\">\r\n  <!-- cancel button -->\r\n  <app-button *ngIf=\"stepper.selectedIndex == 0 && showCancel\"\r\n              label=\"General.cancel\"\r\n              [color]=\"btn.secondaryOutline\"\r\n              [routerLink]=\"[url]\"\r\n              [queryParams]=\"pageParams\"\r\n              [isRaisedBtn]=\"false\">\r\n  </app-button>\r\n\r\n  <!-- back button -->\r\n  <app-button *ngIf=\"stepper.selectedIndex > 0\"\r\n              [icon]=\"\r\n                      languageService.isArabic\r\n                        ? 'ft-chevron-right font-size-20'\r\n                        : 'ft-chevron-left font-size-20'\r\n                    \"\r\n              label=\"General.back\"\r\n              [color]=\"btn.light\"\r\n              [decreasePaddingWithIcon]=\"true\"\r\n              (click)=\"back()\"\r\n              [params]=\"parentParam\">\r\n  </app-button>\r\n\r\n  <!-- next button -->\r\n  <app-button *ngIf=\"stepper.selectedIndex < stepper.steps.length - 1\"\r\n              [icon]=\"\r\n                        languageService.isArabic\r\n                          ? 'ft-chevron-left font-size-20'\r\n                          : 'ft-chevron-right font-size-20'\r\n                      \"\r\n              label=\"General.next\"\r\n              [iconPositionBefore]=\"false\"\r\n              [color]=\"btn.darkBlue\"\r\n              [decreasePaddingWithIcon]=\"true\"\r\n              (click)=\"next()\"\r\n              [params]=\"parentParam\">\r\n  </app-button>\r\n\r\n  <!-- finish button -->\r\n  <app-button *ngIf=\"stepper.selectedIndex == stepper.steps.length - 1\"\r\n              label=\"General.finish\"\r\n              [color]=\"btn.darkBlue\"\r\n              (click)=\"onFinish()\">\r\n  </app-button>\r\n</mat-card-actions>\r\n","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-view-data-row-item\",\r\n  templateUrl: \"./view-data-row-item.component.html\",\r\n  styleUrls: [\"./view-data-row-item.component.scss\"],\r\n})\r\nexport class ViewDataRowItemComponent {\r\n  @Input() label: string;\r\n  @Input() value: /* string | number */ any;\r\n  // @Input() class: string;\r\n  @Input() isDate: boolean = false;\r\n  @Input() isBool: boolean = false;\r\n  @Input() textEditor: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n}\r\n","<!-- [class]=\"class\" -->\r\n<div class=\"col view-row\">\r\n  <p class=\"view-data-title\">{{ label | translate }}</p>\r\n  <p class=\"view-data-value\" *ngIf=\"!(isDate || isBool || textEditor)\">\r\n    {{ value ?? \"---\" }}\r\n    <ng-content></ng-content>\r\n  </p>\r\n\r\n  <p\r\n    class=\"view-data-value\"\r\n    style=\"word-break: break-word\"\r\n    *ngIf=\"textEditor\"\r\n    [innerHtml]=\"value ?? '---'\"\r\n  >\r\n    <ng-content></ng-content>\r\n  </p>\r\n\r\n  <p class=\"view-data-value\" *ngIf=\"isDate\">\r\n    {{ value ? (value | date : \"dd/MM/yyyy\") : \"---\" }}\r\n    <ng-content></ng-content>\r\n  </p>\r\n\r\n  <p class=\"view-data-value\" *ngIf=\"isBool\">\r\n    <span *ngIf=\"value\" class=\"success\">\r\n      {{ \"yes\" | translate }}\r\n    </span>\r\n    <span *ngIf=\"value == false\" class=\"danger\">\r\n      {{ \"no\" | translate }}\r\n    </span>\r\n    <span *ngIf=\"value == null\"> --- </span>\r\n    <ng-content></ng-content>\r\n  </p>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ElementRef,\r\n  Renderer2\r\n} from \"@angular/core\";\r\n import { Subscription } from \"rxjs\";\r\nimport { ConfigService } from \"../services/theme-options/config.service\";\r\nimport { CustomizerService } from \"../services/theme-options/customizer.service\";\r\n\r\n@Component({\r\n  selector: \"app-customizer\",\r\n  templateUrl: \"./customizer.component.html\",\r\n  styleUrls: [\"./customizer.component.scss\"]\r\n})\r\nexport class CustomizerComponent implements OnInit, OnDestroy {\r\n  @ViewChild(\"customizer\") customizer: ElementRef;\r\n\r\n  size: string;\r\n  isBgImageDisplay: boolean = true;\r\n  isOpen = true;\r\n  public config: any = {};\r\n  layoutSub: Subscription;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private configService: ConfigService,\r\n    public customizerService: CustomizerService,\r\n  ) {\r\n\r\n    this.config = this.configService.templateConf;\r\n    this.isOpen = !this.config.layout.customizer.hidden;\r\n\r\n    if (this.config.layout.sidebar.size) {\r\n      this.size = this.config.layout.sidebar.size;\r\n    }\r\n  }\r\n\r\n  @Output() directionEvent = new EventEmitter<Object>();\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n\r\n  changeSidebarWidth(value) {\r\n    this.size = value;\r\n    this.customizerService.changeSidebarWidth(value);\r\n  }\r\n\r\n  toggleCustomizer() {\r\n    if (this.isOpen) {\r\n      this.renderer.removeClass(this.customizer.nativeElement, \"open\");\r\n      this.isOpen = false;\r\n    } else {\r\n      this.renderer.addClass(this.customizer.nativeElement, \"open\");\r\n      this.isOpen = true;\r\n    }\r\n  }\r\n\r\n  closeCustomizer() {\r\n    this.renderer.removeClass(this.customizer.nativeElement, \"open\");\r\n    this.isOpen = false;\r\n  }\r\n\r\n    bgImageDisplay(e) {\r\n    if (e.target.checked) {\r\n      this.isBgImageDisplay = true;\r\n    } else {\r\n      this.isBgImageDisplay = false;\r\n    }\r\n    //emit event to FUll Layout\r\n    this.customizerService.bgImageDisplay(e);\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    if (this.layoutSub) {\r\n      this.layoutSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<!-- Theme customizer Starts-->\r\n<div\r\n  #customizer\r\n  class=\"customizer d-none d-lg-none d-xl-block\"\r\n  [ngClass]=\"{ open: isOpen }\"\r\n>\r\n  <a class=\"customizer-close\" (click)=\"closeCustomizer()\">\r\n    <i class=\"ft-x font-medium-3\"></i></a\r\n  ><a\r\n    class=\"customizer-toggle bg-primary\"\r\n    id=\"customizer-toggle-icon\"\r\n    (click)=\"toggleCustomizer()\"\r\n  >\r\n    <i class=\"ft-settings font-medium-1 spinner white align-middle\"></i>\r\n  </a>\r\n  <div\r\n    [perfectScrollbar]\r\n    class=\"customizer-content p-3 ps-container ps-theme-dark\"\r\n    data-ps-id=\"df6a5ce4-a175-9172-4402-dabd98fc9c0a\"\r\n  >\r\n    <h4 class=\"text-uppercase\">Theme Customizer</h4>\r\n    <p>Customize & Preview in Real Time</p>\r\n    <!-- Layout Options Starts-->\r\n    <div class=\"ct-layout\">\r\n      <hr />\r\n      <h6 class=\"mb-3 d-flex align-items-center\">\r\n        <i class=\"ft-layout font-medium-2 mr-2\"></i><span>Layout Options</span>\r\n      </h6>\r\n      <div class=\"layout-switch\">\r\n        <div class=\"radio radio-sm d-inline-block light-layout mr-3\">\r\n          <input\r\n            id=\"ll-switch\"\r\n            type=\"radio\"\r\n            name=\"layout-switch\"\r\n            [checked]=\"config.layout.variant === 'Light'\"\r\n            (click)=\"customizerService.switchLayout('light', isBgImageDisplay)\"\r\n          />\r\n          <label for=\"ll-switch\">Light</label>\r\n        </div>\r\n        <div class=\"radio radio-sm d-inline-block dark-layout mr-3\">\r\n          <input\r\n            id=\"dl-switch\"\r\n            type=\"radio\"\r\n            name=\"layout-switch\"\r\n            [checked]=\"config.layout.variant === 'Dark'\"\r\n            (click)=\"customizerService.switchLayout('dark', isBgImageDisplay)\"\r\n          />\r\n          <label for=\"dl-switch\">Dark</label>\r\n        </div>\r\n        <div class=\"radio radio-sm d-inline-block transparent-layout\">\r\n          <input\r\n            id=\"tl-switch\"\r\n            type=\"radio\"\r\n            name=\"layout-switch\"\r\n            [checked]=\"config.layout.variant === 'Transparent'\"\r\n            (click)=\"\r\n              customizerService.switchLayout('transparent', isBgImageDisplay)\r\n            \"\r\n          />\r\n          <label for=\"tl-switch\">Transparent</label>\r\n        </div>\r\n      </div>\r\n      <!-- Layout Options Ends-->\r\n    </div>\r\n    <!-- Navigation Options Starts-->\r\n    <div class=\"ct-menu-type\">\r\n      <hr />\r\n      <h6 class=\"mb-3 d-flex align-items-center\">\r\n        <i class=\"ft-credit-card font-medium-2 mr-2\"></i\r\n        ><span>Navigation Options</span>\r\n      </h6>\r\n      <div class=\"menu-switch\">\r\n        <div class=\"radio radio-sm d-inline-block menu-side mr-3\">\r\n          <input\r\n            id=\"menu-side\"\r\n            type=\"radio\"\r\n            name=\"menu-switch\"\r\n            [checked]=\"config.layout.menuPosition === 'Side'\"\r\n            (click)=\"customizerService.toggleMenuPosition('Side')\"\r\n          />\r\n          <label for=\"menu-side\">Vertical</label>\r\n        </div>\r\n        <div class=\"radio radio-sm d-inline-block menu-top\">\r\n          <input\r\n            id=\"menu-top\"\r\n            type=\"radio\"\r\n            name=\"menu-switch\"\r\n            [checked]=\"config.layout.menuPosition === 'Top'\"\r\n            (click)=\"customizerService.toggleMenuPosition('Top')\"\r\n          />\r\n          <label for=\"menu-top\">Horizontal</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Sidebar Options Starts-->\r\n    <!-- Navbar Types-->\r\n    <div class=\"ct-navbar-type\">\r\n      <hr />\r\n      <h6 class=\"mb-3 d-flex align-items-center\">\r\n        <i class=\"ft-more-horizontal font-medium-2 mr-2\"></i\r\n        ><span>Navbar Type</span>\r\n      </h6>\r\n      <div class=\"navbar-switch\">\r\n        <div class=\"radio radio-sm d-inline-block nav-static mr-3\">\r\n          <input\r\n            id=\"nav-static\"\r\n            type=\"radio\"\r\n            name=\"navbar-switch\"\r\n            [checked]=\"config.layout.navbar.type === 'Static'\"\r\n            (click)=\"customizerService.toggleNavbarType('Static')\"\r\n          />\r\n          <label for=\"nav-static\">Static</label>\r\n        </div>\r\n        <div class=\"radio radio-sm d-inline-block nav-fixed\">\r\n          <input\r\n            id=\"nav-fixed\"\r\n            type=\"radio\"\r\n            name=\"navbar-switch\"\r\n            [checked]=\"config.layout.navbar.type === 'Fixed'\"\r\n            (click)=\"customizerService.toggleNavbarType('Fixed')\"\r\n          />\r\n          <label for=\"nav-fixed\">Fixed</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Sidebar Options Starts-->\r\n    <div class=\"ct-bg-color\">\r\n      <hr />\r\n      <h6 class=\"sb-options d-flex align-items-center mb-3\">\r\n        <i class=\"ft-droplet font-medium-2 mr-2\"></i\r\n        ><span>Sidebar Color Options</span>\r\n      </h6>\r\n      <div class=\"cz-bg-color sb-color-options\">\r\n        <div class=\"row mb-3\">\r\n          <div\r\n            class=\"col px-2\"\r\n            *ngFor=\"\r\n              let color of customizerService.lightDarkLayoutGradientBGColors\r\n            \"\r\n          >\r\n            <span\r\n              class=\"{{ color.class }} d-block rounded\"\r\n              style=\"width: 30px; height: 30px\"\r\n              [attr.data-bg-color]=\"color.code\"\r\n              [ngClass]=\"{ selected: color.active }\"\r\n              (click)=\"customizerService.changeSidebarBGColor(color)\"\r\n            >\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col px-2\"\r\n            *ngFor=\"let color of customizerService.lightDarkLayoutSolidBGColors\"\r\n          >\r\n            <span\r\n              class=\"{{ color.class }} d-block rounded\"\r\n              style=\"width: 30px; height: 30px\"\r\n              [attr.data-bg-color]=\"color.code\"\r\n              [ngClass]=\"{ selected: color.active }\"\r\n              (click)=\"customizerService.changeSidebarBGColor(color)\"\r\n            >\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Sidebar Options Ends-->\r\n      <!-- Transparent BG Image Ends-->\r\n      <div class=\"tl-bg-img\">\r\n        <h6 class=\"d-flex align-items-center mb-3\">\r\n          <i class=\"ft-star font-medium-2 mr-2\"></i\r\n          ><span>Background Colors with Shades</span>\r\n        </h6>\r\n        <div class=\"cz-tl-bg-image row\">\r\n          <div\r\n            class=\"col-sm-3\"\r\n            *ngFor=\"\r\n              let color of customizerService.transparentLayoutBGColorsWithShades\r\n            \"\r\n          >\r\n            <div\r\n              class=\"rounded {{ color.class }} ct-glass-bg\"\r\n              [attr.data-bg-image]=\"color.class\"\r\n              [ngClass]=\"{ selected: color.active }\"\r\n              (click)=\"customizerService.changeSidebarTransparentBGColor(color)\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Transparent BG Image Ends-->\r\n    </div>\r\n    <!-- Sidebar BG Image Starts-->\r\n    <div class=\"ct-bg-image\">\r\n      <hr />\r\n      <h6 class=\"sb-bg-img d-flex align-items-center mb-3\">\r\n        <i class=\"ft-sidebar font-medium-2 mr-2\"></i\r\n        ><span>Sidebar Bg Image</span>\r\n      </h6>\r\n      <div class=\"cz-bg-image row sb-bg-img\">\r\n        <div\r\n          class=\"col-2 px-2\"\r\n          *ngFor=\"let img of customizerService.lightDarkLayoutBGImages\"\r\n        >\r\n          <img\r\n            class=\"rounded\"\r\n            alt=\"sidebar bg image\"\r\n            [src]=\"img.src\"\r\n            width=\"90\"\r\n            [ngClass]=\"{ selected: img.active }\"\r\n            (click)=\"customizerService.changeSidebarBgImage(img)\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <!-- Transparent Layout Bg color Options-->\r\n      <div class=\"tl-color-option\">\r\n        <h6 class=\"tl-color-options d-flex align-items-center mb-3\">\r\n          <i class=\"ft-droplet font-medium-2 mr-2\"></i\r\n          ><span>Background Colors</span>\r\n        </h6>\r\n        <div class=\"cz-tl-bg-color\">\r\n          <div class=\"row\">\r\n            <div\r\n              class=\"col\"\r\n              *ngFor=\"let color of customizerService.transparentLayoutBGColors\"\r\n            >\r\n              <span\r\n                class=\"{{ color.class }} d-block rounded  ct-color-bg\"\r\n                style=\"width: 30px; height: 30px\"\r\n                [attr.data-bg-color]=\"color.class\"\r\n                [ngClass]=\"{ selected: color.active }\"\r\n                (click)=\"\r\n                  customizerService.changeSidebarTransparentBGColor(color)\r\n                \"\r\n              >\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Transparent Layout Bg color Ends-->\r\n    </div>\r\n    <!-- Sidebar BG Image Toggle Starts-->\r\n    <div class=\"ct-bg-image-toggler\">\r\n      <div class=\"togglebutton toggle-sb-bg-img\">\r\n        <hr />\r\n        <div>\r\n          <span>Sidebar Bg Image</span>\r\n          <div class=\"float-right\">\r\n            <div class=\"checkbox\">\r\n              <input\r\n                class=\"cz-bg-image-display\"\r\n                id=\"sidebar-bg-img\"\r\n                type=\"checkbox\"\r\n                checked\r\n                (change)=\"bgImageDisplay($event)\"\r\n              />\r\n              <label for=\"sidebar-bg-img\"></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Sidebar BG Image Toggle Ends-->\r\n    <!-- Compact Menu Starts-->\r\n    <div class=\"ct-compact-toggler\">\r\n      <hr />\r\n      <div class=\"togglebutton\">\r\n        <div>\r\n          <span>Compact Menu</span>\r\n          <div class=\"float-right\">\r\n            <div class=\"checkbox\">\r\n              <input\r\n                class=\"cz-compact-menu\"\r\n                id=\"cz-compact-menu\"\r\n                type=\"checkbox\"\r\n                [checked]=\"config.layout.sidebar.collapsed\"\r\n                (change)=\"customizerService.toggleCompactMenu($event)\"\r\n              />\r\n              <label for=\"cz-compact-menu\"></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Compact Menu Ends-->\r\n    </div>\r\n\r\n    <!-- Sidebar Width Starts-->\r\n    <div class=\"ct-sidebar-size\" *ngIf=\"!config.layout.sidebar.collapsed\">\r\n      <hr />\r\n      <p>Sidebar Width</p>\r\n      <div\r\n        class=\"cz-sidebar-width btn-group btn-group-toggle\"\r\n        id=\"cz-sidebar-width\"\r\n        data-toggle=\"buttons\"\r\n      >\r\n        <label\r\n          class=\"btn btn-outline-primary\"\r\n          [ngClass]=\"{ active: size === 'sidebar-sm' }\"\r\n        >\r\n          <input\r\n            id=\"cz-btn-radio-1\"\r\n            type=\"radio\"\r\n            name=\"cz-btn-radio\"\r\n            value=\"sidebar-sm\"\r\n            [checked]=\"size === 'sidebar-sm'\"\r\n            (change)=\"changeSidebarWidth('sidebar-sm')\"\r\n          /><span>Small</span>\r\n        </label>\r\n        <label\r\n          class=\"btn btn-outline-primary\"\r\n          [ngClass]=\"{ active: size === 'sidebar-md' }\"\r\n        >\r\n          <input\r\n            id=\"cz-btn-radio-2\"\r\n            type=\"radio\"\r\n            name=\"cz-btn-radio\"\r\n            value=\"sidebar-md\"\r\n            [checked]=\"size === 'sidebar-md'\"\r\n            (change)=\"changeSidebarWidth('sidebar-md')\"\r\n          /><span>Medium</span>\r\n        </label>\r\n        <label\r\n          class=\"btn btn-outline-primary\"\r\n          [ngClass]=\"{ active: size === 'sidebar-lg' }\"\r\n        >\r\n          <input\r\n            id=\"cz-btn-radio-3\"\r\n            type=\"radio\"\r\n            name=\"cz-btn-radio\"\r\n            value=\"sidebar-lg\"\r\n            [checked]=\"size === 'sidebar-lg'\"\r\n            (change)=\"changeSidebarWidth('sidebar-lg')\"\r\n          /><span>Large</span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <!-- Sidebar Width Ends-->\r\n  </div>\r\n</div>\r\n<!-- Theme customizer Ends-->\r\n","import {Directive, Host, Input, Optional, Renderer2, Self, ViewContainerRef} from '@angular/core';\r\nimport {MatButton} from '@angular/material/button';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\n\r\n@Directive({\r\n  selector: '[paginatorStyle]'\r\n})\r\nexport class PaginatorStyleDirective {\r\n\r\n\r\n  private _pageGapTxt = '...';\r\n  private _rangeStart: number;\r\n  private _rangeEnd: number;\r\n  private _buttons = [];\r\n  private _curPageObj: any = {\r\n    length: 0,\r\n    pageIndex: 0,\r\n    pageSize: 0,\r\n    previousPageIndex: 0,\r\n  };\r\n\r\n  @Input()\r\n  get showTotalPages(): number {\r\n    return this._showTotalPages;\r\n  }\r\n\r\n  set showTotalPages(value: number) {\r\n    this._showTotalPages = value % 2 == 0 ? value + 1 : value;\r\n  }\r\n\r\n  private _showTotalPages = 2;\r\n\r\n  get inc(): number {\r\n    return this._showTotalPages % 2 == 0\r\n      ? this.showTotalPages / 2\r\n      : (this.showTotalPages - 1) / 2;\r\n  }\r\n\r\n  get numOfPages(): number {\r\n    return this.matPag.getNumberOfPages();\r\n  }\r\n\r\n  get lastPageIndex(): number {\r\n    return this.matPag.getNumberOfPages() - 1;\r\n  }\r\n\r\n  @Input()\r\n  set refreshButtons(numRows: number) {\r\n    if (numRows > 0) {\r\n      this.buildPageNumbers();\r\n      this.matPag.firstPage();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    @Host() @Self() @Optional() private readonly matPag: MatPaginator,\r\n    private vr: ViewContainerRef,\r\n    private ren: Renderer2\r\n  ) {\r\n    console.log('doooone');\r\n\r\n    //to rerender buttons on items per page change and first, last, next and prior buttons\r\n    this.matPag.page.subscribe((e: any) => {\r\n      if (\r\n        this._curPageObj.pageSize != e.pageSize &&\r\n        this._curPageObj.pageIndex != 0\r\n      ) {\r\n        e.pageIndex = 0;\r\n        this._rangeStart = 0;\r\n        this._rangeEnd = this._showTotalPages - 1;\r\n      }\r\n      this._curPageObj = e;\r\n\r\n      this.initPageRange();\r\n    });\r\n  }\r\n\r\n  private buildPageNumbers() {\r\n    let roleSet = localStorage.getItem('role');\r\n\r\n    const actionContainer = this.vr.element.nativeElement.querySelector(\r\n      'div.mat-paginator-range-actions'\r\n    );\r\n    const nextPageNode = this.vr.element.nativeElement.querySelector(\r\n      'button.mat-paginator-navigation-next'\r\n    );\r\n    //  const prevButtonCount = this._buttons.length;\r\n\r\n    // remove buttons before creating new ones\r\n    if (this._buttons.length > 0) {\r\n      this._buttons.forEach((button) => {\r\n        this.ren.removeChild(actionContainer, button);\r\n      });\r\n      //Empty state array\r\n      this._buttons.length = 0;\r\n    }\r\n\r\n    //initialize next page and last page buttons\r\n    if (this._buttons.length == 0) {\r\n      let nodeArray =\r\n        this.vr.element.nativeElement.childNodes[0].childNodes[0].childNodes[2]\r\n          .childNodes;\r\n      setTimeout(() => {\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          if (nodeArray[i].nodeName === 'BUTTON') {\r\n            if (nodeArray[i].innerHTML.length > 100 && nodeArray[i].disabled) {\r\n              if (roleSet == 'crew') {\r\n                this.ren.setStyle(\r\n                  nodeArray[i],\r\n                  'background-color',\r\n                  'rgba(250, 250, 250, 1)'\r\n                );\r\n              } else if (roleSet == 'shipping' || roleSet == 'isat') {\r\n                this.ren.setStyle(\r\n                  nodeArray[i],\r\n                  'background-color',\r\n                  'rgba(255, 255, 255, 255)'\r\n                );\r\n              } else {\r\n                this.ren.setStyle(\r\n                  nodeArray[i],\r\n                  'background-color',\r\n                  'rgba(255, 255, 255, 255)'\r\n                );\r\n              }\r\n              this.ren.setStyle(nodeArray[i], 'color', 'white');\r\n              this.ren.setStyle(nodeArray[i], 'color', 'black');\r\n              this.ren.setStyle(nodeArray[i], 'margin', '.5%');\r\n            } else if (\r\n              nodeArray[i].innerHTML.length > 100 &&\r\n              !nodeArray[i].disabled\r\n            ) {\r\n              if (roleSet == 'crew') {\r\n                this.ren.setStyle(\r\n                  nodeArray[i],\r\n                  'background-color',\r\n                  'rgba(250, 250, 250, 1)'\r\n                );\r\n              } else if (roleSet == 'shipping' || roleSet == 'isat') {\r\n                this.ren.setStyle(\r\n                  nodeArray[i],\r\n                  'background-color',\r\n                  'rgba(255, 255, 255, 255)'\r\n                );\r\n              } else {\r\n                this.ren.setStyle(\r\n                  nodeArray[i],\r\n                  'background-color',\r\n                  'rgba(255, 255, 255, 255)'\r\n                );\r\n              }\r\n              this.ren.setStyle(nodeArray[i], 'color', 'white');\r\n              this.ren.setStyle(nodeArray[i], 'color', 'black');\r\n              this.ren.setStyle(nodeArray[i], 'margin', '.5%');\r\n              if (roleSet == 'crew') {\r\n                this.ren.setStyle(nodeArray[i], 'background-color', '#fafafa');\r\n              } else if (roleSet == 'shipping' || roleSet == 'isat') {\r\n                this.ren.setStyle(nodeArray[i], 'background-color', '#fff');\r\n              } else {\r\n                this.ren.setStyle(nodeArray[i], 'background-color', '#fff');\r\n              }\r\n              this.ren.setStyle(nodeArray[i], 'box-shadow', 'none');\r\n            } else if (nodeArray[i].disabled) {\r\n              if (roleSet == 'crew') {\r\n                this.ren.setStyle(nodeArray[i], 'background-color', '#fafafa');\r\n              } else if (roleSet == 'shipping' || roleSet == 'isat') {\r\n                this.ren.setStyle(nodeArray[i], 'background-color', '#fafafa');\r\n              } else {\r\n                this.ren.setStyle(nodeArray[i], 'background-color', '#fff');\r\n              }\r\n              this.ren.setStyle(nodeArray[i], 'box-shadow', 'none');\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < this.numOfPages; i++) {\r\n      if (i >= this._rangeStart && i <= this._rangeEnd) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(i, this.matPag.pageIndex),\r\n          nextPageNode\r\n        );\r\n      }\r\n\r\n      if (i == this._rangeEnd) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(this._pageGapTxt, this._rangeEnd),\r\n          nextPageNode\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButton(i: any, pageIndex: number): any {\r\n    let roleSet = localStorage.getItem('role');\r\n\r\n    const linkBtn: MatButton = this.ren.createElement('button');\r\n    this.ren.addClass(linkBtn, 'mat-mini-fab');\r\n    this.ren.setStyle(linkBtn, 'margin', '1%');\r\n    if (roleSet == 'crew') {\r\n      this.ren.setStyle(linkBtn, 'background-color', '#fafafa');\r\n    } else if (roleSet == 'shipping' || roleSet == 'isat') {\r\n      this.ren.setStyle(linkBtn, 'background-color', '#fff');\r\n    } else {\r\n      this.ren.setStyle(linkBtn, 'background-color', '#fff');\r\n    }\r\n    this.ren.setStyle(linkBtn, 'box-shadow', 'none');\r\n\r\n    const pagingTxt = isNaN(i) ? this._pageGapTxt : +(i + 1);\r\n    const text = this.ren.createText(pagingTxt + '');\r\n\r\n    this.ren.addClass(linkBtn, 'mat-custom-page');\r\n    switch (i) {\r\n      case pageIndex:\r\n        this.ren.setAttribute(linkBtn, 'disabled', 'disabled');\r\n        break;\r\n      case this._pageGapTxt:\r\n        let newIndex = this._curPageObj.pageIndex + this._showTotalPages;\r\n\r\n        if (newIndex >= this.numOfPages) newIndex = this.lastPageIndex;\r\n\r\n        if (pageIndex != this.lastPageIndex) {\r\n          this.ren.listen(linkBtn, 'click', () => {\r\n            console.log('working: ', pageIndex);\r\n            this.switchPage(newIndex);\r\n          });\r\n        }\r\n\r\n        if (pageIndex == this.lastPageIndex) {\r\n          this.ren.setAttribute(linkBtn, 'disabled', 'disabled');\r\n        }\r\n        break;\r\n      default:\r\n        this.ren.listen(linkBtn, 'click', () => {\r\n          this.switchPage(i);\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.ren.appendChild(linkBtn, text);\r\n    //Add button to private array for state\r\n    this._buttons.push(linkBtn);\r\n    return linkBtn;\r\n  }\r\n\r\n  //calculates the button range based on class input parameters and based on current page index value. Used to render new buttons after event.\r\n  private initPageRange(): void {\r\n    const middleIndex = (this._rangeStart + this._rangeEnd) / 2;\r\n\r\n    this._rangeStart = this.calcRangeStart(middleIndex);\r\n    this._rangeEnd = this.calcRangeEnd(middleIndex);\r\n    this.buildPageNumbers();\r\n  }\r\n\r\n  //Helper function To calculate start of button range\r\n  private calcRangeStart(middleIndex: number): number {\r\n    switch (true) {\r\n      case this._curPageObj.pageIndex == 0 && this._rangeStart != 0:\r\n        return 0;\r\n      case this._curPageObj.pageIndex > this._rangeEnd:\r\n        return this._curPageObj.pageIndex + this.inc > this.lastPageIndex\r\n          ? this.lastPageIndex - this.inc * 2\r\n          : this._curPageObj.pageIndex - this.inc;\r\n      case this._curPageObj.pageIndex > this._curPageObj.previousPageIndex &&\r\n      this._curPageObj.pageIndex > middleIndex &&\r\n      this._rangeEnd < this.lastPageIndex:\r\n        return this._rangeStart + 1;\r\n      case this._curPageObj.pageIndex < this._curPageObj.previousPageIndex &&\r\n      this._curPageObj.pageIndex < middleIndex &&\r\n      this._rangeStart > 0:\r\n        return this._rangeStart - 1;\r\n      default:\r\n        return this._rangeStart;\r\n    }\r\n  }\r\n\r\n  //Helpter function to calculate end of button range\r\n  private calcRangeEnd(middleIndex: number): number {\r\n    switch (true) {\r\n      case this._curPageObj.pageIndex == 0 &&\r\n      this._rangeEnd != this._showTotalPages:\r\n        return this._showTotalPages - 1;\r\n      case this._curPageObj.pageIndex > this._rangeEnd:\r\n        return this._curPageObj.pageIndex + this.inc > this.lastPageIndex\r\n          ? this.lastPageIndex\r\n          : this._curPageObj.pageIndex + 1;\r\n      case this._curPageObj.pageIndex > this._curPageObj.previousPageIndex &&\r\n      this._curPageObj.pageIndex > middleIndex &&\r\n      this._rangeEnd < this.lastPageIndex:\r\n        return this._rangeEnd + 1;\r\n      case this._curPageObj.pageIndex < this._curPageObj.previousPageIndex &&\r\n      this._curPageObj.pageIndex < middleIndex &&\r\n      this._rangeStart >= 0 &&\r\n      this._rangeEnd > this._showTotalPages - 1:\r\n        return this._rangeEnd - 1;\r\n      default:\r\n        return this._rangeEnd;\r\n    }\r\n  }\r\n\r\n  //Helper function to switch page on non first, last, next and previous buttons only.\r\n  private switchPage(i: number): void {\r\n    const previousPageIndex = this.matPag.pageIndex;\r\n    this.matPag.pageIndex = i;\r\n    this.matPag['_emitPageEvent'](previousPageIndex);\r\n    this.initPageRange();\r\n  }\r\n\r\n  //Initialize default state after view init\r\n  public ngAfterViewInit() {\r\n    this._rangeStart = 0;\r\n    this._rangeEnd = this._showTotalPages - 1;\r\n    this.initPageRange();\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[appScrollableHorizontal]\"\r\n})\r\nexport class ScrollableHorizontalDirective {\r\n  private isDragging: boolean = false;\r\n  private startX: number = 0;\r\n  private startScrollX: number = 0;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener(\"mousedown\", [\"$event\"])\r\n  onMouseDown(event: MouseEvent) {\r\n    this.isDragging = true;\r\n    this.startX = event.clientX;\r\n    this.startScrollX = this.el.nativeElement.scrollLeft;\r\n  }\r\n\r\n  @HostListener(\"document:mouseup\")\r\n  onMouseUp() {\r\n    this.isDragging = false;\r\n  }\r\n\r\n  @HostListener(\"document:mousemove\", [\"$event\"])\r\n  onMouseMove(event: MouseEvent) {\r\n    if (this.isDragging) {\r\n      const deltaX = event.clientX - this.startX;\r\n      this.el.nativeElement.scrollLeft = this.startScrollX - deltaX;\r\n    }\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { SidebarLinkDirective } from \"./sidebar-link.directive\";\r\n\r\n@Directive({\r\n  selector: \"[appSidebarAnchorToggle]\"\r\n})\r\nexport class SidebarAnchorToggleDirective {\r\n  protected navlink: SidebarLinkDirective;\r\n\r\n  constructor(\r\n    @Inject(SidebarLinkDirective) navlink: SidebarLinkDirective\r\n  ) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener(\"click\", [\"$event\"])\r\n  onClick() {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import { Directive, OnInit } from \"@angular/core\";\r\nimport { SidebarLinkDirective } from \"./sidebar-link.directive\";\r\n\r\n@Directive({\r\n\tselector: \"[appSidebarDropdown]\",\r\n})\r\nexport class SidebarDropdownDirective implements OnInit {\r\n\tprotected navlinks: Array<SidebarLinkDirective> = [];\r\n\r\n\tpublic ngOnInit(): any {\r\n\t\t//write your code here!\r\n\t}\r\n\r\n\tconstructor() {}\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit\r\n} from \"@angular/core\";\r\nimport { SidebarDirective } from \"./sidebar.directive\";\r\n\r\n@Directive({\r\n  selector: \"[appSidebarlink]\",\r\n})\r\nexport class SidebarLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public parent: string;\r\n\r\n  @Input()\r\n  public level: number;\r\n\r\n  @Input()\r\n  public hasSub: boolean;\r\n\r\n  @Input()\r\n  public path: string;\r\n\r\n  @HostBinding(\"class.open\")\r\n  @Input()\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n  set open(value: boolean) {\r\n    this._open = value;\r\n  }\r\n\r\n  @HostBinding(\"class.sidebar-group-active\")\r\n  @Input()\r\n  get sidebarGroupActive(): boolean {\r\n    return this._sidebarGroupActive;\r\n  }\r\n  set sidebarGroupActive(value: boolean) {\r\n    this._sidebarGroupActive = value;\r\n  }\r\n\r\n  @HostBinding(\"class.nav-collapsed-open\")\r\n  @Input()\r\n  get navCollapsedOpen(): boolean {\r\n    return this._navCollapsedOpen;\r\n  }\r\n  set navCollapsedOpen(value: boolean) {\r\n    this._navCollapsedOpen = value;\r\n  }\r\n\r\n  protected _open: boolean;\r\n  protected _sidebarGroupActive: boolean;\r\n  protected _navCollapsedOpen: boolean;\r\n\r\n  protected sideNav: SidebarDirective;\r\n\r\n  public constructor(@Inject(SidebarDirective) sideNav: SidebarDirective) {\r\n    this.sideNav = sideNav;\r\n  }\r\n\r\n  public ngOnInit(): any {\r\n    this.sideNav.addLink(this);\r\n  }\r\n\r\n  public ngOnDestroy(): any {}\r\n\r\n  //when side menu (vertical menu) item gets clicked\r\n  public toggle(): any {\r\n    this.open = !this.open;\r\n    if (this.open) {\r\n      this.sideNav.closeOtherLinks(this);\r\n    }\r\n    if (!this.open && this.level?.toString() === \"1\" && this.hasSub) {\r\n      this.sidebarGroupActive = false;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ConfigService } from \"../services/theme-options/config.service\";\r\nimport { SidebarLinkDirective } from \"./sidebar-link.directive\";\r\n\r\n@Directive({ selector: \"[appSidebar]\" })\r\nexport class SidebarDirective implements OnInit, AfterViewInit, OnDestroy {\r\n  @HostBinding(\"class.expanded\")\r\n  @Input()\r\n  get navExpanded(): boolean {\r\n    return this._navExpanded;\r\n  }\r\n  set navExpanded(value: boolean) {\r\n    this._navExpanded = value;\r\n  }\r\n\r\n  protected navlinks: Array<SidebarLinkDirective> = [];\r\n  layoutSub: Subscription;\r\n  public config: any = {};\r\n  mouseEnter = false;\r\n  sidebarExpanded = true;\r\n  protected _navExpanded: boolean;\r\n  protected innerWidth: any;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private configService: ConfigService,\r\n   ) {\r\n    this.config = this.configService.templateConf;\r\n    this.sidebarExpanded = !this.config.layout.sidebar.collapsed;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.innerWidth = window.innerWidth;\r\n    this.layoutSub = this.configService.templateConf$.subscribe(\r\n      (templateConf) => {\r\n        if (templateConf) {\r\n          this.config = templateConf;\r\n        }\r\n        this.loadLayout();\r\n        this.cdr.markForCheck();\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.layoutSub) {\r\n      this.layoutSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  //load layout when changes in the config\r\n  loadLayout() {\r\n    this.sidebarExpanded = !this.config.layout.sidebar.collapsed;\r\n    if (this.config.layout.sidebar.collapsed && !this.mouseEnter) {\r\n      this.setSidebarGroupActiveCollapsed();\r\n      this.navExpanded = false;\r\n    } else {\r\n      this.setSidebarGroupActive();\r\n      this.navExpanded = true;\r\n    }\r\n  }\r\n\r\n  //add menu links to the link list\r\n  public addLink(link: SidebarLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  //close all other menu items other than active one\r\n  public closeOtherLinks(openLink: SidebarLinkDirective): void {\r\n    this.navlinks.forEach((link: SidebarLinkDirective) => {\r\n      if (\r\n        link != openLink &&\r\n        (openLink?.level?.toString() === \"1\" || link.level === openLink?.level)\r\n      ) {\r\n        link.open = false;\r\n        link.sidebarGroupActive = false;\r\n      } else if (\r\n        link === openLink &&\r\n        openLink?.level?.toString() === \"1\" &&\r\n        link.hasSub === true\r\n      ) {\r\n        link.sidebarGroupActive = true;\r\n      } else if (\r\n        link === openLink &&\r\n        openLink?.level?.toString() === \"1\" &&\r\n        link.hasSub === false\r\n      ) {\r\n        link.sidebarGroupActive = false;\r\n        link.open = false;\r\n      } else if (\r\n        link === openLink &&\r\n        openLink?.level?.toString() != \"1\" &&\r\n        link.hasSub === false\r\n      ) {\r\n        link.open = false;\r\n        link.sidebarGroupActive = false;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {}\r\n\r\n  // call when sidebar toggle is collapsed but still in expand mode on mouse hover\r\n  public setSidebarGroupActive(): void {\r\n    if (this.navlinks.length > 0) {\r\n      this.navlinks.forEach((link: SidebarLinkDirective) => {\r\n        link.sidebarGroupActive = false;\r\n        link.navCollapsedOpen = false;\r\n      });\r\n      let matched = this.navlinks.find((link) => link.path === this.router.url);\r\n      if (matched) {\r\n        let parent = this.navlinks.find(\r\n          (link) =>\r\n            link.parent === matched.parent &&\r\n            link.level?.toString() === \"1\" &&\r\n            link.hasSub === true\r\n        );\r\n        if (parent) {\r\n          parent.sidebarGroupActive = true;\r\n          parent.navCollapsedOpen = false;\r\n          parent.open = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // call when sidebar toggle is collapsed and is in collapse mode on mouse out\r\n  public setSidebarGroupActiveCollapsed(): void {\r\n    this.closeOtherLinks(\r\n      this.navlinks.find((link) => link.path === this.router.url)\r\n    );\r\n    if (this.navlinks.length > 0) {\r\n      this.navlinks.forEach((link: SidebarLinkDirective) => {\r\n        link.sidebarGroupActive = false;\r\n        link.navCollapsedOpen = false;\r\n      });\r\n      let matched = this.navlinks.find((link) => link.path === this.router.url);\r\n      if (matched) {\r\n        let parent = this.navlinks.find(\r\n          (link) =>\r\n            link.parent === matched.parent &&\r\n            link.level?.toString() === \"1\" &&\r\n            link.hasSub === true\r\n        );\r\n        if (parent) {\r\n          parent.sidebarGroupActive = true;\r\n          parent.navCollapsedOpen = true;\r\n          parent.open = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // mouse enter event of side menu\r\n  @HostListener(\"mouseenter\", [\"$event\"])\r\n  onMouseOver(e: any) {\r\n    this.mouseEnter = true;\r\n    if (this.config.layout.sidebar.collapsed) {\r\n      this.setSidebarGroupActive();\r\n      this.navExpanded = true;\r\n    }\r\n  }\r\n\r\n  // mouse leave event of side menu\r\n  @HostListener(\"mouseleave\", [\"$event\"])\r\n  onMouseOut(e: any) {\r\n    this.mouseEnter = false;\r\n    if (this.config.layout.sidebar.collapsed) {\r\n      this.setSidebarGroupActiveCollapsed();\r\n      this.navExpanded = false;\r\n    }\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nimport * as screenfull from 'screenfull';\r\n\r\n@Directive({\r\n  selector: '[appToggleFullscreen]'\r\n})\r\nexport class ToggleFullscreenDirective {\r\n\r\n  @HostListener('click') onClick() {\r\n    if (screenfull.isEnabled) {\r\n      screenfull.toggle();\r\n    }\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { TopMenuLinkDirective } from \"./topmenu-link.directive\";\r\n\r\n@Directive({\r\n  selector: \"[appTopMenuAnchorToggle]\"\r\n})\r\nexport class TopMenuAnchorToggleDirective {\r\n  protected navlink: TopMenuLinkDirective;\r\n\r\n  constructor(\r\n    @Inject(TopMenuLinkDirective) navlink: TopMenuLinkDirective\r\n  ) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  // @HostListener(\"click\", [\"$event\"])\r\n  // onClick() {\r\n  //   this.navlink.toggle();\r\n  // }\r\n\r\n  @HostListener(\"mouseenter\", [\"$event\"])\r\n  onMouseOver(e: any) {\r\n    this.navlink.openDropdown();\r\n\r\n  }\r\n\r\n  // @HostListener(\"mouseleave\", [\"$event\"])\r\n  // onMouseOut(e: any) {\r\n  //   this.navlink.toggle();\r\n  // }\r\n\r\n}\r\n","import { Directive, OnInit } from \"@angular/core\";\r\nimport { TopMenuLinkDirective } from \"./topmenu-link.directive\";\r\n\r\n@Directive({\r\n\tselector: \"[appTopMenuDropdown]\",\r\n})\r\nexport class TopMenuDropdownDirective implements OnInit {\r\n\tprotected navlinks: Array<TopMenuLinkDirective> = [];\r\n\r\n\tpublic ngOnInit(): any {\r\n\t\t//write your code here!\r\n\t}\r\n\r\n\tconstructor() {}\r\n}\r\n","import { Directive, HostBinding, Inject, Input, OnDestroy, OnInit } from \"@angular/core\";\r\n\r\nimport { TopMenuDirective } from \"./topmenu.directive\";\r\n\r\n@Directive({\r\n\tselector: \"[appTopMenulink]\",\r\n})\r\nexport class TopMenuLinkDirective implements OnInit, OnDestroy {\r\n\t@Input()\r\n\tpublic parent: string;\r\n\r\n\t@Input()\r\n\tpublic level: number;\r\n\r\n\t@HostBinding(\"class.show\")\r\n\t@Input()\r\n\tget show(): boolean {\r\n\t\treturn this._show;\r\n\t}\r\n\tset show(value: boolean) {\r\n\t\tthis._show = value;\r\n\t\tif (value) {\r\n\t\t\tthis.topNav.closeOtherLinks(this);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _show: boolean;\r\n\r\n\tprotected topNav: TopMenuDirective;\r\n\r\n\tpublic constructor(@Inject(TopMenuDirective) topNav: TopMenuDirective) {\r\n\t\tthis.topNav = topNav;\r\n\t}\r\n\r\n\tpublic ngOnInit(): any {\r\n\t\tthis.topNav.addLink(this);\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): any {}\r\n\r\n\t// public toggle(): any {\r\n\t//   this.show = !this.show;\r\n\t// }\r\n\r\n\tpublic openDropdown(): any {\r\n\t\tthis.show = true;\r\n\t}\r\n}\r\n","import { Directive, HostListener, OnInit } from '@angular/core';\r\nimport { TopMenuLinkDirective } from './topmenu-link.directive';\r\n\r\n@Directive({ selector: '[appTopMenu]' })\r\nexport class TopMenuDirective implements OnInit {\r\n\r\n  protected navlinks: Array<TopMenuLinkDirective> = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public addLink(link: TopMenuLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  public closeOtherLinks(openLink: TopMenuLinkDirective): void {\r\n    this.navlinks.forEach((link: TopMenuLinkDirective) => {\r\n      if (link != openLink && (openLink.level.toString() === \"1\" || link.level === openLink.level)) {\r\n        link.show = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener(\"mouseleave\", [\"$event\"])\r\n  onMouseOut(e: any) {\r\n    this.navlinks.forEach((link: TopMenuLinkDirective) => {\r\n      link.show = false;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","export enum Btn {\r\n  primary = 'btn-primary',\r\n  secondary = 'btn-secondary',\r\n  success = 'btn-success',\r\n  danger = 'btn-danger',\r\n  warning = 'btn-warning',\r\n  info = 'btn-info',\r\n  light = 'btn-light',\r\n  dark = 'btn-dark',\r\n\r\n  // light\r\n  primaryLight = 'bg-light-primary',\r\n  secondaryLight = 'bg-light-secondary',\r\n  successLight = 'bg-light-success',\r\n  dangerLight = 'bg-light-danger',\r\n  warningLight = 'bg-light-warning',\r\n  infoLight = 'bg-light-info',\r\n\r\n  // outlined\r\n  primaryOutline = 'btn-outline-primary',\r\n  secondaryOutline = 'btn-outline-secondary',\r\n  successOutline = 'btn-outline-success',\r\n  dangerOutline = 'btn-outline-danger',\r\n  warningOutline = 'btn-outline-warning',\r\n  infoOutline = 'btn-outline-info',\r\n  lightOutline = 'btn-outline-light',\r\n  darkOutline = 'btn-outline-dark',\r\n\r\n\r\n  // custom buttons\r\n  lightGreen = 'btn-lightGreen',\r\n  darkBlue = 'btn-darkBlue',\r\n  darkBlueBorder = 'btn-darkBlue-border', // background > white & border > darkBlue\r\n}\r\n","export enum EDashboardPropertiesType {\r\n  number = 'number',\r\n  text = 'text',\r\n}\r\n","export const ImgFormat = [\r\n  \"jpeg\",\r\n  \"jpg\",\r\n  \"png\",\r\n  \"gif\",\r\n  \"svg\",\r\n  \"webp\",\r\n  \"pjp\",\r\n  \"pjpeg\",\r\n  \"jfif\",\r\n];\r\n\r\nexport const PdfFormat = \"pdf\";\r\n\r\nexport const WordFormat = [\r\n  \"doc\",\r\n  \"docm\",\r\n  \"docx\",\r\n  \"dot\",\r\n  \"dotm\",\r\n  \"dotx\",\r\n  \"wps\",\r\n  \"txt\",\r\n  \"odt\",\r\n  \"wps\",\r\n  \"xml\",\r\n];\r\n\r\nexport const ExcelFormat = [\r\n  \"csv\",\r\n  \"dbf\",\r\n  \"xls\",\r\n  \"xlsb\",\r\n  \"xlsm\",\r\n  \"xlsx\",\r\n  \"xlt\",\r\n  \"xltm\",\r\n  \"xltx\",\r\n  \"xlw\",\r\n   \"xps\",\r\n];\r\n","export enum EInsuranceSide {\r\n\toutside_Company = 1,\r\n\tinside_Company = 2,\r\n}\r\nexport namespace EInsuranceSide {\r\n\texport function getValue(gender: EInsuranceSide | number): string {\r\n\t\tswitch (gender) {\r\n\t\t\tcase EInsuranceSide.outside_Company:\r\n\t\t\t\treturn \"outside_Company\";\r\n\t\t\tcase EInsuranceSide.inside_Company:\r\n\t\t\t\treturn \"inside_Company\";\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n}\r\n","export enum Languages {\r\n\tar = \"ar\",\r\n\ten = \"en\",\r\n}\r\n","export enum InputAppearance {\r\n  legacy = \"legacy\",\r\n  standard = \"standard\",\r\n  fill = \"fill\",\r\n  outline = \"outline\",\r\n}\r\n\r\nexport enum MatColors {\r\n  primary = \"primary\",\r\n  accent = \"accent\",\r\n  warn = \"warn\",\r\n}\r\n","export enum MessageTypes {\r\n  Success = 1,\r\n  Fail = 2,\r\n  Warning = 3,\r\n  Info = 4,\r\n}\r\n","export enum pathMatch {\r\n\tfull = \"full\",\r\n\tprefix = \"prefix\", // default value\r\n}\r\n","export enum ToasterPosition {\r\n  topRight = \"toast-top-right\",\r\n  topLeft = \"toast-top-left\",\r\n  topCenter = \"toast-top-center\",\r\n  bottomRight = \"toast-bottom-right\",\r\n  bottomLeft = \"toast-bottom-left\",\r\n  bottomCenter = \"toast-bottom-center\",\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './footer.component.html',\r\n    styleUrls: ['./footer.component.scss']\r\n})\r\n\r\nexport class FooterComponent{\r\n    //Variables\r\n    currentDate : Date = new Date();\r\n}\r\n","<!--Footer Starts-->\r\n<footer class=\"footer\">\r\n  <p class=\"copyright clearfix text-muted m-0\">\r\n    Copyright &copy; {{ currentDate | date: 'yyyy' }}\r\n    <a class=\"darkBlue font-weight-bold\"\r\n       href=\"https://www.mashura.co\"\r\n       target=\"_blank\">\r\n      Mashura Consultants\r\n    </a>\r\n    <span class=\"d-none d-sm-inline-block\">, All rights reserved.</span>\r\n  </p>\r\n</footer>\r\n<!--Footer Ends-->\r\n","import {Component, inject, OnInit} from \"@angular/core\";\r\nimport {IUM_ModulesModel} from \"../interfaces/user-views\";\r\nimport {AppHelpers} from \"../resources/app-helpers\";\r\nimport {ParamsService} from \"../services/params.service\";\r\nimport {InputAppearance} from 'app/shared/enums/mat-theme.enum';\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\n\r\n@Component({\r\n  selector: \"app-home-menu\",\r\n  templateUrl: \"./home-menu.component.html\",\r\n  styleUrls: [\"./home-menu.component.scss\"],\r\n})\r\nexport class HomeMenuComponent extends AppHelpers implements OnInit {\r\n  paramsService = inject(ParamsService);\r\n\r\n  constructor( public detectorService:DeviceDetectorService) {\r\n    super();\r\n    // if (this.businessId > 0 && this.companyId > 0) {\r\n    // \tthis.getUserModules();\r\n    // }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.paramsService.parentModuleId$.next(null)\r\n    this.paramsService.moduleId$.next(null)\r\n    // Storage.setSelectedModule(null);\r\n    // Storage.setParentModule(null);\r\n    // this.viewsService.selectedModuleId$.next(null);\r\n\r\n    this.paramsService.businessCompanyParams$.subscribe((res) => {\r\n      // if (res.BusinessEntityID > 0 && res.CompanyID > 0) {\r\n      // \tthis.getUserModules();\r\n      // }\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    //\tconsole.log(\"home-menu\", this.businessCompanyParams);\r\n    this.getUserModules();\r\n  }\r\n\r\n  selectModule(mod: IUM_ModulesModel) {\r\n    this.paramsService.moduleId$.next(mod.id)\r\n    // Storage.setSelectedModule(mod.id);\r\n    // this.viewsService.selectedModuleId$.next(mod.id);\r\n  }\r\n\r\n  navigateToService(mod: IUM_ModulesModel) {\r\n    let url = null;\r\n    url = mod.children\r\n      ? `/${mod.children[0]?.uM_Services[0].path}`\r\n      : `/${mod.uM_Services[0]?.path}`;\r\n    // url = `/${mod.path}/${mod.id}/${mod.uM_Services[1]?.path}`;\r\n    return url;\r\n  }\r\n\r\n  getUserModules() {\r\n    this.viewsService.getUserModulesMaped();\r\n  }\r\n\r\n    protected readonly InputAppearance = InputAppearance;\r\n}\r\n","<div class=\"home-container\">\r\n\r\n  <!--<mat-card-title class=\"dark\">-->\r\n  <!--  {{ \"quickActions\" | translate | titlecase }}-->\r\n  <!--</mat-card-title>-->\r\n\r\n\r\n  <div class=\"row justify-content-center  align-items-lg-center\" [class.full-height-vh]=\"detectorService.isDesktop()\">\r\n\r\n    <!--  Modules List  -->\r\n    <ng-container *ngIf=\"viewsService.UserModules$!=null\">\r\n      <div class=\"col-6 col-md-3 col-lg-2 mt-3\"\r\n           *ngFor=\"let module of viewsService.UserModules$ | async; let i = index\">\r\n        <a *ngIf=\"!module.children\"\r\n           class=\"text-white\"\r\n           [routerLink]=\"navigateToService(module)\"\r\n           (click)=\"selectModule(module)\">\r\n          <div class=\"menu-cart\" [class]=\"module.color ?? 'bg-color' + ((i % 7) + 1)\">\r\n            <div class=\"cart-icon\">\r\n              <i [class]=\"module.icon\"></i>\r\n            </div>\r\n            <div class=\"menu-cart-title\">\r\n              {{ languageService.isArabic ? module.arbName : module.engName }}\r\n            </div>\r\n          </div>\r\n        </a>\r\n\r\n        <a *ngIf=\"module.children\"\r\n           class=\"text-white\"\r\n           [routerLink]=\"navigateToService(module)\"\r\n           [queryParams]=\"{ parentModuleId: module.id }\"\r\n           (click)=\"selectModule(module)\">\r\n          <div class=\"menu-cart\" [class]=\"module.color ?? 'bg-color' + ((i % 7) + 1)\">\r\n            <div class=\"cart-icon\">\r\n              <i [class]=\"module.icon\"></i>\r\n            </div>\r\n            <div class=\"menu-cart-title\">\r\n              {{ languageService.isArabic ? module.arbName : module.engName }}\r\n            </div>\r\n          </div>\r\n        </a>\r\n\r\n      </div>\r\n    </ng-container>\r\n\r\n    <!--  Loading  -->\r\n    <ng-container *ngIf=\"!(viewsService.UserModules$ | async)\">\r\n      <div class=\"col-6 col-md  mt-3\" *ngFor=\"let num of [].constructor(5)\">\r\n        <p-skeleton class=\"mb-2 mr-2\" width=\"100%\" height=\"8rem\"></p-skeleton>\r\n      </div>\r\n    </ng-container>\r\n\r\n  </div>\r\n</div>\r\n\r\n","import { AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { StringsManager } from \"../resources/strings-manager\";\r\nimport { ConfigService } from \"../services/theme-options/config.service\";\r\n\r\n@Component({\r\n\tselector: \"app-horizontal-menu\",\r\n\ttemplateUrl: \"./horizontal-menu.component.html\",\r\n\tstyleUrls: [\"./horizontal-menu.component.scss\"],\r\n})\r\nexport class HorizontalMenuComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\tpublic menuItems: any[];\r\n\tpublic config: any = {};\r\n\tlevel: number = 0;\r\n\ttransparentBGClass = \"\";\r\n\tappAssets: StringsManager = new StringsManager();\r\n\r\n\tmenuPosition = this.appAssets.menuPosition;\r\n\r\n\tlayoutSub: Subscription;\r\n\r\n\tconstructor(private configService: ConfigService, private cdr: ChangeDetectorRef) {\r\n\t\tthis.config = this.configService.templateConf;\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.layoutSub = this.configService.templateConf$.subscribe((templateConf) => {\r\n\t\t\tif (templateConf) {\r\n\t\t\t\tthis.config = templateConf;\r\n\t\t\t}\r\n\t\t\tthis.loadLayout();\r\n\t\t\tthis.cdr.markForCheck();\r\n\t\t});\r\n\t}\r\n\r\n\tloadLayout() {\r\n\t\tif (\r\n\t\t\tthis.config.layout.menuPosition &&\r\n\t\t\tthis.config.layout.menuPosition.toString().trim() != \"\"\r\n\t\t) {\r\n\t\t\tthis.menuPosition = this.config.layout.menuPosition;\r\n\t\t}\r\n\r\n\t\tif (this.config.layout.variant === \"Transparent\") {\r\n\t\t\tthis.transparentBGClass = this.config.layout.sidebar.backgroundColor;\r\n\t\t} else {\r\n\t\t\tthis.transparentBGClass = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.layoutSub) {\r\n\t\t\tthis.layoutSub.unsubscribe();\r\n\t\t}\r\n\t}\r\n}\r\n","<div\r\n  class=\"header-navbar navbar-expand-sm navbar navbar-horizontal navbar-fixed navbar-light navbar-shadow menu-border navbar-brand-center  {{transparentBGClass}}\"\r\n  role=\"navigation\" data-menu=\"menu-wrapper\" data-nav=\"brand-center\"\r\n  [ngClass]=\"{'navbar-sticky': menuPosition === 'Top' && config?.layout.navbar.type === 'Static' , 'navbar-fixed': menuPosition === 'Top' && config?.layout.navbar.type === 'Fixed'}\">\r\n  <!-- Horizontal menu content-->\r\n  <div class=\"navbar-container main-menu-content center-layout\" data-menu=\"menu-container\">\r\n    <ul appTopMenuDropdown class=\"navigation-main nav navbar-nav\" id=\"main-menu-navigation\" data-menu=\"menu-navigation\">\r\n      <!-- First level menu -->\r\n      <li appTopMenulink *ngFor=\"let menuItem of menuItems\" [parent]=\"menuItem.title\" level=\"{{level + 1}}\"\r\n        [attr.data-menu]=\"menuItem.class === 'dropdown nav-item' ? 'dropdown' : null\" [ngClass]=\"[menuItem.class]\"\r\n        [routerLinkActive]=\"menuItem.submenu.length != 0 ? 'active' : 'active'\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n\r\n        <a appTopMenuAnchorToggle *ngIf=\"menuItem.submenu.length > 0 && !menuItem.isExternalLink\" data-toggle=\"dropdown\"\r\n          class=\"dropdown-toggle nav-link d-flex align-items-center\">\r\n          <i [ngClass]=\"[menuItem.icon]\"></i>\r\n          <span>{{menuItem.title | translate }}</span>\r\n        </a>\r\n        <a appTopMenuAnchorToggle routerLink=\"{{menuItem.path}}\" *ngIf=\"menuItem.submenu.length === 0 && !menuItem.isExternalLink\"\r\n          data-toggle=\"dropdown\" class=\"nav-link d-flex align-items-center\">\r\n          <i [ngClass]=\"[menuItem.icon]\"></i>\r\n          <span>{{menuItem.title | translate }}</span>\r\n        </a>\r\n        <a [href]=\"[menuItem.path]\" target=\"_blank\" *ngIf=\"menuItem.isExternalLink\" data-toggle=\"dropdown\"\r\n          class=\"nav-link d-flex align-items-center\">\r\n          <i [ngClass]=\"[menuItem.icon]\"></i>\r\n          <span>{{menuItem.title | translate }}</span>\r\n        </a>\r\n\r\n        <!-- Second level menu -->\r\n        <ul appTopMenuDropdown class=\"dropdown-menu\" *ngIf=\"menuItem.submenu.length > 0\">\r\n          <li appTopMenulink [attr.data-menu]=\"menuSubItem.class === 'dropdown-item' ? '' : 'dropdown-submenu'\"\r\n            *ngFor=\"let menuSubItem of menuItem.submenu\" [parent]=\"menuItem.title\" level=\"{{level + 2}}\"\r\n            [routerLinkActive]=\"menuSubItem.submenu.length != 0 ? 'active' : 'active'\"\r\n            [ngClass]=\"menuSubItem.class === 'dropdown-item' ? '' : 'has-sub dropdown dropdown-submenu'\">\r\n\r\n            <a appTopMenuAnchorToggle *ngIf=\"menuSubItem.submenu.length > 0 && !menuSubItem.isExternalLink\"\r\n              [ngClass]=\"'dropdown-toggle dropdown-item d-flex align-items-center'\">\r\n              <i [ngClass]=\"[menuSubItem.icon]\"></i>\r\n              <span>{{menuSubItem.title | translate }}</span>\r\n            </a>\r\n            <a appTopMenuAnchorToggle routerLink=\"{{menuSubItem.path}}\" *ngIf=\"menuSubItem.submenu.length === 0 && !menuSubItem.isExternalLink\"\r\n              [ngClass]=\"'dropdown-item d-flex align-items-center'\">\r\n              <i [ngClass]=\"[menuSubItem.icon]\"></i>\r\n              <span>{{menuSubItem.title | translate }}</span>\r\n            </a>\r\n            <a [href]=\"[menuSubItem.path]\" *ngIf=\"menuSubItem.isExternalLink\"\r\n              [ngClass]=\"'dropdown-item d-flex align-items-center'\">\r\n              <i [ngClass]=\"[menuSubItem.icon]\"></i>\r\n              <span>{{menuSubItem.title | translate }}</span>\r\n            </a>\r\n\r\n            <!-- Third level menu -->\r\n            <ul appTopMenuDropdown class=\"dropdown-menu\" *ngIf=\"menuSubItem.submenu.length > 0\">\r\n              <li appTopMenulink data-menu=\"\" data-toggle=\"dropdown\" *ngFor=\"let menuSubsubItem of menuSubItem.submenu\"\r\n                [parent]=\"menuItem.title\" level=\"{{level + 3}}\" routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{exact: true}\">\r\n                <a appTopMenuAnchorToggle data-toggle=\"dropdown\" [ngClass]=\"'dropdown-item d-flex align-items-center'\"\r\n                  [routerLink]=\"[menuSubsubItem.path]\"\r\n                  *ngIf=\"!menuSubsubItem.isExternalLink; else externalSubSubLinkBlock\">\r\n                  <i [ngClass]=\"[menuSubsubItem.icon]\"></i>\r\n                  <span class=\"\">{{menuSubsubItem.title}}</span>\r\n                </a>\r\n                <ng-template #externalSubSubLinkBlock>\r\n                  <a data-toggle=\"dropdown\" [ngClass]=\"'dropdown-item d-flex align-items-center'\"\r\n                    [href]=\"[menuSubsubItem.path]\" target=\"_blank\">\r\n                    <i [ngClass]=\"[menuSubsubItem.icon]\"></i>\r\n                    <span class=\"\">{{menuSubsubItem.title}}</span>\r\n                  </a>\r\n                </ng-template>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n} from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"app/auth/services/auth.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AssetsManager } from \"../resources/assets-manager\";\r\nimport { StringsManager } from \"../resources/strings-manager\";\r\nimport { Languages } from \"../enums/languages.enum\";\r\nimport { Constants } from \"../resources/constants\";\r\nimport { LanguageService } from \"../services/language.service\";\r\nimport { ParamsService } from \"../services/params.service\";\r\nimport { ConfigService } from \"../services/theme-options/config.service\";\r\nimport { LayoutService } from \"../services/theme-options/layout.service\";\r\nimport { IBusinessEntityModel, ICompanyModel } from \"app/org-management/model/business-entity\";\r\nimport { Storage } from \"../resources/local-storage\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-navbar\",\r\n  templateUrl: \"./navbar.component.html\",\r\n  styleUrls: [\"./navbar.component.scss\"],\r\n})\r\nexport class NavbarComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  public appAssets: AssetsManager = new AssetsManager();\r\n  public appStrings: StringsManager = new StringsManager();\r\n  selectedLanguageText = this.appStrings.english;\r\n  selectedLanguageFlag = this.appAssets.enFlag;\r\n  toggleClass = this.appStrings.toggleClass;\r\n  placement = this.appStrings.placement;\r\n  logoUrl = this.appAssets.logo;\r\n  menuPosition = this.appStrings.menuPosition;\r\n  isSmallScreen = false;\r\n  protected innerWidth: any;\r\n  searchOpenClass = \"\";\r\n  transparentBGClass = \"\";\r\n  hideSidebar: boolean = true;\r\n  public isCollapsed = true;\r\n  layoutSub: Subscription;\r\n  configSub: Subscription;\r\n\r\n  appHelper: AppHelpers = new AppHelpers();\r\n\r\n  @ViewChild(\"search\") searchElement: ElementRef;\r\n  @ViewChildren(\"searchResults\") searchResults: QueryList<any>;\r\n\r\n  @Output()\r\n  toggleHideSidebar = new EventEmitter<Object>();\r\n\r\n  @Output()\r\n  seachTextEmpty = new EventEmitter<boolean>();\r\n\r\n  listItems = [];\r\n  control = new FormControl();\r\n\r\n  public config: any = {};\r\n\r\n  businessList: IBusinessEntityModel[];\r\n  companyList: ICompanyModel[];\r\n  curBusinessId: number = Storage.getBusinessID;\r\n  currentCompanyId: number = Storage.getCompanyID;\r\n  appearance = Constants.defaultInputAppearance;\r\n\r\n  constructor(\r\n    private layoutService: LayoutService,\r\n    private router: Router,\r\n    private configService: ConfigService,\r\n    public languageService: LanguageService,\r\n    public authService: AuthService,\r\n    private paramsService: ParamsService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.config = this.configService.templateConf;\r\n    this.innerWidth = window.innerWidth;\r\n    this.layoutSub = layoutService.toggleSidebar$.subscribe((isShow) => {\r\n      this.hideSidebar = !isShow;\r\n    });\r\n\r\n    if (languageService.isArabic) {\r\n      this.selectedLanguageText = this.appStrings.arabic;\r\n      this.selectedLanguageFlag = this.appAssets.arFlag;\r\n    }\r\n    if (languageService.isEnglish) {\r\n      this.selectedLanguageText = this.appStrings.english;\r\n      this.selectedLanguageFlag = this.appAssets.enFlag;\r\n    }\r\n\r\n    // this.curBusinessId = Storage.getBusinessID;\r\n    // this.currentCompanyId = Storage.getCompanyID;\r\n\r\n    this.paramsService.businessCompanyParams$.subscribe((val) => {\r\n      this.curBusinessId = val.BusinessEntityID;\r\n      this.currentCompanyId = val.CompanyID;\r\n    });\r\n\r\n    this.authService.getCompanyAndBusiness().subscribe((res) => {\r\n      res.data.map((e) => {\r\n        e.id = e.businessId;\r\n      });\r\n      this.businessList = res.data;\r\n      this.authService.BusinessList$.next(res.data);\r\n      if (!this.curBusinessId) this.onSelectBusiness(res.data[0]?.businessId);\r\n      if (!this.currentCompanyId) this.onSelectCompany(res.data[0]?.companies[0].id);\r\n      if (this.currentCompanyId) this.getCompaniesBybusinessId(this.curBusinessId);\r\n      else this.getCompaniesBybusinessId(res.data[0]?.companies[0].id);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.listItems = [\r\n      {url: \"/page\", name: \"Page\", icon: \"ft-home\"},\r\n      {url: \"/page\", name: \"Pages\", icon: \"ft-home\"},\r\n      {url: \"/pages/login\", name: \"Login\", icon: \"ft-log-in\"},\r\n    ];\r\n\r\n    if (this.innerWidth < 1200) {\r\n      this.isSmallScreen = true;\r\n    }\r\n    else {\r\n      this.isSmallScreen = false;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.configSub = this.configService.templateConf$.subscribe((templateConf) => {\r\n      if (templateConf) {\r\n        this.config = templateConf;\r\n      }\r\n      this.loadLayout();\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  getCompaniesBybusinessId(businessId: number) {\r\n    //\tconsole.log(\"getCompaniesBybusinessId\", businessId);\r\n\r\n    let index = this.businessList?.findIndex((e) => e.businessId == businessId);\r\n    this.companyList = this.businessList[index]?.companies ?? [];\r\n    if (this.companyList?.length > 0) {\r\n      if (!this.currentCompanyId) this.onSelectCompany(this.companyList[0].id);\r\n    }\r\n  }\r\n\r\n  onSelectBusiness(businessId: number) {\r\n    this.paramsService.onSelectBusiness(businessId);\r\n    this.paramsService.onSelectCompany(null);\r\n    //\tthis.curBusinessId = businessId;\r\n    this.getCompaniesBybusinessId(businessId);\r\n  }\r\n\r\n  onSelectCompany(companyId: number) {\r\n    //\tthis.currentCompanyId = companyId;\r\n    this.paramsService.onSelectCompany(companyId);\r\n    this.appHelper.backToParentOnChangeCompany$.next(\"changed\");\r\n    // console.log(\"company changed \");\r\n    // console.log(this.appHelper.getViewName);\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ChangeLanguage(language: string) {\r\n    if (language != this.languageService.currentLang) {\r\n      location.reload();\r\n      this.languageService.changeLanguage(language);\r\n      if (language === Languages.en) {\r\n        Promise.resolve().then(() => {\r\n          this.selectedLanguageText = this.appStrings.english;\r\n          this.selectedLanguageFlag = this.appAssets.enFlag;\r\n        });\r\n      }\r\n      else if (language === Languages.ar) {\r\n        Promise.resolve().then(() => {\r\n          this.selectedLanguageText = this.appStrings.arabic;\r\n          this.selectedLanguageFlag = this.appAssets.arFlag;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // //////////////////////////////////////////////////\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onResize(event) {\r\n    this.innerWidth = event.target.innerWidth;\r\n    if (this.innerWidth < 1200) {\r\n      this.isSmallScreen = true;\r\n    }\r\n    else {\r\n      this.isSmallScreen = false;\r\n    }\r\n  }\r\n\r\n  loadLayout() {\r\n    if (\r\n      this.config.layout.menuPosition &&\r\n      this.config.layout.menuPosition.toString().trim() != \"\"\r\n    ) {\r\n      this.menuPosition = this.config.layout.menuPosition;\r\n    }\r\n\r\n    if (this.config.layout.variant === \"Light\") {\r\n      this.logoUrl = this.appAssets.logo;\r\n    }\r\n    else {\r\n      this.logoUrl = this.appAssets.darkLogo;\r\n    }\r\n\r\n    if (this.config.layout.variant === \"Transparent\") {\r\n      this.transparentBGClass = this.config.layout.sidebar.backgroundColor;\r\n    }\r\n    else {\r\n      this.transparentBGClass = \"\";\r\n    }\r\n  }\r\n\r\n  onSearchKey(event: any) {\r\n    if (this.searchResults && this.searchResults.length > 0) {\r\n      this.searchResults.first.host.nativeElement.classList.add(\"first-active-item\");\r\n    }\r\n\r\n    if (event.target.value === \"\") {\r\n      this.seachTextEmpty.emit(true);\r\n    }\r\n    else {\r\n      this.seachTextEmpty.emit(false);\r\n    }\r\n  }\r\n\r\n  removeActiveClass() {\r\n    if (this.searchResults && this.searchResults.length > 0) {\r\n      this.searchResults.first.host.nativeElement.classList.remove(\"first-active-item\");\r\n    }\r\n  }\r\n\r\n  onEscEvent() {\r\n    this.control.setValue(\"\");\r\n    this.searchOpenClass = \"\";\r\n    this.seachTextEmpty.emit(true);\r\n  }\r\n\r\n  onEnter() {\r\n    if (this.searchResults && this.searchResults.length > 0) {\r\n      let url = this.searchResults.first.url;\r\n      if (url && url != \"\") {\r\n        this.control.setValue(\"\");\r\n        this.searchOpenClass = \"\";\r\n        this.router.navigate([url]);\r\n        this.seachTextEmpty.emit(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  redirectTo(value) {\r\n    this.router.navigate([value]);\r\n    this.seachTextEmpty.emit(true);\r\n  }\r\n\r\n  ToggleClass() {\r\n    if (this.toggleClass === \"ft-maximize\") {\r\n      this.toggleClass = \"ft-minimize\";\r\n    }\r\n    else {\r\n      this.toggleClass = \"ft-maximize\";\r\n    }\r\n  }\r\n\r\n  toggleSearchOpenClass(display) {\r\n    this.control.setValue(\"\");\r\n    if (display) {\r\n      this.searchOpenClass = \"open\";\r\n      setTimeout(() => {\r\n        this.searchElement.nativeElement.focus();\r\n      }, 0);\r\n    }\r\n    else {\r\n      this.searchOpenClass = \"\";\r\n    }\r\n    this.seachTextEmpty.emit(true);\r\n  }\r\n\r\n  toggleNotificationSidebar() {\r\n    this.layoutService.toggleNotificationSidebar(true);\r\n  }\r\n\r\n  toggleSidebar() {\r\n    this.layoutService.toggleSidebarSmallScreen(this.hideSidebar);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.layoutSub) {\r\n      this.layoutSub.unsubscribe();\r\n    }\r\n    if (this.configSub) {\r\n      this.configSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-light header-navbar {{ transparentBGClass }}\"\r\n  [ngClass]=\"{\r\n\t\t'navbar-brand-center': menuPosition === 'Top',\r\n\t\t'navbar-static': menuPosition === 'Side' && config?.layout.navbar.type === 'Static',\r\n\t\t'navbar-sticky': menuPosition === 'Side' && config?.layout.navbar.type === 'Fixed',\r\n\t\t'fixed-top': isSmallScreen && menuPosition === 'Top'\r\n\t}\"\r\n>\r\n  <div class=\"container-fluid navbar-wrapper\">\r\n    <!-- LEFT -->\r\n    <div class=\"navbar-header d-flex\">\r\n      <div\r\n        class=\"navbar-toggle menu-toggle d-xl-none d-block float-left align-items-center justify-content-center\"\r\n        data-toggle=\"collapse\"\r\n        (click)=\"toggleSidebar()\"\r\n      >\r\n        <i class=\"ft-menu font-medium-3\"></i>\r\n      </div>\r\n\r\n      <!-- Business & company dropdowns -->\r\n      <ul class=\"navbar-nav\">\r\n\r\n        <!-- Business dropdown -->\r\n        <!--        <li class=\"i18n-dropdown dropdown nav-item mr-2\" display=\"dynamic\">-->\r\n        <!--          <div [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">-->\r\n        <!--            <mat-form-field [appearance]=\"appearance\" class=\"select-business\">-->\r\n        <!--              <mat-select-->\r\n        <!--                [placeholder]=\"'Business' | translate\"-->\r\n        <!--                (selectionChange)=\"onSelectBusiness($event.value)\"-->\r\n        <!--                [value]=\"curBusinessId\">-->\r\n        <!--                <mat-option [value]=\"null\">-->\r\n        <!--                  {{ \"General.choose\" | translate }}-->\r\n        <!--                </mat-option>-->\r\n        <!--                <mat-option *ngFor=\"let business of businessList\" [value]=\"business.businessId\">-->\r\n        <!--                  {{ languageService.isArabic ? business.ar_Name : business.en_Name }}-->\r\n        <!--                </mat-option>-->\r\n        <!--              </mat-select>-->\r\n        <!--              <mat-hint></mat-hint>-->\r\n        <!--            </mat-form-field>-->\r\n        <!--          </div>-->\r\n        <!--        </li>-->\r\n\r\n        <!-- company dropdown -->\r\n        <li class=\"dropdown nav-item\" placement=\"bottom-left\" display=\"static\">\r\n          <div [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n            <mat-form-field [appearance]=\"appearance\" class=\"select-business\">\r\n              <mat-select\r\n                [placeholder]=\"'company' | translate\"\r\n                (selectionChange)=\"onSelectCompany($event.value)\"\r\n                [value]=\"currentCompanyId\"\r\n              >\r\n                <mat-option [value]=\"null\">\r\n                  {{ \"General.choose\" | translate }}\r\n                </mat-option>\r\n                <mat-option *ngFor=\"let company of companyList\" [value]=\"company.id\">\r\n                  {{ languageService.isArabic ? company.ar_Name : company.en_Name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint></mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <!-- <company-by-businessId-dropdown> </company-by-businessId-dropdown> -->\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- SEARCH AND FULLSCREEN -->\r\n      <!-- <ul class=\"navbar-nav\" (clickOutside)=\"toggleSearchOpenClass(false)\">\r\n                <li class=\"nav-item mr-2 d-none d-lg-block\">\r\n                    <a\r\n                        class=\"nav-link apptogglefullscreen\"\r\n                        id=\"navbar-fullscreen\"\r\n                        href=\"javascript:;\"\r\n                        appToggleFullscreen\r\n                        (click)=\"ToggleClass()\"\r\n                        ><i class=\" {{ toggleClass }} font-medium-3\"></i\r\n                    ></a>\r\n                </li>\r\n\r\n                <li class=\"nav-item nav-search\">\r\n                    <a\r\n                        class=\"nav-link nav-link-search\"\r\n                        id=\"navbar-search\"\r\n                        href=\"javascript:\"\r\n                        (click)=\"toggleSearchOpenClass(true)\"\r\n                        ><i class=\"ft-search font-medium-3\"></i\r\n                    ></a>\r\n                    <div class=\"search-input {{ searchOpenClass }}\">\r\n                        <div class=\"search-input-icon\">\r\n                            <i class=\"ft-search font-medium-3\"></i>\r\n                        </div>\r\n                        <input\r\n                            [formControl]=\"control\"\r\n                            #search\r\n                            class=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Explore hr...\"\r\n                            tabindex=\"0\"\r\n                            autofocus\r\n                            data-search=\"template-search\"\r\n                            [appAutocomplete]=\"autocomplete\"\r\n                            (keyup.enter)=\"onEnter()\"\r\n                            (keydown.esc)=\"onEscEvent()\"\r\n                            (keyup)=\"onSearchKey($event)\"\r\n                        />\r\n                        <div class=\"search-input-close\" (click)=\"toggleSearchOpenClass(false)\">\r\n                            <i class=\"ft-x font-medium-3\"></i>\r\n                        </div>\r\n\r\n                        <app-autocomplete #autocomplete=\"appAutocomplete\">\r\n                            <ng-template appAutocompleteContent>\r\n                                <ng-container *ngIf=\"listItems | filter : control.value as result\">\r\n                                    <app-option\r\n                                        #searchResults\r\n                                        *ngFor=\"let option of result\"\r\n                                        [url]=\"option.url\"\r\n                                        [value]=\"option.name\"\r\n                                        (click)=\"redirectTo(option.url)\"\r\n                                        (mouseenter)=\"removeActiveClass()\"\r\n                                    >\r\n                                        <div class=\"d-flex align-items-center justify-content-between w-100\">\r\n                                            <div class=\"d-flex align-items-center justify-content-start\">\r\n                                                <i class=\"{{ option.icon }} mr-2\"></i>\r\n                                                <span>{{ option.name }}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </app-option>\r\n                                    <app-option class=\"no-result\" *ngIf=\"!result.length\"\r\n                                        >No results found.</app-option\r\n                                    >\r\n                                </ng-container>\r\n                            </ng-template>\r\n                        </app-autocomplete>\r\n                    </div>\r\n                </li>\r\n            </ul> -->\r\n    </div>\r\n\r\n    <!-- CENTER: company and Business  dropdown-->\r\n    <!-- <div class=\"navbar-container\">\r\n            <div class=\"collapse navbar-collapse d-block\" id=\"navbarSupportedContent\"></div>\r\n        </div> -->\r\n\r\n    <!-- RIGHT -->\r\n    <div class=\"navbar-container\">\r\n      <div class=\"collapse navbar-collapse d-block\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav\">\r\n          <!-- Languages -->\r\n          <li class=\"i18n-dropdown dropdown nav-item mr-2\" display=\"dynamic\" ngbDropdown>\r\n            <a\r\n              class=\"nav-link d-flex align-items-center dropdown-toggle dropdown-language\"\r\n              id=\"dropdown-flag\"\r\n              href=\"javascript:;\"\r\n              data-toggle=\"dropdown\"\r\n              ngbDropdownToggle\r\n            ><img class=\"langimg selected-flag\" [src]=\"selectedLanguageFlag\" alt=\"flag\"/><span\r\n              class=\"selected-language d-md-flex d-none\"\r\n            >{{ selectedLanguageText }}</span\r\n            ></a\r\n            >\r\n            <div\r\n              ngbDropdownMenu\r\n              class=\"dropdown-menu dropdown-menu-right text-left\"\r\n              aria-labelledby=\"dropdown-flag\"\r\n            >\r\n              <a\r\n                class=\"dropdown-item\"\r\n                href=\"javascript:;\"\r\n                data-language=\"en\"\r\n                (click)=\"ChangeLanguage('en')\"\r\n              ><img class=\"langimg mr-2\" [src]=\"appAssets.enFlag\" alt=\"flag\"/><span\r\n                class=\"font-small-3\"\r\n              >\r\n\t\t\t\t\t\t\t\t\tEnglish\r\n\t\t\t\t\t\t\t\t</span>\r\n              </a>\r\n              <a\r\n                class=\"dropdown-item\"\r\n                href=\"javascript:;\"\r\n                data-language=\"en\"\r\n                (click)=\"ChangeLanguage('ar')\"\r\n              >\r\n                <img class=\"langimg mr-2\" [src]=\"appAssets.arFlag\" alt=\"flag\"/>\r\n                <span class=\"font-small-3\">عربي</span>\r\n              </a>\r\n            </div>\r\n          </li>\r\n\r\n          <!-- notifications -->\r\n          <!-- <li class=\"dropdown nav-item\" placement=\"bottom-left\" display=\"static\" ngbDropdown>\r\n                        <a\r\n                            class=\"nav-link dropdown-toggle dropdown-notification p-0 mt-2\"\r\n                            id=\"drp-notification\"\r\n                            href=\"javascript:;\"\r\n                            data-toggle=\"dropdown\"\r\n                            ngbDropdownToggle\r\n                            ><i class=\"ft-bell font-medium-3\"></i\r\n                            ><span class=\"notification badge badge-pill badge-danger\">4</span></a\r\n                        >\r\n                        <ul\r\n                            ngbDropdownMenu\r\n                            class=\"notification-dropdown dropdown-menu dropdown-menu-media dropdown-menu-right m-0 overflow-hidden\"\r\n                        >\r\n                            <li class=\"dropdown-menu-header\">\r\n                                <div\r\n                                    class=\"dropdown-header d-flex justify-content-between m-0 px-3 py-2 white bg-primary\"\r\n                                >\r\n                                    <div class=\"d-flex\">\r\n                                        <i class=\"ft-bell font-medium-3 d-flex align-items-center mr-2\"></i\r\n                                        ><span class=\"noti-title\">7 New Notification</span>\r\n                                    </div>\r\n                                    <span class=\"text-bold-400 cursor-pointer\">Mark all as read</span>\r\n                                </div>\r\n                            </li>\r\n                            <li class=\"scrollable-container\" [perfectScrollbar]>\r\n                                <a class=\"d-flex justify-content-between\" href=\"javascript:void(0)\">\r\n                                    <div class=\"media d-flex align-items-center\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"mr-3\">\r\n                                                <img\r\n                                                    class=\"avatar\"\r\n                                                    [src]=\"appAssets.avatar6\"\r\n                                                    alt=\"avatar\"\r\n                                                    height=\"45\"\r\n                                                    width=\"45\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h6 class=\"m-0\">\r\n                                                <span>Kate Young</span\r\n                                                ><small class=\"grey lighten-1 font-italic float-right\">5 mins ago</small>\r\n                                            </h6>\r\n                                            <small class=\"noti-text\">Commented on your photo</small>\r\n                                            <h6 class=\"noti-text font-small-3 m-0\">\r\n                                                Great Shot John! Really enjoying the composition on this piece.\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a class=\"d-flex justify-content-between\" href=\"javascript:void(0)\">\r\n                                    <div class=\"media d-flex align-items-center\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"mr-3\">\r\n                                                <img\r\n                                                    class=\"avatar\"\r\n                                                    [src]=\"appAssets.avatar5\"\r\n                                                    alt=\"avatar\"\r\n                                                    height=\"45\"\r\n                                                    width=\"45\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h6 class=\"m-0\">\r\n                                                <span>Andrew Watts</span\r\n                                                ><small class=\"grey lighten-1 font-italic float-right\">49 mins ago</small>\r\n                                            </h6>\r\n                                            <small class=\"noti-text\">Liked your album: UI/UX Inspo</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a\r\n                                    class=\"d-flex justify-content-between read-notification\"\r\n                                    href=\"javascript:void(0)\"\r\n                                >\r\n                                    <div class=\"media d-flex align-items-center py-0 pr-0\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"mr-3\">\r\n                                                <img [src]=\"appAssets.avatar4\" alt=\"avatar\" height=\"45\" width=\"45\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h6 class=\"m-0\">Update</h6>\r\n                                            <small class=\"noti-text\">MyBook v2.0.7</small>\r\n                                        </div>\r\n                                        <div class=\"media-right\">\r\n                                            <div class=\"border-left\">\r\n                                                <div class=\"px-4 py-2 border-bottom\">\r\n                                                    <h6 class=\"m-0 text-bold-600\">Update</h6>\r\n                                                </div>\r\n                                                <div class=\"px-4 py-2 text-center\">\r\n                                                    <h6 class=\"m-0\">Close</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a\r\n                                    class=\"d-flex justify-content-between read-notification\"\r\n                                    href=\"javascript:void(0)\"\r\n                                >\r\n                                    <div class=\"media d-flex align-items-center\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"avatar bg-primary bg-lighten-3 mr-3 p-1\">\r\n                                                <span class=\"avatar-content font-medium-2\">LD</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h6 class=\"m-0\">\r\n                                                <span>Registration done</span\r\n                                                ><small class=\"grey lighten-1 font-italic float-right\">6 hrs ago</small>\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <div class=\"cursor-pointer\">\r\n                                    <div class=\"media d-flex align-items-center justify-content-between\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"media-body\">\r\n                                                <h6 class=\"m-0\">New Offers</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-right\">\r\n                                            <div class=\"custom-switch custom-control\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    class=\"custom-control-input\"\r\n                                                    id=\"custom-switch-1111\"\r\n                                                    checked\r\n                                                />\r\n                                                <label class=\"custom-control-label mr-1\" for=\"custom-switch-1111\"> </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex justify-content-between cursor-pointer read-notification\">\r\n                                    <div class=\"media d-flex align-items-center\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"avatar bg-danger bg-lighten-4 mr-3 p-1\">\r\n                                                <span class=\"avatar-content font-medium-2\"\r\n                                                    ><i class=\"ft-heart text-danger\"></i\r\n                                                ></span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h6 class=\"m-0\">\r\n                                                <span>Application approved</span\r\n                                                ><small class=\"grey lighten-1 font-italic float-right\">18 hrs ago</small>\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <a\r\n                                    class=\"d-flex justify-content-between read-notification\"\r\n                                    href=\"javascript:void(0)\"\r\n                                >\r\n                                    <div class=\"media d-flex align-items-center\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"mr-3\">\r\n                                                <img\r\n                                                    class=\"avatar\"\r\n                                                    [src]=\"appAssets.avatar3\"\r\n                                                    alt=\"avatar\"\r\n                                                    height=\"45\"\r\n                                                    width=\"45\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h6 class=\"m-0\">\r\n                                                <span>Anna Lee</span\r\n                                                ><small class=\"grey lighten-1 font-italic float-right\">27 hrs ago</small>\r\n                                            </h6>\r\n                                            <small class=\"noti-text\">Commented on your photo</small>\r\n                                            <h6 class=\"noti-text font-small-3 text-bold-500 m-0\">\r\n                                                Woah!Loving these colors! Keep it up\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <div class=\"d-flex justify-content-between cursor-pointer read-notification\">\r\n                                    <div class=\"media d-flex align-items-center\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"avatar bg-info bg-lighten-4 mr-3 p-1\">\r\n                                                <div class=\"avatar-content font-medium-2\">\r\n                                                    <i class=\"ft-align-left text-info\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h6 class=\"m-0\">\r\n                                                <span>Report generated</span\r\n                                                ><small class=\"grey lighten-1 font-italic float-right\">35 hrs ago</small>\r\n                                            </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <a\r\n                                    class=\"d-flex justify-content-between read-notification\"\r\n                                    href=\"javascript:void(0)\"\r\n                                >\r\n                                    <div class=\"media d-flex align-items-center\">\r\n                                        <div class=\"media-left\">\r\n                                            <div class=\"mr-3\">\r\n                                                <img\r\n                                                    class=\"avatar\"\r\n                                                    [src]=\"appAssets.avatar2\"\r\n                                                    alt=\"avatar\"\r\n                                                    height=\"45\"\r\n                                                    width=\"45\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h6 class=\"m-0\">\r\n                                                <span>Oliver Wright</span\r\n                                                ><small class=\"grey lighten-1 font-italic float-right\">2 days ago</small>\r\n                                            </h6>\r\n                                            <small class=\"noti-text\">Liked your album: UI/UX Inspo</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"dropdown-menu-footer\">\r\n                                <div\r\n                                    class=\"noti-footer text-center cursor-pointer primary border-top text-bold-400 py-1\"\r\n                                >\r\n                                    Read All Notifications\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li> -->\r\n\r\n          <!-- user -->\r\n          <li class=\"dropdown nav-item mr-1\" placement=\"bottom-left\" display=\"static\" ngbDropdown>\r\n            <a\r\n              class=\"nav-link dropdown-toggle user-dropdown d-flex align-items-end\"\r\n              id=\"dropdownBasic2\"\r\n              href=\"javascript:;\"\r\n              data-toggle=\"dropdown\"\r\n              ngbDropdownToggle\r\n            >\r\n              <div class=\"user d-md-flex d-none mr-2\">\r\n                <span class=\"text-right\">{{ authService.getUsername }}</span>\r\n                <span class=\"text-right text-muted font-small-3\">{{ authService.getUserId }}</span>\r\n              </div>\r\n              <img\r\n                class=\"avatar\"\r\n                [src]=\"appAssets.user_avatar_rounded\"\r\n                alt=\"avatar\"\r\n                height=\"35\"\r\n                width=\"35\"\r\n              />\r\n            </a>\r\n            <div\r\n              class=\"dropdown-menu text-left dropdown-menu-right m-0 pb-0\"\r\n              aria-labelledby=\"dropdownBasic2\"\r\n              ngbDropdownMenu>\r\n              <a class=\"dropdown-item logout-btn\" (click)=\"logout()\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <i class=\"ft-power mr-2\"> </i>\r\n                  <span>{{ \"auth.Logout\" | translate }}</span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          </li>\r\n\r\n          <!-- Notification Sidebar -->\r\n          <!-- <li class=\"nav-item d-none d-lg-block mr-2 mt-1\">\r\n                        <a class=\"nav-link notification-sidebar-toggle\" (click)=\"toggleNotificationSidebar()\"\r\n                            ><i class=\"ft-align-right font-medium-3\"></i\r\n                        ></a>\r\n                    </li> -->\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import {\r\n  Component,\r\n  OnDestroy,\r\n  OnInit\r\n} from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AssetsManager } from \"../resources/assets-manager\";\r\nimport { LayoutService } from \"../services/theme-options/layout.service\";\r\n\r\n@Component({\r\n  selector: \"app-notification-sidebar\",\r\n  templateUrl: \"./notification-sidebar.component.html\",\r\n  styleUrls: [\"./notification-sidebar.component.scss\"],\r\n})\r\nexport class NotificationSidebarComponent implements OnInit, OnDestroy {\r\n  layoutSub: Subscription;\r\n  isOpen = false;\r\n  appAssets: AssetsManager = new AssetsManager();\r\n  ngOnInit() {}\r\n\r\n  constructor(private layoutService: LayoutService) {\r\n    this.layoutSub = layoutService.toggleNotiSidebar$.subscribe((open) => {\r\n      this.isOpen = open;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.layoutSub) {\r\n      this.layoutSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n    this.layoutService.toggleNotificationSidebar(false);\r\n  }\r\n}\r\n","<!-- START Notification Sidebar-->\r\n<aside class=\"notification-sidebar d-none d-sm-none d-md-block\" id=\"notification-sidebar\" [ngClass]=\"{open: isOpen}\">\r\n  <a class=\"notification-sidebar-close\" (click)=\"onClose()\">\r\n    <i class=\"ft-x font-medium-3 grey darken-1\"></i>\r\n  </a>\r\n  <div class=\"side-nav notification-sidebar-content\" [perfectScrollbar]>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 notification-tab-content\">\r\n        <nav ngbNav #nav=\"ngbNav\" class=\"nav-tabs\">\r\n          <ng-container ngbNavItem class=\"nav-item\">\r\n            <a ngbNavLink class=\"nav-link\">Activity</a>\r\n            <ng-template ngbNavContent>\r\n              <div class=\"row tab-pane\" id=\"activity-tab\" role=\"tabpanel\" aria-expanded=\"true\"\r\n                aria-labelledby=\"base-tab1\">\r\n                <div class=\"col-12\" id=\"activity\">\r\n                  <h5 class=\"my-2 text-bold-500\">System Logs</h5>\r\n                  <div class=\"timeline-left timeline-wrapper mb-3\" id=\"timeline-1\">\r\n                    <ul class=\"timeline\">\r\n                      <li class=\"timeline-line mt-4\"></li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <i class=\"ft-download primary\"></i>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>New Update Available</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">1 min ago</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">Android Pie 9.0.0_r52v availabe (658MB).</p>\r\n                          <div class=\"notification-note\">\r\n                            <div class=\"p-1 pl-2\">\r\n                              <span class=\"text-bold-500\">Download Now!</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <img class=\"avatar\" [src]=\"appAssets.avatar\" alt=\"avatar\" width=\"40\">\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>Reminder!</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">52 min ago</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">Your meeting is scheduled with Mr. Derrick Walters at 16:00.\r\n                          </p>\r\n                          <div class=\"notification-note\">\r\n                            <div class=\"p-1 pl-2\">\r\n                              <span class=\"text-bold-500\">Snooze</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <img class=\"avatar\"  [src]=\"appAssets.avatar\"alt=\"avatar\" width=\"40\">\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>Recieved a File</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">4 hours ago</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">Christina Rogers sent you a file for the next conference.\r\n                          </p>\r\n                          <div class=\"notification-note\">\r\n                            <div class=\"p-1 pl-2\">\r\n                              <img   [src]=\"appAssets.avatar\" alt=\"icon\" width=\"20\">\r\n                              <span class=\"text-bold-500 ml-2\">Diamond.sketch</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <i class=\"ft-mic primary\"></i>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>Voice Message</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">10 hours ago</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">Natalya Parker sent you a voice message.</p>\r\n                          <div class=\"notification-note\">\r\n                            <div class=\"p-1 pl-2\">\r\n                              <span class=\"text-bold-500\">Listen</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <i class=\"ft-cloud-drizzle primary\"></i>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>Weather Update</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">Yesterday</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">Hi John! It is a rainy day with 16&deg;C.</p>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <h5 class=\"my-2 text-bold-500\">Applications Logs</h5>\r\n                  <div class=\"timeline-left timeline-wrapper\" id=\"timeline-2\">\r\n                    <ul class=\"timeline\">\r\n                      <li class=\"timeline-line mt-4\"></li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <img class=\"avatar\" [src]=\"appAssets.avatar\" alt=\"avatar\" width=\"40\">\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>Gmail</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">Just now</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">Victoria Hampton sent you a mail and has a file attachment\r\n                            with it.</p>\r\n                          <div class=\"notification-note\">\r\n                            <div class=\"p-1 pl-2\">\r\n                              <img [src]=\"appAssets.pdfIcon\" alt=\"pdf icon\" width=\"20\">\r\n                              <span class=\"text-bold-500 ml-2\">Register.pdf</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <i class=\"ft-droplet primary\"></i>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>MakeMyTrip</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">7 hours ago</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">Your next flight for San Francisco will be on 24th March.\r\n                          </p>\r\n                          <div class=\"notification-note\">\r\n                            <div class=\"p-1 pl-2\">\r\n                              <span class=\"text-bold-500\">Important</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <img class=\"avatar\" [src]=\"appAssets.avatar\" alt=\"avatar\" width=\"40\">\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>CNN</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">16 hours ago</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">U.S. investigating report says email account linked to CIA\r\n                            Director was hacked.</p>\r\n                          <div class=\"notification-note\">\r\n                            <div class=\"p-1 pl-2\">\r\n                              <span class=\"text-bold-500\">Read full article</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <i class=\"ft-map primary\"></i>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>Maps</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">Yesterday</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">You visited Walmart Supercenter in Chicago.</p>\r\n                          <div class=\"notification-note\">\r\n                            <div class=\"p-1 pl-2\">\r\n                              <span class=\"text-bold-500\">Write a Review!</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li class=\"timeline-item\">\r\n                        <div class=\"timeline-badge\">\r\n                          <span class=\"bg-primary bg-lighten-4\" data-toggle=\"tooltip\" data-placement=\"right\"\r\n                            title=\"Portfolio project work\">\r\n                            <i class=\"ft-package primary\"></i>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"activity-list-text\">\r\n                          <h6 class=\"mb-1\">\r\n                            <span>Updates Available</span>\r\n                            <span class=\"float-right grey font-italic font-small-2\">2 days ago</span>\r\n                          </h6>\r\n                          <p class=\"mt-0 mb-2 font-small-3\">19 app updates found.</p>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n           </ng-container>\r\n          <ng-container ngbNavItem class=\"nav-item\">\r\n            <a ngbNavLink class=\"nav-link\">Settings</a>\r\n            <ng-template ngbNavContent>\r\n              <div class=\"row tab-pane\" id=\"settings-tab\" aria-labelledby=\"base-tab2\">\r\n                <div class=\"col-12\" id=\"settings\">\r\n                  <h5 class=\"mt-2 mb-3\">General Settings</h5>\r\n                  <ul class=\"list-unstyled mb-0 mx-2\">\r\n                    <li class=\"mb-3\">\r\n                      <div class=\"mb-1\">\r\n                        <span class=\"text-bold-500\">Notifications</span>\r\n                        <div class=\"float-right\">\r\n                          <div class=\"custom-switch\">\r\n                            <input class=\"custom-control-input\" id=\"noti-s-switch-1\" type=\"checkbox\">\r\n                            <label class=\"custom-control-label\" for=\"noti-s-switch-1\"></label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <p class=\"font-small-3 m-0\">Use switches when looking for yes or no answers.</p>\r\n                    </li>\r\n                    <li class=\"mb-3\">\r\n                      <div class=\"mb-1\"><span class=\"text-bold-500\">Show recent activity</span>\r\n                        <div class=\"float-right\">\r\n                          <div class=\"checkbox\">\r\n                            <input id=\"noti-s-checkbox-1\" type=\"checkbox\" checked=\"checked\">\r\n                            <label for=\"noti-s-checkbox-1\"></label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <p class=\"font-small-3 m-0\">The \"for\" attribute is necessary to bind checkbox with the input.</p>\r\n                    </li>\r\n                    <li class=\"mb-3\">\r\n                      <div class=\"mb-1\"><span class=\"text-bold-500\">Product Update</span>\r\n                        <div class=\"float-right\">\r\n                          <div class=\"custom-switch\">\r\n                            <input class=\"custom-control-input\" id=\"noti-s-switch-4\" type=\"checkbox\" checked=\"checked\">\r\n                            <label class=\"custom-control-label\" for=\"noti-s-switch-4\"></label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <p class=\"font-small-3 m-0\">Message and mail me on weekly product updates.</p>\r\n                    </li>\r\n                    <li class=\"mb-3\">\r\n                      <div class=\"mb-1\">\r\n                        <span class=\"text-bold-500\">Email on Follow</span>\r\n                        <div class=\"float-right\">\r\n                          <div class=\"custom-switch\">\r\n                            <input class=\"custom-control-input\" id=\"noti-s-switch-3\" type=\"checkbox\">\r\n                            <label class=\"custom-control-label\" for=\"noti-s-switch-3\"></label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <p class=\"font-small-3 m-0\">Mail me when someone follows me.</p>\r\n                    </li>\r\n                    <li class=\"mb-3\">\r\n                      <div class=\"mb-1\">\r\n                        <span class=\"text-bold-500\">Announcements</span>\r\n                        <div class=\"float-right\">\r\n                          <div class=\"checkbox\">\r\n                            <input id=\"noti-s-checkbox-2\" type=\"checkbox\" checked=\"checked\">\r\n                            <label for=\"noti-s-checkbox-2\"></label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <p class=\"font-small-3 m-0\">Receive all the news and announcements from my clients.</p>\r\n                    </li>\r\n                    <li class=\"mb-3\">\r\n                      <div class=\"mb-1\">\r\n                        <span class=\"text-bold-500\">Date and Time</span>\r\n                        <div class=\"float-right\">\r\n                          <div class=\"checkbox\">\r\n                            <input id=\"noti-s-checkbox-3\" type=\"checkbox\">\r\n                            <label for=\"noti-s-checkbox-3\"></label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <p class=\"font-small-3 m-0\">Show date and time on top of every page.</p>\r\n                    </li>\r\n                    <li>\r\n                      <div class=\"mb-1\">\r\n                        <span class=\"text-bold-500\">Email on Comments</span>\r\n                        <div class=\"float-right\">\r\n                          <div class=\"custom-switch\">\r\n                            <input class=\"custom-control-input\" id=\"noti-s-switch-2\" type=\"checkbox\" checked=\"checked\">\r\n                            <label class=\"custom-control-label\" for=\"noti-s-switch-2\"></label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <p class=\"font-small-3 m-0\">Mail me when someone comments on my article.</p>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n           </ng-container>\r\n        </nav>\r\n        <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</aside>\r\n<!-- END Notification Sidebar-->\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"fileSize\",\r\n})\r\nexport class fileSizePipe implements PipeTransform {\r\n  transform(size: number): string {\r\n    if (size === 0) return \"0 Bytes\";\r\n\r\n    const k = 1024;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\r\n    const i = Math.floor(Math.log(size) / Math.log(k));\r\n\r\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(items: any[], searchTerm: string, labelKey?: string): any {\r\n    if (!items || !searchTerm) {\r\n      return null;\r\n    }\r\n\r\n    return items.filter(\r\n      item =>\r\n        item[labelKey || 'name']\r\n          .toLowerCase()\r\n          .includes(searchTerm.toLowerCase()) === true\r\n    ).slice(0,10);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\nimport { FilterPipe } from './filter.pipe';\r\nimport { SearchPipe } from './search.pipe';\r\nimport { ShortNamePipe } from './short-name.pipe';\r\nimport { fileSizePipe } from './file-size.pipe';\r\n\r\n@NgModule({\r\n  declarations:[FilterPipe, SearchPipe, ShortNamePipe, fileSizePipe],\r\n  imports:[CommonModule],\r\n  exports:[FilterPipe, SearchPipe, ShortNamePipe, fileSizePipe]\r\n})\r\n\r\nexport class PipeModule{}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"search\",\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  public transform(value, keys: string, term: string) {\r\n    if (!term) return value;\r\n    return (value || []).filter((item) =>\r\n      keys\r\n        .split(\",\")\r\n        .some(\r\n          (key) =>\r\n            item.hasOwnProperty(key) && new RegExp(term, \"gi\").test(item[key])\r\n        )\r\n    );\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'shortName'\r\n})\r\nexport class ShortNamePipe implements PipeTransform {\r\n  transform(fullName: string): any {\r\n    return fullName\r\n      .split(' ')\r\n      .map((n) => n[0])\r\n      .join('');\r\n  }\r\n}\r\n","import { DatePipe, Location } from \"@angular/common\";\r\nimport { Component, inject } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthService } from \"app/auth/services/auth.service\";\r\nimport { UserViewsService } from \"app/auth/services/user-views.service\";\r\nimport { IGUIModel, IRowActionsModel } from \"app/shared/interfaces/user-views\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\nimport { IndividualConfig } from \"ngx-toastr\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { IBusinessCompanyParams, IVersionCountryParams } from \"../interfaces/params\";\r\nimport { AssetsManager, SvgManager } from \"./assets-manager\";\r\nimport { DialogsService } from \"../services/dialogs.service\";\r\nimport { FileService } from \"../services/file.service\";\r\nimport { msgTranslate } from \"./helpers-functions\";\r\nimport { LanguageService } from \"../services/language.service\";\r\nimport { LoadingService } from \"../services/loading.service\";\r\nimport { MessagesService } from \"../services/messages.service\";\r\nimport { ParamsService } from \"../services/params.service\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Btn } from \"app/shared/enums/btns.enum\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { IMetaModel } from \"app/shared/interfaces/responces\";\r\n\r\n@Component({\r\n  selector: \"helpers-component\",\r\n  template: `\r\n      <!--      <ngx-spinner [name]=\"'table'\"></ngx-spinner>-->\r\n      <!--      <ngx-spinner [name]=\"'create'\"></ngx-spinner>-->\r\n  `,\r\n})\r\nexport class AppHelpers {\r\n  public dialogsService = inject(DialogsService);\r\n  public messagesService = inject(MessagesService);\r\n  public loadingService = inject(LoadingService);\r\n  public messageService = inject(MessageService);\r\n  public activatedRoute = inject(ActivatedRoute);\r\n  public location = inject(Location);\r\n  public router = inject(Router);\r\n  public viewsService = inject(UserViewsService);\r\n  public languageService = inject(LanguageService);\r\n  public authService = inject(AuthService);\r\n  public fb = inject(FormBuilder);\r\n  public datePipe = inject(DatePipe);\r\n  public title = inject(Title);\r\n  public fileService = inject(FileService);\r\n  public paramsService = inject(ParamsService);\r\n  public assets: AssetsManager = new AssetsManager();\r\n  public svgManager: SvgManager = new SvgManager();\r\n  public page: Page = new Page();\r\n  public viewsManager = ViewsManager;\r\n\r\n  personId?: number;\r\n  moduleId?: number;\r\n  parentModuleId?: number;\r\n  rowFunctions: IRowActionsModel;\r\n  globalFunctions: IGUIModel[];\r\n  customViews: IGUIModel[];\r\n  businessCompanyParams = {} as IBusinessCompanyParams;\r\n  businessCompanyParamsSubscription: Subscription;\r\n  pageFromUrl: number;\r\n  btn = Btn;\r\n  backToParentOnChangeCompany$ = new Subject(); // using for check if user change company to back to index\r\n  cancelRequest$ = new Subject<void>();   // using for cancel request on Destroy component\r\n  // showSideDashboard: boolean = false; // using for show sideMenu dashboards in index only by event\r\n\r\n\r\n  // Localization\r\n  versionCountryParams = {} as IVersionCountryParams;\r\n  localizationParamsSubscription: Subscription;\r\n\r\n  constructor() {\r\n\r\n    // back to parent view on change company\r\n    this.backToParentOnChangeCompany$.subscribe(e => {\r\n      if (this.checkNoBusinessOrCompany() && this.getParentViewName) {\r\n        let parentPath = this.getViewPath(this.getParentViewName);\r\n        this.router.navigateByUrl(this.router\r\n          .createUrlTree([parentPath], {\r\n            relativeTo: this.activatedRoute,\r\n            queryParams: this.parentModuleIdParam,\r\n          })\r\n        );\r\n      }\r\n    });\r\n\r\n    // start get params\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      this.moduleId = params.moduleId;\r\n    });\r\n\r\n    // start get queryParamMap\r\n    this.activatedRoute.queryParamMap.subscribe((params) => {\r\n      this.parentModuleId = Number(params.get(\"parentModuleId\"));\r\n      this.pageFromUrl = Number(params.get(\"page\"));\r\n      // if (this.pageFromUrl > 0) this.page.pageIndex = this.pageFromUrl;\r\n\r\n      // let size = Number(params.get(\"size\"));\r\n      // if (size > 0) this.page.pageSize = size;\r\n\r\n      // if (this.getViewName?.includes(\"index\")) this.removePageParams();\r\n    });\r\n\r\n    // Change Browser Page Title\r\n    if (this.getViewName) {\r\n      this.title.setTitle(\"HRMS - \" + (this.getViewName.toUpperCase() ?? \"\"));\r\n    }\r\n\r\n    // this.userId = this.authService.getUserId;\r\n    this.personId = Storage.getUserId;\r\n\r\n    // businessCompanyParams subscribe\r\n    this.businessCompanyParamsSubscription =\r\n      this.paramsService.businessCompanyParams$.subscribe((result) => {\r\n        this.businessCompanyParams = result;\r\n        if (result.BusinessEntityID > 0 && result.CompanyID > 0) {\r\n          setTimeout(() => {\r\n            this.onChangeBusinessAndCompanyId();\r\n            // if (!this.getParentViewName) this.removePageParams();\r\n          }, -1);\r\n        }\r\n      });\r\n\r\n\r\n    // version & Country Params subscribe\r\n    this.localizationParamsSubscription =\r\n      this.paramsService.versionCountryParams$.subscribe((result) => {\r\n        this.versionCountryParams = result;\r\n        if (result.VersionID > 0 && result.CountryID > 0) {\r\n          setTimeout(() => {\r\n            this.onChangeVersionOrCountry();\r\n          }, -1);\r\n        }\r\n      });\r\n\r\n    // get row & Global functions\r\n    if (this.viewsService.UserModules?.length > 0) {\r\n      this.globalFunctions = this.getGlobalFunctions(this.getViewName);\r\n      this.rowFunctions = this.getRowFunctions(this.getViewName);\r\n      this.customViews = this.getCustomViews(this.getParentViewName);\r\n      if (this.getParentViewName) {\r\n        this.rowFunctions = this.getSubRowFunctions(\r\n          this.getParentViewName,\r\n          this.getViewName\r\n        );\r\n      }\r\n      this.onModulesChanged();\r\n      // get current serviceId\r\n      this.getCurrentServiceId();\r\n    }\r\n\r\n    // subscribe  UserModules\r\n    this.viewsService.UserModules$.subscribe((val) => {\r\n      if (val?.length > 0) {\r\n        this.globalFunctions = this.getGlobalFunctions(this.getViewName);\r\n        this.rowFunctions = this.getRowFunctions(this.getViewName);\r\n        this.customViews = this.getCustomViews(this.getParentViewName);\r\n        if (this.getParentViewName) {\r\n          this.rowFunctions = this.getSubRowFunctions(\r\n            this.getParentViewName,\r\n            this.getViewName\r\n          );\r\n        }\r\n        this.onModulesChanged();\r\n        // get current serviceId\r\n        this.getCurrentServiceId();\r\n      }\r\n    });\r\n\r\n  } // end constructor\r\n\r\n\r\n  onChangeBusinessAndCompanyId(): void {\r\n    // to override in child components\r\n  }\r\n\r\n  onModulesChanged(): void {\r\n    // to override in child components\r\n  }\r\n\r\n\r\n  onChangeVersionOrCountry(): void {\r\n    // to override in [LOCALIZATION] child components\r\n  }\r\n\r\n\r\n  checkNoBusinessOrCompany(): boolean {\r\n    let objProp = (<any>Object)\r\n      .values(this.businessCompanyParams)\r\n      .every((value) => {\r\n        if (value > 0) {\r\n          return true;\r\n        }\r\n      });\r\n    return objProp;\r\n  }\r\n\r\n  checkNoVersionOrCountry(): boolean {\r\n    let objProp = (<any>Object)\r\n      .values(this.versionCountryParams)\r\n      .every((value) => {\r\n        if (value > 0) {\r\n          return true;\r\n        }\r\n      });\r\n    return objProp;\r\n  }\r\n\r\n\r\n  getCurrentServiceId(): number {\r\n    // get current serviceId\r\n    let serviceId = this.viewsService.getServiceId(this.getParentViewName ?? this.getViewName);\r\n    if (this.paramsService.serviceId$.getValue() != serviceId) {\r\n      this.paramsService.serviceId$.next(serviceId);\r\n    }\r\n    return serviceId;\r\n  }\r\n\r\n  // get current route viewName\r\n  get getViewName(): string {\r\n    let view: string = null;\r\n    this.activatedRoute.data.subscribe((data) => {\r\n      view = data.view;\r\n    });\r\n    return view;\r\n  }\r\n\r\n  // get current route Parent viewName\r\n  get getParentViewName(): string {\r\n    let parentView: string;\r\n    this.activatedRoute.queryParamMap.subscribe((params) => {\r\n      parentView = params.get(\"parentView\") ?? null;\r\n    });\r\n    return parentView;\r\n  }\r\n\r\n  // get current route parentId\r\n  get getParentId(): number {\r\n    let parentId: number = null;\r\n    this.activatedRoute.queryParamMap.subscribe((params) => {\r\n      parentId = Number(params.get(\"parantId\"));\r\n    });\r\n    return parentId;\r\n  }\r\n\r\n  // check is view is allowed for this role or no\r\n  isViewAllowed(viewNamm: string): boolean {\r\n    return this.viewsService.isViewAllowed(viewNamm);\r\n  }\r\n\r\n  getRowFunctions(viewName: string): IRowActionsModel {\r\n    if (viewName) {\r\n      return this.viewsService.getRowFunctions(viewName);\r\n    }\r\n  }\r\n\r\n\r\n  getRowFunByViewname(viewName: string): IRowActionsModel {\r\n    if (viewName) {\r\n      return this.viewsService.getRowFunByViewname(viewName);\r\n    }\r\n  }\r\n\r\n  getSubRowFunctions(parentView: string, viewName: string): IRowActionsModel {\r\n    if (parentView && viewName) {\r\n      return this.viewsService.getSubRowFunctions(parentView, viewName);\r\n    }\r\n  }\r\n\r\n  getCustomViewChildren(parentView: string, viewName: string): IGUIModel[] {\r\n    if (parentView && viewName) {\r\n      return this.viewsService.getCustomViewChildren(parentView, viewName);\r\n    }\r\n  }\r\n\r\n  getGlobalFunctions(viewName: string): IGUIModel[] {\r\n    if (viewName) {\r\n      return this.viewsService.getGlobalFunctions(viewName);\r\n    }\r\n  }\r\n\r\n  getCustomViews(viewName: string): IGUIModel[] {\r\n    if (viewName) {\r\n      return this.viewsService.getCustomViews(viewName);\r\n    }\r\n  }\r\n\r\n  getViewPath(viewName: string): string {\r\n    if (viewName) {\r\n      return this.viewsService.getViewPath(viewName);\r\n    }\r\n  }\r\n\r\n  removePageParams() {\r\n    this.pageFromUrl = 0;\r\n    const queryParams = {...this.activatedRoute.snapshot.queryParams};\r\n    delete queryParams[\"page\"];\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParams,\r\n    });\r\n  }\r\n\r\n  // CompanyID & BusinessEntityID Params\r\n  // get businessCompanyParams(): IBusinessCompanyParams {\r\n  // \treturn {\r\n  // \t\tCompanyID: this.companyId,\r\n  // \t\tBusinessEntityID: this.businessId,\r\n  // \t};\r\n  // }\r\n\r\n  // Page Param\r\n  get pageParams() {\r\n    return {\r\n      page: this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage,\r\n      ...this.parentModuleIdParam,\r\n      // size: this.page.pageSize,\r\n    };\r\n  }\r\n\r\n  // Parent Module Id param\r\n  get parentModuleIdParam() {\r\n    return {\r\n      parentModuleId: this.parentModuleId > 0 ? this.parentModuleId : null,\r\n    };\r\n  }\r\n\r\n  // Parent Params\r\n  get parentParam() {\r\n    return {\r\n      parentView: this.getParentViewName,\r\n      ...this.parentModuleIdParam,\r\n    };\r\n  }\r\n\r\n  // return all current page params\r\n  get currentPageParams() {\r\n    return {\r\n      ...this.parentParam,\r\n      ...this.pageParams,\r\n    };\r\n  }\r\n\r\n  // navigate to url with params without reload or change data [ parentModuleId, ParentView ]\r\n  navigateTo(path: string) {\r\n    const url = this.router\r\n      .createUrlTree([path], {\r\n        relativeTo: this.activatedRoute,\r\n        queryParams: this.parentParam,\r\n      })\r\n      .toString();\r\n    this.location.replaceState(url.toString());\r\n\r\n    // this.router.navigate([url], { queryParams: this.parentParam });\r\n  }\r\n\r\n  get firstPage() {\r\n    return 1;\r\n  }\r\n\r\n  get currentPage() {\r\n    return this.page.pageIndex;\r\n  }\r\n\r\n  get prevPage() {\r\n    return this.page.pageIndex - 1;\r\n  }\r\n\r\n  get nextPage() {\r\n    return this.page.pageIndex + 1;\r\n  }\r\n\r\n  get lastPage() {\r\n    return Math.floor(this.page.length / this.page.pageSize) + 1;\r\n  }\r\n\r\n  get lastPageDialog() {\r\n    return Math.floor(this.page.length / this.page.dialogSize) + 1;\r\n  }\r\n\r\n  // translate message\r\n  msgTranslate(arProp: string, enProp?: string): string {\r\n    return msgTranslate(arProp, enProp);\r\n  }\r\n\r\n  // get localization by key\r\n  translate(key: string): string {\r\n    return this.languageService.translate(key);\r\n  }\r\n\r\n  deleteDialog(data: any) {\r\n    return this.dialogsService.deleteDialog(data);\r\n  }\r\n\r\n  confirmDialog(data: any) {\r\n    return this.dialogsService.confirmDialog(data);\r\n  }\r\n\r\n  //#region START: ngx Toaster\r\n  success(\r\n    message: string,\r\n    title?: string,\r\n    override?: Partial<IndividualConfig>\r\n  ) {\r\n    return this.messagesService.success(message, title, override);\r\n  }\r\n\r\n  warning(\r\n    message: string,\r\n    title?: string,\r\n    override?: Partial<IndividualConfig>\r\n  ) {\r\n    return this.messagesService.warning(message, title, override);\r\n  }\r\n\r\n  error(message: string, title?: string, override?: Partial<IndividualConfig>) {\r\n    return this.messagesService.error(message, title, override);\r\n  }\r\n\r\n  info(message: string, title?: string, override?: Partial<IndividualConfig>) {\r\n    return this.messagesService.info(message, title, override);\r\n  }\r\n\r\n  errorList(errorsList: any[]) {\r\n    return this.messagesService.errorList(errorsList);\r\n  }\r\n\r\n  infoList(errorsList: any[]) {\r\n    return this.messagesService.infoList(errorsList);\r\n  }\r\n\r\n  // delete Successfully Toaster\r\n  deleteSuccessfullyMsg(message) {\r\n    return this.success(\"General.deleteSuccessfully\", message);\r\n  }\r\n\r\n  // add Successfully Toaster\r\n  addSuccessfullyMsg(message) {\r\n    return this.success(\"General.addSuccessfully\", message);\r\n  }\r\n\r\n  // update Successfully Toaster\r\n  updateSuccessfullyMsg(message) {\r\n    return this.success(\"General.updateSuccessfully\", message);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region START: Ngx Spinner\r\n  showLoading(name?: string | any) {\r\n    // this.loadingService.show(name);\r\n    // this.loadingService.$spinnerName.next(name);\r\n    this.loadingService.$display.next(true);\r\n  }\r\n\r\n  hideLoading(name?: string | any) {\r\n    //  this.loadingService.hide(name);\r\n    // this.loadingService.$spinnerName.next(name);\r\n    this.loadingService.$display.next(false);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region START: Prime Toaster\r\n  successPrime(message: string, title?: string) {\r\n    this.messageService.add({\r\n      severity: \"success\",\r\n      summary: title,\r\n      detail: message,\r\n    });\r\n  }\r\n\r\n  infoPrime(message: string, title?: string) {\r\n    this.messageService.add({\r\n      severity: \"info\",\r\n      summary: title,\r\n      detail: message,\r\n    });\r\n  }\r\n\r\n  warningPrime(message: string, title?: string) {\r\n    this.messageService.add({\r\n      severity: \"warn\",\r\n      summary: title,\r\n      detail: message,\r\n    });\r\n  }\r\n\r\n  errorPrime(message: string, title?: string) {\r\n    this.messageService.add({\r\n      severity: \"error\",\r\n      summary: title,\r\n      detail: message,\r\n    });\r\n  }\r\n\r\n  //#endregion\r\n\r\n  // using for cancel request on Destroy component\r\n  protected cancelRequest() {\r\n    return takeUntil(this.cancelRequest$);\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.businessCompanyParamsSubscription.unsubscribe();\r\n    this.localizationParamsSubscription.unsubscribe();\r\n    // unsubscribe from all observables to prevent memory leaks\r\n    this.cancelRequest$.next();\r\n    this.cancelRequest$.complete();\r\n    this.hideLoading();\r\n\r\n    this.paramsService.serviceId$.complete();\r\n    this.messagesService.clear();\r\n    // this.cancelRequest$.complete();\r\n  }\r\n}\r\n\r\n// START: Page Class\r\nexport class Page {\r\n  pageSize: number; // current page size\r\n  pageIndex: number; // current page index\r\n  length: number; // total items count\r\n  dialogSize: number;\r\n  pageSizeOptions: number[];\r\n  dialogSizeOptions: number[];\r\n  numberOfNavs: number = 5;\r\n  meta: IMetaModel;\r\n\r\n  constructor(\r\n    pageSize = 10,\r\n    pageIndex = 1,\r\n    length = 0,\r\n    dialogSize = 5,\r\n    numberOfPages = 3,\r\n    pageSizeOptions = [2, 5, 10, 20, 50, 100],\r\n    dialogSizeOptions = [2, 5],\r\n    meta?: IMetaModel\r\n  ) {\r\n    this.pageSize = pageSize;\r\n    this.pageIndex = pageIndex;\r\n    this.length = length;\r\n    this.dialogSize = dialogSize;\r\n    this.pageSizeOptions = pageSizeOptions;\r\n    this.dialogSizeOptions = dialogSizeOptions;\r\n    this.numberOfNavs = numberOfPages;\r\n    this.numberOfNavs = numberOfPages;\r\n    this.meta = meta;\r\n  }\r\n}\r\n","export class AssetsManager {\r\n  public readonly arFlag: string = \"assets/img/flags/ar.png\";\r\n  public readonly enFlag: string = \"assets/img/flags/us.png\";\r\n  public readonly logo: string = \"assets/img/logos/logo.png\";\r\n  public readonly darkLogo: string = \"assets/img/logos/logo-dark.png\";\r\n  public readonly lock: string = \"assets/img/gallery/lock.png\";\r\n  public readonly notFound: string = \"assets/img/gif/error-404.gif\";\r\n  public readonly error: string = \"assets/img/gallery/error.png\";\r\n  public readonly login: string = \"assets/img/gallery/login.png\";\r\n  public readonly pdfIcon: string = \"assets/img/icons/pdf.png\";\r\n  public readonly emp_profile_banner: string = \"assets/img/banner/profile_banner.jpg\";\r\n  public readonly empty: string = \"assets/img/gif/empty.gif\";\r\n  public readonly avatar: string = \"assets/img/user.png\";\r\n  public readonly user_avatar: string = \"assets/img/user_avatar.png\";\r\n  public readonly user_avatar_rounded: string = \"assets/img/user_avatar_rounded.png\";\r\n}\r\n\r\nexport class JsonAssets {\r\n  public readonly notFoundJson: string = \"assets/json/not-found-blue.json\";\r\n  public readonly serverError: string = \"assets/json/serverr-error.json\";\r\n  public readonly start: string = \"/assets/json/oil_pump2.json\";\r\n  public readonly loadingJson: string = \"/assets/json/loading-animation.json\";\r\n}\r\n\r\n\r\nexport class SvgManager {\r\n  public readonly pdf: string = \"assets/svg/pdf.svg\";\r\n  public readonly word: string = \"assets/svg/word.svg\";\r\n  public readonly excel: string = \"/assets/svg/excel.svg\";\r\n  public readonly img: string = \"/assets/svg/img.svg\";\r\n  public readonly file: string = \"/assets/svg/file.svg\";\r\n  public readonly done: string = \"/assets/svg/done.svg\";\r\n}\r\n","import { Component, inject, OnDestroy } from \"@angular/core\";\r\nimport { DialogsService } from \"app/shared/services/dialogs.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { UserViewsService } from \"app/auth/services/user-views.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { AuthService } from \"app/auth/services/auth.service\";\r\nimport { FileService } from \"app/shared/services/file.service\";\r\nimport { ParamsService } from \"app/shared/services/params.service\";\r\nimport { IBusinessCompanyParams, IVersionCountryParams } from \"app/shared/interfaces/params\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\n\r\n@Component({\r\n  selector: \"base-component\",\r\n  template: \"\",\r\n})\r\nexport class BaseDropdown implements OnDestroy {\r\n  public dialogsService = inject(DialogsService);\r\n  public messagesService = inject(MessagesService);\r\n  public viewsService = inject(UserViewsService);\r\n  public languageService = inject(LanguageService);\r\n  public authService = inject(AuthService);\r\n  public fileService = inject(FileService);\r\n  public paramsService = inject(ParamsService);\r\n\r\n  businessCompanyParams = {} as IBusinessCompanyParams;\r\n  businessCompanyParamsSubscription: Subscription;\r\n  cancelRequest$ = new Subject<void>();   // using for cancel request on Destroy component\r\n\r\n\r\n  // Localization\r\n  versionCountryParams = {} as IVersionCountryParams;\r\n  localizationParamsSubscription: Subscription;\r\n\r\n  constructor() {\r\n    // businessCompanyParams subscribe\r\n    this.businessCompanyParamsSubscription =\r\n      this.paramsService.businessCompanyParams$.subscribe((result) => {\r\n        this.businessCompanyParams = result;\r\n        if (result.BusinessEntityID > 0 && result.CompanyID > 0) {\r\n          setTimeout(() => {\r\n            this.onChangeBusinessAndCompanyId();\r\n            // if (!this.getParentViewName) this.removePageParams();\r\n          }, -1);\r\n        }\r\n      });\r\n\r\n\r\n    // version & Country Params subscribe\r\n    this.localizationParamsSubscription =\r\n      this.paramsService.versionCountryParams$.subscribe((result) => {\r\n        this.versionCountryParams = result;\r\n        if (result.VersionID > 0 && result.CountryID > 0) {\r\n          setTimeout(() => {\r\n            this.onChangeVersionOrCountry();\r\n          }, -1);\r\n        }\r\n      });\r\n\r\n    // get row & Global functions\r\n    if (this.viewsService.UserModules?.length > 0) {\r\n      this.onModulesChanged();\r\n    }\r\n\r\n    // subscribe  UserModules\r\n    this.viewsService.UserModules$.subscribe((val) => {\r\n      this.onModulesChanged();\r\n    });\r\n\r\n  } // end constructor\r\n\r\n  onChangeBusinessAndCompanyId(): void {\r\n    // to override in child components\r\n  }\r\n\r\n  onModulesChanged(): void {\r\n    // to override in child components\r\n  }\r\n\r\n  onChangeVersionOrCountry(): void {\r\n    // to override in [LOCALIZATION] child components\r\n  }\r\n\r\n\r\n  checkNoBusinessOrCompany(): boolean {\r\n    let objProp = (<any>Object)\r\n      .values(this.businessCompanyParams)\r\n      .every((value) => {\r\n        if (value > 0) {\r\n          return true;\r\n        }\r\n      });\r\n    return objProp;\r\n  }\r\n\r\n\r\n  checkNoVersionOrCountry(): boolean {\r\n    let objProp = (<any>Object)\r\n      .values(this.versionCountryParams)\r\n      .every((value) => {\r\n        if (value > 0) {\r\n          return true;\r\n        }\r\n      });\r\n    return objProp;\r\n  }\r\n\r\n  // check is view is allowed for this role or no\r\n  isViewAllowed(viewNamm: string): boolean {\r\n    return this.viewsService.isViewAllowed(viewNamm);\r\n  }\r\n\r\n  errorList(errorsList: any[]) {\r\n    return this.messagesService.errorList(errorsList);\r\n  }\r\n\r\n  // using for cancel request on Destroy component\r\n  protected cancelRequest() {\r\n    return takeUntil(this.cancelRequest$);\r\n  }\r\n\r\n  msgTranslate(arProp: string, enProp?: string): string {\r\n    return msgTranslate(arProp, enProp);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.businessCompanyParamsSubscription.unsubscribe();\r\n    this.localizationParamsSubscription.unsubscribe();\r\n    // unsubscribe from all observables to prevent memory leaks\r\n    this.cancelRequest$.next();\r\n    this.cancelRequest$.complete();\r\n\r\n    this.paramsService.serviceId$.complete();\r\n    // this.cancelRequest$.complete();\r\n  }\r\n}\r\n","import { InputAppearance, MatColors } from \"app/shared/enums/mat-theme.enum\";\r\nimport { Languages } from \"../enums/languages.enum\";\r\nimport { Btn } from \"app/shared/enums/btns.enum\";\r\n\r\nexport class Constants {\r\n  // start with letter or _ // the content can be numbers // no space\r\n  public static readonly variableCode_pattern: RegExp =\r\n    /^[a-zA-Z_\\u0600-\\u06FF][a-zA-Z0-9_\\u0600-\\u06FF]*$/;\r\n  public static readonly oneCharacter_pattern: RegExp = /.*[a-zA-Z]+.*/;\r\n  public static readonly mobileLength: number = 11;\r\n  public static readonly mobileStartsWith: string = \"01\";\r\n  public static readonly defaultLang: Languages = Languages.en;\r\n  public static readonly defaultInputAppearance: InputAppearance = InputAppearance.outline;\r\n  public static readonly defaultFloatLabel: boolean = true;\r\n  public static readonly defaultButtonColor: Btn = Btn.darkBlue;\r\n  public static readonly defaultSliderColor: MatColors = MatColors.primary;\r\n  public static readonly nationalId: number = 14;\r\n  public static readonly mobile_pattern: RegExp = /^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/;\r\n  public static readonly endOfServiceID: number = 2;\r\n  public static readonly selectColName: string = \"selectAll\";\r\n  public static readonly checkboxColumnName: string = \"isSelected\";\r\n  public static readonly empty: string = \"\";\r\n}\r\n","export class db {\r\n  public static readonly comm_branch: string = \"comm_branch\";\r\n  public static readonly Comm_Attachment_Type: string = \"Comm_Attachment_Type\";\r\n  public static readonly Um_Services: string = \"Um_Services\";\r\n  public static readonly comm_Country: string = \"comm_Country\";\r\n  public static readonly Comm_Attachment_Type_Services: string = \"Comm_Attachment_Type_Services\";\r\n  public static readonly Core_Job_Title: string = \"Core_Job_Title\";\r\n  public static readonly Att_Attendance_Element: string = \"Att_Attendance_Element\";\r\n  public static readonly PAY_Variable: string = \"PAY_Variable\";\r\n  public static readonly att_Vacation_Age_Based: string = \"att_Vacation_Age_Based\";\r\n  public static readonly PAY_Loan_Type_Variable: string = \"PAY_Loan_Type_Variable\";\r\n  public static readonly PAY_Element_Variable: string = \"PAY_Element_Variable\";\r\n  public static readonly SAP_IntegrationPurpose: string = \"SAP_IntegrationPurpose\";\r\n  public static readonly core_Org: string = \"core_Org\";\r\n  public static readonly Core_Org_Structure_Org: string = \"Core_Org_Structure_Org\";\r\n  public static readonly Core_Org_Job_Title: string = \"Core_Org_Job_Title\";\r\n  public static readonly Core_Person_Instance: string = \"Core_Person_Instance\";\r\n  public static readonly uM_Users_Groups: string = \"uM_Users_Groups\";\r\n  public static readonly UM_Users: string = \"UM_Users\";\r\n  public static readonly core_Business_Entity: string = \"core_Business_Entity\";\r\n  public static readonly company: string = \"company\";\r\n  public static readonly core_PolicyGroup: string = \"core_PolicyGroup\";\r\n  public static readonly Att_Violation: string = \"Att_Violation\";\r\n  public static readonly Att_Type: string = \"Att_Type\";\r\n  public static readonly Att_Violation_Type: string = \"Att_Violation_Type\";\r\n  public static readonly Core_Org_TYPE: string = \"Core_Org_TYPE\";\r\n  public static readonly uM_Users: string = \"uM_Users\";\r\n  public static readonly Core_Job_Title_Family: string = \"Core_Job_Title_Family\";\r\n  public static readonly next_Job_Title: string = \"next_Job_Title\";\r\n  public static readonly trA_Course: string = \"trA_Course\";\r\n  public static readonly comm_Priority: string = \"comm_Priority\";\r\n  public static readonly core_Competence_TYPE: string = \"core_Competence_TYPE\";\r\n  public static readonly core_Competence_Detail: string = \"core_Competence_Detail\";\r\n  public static readonly core_Competence: string = \"core_Competence\";\r\n  public static readonly core_Competence_Level: string = \"core_Competence_Level\";\r\n  public static readonly core_Org_Job_Title: string = \"core_Org_Job_Title\";\r\n  public static readonly Core_Person_Instance_Job_Title: string = \"Core_Person_Instance_Job_Title\";\r\n  public static readonly Core_Person: string = \"Core_Person\";\r\n  public static readonly CORE_GENDER: string = \"CORE_GENDER\";\r\n  public static readonly Core_Religion: string = \"Core_Religion\";\r\n  public static readonly comm_Address: string = \"comm_Address\";\r\n  public static readonly comm_Governorate: string = \"comm_Governorate\";\r\n  public static readonly comm_Contact: string = \"comm_Contact\";\r\n  public static readonly comm_Contact_Type: string = \"comm_Contact_Type\";\r\n  public static readonly Core_Blood_Type: string = \"Core_Blood_Type\";\r\n  public static readonly comm_Marital_Status: string = \"comm_Marital_Status\";\r\n  public static readonly comm_Contact_Category: string = \"comm_Contact_Category\";\r\n  public static readonly comm_Military_Status: string = \"comm_Military_Status\";\r\n  public static readonly comm_Military_Grade: string = \"comm_Military_Grade\";\r\n  public static readonly corE_Family_Relation: string = \"corE_Family_Relation\";\r\n  public static readonly comm_Education_Degree: string = \"comm_Education_Degree\";\r\n  public static readonly comm_Institution: string = \"comm_Institution\";\r\n  public static readonly comm_Grade_Type: string = \"comm_Grade_Type\";\r\n  public static readonly core_Covenant: string = \"core_Covenant\";\r\n  public static readonly att_Plan: string = \"att_Plan\";\r\n  public static readonly core_Insurance_Office: string = \"core_Insurance_Office\";\r\n  public static readonly s4_SystemInstance: string = \"s4_SystemInstance\";\r\n  public static readonly saP_SystemInstance: string = \"saP_SystemInstance\";\r\n  public static readonly comm_Bank: string = \"comm_Bank\";\r\n  public static readonly Core_Location: string = \"Core_Location\";\r\n  public static readonly tra_course_type: string = \"tra_course_type\";\r\n  public static readonly TRA_Course_Holding_Years: string = \"TRA_Course_Holding_Years\";\r\n  public static readonly Core_Personal_Identity_Type: string = \"Core_Personal_Identity_Type\";\r\n  public static readonly Tra_Instructor_course: string = \"Tra_Instructor_course\";\r\n  public static readonly Tra_Instructor: string = \"Tra_Instructor\";\r\n  public static readonly TRA_TSP: string = \"TRA_TSP\";\r\n  public static readonly tra_TSP_Course: string = \"tra_TSP_Course\";\r\n  public static readonly core_Contract_Type: string = \"core_Contract_Type\";\r\n  public static readonly TRA_Reason: string = \"TRA_Reason\";\r\n  public static readonly TRA_Course: string = \"TRA_Course\";\r\n  public static readonly TRA_Training_Request: string = \"TRA_Training_Request\";\r\n  public static readonly core_Status_Properties: string = \"core_Status_Properties\";\r\n  public static readonly core_KPI: string = \"core_KPI\";\r\n  public static readonly Core_Person_Instance_Org: string = \"Core_Person_Instance_Org\";\r\n  public static readonly core_Person_Instance_Job_Title: string = \"core_Person_Instance_Job_Title\";\r\n  public static readonly core_Status: string = \"core_Status\";\r\n  public static readonly trA_PLan: string = \"trA_PLan\";\r\n  public static readonly TRA_plan_course: string = \"TRA_plan_course\";\r\n  public static readonly TRA_expense: string = \"TRA_expense\";\r\n  public static readonly core_PolicyGroup_Type: string = \"core_PolicyGroup_Type\";\r\n  public static readonly rec_request: string = \"rec_request\";\r\n  public static readonly parentJobTitle: string = \"parentJobTitle\";\r\n  public static readonly core_Grade: string = \"core_Grade\";\r\n  public static readonly core_Job_Description: string = \"core_Job_Description\";\r\n  public static readonly core_Job_Title_KPI: string = \"core_Job_Title_KPI\";\r\n  public static readonly um_services: string = \"um_services\";\r\n  public static readonly dash_dashboard: string = \"dash_dashboard\";\r\n  public static readonly Comm_Attachment: string = \"Comm_Attachment\";\r\n  public static readonly Core_Resignation_Reason: string = \"Core_Resignation_Reason\";\r\n  public static readonly Loc_Attendance_Element: string = \"Loc_Attendance_Element\";\r\n  public static readonly Loc_Violation: string = \"Loc_Violation\";\r\n  public static readonly Loc_Type: string = \"Loc_Type\";\r\n  public static readonly Loc_Violation_Type: string = \"Loc_Violation_Type\";\r\n  public static readonly Bon_Benefit: string = \"Bon_Benefit\";\r\n  public static readonly bon_Benefit_Type: string = \"bon_Benefit_Type\";\r\n}\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Languages } from \"../enums/languages.enum\";\r\nimport { Storage } from \"./local-storage\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { DialogPosition } from \"@angular/material/dialog\";\r\n\r\n// @Injectable({\r\n// \tprovidedIn: \"root\",\r\n// })\r\nexport class HelpersFunctions {\r\n  static datePipe = new DatePipe(\"en-US\");\r\n\r\n  static getMatched(data: any[], matchedProp: string) {\r\n    var filte: any[] = data\r\n      .map((item) => item[matchedProp])\r\n      .filter((name, index, currentVal) => currentVal.indexOf(name) === index);\r\n    return filte;\r\n  }\r\n\r\n  static transformData(date: string) {\r\n    return this.datePipe.transform(date, \"yyyy-MM-ddTHH:MM:SS\");\r\n  }\r\n\r\n  static mapDate(date: string) {\r\n    if (date)\r\n      return this.datePipe?.transform(date, \"dd-MM-yyyy\");\r\n    else return;\r\n  }\r\n\r\n  // get day name by date getDayName('2022-01-29') => Saturday\r\n  static getDayName(date = new Date(), locale = \"en-US\") {\r\n    return date.toLocaleDateString(locale, {weekday: \"long\"});\r\n  }\r\n\r\n  static mapDateReverse(date: string) {\r\n    return this.datePipe.transform(date, \"yyyy-MM-dd\");\r\n  }\r\n\r\n  static mapTime(time: string) {\r\n    if (time) {\r\n      let timeParts = time.split(\":\");\r\n      let date = new Date(\r\n        null,\r\n        null,\r\n        null,\r\n        Number(timeParts[0]),\r\n        Number(timeParts[1] ?? 0),\r\n        Number(timeParts[2] ?? 0)\r\n      );\r\n      return this.datePipe.transform(date, \"hh:mm a\");\r\n    }\r\n  }\r\n\r\n  static numberOfDaysInMonth(year: number, month: number): number {\r\n    // get month from 0 - 11\r\n    const date = new Date(year, month + 1, 0);\r\n    return date.getDate();\r\n  }\r\n\r\n  static objectToFormData(object, formData = new FormData(), parentKey = '') {\r\n    (<any>Object).entries(object).forEach(([key, value]) => {\r\n        const newKey = parentKey ? `${parentKey}.${key}` : key;\r\n\r\n        if (typeof value === 'object' && value !== null && !Array.isArray(value) && key != 'file' && key != 'files' ) {\r\n            // If the property is an object, recursively call the function\r\n            this.objectToFormData(value, formData, newKey);\r\n        } else if (Array.isArray(value) && (key == 'file' || key == 'files')) {\r\n            // If the property is an array, append each item separately\r\n            value.forEach((item, index) => {\r\n                if(item == null) item = \"\";\r\n                formData.append(newKey, item);\r\n            });\r\n        } else if (Array.isArray(value)) {\r\n            // If the property is an array, append each item separately\r\n            value.forEach((item, index) => {\r\n              if(typeof item == 'object') this.objectToFormData(item, formData, `${newKey}[${index}]`);\r\n              else {\r\n                if(item == null) item = \"\";\r\n                formData.append(`${newKey}[${index}]`, item);\r\n              }\r\n            });\r\n        } else {\r\n            // If the property is neither an array nor an object, append it normally\r\n            if(value == null) value = \"\";\r\n            formData.append(newKey, value);\r\n        }\r\n    });\r\n\r\n    return formData;\r\n}\r\n  // static objectToFormData(object) {\r\n  //   const formData = new FormData();\r\n  //   (<any>Object).entries(object).forEach(([key, value]) => {\r\n\r\n  //     if (Array.isArray(value)) {\r\n  //       // If the property is an array, append each item separately\r\n  //       value.forEach((item, index) => {\r\n  //         formData.append(key, item);\r\n  //       });\r\n  //     }\r\n  //     else if (typeof value === 'object' && value !== null&&key!='file' ) {\r\n\r\n  //         for (const subKey in value) {\r\n  //           if (value.hasOwnProperty(subKey)) {\r\n  //               const subValue = value[subKey];\r\n  //               formData.append(`${key}.${subKey}`, subValue);\r\n  //           }\r\n  //       }\r\n  //     }\r\n  //     else {\r\n\r\n  //       formData.append(key, value ?? \"\");\r\n  //     }\r\n\r\n  //   });\r\n\r\n\r\n  //   return formData;\r\n  // }\r\n\r\n  static noOfInvalidAndRequiredInputs(form: FormGroup): number {\r\n    let count = 0;\r\n    Object.keys(form.controls).forEach((key) => {\r\n      const control = form.get(key);\r\n      if (control?.invalid && control.errors?.required) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n\r\n  static positionLeftOrRight(\r\n    targetPositions: DOMRect,\r\n    dialogWidth: number,\r\n    isHalf: boolean,\r\n    calcDialogInLeft: boolean\r\n  ): DialogPosition {\r\n    // dialog position x-axis (right or left)\r\n    let dialogPositions: DialogPosition = {};\r\n    // can open right\r\n    if (\r\n      targetPositions.left +\r\n        (isHalf ? targetPositions.width / 2 : targetPositions.width + 10) +\r\n        dialogWidth <=\r\n      window.innerWidth\r\n    )\r\n      dialogPositions.left = `${\r\n        targetPositions.left +\r\n        (isHalf ? targetPositions.width / 2 : targetPositions.width + 10)\r\n      }px`;\r\n    // can open left\r\n    else if (\r\n      targetPositions.left -\r\n        (isHalf ? dialogWidth / 2 : dialogWidth) -\r\n        (calcDialogInLeft ? targetPositions.width / 2 - 25 : 10) >=\r\n      0\r\n    )\r\n      dialogPositions.left = `${\r\n        targetPositions.left -\r\n        (isHalf ? dialogWidth / 2 : dialogWidth) -\r\n        (calcDialogInLeft ? targetPositions.width / 2 - 25 : 10)\r\n      }px`;\r\n    // no left and no right\r\n    else dialogPositions.left = null;\r\n\r\n    return dialogPositions;\r\n  }\r\n}\r\n\r\nexport function msgTranslate(arProp: string, enProp?: string) {\r\n  return Storage.getLocalLang == Languages.ar\r\n    ? arProp ?? enProp\r\n    : enProp ?? arProp;\r\n}\r\n","import { StringsManager } from \"app/shared/resources/strings-manager\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\n\r\nexport class Storage {\r\n  static appStrings: StringsManager = new StringsManager();\r\n  static jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n  static setItem(key: string, value: any) {\r\n    localStorage.setItem(key, value);\r\n  }\r\n\r\n  static getItem(key: string) {\r\n    return localStorage.getItem(key);\r\n  }\r\n\r\n  static removeItem(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  static customClearStorag(keyToException: string) {\r\n    Object.keys(localStorage).forEach((key) => {\r\n      if (!key.includes(keyToException)) delete localStorage[key];\r\n    });\r\n  }\r\n\r\n  // ==========================================================================================================================\r\n  // Start Set & get [Language]\r\n  static setLocalLang(lang: string) {\r\n    this.setItem(this.appStrings.CURRENT_LANG, lang);\r\n  }\r\n\r\n  static get getLocalLang() {\r\n    return this.getItem(this.appStrings.CURRENT_LANG);\r\n  }\r\n\r\n  //=== Start set & get [TOKEN] ==============================================\r\n  static setToken(token: string) {\r\n    this.setItem(this.appStrings.TOKEN, token);\r\n  }\r\n\r\n  static get getToken() {\r\n    return this.getItem(this.appStrings.TOKEN ?? null);\r\n  }\r\n\r\n  // Start set & get [user type id] ===========================================\r\n  static setUserTypeId(user_type_id: any) {\r\n    this.setItem(this.appStrings.USER_TYPE_ID, user_type_id);\r\n  }\r\n\r\n  static get getUserTypeId(): number {\r\n    return Number(this.getItem(this.appStrings.USER_TYPE_ID));\r\n  }\r\n\r\n  // Start set & get [UserId] ===========================================\r\n  // static setUserId(UserId: number) {\r\n  //   this.setItem(this.appStrings.USER_ID, UserId);\r\n  // }\r\n\r\n  static get getUserId(): number {\r\n    return this.jwtHelper.decodeToken(Storage.getToken)?.UID ?? null;\r\n  }\r\n\r\n  // Start set & get [isUser] ===========================================\r\n  // static setIsUserLoggedIn(isLoggedIn: boolean) {\r\n  //   this.setItem(this.appStrings.IsLoggedIn, isLoggedIn);\r\n  // }\r\n\r\n  static get isUserLoggedIn(): boolean {\r\n    return Boolean(this.getToken ? true : false);\r\n  }\r\n\r\n  // Start set & get [selectedModule] ==============================================\r\n  // static setSelectedModule(modId) {\r\n  // \tthis.setItem(this.appStrings.selectedModule, modId);\r\n  // }\r\n  //\r\n  // static get getSelectedModule(): number {\r\n  // \treturn Number(this.getItem(this.appStrings.selectedModule ?? null));\r\n  // }\r\n  //\r\n  // static setParentModule(modId) {\r\n  // \tthis.setItem(this.appStrings.parentModule, modId);\r\n  // }\r\n  //\r\n  // static get getParentModule(): number {\r\n  // \treturn Number(this.getItem(this.appStrings.parentModule ?? null));\r\n  // }\r\n  //\r\n  // static removeSelectedModule() {\r\n  // \tthis.removeItem(this.appStrings.selectedModule);\r\n  // }\r\n\r\n  // Start set & get [businessID] ==============================================\r\n  static setBusinessID(businessID: number) {\r\n    this.setItem(this.appStrings.businessID, businessID);\r\n  }\r\n\r\n  static get getBusinessID(): number {\r\n    return Number(this.getItem(this.appStrings.businessID ?? null));\r\n  }\r\n\r\n  // Start set & get [CompanyID] ==============================================\r\n  static setCompanyID(CompanyID: number) {\r\n    this.setItem(this.appStrings.companyID, CompanyID);\r\n  }\r\n\r\n  static get getCompanyID(): number {\r\n    return Number(this.getItem(this.appStrings.companyID ?? null));\r\n  }\r\n\r\n  // Start set & get [ContractID] ==============================================\r\n  static setContractID(contractID: number) {\r\n    this.setItem(this.appStrings.contractID, contractID);\r\n  }\r\n\r\n  static get getContractID(): number {\r\n    return Number(this.getItem(this.appStrings.contractID ?? null));\r\n  }\r\n\r\n\r\n  // Start set & get [CountryID] ==============================================\r\n  static setCountryID(CountryID: number) {\r\n    this.setItem(this.appStrings.CountryID, CountryID);\r\n  }\r\n\r\n  static get getCountryID(): number {\r\n    return Number(this.getItem(this.appStrings.CountryID) ?? null);\r\n  }\r\n\r\n\r\n  // Start set & get [CountryID] ==============================================\r\n  static setVersionID(VersionID: number) {\r\n    this.setItem(this.appStrings.VersionID, VersionID);\r\n  }\r\n\r\n  static get getVersionID(): number {\r\n    return Number(this.getItem(this.appStrings.VersionID) ?? null);\r\n  }\r\n}\r\n","export class StringsManager {\r\n  public readonly arabic: string = \"عربي\";\r\n  public readonly english: string = \"English\";\r\n  public readonly CURRENT_LANG: string = \"currentLang\";\r\n  public readonly TOKEN: string = \"token\";\r\n  public readonly selectedModule: string = \"selectedModule\";\r\n  public readonly parentModule: string = \"parentModuleId\";\r\n  public readonly USER_TYPE_ID: string = \"user_type_Id\";\r\n  public readonly USER_ID: string = \"userId\";\r\n  public readonly BRANCH_ID: string = \"branchId\";\r\n  public readonly IsLoggedIn: string = \"IsLoggedIn\";\r\n  public readonly menuPosition: string = \"Side\";\r\n  public readonly toggleClass: string = \"ft-maximize\";\r\n  public readonly placement: string = \"bottom-right\";\r\n  public readonly businessID: string = \"businessID\";\r\n  public readonly companyID: string = \"CompanyID\";\r\n  public readonly contractID: string = \"ContractID\";\r\n  public readonly page: string = \"page\";\r\n  public readonly parentView: string = \"parentView\";\r\n  public readonly viewName: string = \"viewName\";\r\n  public readonly username: string = \"username\";\r\n  public readonly CountryID: string = \"CountryID\";\r\n  public readonly VersionID: string = \"VersionID\";\r\n}\r\n","export const arabicStylesList: StyleModel[] = [\r\n  {\r\n    id: \"ar_fonts\",\r\n    href: \"assets/css-rtl/ar-fonts.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style1\",\r\n    href: \"assets/css-rtl/bootstrap.min.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style2\",\r\n    href: \"assets/css-rtl/bootstrap-extended.min.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style3\",\r\n    href: \"assets/css-rtl/colors.min.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style4\",\r\n    href: \"assets/css-rtl/components.min.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style5\",\r\n    href: \"assets/css-rtl/themes/layout-dark.min.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style6\",\r\n    href: \"assets/css-rtl/plugins/switchery.min.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style7\",\r\n    href: \"assets/css-rtl/custom-rtl.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style8\",\r\n    href: \"assets/css-rtl/core/menu/horizontal-menu.min.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style9\",\r\n    href: \"assets/css-rtl/pages/dashboard1.min.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n  {\r\n    id: \"style10\",\r\n    href: \"assets/css-rtl/style-rtl.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n];\r\n\r\nexport const enStylesList: StyleModel[] = [\r\n  {\r\n    id: \"en_fonts\",\r\n    href: \"assets/css/en-fonts.css\",\r\n    rel: \"stylesheet\",\r\n  },\r\n];\r\n\r\nexport interface StyleModel {\r\n  id: string;\r\n  href: string;\r\n  rel: string;\r\n}\r\n","export class ViewsManager {\r\n  public static readonly index: string = \"index\";\r\n  // Hr Setup /////////////////////////////////////////\r\n  public static readonly nationality: string = \"nationality\";\r\n  public static readonly country: string = \"country\";\r\n  public static readonly education_degree: string = \"education-degree\";\r\n  public static readonly contract_type: string = \"contract-type\";\r\n  public static readonly religion: string = \"religion\";\r\n  public static readonly finincial_company: string = \"finincial-company\";\r\n  public static readonly insurance_office: string = \"insurance-office\";\r\n  public static readonly institution: string = \"institution\";\r\n  public static readonly bank_index: string = \"bank-index\";\r\n  public static readonly add_bank: string = \"add-bank\";\r\n  public static readonly hire_documents: string = \"hire-documents\";\r\n  public static readonly assign_to_job: string = \"assign-to-job\";\r\n  public static readonly governorate: string = \"governorate\";\r\n  public static readonly kpi: string = \"kpi\";\r\n  public static readonly identity_type: string = \"identity-type\";\r\n  public static readonly contact_type: string = \"contact-type\";\r\n  public static readonly contact_category: string = \"contact-category\";\r\n\r\n  // organization manegment setup ///////////////////////////////////\r\n  public static readonly grades: string = \"grades\";\r\n  public static readonly organizations: string = \"organizations\";\r\n  public static readonly job_families: string = \"job-families\";\r\n  public static readonly organization_types: string = \"organization-types\";\r\n  public static readonly competence_level: string = \"competence-level\";\r\n  public static readonly competence_type: string = \"competence-type\";\r\n  public static readonly disclaimer_template: string = \"disclaimer-template\";\r\n  public static readonly custodies: string = \"custodies\";\r\n  public static readonly OrganizationChart: string = \"OrganizationChart\";\r\n\r\n  //organization manegment ////////////////\r\n  public static readonly org_structure: string = \"org-structure\";\r\n  public static readonly org_structure_index: string = \"org-structure-index\";\r\n  public static readonly add_org_structure: string = \"add-org-structure\";\r\n  public static readonly org_structure_details: string =\r\n    \"org-structure-details\";\r\n  public static readonly org_kpis: string = \"org-kpis\";\r\n  public static readonly job_profile: string = \"job-profile\";\r\n  public static readonly job_profile_index: string = \"job-profile-index\";\r\n  public static readonly add_job_profile: string = \"add-job-profile\";\r\n  public static readonly assign_job_to_org: string = \"assign-job-to-org\";\r\n  public static readonly policy_group: string = \"policy-group\";\r\n  public static readonly policy_group_index: string = \"policy-group-index\";\r\n  public static readonly add_policy_group: string = \"add-policy-group\";\r\n\r\n  // personal setup\r\n  // add Employee tabs\r\n  public static readonly employees: string = \"employees\";\r\n  public static readonly employees_index: string = \"employees-index\";\r\n  public static readonly employee_profile: string = \"employee-profile\";\r\n  public static readonly emp_general_info_tab: string = \"emp-general-info-tab\";\r\n  public static readonly emp_personal_info_tab: string =\r\n    \"emp-personal-info-tab\";\r\n  public static readonly emp_career_tab: string = \"emp-career-tab\";\r\n  public static readonly employment_info_tab: string = \"employment-info-tab\";\r\n  public static readonly emp_balances_tab: string = \"employee-balances-tab\";\r\n  public static readonly emp_sap_integration_tab: string =\r\n    \"emp-sap-integration-tab\";\r\n  public static readonly emp_payments_info_tab: string =\r\n    \"emp-payments-info-tab\";\r\n  public static readonly emp_general_info_sec: string = \"emp-general-info-sec\";\r\n  public static readonly emp_personal_info_sec: string =\r\n    \"emp-personal-info-sec\";\r\n  public static readonly emp_contact_address_sec: string =\r\n    \"emp-contact-address-sec\";\r\n  public static readonly emp_dependants_sec: string = \"emp-dependants-sec\";\r\n  public static readonly emp_military_data_sec: string =\r\n    \"emp-military-data-sec\";\r\n  public static readonly emp_documents_sec: string = \"emp-documents-sec\";\r\n  public static readonly emp_education_sec: string = \"emp-education-sec\";\r\n  public static readonly emp_work_experience_sec: string =\r\n    \"emp-work-experience-sec\";\r\n  public static readonly emp_job_info_sec: string = \"emp-job-info-sec\";\r\n  public static readonly emp_job_info_supervisor_sec: string =\r\n    \"emp-job-info-supervisor-sec\";\r\n  public static readonly emp_job_info_assign_manager_sec: string =\r\n    \"emp-job-info-assign-manager-sec\";\r\n  public static readonly emp_job_info_contract_sec: string =\r\n    \"emp-job-info-contract-sec\";\r\n  public static readonly emp_work_schedule_sec: string =\r\n    \"emp-work-schedule-sec\";\r\n  public static readonly emp_hiring_documents_sec: string =\r\n    \"emp-hiring-documents-sec\";\r\n  public static readonly emp_location_sec: string = \"emp-location-sec\";\r\n  public static readonly emp_custodies_sec: string = \"emp-custodies-sec\";\r\n  public static readonly emp_social_insurance_sec: string =\r\n    \"emp-social-insurance-sec\";\r\n  public static readonly emp_medical_insurance_sec: string =\r\n    \"emp-medical-insurance-sec\";\r\n  public static readonly emp_vacation_sec: string = \"emp-vacation-sec\";\r\n  public static readonly emp_permission_sec: string = \"emp-permission-sec\";\r\n  public static readonly emp_SAPB1_sec: string = \"emp-SAPB1-sec\";\r\n  public static readonly emp_S4Hana_sec: string = \"emp-S4Hana-sec\";\r\n  public static readonly emp_ERP_integration_sec: string =\r\n    \"emp-ERP-integration-sec\";\r\n  public static readonly emp_payroll_data_sec: string = \"emp-payroll-data-sec\";\r\n  public static readonly emp_banking_account_data_sec: string =\r\n    \"emp-banking-account-data-sec\";\r\n  public static readonly assign_plan: string = \"assign-plan\";\r\n\r\n  public static readonly employees_activation: string = \"employees-activation\";\r\n\r\n  // payroll setup\r\n  public static readonly payroll_elements: string = \"payroll-elements\";\r\n  public static readonly payroll_elements_index: string =\r\n    \"payroll-elements-index\";\r\n  public static readonly add_payroll_elements: string = \"add-payroll-elements\";\r\n  public static readonly payment_types: string = \"payment-types\";\r\n  public static readonly loans: string = \"loans\";\r\n  public static readonly loan_types: string = \"loan-types\";\r\n  public static readonly loan_rules: string = \"loan-rules\";\r\n\r\n  // general setup\r\n  public static readonly activation_setup: string = \"activation-setup\";\r\n  public static readonly attachment_types: string = \"attachment-types\";\r\n  public static readonly users_index: string = \"users-index\";\r\n  public static readonly add_user: string = \"add-user\";\r\n  public static readonly personal_notification_index: string =\r\n    \"personal-notification-index\";\r\n  public static readonly add_personal_notification: string =\r\n    \"add-personal-notification\";\r\n  public static readonly iso_code: string = \"iso-code\";\r\n  public static readonly company_code: string = \"company-code\";\r\n  public static readonly groups_index: string = \"groups-index\";\r\n  public static readonly add_group: string = \"add-group\";\r\n\r\n  // attendance setup\r\n  public static readonly attendance_devices: string = \"attendance-devices\";\r\n  public static readonly official_holidays: string = \"official-holidays\";\r\n  public static readonly holidays_calendar: string = \"holidays-calendar\";\r\n  public static readonly location: string = \"location\";\r\n  public static readonly attendance_element: string = \"attendance-element\";\r\n  public static readonly over_time_type: string = \"over-time-type\";\r\n  public static readonly permission_index: string = \"permission-index\";\r\n  public static readonly add_permission: string = \"add-permission\";\r\n  public static readonly edit_permission: string = \"edit-permission\";\r\n  public static readonly vacation_index: string = \"vacation-index\";\r\n  public static readonly add_vacation: string = \"add-vacation\";\r\n  public static readonly shifts_index: string = \"shifts-index\";\r\n  public static readonly add_shift: string = \"add-shift\";\r\n  public static readonly plan_index: string = \"plan-index\";\r\n  public static readonly add_plan: string = \"add-plan\";\r\n  public static readonly shrink: string = \"shrink\";\r\n  public static readonly extend_without_change: string =\r\n    \"extend-without-change\";\r\n  public static readonly extend_with_change: string = \"extend-with-change\";\r\n  public static readonly plan_details: string = \"plan-details\";\r\n  public static readonly attendance_period: string = \"attendance-period\";\r\n  public static readonly attendance_penalty_setup: string =\r\n    \"attendance-penalty-setup\";\r\n\r\n  // sap setup\r\n  public static readonly system_instance: string = \"system-instance\";\r\n  public static readonly system_instance_index: string =\r\n    \"system-instance-index\";\r\n  public static readonly add_system_instance: string = \"add-system-instance\";\r\n  public static readonly sap_account_map: string = \"sap-account-map\";\r\n  public static readonly sap_account_map_index: string =\r\n    \"sap-account-map-index\";\r\n  public static readonly add_sap_account_map: string = \"add-sap-account-map\";\r\n  public static readonly sap_loan_type_account: string =\r\n    \"sap-loan-type-account\";\r\n\r\n  // s4 setup\r\n  public static readonly s4_system_instance: string = \"s4-system-instance\";\r\n  public static readonly s4_system_instance_index: string =\r\n    \"s4-system-instance-index\";\r\n\r\n  public static readonly add_s4_system_instance: string =\r\n    \"add-s4-system-instance\";\r\n  public static readonly s4_account_map: string = \"s4-account-map\";\r\n  public static readonly s4_account_map_index: string = \"s4-account-map-index\";\r\n  public static readonly add_s4_account_map: string = \"add-s4-account-map\";\r\n\r\n  // penalty setup\r\n  public static readonly penalties: string = \"penalties\";\r\n  public static readonly violation_types: string = \"violation-types\";\r\n  public static readonly penalty_regulations: string = \"penalty-regulations\";\r\n  public static readonly penalty_regulations_index: string =\r\n    \"penalty-regulations-index\";\r\n  public static readonly add_penalty_regulations: string =\r\n    \"add-penalty-regulations\";\r\n  public static readonly violations_index: string = \"violations-index\";\r\n  public static readonly add_violation: string = \"add-violation\";\r\n\r\n  // pms setup\r\n  public static readonly unit: string = \"unit\";\r\n\r\n  //training setup\r\n  public static readonly survey_type: string = \"survey-type\";\r\n  public static readonly test_type: string = \"test-type\";\r\n  public static readonly question_category: string = \"question-category\";\r\n  public static readonly course_type: string = \"course-type\";\r\n  public static readonly course_category: string = \"course-category\";\r\n  public static readonly expense: string = \"expense\";\r\n  public static readonly reasons: string = \"reasons\";\r\n\r\n  // training\r\n  public static readonly course: string = \"course\";\r\n  public static readonly course_index: string = \"course-index\";\r\n  public static readonly add_course: string = \"add-course\";\r\n  public static readonly tsp: string = \"tsp\";\r\n  public static readonly tsp_index: string = \"tsp-index\";\r\n  public static readonly add_tsp: string = \"add-tsp\";\r\n  public static readonly instructor: string = \"instructor\";\r\n  public static readonly instructor_index: string = \"instructor-index\";\r\n  public static readonly add_instructor: string = \"add-instructor\";\r\n  public static readonly training_request: string = \"training-request\";\r\n  public static readonly training_request_index: string =\r\n    \"training-request-index\";\r\n  public static readonly add_training_request: string = \"add-training-request\";\r\n  public static readonly training_plan: string = \"training-plan\";\r\n  public static readonly training_plan_index: string = \"training-plan-index\";\r\n  public static readonly add_training_plan: string = \"add-training-plan\";\r\n  public static readonly plan_tna: string = \"plan-tna\";\r\n  public static readonly plan_course: string = \"plan-course\";\r\n  public static readonly plan_course_general_data: string =\r\n    \"plan-course-general-data\";\r\n  public static readonly plan_course_expense: string = \"plan-course-expense\";\r\n  public static readonly implementation: string = \"implementation\";\r\n  public static readonly implementation_index: string = \"implementation-index\";\r\n  public static readonly add_implementation: string = \"add-implementation\";\r\n  public static readonly implementation_lecture: string =\r\n    \"implementation-lecture\";\r\n  public static readonly implementation_expense: string =\r\n    \"implementation-expense\";\r\n  public static readonly implementation_employees: string =\r\n    \"implementation-employees\";\r\n\r\n  // dashboard\r\n  public static readonly dashboard_setup: string = \"dashboard-setup\";\r\n  public static readonly dashboard_properties: string = \"dashboard-properties\";\r\n  public static readonly properties: string = \"properties\";\r\n  public static readonly home_dashboard: string = \"home-dashboard\";\r\n  public static readonly module_dashboard: string = \"module-dashboard\";\r\n\r\n  // recruitment\r\n  public static readonly request: string = \"request\";\r\n  public static readonly request_index: string = \"request-index\";\r\n  public static readonly add_request: string = \"add-request\";\r\n  public static readonly candidate: string = \"candidate\";\r\n  public static readonly candidate_index: string = \"candidate-index\";\r\n  public static readonly add_candidate: string = \"add-candidate\";\r\n\r\n  // Localization Setup\r\n  public static readonly version: string = \"version\";\r\n  public static readonly version_index: string = \"version-index\";\r\n  public static readonly add_version: string = \"add-version\";\r\n  public static readonly localization_violations: string =\r\n    \"localization-violations\";\r\n  public static readonly localization_violations_index: string =\r\n    \"localization-violation-index\";\r\n  public static readonly localization_add_violation: string =\r\n    \"localization-add-violation\";\r\n  public static readonly localization_penalty_regulations: string =\r\n    \"localization-penalty-regulations\";\r\n  public static readonly localization_penalty_regulations_index: string =\r\n    \"localization-penalty-regulations-index\";\r\n  public static readonly localization_add_penalty_regulations: string =\r\n    \"localization-add-penalty-regulations\";\r\n  public static readonly localization_penalties: string =\r\n    \"localization-penalties\";\r\n  public static readonly localization_violation_types: string =\r\n    \"localization-violation-types\";\r\n  public static readonly localization_vacations: string =\r\n    \"localization-vacations\";\r\n  public static readonly localization_vacation_index: string =\r\n    \"localization-vacation-index\";\r\n  public static readonly localization_add_vacation: string =\r\n    \"localization-add-vacation\";\r\n\r\n  // Bonus Setup\r\n  public static readonly bonus_benefit_type: string = \"bonus-benefit-type\";\r\n  public static readonly bonus_benefit: string = \"bonus-benefit\";\r\n}\r\n","import { Routes } from \"@angular/router\";\r\n\r\n//Route for content layout without sidebar, navbar and footer for pages like Login, Registration etc...\r\n\r\nexport const CONTENT_ROUTES: Routes = [\r\n\r\n\r\n  {\r\n    path: \"auth\",\r\n    loadChildren: () =>\r\n      import(\"../../auth/auth.module\").then((m) => m.AuthModule),\r\n  },\r\n];\r\n","import { Routes } from \"@angular/router\";\r\nimport { CheckTokenGuard } from \"../Guards/check-token.guard\";\r\nimport { GetModuleIdGuard } from \"../Guards/get-module-id.guard\";\r\nimport { HomeMenuComponent } from \"../home-menu/home-menu.component\";\r\nimport { LocalizationCoreComponent } from \"app/system-setup/localization-setup/localization-core/localization-core.component\";\r\n\r\n//Route for content layout with sidebar, navbar and footer.\r\n\r\nexport const Full_ROUTES: Routes = [\r\n  {\r\n    path: \"home\",\r\n    component: HomeMenuComponent,\r\n    canActivate: [CheckTokenGuard],\r\n    data: {\r\n      breadcrumb: {\r\n        label: \"home\",\r\n      },\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"org-management-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\r\n        \"../../system-setup/org-management-setup/org-management-setup.module\"\r\n      ).then((m) => m.OrgManagementSetupModule),\r\n  },\r\n\r\n  {\r\n    path: \"hr-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../system-setup/hr-setup/hr-setup.module\").then(\r\n        (m) => m.HrSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"personnel-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../personnel-setup/personnel-setup.module\").then(\r\n        (m) => m.PersonnelSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"payroll-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../system-setup/payroll-setup/payroll-setup.module\").then(\r\n        (m) => m.PayrollSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"attendance-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\r\n        \"../../system-setup/attendance-setup/attendance-setup.module\"\r\n      ).then((m) => m.AttendanceSetupModule),\r\n  },\r\n\r\n  {\r\n    path: \"sap-business-one-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\r\n        \"../../system-setup/sap-business-one-setup/sap-business-one-setup.module\"\r\n      ).then((m) => m.SapBusinessOneSetupModule),\r\n  },\r\n\r\n  {\r\n    path: \"s4-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../system-setup/s4-setup/s4-setup.module\").then(\r\n        (m) => m.S4BusinessOneSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"penalty-regulations-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\r\n        \"../../system-setup/penalty-regulations-setup/penalty-regulations-setup.module\"\r\n      ).then((m) => m.PenaltyRegulationsSetupModule),\r\n  },\r\n\r\n  {\r\n    path: \"general-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../system-setup/general-setup/general-setup.module\").then(\r\n        (m) => m.GeneralSetupModule\r\n      ),\r\n    data: {\r\n      breadcrumb: {\r\n        label: \"general-setup\",\r\n      },\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"PMS-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../system-setup/pms-setup/pms-setup.module\").then(\r\n        (m) => m.PMSSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"org-management/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../org-management/org-management.module\").then(\r\n        (m) => m.OrgManagementModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"training-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../system-setup/training-setup/training-setup.module\").then(\r\n        (m) => m.TrainingSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"training/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../training/training.module\").then((m) => m.TrainingModule),\r\n  },\r\n\r\n  {\r\n    path: \"dashboard-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../system-setup/dashboard-setup/dashboard-setup.module\").then(\r\n        (m) => m.DashboardSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"localization-setup/:moduleId\",\r\n    component: LocalizationCoreComponent,\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\r\n        \"app/system-setup/localization-setup/localization-setup.module\"\r\n      ).then((m) => m.LocalizationSetupModule),\r\n  },\r\n\r\n  {\r\n    path: \"recruitment/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"../../recruitment/recruitment.module\").then(\r\n        (m) => m.RecruitmentModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"bonus-setup/:moduleId\",\r\n    canActivate: [CheckTokenGuard, GetModuleIdGuard],\r\n    loadChildren: () =>\r\n      import(\"app/system-setup/bonus-setup/bonus-setup.module\").then((m) => m.BonusSetupModule),\r\n  },\r\n];\r\n","import { HttpClient, HttpContext, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport { ParamsService } from \"./params.service\";\r\nimport { IBusinessCompanyParams } from \"../interfaces/params\";\r\nimport * as CryptoJS from \"crypto-js\";\r\nimport { EncryptDecryptDataService } from \"app/shared/services/encrypt-decrypt-data.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AppClientService {\r\n  https = inject(HttpClient);\r\n  encryptDataService = inject(EncryptDecryptDataService);\r\n  public _paramsService = inject(ParamsService);\r\n  businessCompanyParams: IBusinessCompanyParams;\r\n\r\n  constructor() {\r\n    this._paramsService.businessCompanyParams$.subscribe((res) => {\r\n      this.businessCompanyParams = res;\r\n    });\r\n  }\r\n\r\n  // RT means response type\r\n  // BT means Body type\r\n\r\n  baseUrl = `${environment.baseUrl}/api/`;\r\n\r\n  get<RT>(url: string, options?: optionsModel, hasGeneralParams: boolean = true) {\r\n    let opt = this.mergeOptions(options, hasGeneralParams);\r\n    let encryptUrl = this.encryptDataService.encryptUsingAES256(this.baseUrl + url);\r\n    return this.https.get<RT>(this.baseUrl + url, opt);\r\n  }\r\n\r\n  post<RT>(url: string, body: any, options?: optionsModel, hasGeneralParams: boolean = true) {\r\n    let opt = this.mergeOptions(options, hasGeneralParams);\r\n    return this.https.post<RT>(this.baseUrl + url, body, opt);\r\n  }\r\n\r\n  put<RT>(url: string, body: any, options?: optionsModel, hasGeneralParams: boolean = true) {\r\n    let opt = this.mergeOptions(options, hasGeneralParams);\r\n    return this.https.put<RT>(this.baseUrl + url, body, opt);\r\n  }\r\n\r\n  delete<RT>(url: string, options?: optionsModel, hasGeneralParams: boolean = true) {\r\n    let opt = this.mergeOptions(options, hasGeneralParams);\r\n    return this.https.delete<RT>(this.baseUrl + url, opt);\r\n  }\r\n\r\n  mergeOptions(options: optionsModel, hasGeneralParams: boolean): optionsModel {\r\n    var mergedOptions: optionsModel;\r\n    if (hasGeneralParams) {\r\n      mergedOptions = {\r\n        ...options,\r\n        params: {\r\n          ...options?.params,\r\n          ...this.businessCompanyParams,\r\n        },\r\n      };\r\n      return mergedOptions;\r\n    }\r\n    else return options;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport interface optionsModel {\r\n  headers?: HttpHeaders;\r\n  params?: HttpParams | any;\r\n  context?: HttpContext;\r\n  body?: any;\r\n}\r\n","import { Injectable, inject } from \"@angular/core\";\r\nimport { DialogPosition, MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"../components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { ConfirmDialogComponent } from \"../components/dialogs/confirm-dialog/confirm-dialog.component\";\r\nimport { HelpersFunctions } from \"../resources/helpers-functions\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DialogsService {\r\n  dialog: MatDialog = inject(MatDialog);\r\n\r\n  constructor() {}\r\n\r\n  deleteDialog(data: any) {\r\n    return this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: data,\r\n        panelClass: \"dialog-no-padding\",\r\n      }).afterClosed();\r\n  }\r\n\r\n  confirmDialog(data: any) {\r\n    return this.dialog\r\n      .open(ConfirmDialogComponent, {\r\n        data: data,\r\n      }).afterClosed();\r\n  }\r\n\r\n  addFromDropdownDialog(\r\n    component,\r\n    value?: string,\r\n    itembyId: number = 0,\r\n    options = new DialogSetting()\r\n  ) {\r\n    return this.dialog.open(component, {\r\n      data: {\r\n        value: value,\r\n        isDialog: true,\r\n        id: itembyId,\r\n      },\r\n      minWidth: options?.minWidth ?? \"60%\",\r\n      maxHeight: options?.maxHeight ?? \"80vh\",\r\n      width: options?.width,\r\n      height: options?.height,\r\n      panelClass: options.panelClass ?? \"dialog-no-padding\",\r\n      autoFocus: false,\r\n    });\r\n  }\r\n\r\n  dialogLeftOrRightCard(\r\n    component,\r\n    targetPositions: DOMRect,\r\n    dialogWidth: number,\r\n    isHalf: boolean,\r\n    maxHeight: string,\r\n    data: any,\r\n    calcDialogInLeft: boolean = false\r\n  ) {\r\n    // console.log(\"from service\");\r\n    let dialogPositions: DialogPosition = HelpersFunctions.positionLeftOrRight(\r\n      targetPositions,\r\n      dialogWidth,\r\n      isHalf,\r\n      calcDialogInLeft\r\n    );\r\n\r\n    return this.dialog\r\n      .open(component, {\r\n        data: data,\r\n        position: dialogPositions,\r\n        width: `${dialogWidth}px`,\r\n        // maxWidth: \"350px\",\r\n        maxHeight: maxHeight,\r\n        autoFocus: false,\r\n      }).afterClosed().subscribe((closed: boolean) => {});\r\n  }\r\n\r\n  addEditDialog(component, data?: any, setting = new DialogSetting()) {\r\n    return this.dialog.open(component, {\r\n      data: data,\r\n      position: {\r\n        top: setting.top,\r\n      },\r\n      minWidth: setting.minWidth,\r\n      height: setting.height,\r\n      width: setting.width,\r\n      maxWidth: setting.maxWidth,\r\n      maxHeight: setting.maxHeight,\r\n      minHeight: setting.minHeight,\r\n      panelClass: \"dialog-emp-form\",\r\n      autoFocus: false,\r\n      disableClose: setting.disableClose,\r\n    });\r\n  }\r\n}\r\n\r\nexport class DialogSetting {\r\n  minWidth?: string = \"50vw\";\r\n  minHeight?: string = \"auto\";\r\n\r\n  maxWidth?: string = \"80vw\";\r\n  maxHeight?: string = \"98vh\";\r\n\r\n  width?: string = \"auto\";\r\n  height?: string = \"auto\";\r\n\r\n  top?: \"40px\";\r\n\r\n  disableClose?: boolean = true;\r\n  panelClass?: string;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport * as CryptoJS from \"crypto-js\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class EncryptDecryptDataService {\r\n\r\n  private key = CryptoJS.enc.Utf8.parse(environment.EncryptKey);\r\n  private iv = CryptoJS.enc.Utf8.parse(environment.EncryptIV);\r\n\r\n  constructor() {}\r\n\r\n  // Methods for the encrypt and decrypt Using AES\r\n  encryptUsingAES256(text): any {\r\n    var encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(text), this.key, {\r\n      keySize: 128 / 8,\r\n      iv: this.iv,\r\n      mode: CryptoJS.mode.CBC,\r\n      padding: CryptoJS.pad.Pkcs7\r\n    });\r\n    return encrypted.toString();\r\n  }\r\n\r\n  decryptUsingAES256(decString) {\r\n    var decrypted = CryptoJS.AES.decrypt(decString, this.key, {\r\n      keySize: 128 / 8,\r\n      iv: this.iv,\r\n      mode: CryptoJS.mode.CBC,\r\n      padding: CryptoJS.pad.Pkcs7\r\n    });\r\n    return decrypted.toString(CryptoJS.enc.Utf8);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IFileBase64, IFileBinary } from \"../interfaces/files\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport { ParamsService } from \"app/shared/services/params.service\";\r\nimport { ExcelFormat, ImgFormat, PdfFormat, WordFormat } from \"app/shared/enums/files-exe\";\r\nimport { SvgManager } from \"app/shared/resources/assets-manager\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FileService {\r\n  svgManager: SvgManager = new SvgManager();\r\n\r\n  constructor(private http: HttpClient, private paramsService: ParamsService) { }\r\n\r\n  upload = (files) => {\r\n    if (files.length == 0) {\r\n      return;\r\n    }\r\n    else {\r\n      const formData = new FormData();\r\n      for (var i = 0; i < files.length; i++) {\r\n        formData.append(\"files\", files[i]);\r\n        return formData;\r\n      }\r\n    }\r\n  };\r\n\r\n  download(url: string) {\r\n    if (!url.startsWith(\"/\")) {\r\n      url = \"/\" + url;\r\n    }\r\n    window.open(environment.baseUrl + url, \"_blank\");\r\n  }\r\n\r\n  downloadByAttachId(attachId: number) {\r\n    return this.http\r\n      .get(`${environment.baseUrl}/api/` + \"Common/DownloadFile\", {\r\n        params: {\r\n          BusinessEntityID: this.paramsService.businessCompanyParams.BusinessEntityID,\r\n          CompanyID: this.paramsService.businessCompanyParams.BusinessEntityID,\r\n          AttachmentID: attachId,\r\n        },\r\n        responseType: \"blob\",\r\n      });\r\n\r\n  }\r\n\r\n  downloadFromServer(attachId: number) {\r\n    this.downloadByAttachId(attachId).subscribe((res) => {\r\n      FileSaver.saveAs(res);\r\n    });\r\n  }\r\n\r\n  downloadBase64File(base64: string, fileName: string) {\r\n    const byteCharacters = atob(base64.split(\"base64,\")[1]);\r\n    const byteNumbers = new Array(byteCharacters.length);\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers);\r\n    const blob = new Blob([byteArray], { type: \"application/octet-stream\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const anchor = document.createElement(\"a\");\r\n    anchor.download = fileName;\r\n    anchor.href = url;\r\n    anchor.click();\r\n  }\r\n\r\n  preview(url: any) {\r\n    if (url) {\r\n      if (!url.FileAsBase64) {\r\n        if (!url.startsWith(\"/\")) {\r\n          url = \"/\" + url;\r\n        }\r\n        return environment.baseUrl + url;\r\n      }\r\n      else {\r\n        return url.FileAsBase64;\r\n      }\r\n    }\r\n  }\r\n\r\n  resetFileInputs() {\r\n    const FileInputs = document.querySelectorAll(\"input[type=\\\"file\\\"]\");\r\n    FileInputs.forEach((input: any) => {\r\n      input.value = null;\r\n    });\r\n  }\r\n\r\n  resetFileById(htmlId: string) {\r\n    console.log(\"htmlId\", htmlId);\r\n    if (htmlId != null) {\r\n      (<HTMLInputElement>document?.getElementById(htmlId)).value = null;\r\n    }\r\n  }\r\n\r\n  async uploadBase64(files: any) {\r\n    let file = files[0];\r\n    if (file) {\r\n      let data = {} as IFileBase64;\r\n      var reader = new FileReader();\r\n      reader?.readAsDataURL(file);\r\n      reader.onload = (event: any) => {\r\n        data.FileAsBase64 = event.target.result; //replace(\"data:application/pdf;base64,\",\"\");\r\n      };\r\n      data.name = file.name;\r\n      data.size = file.size;\r\n      data.type = file.type;\r\n      data.LastModified = file.lastModified;\r\n      data.LastModifiedDate = file.lastModifiedDate;\r\n      return await data;\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // deal with image as hexstring\r\n\r\n  async uploadHexImage(files: File[]) {\r\n    let file: File = files[0];\r\n    if (file) {\r\n      let data = {} as IFileBinary;\r\n      var reader = new FileReader();\r\n      reader.readAsArrayBuffer(file);\r\n      reader.onload = (event: any) => {\r\n        // result > binary data of the image\r\n        data.binaryData = event.target.result;\r\n        data.hexString = this.imgageToHex(data.binaryData);\r\n        // console.log(\"Hexadecimal:\", data.hexString);\r\n      };\r\n      return await data;\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private imgageToHex(buffer: ArrayBuffer): string {\r\n    const uint8Array = new Uint8Array(buffer);\r\n    let hexString = \"\";\r\n    for (let i = 0; i < uint8Array.length; i++) {\r\n      const hex = uint8Array[i].toString(16);\r\n      hexString += hex.length === 1 ? \"0\" + hex : hex;\r\n    }\r\n    return hexString;\r\n  }\r\n\r\n  previewHexImage(hexString: string) {\r\n    if (hexString) {\r\n      let input = hexString.replace(/[^A-Fa-f0-9]/g, \"\");\r\n      if (input.length % 2) {\r\n        // console.log(\"cleaned hex string length is odd.\");\r\n        return;\r\n      }\r\n\r\n      let binary = new Array();\r\n      for (let i = 0; i < input.length / 2; i++) {\r\n        let h = input.slice(i * 2, i * 2 + 2);\r\n        binary[i] = parseInt(h, 16);\r\n      }\r\n\r\n      let base64String = \"\";\r\n      for (let i = 0; i < binary.length; i++) {\r\n        base64String += String.fromCharCode(binary[i]);\r\n      }\r\n\r\n      // btoa > convert binary string into base64\r\n      return \"data:image/png;base64,\" + btoa(base64String);\r\n    }\r\n  }\r\n\r\n  createFileFromHex(hexString, fileName, mimeType) {\r\n    let bytes = [];\r\n    for (let i = 0; i < hexString.length; i += 2) {\r\n      bytes.push(parseInt(hexString.substr(i, 2), 16));\r\n    }\r\n    let binaryData = new Uint8Array(bytes);\r\n    let blob = new Blob([binaryData], {type: mimeType});\r\n    let file = new File([blob], fileName, {type: mimeType});\r\n    return file;\r\n  }\r\n\r\n\r\n  getFileIcon(path: string): string {\r\n    const format = path?.split(\".\")[1];\r\n    if (ImgFormat.includes(format)) return this.svgManager.img;\r\n    if (WordFormat.includes(format)) return this.svgManager.word;\r\n    if (ExcelFormat.includes(format)) return this.svgManager.excel;\r\n    if (PdfFormat == format) return this.svgManager.pdf;\r\n    else return this.svgManager.file;\r\n  }\r\n\r\n}\r\n","import { Injectable, inject } from \"@angular/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { Languages } from \"../enums/languages.enum\";\r\nimport { Constants } from \"../resources/constants\";\r\nimport { Storage } from \"../resources/local-storage\";\r\nimport { StringsManager } from \"../resources/strings-manager\";\r\nimport { StyleModel, arabicStylesList, enStylesList } from \"../resources/styles-path\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class LanguageService {\r\n\tcurrentLang: string;\r\n\tisArabic: boolean;\r\n\tisEnglish: boolean;\r\n\tarStyles: StyleModel[];\r\n\tenStyles: StyleModel[];\r\n\thead: HTMLHeadElement;\r\n\tpublic appStrings: StringsManager = new StringsManager();\r\n\tpublic translateService = inject(TranslateService);\r\n\r\n\tconstructor() {\r\n\t\tthis.head = document.head;\r\n\t\tthis.arStyles = arabicStylesList;\r\n\t\tthis.enStyles = enStylesList;\r\n\t\tthis.currentLang = Storage.getLocalLang;\r\n\t}\r\n\r\n\tchangeLanguage(language: string) {\r\n\t\tthis.translateService.use(language ?? Constants.defaultLang);\r\n\t\tStorage.setLocalLang(language ?? Constants.defaultLang);\r\n\r\n\t\tthis.currentLang = language;\r\n\t\tif (this.currentLang == Languages.ar) {\r\n\t\t\tthis.isArabic = true;\r\n\t\t\tthis.isEnglish = false;\r\n\t\t} else {\r\n\t\t\tthis.isEnglish = true;\r\n\t\t\tthis.isArabic = false;\r\n\t\t}\r\n\r\n\t\tthis.changeStyle(language);\r\n\t}\r\n\r\n\ttranslate(key: string): string {\r\n\t\tlet msg;\r\n\t\tif (key) {\r\n\t\t\tthis.translateService?.get(key).subscribe((val) => {\r\n\t\t\t\tmsg = val;\r\n\t\t\t});\r\n\t\t} else msg = key;\r\n\t\treturn msg;\r\n\t}\r\n\r\n\tchangeStyle(currentLang) {\r\n\t\t// const head = document.getElementsByTagName(\"head\")[0];\r\n\t\tif (currentLang == Languages.ar) {\r\n\t\t\t// add ar style\r\n\t\t\tthis.arStyles.forEach((style) => {\r\n\t\t\t\tlet ele = document.createElement(\"link\");\r\n\t\t\t\tele.id = style.id;\r\n\t\t\t\tele.rel = style.rel;\r\n\t\t\t\tele.href = style.href;\r\n\t\t\t\tthis.head.appendChild(ele);\r\n\t\t\t});\r\n\r\n\t\t\t// remove en style\r\n\t\t\tthis.enStyles.forEach((style) => {\r\n\t\t\t\tdocument.getElementById(style.id)?.remove();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// add en style\r\n\t\t\tthis.enStyles.forEach((style) => {\r\n\t\t\t\tlet ele = document.createElement(\"link\");\r\n\t\t\t\tele.id = style.id;\r\n\t\t\t\tele.rel = style.rel;\r\n\t\t\t\tele.href = style.href;\r\n\t\t\t\tthis.head.appendChild(ele);\r\n\t\t\t});\r\n\r\n\t\t\t// remove ar style\r\n\t\t\tthis.arStyles.forEach((style) => {\r\n\t\t\t\tdocument.getElementById(style.id)?.remove();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LoadingService {\r\n  spinner = inject(NgxSpinnerService);\r\n // $spinnerName = new Subject<string>();\r\n  $display = new Subject<boolean>();\r\n\r\n  show(name?: string | any) {\r\n    this.spinner.show(name ?? undefined, {\r\n      type: \"ball-triangle-path\",\r\n      size: \"medium\",\r\n      bdColor: \"rgba(0, 0, 0, 0.8)\",\r\n      color: \"#fff\",\r\n      fullScreen: true,\r\n    });\r\n    // this.$spinnerName.next(name);\r\n    // this.$display.next(true);\r\n  }\r\n\r\n  hide(name?: string | any) {\r\n    this.spinner.hide(name ?? undefined);\r\n    // this.$spinnerName.next(null);\r\n    // this.$display.next(false);\r\n  }\r\n\r\n  getSpinner(name: string) {\r\n    this.spinner.getSpinner(name);\r\n  }\r\n}\r\n","import { ActiveToast, IndividualConfig, ToastrService } from \"ngx-toastr\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { IResponseMsg } from \"../interfaces/responces\";\r\nimport { LanguageService } from \"./language.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MessagesService {\r\n  private lang = inject(LanguageService);\r\n  private toastr = inject(ToastrService);\r\n  options = {\r\n    autoDismiss: false,\r\n    timeOut: 0,\r\n    extendedTimeOut: 0,\r\n    closeButton: true,\r\n    //  autoDismiss: false,\r\n    // timeOut: 7000,\r\n    // timeOut: 0,\r\n    // extendedTimeOut: 0,\r\n    // closeButton: true,\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  success(message: string, title?: string, override?: Partial<IndividualConfig>): ActiveToast<any> {\r\n    let msg = this.toastr.success(this.lang.translate(message), this.lang.translate(title), override);\r\n    return msg;\r\n  }\r\n\r\n  error(message: string, title?: string, override?: Partial<IndividualConfig>): ActiveToast<any> {\r\n    let msg = this.toastr.error(this.lang.translate(message), this.lang.translate(title), {...override, ...this.options});\r\n    return msg;\r\n  }\r\n\r\n  info(message: string, title?: string, override?: Partial<IndividualConfig>): ActiveToast<any> {\r\n    let msg = this.toastr.info(this.lang.translate(message), this.lang.translate(title), override);\r\n    return msg;\r\n  }\r\n\r\n  warning(message: string, title?: string, override?: Partial<IndividualConfig>): ActiveToast<any> {\r\n    let msg = this.toastr.warning(this.lang.translate(message), this.lang.translate(title), override);\r\n    return msg;\r\n  }\r\n\r\n  show(message: string, title?: string, override?: Partial<IndividualConfig>): ActiveToast<any> {\r\n    let msg = this.toastr.show(this.lang.translate(message), this.lang.translate(title), override);\r\n    return msg;\r\n  }\r\n\r\n  clear(toastId?: number) {\r\n    this.toastr.clear(toastId);\r\n  }\r\n\r\n  errorList(errorsList: any[]) {\r\n    if (errorsList?.length > 0) {\r\n      errorsList?.forEach((err: any) => {\r\n        this.error(err?.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  infoList(errorsList: IResponseMsg[]) {\r\n    if (errorsList?.length > 0) {\r\n      errorsList?.forEach((err: IResponseMsg) => {\r\n        this.info(err.message);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Subject } from \"rxjs\";\r\nimport { IBusinessCompanyParams, IVersionCountryParams } from \"../interfaces/params\";\r\nimport { Storage } from \"../resources/local-storage\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ParamsService {\r\n  businessCompanyParams = {} as IBusinessCompanyParams;\r\n  versionCountryParams = {} as IVersionCountryParams;\r\n\r\n  BusinessID$ = new Subject<number>();\r\n  CompanyID$ = new Subject<number>();\r\n  moduleId$ = new BehaviorSubject<number>(null);\r\n  parentModuleId$ = new BehaviorSubject<number>(null);\r\n  serviceId$ = new BehaviorSubject<number>(null);\r\n  businessCompanyParams$ = new BehaviorSubject<IBusinessCompanyParams>(this.businessCompanyParams);\r\n\r\n  // Localization params\r\n  CountryID$ = new Subject<number>();\r\n  VersionID$ = new Subject<number>();\r\n  versionCountryParams$ = new BehaviorSubject<IVersionCountryParams>(this.versionCountryParams);\r\n\r\n  constructor() {\r\n    this.businessCompanyParams = {\r\n      BusinessEntityID: Storage.getBusinessID,\r\n      CompanyID: Storage.getCompanyID,\r\n    };\r\n    this.businessCompanyParams$.next(this.businessCompanyParams);\r\n\r\n    // BusinessID subscribe\r\n    this.BusinessID$.subscribe((val) => {\r\n      if (this.businessCompanyParams.BusinessEntityID != val) {\r\n        this.businessCompanyParams.BusinessEntityID = val;\r\n        this.businessCompanyParams$.next(this.businessCompanyParams);\r\n      }\r\n    });\r\n\r\n    // companyId subscribe\r\n    this.CompanyID$.subscribe((val) => {\r\n      if (this.businessCompanyParams.CompanyID != val) {\r\n        this.businessCompanyParams.CompanyID = val;\r\n        this.businessCompanyParams$.next(this.businessCompanyParams);\r\n      }\r\n    });\r\n\r\n\r\n    // Localization params\r\n    this.versionCountryParams = {\r\n      CountryID: Storage.getCountryID,\r\n      VersionID: Storage.getVersionID,\r\n    };\r\n    this.versionCountryParams$.next(this.versionCountryParams);\r\n\r\n    this.VersionID$.subscribe(val => {\r\n      this.versionCountryParams.VersionID = val;\r\n      this.versionCountryParams$.next(this.versionCountryParams);\r\n    });\r\n\r\n    this.CountryID$.subscribe(val => {\r\n      this.versionCountryParams.CountryID = val;\r\n      this.versionCountryParams$.next(this.versionCountryParams);\r\n    });\r\n\r\n  }\r\n\r\n  onSelectBusiness(value: number) {\r\n    this.BusinessID$.next(value);\r\n    Storage.setBusinessID(value);\r\n  }\r\n\r\n  onSelectCompany(value: number) {\r\n    this.CompanyID$.next(value);\r\n    Storage.setCompanyID(value);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { SweetAlertIcon } from \"sweetalert2\";\r\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\r\nimport { LanguageService } from \"./language.service\";\r\n\r\ninterface AlertOptions {\r\n\ttitle: string;\r\n\ticon: SweetAlertIcon;\r\n\ticonColor?: any;\r\n\tdescribtion?: string;\r\n\tshowCancelButton?: boolean;\r\n\thtml?: any;\r\n}\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class SweetAlertService {\r\n\tconstructor(private langService: LanguageService) {}\r\n\r\n\tSweetAlert(options: AlertOptions) {\r\n\t\tSwal.fire({\r\n\t\t\ttitle: this.langService.translate(options.title),\r\n\t\t\ttext: this.langService.translate(options.describtion ?? \"\"),\r\n\t\t\ticon: options.icon,\r\n\t\t\ticonColor: options.iconColor,\r\n\t\t\tshowCancelButton: options.showCancelButton ?? false,\r\n\t\t\tconfirmButtonColor: \"#3085d6\",\r\n\t\t\tcancelButtonColor: \"#d33\",\r\n\t\t\thtml: options.html,\r\n\t\t});\r\n\t}\r\n\r\n\tpublic customSwalOptions = {\r\n\t\tshowCancelButton: true,\r\n\t\tfocusConfirm: false,\r\n\t\treturnFocus: false,\r\n\t\tcustomClass: {\r\n\t\t\tconfirmButton: \"btn btn-info bg-light-info mb-1\",\r\n\t\t\tcloseButton: \"btn btn-danger bg-light-danger mr-1 mb-1\",\r\n\t\t\tdenyButton: \"btn btn-danger bg-light-danger mr-1 mb-1\",\r\n\t\t\tcancelButton: \"btn btn-danger bg-light-danger mr-1 mb-1\",\r\n\t\t},\r\n\t};\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nexport interface ITemplateConfig {\r\n  layout: {\r\n    variant: string; // options: Dark, Light & Transparent\r\n    menuPosition: string; // options: Side, Top (Note: Use 'Side' for Vertical Menu & 'Top' for Horizontal Menu )\r\n    customizer: {\r\n      hidden: boolean; // options: true, false\r\n    };\r\n    navbar: {\r\n      type: string; // options: Static & Fixed\r\n    };\r\n    sidebar: {\r\n      //Options for Vertical Side menu\r\n      collapsed: boolean; // options: true, false\r\n      size: string; // Options: 'sidebar-lg', 'sidebar-md', 'sidebar-sm'\r\n      backgroundColor: string; // Options: 'black', 'pomegranate', 'king-yna', 'ibiza-sunset', 'flickr', 'purple-bliss', 'man-of-steel', 'purple-love'\r\n\r\n      /* If you want transparent layout add any of the following mentioned classes to backgroundColor of sidebar option :\r\n              bg-glass-1, bg-glass-2, bg-glass-3, bg-glass-4, bg-hibiscus, bg-purple-pizzaz, bg-blue-lagoon, bg-electric-viloet, bg-protage, bg-tundora\r\n            */\r\n      backgroundImage: boolean; // Options: true, false | Set true to show background image\r\n      backgroundImageURL: string;\r\n    };\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ConfigService {\r\n  public templateConf: ITemplateConfig = this.setConfigValue();\r\n  templateConfSubject = new BehaviorSubject<ITemplateConfig>(this.templateConf);\r\n  templateConf$ = this.templateConfSubject.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  // Default configurations for Light layout. Please check *customizer.service.ts* for different colors and bg images options\r\n\r\n  setConfigValue() {\r\n    return (this.templateConf = {\r\n      layout: {\r\n        variant: \"Light\",\r\n        menuPosition: \"Side\",\r\n        customizer: {\r\n          hidden: true,\r\n        },\r\n        navbar: {\r\n          type: \"Static\",\r\n        },\r\n        sidebar: {\r\n          collapsed: true,\r\n          size: \"sidebar-lg\",\r\n          backgroundColor: \"man-of-steel\",\r\n          backgroundImage: true,\r\n          backgroundImageURL: \"assets/img/sidebar-bg/01.jpg\",\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  // Default configurations for Dark layout. Please check *customizer.service.ts* for different colors and bg images options\r\n\r\n  // setConfigValue() {\r\n  //   return this.templateConf = {\r\n  //     layout: {\r\n  //       variant: \"Dark\",\r\n  //       menuPosition: \"Side\",\r\n  //       customizer: {\r\n  //         hidden: true\r\n  //       },\r\n  //       navbar: {\r\n  //         type: 'Static'\r\n  //       },\r\n  //       sidebar: {\r\n  //         collapsed: false,\r\n  //         size: \"sidebar-md\",\r\n  //         backgroundColor: \"black\",\r\n  //         backgroundImage: true,\r\n  //         backgroundImageURL: \"assets/img/sidebar-bg/01.jpg\"\r\n  //       }\r\n  //     }\r\n  //   };\r\n  // }\r\n\r\n  // Default configurations for Transparent layout. Please check *customizer.service.ts* for different colors and bg images options\r\n\r\n  // setConfigValue() {\r\n  //   return this.templateConf = {\r\n  //     layout: {\r\n  //       variant: \"Transparent\",\r\n  //       menuPosition: \"Side\",\r\n  //       customizer: {\r\n  //         hidden: true\r\n  //       },\r\n  //       navbar: {\r\n  //         type: 'Static'\r\n  //       },\r\n  //       sidebar: {\r\n  //         collapsed: false,\r\n  //         size: \"sidebar-md\",\r\n  //         backgroundColor: \"bg-glass-1\",\r\n  //         backgroundImage: true,\r\n  //         backgroundImageURL: \"\"\r\n  //       }\r\n  //     }\r\n  //   };\r\n  // }\r\n\r\n  applyTemplateConfigChange(tempConfig: ITemplateConfig) {\r\n    this.templateConf = Object.assign(this.templateConf, tempConfig);\r\n    this.templateConfSubject.next(this.templateConf);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { _ } from 'core-js';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CustomizerService {\r\n\r\n  // sidebar BG colors for Light & Dark Layout\r\n  light_dark_colors = [\r\n    {\r\n      code: \"mint\",\r\n      class: \"gradient-mint\",\r\n      active: false,\r\n      type: 'gradient'\r\n    },\r\n    {\r\n      code: \"king-yna\",\r\n      class: \"gradient-king-yna\",\r\n      active: false,\r\n      type: 'gradient'\r\n    },\r\n    {\r\n      code: \"ibiza-sunset\",\r\n      class: \"gradient-ibiza-sunset\",\r\n      active: false,\r\n      type: 'gradient'\r\n    },\r\n    {\r\n      code: \"flickr\",\r\n      class: \"gradient-flickr\",\r\n      active: false,\r\n      type: 'gradient'\r\n    },\r\n    {\r\n      code: \"purple-bliss\",\r\n      class: \"gradient-purple-bliss\",\r\n      active: false,\r\n      type: 'gradient'\r\n    },\r\n    {\r\n      code: \"man-of-steel\",\r\n      class: \"gradient-man-of-steel\",\r\n      active: false,\r\n      type: 'gradient'\r\n    },\r\n    {\r\n      code: \"purple-love\",\r\n      class: \"gradient-purple-love\",\r\n      active: false,\r\n      type: 'gradient'\r\n    },\r\n    {\r\n      code: \"black\",\r\n      class: \"bg-black\",\r\n      active: false,\r\n      type: 'solid'\r\n    },\r\n    {\r\n      code: \"white\",\r\n      class: \"bg-grey\",\r\n      active: false,\r\n      type: 'solid'\r\n    },\r\n    {\r\n      code: \"primary\",\r\n      class: \"bg-primary\",\r\n      active: false,\r\n      type: 'solid'\r\n    },\r\n    {\r\n      code: \"success\",\r\n      class: \"bg-success\",\r\n      active: false,\r\n      type: 'solid'\r\n    },\r\n    {\r\n      code: \"warning\",\r\n      class: \"bg-warning\",\r\n      active: false,\r\n      type: 'solid'\r\n    },\r\n    {\r\n      code: \"info\",\r\n      class: \"bg-info\",\r\n      active: false,\r\n      type: 'solid'\r\n    },\r\n    {\r\n      code: \"danger\",\r\n      class: \"bg-danger\",\r\n      active: false,\r\n      type: 'solid'\r\n    }\r\n  ];\r\n\r\n  // sidebar BG colors for Transparent Layout\r\n  transparent_colors = [\r\n    {\r\n      class: \"bg-glass-hibiscus\",\r\n      active: false\r\n    },\r\n    {\r\n      class: \"bg-glass-purple-pizzazz\",\r\n      active: false\r\n    },\r\n    {\r\n      class: \"bg-glass-blue-lagoon\",\r\n      active: false\r\n    },\r\n    {\r\n      class: \"bg-glass-electric-violet\",\r\n      active: false\r\n    },\r\n    {\r\n      class: \"bg-glass-portage\",\r\n      active: false\r\n    },\r\n    {\r\n      class: \"bg-glass-tundora\",\r\n      active: false\r\n    }\r\n  ];\r\n\r\n  // sidebar BG images for Light & Dark Layout\r\n  light_dark_bg_images = [\r\n    {\r\n      src: \"assets/img/sidebar-bg/01.jpg\",\r\n      active: false\r\n    },\r\n    {\r\n      src: \"assets/img/sidebar-bg/02.jpg\",\r\n      active: false\r\n    },\r\n    {\r\n      src: \"assets/img/sidebar-bg/03.jpg\",\r\n      active: false\r\n    },\r\n    {\r\n      src: \"assets/img/sidebar-bg/04.jpg\",\r\n      active: false\r\n    },\r\n    {\r\n      src: \"assets/img/sidebar-bg/05.jpg\",\r\n      active: false\r\n    },\r\n    {\r\n      src: \"assets/img/sidebar-bg/06.jpg\",\r\n      active: false\r\n    },\r\n  ];\r\n\r\n  // Background Colors with Shades for Transparent Layout\r\n  transparent_colors_with_shade = [\r\n    {\r\n      class: \"bg-glass-1\",\r\n      active: false\r\n    },\r\n    {\r\n      class: \"bg-glass-2\",\r\n      active: false\r\n    },\r\n    {\r\n      class: \"bg-glass-3\",\r\n      active: false\r\n    },\r\n    {\r\n      class: \"bg-glass-4\",\r\n      active: false\r\n    },\r\n  ];\r\n\r\n  lightDarkLayoutGradientBGColors: any = [];\r\n  lightDarkLayoutSolidBGColors: any = [];\r\n  transparentLayoutBGColors: any = [];\r\n  transparentLayoutBGColorsWithShades: any = [];\r\n  lightDarkLayoutBGImages: any = [];\r\n\r\n\r\n  constructor(private config: ConfigService) {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.lightDarkLayoutGradientBGColors = this.getlightDarkLayoutGradientBGColors();\r\n    this.lightDarkLayoutSolidBGColors = this.getlightDarkLayoutSolidBGColors();\r\n    this.transparentLayoutBGColors = this.getTransparentLayoutBGColors();\r\n    this.transparentLayoutBGColorsWithShades = this.GetTransparentLayoutBGColorsWithShades();\r\n    this.lightDarkLayoutBGImages = this.getLightDarkLayoutBGImages();\r\n  }\r\n\r\n  getlightDarkLayoutGradientBGColors() {\r\n    return this.light_dark_colors.filter(_ => _.type === 'gradient')\r\n      .map(color => {\r\n        color.active = (color.code === this.config.templateConf.layout.sidebar.backgroundColor);\r\n        return { ...color };\r\n      });\r\n  }\r\n\r\n  getlightDarkLayoutSolidBGColors() {\r\n    return this.light_dark_colors.filter(_ => _.type === 'solid')\r\n      .map(color => {\r\n        color.active = (color.code === this.config.templateConf.layout.sidebar.backgroundColor);\r\n        return { ...color };\r\n      });\r\n  }\r\n\r\n  getTransparentLayoutBGColors() {\r\n    return this.transparent_colors\r\n      .map(color => {\r\n        color.active = (color.class === this.config.templateConf.layout.sidebar.backgroundColor);\r\n        return { ...color };\r\n      });\r\n  }\r\n\r\n  GetTransparentLayoutBGColorsWithShades() {\r\n    return this.transparent_colors_with_shade\r\n      .map(color => {\r\n        color.active = (color.class === this.config.templateConf.layout.sidebar.backgroundColor);\r\n        return { ...color };\r\n      });\r\n  }\r\n\r\n  getLightDarkLayoutBGImages() {\r\n    return this.light_dark_bg_images\r\n      .map(image => {\r\n        image.active = (image.src === this.config.templateConf.layout.sidebar.backgroundImageURL);\r\n        return { ...image };\r\n      });\r\n  }\r\n\r\n\r\n\r\n  //called when click to change on any Gradient/Solid color for Light & Dark layout in customizer\r\n  changeSidebarBGColor(color) {\r\n\r\n    let conf = this.config.templateConf;\r\n    conf.layout.sidebar.backgroundColor = color.code;\r\n\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n\r\n    this.getData();\r\n\r\n  }\r\n\r\n  //called when click to change on any Transparent color for Transparent layout in customizer\r\n  changeSidebarTransparentBGColor(color) {\r\n\r\n    let conf = this.config.templateConf;\r\n    conf.layout.sidebar.backgroundColor = color.class;\r\n    conf.layout.sidebar.backgroundImage = false;\r\n    conf.layout.sidebar.backgroundImageURL = '';\r\n\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n\r\n    this.getData();\r\n  }\r\n\r\n\r\n  //called when click to change on any image for Light & Dark layout in customizer\r\n  changeSidebarBgImage(image) {\r\n\r\n    let conf = this.config.templateConf;\r\n    conf.layout.sidebar.backgroundImageURL = image.src;\r\n\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n\r\n    this.getData();\r\n\r\n  }\r\n\r\n  bgImageDisplay(e: any) {\r\n    let conf = this.config.templateConf;\r\n    if (e.target.checked) {\r\n      conf.layout.sidebar.backgroundImage = true;\r\n    } else {\r\n      conf.layout.sidebar.backgroundImage = false;\r\n    }\r\n\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n  }\r\n\r\n  toggleCompactMenu(e: any) {\r\n    let conf = this.config.templateConf;\r\n    if (e.target.checked) {\r\n      conf.layout.sidebar.collapsed = true;\r\n    } else {\r\n      conf.layout.sidebar.collapsed = false;\r\n    }\r\n\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n  }\r\n\r\n\r\n  changeSidebarWidth(value: string) {\r\n    let conf = this.config.templateConf;\r\n    conf.layout.sidebar.size = value;\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n  }\r\n\r\n  toggleNavbarType(value: string) {\r\n    let conf = this.config.templateConf;\r\n    conf.layout.navbar.type = value;\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n  }\r\n\r\n  // position: \"Side\" for vertical menu and position: \"Top\" for horizontal menu\r\n  toggleMenuPosition(position: string) {\r\n    let conf = this.config.templateConf;\r\n    conf.layout.menuPosition = position;\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n  }\r\n\r\n  switchLayout(layout: string, isBgImageDisplay: boolean) {\r\n    let conf = this.config.templateConf;\r\n    if(layout.toLowerCase() === 'light') {\r\n      conf.layout.variant = 'Light';\r\n      conf.layout.sidebar.backgroundImageURL = this.light_dark_bg_images[0].src;\r\n      conf.layout.sidebar.backgroundColor = this.light_dark_colors[5].code;\r\n      conf.layout.sidebar.backgroundImage = isBgImageDisplay;\r\n    }\r\n    else if(layout.toLowerCase() === 'dark') {\r\n      conf.layout.variant = 'Dark';\r\n      conf.layout.sidebar.backgroundImageURL = this.light_dark_bg_images[2].src;\r\n      conf.layout.sidebar.backgroundColor = this.light_dark_colors[7].code;\r\n      conf.layout.sidebar.backgroundImage = isBgImageDisplay;\r\n    }\r\n    else if(layout.toLowerCase() === 'transparent') {\r\n\r\n      conf.layout.variant = 'Transparent';\r\n      conf.layout.sidebar.backgroundImageURL = \"\";\r\n      conf.layout.sidebar.backgroundColor = this.transparent_colors_with_shade[0].class;\r\n    }\r\n\r\n    this.config.applyTemplateConfigChange({ layout: conf.layout });\r\n\r\n    this.getData();\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LayoutService {\r\n\r\n  private toggleSidebar = new Subject<boolean>(); // small screen\r\n  private overlaySidebarToggle = new Subject<boolean>();\r\n  private toggleNotiSidebar = new Subject<boolean>();\r\n\r\n\r\n  // Observable\r\n  toggleSidebar$ = this.toggleSidebar.asObservable();\r\n  overlaySidebarToggle$ = this.overlaySidebarToggle.asObservable();\r\n  toggleNotiSidebar$ = this.toggleNotiSidebar.asObservable();\r\n\r\n  toggleSidebarSmallScreen(toggle: boolean) {\r\n    this.toggleSidebar.next(toggle);\r\n  }\r\n\r\n  overlaySidebartoggle(toggle: boolean) {\r\n    this.overlaySidebarToggle.next(toggle);\r\n  }\r\n\r\n  toggleNotificationSidebar(toggle: boolean) {\r\n    this.toggleNotiSidebar.next(toggle);\r\n  }\r\n\r\n}\r\n","import { isPlatformBrowser } from \"@angular/common\";\r\nimport { ClassProvider, FactoryProvider, InjectionToken, PLATFORM_ID, Injectable } from '@angular/core';\r\n\r\n/* Create a new injection token for injecting the window into a component. */\r\nexport const WINDOW = new InjectionToken('WindowToken');\r\n\r\n/* Define abstract class for obtaining reference to the global window object. */\r\nexport abstract class WindowRef {\r\n\r\n  get nativeWindow(): Window | Object {\r\n    throw new Error('Not implemented.');\r\n  }\r\n\r\n}\r\n\r\n/* Define class that implements the abstract class and returns the native window object. */\r\n@Injectable()\r\nexport class BrowserWindowRef extends WindowRef {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  get nativeWindow(): Window | Object {\r\n    return window;\r\n  }\r\n\r\n}\r\n\r\n/* Create an factory function that returns the native window object. */\r\nexport function windowFactory(browserWindowRef: BrowserWindowRef, platformId: Object): Window | Object {\r\n  if (isPlatformBrowser(platformId)) {\r\n    return browserWindowRef.nativeWindow;\r\n  }\r\n  return new Object();\r\n}\r\n\r\n/* Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class. */\r\nexport const browserWindowProvider: ClassProvider = {\r\n  provide: WindowRef,\r\n  useClass: BrowserWindowRef\r\n};\r\n\r\n/* Create an injectable provider that uses the windowFactory function for returning the native window object. */\r\nexport const windowProvider: FactoryProvider = {\r\n  provide: WINDOW,\r\n  useFactory: windowFactory,\r\n  deps: [ WindowRef, PLATFORM_ID ]\r\n};\r\n\r\n/* Create an array of providers. */\r\nexport const WINDOW_PROVIDERS = [\r\n  browserWindowProvider,\r\n  windowProvider\r\n];\r\n","import { ViewCardRowSkeletonComponent } from \"./skeletons/view-card-row-skeleton/view-card-row-skeleton.component\";\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { PipeModule } from \"app/shared/pipes/pipe.module\";\r\nimport { ClickOutsideModule } from \"ng-click-outside\";\r\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\r\n\r\n//DIRECTIVES\r\nimport { SidebarAnchorToggleDirective } from \"./directives/sidebar-anchor-toggle.directive\";\r\nimport { SidebarDropdownDirective } from \"./directives/sidebar-dropdown.directive\";\r\nimport { SidebarLinkDirective } from \"./directives/sidebar-link.directive\";\r\nimport { SidebarDirective } from \"./directives/sidebar.directive\";\r\nimport { ToggleFullscreenDirective } from \"./directives/toggle-fullscreen.directive\";\r\nimport { TopMenuAnchorToggleDirective } from \"./directives/topmenu-anchor-toggle.directive\";\r\nimport { TopMenuDropdownDirective } from \"./directives/topmenu-dropdown.directive\";\r\nimport { TopMenuLinkDirective } from \"./directives/topmenu-link.directive\";\r\nimport { TopMenuDirective } from \"./directives/topmenu.directive\";\r\n\r\n//COMPONENTS\r\nimport { SweetAlert2Module } from \"@sweetalert2/ngx-sweetalert2\";\r\nimport { LoadPoliciesGroupComponent } from \"app/org-management/components/policy-groups/load-policies-group/load-policies-group.component\";\r\nimport {\r\n  EmployeeSelectTableComponent\r\n} from \"app/personnel-setup/components/employees/employee-select-table/employee-select-table.component\";\r\nimport { MatPaginatorComponent } from \"app/shared/components/resources/mat-paginator/mat-paginator.component\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { PrioritiesCheckboxsComponent } from \"./components/checkbox/priorities-checkboxs/priorities-checkboxs.component\";\r\nimport { WeekdaysCheckboxesComponent } from \"./components/checkbox/weekdays-checkboxes/weekdays-checkboxes.component\";\r\nimport { ConfirmDialogComponent } from \"./components/dialogs/confirm-dialog/confirm-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { DropdownsModule } from \"./components/dropdowns/dropdowns.module\";\r\nimport {\r\n  EmployeesSharedCompanyComponent\r\n} from \"./components/dropdowns/personnel-setup/employees-shared-company/employees-shared-company.component\";\r\nimport { EmployeeDropdownComponent } from \"./components/dropdowns/personnel-setup/employees/employee-dropdown/employee-dropdown.component\";\r\nimport { GlobalFunctionsComponent } from \"./components/global-functions/global-functions.component\";\r\nimport { PageTitleComponent } from \"./components/page-title/page-title.component\";\r\nimport { AddNewBtnComponent } from \"./components/resources/buttons/add-new-btn/add-new-btn.component\";\r\nimport { BackBtnComponent } from \"./components/resources/buttons/back-btn/back-btn.component\";\r\nimport { ButtonComponent } from \"./components/resources/buttons/button/button.component\";\r\nimport { CloseDialogBtnComponent } from \"./components/resources/buttons/close-dialog-btn/close-dialog-btn.component\";\r\nimport { ResetFormBtnComponent } from \"./components/resources/buttons/reset-form-btn/reset-form-btn.component\";\r\nimport { SubmitBtnComponent } from \"./components/resources/buttons/submit-btn/submit-btn.component\";\r\nimport { ButtonFileInputComponent } from \"./components/resources/dynamic-form-field/button-file-input/button-file-input.component\";\r\nimport { CheckBoxComponent } from \"./components/resources/dynamic-form-field/check-box/check-box.component\";\r\nimport { DatepickerComponent } from \"./components/resources/dynamic-form-field/datepicker/datepicker.component\";\r\nimport { DropdownWithSearchComponent } from \"./components/resources/dynamic-form-field/dropdown-with-search/dropdown-with-search.component\";\r\nimport { FileInputComponent } from \"./components/resources/dynamic-form-field/file-input/file-input.component\";\r\nimport { InputComponent } from \"./components/resources/dynamic-form-field/input/input.component\";\r\nimport { MatSelectSearchComponent } from \"./components/resources/dynamic-form-field/mat-select-search/mat-select-search.component\";\r\nimport { CalendarComponent } from \"./components/resources/dynamic-form-field/prime-ng/calendar/calendar.component\";\r\nimport { FileUploadCardComponent } from \"./components/resources/dynamic-form-field/prime-ng/file-upload-card/file-upload-card.component\";\r\nimport { FileUploadComponent } from \"./components/resources/dynamic-form-field/prime-ng/file-upload/file-upload.component\";\r\nimport { RadioButtonComponent } from \"./components/resources/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { SelectComponent } from \"./components/resources/dynamic-form-field/select/select.component\";\r\nimport { SlideToggleComponent } from \"./components/resources/dynamic-form-field/slide-toggle/slide-toggle.component\";\r\nimport { SliderComponent } from \"./components/resources/dynamic-form-field/slider/slider.component\";\r\nimport { TextEditorComponent } from \"./components/resources/dynamic-form-field/text-editor/text-editor.component\";\r\nimport { TextareaComponent } from \"./components/resources/dynamic-form-field/textarea/textarea.component\";\r\nimport { TimepickerComponent } from \"./components/resources/dynamic-form-field/timepicker/timepicker.component\";\r\nimport { MaterialTableComponent } from \"./components/resources/material-table/material-table.component\";\r\nimport { PrimePaginatorComponent } from \"./components/resources/prime-paginator/prime-paginator.component\";\r\nimport { PrimengTableComponent } from \"./components/resources/primrng-table/primrng-table.component\";\r\nimport { RowFunctionsComponent } from \"./components/row-functions/row-functions.component\";\r\nimport { SideHelpingMenuComponent } from \"./components/side-helping-menu/side-helping-menu.component\";\r\nimport { StepsFooterComponent } from \"./components/steps-footer/steps-footer.component\";\r\nimport { ViewDataRowItemComponent } from \"./components/view-data-row-item/view-data-row-item.component\";\r\nimport { CustomizerComponent } from \"./customizer/customizer.component\";\r\nimport { PaginatorStyleDirective } from \"./directives/paginator-style.directive\";\r\nimport { FooterComponent } from \"./footer/footer.component\";\r\nimport { HomeMenuComponent } from \"./home-menu/home-menu.component\";\r\nimport { HorizontalMenuComponent } from \"./horizontal-menu/horizontal-menu.component\";\r\nimport { NavbarComponent } from \"./navbar/navbar.component\";\r\nimport { NotificationSidebarComponent } from \"./notification-sidebar/notification-sidebar.component\";\r\nimport { AppHelpers } from \"./resources/app-helpers\";\r\nimport { ChartSkeletonComponent } from \"./skeletons/chart-skeleton/chart-skeleton.component\";\r\nimport { EmpCardItemSkeletonComponent } from \"./skeletons/employee/emp-card-item-skeleton/emp-card-item-skeleton.component\";\r\nimport { EmpPaymentSkeletonComponent } from \"./skeletons/employee/emp-payment-skeleton/emp-payment-skeleton.component\";\r\nimport {\r\n  EmpPlanCardDashboardSkeletonComponent\r\n} from \"./skeletons/employee/emp-plan-card-dashboard-skeleton/emp-plan-card-dashboard-skeleton.component\";\r\nimport {\r\n  EmployeeProfileCardSkeletonComponent\r\n} from \"./skeletons/employee/employee-profile-card-skeleton/employee-profile-card-skeleton.component\";\r\nimport { InputSkeletonComponent } from \"./skeletons/input-skeleton/input-skeleton.component\";\r\nimport {\r\n  JobCompetenceDetailsDialogSkeltonComponent\r\n} from \"./skeletons/job-competence-details-dialog-skeleton/job-competence-details-dialog-skelton.component\";\r\nimport {\r\n  OrgDetailsEmployeesListSkeletonComponent\r\n} from \"./skeletons/org-details-employees-list-skeleton/org-details-employees-list-skeleton.component\";\r\nimport {\r\n  StructureEmployeeCardSkeletonComponent\r\n} from \"./skeletons/structure-employee-card-skeleton/structure-employee-card-skeleton.component\";\r\nimport { TableSkeletonComponent } from \"./skeletons/table-skeleton/table-skeleton.component\";\r\nimport { MaterialModule } from \"./uimodules/material.module\";\r\nimport { VerticalMenuComponent } from \"./vertical-menu/vertical-menu.component\";\r\nimport { ModuleDropdaownComponent } from \"./components/dropdowns/dashboard-setup/module-dropdown/module-dropdown.component\";\r\nimport { BaseDropdown } from \"app/shared/resources/base-dropdown\";\r\nimport { ViewRowItemSkeletonComponent } from \"./skeletons/view-row-item-skeleton/view-row-item-skeleton.component\";\r\nimport { NgCircleProgressModule } from \"ng-circle-progress\";\r\nimport { HireDocumentSkeletonComponent } from \"./skeletons/hire-document-skeleton/hire-document-skeleton.component\";\r\nimport { DashboardDisplayComponent } from \"app/system-setup/dashboard-setup/components/dashboard-dispaly/dashboard-display.component\";\r\nimport { ScrollableHorizontalDirective } from \"./directives/scrollable-horizontal.directive\";\r\nimport { MatStepperDoneIconComponent } from \"./components/mat-stepper-done-icon/mat-stepper-done-icon.component\";\r\n\r\n\r\nconst component = [\r\n  FooterComponent,\r\n  NavbarComponent,\r\n  VerticalMenuComponent,\r\n  HorizontalMenuComponent,\r\n  CustomizerComponent,\r\n  NotificationSidebarComponent,\r\n  ToggleFullscreenDirective,\r\n  SidebarLinkDirective,\r\n  SidebarDropdownDirective,\r\n  SidebarAnchorToggleDirective,\r\n  SidebarDirective,\r\n  TopMenuLinkDirective,\r\n  TopMenuDropdownDirective,\r\n  TopMenuAnchorToggleDirective,\r\n  TopMenuDirective,\r\n  ButtonFileInputComponent,\r\n  DatepickerComponent,\r\n  DropdownWithSearchComponent,\r\n  FileInputComponent,\r\n  InputComponent,\r\n  MatSelectSearchComponent,\r\n  RadioButtonComponent,\r\n  TextareaComponent,\r\n  MatPaginatorComponent,\r\n  SelectComponent,\r\n  ConfirmDialogComponent,\r\n  DeleteDialogComponent,\r\n  PrimengTableComponent,\r\n  MaterialTableComponent,\r\n  AppHelpers,\r\n  BaseDropdown,\r\n  HomeMenuComponent,\r\n  FileUploadComponent,\r\n  PaginatorStyleDirective,\r\n  GlobalFunctionsComponent,\r\n  CheckBoxComponent,\r\n  BackBtnComponent,\r\n  TimepickerComponent,\r\n  AddNewBtnComponent,\r\n  ResetFormBtnComponent,\r\n  SubmitBtnComponent,\r\n  PageTitleComponent,\r\n  TextEditorComponent,\r\n  SideHelpingMenuComponent,\r\n  JobCompetenceDetailsDialogSkeltonComponent,\r\n  StructureEmployeeCardSkeletonComponent,\r\n  OrgDetailsEmployeesListSkeletonComponent,\r\n  EmployeeProfileCardSkeletonComponent,\r\n  CloseDialogBtnComponent,\r\n  TableSkeletonComponent,\r\n  InputSkeletonComponent,\r\n  ChartSkeletonComponent,\r\n  EmpCardItemSkeletonComponent,\r\n  CalendarComponent,\r\n  SlideToggleComponent,\r\n  SliderComponent,\r\n  ButtonComponent,\r\n  LoadPoliciesGroupComponent,\r\n  FileUploadCardComponent,\r\n  RowFunctionsComponent,\r\n  EmpPaymentSkeletonComponent,\r\n  EmpPlanCardDashboardSkeletonComponent,\r\n  PrioritiesCheckboxsComponent,\r\n  EmployeesSharedCompanyComponent,\r\n  PrimePaginatorComponent,\r\n  ViewDataRowItemComponent,\r\n  StepsFooterComponent,\r\n  EmployeeSelectTableComponent,\r\n  WeekdaysCheckboxesComponent,\r\n  FileUploadComponent,\r\n  PrimengTableComponent,\r\n  ViewCardRowSkeletonComponent,\r\n  ViewRowItemSkeletonComponent,\r\n  // use modules not in DropdownsModule\r\n  EmployeeDropdownComponent,\r\n  ModuleDropdaownComponent,\r\n  HireDocumentSkeletonComponent,\r\n  DashboardDisplayComponent,\r\n  ScrollableHorizontalDirective,\r\n  MatStepperDoneIconComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: [component],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    OverlayModule,\r\n    PerfectScrollbarModule,\r\n    ClickOutsideModule,\r\n    PipeModule,\r\n    MaterialModule,\r\n    DropdownsModule,\r\n    NgxSpinnerModule,\r\n    SweetAlert2Module.forRoot(),\r\n    NgCircleProgressModule.forRoot({\r\n      // set defaults here\r\n      radius: 100,\r\n      animationDuration: 600,\r\n      responsive: true,\r\n      showUnits: true,\r\n      animateTitle: true,\r\n      showBackground: true,\r\n      clockwise: true,\r\n      startFromZero: true,\r\n      lazy: true\r\n    })\r\n  ],\r\n  exports: [\r\n    component,\r\n    ToggleFullscreenDirective,\r\n    SidebarDirective,\r\n    TopMenuDirective,\r\n    NgbModule,\r\n    MaterialModule,\r\n    NgxSpinnerModule,\r\n    SweetAlert2Module,\r\n    DropdownsModule,\r\n    NgCircleProgressModule,\r\n    PipeModule,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { TreeNode } from \"primeng/api\";\r\n\r\n@Component({\r\n  selector: \"app-chart-skeleton\",\r\n  templateUrl: \"./chart-skeleton.component.html\",\r\n  styleUrls: [\"./chart-skeleton.component.scss\"],\r\n})\r\nexport class ChartSkeletonComponent implements OnInit {\r\n  @Input() width: number = 200;\r\n  @Input() height: number = 200;\r\n\r\n  data: TreeNode<any>[] = [\r\n    {\r\n      type: \"loading\",\r\n      expanded: true,\r\n      children: [\r\n        {\r\n          type: \"loading\",\r\n          expanded: true,\r\n          children: [],\r\n        },\r\n        {\r\n          type: \"loading\",\r\n          expanded: true,\r\n          children: [],\r\n        },\r\n        {\r\n          type: \"loading\",\r\n          expanded: true,\r\n          children: [],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<p-organizationChart\r\n  [value]=\"data\"\r\n  [preserveSpace]=\"false\"\r\n  class=\"loading-chart\"\r\n>\r\n  <ng-template let-node pTemplate=\"loading\">\r\n    <p-skeleton width=\"{{ width }}px\" height=\"{{ height }}px\"></p-skeleton>\r\n  </ng-template>\r\n</p-organizationChart>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"emp-card-item-skeleton\",\r\n\ttemplateUrl: \"./emp-card-item-skeleton.component.html\",\r\n\tstyleUrls: [],\r\n})\r\nexport class EmpCardItemSkeletonComponent implements OnInit {\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {}\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-6\">\r\n    <p>\r\n      <p-skeleton width=\"7rem\" styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n    </p>\r\n  </div>\r\n  <div class=\"col-6\">\r\n    <p>\r\n      <p-skeleton styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-emp-payment-skeleton',\r\n  templateUrl: './emp-payment-skeleton.component.html',\r\n  styleUrls: ['./emp-payment-skeleton.component.scss']\r\n})\r\nexport class EmpPaymentSkeletonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-accordion class=\"emp-payroll\">\r\n  <ng-container *ngFor=\"let item of [].constructor(3); index as i\">\r\n    <mat-expansion-panel [expanded]=\"i == 0\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <p-skeleton width=\"4rem\"> </p-skeleton>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <div *ngFor=\"let ele of [].constructor(2)\">\r\n        <div class=\"row\">\r\n          <p class=\"col-8\">\r\n            <p-skeleton width=\"5rem\"> </p-skeleton>\r\n          </p>\r\n          <p class=\"col-4\">\r\n            <p-skeleton width=\"2rem\"> </p-skeleton>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </ng-container>\r\n</mat-accordion>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"emp-plan-card-dashboard-skeleton\",\r\n  templateUrl: \"./emp-plan-card-dashboard-skeleton.component.html\",\r\n  styleUrls: [\"./emp-plan-card-dashboard-skeleton.component.scss\"],\r\n})\r\nexport class EmpPlanCardDashboardSkeletonComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"card card-vacations-custom\">\r\n  <div class=\"card-content\">\r\n    <div class=\"card-body\">\r\n      <div class=\"media\">\r\n        <div class=\"media-body text-left\">\r\n          <ng-container>\r\n            <!--            <span class=\"d-inline-block mb-2\">-->\r\n            <!--              <p-skeleton width=\"7rem\"> </p-skeleton>-->\r\n            <!--            </span>-->\r\n            <h3 class=\"card-text\">\r\n              <p-skeleton width=\"4rem\"></p-skeleton>\r\n            </h3>\r\n            <p class=\"ca-title\">\r\n              <p-skeleton width=\"7rem\"></p-skeleton>\r\n              <br/>\r\n              <!--              <span class=\"pspan\">-->\r\n              <!--                <p-skeleton width=\"7rem\"> </p-skeleton>-->\r\n              <!--              </span>-->\r\n            </p>\r\n          </ng-container>\r\n        </div>\r\n        <div class=\"media-right align-self-center\">\r\n          <p-skeleton shape=\"circle\" size=\"3rem\"></p-skeleton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"app-employee-profile-card-skeleton\",\r\n\ttemplateUrl: \"./employee-profile-card-skeleton.component.html\",\r\n\tstyleUrls: [],\r\n})\r\nexport class EmployeeProfileCardSkeletonComponent implements OnInit {\r\n\t@Input() rowNo: number = 2;\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","<!-- <div class=\"cardSection skeleton\">\r\n\t<div class=\"cardSectionTitle\">\r\n\t\t<div class=\"d-flex justify-content-start\">\r\n\t\t\t<p-skeleton size=\"1.3rem\" styleClass=\"p-mr-2\"></p-skeleton>\r\n\t\t\t<p-skeleton height=\"1.3rem\" width=\"8rem\" styleClass=\"p-mb-2\" class=\"mx-1\"> </p-skeleton>\r\n\t\t</div>\r\n\r\n\t\t<p-skeleton size=\"1.3rem\" styleClass=\"p-mr-2\"></p-skeleton>\r\n\t</div>\r\n\r\n\t<div class=\"cardSectionBody\">\r\n\t\t<div class=\"rowItem\" *ngFor=\"let item of [].constructor(rowNo)\">\r\n\t\t\t<emp-card-item-skeleton></emp-card-item-skeleton>\r\n\t\t</div>\r\n\t</div>\r\n</div> -->\r\n\r\n<div class=\"d-block mt-1\">\r\n  <app-view-card-row-skeleton [showTitle]=\"true\"></app-view-card-row-skeleton>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-hire-document-skeleton\",\r\n  templateUrl: \"./hire-document-skeleton.component.html\",\r\n  styleUrls: [\"./hire-document-skeleton.component.scss\"]\r\n})\r\nexport class HireDocumentSkeletonComponent implements OnInit {\r\n  @Input() itemsNo: number = 2;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex flex-wrap justify-content-between\" style=\"gap: 30px\">\r\n  <div class=\"flex-grow-1\" *ngFor=\"let item of [].constructor(itemsNo)\">\r\n    <p-skeleton width=\"10rem\" height=\"4rem\"></p-skeleton>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"app-input-skeleton\",\r\n\ttemplateUrl: \"./input-skeleton.component.html\",\r\n\tstyleUrls: [\"./input-skeleton.component.scss\"],\r\n})\r\nexport class InputSkeletonComponent implements OnInit {\r\n\t@Input() label: string;\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","<span>{{ label | translate | titlecase }} </span>\r\n<p-skeleton class=\"mb-2 mr-2\" height=\"55px\"> </p-skeleton>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-job-competence-details-dialog-skeleton\",\r\n  templateUrl: \"./job-competence-details-dialog-skeleton.component.html\",\r\n  styleUrls: [\"./job-competence-details-dialog-skeleton.component.scss\"],\r\n})\r\nexport class JobCompetenceDetailsDialogSkeltonComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div *ngFor=\"let item of [].constructor(2)\">\r\n  <label>\r\n    <p-skeleton width=\"7rem\" borderRadius=\"10px\"></p-skeleton>\r\n  </label>\r\n  <div class=\"content\">\r\n    <p-skeleton height=\"2rem\"></p-skeleton>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-org-details-employees-list-skeleton\",\r\n  templateUrl: \"./org-details-employees-list-skeleton.component.html\",\r\n  styleUrls: [\"./org-details-employees-list-skeleton.component.scss\"],\r\n})\r\nexport class OrgDetailsEmployeesListSkeletonComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p-skeleton height=\"3rem\"></p-skeleton>\r\n\r\n<ng-container *ngFor=\"let item of [1, 2]\">\r\n  <div class=\"key-emp\">\r\n    <p-skeleton width=\"2rem\"></p-skeleton>\r\n  </div>\r\n  <div>\r\n    <p-skeleton borderRadius=\"16px\"></p-skeleton>\r\n    <p-skeleton borderRadius=\"16px\"></p-skeleton>\r\n  </div>\r\n</ng-container>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-structure-employee-card-skeleton\",\r\n  templateUrl: \"./structure-employee-card-skeleton.component.html\",\r\n  styleUrls: [\"./structure-employee-card-skeleton.component.scss\"],\r\n})\r\nexport class StructureEmployeeCardSkeletonComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-4 col-12 img-container\">\r\n    <p-skeleton shape=\"circle\" size=\"4rem\"></p-skeleton>\r\n  </div>\r\n  <div class=\"col-md-8 col-12\">\r\n    <p-skeleton borderRadius=\"16px\"></p-skeleton>\r\n    <p-skeleton width=\"6rem\"></p-skeleton>\r\n    <p-skeleton width=\"6rem\"></p-skeleton>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"mtop-20\" *ngFor=\"let item of [].constructor(2)\">\r\n  <div class=\"mbottom-15\">\r\n    <p-skeleton width=\"5rem\"></p-skeleton>\r\n  </div>\r\n  <p-skeleton borderRadius=\"16px\"></p-skeleton>\r\n  <p-skeleton borderRadius=\"16px\"></p-skeleton>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"app-table-skeleton\",\r\n\ttemplateUrl: \"./table-skeleton.component.html\",\r\n\tstyleUrls: [\"./table-skeleton.component.scss\"],\r\n})\r\nexport class TableSkeletonComponent implements OnInit {\r\n\t@Input() displayedColumns: string[];\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {}\r\n}\r\n","<div class=\"table-container\">\r\n  <table class=\"table m-0\">\r\n    <thead>\r\n      <tr class=\"mat-header-row\">\r\n        <th *ngFor=\"let col of displayedColumns\" class=\"mat-header-cell\">\r\n          {{ col | translate }}\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let col of [1, 2, 3]\">\r\n        <td *ngFor=\"let col of displayedColumns\" class=\"mat-cell mat-cell-skeleton\">\r\n          <p-skeleton width=\"100%\"></p-skeleton>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-view-card-row-skeleton\",\r\n  templateUrl: \"./view-card-row-skeleton.component.html\",\r\n  styleUrls: [\"./view-card-row-skeleton.component.scss\"],\r\n})\r\nexport class ViewCardRowSkeletonComponent implements OnInit {\r\n  @Input() showTitle = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"cardSection skeleton\">\r\n  <div class=\"d-flex flex-wrap justify-content-between\" style=\"gap: 30px\">\r\n    <div class=\"flex-grow-1 d-flex justify-content-between\" *ngIf=\"showTitle\">\r\n      <p-skeleton height=\"1.3rem\" width=\"8rem\" styleClass=\"p-mb-2\"></p-skeleton>\r\n      <p-skeleton size=\"1.3rem\" styleClass=\"p-mr-2\" class=\"mx-2\"></p-skeleton>\r\n    </div>\r\n\r\n    <div class=\"flex-grow-1\" *ngFor=\"let item of [].constructor(4)\">\r\n      <app-view-row-item-skeleton></app-view-row-item-skeleton>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-view-row-item-skeleton\",\r\n  templateUrl: \"./view-row-item-skeleton.component.html\",\r\n  styleUrls: [\"./view-row-item-skeleton.component.scss\"],\r\n})\r\nexport class ViewRowItemSkeletonComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col\">\r\n    <p>\r\n      <p-skeleton\r\n        width=\"7rem\"\r\n        styleClass=\"p-mb-2\"\r\n        borderRadius=\"10px\"\r\n      ></p-skeleton>\r\n    </p>\r\n    <p>\r\n      <p-skeleton\r\n        width=\"10rem\"\r\n        styleClass=\"p-mb-2\"\r\n        borderRadius=\"10px\"\r\n      ></p-skeleton>\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\r\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { MatBottomSheetModule } from \"@angular/material/bottom-sheet\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatNativeDateModule } from \"@angular/material/core\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatSliderModule } from \"@angular/material/slider\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatStepperModule } from \"@angular/material/stepper\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatTreeModule } from \"@angular/material/tree\";\r\n\r\nconst materialComponents = [\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatIconModule,\r\n  MatBadgeModule,\r\n  MatProgressSpinnerModule,\r\n  MatToolbarModule,\r\n  MatAutocompleteModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatRadioModule,\r\n  MatTabsModule,\r\n  MatCardModule,\r\n  MatDividerModule,\r\n  MatListModule,\r\n  MatDialogModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatTooltipModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule,\r\n  MatTreeModule,\r\n  MatStepperModule,\r\n  MatExpansionModule,\r\n  MatNativeDateModule,\r\n  MatSidenavModule,\r\n  MatChipsModule,\r\n  MatGridListModule,\r\n  MatMenuModule,\r\n  DragDropModule,\r\n  MatSlideToggleModule,\r\n  MatProgressBarModule,\r\n  ScrollingModule,\r\n  MatBottomSheetModule,\r\n\r\n  // NgImageSliderModule,\r\n  //ExcelExportModule,\r\n // UploadModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [materialComponents],\r\n  exports: [materialComponents],\r\n})\r\nexport class MaterialModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { InputTextModule } from \"primeng/inputtext\";\r\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\r\nimport { CardModule } from \"primeng/card\";\r\nimport { TableModule } from \"primeng/table\";\r\nimport { ListboxModule } from \"primeng/listbox\";\r\nimport { MultiSelectModule } from \"primeng/multiselect\";\r\nimport { ToastModule } from \"primeng/toast\";\r\nimport { OrganizationChartModule } from \"primeng/organizationchart\";\r\nimport { ImageModule } from \"primeng/image\";\r\nimport { SkeletonModule } from \"primeng/skeleton\";\r\nimport { CheckboxModule } from \"primeng/checkbox\";\r\nimport { RadioButtonModule } from \"primeng/radiobutton\";\r\nimport { FileUploadModule } from \"primeng/fileupload\";\r\nimport { DropdownModule } from \"primeng/dropdown\";\r\nimport { DynamicDialogModule } from \"primeng/dynamicdialog\";\r\nimport { DialogModule } from \"primeng/dialog\";\r\nimport { OverlayPanelModule } from \"primeng/overlaypanel\";\r\nimport { EditorModule } from \"primeng/editor\";\r\nimport { PanelModule } from \"primeng/panel\";\r\nimport { CalendarModule } from \"primeng/calendar\";\r\nimport { MessagesModule } from \"primeng/messages\";\r\nimport { MessageModule } from \"primeng/message\";\r\nimport { PickListModule } from \"primeng/picklist\";\r\nimport { PaginatorModule } from \"primeng/paginator\";\r\nimport { SliderModule } from \"primeng/slider\";\r\nimport { InputNumberModule } from \"primeng/inputnumber\";\r\nimport { StepsModule } from \"primeng/steps\";\r\n\r\nconst prime = [\r\n  ButtonModule,\r\n  InputTextModule,\r\n  InputTextareaModule,\r\n  CardModule,\r\n  TableModule,\r\n  ListboxModule,\r\n  MultiSelectModule,\r\n  ToastModule,\r\n  OrganizationChartModule,\r\n  ImageModule,\r\n  SkeletonModule,\r\n  CheckboxModule,\r\n  RadioButtonModule,\r\n  FileUploadModule,\r\n  DropdownModule,\r\n  DynamicDialogModule,\r\n  DialogModule,\r\n  OverlayPanelModule,\r\n  EditorModule,\r\n  PanelModule,\r\n  CalendarModule,\r\n  MessagesModule,\r\n  MessageModule,\r\n  PickListModule,\r\n  PaginatorModule,\r\n  SliderModule,\r\n  InputNumberModule,\r\n  StepsModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, prime],\r\n  declarations: [],\r\n  exports: [prime],\r\n})\r\nexport class PrimengModule {\r\n}\r\n","import {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  ValidatorFn, Validators,\r\n} from \"@angular/forms\";\r\nimport { Constants } from \"../resources/constants\";\r\n\r\nexport class CustomValidator {\r\n  // No White Space\r\n  static whiteSpace(control: AbstractControl): ValidationErrors | null {\r\n    if (((control.value as string) || \"\").trim().length === 0) {\r\n      return {whiteSpace: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static noSpace(control: AbstractControl): ValidationErrors | null {\r\n    if (control.value?.length > 0 && (control.value as string).trim().indexOf(\" \") >= 0) {\r\n      return {noSpace: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static MobileStartsWith(control: AbstractControl): ValidationErrors | null {\r\n    if (\r\n      control.value?.length > 0 &&\r\n      !(control.value as string).startsWith(Constants.mobileStartsWith)\r\n    ) {\r\n      return {MobileStartsWith: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static mobileLength(control: AbstractControl): ValidationErrors | null {\r\n    if (control.value && control.value?.length != Constants.mobileLength) {\r\n      return {mobileLength: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static Length(lengthValue: number): ValidatorFn {\r\n    return (control: FormControl) => {\r\n      if (control?.value && control?.value?.trim().length !== lengthValue) {\r\n        return {Length: true, value: lengthValue};\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  static compareDates(fromDate: string, toDate: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const fromControl = formGroup?.controls[fromDate];\r\n      const toControl = formGroup?.controls[toDate];\r\n\r\n      if (toControl.errors! && !toControl.errors?.compareDates) {\r\n        return;\r\n      }\r\n      // set error on toDate\r\n      if (\r\n        toControl.value &&\r\n        new Date(fromControl.value).getTime() > new Date(toControl.value).getTime()\r\n      ) {\r\n        toControl.setErrors({compareDates: true});\r\n      }\r\n      else {\r\n        toControl.setErrors(null);\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  // static dateBefore(control: string, date: string | Date) {\r\n  // \treturn (formGroup: FormGroup) => {\r\n  // \t\tconst controlVal = formGroup?.controls[control];\r\n  // \t\tconst dates = moment(controlVal.value);\r\n  // \t\tif (dates.isBefore(date)) {\r\n  // \t\t\tcontrolVal.setErrors({ dateBefore: true });\r\n  // \t\t} else {\r\n  // \t\t\tcontrolVal.setErrors(null);\r\n  // \t\t}\r\n  // \t\treturn null;\r\n  // \t};\r\n  // }\r\n\r\n  static smallerThanNumbers(from: string, to: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const fromControl = formGroup?.get(from);\r\n      const toControl = formGroup?.get(to);\r\n      let fromVal = Number(fromControl?.value);\r\n      let toVal = Number(toControl?.value);\r\n      if (fromVal >= toVal) {\r\n        toControl?.setErrors({smallerThanNumbers: true});\r\n      }\r\n      else {\r\n        toControl?.setErrors(null);\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  static greaterThan(from: string, to: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const fromControl = formGroup?.get(from);\r\n      const toControl = formGroup?.get(to);\r\n      let fromVal = Number(fromControl?.value);\r\n      let toVal = Number(toControl?.value);\r\n      if (fromVal >= toVal) {\r\n        toControl?.setErrors({greaterThan: true, value: fromVal});\r\n      }\r\n      else {\r\n        toControl?.setErrors(null);\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  static timeBefore(fromTime: string, toTime: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const fromControl = formGroup?.controls[fromTime];\r\n      const toControl = formGroup?.controls[toTime];\r\n      if (toControl.errors! && !toControl.errors?.timeBefore) return;\r\n      // set error on toDate\r\n      if (toControl.value && toControl.value < fromControl.value) {\r\n        fromControl.setErrors({timeBefore: true, from: fromTime, to: toTime});\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  static timeAfter(fromTime: string, toTime: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const fromControl = formGroup?.controls[fromTime];\r\n      const toControl = formGroup?.controls[toTime];\r\n      if (toControl.errors! && !toControl.errors?.timeBefore) return;\r\n\r\n      // set error on toDate\r\n      if (toControl.value && toControl.value >= fromControl.value) {\r\n        fromControl.setErrors({timeAfter: true, from: fromTime, to: toTime});\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  static atLeastOneCharacter(\r\n    control: AbstractControl\r\n  ): ValidationErrors | null {\r\n    if (\r\n      // control.value &&\r\n      control?.value?.trim().length > 0 &&\r\n      !control?.value?.match(Constants.oneCharacter_pattern)\r\n    ) {\r\n      return {atLeastOneCharacter: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  static mobileValidators = [\r\n    Validators.required,\r\n    Validators.pattern(Constants.mobile_pattern),\r\n    CustomValidator.MobileStartsWith,\r\n    CustomValidator.mobileLength,\r\n  ];\r\n\r\n  static variableCodeValidators = [\r\n    Validators.required,\r\n    CustomValidator.whiteSpace,\r\n    CustomValidator.noSpace,\r\n    Validators.pattern(Constants.variableCode_pattern),\r\n  ];\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\n\r\nimport { AuthService } from \"app/auth/services/auth.service\";\r\nimport { UserViewsService } from \"app/auth/services/user-views.service\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AssetsManager } from \"../resources/assets-manager\";\r\nimport { AppHelpers } from \"../resources/app-helpers\";\r\nimport { LanguageService } from \"../services/language.service\";\r\nimport { ParamsService } from \"../services/params.service\";\r\nimport { ConfigService } from \"../services/theme-options/config.service\";\r\nimport { LayoutService } from \"../services/theme-options/layout.service\";\r\n\r\n@Component({\r\n  selector: \"app-sidebar\",\r\n  templateUrl: \"./vertical-menu.component.html\",\r\n})\r\nexport class VerticalMenuComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild(\"toggleIcon\") toggleIcon: ElementRef;\r\n  public menuItems: any[] = [];\r\n  level: number = 0;\r\n  appAssets: AssetsManager = new AssetsManager();\r\n\r\n  logoUrl = this.appAssets.logo;\r\n  public config: any = {};\r\n  protected innerWidth: any;\r\n  layoutSub: Subscription;\r\n  configSub: Subscription;\r\n  menuSub: Subscription;\r\n  perfectScrollbarEnable = true;\r\n  collapseSidebar = false;\r\n  resizeTimeout;\r\n  isUserModelCalled = false;\r\n  appSettings = new AppHelpers();\r\n  private paramsService = inject(ParamsService);\r\n  moduleId?: number;\r\n  parentModuleId?: number;\r\n\r\n  constructor(\r\n    public viewsService: UserViewsService,\r\n    public langService: LanguageService,\r\n    public authService: AuthService,\r\n    private layoutService: LayoutService,\r\n    private configService: ConfigService,\r\n    private cdr: ChangeDetectorRef,\r\n    private deviceService: DeviceDetectorService\r\n  ) {\r\n    this.config = this.configService.templateConf;\r\n    this.innerWidth = window.innerWidth;\r\n    this.isTouchDevice();\r\n    this.moduleId = this.paramsService.moduleId$.getValue();\r\n    this.parentModuleId = this.paramsService.parentModuleId$.getValue();\r\n\r\n    this.paramsService.moduleId$.subscribe((val) => {\r\n      this.moduleId = val;\r\n      if (val) this.viewsService.getModuleServices(this.moduleId);\r\n      //  console.log('moduleId', this.moduleId)\r\n    });\r\n    this.paramsService.parentModuleId$.subscribe((val) => {\r\n      this.parentModuleId = val;\r\n      if (val) this.viewsService.getModuleServices(this.parentModuleId);\r\n      //  console.log('parentModuleId', this.parentModuleId)\r\n    });\r\n\r\n\r\n    this.paramsService.businessCompanyParams$.subscribe((val) => {\r\n      if (\r\n        this.appSettings.checkNoBusinessOrCompany() &&\r\n        (this.parentModuleId || this.moduleId)\r\n      ) {\r\n        this.getUserModules();\r\n      }\r\n    });\r\n\r\n    this.viewsService.UserModules$.subscribe((val) => {\r\n      this.viewsService.getModuleServices(this.parentModuleId);\r\n      if (!this.parentModuleId) this.viewsService.getModuleServices(this.moduleId);\r\n    });\r\n\r\n    // this.viewsService.selectedModuleId$.subscribe((moduleId) => {\r\n    //   //  console.log(\"moduleId\", moduleId);\r\n    //   this.viewsService.getModuleServices(moduleId);\r\n    // });\r\n\r\n    this.menuSub = this.viewsService.menuItems$.subscribe((data: any) => {\r\n      setTimeout(() => {\r\n        this.menuItems = data;\r\n      }, 0);\r\n\r\n      //\tconsole.log(\"menuItems\", data);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.configSub = this.configService.templateConf$.subscribe((templateConf) => {\r\n      if (templateConf) {\r\n        this.config = templateConf;\r\n      }\r\n      this.loadLayout();\r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n    this.layoutSub = this.layoutService.overlaySidebarToggle$.subscribe((collapse) => {\r\n      if (this.config.layout.menuPosition === \"Side\") {\r\n        this.collapseSidebar = collapse;\r\n      }\r\n    });\r\n  }\r\n\r\n  filterMenu(value: String) {\r\n    this.menuItems.filter(\r\n      (item) => item.displayName.trim().toLowerCase() == value.trim().toLowerCase()\r\n    );\r\n  }\r\n\r\n  getUserModules() {\r\n    if (!this.isUserModelCalled) this.viewsService.getUserModulesMaped();\r\n    this.isUserModelCalled = true;\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onWindowResize(event) {\r\n    if (this.resizeTimeout) {\r\n      clearTimeout(this.resizeTimeout);\r\n    }\r\n    this.resizeTimeout = setTimeout(\r\n      (() => {\r\n        this.innerWidth = event.target.innerWidth;\r\n        this.loadLayout();\r\n      }).bind(this),\r\n      500\r\n    );\r\n  }\r\n\r\n  loadLayout() {\r\n    if (this.config.layout.menuPosition === \"Top\") {\r\n      // Horizontal Menu\r\n      if (this.innerWidth < 1200) {\r\n        // Screen size < 1200\r\n        //    this.menuItems = HROUTES;\r\n      }\r\n    }\r\n    else if (this.config.layout.menuPosition === \"Side\") {\r\n      // Vertical Menu{\r\n      //  this.menuItems = ROUTES;\r\n    }\r\n\r\n    if (this.config.layout.sidebar.backgroundColor === \"white\") {\r\n      this.logoUrl = this.appAssets.darkLogo;\r\n    }\r\n    else {\r\n      this.logoUrl = this.appAssets.logo;\r\n    }\r\n\r\n    if (this.config.layout.sidebar.collapsed) {\r\n      this.collapseSidebar = true;\r\n    }\r\n    else {\r\n      this.collapseSidebar = false;\r\n    }\r\n  }\r\n\r\n  toggleSidebar() {\r\n    let conf = this.config;\r\n    conf.layout.sidebar.collapsed = !this.config.layout.sidebar.collapsed;\r\n    this.configService.applyTemplateConfigChange({layout: conf.layout});\r\n\r\n    setTimeout(() => {\r\n      this.fireRefreshEventOnWindow();\r\n    }, 300);\r\n  }\r\n\r\n  fireRefreshEventOnWindow = function () {\r\n    const evt = document.createEvent(\"HTMLEvents\");\r\n    evt.initEvent(\"resize\", true, false);\r\n    window.dispatchEvent(evt);\r\n  };\r\n\r\n  CloseSidebar() {\r\n    this.layoutService.toggleSidebarSmallScreen(false);\r\n  }\r\n\r\n  isTouchDevice() {\r\n    const isMobile = this.deviceService.isMobile();\r\n    const isTablet = this.deviceService.isTablet();\r\n\r\n    if (isMobile || isTablet) {\r\n      this.perfectScrollbarEnable = false;\r\n    }\r\n    else {\r\n      this.perfectScrollbarEnable = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Storage.removeSelectedModule();\r\n    this.paramsService.parentModuleId$.next(null);\r\n    this.paramsService.moduleId$.next(null);\r\n    this.menuSub.unsubscribe();\r\n    this.menuItems = [];\r\n    this.viewsService.menuItems$.next([]);\r\n\r\n    if (this.layoutSub) {\r\n      this.layoutSub.unsubscribe();\r\n    }\r\n    if (this.configSub) {\r\n      this.configSub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<!-- Sidebar Header starts -->\r\n<div class=\"sidebar-header\" *ngIf=\"config?.layout.menuPosition === 'Side'\">\r\n  <div class=\"logo clearfix\">\r\n    <a [routerLink]=\"['/home']\" class=\"logo-text float-left\">\r\n      <div class=\"logo-img\">\r\n        <img [src]=\"logoUrl\" alt=\"hr logo\"/>\r\n      </div>\r\n      <span class=\"text align-middle\">{{ \"siteName\" | translate }}</span>\r\n    </a>\r\n    <a\r\n      class=\"nav-toggle d-none d-lg-none d-xl-block\"\r\n      id=\"sidebarToggle\"\r\n      href=\"javascript:;\"\r\n      (click)=\"toggleSidebar()\"\r\n    >\r\n      <i\r\n        #toggleIcon\r\n        [ngClass]=\"{\r\n\t\t\t\t\t'ft-toggle-left': config.layout.sidebar.collapsed,\r\n\t\t\t\t\t'ft-toggle-right': !config.layout.sidebar.collapsed\r\n\t\t\t\t}\"\r\n        class=\"toggle-icon\"\r\n      ></i>\r\n    </a>\r\n    <a\r\n      class=\"nav-close d-block d-lg-block d-xl-none\"\r\n      id=\"sidebarClose\"\r\n      href=\"javascript:;\"\r\n      (click)=\"CloseSidebar()\"\r\n    >\r\n      <i class=\"ft-x\"></i>\r\n    </a>\r\n  </div>\r\n</div>\r\n<!-- Sidebar Header Ends -->\r\n\r\n<!-- Sidebar Content starts -->\r\n<div\r\n  class=\"sidebar-content main-menu-content\"\r\n  [perfectScrollbar]\r\n  [disabled]=\"!perfectScrollbarEnable\"\r\n>\r\n  <div class=\"nav-container\">\r\n    <ul class=\"navigation\" appSidebarDropdown>\r\n      <!-- filter input -->\r\n      <!-- <li appSidebarlink>\r\n                <span>\r\n                    <input\r\n                        id=\"filter-input\"\r\n                        class=\"form-control\"\r\n                        (keyup)=\"filterMenu($event.target.value)\"\r\n                        placeholder=\"Ex. setup\"\r\n                    />\r\n                </span>\r\n            </li> -->\r\n\r\n      <!-- Home -->\r\n      <li appSidebarlink routerLinkActive=\"active\">\r\n        <a appSidebarAnchorToggle routerLink=\"/home\">\r\n          <i class=\"fa fa-home\"></i>\r\n          <span class=\"menu-title\">{{ \"home\" | translate }}</span>\r\n        </a>\r\n      </li>\r\n\r\n      <ng-container *ngIf=\"menuItems.length > 0; else loading\">\r\n        <!-- First level menu -->\r\n        <li\r\n          appSidebarlink\r\n          *ngFor=\"let menuItem of menuItems\"\r\n          [parent]=\"menuItem.title\"\r\n          [title]=\"menuItem.title\"\r\n          [path]=\"menuItem.path\"\r\n          [level]=\"level + 1\"\r\n          [hasSub]=\"menuItem.class.includes('has-sub') ? true : false\"\r\n          [ngClass]=\"{\r\n\t\t\t\t\t\t'has-sub': menuItem.class.includes('has-sub') ? true : false\r\n\t\t\t\t\t}\"\r\n          [routerLinkActive]=\"menuItem.submenu?.length != 0 ? 'open' : 'active'\"\r\n          [routerLinkActiveOptions]=\"{ exact: false }\"\r\n        >\r\n          <a\r\n            appSidebarAnchorToggle\r\n            *ngIf=\"menuItem.submenu?.length > 0 && !menuItem.isExternalLink\"\r\n            [title]=\"menuItem.displayName\"\r\n          >\r\n            <i [class]=\"menuItem.icon\"></i>\r\n            <span class=\"menu-title\">\r\n\t\t\t\t\t\t\t{{ menuItem.displayName }}\r\n\t\t\t\t\t\t</span>\r\n            <span *ngIf=\"menuItem.badge && menuItem.badge != ''\" [ngClass]=\"[menuItem.badgeClass]\">\r\n\t\t\t\t\t\t\t{{ menuItem.badge }}\r\n\t\t\t\t\t\t</span>\r\n          </a>\r\n          <a\r\n            appSidebarAnchorToggle\r\n            routerLink=\"{{ menuItem.path }}\"\r\n            *ngIf=\"menuItem.submenu?.length === 0 && !menuItem.isExternalLink\"\r\n            [title]=\"menuItem.displayName\"\r\n          >\r\n            <i [class]=\"menuItem.icon\"></i>\r\n            <span class=\"menu-title\">\r\n\t\t\t\t\t\t\t{{ menuItem.displayName }}\r\n\t\t\t\t\t\t</span>\r\n            <span *ngIf=\"menuItem.badge && menuItem.badge != ''\" [ngClass]=\"[menuItem.badgeClass]\">\r\n\t\t\t\t\t\t\t{{ menuItem.badge }}\r\n\t\t\t\t\t\t</span>\r\n          </a>\r\n          <a\r\n            [href]=\"[menuItem.path]\"\r\n            target=\"_blank\"\r\n            *ngIf=\"menuItem.isExternalLink\"\r\n            [title]=\"menuItem.displayName\"\r\n          >\r\n            <i [class]=\"menuItem.icon\"></i>\r\n            <span class=\"menu-title\">\r\n\t\t\t\t\t\t\t{{ menuItem.displayName }}\r\n\t\t\t\t\t\t</span>\r\n            <span *ngIf=\"menuItem.badge && menuItem.badge != ''\" [ngClass]=\"[menuItem.badgeClass]\">\r\n\t\t\t\t\t\t\t{{ menuItem.badge }}\r\n\t\t\t\t\t\t</span>\r\n          </a>\r\n          <!-- Second level menu -->\r\n          <ul appSidebarDropdown class=\"menu-content\" *ngIf=\"menuItem.submenu?.length > 0\">\r\n            <li\r\n              appSidebarlink\r\n              *ngFor=\"let menuSubItem of menuItem.submenu\"\r\n              [parent]=\"menuItem.title\"\r\n              [title]=\"menuItem.title\"\r\n              [path]=\"menuSubItem.path\"\r\n              level=\"{{ level + 2 }}\"\r\n              [hasSub]=\"menuSubItem.class.includes('has-sub') ? true : false\"\r\n              [ngClass]=\"{\r\n\t\t\t\t\t\t\t\t'has-sub': menuSubItem.class.includes('has-sub') ? true : false\r\n\t\t\t\t\t\t\t}\"\r\n              [routerLinkActive]=\"menuSubItem.submenu?.length != 0 ? 'open' : 'active'\"\r\n            >\r\n              <a\r\n                appSidebarAnchorToggle\r\n                *ngIf=\"menuSubItem.submenu?.length > 0 && !menuSubItem.isExternalLink\"\r\n                [title]=\"menuSubItem.displayName\"\r\n              >\r\n                <i [ngClass]=\"[menuSubItem.icon]\"></i>\r\n                <span class=\"menu-title\">\r\n\t\t\t\t\t\t\t\t\t{{ menuSubItem.displayName }}\r\n\t\t\t\t\t\t\t\t</span>\r\n                <span\r\n                  *ngIf=\"menuSubItem.badge && menuSubItem.badge != ''\"\r\n                  [ngClass]=\"[menuSubItem.badgeClass]\"\r\n                >{{ menuSubItem.badge }}</span\r\n                >\r\n              </a>\r\n\r\n              <a\r\n                appSidebarAnchorToggle\r\n                routerLink=\"{{ menuSubItem.path }}\"\r\n                [queryParams]=\"{\r\n\t\t\t\t\t\t\t\t\tparentModuleId: menuItem.parantId\r\n\t\t\t\t\t\t\t\t}\"\r\n                *ngIf=\"menuSubItem.submenu?.length === 0 && !menuSubItem.isExternalLink\"\r\n                [title]=\"menuSubItem.displayName\"\r\n              >\r\n                <i [ngClass]=\"menuSubItem.icon\"></i>\r\n                <span class=\"menu-title\">\r\n\t\t\t\t\t\t\t\t\t{{ menuSubItem.displayName }}\r\n\t\t\t\t\t\t\t\t</span>\r\n                <span\r\n                  *ngIf=\"menuSubItem.badge && menuSubItem.badge != ''\"\r\n                  [ngClass]=\"[menuSubItem.badgeClass]\"\r\n                >{{ menuSubItem.badge }}</span\r\n                >\r\n              </a>\r\n\r\n              <a\r\n                *ngIf=\"menuSubItem.isExternalLink\"\r\n                routerLink=\"{{ menuSubItem.path }}\"\r\n                target=\"_blank\"\r\n                [title]=\"menuSubItem.displayName\"\r\n              >\r\n                <i [ngClass]=\"[menuSubItem.icon]\"></i>\r\n                <span class=\"menu-title\">\r\n\t\t\t\t\t\t\t\t\t{{ menuSubItem.displayName }}\r\n\t\t\t\t\t\t\t\t</span>\r\n                <span\r\n                  *ngIf=\"menuSubItem.badge && menuSubItem.badge != ''\"\r\n                  [ngClass]=\"[menuSubItem.badgeClass]\"\r\n                >\r\n\t\t\t\t\t\t\t\t\t{{ menuSubItem.badge }}\r\n\t\t\t\t\t\t\t\t</span>\r\n              </a>\r\n\r\n              <!-- Third level menu -->\r\n              <ul appSidebarDropdown class=\"menu-content\" *ngIf=\"menuSubItem.submenu?.length > 0\">\r\n                <li\r\n                  appSidebarlink\r\n                  *ngFor=\"let menuSubsubItem of menuSubItem.submenu\"\r\n                  [parent]=\"menuItem.title\"\r\n                  [title]=\"menuItem.title\"\r\n                  [hasSub]=\"false\"\r\n                  [path]=\"menuSubsubItem.path\"\r\n                  level=\"{{ level + 3 }}\"\r\n                  routerLinkActive=\"active\"\r\n                  [routerLinkActiveOptions]=\"{ exact: true }\"\r\n                  [ngClass]=\"config.layout.menuPosition === 'Side' ? menuSubsubItem.class : ''\"\r\n                >\r\n                  <a\r\n                    appSidebarAnchorToggle\r\n                    routerLink=\"{{ menuSubsubItem.path }}\"\r\n                    *ngIf=\"!menuSubsubItem.isExternalLink; else externalSubSubLinkBlock\"\r\n                    [title]=\"menuSubsubItem.displayName\"\r\n                  >\r\n                    <i [ngClass]=\"[menuSubsubItem.icon]\"></i>\r\n                    <span class=\"menu-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ menuSubsubItem.displayName }}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n                    <span\r\n                      *ngIf=\"menuSubsubItem.badge && menuSubsubItem.badge != ''\"\r\n                      [ngClass]=\"[menuSubsubItem.badgeClass]\"\r\n                    >\r\n\t\t\t\t\t\t\t\t\t\t\t{{ menuSubsubItem.badge }}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n                  </a>\r\n                  <ng-template #externalSubSubLinkBlock>\r\n                    <a\r\n                      routerLink=\"{{ menuSubsubItem.path }}\"\r\n                      target=\"_blank\"\r\n                      [title]=\"menuSubsubItem.displayName\"\r\n                    >\r\n                      <i [ngClass]=\"[menuSubsubItem.icon]\"></i>\r\n                      <span class=\"menu-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ menuSubsubItem.displayName }}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                      <span\r\n                        *ngIf=\"menuSubsubItem.badge && menuSubsubItem.badge != ''\"\r\n                        [ngClass]=\"[menuSubsubItem.badgeClass]\"\r\n                      >\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ menuSubsubItem.badge }}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                    </a>\r\n                  </ng-template>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ng-container>\r\n\r\n      <ng-template #loading>\r\n        <!-- <li appSidebarlink *ngFor=\"let item of [1, 2, 3, 4, 5]\">\r\n          <a appSidebarAnchorToggle>\r\n            <p-skeleton width=\"10rem\" styleClass=\"p-mb-2\"></p-skeleton>\r\n          </a>\r\n        </li> -->\r\n      </ng-template>\r\n    </ul>\r\n  </div>\r\n</div>\r\n<!-- Sidebar Content Ends -->\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IAttLocationModel,\r\n  IAttLocationRequest,\r\n} from \"app/system-setup/attendance-setup/models/att-location\";\r\nimport { AttLocationService } from \"app/system-setup/attendance-setup/services/att-location.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-location\",\r\n  templateUrl: \"./location.component.html\",\r\n  styleUrls: [\"./location.component.scss\"],\r\n})\r\nexport class LocationComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IAttLocationModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  // private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    public locationService: AttLocationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<LocationComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.businessId > 0 && this.companyId > 0)\r\n    //   this.getList(this.currentPage);\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.locationService\r\n      .getList(params)\r\n      // .pipe(takeUntil(this.destroy$))\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IAttLocationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IAttLocationRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IAttLocationRequest) {\r\n    this.showLoading();\r\n    this.locationService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IAttLocationModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IAttLocationRequest) {\r\n    this.showLoading();\r\n    this.locationService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IAttLocationModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  locationToEdit(location: IAttLocationModel) {\r\n    this.form.patchValue(location);\r\n  }\r\n\r\n  onDelete(location: IAttLocationModel) {\r\n    let msg = this.msgTranslate(location.ar_Name, location.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(location);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: IAttLocationModel) {\r\n    this.showLoading();\r\n    this.locationService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (model.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   // Unsubscribe from all observables to prevent memory leaks\r\n  //   this.destroy$.next();\r\n  //   this.destroy$.complete();\r\n  // }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"location\"\r\n          editTitle=\"editLocation\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          [exportService]=\"locationService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"locationToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Params } from \"@angular/router\";\r\nimport {\r\n  IPermissionTypeDropdownResponse,\r\n  IPermissionTypeModel,\r\n  IPermissionTypeRequest,\r\n} from \"app/system-setup/attendance-setup/models/permissions\";\r\nimport { PermissionTypeService } from \"app/system-setup/attendance-setup/services/permissions.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-add-permission\",\r\n  templateUrl: \"./add-permission.component.html\",\r\n  styleUrls: [\"./add-permission.component.scss\"],\r\n})\r\nexport class AddPermissionComponent extends AppHelpers implements OnInit {\r\n  permissionId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private permissionTypeService: PermissionTypeService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddPermissionComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.permissionId = params.permissionId ?? 0;\r\n    });\r\n\r\n    // if (this.businessId > 0 && this.companyId > 0 && this.permissionId > 0) {\r\n    //   this.getPermissionById();\r\n    // }\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNullable: true}],\r\n        name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n        code: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n        new_Hired_Month_Indecator: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        num_Permission_Per_Year_New_Hired: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        num_Permission_Per_Month: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        num_Permission_Per_Year: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        total_Hour_Per_Month: [null, [Validators.required, CustomValidators.gt(0)]],\r\n\r\n        total_Hour_Per_Permission: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        enable_Validation: [false, [Validators.required]],\r\n        warningInsertAction: [false, [Validators.required]],\r\n        stopInsertAction: [false, [Validators.required]],\r\n      },\r\n      {\r\n        validators: [\r\n          CustomValidator.greaterThan(\"num_Permission_Per_Month\", \"num_Permission_Per_Year\"),\r\n          CustomValidator.greaterThan(\"total_Hour_Per_Permission\", \"total_Hour_Per_Month\"),\r\n        ],\r\n      }\r\n    );\r\n    if (this.data.value) {\r\n      this.formCtrls.name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form?.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getPermissionById();\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPermissionTypeRequest = {\r\n        id: this.form.value.id,\r\n        name: this.form.value.name,\r\n        code: this.form.value.code,\r\n        new_Hired_Month_Indecator: this.form.value.new_Hired_Month_Indecator,\r\n        num_Permission_Per_Year_New_Hired: this.form.value.num_Permission_Per_Year_New_Hired,\r\n        enable_Validation: this.form.value.enable_Validation,\r\n        warningInsertAction: this.form.value.warningInsertAction,\r\n        stopInsertAction: this.form.value.stopInsertAction,\r\n        num_Permission_Per_Month: this.form.value.num_Permission_Per_Month,\r\n        num_Permission_Per_Year: this.form.value.num_Permission_Per_Year,\r\n        total_Hour_Per_Month: this.form.value.total_Hour_Per_Month,\r\n        total_Hour_Per_Permission: this.form.value.total_Hour_Per_Permission,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  enableValidation(val) {\r\n    if (val) {\r\n      this.formCtrls.warningInsertAction.setValue(true);\r\n      this.formCtrls.stopInsertAction.setValue(false);\r\n    }\r\n    else {\r\n      this.formCtrls.warningInsertAction.setValue(false);\r\n      this.formCtrls.stopInsertAction.setValue(false);\r\n    }\r\n  }\r\n\r\n  radioChange(val) {\r\n    this.formCtrls.warningInsertAction.setValue(val);\r\n    this.formCtrls.stopInsertAction.setValue(!val);\r\n  }\r\n\r\n  create(model: IPermissionTypeRequest) {\r\n    this.showLoading();\r\n    this.permissionTypeService.create(model).subscribe((res: IResponse<IPermissionTypeModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        let url = `/attendance-setup/${this.moduleId}/permissions/edit/${res.data.id}`;\r\n        if (!this.data.isDialog) this.navigateTo(url);\r\n        this.permissionId = res.data.id;\r\n        this.formCtrls.id.setValue(res.data.id);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  getPermissionById() {\r\n    this.permissionTypeService\r\n      .getById(this.permissionId)\r\n      .subscribe((res: IPermissionTypeDropdownResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          let permission = res.data[0];\r\n          this.form.patchValue(permission);\r\n        }\r\n      });\r\n  }\r\n\r\n  update(model: IPermissionTypeRequest) {\r\n    this.showLoading();\r\n    this.permissionTypeService.update(model).subscribe((res: IResponse<IPermissionTypeModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, enable_Validation: false});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"permissionType\"\r\n          editTitle=\"editpermissionType\"\r\n        >\r\n        </page-title>\r\n\r\n        <ng-container *ngIf=\"!data.isDialog\">\r\n          <app-add-new-btn\r\n            *ngIf=\"permissionId > 0\"\r\n            url=\"/attendance-setup/{{ moduleId }}/permissions/add\"\r\n            [params]=\"pageParams\"\r\n            label=\"addpermission\"\r\n          >\r\n          </app-add-new-btn>\r\n\r\n          <app-back-btn\r\n            url=\"/attendance-setup/{{ moduleId }}/permissions/index\"\r\n            [params]=\"pageParams\"\r\n          >\r\n          </app-back-btn>\r\n        </ng-container>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.code\"\r\n                [submitted]=\"submitted\"\r\n                label=\"code\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.num_Permission_Per_Month\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"num_Permission_Per_Month\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.num_Permission_Per_Year\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"num_Permission_Per_Year\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.total_Hour_Per_Permission\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"total_Hour_Per_Permission\"\r\n                [isDecimalNumber]=\"true\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.total_Hour_Per_Month\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"total_Hour_Per_Month\"\r\n                [isDecimalNumber]=\"true\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.num_Permission_Per_Year_New_Hired\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"num_Permission_Per_Year_New_Hired\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.new_Hired_Month_Indecator\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"new_Hired_Month_Indecator\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-check-box\r\n                [control]=\"formCtrls.enable_Validation\"\r\n                label=\"enable_Validation\"\r\n                (onChange)=\"enableValidation($event)\"\r\n              >\r\n              </app-check-box>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-8 col-12\"\r\n              *ngIf=\"formCtrls.enable_Validation.value\"\r\n            >\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <mat-radio-button\r\n                    [checked]=\"formCtrls.warningInsertAction.value\"\r\n                    (change)=\"radioChange(true)\"\r\n                  >\r\n                    {{ \"warningInsertAction\" | translate | titlecase }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <mat-radio-button\r\n                    [checked]=\"formCtrls.stopInsertAction.value\"\r\n                    (change)=\"radioChange(false)\"\r\n                  >\r\n                    {{ \"stopInsertAction\" | translate | titlecase }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"row\">\r\n              <ng-container\r\n                class=\"col-md-4 col-12\"\r\n                *ngIf=\"formCtrls.enable_Validation.value\"\r\n              >\r\n                <div>\r\n                  <mat-radio-button (change)=\"radioChange(true)\">\r\n                    {{ \"warningInsertAction\" | translate | titlecase }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div>\r\n                  <mat-radio-button (change)=\"radioChange(false)\">\r\n                    {{ \"stopInsertAction\" | translate | titlecase }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </ng-container>\r\n            </div> -->\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { IAttendancePlanRequest } from \"app/system-setup/attendance-setup/models/plan\";\r\nimport { AttendancePlanService } from \"app/system-setup/attendance-setup/services/attendance-plan.service\";\r\nimport { ShiftsService } from \"app/system-setup/attendance-setup/services/shifts.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-add-plan\",\r\n  templateUrl: \"./add-plan.component.html\",\r\n  styleUrls: [\"./add-plan.component.scss\"],\r\n})\r\nexport class AddPlanComponent extends AppHelpers implements OnInit {\r\n  planId: number = 0;\r\n\r\n  constructor(\r\n    public shiftsService: ShiftsService,\r\n    public planService: AttendancePlanService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddPlanComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.planId = Number(params.get(\"id\")) ?? 0;\r\n    });\r\n  }\r\n\r\n  submit(model: IAttendancePlanRequest) {\r\n    if (model?.plan?.id >= 0)\r\n      model.plan.id == 0 ? this.create(model) : this.update(model);\r\n  }\r\n\r\n  create(model: IAttendancePlanRequest) {\r\n    this.showLoading();\r\n    this.planService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IAttendancePlanRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.planId = res.data.plan.id;\r\n          // this.formCtrls.id.setValue(this.planId);\r\n          // let url = `/attendance-setup/${this.moduleId}/plan/edit/${this.planId}`;\r\n          // this.navigateTo(url);\r\n          // console.log(\"plan\", this.planId);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IAttendancePlanRequest) {\r\n    this.showLoading();\r\n    this.planService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IAttendancePlanRequest>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<app-plan-form\r\n  (onSubmit)=\"submit($event)\"\r\n  [pageTitle]=\"planId == 0 ? 'attendance_Plans' : 'edit_attendance_PlanF'\"\r\n  [data]=\"data\"\r\n  (closeDialog)=\"onCloseDialog()\"\r\n  [showInOutCheckBox]=\"true\"\r\n>\r\n</app-plan-form>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\r\nimport {FormArray, FormGroup, Validators} from \"@angular/forms\";\r\nimport {IAttendancePlanModel, IAttendancePlanRequest, IAttPlanShiftList,} from \"app/system-setup/attendance-setup/models/plan\";\r\nimport {IShiftsModel} from \"app/system-setup/attendance-setup/models/shifts\";\r\nimport {AttendancePlanService} from \"app/system-setup/attendance-setup/services/attendance-plan.service\";\r\nimport {ShiftsService} from \"app/system-setup/attendance-setup/services/shifts.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {ICreateDialog} from \"app/shared/interfaces/dropdown.interface\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {HelpersFunctions} from \"app/shared/resources/helpers-functions\";\r\nimport {CustomValidator} from \"app/shared/validators/custom.validator\";\r\nimport {differenceInDays} from \"date-fns\";\r\nimport {CustomValidators} from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-plan-form\",\r\n  templateUrl: \"./plan-form.component.html\",\r\n  styleUrls: [\"./plan-form.component.scss\"],\r\n})\r\nexport class PlanFormComponent extends AppHelpers implements OnInit {\r\n  @Input() showDaysTable: boolean = true;\r\n  @Input() disabelControls: boolean = false;\r\n  @Input() isExtendWithChange: boolean = false;\r\n  @Input() showInOutCheckBox: boolean = false;\r\n  @Input() pageTitle: string = \"attendance_Plans\";\r\n  @Output() onSubmit = new EventEmitter<IAttendancePlanRequest>();\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  planId: number = 0;\r\n  shiftList: IShiftsModel[];\r\n\r\n  // dialog data\r\n  @Input() data: ICreateDialog;\r\n  @Output() closeDialog = new EventEmitter();\r\n  // private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    public planService: AttendancePlanService,\r\n    public shiftsService: ShiftsService\r\n  ) {\r\n    super();\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.planId = Number(params.get(\"planId\")) ?? 0;\r\n      if (this.planId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.getPlanById();\r\n        this.getShifts();\r\n      }\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      start_Date: [null, [Validators.required]],\r\n      end_Date: [null, [Validators.required]],\r\n      group_Days: [\r\n        null,\r\n        [Validators.required, CustomValidators.digits, Validators.min(0)],\r\n      ],\r\n      description: [null],\r\n      Att_Plan_ShiftList: this.fb.array([]),\r\n      isCheckInOut: [null],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formCtrls.group_Days.valueChanges.subscribe((val) => {\r\n      if (val > 0 && this.showDaysTable) this.updateGroupsOfDay();\r\n    });\r\n    this.getShifts();\r\n\r\n    if (this.data?.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data?.value);\r\n      this.formCtrls.en_Name.setValue(this.data?.value);\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.disabelControls) {\r\n      this.controlsDisabeld();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // get installments array\r\n  get planShiftDetailsArr() {\r\n    return this.form.controls[\"Att_Plan_ShiftList\"] as FormArray;\r\n  }\r\n\r\n  getPlanById() {\r\n    this.showLoading();\r\n    this.planService\r\n      .getById(this.planId)\r\n      .subscribe((res: IResponse<IAttendancePlanModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          let data = res.data[0];\r\n          this.form.patchValue(data);\r\n          if (this.isExtendWithChange) {\r\n            var new_startDate: Date = new Date(data.end_date);\r\n            var new_endDate: Date = new Date(data.end_date);\r\n            new_startDate.setDate(new_startDate.getDate() + 1); // new start date = end date + (1 day)\r\n            new_endDate.setDate(new_startDate.getDate() + 1 + data.group_Days); // new end date start from  new start date + (1 day) + group of days\r\n            this.formCtrls.start_Date.setValue(new_startDate);\r\n            this.formCtrls.end_Date.setValue(new_endDate);\r\n            // this.formCtrls.end_Date.addValidators([\r\n            // \tCustomValidator.dateBefore(\"end_Date\", new_endDate),\r\n            // ]);\r\n          }\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  controlsDisabeld() {\r\n    let controls = [\"ar_Name\", \"en_Name\", \"group_Days\", \"start_Date\"];\r\n    controls.forEach((control: string) => {\r\n      this.form.get(control).disable();\r\n    });\r\n  }\r\n\r\n  submitForm() {\r\n    this.submitted = true;\r\n    this.planShiftDetailsArr.clearValidators();\r\n    console.log(this.form);\r\n    if (this.form.valid) {\r\n      let planDetailsList: IAttPlanShiftList[] = [];\r\n      this.planShiftDetailsArr.controls.map((form: FormGroup, i) => {\r\n        planDetailsList.push({\r\n          id: form.controls.id.value,\r\n          plan_ID: form.controls.plan_ID.value,\r\n          shift_ID: form.controls.shift_ID.value,\r\n          is_WeekEnd: form.controls.is_WeekEnd.value,\r\n          is_Basic: form.controls.is_Basic.value ?? false,\r\n          date: HelpersFunctions.mapDateReverse(form.controls.date.value),\r\n          iterationNumber: 1,\r\n        });\r\n      });\r\n\r\n      let model: IAttendancePlanRequest = {\r\n        plan: {\r\n          id: this.formCtrls.id.value,\r\n          en_Name: this.formCtrls.en_Name.value,\r\n          ar_Name: this.formCtrls.ar_Name.value,\r\n          description: this.formCtrls.description.value,\r\n          start_Date: HelpersFunctions.mapDateReverse(\r\n            this.formCtrls.start_Date.value\r\n          ),\r\n          end_Date: HelpersFunctions.mapDateReverse(\r\n            this.formCtrls.end_Date.value\r\n          ),\r\n          group_Days: this.formCtrls.group_Days.value,\r\n        },\r\n        Att_Plan_ShiftList: planDetailsList,\r\n      };\r\n      if (this.showInOutCheckBox)\r\n        model.plan.isCheckInOut = this.formCtrls.isCheckInOut.value ?? false;\r\n\r\n      // console.log(model);\r\n      this.onSubmit.emit(model);\r\n    }\r\n  }\r\n\r\n  // add new from for plan shift details\r\n  addPlanShiftDetailsForm(date: Date) {\r\n    let planShiftDetailsForm = this.fb.group({\r\n      id: [0],\r\n      plan_ID: [this.formCtrls.id.value],\r\n      shift_ID: [null, [Validators.required]],\r\n      dateString: [this.datePipe.transform(date, \"dd/MM/yyyy, h:mm:ss a\")],\r\n      date: [date],\r\n      is_WeekEnd: [false],\r\n      is_Basic: [false],\r\n      dayName: [HelpersFunctions.getDayName(date)],\r\n      // iterationNumber: [1],\r\n    });\r\n\r\n    this.planShiftDetailsArr.push(planShiftDetailsForm);\r\n  }\r\n\r\n  updateGroupsOfDay() {\r\n    this.planShiftDetailsArr.clear();\r\n    const startDate = new Date(this.formCtrls.start_Date.value);\r\n    const endDate = new Date(this.formCtrls.end_Date.value);\r\n    const groupOfDays = this.formCtrls.group_Days.value;\r\n    const range = differenceInDays(endDate, startDate);\r\n    if (groupOfDays <= range) {\r\n      for (let i = 0; i < groupOfDays; i++) {\r\n        let curDate = this.getDateInRange(startDate, i);\r\n        this.addPlanShiftDetailsForm(curDate);\r\n      }\r\n    }\r\n  }\r\n\r\n  // get selected form\r\n  onChangeIsWeekend(value: boolean, index: number) {\r\n    if (!value) {\r\n      let selectedForm = this.planShiftDetailsArr.controls[index] as FormGroup;\r\n      selectedForm.controls.is_Basic.setValue(false);\r\n    }\r\n  }\r\n\r\n  getDateInRange(startDate: Date, index: number): Date {\r\n    let newDate = new Date(startDate);\r\n    newDate.setDate(startDate.getDate() + index);\r\n    return newDate;\r\n  }\r\n\r\n  // repeat shifts\r\n  repeatShifts(index: number) {\r\n    let selectedShiftId: number; // 1\r\n    this.planShiftDetailsArr.controls.map((form: FormGroup, i) => {\r\n      if (i == index) selectedShiftId = form.controls.shift_ID.value;\r\n      if (i > index) form.controls.shift_ID.setValue(selectedShiftId);\r\n    });\r\n  }\r\n\r\n  getShifts() {\r\n    this.showLoading();\r\n    this.shiftsService\r\n      .getAll()\r\n      //  .pipe(takeUntil(this.destroy$))\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IShiftsModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.shiftList = res.data;\r\n        } else this.errorList(res.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.closeDialog.emit();\r\n  }\r\n  // ngOnDestroy() {\r\n  //   // Unsubscribe from all observables to prevent memory leaks\r\n  //   this.destroy$.next();\r\n  //   this.destroy$.complete();\r\n  // }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\" #dialogContainer>\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title [title]=\"pageTitle\"></page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data?.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n\r\n        <ng-container *ngIf=\"!data?.isDialog\">\r\n          <app-add-new-btn\r\n            *ngIf=\"planId > 0\"\r\n            url=\"/attendance-setup/{{ moduleId }}/plan/add\"\r\n            [params]=\"pageParams\"\r\n            label=\"add_new_attendance_Plan\"\r\n          >\r\n          </app-add-new-btn>\r\n\r\n          <app-back-btn\r\n            url=\"/attendance-setup/{{ moduleId }}/plan/index\"\r\n            [params]=\"pageParams\"\r\n          >\r\n          </app-back-btn>\r\n        </ng-container>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-datepicker\r\n                [control]=\"formCtrls.start_Date\"\r\n                [submitted]=\"submitted\"\r\n                label=\"start_date\"\r\n              >\r\n              </app-datepicker>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-datepicker\r\n                [control]=\"formCtrls.end_Date\"\r\n                [submitted]=\"submitted\"\r\n                label=\"end_date\"\r\n              >\r\n              </app-datepicker>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-4\"\r\n              *ngIf=\"\r\n                !disabelControls || (disabelControls && isExtendWithChange)\r\n              \"\r\n            >\r\n              <app-input\r\n                [control]=\"formCtrls.group_Days\"\r\n                [submitted]=\"submitted\"\r\n                label=\"group_Days\"\r\n                type=\"number\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\" *ngIf=\"!disabelControls\">\r\n              <app-input\r\n                [control]=\"formCtrls.description\"\r\n                [submitted]=\"submitted\"\r\n                label=\"description\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\" *ngIf=\"showInOutCheckBox\">\r\n              <app-check-box\r\n                [control]=\"formCtrls.isCheckInOut\"\r\n                label=\"isCheckInOut\"\r\n              >\r\n              </app-check-box>\r\n            </div>\r\n          </div>\r\n\r\n          <mat-card-actions align=\"end\">\r\n            <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submitForm()\">\r\n            </submit-btn>\r\n          </mat-card-actions>\r\n\r\n          <table\r\n            class=\"w-100\"\r\n            *ngIf=\"formCtrls.group_Days.value && showDaysTable\"\r\n          >\r\n            <thead>\r\n            <tr class=\"border-bottom-2\">\r\n              <th>\r\n                {{ \"date\" | translate }}\r\n              </th>\r\n              <th>{{ \"dayofweek\" | translate }}</th>\r\n              <th>{{ \"isWeekend\" | translate }}</th>\r\n              <th>{{ \"isBasic\" | translate }}</th>\r\n              <th>{{ \"shift\" | translate }}</th>\r\n              <th></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <ng-container formArrayName=\"Att_Plan_ShiftList\">\r\n              <ng-container\r\n                *ngFor=\"\r\n                    let planShiftDetailsForm of planShiftDetailsArr.controls;\r\n                    let i = index\r\n                  \"\r\n              >\r\n                <tr [formGroup]=\"planShiftDetailsForm\">\r\n                  <td>\r\n                    <app-input\r\n                      [control]=\"planShiftDetailsForm.controls.dateString\"\r\n                      [disabled]=\"true\"\r\n                      class=\"pb-0\"\r\n                    ></app-input>\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      planShiftDetailsForm.controls.dayName.value\r\n                        | lowercase\r\n                        | translate\r\n                    }}\r\n                  </td>\r\n                  <td>\r\n                    <app-check-box\r\n                      [control]=\"planShiftDetailsForm.controls.is_WeekEnd\"\r\n                      (onChange)=\"onChangeIsWeekend($event, i)\"\r\n                    >\r\n                    </app-check-box>\r\n                  </td>\r\n                  <td>\r\n                    <app-check-box\r\n                      [control]=\"planShiftDetailsForm.controls.is_Basic\"\r\n                      [disabled]=\"\r\n                          !planShiftDetailsForm.controls.is_WeekEnd.value\r\n                        \"\r\n                    >\r\n                    </app-check-box>\r\n                  </td>\r\n                  <td>\r\n                    <app-prime-dropdown\r\n                      [control]=\"planShiftDetailsForm.controls.shift_ID\"\r\n                      label=\"shifts\"\r\n                      [submitted]=\"submitted\"\r\n                      [List]=\"shiftList\"\r\n                      [filter]=\"true\"\r\n                      [appendTo]=\"data?.isDialog ? dialogContainer : 'body'\"\r\n                    >\r\n                    </app-prime-dropdown>\r\n                  </td>\r\n                  <td>\r\n                    <a\r\n                      class=\"btn btn-info btn-icon round mb-2 ml-1\"\r\n                      [matTooltip]=\"'repeatShift' | translate\"\r\n                      (click)=\"repeatShifts(i)\"\r\n                    >\r\n                      <i class=\"pi pi-copy\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </ng-container>\r\n            </ng-container>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {Component, Injector, Input, OnInit} from \"@angular/core\";\r\nimport {FormGroup, Validators} from \"@angular/forms\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {vacationAgeToMap} from \"app/system-setup/attendance-setup/mapper/vacation\";\r\nimport {IVacationAgeModel, IVacationAgeRequest,} from \"app/system-setup/attendance-setup/models/vacation\";\r\nimport {VacationAgeService} from \"app/system-setup/attendance-setup/services/vacation/vacation-age.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IPageParams} from \"app/shared/interfaces/params\";\r\nimport {IResponse, IResponseList} from \"app/shared/interfaces/responces\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {CustomValidator} from \"app/shared/validators/custom.validator\";\r\nimport {CustomValidators} from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-vacation-age\",\r\n  templateUrl: \"./vacation-age.component.html\",\r\n  styleUrls: [\"./vacation-age.component.scss\"],\r\n})\r\nexport class VacationAgeComponent extends AppHelpers implements OnInit {\r\n  @Input() vacationId: number;\r\n  dataSource: MatTableDataSource<IVacationAgeModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"From_Age\",\r\n    \"To_Age\",\r\n    \"balance\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  // private destroy$ = new Subject<void>();\r\n\r\n  constructor(private vacationAgeServ: VacationAgeService, injector: Injector) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.businessId > 0 && this.companyId > 0 && this.vacationId > 0) {\r\n    // \tthis.getVacationAgeList();\r\n    // }\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, { nonNullable: true }],\r\n        Vacation_ID: [0, { nonNullable: true }],\r\n        From_Age: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        To_Age: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        balance: [null, [Validators.required, CustomValidators.gt(0)]],\r\n      },\r\n      {\r\n        validators: [CustomValidator.greaterThan(\"From_Age\", \"To_Age\")],\r\n      }\r\n    );\r\n  }\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany() && this.vacationId > 0)\r\n      this.getVacationAgeList();\r\n  }\r\n\r\n  getVacationAgeList() {\r\n    let params: IPageParams = {\r\n      PageNumber: 1,\r\n      pageSize: 1,\r\n    };\r\n    this.vacationAgeServ\r\n      .getList(params, this.vacationId)\r\n      // .pipe(takeUntil(this.destroy$))\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IVacationAgeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(vacationAgeToMap(res.data));\r\n          this.isLoaded = true;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IVacationAgeRequest = {\r\n        id: this.form.value.id,\r\n        Vacation_ID: this.vacationId,\r\n        From_Age: this.form.value.From_Age,\r\n        To_Age: this.form.value.To_Age,\r\n        Balance: this.form.value.balance,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IVacationAgeRequest) {\r\n    this.showLoading();\r\n    this.vacationAgeServ\r\n      .create(model)\r\n      .subscribe((res: IResponse<IVacationAgeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.getVacationAgeList();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IVacationAgeRequest) {\r\n    this.showLoading();\r\n    this.vacationAgeServ\r\n      .update(model)\r\n      .subscribe((res: IResponse<IVacationAgeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getVacationAgeList();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  vacationAgeToEdit(vacationAge: IVacationAgeModel) {\r\n    this.form.patchValue(vacationAge);\r\n  }\r\n\r\n  onDelete(vacationAge: IVacationAgeModel) {\r\n    let msg = this.msgTranslate(vacationAge.to_Age.toString());\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(vacationAge);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: IVacationAgeModel) {\r\n    this.showLoading();\r\n    this.vacationAgeServ.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.getVacationAgeList();\r\n        if (model.id == this.formCtrls.id.value) this.clearForm();\r\n      } else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n  // ngOnDestroy() {\r\n  //   // Unsubscribe from all observables to prevent memory leaks\r\n  //   this.destroy$.next();\r\n  //   this.destroy$.complete();\r\n  // }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<mat-card-subtitle class=\"mt-2\">\r\n  <page-title\r\n    [id]=\"formCtrls.id.value\"\r\n    addTitle=\"addvacationAge\"\r\n    editTitle=\"editvacationAge\"\r\n  >\r\n  </page-title>\r\n</mat-card-subtitle>\r\n\r\n<mat-card-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.From_Age\"\r\n          [submitted]=\"submitted\"\r\n          type=\"number\"\r\n          label=\"From_Age\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.To_Age\"\r\n          [submitted]=\"submitted\"\r\n          type=\"number\"\r\n          label=\"To_Age\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.balance\"\r\n          [submitted]=\"submitted\"\r\n          type=\"number\"\r\n          label=\"balance\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n  <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n</mat-card-actions>\r\n\r\n<app-material-table\r\n  [isLoaded]=\"isLoaded\"\r\n  *ngIf=\"dataSource?.data\"\r\n  [dataSource]=\"dataSource\"\r\n  [mandatoryColomns]=\"mandatoryColomns\"\r\n  [optionalColomns]=\"optionalColomns\"\r\n  [page]=\"page\"\r\n  [actions]=\"rowFunctions\"\r\n  [showPaginator]=\"false\"\r\n  (editRow)=\"vacationAgeToEdit($event)\"\r\n  (deleteRow)=\"onDelete($event)\"\r\n>\r\n</app-material-table>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormGroup, Validators} from '@angular/forms';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {\r\n  IVacationInsuranceModel,\r\n  IVacationInsuranceRequest,\r\n} from 'app/system-setup/attendance-setup/models/vacation';\r\nimport {VacationInsuranceService} from 'app/system-setup/attendance-setup/services/vacation/vacation-insurance.service';\r\nimport {RadioButtonModel} from 'app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component';\r\nimport {EInsuranceSide} from 'app/shared/enums/insuranceSide.enum';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {IPageParams} from 'app/shared/interfaces/params';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport {AppHelpers} from 'app/shared/resources/app-helpers';\r\nimport {CustomValidator} from 'app/shared/validators/custom.validator';\r\nimport {CustomValidators} from 'ngx-custom-validators';\r\n\r\n@Component({\r\n  selector: 'app-vacation-insurance',\r\n  templateUrl: './vacation-insurance.component.html',\r\n  styleUrls: ['./vacation-insurance.component.scss'],\r\n})\r\nexport class VacationInsuranceComponent extends AppHelpers implements OnInit {\r\n  @Input() vacationId: number;\r\n  dataSource: MatTableDataSource<IVacationInsuranceModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\r\n    'Ser',\r\n    'id',\r\n    'from_Year',\r\n    'to_Year',\r\n    'balance',\r\n    'inside_CompanyString',\r\n    'actions',\r\n  ];\r\n  optionalColomns: string[] = ['ignore_Insurance_Date'];\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private vacationInsServ: VacationInsuranceService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.businessId > 0 && this.companyId > 0 && this.vacationId > 0)\r\n    // \tthis.getVacationInsuranceList();\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNallable: true}],\r\n        Vacation_ID: [0, {nonNullable: true}],\r\n        from_Year: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        to_Year: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        balance: [null, [Validators.required, CustomValidators.gt(0)]],\r\n        inside_Company: [null, [Validators.required]],\r\n        ignore_Insurance_Date: [false],\r\n      },\r\n      {\r\n        validators: [CustomValidator.greaterThan('from_Year', 'to_Year')],\r\n      }\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) {\r\n      this.dataSource = new MatTableDataSource(null);\r\n    }\r\n    if (this.checkNoBusinessOrCompany() && this.vacationId > 0) {\r\n      this.getVacationInsuranceList();\r\n    }\r\n  }\r\n\r\n  getVacationInsuranceList() {\r\n    let params: IPageParams = {\r\n      PageNumber: 1,\r\n      pageSize: 1,\r\n    };\r\n    this.vacationInsServ\r\n      .getList(params, this.vacationId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IVacationInsuranceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data.map((e) => {\r\n            e.inside_CompanyString = this.translate(\r\n              EInsuranceSide.getValue(e.inside_Company)\r\n            );\r\n          });\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n        } else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IVacationInsuranceRequest = {\r\n        ID: this.form.value.id,\r\n        Vacation_ID: this.vacationId,\r\n        From_Year: this.form.value.from_Year,\r\n        To_Year: this.form.value.to_Year,\r\n        Balance: this.form.value.balance,\r\n        inside_Company: this.form.value.inside_Company,\r\n        ignore_Insurance_Date: this.form.value.ignore_Insurance_Date,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IVacationInsuranceRequest) {\r\n    this.showLoading();\r\n    this.vacationInsServ.create(model).subscribe((res: IResponse<IVacationInsuranceModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.getVacationInsuranceList();\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n      } else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IVacationInsuranceRequest) {\r\n    this.showLoading();\r\n    this.vacationInsServ.update(model).subscribe((res: IResponse<IVacationInsuranceModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getVacationInsuranceList();\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      } else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(vacationInsurance: IVacationInsuranceModel) {\r\n    let msg = this.msgTranslate(vacationInsurance.to_Year.toString());\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(vacationInsurance);\r\n      }\r\n    });\r\n  }\r\n\r\n  vacationInsuranceEdit(vacationInsurance: IVacationInsuranceModel) {\r\n    this.form.patchValue(vacationInsurance);\r\n  }\r\n\r\n  delete(model: IVacationInsuranceModel) {\r\n    this.showLoading();\r\n    this.vacationInsServ.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.getVacationInsuranceList();\r\n        if (model.id == this.formCtrls.id.value) {\r\n          this.clearForm();\r\n        }\r\n      } else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  insuranceSide = EInsuranceSide;\r\n  insuranceSideRadio: RadioButtonModel[] = [\r\n    {\r\n      value: EInsuranceSide.outside_Company,\r\n      label: 'outside_Company',\r\n    },\r\n    {\r\n      value: EInsuranceSide.inside_Company,\r\n      label: 'inside_Company',\r\n    },\r\n  ];\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-subtitle>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"addvacationInsurance\"\r\n          editTitle=\"editvacationInsurance\"\r\n        >\r\n        </page-title>\r\n      </mat-card-subtitle>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.from_Year\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"from_Year\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.to_Year\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"to_Year\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.balance\"\r\n                [submitted]=\"submitted\"\r\n                type=\"number\"\r\n                label=\"balance\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            {{ \"insuranceSide\" | translate | titlecase }}\r\n          </div>\r\n          <div class=\"col-md-5 col-12\">\r\n            <app-radio-button\r\n              [control]=\"formCtrls.inside_Company\"\r\n              [submitted]=\"submitted\"\r\n              [radioList]=\"insuranceSideRadio\"\r\n            >\r\n            </app-radio-button>\r\n          </div>\r\n          <div\r\n            class=\"col-md-3 col-12\"\r\n            *ngIf=\"\r\n              formCtrls.inside_Company.value == insuranceSide.inside_Company\r\n            \"\r\n          >\r\n            <app-check-box\r\n              [control]=\"formCtrls.ignore_Insurance_Date\"\r\n              label=\"ignore_Insurance_Date\"\r\n            >\r\n            </app-check-box>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        *ngIf=\"dataSource?.data\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [showPaginator]=\"false\"\r\n        [actions]=\"rowFunctions\"\r\n        (editRow)=\"vacationInsuranceEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { vacationToMap } from \"app/system-setup/attendance-setup/mapper/vacation\";\r\nimport { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { Params } from \"@angular/router\";\r\nimport {\r\n  IVacationModel,\r\n  IVacationRequest,\r\n  IVacationResponse,\r\n} from \"app/system-setup/attendance-setup/models/vacation\";\r\nimport { VacationService } from \"app/system-setup/attendance-setup/services/vacation/vacation.service\";\r\nimport { RadioButtonModel } from \"app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-vacation-type\",\r\n  templateUrl: \"./vacation-type.component.html\",\r\n  styleUrls: [\"./vacation-type.component.scss\"],\r\n})\r\nexport class VacationTypeComponent extends AppHelpers implements OnInit {\r\n  vacationId: number;\r\n  submitted: boolean = false;\r\n  form: FormGroup;\r\n\r\n  vacationList: IVacationModel[];\r\n\r\n  constructor(\r\n    private vacationServ: VacationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<VacationTypeComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.vacationId = params.vacationId ?? 0;\r\n    });\r\n    // if (this.businessId > 0 && this.companyId > 0 && this.vacationId > 0) {\r\n    // \tthis.getVactionById();\r\n    // }\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNallable: true}],\r\n      en_Name: [null, [Validators.required]],\r\n      ar_Name: [null, [Validators.required]],\r\n      element_ID: [null],\r\n      monthes_to_get_Balance: [null],\r\n      allow_Post: [false],\r\n      max_Post_Days: [null, [CustomValidators.gte(0)]],\r\n      post_Period_Month: [null, [CustomValidators.gte(0)]],\r\n      offecial_Vaction_Included: [false],\r\n      day_Off_Included: [false],\r\n      isRenew: [false],\r\n      renew_Day: [null, [CustomValidators.gte(0)]],\r\n      renew_Month: [null, [CustomValidators.gte(0)]],\r\n      defaultBalance: [null, [CustomValidators.gte(0)]],\r\n      renew_Period: [null, [CustomValidators.gte(0)]],\r\n      number_of_Earning: [null, [Validators.required, CustomValidators.gte(0)]],\r\n      isDefault: [false],\r\n      is_Paid: [false],\r\n      canBeRequestedToday: [false],\r\n      // maxRelatedBal: [0], //additional property\r\n      deductible_Value: [null, [CustomValidators.gte(0)]],\r\n      relatedVacationId: [null],\r\n      relatedVacationPriority: [null, [CustomValidators.gte(0)]],\r\n      hasAttashment: [false],\r\n      calculate_Balance: [null, [Validators.required]],\r\n      calculate_Balance_By_Contract: [false],\r\n      number_Days_month: [null, [CustomValidators.gte(0)]],\r\n      reportOrder: [null],\r\n      gender: [null],\r\n      isPostedPreviousYears: [false],\r\n      isPostedWithRelatedVacation: [false],\r\n      isEgyptianLaw: [false],\r\n      variableCode: [null, CustomValidator.variableCodeValidators],\r\n      display_In_Result: [false],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form?.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getAllVacations();\r\n      if (this.vacationId > 0) this.getVactionById();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IVacationRequest = {\r\n        att_Vacation: {\r\n          id: this.form.value.id,\r\n          en_Name: this.form.value.en_Name,\r\n          ar_Name: this.form.value.ar_Name,\r\n          element_ID: this.form.value.element_ID,\r\n          monthes_to_get_Balance: this.form.value.monthes_to_get_Balance,\r\n          allow_Post: this.form.value.allow_Post,\r\n          max_Post_Days: this.form.value.max_Post_Days,\r\n          post_Period_Month: this.form.value.post_Period_Month,\r\n          offecial_Vaction_Included: this.form.value.offecial_Vaction_Included,\r\n          day_Off_Included: this.form.value.day_Off_Included,\r\n          isRenew: this.form.value.isRenew,\r\n          renew_Day: this.form.value.renew_Day,\r\n          renew_Month: this.form.value.renew_Month,\r\n          defaultBalance: this.form.value.defaultBalance,\r\n          renew_Period: this.form.value.renew_Period,\r\n          number_of_Earning: this.form.value.number_of_Earning,\r\n          isDefault: this.form.value.isDefault,\r\n          is_Paid: this.form.value.is_Paid,\r\n          canBeRequestedToday: this.form.value.canBeRequestedToday,\r\n          //  maxRelatedBal: this.form.value.maxRelatedBal,\r\n          deductible_Value: this.form.value.deductible_Value,\r\n          relatedVacationId: this.form.value.relatedVacationId,\r\n          relatedVacationPriority: this.form.value.relatedVacationPriority,\r\n          hasAttashment: this.form.value.hasAttashment,\r\n          calculate_Balance: this.form.value.calculate_Balance,\r\n          calculate_Balance_By_Contract: this.form.value.calculate_Balance_By_Contract,\r\n          number_Days_month: this.form.value.number_Days_month,\r\n          reportOrder: this.form.value.reportOrder,\r\n          gender: this.form.value.gender,\r\n          isPostedPreviousYears: this.form.value.isPostedPreviousYears,\r\n          isPostedWithRelatedVacation: this.form.value.isPostedWithRelatedVacation,\r\n          isEgyptianLaw: this.form.value.isEgyptianLaw,\r\n        },\r\n\r\n        variableCode: this.form.value.variableCode,\r\n        display_In_Result: this.form.value.display_In_Result,\r\n      };\r\n\r\n      model.att_Vacation.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IVacationRequest) {\r\n    this.showLoading();\r\n    this.vacationServ.create(model).subscribe((res: IResponse<IVacationResponse>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.vacationId = res.data.att_Vacation.id;\r\n        this.formCtrls.id.setValue(this.vacationId);\r\n        let url = `/attendance-setup/${this.moduleId}/vacations/edit/${this.vacationId}`;\r\n        if (!this.data.isDialog) this.navigateTo(url);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        // get element_ID after add\r\n        this.formCtrls.element_ID.setValue(res.data.att_Vacation.element_ID);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IVacationRequest) {\r\n    this.showLoading();\r\n    this.vacationServ.update(model).subscribe((res: IResponse<IVacationResponse>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      }\r\n    });\r\n  }\r\n\r\n  getVactionById() {\r\n    this.vacationServ\r\n      .getById(this.vacationId)\r\n      .subscribe((res: IResponseList<IVacationResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          let vacation = vacationToMap(res.data)[0];\r\n          this.form.patchValue(vacation);\r\n          // this.formCtrls.variableCode.setValue(res.data[0].paY_Variable.code);\r\n          // this.formCtrls.display_In_Result.setValue(res.data[0].paY_Variable.display_In_Result);\r\n        }\r\n      });\r\n  }\r\n\r\n  calculateBalance: RadioButtonModel[] = [\r\n    {\r\n      value: 1,\r\n      label: \"hireDate\",\r\n      cssClass: \"col-12 col-md-6\"\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"earningDate\",\r\n      cssClass: \"col-12 col-md-6\"\r\n    },\r\n  ];\r\n\r\n  onSelectVacation(att_vacation: IVacationModel[]) {\r\n    if (att_vacation) {\r\n      let vacation = att_vacation[0];\r\n      if (!vacation) {\r\n        this.formCtrls.renew_Period.enable();\r\n        this.formCtrls.renew_Day.enable();\r\n        this.formCtrls.renew_Month.enable();\r\n      }\r\n      else {\r\n        this.formCtrls.renew_Period.setValue(vacation.renew_Period);\r\n        this.formCtrls.renew_Day.setValue(vacation.renew_Day);\r\n        this.formCtrls.renew_Month.setValue(vacation.renew_Month);\r\n        this.formCtrls.renew_Period.disable();\r\n        this.formCtrls.renew_Day.disable();\r\n        this.formCtrls.renew_Month.disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getAllVacations() {\r\n    this.vacationServ\r\n      .getAll()\r\n      .subscribe((res: IResponse<IVacationResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.vacationList = vacationToMap(res.data);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\" #dialogContainer>\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"vacationType\"></page-title>\r\n\r\n        <app-add-new-btn *ngIf=\"vacationId > 0\"\r\n                         url=\"/attendance-setup/{{ moduleId }}/vacations/add\"\r\n                         [params]=\"pageParams\"\r\n                         label=\"addvacationType\">\r\n        </app-add-new-btn>\r\n\r\n        <!-- back btn -->\r\n\r\n        <app-back-btn *ngIf=\"!data.isDialog\"\r\n                      url=\"/attendance-setup/{{ moduleId }}/vacations/index\"\r\n                      [params]=\"pageParams\">\r\n        </app-back-btn>\r\n\r\n        <!-- close btn -->\r\n\r\n        <close-dialog-btn *ngIf=\"data.isDialog\"\r\n                          (click)=\"onCloseDialog()\">\r\n        </close-dialog-btn>\r\n      </mat-card-title>\r\n      <mat-tab-group class=\"view-tabs-group justify-content-start\" [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n        <mat-tab label=\"{{ 'vacationType' | translate | titlecase }}\">\r\n          <mat-card-content class=\"container-fluid\">\r\n            <!--            <mat-card-subtitle class=\"mt-2\">-->\r\n            <!--              <span *ngIf=\"formCtrls.id.value == 0\">-->\r\n            <!--                {{ \"addvacationType\" | translate | titlecase }}-->\r\n            <!--              </span>-->\r\n            <!--              <span *ngIf=\"formCtrls.id.value > 0\">-->\r\n            <!--                {{ \"editvacationType\" | translate | titlecase }}-->\r\n            <!--              </span>-->\r\n            <!--            </mat-card-subtitle>-->\r\n\r\n\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row division mb-3 px-1 pt-3 pb-0\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.variableCode\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"text\"\r\n                    label=\"variableCode\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-gender-dropdown\r\n                    [control]=\"formCtrls.gender\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"false\"\r\n                    [appendTo]=\"data?.isDialog ? dialogContainer: 'body'\">\r\n                  </app-gender-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.defaultBalance\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"defaultBalance\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.number_Days_month\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"number_Days_month\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.number_of_Earning\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"number_of_Earning\">\r\n                  </app-input>\r\n                </div>\r\n                <!--              </div>-->\r\n\r\n                <!--              <div class=\"row\">-->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-prime-dropdown [control]=\"formCtrls.relatedVacationId\"\r\n                                      [submitted]=\"submitted\"\r\n                                      [filter]=\"true\"\r\n                                      label=\"vacationType\"\r\n                                      [List]=\"vacationList\"\r\n                                      [appendTo]=\"data?.isDialog ? dialogContainer: 'body'\"\r\n                                      (change)=\"onSelectVacation($event)\">\r\n                  </app-prime-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\"\r\n                     *ngIf=\"formCtrls.relatedVacationId.value > 0\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.relatedVacationPriority\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"relatedVacationPriority\">\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12 p-2\"\r\n                     *ngIf=\"formCtrls.relatedVacationId.value > 0\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isPostedWithRelatedVacation\"\r\n                    label=\"isPostedWithRelatedVacation\">\r\n                  </app-check-box>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row division mb-3 px-1 pt-3 pb-0\">\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isRenew\"\r\n                    label=\"isRenew\">\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.renew_Period\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"renew_Period\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.renew_Day\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"renew_Day\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.renew_Month\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"renew_Month\">\r\n                  </app-input>\r\n                </div>\r\n                <!--              </div>-->\r\n\r\n                <!--              <div class=\"row\">-->\r\n\r\n                <ng-container *ngIf=\"formCtrls.isRenew.value &&!formCtrls.relatedVacationId.value\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <app-check-box\r\n                      [control]=\"formCtrls.allow_Post\"\r\n                      label=\"allow_Post\">\r\n                    </app-check-box>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <app-input\r\n                      [control]=\"formCtrls.max_Post_Days\"\r\n                      [submitted]=\"submitted\"\r\n                      type=\"number\"\r\n                      label=\"max_Post_Days\">\r\n                    </app-input>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <app-input\r\n                      [control]=\"formCtrls.post_Period_Month\"\r\n                      [submitted]=\"submitted\"\r\n                      type=\"number\"\r\n                      label=\"post_Period_Month\">\r\n                    </app-input>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <app-check-box\r\n                      [control]=\"formCtrls.isPostedPreviousYears\"\r\n                      label=\"isPostedPreviousYears\">\r\n                    </app-check-box>\r\n                  </div>\r\n\r\n                </ng-container>\r\n              </div>\r\n\r\n              <div class=\"row division mb-3 px-1 pt-3 pb-0\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.deductible_Value\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"deductible_Value\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.monthes_to_get_Balance\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"monthes_to_get_Balance\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.reportOrder\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"reportOrder\">\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row division mb-3 px-1 pt-3\">\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.calculate_Balance_By_Contract\"\r\n                    label=\"calculate_Balance_By_Contract\">\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.hasAttashment\"\r\n                    label=\"hasAttashment\">\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isDefault\"\r\n                    label=\"isDefault\">\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.day_Off_Included\"\r\n                    label=\"day_Off_Included\">\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.offecial_Vaction_Included\"\r\n                    label=\"offecial_Vaction_Included\">\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box [control]=\"formCtrls.is_Paid\" label=\"is_Paid\">\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.canBeRequestedToday\"\r\n                    label=\"canBeRequestedToday\">\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isEgyptianLaw\"\r\n                    label=\"isEgyptianLaw\">\r\n                  </app-check-box>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <app-radio-button\r\n                    [control]=\"formCtrls.calculate_Balance\"\r\n                    label=\"calculateBalance\"\r\n                    [submitted]=\"submitted\"\r\n                    [radioList]=\"calculateBalance\">\r\n                  </app-radio-button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n          </mat-card-content>\r\n\r\n          <mat-card-actions align=\"end\">\r\n\r\n            <reset-form-btn *ngIf=\"!formCtrls.id.value\"\r\n                            (click)=\"clearForm()\">\r\n            </reset-form-btn>\r\n\r\n            <submit-btn [id]=\"formCtrls.id.value\"\r\n                        (onClick)=\"submit()\">\r\n            </submit-btn>\r\n\r\n          </mat-card-actions>\r\n        </mat-tab>\r\n\r\n        <mat-tab\r\n          label=\"{{ 'vacationAge' | translate | titlecase }}\"\r\n          *ngIf=\"!data.isDialog\">\r\n          <app-vacation-age [vacationId]=\"vacationId\"></app-vacation-age>\r\n        </mat-tab>\r\n        <mat-tab\r\n          label=\"{{ 'vacationInsurance' | translate | titlecase }}\"\r\n          *ngIf=\"!data.isDialog\">\r\n          <app-vacation-insurance\r\n            [vacationId]=\"vacationId\"\r\n          ></app-vacation-insurance>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {\r\n  IVacationAgeModel,\r\n  IVacationModel,\r\n  IVacationResponse,\r\n} from \"../models/vacation\";\r\n\r\nexport function vacationToMap(\r\n  vacations: IVacationResponse[]\r\n): IVacationModel[] {\r\n  return vacations.map((vacation) => {\r\n    return <IVacationModel>{\r\n      ...vacation.att_Vacation,\r\n      display_In_Result: vacation.paY_Variable?.display_In_Result,\r\n      variableCode: vacation.paY_Variable?.code,\r\n    };\r\n  });\r\n}\r\n\r\nexport function vacationAgeToMap(\r\n  vacationAges: IVacationAgeModel[]\r\n): IVacationAgeModel[] {\r\n  return vacationAges.map((vacationAge) => {\r\n    return <IVacationAgeModel>{\r\n      ...vacationAge,\r\n      From_Age: vacationAge.from_Age,\r\n      To_Age: vacationAge.to_Age,\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IAttLocationModel, IAttLocationRequest } from \"app/system-setup/attendance-setup/models/att-location\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AttLocationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IAttLocationRequest) {\r\n    return this.post<IResponse<IAttLocationModel>>(\r\n      \"AttendanceSetup/ProjLocationType/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IAttLocationRequest) {\r\n    return this.post<IResponse<IAttLocationModel>>(\r\n      \"AttendanceSetup/ProjLocationType/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IAttLocationModel[]>>(\r\n      \"AttendanceSetup/ProjLocationType/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IAttLocationModel[]>>(\r\n      \"AttendanceSetup/ProjLocationType/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"AttendanceSetup/ProjLocationType/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IAttPlanShiftList, IAttendancePlanModel, IAttendancePlanRequest, IPlan } from \"../models/plan\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class AttendancePlanService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(body: IAttendancePlanRequest) {\r\n\t\treturn this.post<IResponse<IAttendancePlanRequest>>(\"AttendanceSetup/Plan/Create\", body);\r\n\t}\r\n\r\n\tupdate(data: IAttendancePlanRequest) {\r\n\t\treturn this.post<IResponse<IAttendancePlanRequest>>(\"AttendanceSetup/Plan/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IAttendancePlanModel[]>>(\"AttendanceSetup/Plan/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetById(id: number) {\r\n\t\treturn this.get<IResponse<IAttendancePlanModel[]>>(\"AttendanceSetup/Plan/GetAll\", {\r\n\t\t\tparams: {\r\n\t\t\t\t$filter: `id eq ${id}`,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\tgetDetailsById(id: number) {\r\n\t\treturn this.get<IResponse<IAttPlanShiftList[]>>(\"AttendanceSetup/Plan/Details\", {\r\n\t\t\tparams: {\r\n\t\t\t\tplanId: `${id}`,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IAttendancePlanModel[]>>(\"AttendanceSetup/Plan/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"AttendanceSetup/Plan/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n\tcreateExtendWithoutChange(data: IPlan) {\r\n\t\treturn this.post<IResponse<IAttendancePlanRequest>>(\r\n\t\t\t\"AttendanceSetup/Plan/ExtendWithoutChange\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tcreateExtendWithChange(data: IAttendancePlanRequest) {\r\n\t\treturn this.post<IResponse<IAttendancePlanRequest>>(\r\n\t\t\t\"AttendanceSetup/Plan/ExtendWithChange\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tcreateShrink(data: IPlan) {\r\n\t\treturn this.post<IResponse<IAttendancePlanRequest>>(\"AttendanceSetup/Plan/Shrink\", data);\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IPermissionTypeDropdownResponse,\r\n  IPermissionTypeModel,\r\n  IPermissionTypeRequest,\r\n} from \"../models/permissions\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PermissionTypeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IPermissionTypeRequest) {\r\n    return this.post<IResponse<IPermissionTypeModel>>(\r\n      \"AttendanceSetup/PermissionSetup/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IPermissionTypeRequest) {\r\n    return this.post<IResponse<IPermissionTypeModel>>(\r\n      \"AttendanceSetup/PermissionSetup/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IPermissionTypeModel[]>>(\r\n      \"AttendanceSetup/PermissionSetup/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IPermissionTypeDropdownResponse>(\r\n      \"AttendanceSetup/PermissionSetup/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${id}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IPermissionTypeModel[]>>(\r\n      \"AttendanceSetup/PermissionSetup/GetAll\"\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: IPermissionTypeModel) => {\r\n          item.ar_Name = item.name;\r\n          item.en_Name = item.name;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"AttendanceSetup/PermissionSetup/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IShiftRequest, IShiftsModel } from \"../models/shifts\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class ShiftsService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(body: IShiftRequest) {\r\n\t\treturn this.post<IResponse<IShiftsModel>>(\"AttendanceSetup/Shift/Create\", body);\r\n\t}\r\n\r\n\tupdate(data: IShiftRequest) {\r\n\t\treturn this.post<IResponse<IShiftsModel>>(\"AttendanceSetup/Shift/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IShiftsModel[]>>(\"AttendanceSetup/Shift/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetById(id: number) {\r\n\t\treturn this.get<IResponse<IShiftsModel[]>>(\"AttendanceSetup/Shift/GetAll\", {\r\n\t\t\tparams: {\r\n\t\t\t\t$filter: `id eq ${id}`,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IShiftsModel[]>>(\"AttendanceSetup/Shift/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"AttendanceSetup/Shift/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n\t//   createExtendWithChange(data: IGradeRequest, params) {\r\n\t//     return this.post<IResponse<IGradeModel>>(\"Grade/Create\", data, {\r\n\t//       params: params,\r\n\t//     });\r\n\r\n\t// }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IVacationAgeModel, IVacationAgeRequest } from \"../../models/vacation\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class VacationAgeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IVacationAgeRequest) {\r\n    return this.post<IResponse<IVacationAgeModel>>(\r\n      \"AttendanceSetup/VacationTypes/AddVacationAgeBased\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IVacationAgeRequest) {\r\n    return this.post<IResponse<IVacationAgeModel>>(\r\n      \"AttendanceSetup/VacationTypes/EditVacationAgeBased\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams, vacationId: number) {\r\n    return this.get<IResponse<IVacationAgeModel[]>>(\r\n      \"AttendanceSetup/VacationTypes/GetVacationAgeBasedList\",\r\n      {\r\n        params: { ...params, $filter: `vacation_ID eq ${vacationId}` },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\r\n      \"AttendanceSetup/VacationTypes/DeleteVacationAgeBased\",\r\n      {\r\n        params: { Id: id },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IVacationInsuranceModel, IVacationInsuranceRequest } from \"../../models/vacation\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class VacationInsuranceService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tcreate(data: IVacationInsuranceRequest) {\r\n\t\treturn this.post<IResponse<IVacationInsuranceModel>>(\r\n\t\t\t\"AttendanceSetup/VacationTypes/AddVacationInsuranceBased\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tupdate(data: IVacationInsuranceRequest) {\r\n\t\treturn this.post<IResponse<IVacationInsuranceModel>>(\r\n\t\t\t\"AttendanceSetup/VacationTypes/EditVacationInsuranceBased\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tgetList(params: IPageParams, vacationId: number) {\r\n\t\treturn this.get<IResponse<IVacationInsuranceModel[]>>(\r\n\t\t\t\"AttendanceSetup/VacationTypes/GetVacationInsuranceBasedList\",\r\n\t\t\t{\r\n\t\t\t\tparams: { ...params, $filter: `vacation_ID eq ${vacationId}` },\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"AttendanceSetup/VacationTypes/DeleteVacationInsuranceBased\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {IPageParams} from \"app/shared/interfaces/params\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {AppClientService} from \"app/shared/services/app-client.service\";\r\nimport {IVacationRequest, IVacationResponse} from \"../../models/vacation\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class VacationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IVacationRequest) {\r\n    return this.post<IResponse<IVacationResponse>>(\r\n      \"AttendanceSetup/VacationTypes/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IVacationRequest) {\r\n    return this.post<IResponse<IVacationResponse>>(\r\n      \"AttendanceSetup/VacationTypes/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponse<IVacationResponse[]>>(\r\n      \"AttendanceSetup/VacationTypes/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<IVacationResponse[]>>(\r\n      \"AttendanceSetup/VacationTypes/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${id}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IVacationResponse[]>>(\r\n      \"AttendanceSetup/VacationTypes/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"AttendanceSetup/VacationTypes/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { IBenefitModel } from \"app/system-setup/bonus-setup/models/benefit\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class BenefitService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IBenefitModel[]>>(\"Benefit/GetAll\",{\r\n      params:{\r\n        $expand:`${db.bon_Benefit_Type}`\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard-dispaly-details\",\r\n  templateUrl: \"./dashboard-dispaly-details.component.html\",\r\n  styleUrls: [\"./dashboard-dispaly-details.component.scss\"],\r\n})\r\nexport class DashboardDispalyDetailsComponent implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private sanitizer: DomSanitizer,\r\n    public dialogRef: MatDialogRef<DashboardDispalyDetailsComponent>\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  openLink(url: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12 w-100\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <span>{{ data.name }}</span>\r\n        <!-- close btn -->\r\n        <close-dialog-btn (click)=\"onCloseDialog()\">\r\n        </close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <iframe\r\n          [src]=\"openLink(data.link)\"\r\n          frameBorder=\"0\"\r\n          scrolling=\"no\"\r\n          allowtransparency=\"true\"\r\n          frameborder=\"0\"\r\n           allowFullScreen=\"true\"\r\n           \r\n        ></iframe>\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  inject,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { DashboardService } from \"../../services/dashboard.service\";\r\nimport {\r\n  IDashboardDataModel,\r\n  IDashboardToDisplay,\r\n} from \"../../models/dashboard\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { dashboardDisplay } from \"../../mapper/dashboard\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DashboardDispalyDetailsComponent } from \"../dashboard-dispaly-details/dashboard-dispaly-details.component\";\r\nimport { FileService } from \"app/shared/services/file.service\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard-display\",\r\n  templateUrl: \"./dashboard-display.component.html\",\r\n  styleUrls: [\"./dashboard-display.component.scss\"],\r\n})\r\nexport class DashboardDisplayComponent\r\n  extends AppHelpers\r\n  implements OnInit, OnChanges\r\n{\r\n  @Input() serviceId: number = 0;\r\n  Module_ID: number = 0;\r\n  isExistInHome: boolean = false;\r\n  dashboardList: IDashboardToDisplay[] = [];\r\n  dialog: MatDialog = inject(MatDialog);\r\n  isloading: boolean = false;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    public dashboardService: DashboardService,\r\n    public fileService: FileService\r\n  ) {\r\n    super();\r\n    if (this.getViewName == this.viewsManager.home_dashboard) {\r\n      this.isExistInHome = true;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.serviceId > 0 || this.Module_ID > 0) this.getAllDashboard();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      module_Id: [null],\r\n    });\r\n\r\n    // this.activatedRoute.params.subscribe((param) => {\r\n    //   this.Module_ID = param.dashboardModuleId;\r\n    // });\r\n\r\n    if (this.serviceId > 0 || this.Module_ID > 0 || this.isExistInHome)\r\n      this.getAllDashboard();\r\n  }\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getFilter() {\r\n    return {\r\n      $filter:\r\n        this.Module_ID > 0 \r\n          ? `Module_ID eq ${this.Module_ID}`\r\n          : this.serviceId > 0\r\n          ? `Service_ID eq ${this.serviceId}`\r\n          : `Dash_Dashboard/IsExistInHome  eq ${true}`,\r\n    };\r\n  }\r\n\r\n  getModuleDasboard() {\r\n    this.isloading = false;\r\n    this.dashboardList = [];\r\n    this.Module_ID = this.formCtrls.module_Id.value;\r\n    this.getAllDashboard();\r\n  }\r\n\r\n  getAllDashboard() {\r\n    let params = {\r\n      ...this.businessCompanyParams,\r\n      ...this.getFilter(),\r\n    };\r\n    this.dashboardService\r\n      .getAll(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IDashboardDataModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dashboardList = dashboardDisplay(res.data);\r\n          this.isloading = true;\r\n        } else {\r\n          this.errorList(res.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  dashboardDialog(data: IDashboardToDisplay) {\r\n    return this.dialog.open(DashboardDispalyDetailsComponent, {\r\n      data: {\r\n        link: data.link,\r\n        name: this.languageService.isArabic ? data.ar_Name : data.en_Name,\r\n      },\r\n      minWidth: \"60%\",\r\n      minHeight: \"50vh\",\r\n      autoFocus: false,\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title *ngIf=\"serviceId == 0\">\r\n        <page-title title=\"dashboard\"> </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\" *ngIf=\"serviceId==0\">\r\n            <app-module-dropdown\r\n              [control]=\"formCtrls.module_Id\"\r\n              [filter]=\"true\"\r\n              (change)=\"getModuleDasboard()\"\r\n            ></app-module-dropdown>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-5 text-center\">\r\n          <div\r\n            [class]=\"serviceId == 0 ? 'col-12 col-md-3' : 'col-6'\"\r\n            *ngFor=\"let dash of dashboardList\"\r\n          >\r\n            <a (click)=\"dashboardDialog(dash)\">\r\n              <img [src]=\"fileService.preview(dash.file?.path)\" />\r\n              <p class=\"text-center p-3\">\r\n                {{ languageService.isArabic ? dash.ar_Name : dash.en_Name }}\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <p class=\"text-center\"\r\n          *ngIf=\"dashboardList.length == 0 && isloading == true \"\r\n\r\n        >\r\n          no dashboard is exist\r\n        </p>\r\n\r\n        <!--  Loading  -->\r\n        <ng-container *ngIf=\"!isloading\">\r\n          <div class=\"row\">\r\n            <div\r\n              class=\"col-6 col-md mt-3\"\r\n              *ngFor=\"let num of [].constructor(serviceId != 0 ? 2 : 4)\"\r\n            >\r\n              <p-skeleton\r\n                [size]=\"serviceId == 0 ? '15rem' : '10rem'\"\r\n              ></p-skeleton>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { RadioButtonModel } from \"app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { PropertiesService } from \"app/system-setup/dashboard-setup/services/properties.service\";\r\nimport {\r\n  IPropertyModel,\r\n  IPropertyRequest,\r\n} from \"app/system-setup/dashboard-setup/models/properties\";\r\nimport { EDashboardPropertiesType } from \"app/shared/enums/dashboard-properties-type.enum\";\r\n\r\n@Component({\r\n  selector: \"app-properties\",\r\n  templateUrl: \"./properties.component.html\",\r\n  styleUrls: [\"./properties.component.scss\"],\r\n})\r\nexport class PropertiesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"type\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IPropertyModel>;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    public propertiesService: PropertiesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<PropertiesComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      en_Name: [null, [Validators.required]],\r\n      ar_Name: [null],\r\n      property_Type: [null, [Validators.required]],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.propertiesService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IPropertyModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // translate property type\r\n          res.data.map((ele) => (ele.type = this.translate(ele.property_Type)));\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPropertyRequest = {\r\n        id: this.form.value.id,\r\n        ar_Name: this.form.value.ar_Name,\r\n        en_Name: this.form.value.en_Name,\r\n        property_Type: this.form.value.property_Type,\r\n      };\r\n\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IPropertyRequest) {\r\n    this.showLoading();\r\n    this.propertiesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IPropertyModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.firstPage);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IPropertyRequest) {\r\n    this.showLoading();\r\n    this.propertiesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IPropertyModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  propertyToEdit(property: IPropertyModel) {\r\n    this.form.patchValue(property);\r\n  }\r\n\r\n  onDelete(property: IPropertyModel): void {\r\n    let msg = this.msgTranslate(property.ar_Name, property.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(property);\r\n    });\r\n  }\r\n\r\n  delete(property: IPropertyModel) {\r\n    this.showLoading();\r\n    this.propertiesService.Delete(property.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (property.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  propertyTypeRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: EDashboardPropertiesType.number,\r\n      value: EDashboardPropertiesType.number,\r\n    },\r\n    {\r\n      label: EDashboardPropertiesType.text,\r\n      value: EDashboardPropertiesType.text,\r\n    },\r\n  ];\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"properties\"\r\n          editTitle=\"editdProperties\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-lg-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-lg-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-lg-4 col-12 ptop-15\">\r\n                  <app-radio-button\r\n                    [control]=\"formCtrls.property_Type\"\r\n                    [submitted]=\"submitted\"\r\n                    [radioList]=\"propertyTypeRadioList\"\r\n                  ></app-radio-button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [exportService]=\"propertiesService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          [actions]=\"rowFunctions\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n          (editRow)=\"propertyToEdit($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { IDashboardDataModel, IDashboardToDisplay } from \"../models/dashboard\";\r\n\r\nexport function dashboardDisplay(\r\n  data: IDashboardDataModel[]\r\n): IDashboardToDisplay[] {\r\n  return data.map((ele) => {\r\n    return <IDashboardToDisplay>{\r\n      id: ele.dash_Dashboard.id,\r\n      ar_Name: ele.dash_Dashboard.ar_Name,\r\n      en_Name: ele.dash_Dashboard.en_Name,\r\n      link: ele.dash_Dashboard.link,\r\n      dashboard_Order: ele.dashboard_Order,\r\n      home_Order: ele.dash_Dashboard.home_Order,\r\n      isExistInHome: ele.dash_Dashboard.isExistInHome,\r\n      module_Id: ele.uM_Module.id,\r\n      module: msgTranslate(ele.uM_Module.arbName, ele.uM_Module.engName),\r\n      service_Id: ele.uM_Module.uM_Services.map((res) => {\r\n        return res.id;\r\n      }),\r\n      file:ele.dash_Dashboard.comm_Attachment\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IDashboardDataModel, IDashboardModel } from \"../models/dashboard\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DashboardService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: FormData) {\r\n    return this.post<IResponse<IDashboardModel>>(\r\n      \"Dashboard/Dashboard/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: FormData) {\r\n    return this.post<IResponse<IDashboardModel>>(\r\n      \"Dashboard/Dashboard/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IDashboardDataModel[]>>(\r\n      \"Dashboard/Dashboard/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $expand: `${db.um_services},${db.dash_dashboard}.${db.Comm_Attachment}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(params) {\r\n    return this.get<IResponseList<IDashboardDataModel[]>>(\r\n      \"Dashboard/Dashboard/GetAll\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $expand: `${db.um_services},${db.dash_dashboard}.${db.Comm_Attachment}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getById(dashboardId: number) {\r\n    return this.get<IResponseList<IDashboardDataModel[]>>(\r\n      \"Dashboard/Dashboard/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `Dashboard_ID eq ${dashboardId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Dashboard/Dashboard/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IPropertyModel, IPropertyRequest } from \"../models/properties\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PropertiesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IPropertyRequest) {\r\n    return this.post<IResponse<IPropertyModel>>(\r\n      \"Dashboard/Property/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IPropertyRequest) {\r\n    return this.post<IResponse<IPropertyModel>>(\r\n      \"Dashboard/Property/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IPropertyModel[]>>(\r\n      \"Dashboard/Property/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponseList<IPropertyModel[]>>(\r\n      \"Dashboard/Property/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Dashboard/Property/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Params } from \"@angular/router\";\r\nimport { IUserModel, IUserRequest } from \"app/system-setup/general-setup/models/users\";\r\nimport { UsersService } from \"app/system-setup/general-setup/services/users/users.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-add-user\",\r\n  templateUrl: \"./add-user.component.html\",\r\n  styleUrls: [\"./add-user.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddUserComponent extends AppHelpers implements OnInit {\r\n  userId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  userGroupsIds: number[] = [];\r\n  username: string;\r\n\r\n  constructor(\r\n    private userService: UsersService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddUserComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.userId = Number(params.userId) ?? 0;\r\n\r\n      // if (this.CheckNoBusinessOrCompany() && this.userId > 0) {\r\n      // \tthis.getUserById();\r\n      // }\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      Personid: [null, [Validators.required]],\r\n      id: [0, {nonNallable: true}],\r\n      name: [null, [Validators.required]],\r\n      passWord: [null, [Validators.required]],\r\n      is_Active: [false, [Validators.required]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.userId > 0) this.getUserById();\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IUserRequest = {\r\n        core_Person_Instance: {\r\n          id: this.formCtrls.Personid.value,\r\n        },\r\n        uM_Users: {\r\n          id: this.formCtrls.id.value,\r\n          name: this.formCtrls.name.value,\r\n          passWord: this.formCtrls.passWord.value,\r\n          is_Active: this.formCtrls.is_Active.value,\r\n        },\r\n      };\r\n      model.uM_Users.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IUserRequest) {\r\n    this.showLoading();\r\n    this.userService.create(model).subscribe((res: IResponse<IUserModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.addSuccessfullyMsg(res.message.messageTypeName);\r\n        this.userId = res.data.user_ID;\r\n        this.formCtrls.id.setValue(res.data.user_ID);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IUserRequest) {\r\n    this.showLoading();\r\n    this.userService.update(model).subscribe((res: IResponse<IUserModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success)\r\n        this.updateSuccessfullyMsg(res.message.messageTypeName);\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  getUserById() {\r\n    this.userService\r\n      .getUserById(this.userId)\r\n      .subscribe((res: IResponseList<IUserModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          var user = res.data[0];\r\n          this.form.patchValue(user.uM_Users);\r\n          this.formCtrls.Personid.setValue(user.core_Person_Instance.id);\r\n          this.username = user.uM_Users.name;\r\n          //pushing ID of user`s group\r\n          user.uM_Users.uM_Users_Groups.map((e) => {\r\n            this.userGroupsIds.push(e.groupID);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, userId: this.userId});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<mat-card class=\"form-card\">\r\n  <mat-card-title>\r\n    <page-title title=\"users\"> {{ username }}</page-title>\r\n\r\n    <!-- close btn -->\r\n\r\n    <close-dialog-btn\r\n      *ngIf=\"data.isDialog\"\r\n      (click)=\"onCloseDialog()\"\r\n    ></close-dialog-btn>\r\n\r\n    <app-add-new-btn\r\n      *ngIf=\"userId > 0\"\r\n      url=\"/general-setup/{{ moduleId }}/users/add\"\r\n      [params]=\"pageParams\"\r\n      label=\"addUser\"\r\n    >\r\n    </app-add-new-btn>\r\n    <!-- back btn -->\r\n\r\n    <app-back-btn\r\n      *ngIf=\"!data.isDialog\"\r\n      url=\"/general-setup/{{ moduleId }}/users/index\"\r\n      [params]=\"pageParams\"\r\n    ></app-back-btn>\r\n  </mat-card-title>\r\n  <mat-tab-group [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n    <mat-tab label=\"{{ 'users' | translate | titlecase }}\">\r\n      <mat-card-subtitle>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"addUser\"\r\n          editTitle=\"editUser\">\r\n        </page-title>\r\n      </mat-card-subtitle>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\" autocomplete=\"off\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"username\"\r\n                autocomplete=\"new-password\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.passWord\"\r\n                [submitted]=\"submitted\"\r\n                type=\"password\"\r\n                label=\"PassWord\"\r\n                autocomplete=\"new-password\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-employee-dropdown\r\n                [control]=\"formCtrls.Personid\"\r\n                [multi]=\"false\"\r\n                [submitted]=\"submitted\"\r\n                [filter]=\"true\"\r\n                appendTo=\"body\"\r\n              >\r\n              </app-employee-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4 col-12 p-2\">\r\n              <app-check-box [control]=\"formCtrls.is_Active\" label=\"Is_Active\">\r\n              </app-check-box>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n    </mat-tab>\r\n    <mat-tab\r\n      label=\"{{ 'userCompanies' | translate | titlecase }}\"\r\n      *ngIf=\"!data.isDialog\"\r\n    >\r\n      <app-user-companies [userId]=\"userId\"></app-user-companies>\r\n    </mat-tab>\r\n    <mat-tab\r\n      label=\"{{ 'userGroup' | translate | titlecase }}\"\r\n      *ngIf=\"!data.isDialog\"\r\n    >\r\n      <app-user-group\r\n        [userId]=\"userId\"\r\n        [userGroupsIds]=\"userGroupsIds\"\r\n      ></app-user-group>\r\n    </mat-tab>\r\n    <mat-tab\r\n      label=\"{{ 'userPolicyGroup' | translate | titlecase }}\"\r\n      *ngIf=\"!data.isDialog\"\r\n    >\r\n      <app-user-policy-groups [userId]=\"userId\"></app-user-policy-groups>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</mat-card>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { companyToMap } from \"app/system-setup/general-setup/mapper/users\";\r\nimport {\r\n  IDeleteCompaniesRequest,\r\n  IUserCompaniesModel,\r\n  IUserCompaniesRequest,\r\n  IUserCompanyToDisplay,\r\n} from \"app/system-setup/general-setup/models/users\";\r\n\r\nimport { UserCompanyService } from \"app/system-setup/general-setup/services/users/user-company.service\";\r\nimport { IBusinessEntityModel } from \"app/org-management/model/business-entity\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-user-companies\",\r\n  templateUrl: \"./user-companies.component.html\",\r\n  styleUrls: [\"./user-companies.component.scss\"],\r\n})\r\nexport class UserCompaniesComponent extends AppHelpers implements OnInit {\r\n  @Input() userId: number;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  dataSource: MatTableDataSource<IUserCompanyToDisplay>;\r\n  mandatoryColomns: string[] = [\"Business_Name\", \"Company_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  businessList: IBusinessEntityModel[] = [];\r\n\r\n  constructor(private userCompanyService: UserCompanyService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNallable: true}],\r\n      user_ID: [this.userId],\r\n      company_ID: [null, [Validators.required]],\r\n      business_Entity_ID: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.userId > 0) this.getUserCompaniesList();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getUserCompaniesList() {\r\n    this.userCompanyService\r\n      .getUserCompanyList(this.userId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IUserCompaniesModel[]>) => {\r\n        if (res.data) {\r\n          let result: IUserCompanyToDisplay[] = companyToMap(res.data);\r\n          this.dataSource = new MatTableDataSource(result);\r\n          this.isLoaded = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IUserCompaniesRequest = {\r\n        id: this.formCtrls.id.value,\r\n        User_ID: this.userId,\r\n        Company_ID: this.formCtrls.company_ID.value,\r\n        Business_Entity_ID: this.formCtrls.business_Entity_ID.value,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IUserCompaniesRequest) {\r\n    this.showLoading();\r\n    this.userCompanyService\r\n      .createUserCompany(model)\r\n      .subscribe((res: IResponse<IUserCompaniesModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.getUserCompaniesList();\r\n          this.userId = res.data.user_ID;\r\n          this.addSuccessfullyMsg(res.message.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IUserCompaniesRequest) {\r\n    this.showLoading();\r\n    delete model.id;\r\n    this.userCompanyService\r\n      .updateUserCompany(model)\r\n      .subscribe((res: IResponse<IUserCompaniesModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.getUserCompaniesList();\r\n          this.updateSuccessfullyMsg(res.message.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  editToUserCompanies(userCompanies: IUserCompaniesModel) {\r\n    this.form.patchValue(userCompanies);\r\n    this.formCtrls.id.setValue(this.userId);\r\n  }\r\n\r\n  onDelete(company: IUserCompanyToDisplay): void {\r\n    let msg = this.msgTranslate(company.Company_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(company);\r\n    });\r\n  }\r\n\r\n  delete(company: IUserCompanyToDisplay) {\r\n    let body: IDeleteCompaniesRequest = {\r\n      User_ID: company.user_ID,\r\n      Company_ID: company.company_ID,\r\n      Business_Entity_ID: company.business_Entity_ID,\r\n    };\r\n    this.showLoading();\r\n    this.userCompanyService.DeleteUserCompany(body).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.getUserCompaniesList();\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n\t<div class=\"col-12\">\r\n\t\t<mat-card-content class=\"container-fluid\">\r\n\t\t\t<form [formGroup]=\"form\">\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<ng-container>\r\n\t\t\t\t\t\t<div class=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t\t<app-Business-dropdown\r\n\t\t\t\t\t\t\t\t[control]=\"formCtrls.business_Entity_ID\"\r\n\t\t\t\t\t\t\t\t[submitted]=\"submitted\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</app-Business-dropdown>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t\t<company-by-businessId-dropdown\r\n\t\t\t\t\t\t\t\t[control]=\"formCtrls.company_ID\"\r\n\t\t\t\t\t\t\t\t[businessControl]=\"formCtrls.business_Entity_ID\"\r\n\t\t\t\t\t\t\t\t[submitted]=\"submitted\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</company-by-businessId-dropdown>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</mat-card-content>\r\n\r\n\t\t<mat-card-actions align=\"end\">\r\n\t\t\t<submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\" [disabled]=\"!userId\"> </submit-btn>\r\n\t\t\t<reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"> </reset-form-btn>\r\n\t\t</mat-card-actions>\r\n\r\n\t\t<app-material-table\r\n\t\t\t[isLoaded]=\"isLoaded\"\r\n\t\t\t[dataSource]=\"dataSource\"\r\n\t\t\t[mandatoryColomns]=\"mandatoryColomns\"\r\n\t\t\t[optionalColomns]=\"optionalColomns\"\r\n\t\t\t[page]=\"page\"\r\n\t\t\t[showPaginator]=\"false\"\r\n\t\t\t[actions]=\"rowFunctions\"\r\n\t\t\t[showFilter]=\"false\"\r\n\t\t\t(deleteRow)=\"onDelete($event)\"\r\n\t\t\t(editRow)=\"editToUserCompanies($event)\"\r\n\t\t>\r\n\t\t</app-material-table>\r\n\t</div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { IGroupModel } from \"app/system-setup/general-setup/models/groups\";\r\nimport { IUMUsersGroup, IUserGroupsRequest } from \"app/system-setup/general-setup/models/users\";\r\nimport { GroupsService } from \"app/system-setup/general-setup/services/groups.service\";\r\nimport { UserGroupsService } from \"app/system-setup/general-setup/services/users/user-groups.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-user-group\",\r\n  templateUrl: \"./user-group.component.html\",\r\n  styleUrls: [\"./user-group.component.scss\"],\r\n})\r\nexport class UserGroupComponent extends AppHelpers implements OnInit {\r\n  @Input() userId: number;\r\n  @Input() userGroupsIds: number[] = [];\r\n  groupList: IGroupModel[];\r\n  selectedGroupIds: number[] = [];\r\n\r\n  constructor(private groupService: UserGroupsService, private _groupsService: GroupsService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany() && this.userId > 0) this.getAllGroups();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) this.getAllGroups();\r\n  }\r\n\r\n  getAllGroups() {\r\n    this.showLoading();\r\n    this._groupsService.getAll().subscribe((res: IResponseList<IGroupModel[]>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.groupList = res.data;\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.userGroupsIds.length > 0) {\r\n      const model: IUserGroupsRequest[] = this.userGroupsIds.map((groupID) => ({\r\n        UserID: this.userId,\r\n        GroupID: groupID,\r\n      }));\r\n      this.create(model);\r\n    }\r\n  }\r\n\r\n  create(models: IUserGroupsRequest[]) {\r\n    this.showLoading();\r\n    this.groupService.replace(models).subscribe((res: IResponse<IUMUsersGroup>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.addSuccessfullyMsg(res.message.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  selectGroup($event: MatCheckboxChange, group: IUMUsersGroup) {\r\n    if ($event.checked) {\r\n      this.userGroupsIds.push(group.id);\r\n    }\r\n    else {\r\n      let index = this.userGroupsIds.findIndex((id) => id === group.id);\r\n      this.userGroupsIds.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n\t<div class=\"col-12\">\r\n\t\t<mat-card-content class=\"container-fluid\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-md-2 col-12 m-2\" *ngFor=\"let group of groupList\">\r\n\t\t\t\t\t<mat-checkbox\r\n\t\t\t\t\t\t[checked]=\"userGroupsIds?.includes(group.id)\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t(change)=\"selectGroup($event, group)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t{{ msgTranslate(group.arbName, group.engName) }}\r\n\t\t\t\t\t</mat-checkbox>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t<span class=\"text-danger\">\r\n\t\t\t\t<span class=\"text-danger\" *ngIf=\"userGroupsIds.length == 0 && userId > 0\">\r\n\t\t\t\t\t{{ \"mustChoosevalue\" | translate }}\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n\t\t</mat-card-content>\r\n\t\t<mat-card-actions align=\"end\">\r\n\t\t\t<submit-btn [disabled]=\"!userId\" (onClick)=\"submit()\"></submit-btn>\r\n\t\t</mat-card-actions>\r\n\t</div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { policyToMap } from \"app/system-setup/general-setup/mapper/policies\";\r\nimport {\r\n  ICorePolicyGroupUMUser,\r\n  IPolicyGroupToDisplay,\r\n  IUserPoliciesModel,\r\n  IUserPoliciesRequest,\r\n} from \"app/system-setup/general-setup/models/users\";\r\nimport { UserPoliciesService } from \"app/system-setup/general-setup/services/users/user-policies.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-user-policy-groups\",\r\n  templateUrl: \"./user-policy-groups.component.html\",\r\n  styleUrls: [\"./user-policy-groups.component.scss\"],\r\n})\r\nexport class UserPolicyGroupsComponent extends AppHelpers implements OnInit {\r\n  @Input() userId: number;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  dataSource: MatTableDataSource<IPolicyGroupToDisplay>;\r\n  mandatoryColomns: string[] = [\"Business_Name\", \"Company_Name\", \"PolicyGroup_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(private userPoliciesService: UserPoliciesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNallable: true}],\r\n      user_ID: [this.userId],\r\n      policyGroupId: [0, [Validators.required]],\r\n      company_ID: [0],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.userId > 0) this.getUserPolicyList();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getUserPolicyList() {\r\n    this.isLoaded = false;\r\n    this.userPoliciesService\r\n      .getUserPolicies(this.userId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IUserPoliciesModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          let result: IPolicyGroupToDisplay[] = policyToMap(res.data);\r\n          this.dataSource = new MatTableDataSource(result);\r\n          this.isLoaded = true;\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model = {} as IUserPoliciesRequest;\r\n      const policyGroup = {} as ICorePolicyGroupUMUser;\r\n      policyGroup.id = this.formCtrls.id.value;\r\n      policyGroup.user_ID = this.userId;\r\n      policyGroup.policyGroupId = this.formCtrls.policyGroupId.value;\r\n      model.I_Core_PolicyGroup_UM_User = policyGroup;\r\n\r\n      if (model.I_Core_PolicyGroup_UM_User.id == 0) {\r\n        this.create(model);\r\n      }\r\n      else {\r\n        this.update(model);\r\n      }\r\n    }\r\n  }\r\n\r\n  create(model: IUserPoliciesRequest) {\r\n    this.showLoading();\r\n    this.userPoliciesService\r\n      .createUserPolicy(model)\r\n      .subscribe((res: IResponse<IUserPoliciesModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getUserPolicyList();\r\n          this.addSuccessfullyMsg(res.message.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IUserPoliciesRequest) {\r\n    this.showLoading();\r\n    this.userPoliciesService\r\n      .updateUserPolicy(model)\r\n      .subscribe((res: IResponse<IUserPoliciesModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getUserPolicyList();\r\n          this.updateSuccessfullyMsg(res.message.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  editToPolicyGroup(policyGroup: IUserPoliciesModel) {\r\n    this.form.patchValue(policyGroup);\r\n  }\r\n\r\n  onDelete(PolicyGroup: IPolicyGroupToDisplay): void {\r\n    let msg = this.msgTranslate(PolicyGroup.PolicyGroup_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(PolicyGroup);\r\n    });\r\n  }\r\n\r\n  delete(PolicyGroup: IPolicyGroupToDisplay) {\r\n    this.showLoading();\r\n    this.userPoliciesService.DeleteUserPolicy(PolicyGroup.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.getUserPolicyList();\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, user_ID: this.userId});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n\t<div class=\"col-12\">\r\n\t\t<mat-card-content class=\"container-fluid\">\r\n\t\t\t<form [formGroup]=\"form\">\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t<company-by-businessId-dropdown [control]=\"formCtrls.company_ID\">\r\n\t\t\t\t\t\t</company-by-businessId-dropdown>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t<policy-groups-by-company-dropdown\r\n\t\t\t\t\t\t\t[control]=\"formCtrls.policyGroupId\"\r\n\t\t\t\t\t\t\t[submitted]=\"true\"\r\n\t\t\t\t\t\t\t[filter]=\"false\"\r\n\t\t\t\t\t\t\t[companyCtrl]=\"formCtrls.company_ID\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</policy-groups-by-company-dropdown>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</mat-card-content>\r\n\r\n\t\t<mat-card-actions align=\"end\">\r\n\t\t\t<submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"> </submit-btn>\r\n\t\t\t<reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"> </reset-form-btn>\r\n\t\t</mat-card-actions>\r\n\r\n\t\t<app-material-table\r\n\t\t\t[isLoaded]=\"isLoaded\"\r\n\t\t\t[dataSource]=\"dataSource\"\r\n\t\t\t[mandatoryColomns]=\"mandatoryColomns\"\r\n\t\t\t[optionalColomns]=\"optionalColomns\"\r\n\t\t\t[page]=\"page\"\r\n\t\t\t[showPaginator]=\"false\"\r\n\t\t\t[actions]=\"rowFunctions\"\r\n\t\t\t(deleteRow)=\"onDelete($event)\"\r\n\t\t\t(editRow)=\"editToPolicyGroup($event)\"\r\n\t\t>\r\n\t\t</app-material-table>\r\n\t</div>\r\n</div>\r\n","import { IPolicyGroupToDisplay, IUserPoliciesModel } from \"../models/users\";\r\nimport { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\n\r\nexport function policyToMap(\r\n  policies: IUserPoliciesModel[]\r\n): IPolicyGroupToDisplay[] {\r\n  return policies.map((policy) => {\r\n    return <IPolicyGroupToDisplay>{\r\n      PolicyGroup_Name: msgTranslate(\r\n        policy.i_Core_PolicyGroup_UM_User?.core_PolicyGroup?.ar_Name,\r\n        policy.i_Core_PolicyGroup_UM_User?.core_PolicyGroup?.en_Name\r\n      ),\r\n      Business_Name: msgTranslate(\r\n        policy.business_Entity?.ar_Name,\r\n        policy.business_Entity?.en_Name\r\n      ),\r\n      Company_Name: msgTranslate(\r\n        policy.company?.ar_Name,\r\n        policy.company?.en_Name\r\n      ),\r\n\r\n      company_ID: policy.company?.id,\r\n      business_Entity_ID: policy.business_Entity?.id,\r\n      policyGroupId: policy.i_Core_PolicyGroup_UM_User?.policyGroupId,\r\n      id: policy.i_Core_PolicyGroup_UM_User?.id,\r\n    };\r\n  });\r\n}\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { IUMUsers, IUserCompaniesModel, IUserCompanyToDisplay, IUserModel } from \"app/system-setup/general-setup/models/users\";\r\n\r\nexport function companyToMap(\r\n  companies: IUserCompaniesModel[]\r\n): IUserCompanyToDisplay[] {\r\n  return companies.map((company) => {\r\n    return <IUserCompanyToDisplay>{\r\n      Business_Name: msgTranslate(\r\n        company.core_Business_Entity?.ar_Name,\r\n        company.core_Business_Entity?.en_Name\r\n      ),\r\n      Company_Name: msgTranslate(\r\n        company.company?.ar_Name,\r\n        company.company?.en_Name\r\n      ),\r\n      user_ID: company.user_ID,\r\n      company_ID: company.company_ID,\r\n      business_Entity_ID: company.business_Entity_ID,\r\n      id: company.id,\r\n    };\r\n  });\r\n}\r\n\r\nexport function userToMap(users: IUserModel[]): IUMUsers[] {\r\n  return users.map((user) => {\r\n    return <IUMUsers>{\r\n      ...user.uM_Users,\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IAttachmentTypesModel,\r\n  IAttachmentTypesRequest,\r\n} from \"../models/attachment-types\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AttachmentTypesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(body: IAttachmentTypesRequest) {\r\n    return this.post<IResponse<IAttachmentTypesModel>>(\r\n      \"GeneralSetup/AttachmentType/Create\",\r\n      body\r\n    );\r\n  }\r\n\r\n  update(data: IAttachmentTypesRequest) {\r\n    return this.post<IResponse<IAttachmentTypesModel>>(\r\n      \"GeneralSetup/AttachmentType/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IAttachmentTypesModel[]>>(\r\n      \"GeneralSetup/AttachmentType/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IAttachmentTypesModel[]>>(\r\n      \"GeneralSetup/AttachmentType/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"GeneralSetup/AttachmentType/Delete\", {\r\n      params: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IGroupModel, IGroupRequest } from \"../models/groups\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GroupsService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IGroupRequest) {\r\n    return this.post<IResponse<IGroupModel>>(\r\n      \"GeneralSetup/UserGroup/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IGroupRequest) {\r\n    return this.post<IResponse<IGroupModel>>(\r\n      \"GeneralSetup/UserGroup/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IGroupModel[]>>(\r\n      \"GeneralSetup/UserGroup/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getGroupById(id: number) {\r\n    return this.get<IResponse<IGroupModel[]>>(\"GeneralSetup/UserGroup/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${id}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IGroupModel[]>>(\"GeneralSetup/UserGroup/GetAll\");\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"GeneralSetup/UserGroup/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IReportsModel, IsoCodeRequest } from \"../models/iso-code\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class IsoCodeService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tEdit(data: IsoCodeRequest) {\r\n\t\treturn this.post<IResponse<IReportsModel>>(\"Report/Report/Edit\", data);\r\n\t}\r\n\r\n\tGetAllReports() {\r\n\t\treturn this.get<IResponse<IReportsModel[]>>(\"Report/Report/GetAll\");\r\n\t}\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {AppClientService} from 'app/shared/services/app-client.service';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport {IPriorityModel} from 'app/system-setup/general-setup/models/priority';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PriorityService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IPriorityModel[]>>('Priority/GetAll');\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IServiceModel } from \"../models/service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ServiceService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  GetAll(params) {\r\n    return this.get<IResponse<IServiceModel[]>>(\"UmServices/GetAll\", {\r\n      params: params,\r\n    }).pipe(\r\n      map((res: IResponse<IServiceModel[]>) => {\r\n        res.data.map((item: IServiceModel) => {\r\n          item.ar_Name = item.arbName;\r\n          item.en_Name = item.engName;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  GetList(params) {\r\n    return this.get<IResponseList<IServiceModel[]>>(\"UmServices/GetList\", {\r\n      params: params,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {IDeleteCompaniesRequest, IUserCompaniesModel, IUserCompaniesRequest } from 'app/system-setup/general-setup/models/users';\r\nimport { IResponse } from 'app/shared/interfaces/responces';\r\nimport { AppClientService } from 'app/shared/services/app-client.service';\r\nimport { db } from 'app/shared/resources/database-tabels';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserCompanyService  extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n  //----------------- User Companies Services -------------------\r\n\r\n\tcreateUserCompany(data: IUserCompaniesRequest) {\r\n\t\treturn this.post<IResponse<IUserCompaniesModel>>(\"GeneralSetup/User/SaveUser_Company\", data\r\n\r\n\t\t);\r\n\t}\r\n\r\n\tupdateUserCompany(data: IUserCompaniesRequest) {\r\n\t\treturn this.post<IResponse<IUserCompaniesModel>>(\"GeneralSetup/User/EditUser_Company\", data\r\n\r\n\t\t);\r\n\t}\r\n\r\n\tgetUserCompanyList( id: number) {\r\n\t\treturn this.get<IResponse<IUserCompaniesModel[]>>(\"GeneralSetup/User/GetUserCompanies\", {\r\n\t\t\tparams: {\r\n\t\t\t\t\t$expand: `${db.core_Business_Entity},${db.company}`,\r\n\t\t\t\t$filter: \"User_ID eq \" + id,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tDeleteUserCompany(body: IDeleteCompaniesRequest) {\r\n\t\treturn this.delete<IResponse>(\"GeneralSetup/User/DeleteUser_Company\", { body });\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { IUMUsersGroup, IUserGroupsRequest } from \"app/system-setup/general-setup/models/users\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class UserGroupsService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: IUserGroupsRequest[]) {\r\n\t\treturn this.post<IResponse<IUMUsersGroup>>(\r\n\t\t\t\"GeneralSetup/User/CreateUser_SecurityProfile\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\treplace(data: IUserGroupsRequest[]) {\r\n\t\treturn this.post<IResponse<IUMUsersGroup>>(\r\n\t\t\t\"GeneralSetup/User/ReplaceUser_SecurityProfile\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tDelete(params) {\r\n\t\treturn this.delete<IResponse>(\"GeneralSetup/User/DeleteUser_SecurityProfile\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {IUserPoliciesModel, IUserPoliciesRequest} from \"app/system-setup/general-setup/models/users\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {db} from \"app/shared/resources/database-tabels\";\r\nimport {AppClientService} from \"app/shared/services/app-client.service\";\r\nimport {IPolicyGroupModel} from \"app/org-management/model/policy-group\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserPoliciesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createUserPolicy(data: IUserPoliciesRequest) {\r\n    return this.post<IResponse<IUserPoliciesModel>>(\"GeneralSetup/User/SaveUser_Policies\", data);\r\n  }\r\n\r\n  updateUserPolicy(data: IUserPoliciesRequest) {\r\n    return this.post<IResponse<IUserPoliciesModel>>(\"GeneralSetup/User/EditUser_Policies\", data);\r\n  }\r\n\r\n  getUserPolicies(userId: number) {\r\n    return this.get<IResponse<IUserPoliciesModel[]>>(\"GeneralSetup/User/GetUserPolicies\", {\r\n      params: {\r\n        $expand: `${db.uM_Users}`,\r\n        $filter: `User_ID eq ${userId}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  getUserPoliciesList(params, userId: number) {\r\n    return this.get<IResponse<IPolicyGroupModel[]>>(\"GeneralSetup/User/GetUserPolicies\", {\r\n      params: {\r\n        ...params,\r\n        $expand: `${db.core_PolicyGroup}`,\r\n        $filter: `User_ID eq ${userId}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  DeleteUserPolicy(id: number) {\r\n    return this.delete<IResponse>(\"GeneralSetup/User/DeleteUser_Policies\", {\r\n      params: {Id: id},\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport {\r\n  IUMUsers,\r\n  IUserModel,\r\n  IUserRequest\r\n} from \"../../models/users\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class UsersService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tcreate(data: IUserRequest) {\r\n\t\treturn this.post<IResponse<IUserModel>>(\"GeneralSetup/User/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: IUserRequest) {\r\n\t\treturn this.post<IResponse<IUserModel>>(\"GeneralSetup/User/Edit\", data);\r\n\t}\r\n\r\n\tgetUserById(id: number) {\r\n\t\treturn this.get<IResponse<IUserModel[]>>(\"GeneralSetup/User/GetList\", {\r\n\t\t\tparams: {\r\n\t\t\t\tPageNumber: 1,\r\n\t\t\t\tpageSize: 1,\r\n\t\t\t\t$filter: `user_ID eq ${id}`,\r\n\t\t\t\t$expand: `${db.UM_Users}/${db.uM_Users_Groups},${db.Core_Person_Instance}`,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tgetList(pageParams: IPageParams) {\r\n\t\treturn this.get<IResponseList<IUserModel[]>>(\"GeneralSetup/User/GetList\", {\r\n\t\t\tparams: {\r\n\t\t\t\t...pageParams,\r\n\t\t\t\t$expand: `${db.UM_Users}/${db.uM_Users_Groups},${db.Core_Person_Instance}`,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IUMUsers[]>>(\"GeneralSetup/User/GetAll\").pipe(\r\n\t\t\tmap((res) => {\r\n\t\t\t\tres.data.map((item: IUMUsers) => {\r\n\t\t\t\t\titem.ar_Name = item.name;\r\n\t\t\t\t\titem.en_Name = item.name;\r\n\t\t\t\t});\r\n\t\t\t\treturn res;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"GeneralSetup/User/Delete\", {\r\n\t\t\tparams: { id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n\t//----------------- User Groups has an individual service -------------------\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { IBankModel, IBankRequest } from \"app/system-setup/hr-setup/models/bank\";\r\nimport { BankService } from \"app/system-setup/hr-setup/services/bank/bank.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-add-bank\",\r\n  templateUrl: \"./add-bank.component.html\",\r\n  styleUrls: [\"./add-bank.component.scss\"],\r\n})\r\nexport class AddBankComponent extends AppHelpers implements OnInit {\r\n  bankId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private bankService: BankService,\r\n              @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n              public dialogRef: MatDialogRef<AddBankComponent>) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      this.bankId = params.bankid ?? 0;\r\n      // if (this.CheckNoBusinessOrCompany() && this.bankId > 0) this.getBankById();\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.bankId > 0) {\r\n      this.getBankById();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IBankRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n    // this.router.navigate([`hr-setup/${this.moduleId}/bank-index`]);\r\n  }\r\n\r\n  create(model: IBankRequest) {\r\n    this.showLoading();\r\n    this.bankService.create(model).subscribe((res: IResponse<IBankModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.bankId = res.data.id;\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IBankRequest) {\r\n    this.showLoading();\r\n    this.bankService.update(model).subscribe((res: IResponse<IBankModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  getBankById() {\r\n    this.bankService.getById(this.bankId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IBankModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.formCtrls.id.setValue(res.data[0].id);\r\n          this.formCtrls.ar_Name.setValue(res.data[0].ar_Name);\r\n          this.formCtrls.en_Name.setValue(res.data[0].en_Name);\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12 w-100\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"bankInfo\"></page-title>\r\n\r\n        <span *ngIf=\"!data.isDialog\">\r\n          <app-add-new-btn *ngIf=\"bankId > 0\"\r\n                           url=\"/hr-setup/{{ moduleId }}/bank/add\"\r\n                           [params]=\"pageParams\"\r\n                           label=\"addbank\">\r\n          </app-add-new-btn>\r\n          <app-back-btn url=\"/hr-setup/{{ moduleId }}/bank\"\r\n                        [params]=\"pageParams\">\r\n          </app-back-btn>\r\n        </span>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn *ngIf=\"data.isDialog\"\r\n                          (click)=\"onCloseDialog()\">\r\n\r\n        </close-dialog-btn>\r\n      </mat-card-title>\r\n      <!--      <mat-tab-group class=\"col-12 w-100\"-->\r\n      <!--                     [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">-->\r\n      <!--        <mat-tab class=\"w-100\" label=\"{{ 'bank' | translate | titlecase }}\">-->\r\n      <mat-card-content class=\"container-fluid\">\r\n        <!--            <mat-card-subtitle>-->\r\n        <!--              <span *ngIf=\"formCtrls.id.value == 0\">-->\r\n        <!--                {{ \"addbank\" | translate | titlecase }}-->\r\n        <!--              </span>-->\r\n        <!--              <span *ngIf=\"formCtrls.id.value > 0\">-->\r\n        <!--                {{ \"editBank\" | translate | titlecase }}-->\r\n        <!--              </span>-->\r\n        <!--            </mat-card-subtitle>-->\r\n        <div class=\"row\">\r\n          <div class=\"col-12 w-100\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\">\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <div class=\"m-2\">\r\n        <mat-card-actions align=\"end\">\r\n          <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n          <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n        </mat-card-actions>\r\n      </div>\r\n      <!--        </mat-tab>-->\r\n      <!--        <mat-tab-->\r\n      <!--          *ngIf=\"!data.isDialog\"-->\r\n      <!--          class=\"w-100\"-->\r\n      <!--          label=\"{{ 'branches' | translate | titlecase }}\">-->\r\n      <!--      <app-bank-branch [bankId]=\"bankId\"></app-bank-branch>-->\r\n      <!--        </mat-tab>-->\r\n      <!--      </mat-tab-group>-->\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-12\">\r\n    <app-bank-branch [bankId]=\"bankId\"></app-bank-branch>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IBankBranchModel, IBankBranchRequest, IBankModel } from \"app/system-setup/hr-setup/models/bank\";\r\nimport { BankBranchService } from \"app/system-setup/hr-setup/services/bank/bank-branch.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-bank-branch\",\r\n  templateUrl: \"./bank-branch.component.html\",\r\n  styleUrls: [\"./bank-branch.component.scss\"],\r\n})\r\nexport class BankBranchComponent extends AppHelpers implements OnInit {\r\n  @Input() bankId: number;\r\n  dataSource: MatTableDataSource<IBankBranchModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"swiftCode\",\r\n    \"bankCode\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(private bankBranchService: BankBranchService) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(change: SimpleChanges): void {\r\n    if (change.bankId && this.form) this.formCtrls.bankId.setValue(this.bankId);\r\n    if (this.checkNoBusinessOrCompany() && this.bankId > 0) {\r\n      this.getBankBranches(this.firstPage);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.businessId == 0 && this.companyId == 0) {\r\n    //   console.log(\"ngOnInit\");\r\n    //   this.getBankBranches(this.currentPage);\r\n    // }\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      bankId: [this.bankId, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      swiftCode: [null],\r\n      bankCode: [null],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany() && this.bankId > 0) this.getBankBranches(this.firstPage);\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getBankBranches(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.bankBranchService\r\n      .getBankBranches(params, this.bankId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IBankModel[]>) => {\r\n        //  console.log(\"getBranches\", res);\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data[0].comm_Branch);\r\n          this.isLoaded = true;\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IBankBranchRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n        BankCode: this.form.value.bankCode,\r\n        SwiftCode: this.form.value.swiftCode,\r\n        bankID: this.form.value.bankId,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IBankBranchRequest) {\r\n    this.showLoading();\r\n    this.bankBranchService.create(model).subscribe((res: IResponse<IBankBranchModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getBankBranches(this.lastPage, this.bankId);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IBankBranchRequest) {\r\n    this.showLoading();\r\n    this.bankBranchService.update(model).subscribe((res: IResponse<IBankBranchModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getBankBranches(this.currentPage, this.bankId); // current page after update\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  branchToEdit(branch: IBankBranchModel) {\r\n    this.form.patchValue(branch);\r\n    console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(bankBranch: IBankBranchModel): void {\r\n    let msg = this.msgTranslate(bankBranch.ar_Name, bankBranch.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(bankBranch);\r\n    });\r\n  }\r\n\r\n  delete(bank: IBankBranchModel) {\r\n    this.showLoading();\r\n    this.bankBranchService.Delete(bank.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getBankBranches(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getBankBranches(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (bank.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, bankId: this.bankId});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<mat-card class=\"form-card mt-3\">\r\n  <mat-card-title class=\"mb-3\">\r\n    <page-title\r\n      [id]=\"formCtrls.id.value\" title=\"bankBranches\">\r\n    </page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3 col-12\">\r\n              <app-input [control]=\"formCtrls.en_Name\" [submitted]=\"submitted\" label=\"en_Name\">\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <app-input [control]=\"formCtrls.ar_Name\" [submitted]=\"submitted\" label=\"ar_Name\">\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-3 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.swiftCode\"\r\n                [submitted]=\"submitted\"\r\n                label=\"swiftCode\">\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-3 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.bankCode\"\r\n                [submitted]=\"submitted\"\r\n                label=\"bankCode\">\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n  <div class=\"m-2\">\r\n    <mat-card-actions align=\"end\">\r\n      <submit-btn [id]=\"formCtrls.id.value\" [disabled]=\"!bankId\" (onClick)=\"submit()\">\r\n      </submit-btn>\r\n      <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n    </mat-card-actions>\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <app-material-table\r\n    [isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [page]=\"page\"\r\n    [actions]=\"rowFunctions\"\r\n    (onChangePage)=\"getBankBranches($event.pageIndex + 1, $event.pageSize)\"\r\n    (editRow)=\"branchToEdit($event)\"\r\n    (deleteRow)=\"onDelete($event)\">\r\n  </app-material-table>\r\n</mat-card>\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IContactCategoryDisplay,\r\n  IContactCategoryRequest,\r\n  IContactCategoryResponse,\r\n} from \"app/system-setup/hr-setup/models/contact-category\";\r\nimport { ContactCategoryService } from \"app/system-setup/hr-setup/services/contact-category.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { contactCategoryToMap } from \"app/system-setup/hr-setup/mapper/contac-category\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-contact-category\",\r\n  templateUrl: \"./contact-category.component.html\",\r\n  styleUrls: [\"./contact-category.component.scss\"],\r\n})\r\nexport class ContactCategoryComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"icon\",\r\n    \"contactType\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IContactCategoryDisplay>;\r\n\r\n  constructor(\r\n    public contactCategoryService: ContactCategoryService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<ContactCategoryComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      Comm_Contact_Type_ID: [null, Validators.required],\r\n      icon: [null],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n      this.formCtrls.Comm_Contact_Type_ID.setValue(this.data.id);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.contactCategoryService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IContactCategoryResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            contactCategoryToMap(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IContactCategoryRequest = {\r\n        Comm_Contact_Category: {\r\n          ID: this.form.value.id,\r\n          Ar_Name: this.form.value.ar_Name,\r\n          En_Name: this.form.value.en_Name,\r\n          Icon: this.form.value.icon,\r\n        },\r\n        Comm_Contact_Type_ID: this.form.value.Comm_Contact_Type_ID,\r\n      };\r\n\r\n      model.Comm_Contact_Category.ID == 0\r\n        ? this.create(model)\r\n        : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IContactCategoryRequest) {\r\n    this.showLoading();\r\n    this.contactCategoryService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IContactCategoryResponse>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.firstPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IContactCategoryRequest) {\r\n    this.showLoading();\r\n    this.contactCategoryService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IContactCategoryResponse>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  contactCategoryToEdit(category: IContactCategoryDisplay) {\r\n    this.form.patchValue(category);\r\n    //this.formCtrls.Comm_Contact_Type_ID.setValue(contractType.comm_Contact_Type_Category[0].id)\r\n  }\r\n\r\n  onDelete(category: IContactCategoryDisplay): void {\r\n    let msg = this.msgTranslate(category.ar_Name, category.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(category);\r\n    });\r\n  }\r\n\r\n  delete(category: IContactCategoryDisplay) {\r\n    this.showLoading();\r\n    this.contactCategoryService\r\n      .Delete(category.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (category.id == this.formCtrls.id.value) this.clearForm();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  iconsList = [\r\n    {id: \"fab fa-linkedin info\", name: \"linkedin\"},\r\n    {id: \"fab fa-github black\", name: \"github\"},\r\n    {id: \"fab fa-facebook-square info\", name: \"facebook\"},\r\n    {id: \"fab fa-twitter-square info\", name: \"twitter\"},\r\n  ];\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title [id]=\"formCtrls.id.value\"\r\n                    addTitle=\"contactCategoryType\"\r\n                    editTitle=\"editContactCategoryType\">\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn *ngIf=\"data.isDialog\"\r\n                          (click)=\"onCloseDialog()\">\r\n        </close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input [control]=\"formCtrls.en_Name\"\r\n                             [submitted]=\"submitted\"\r\n                             label=\"en_Name\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input [control]=\"formCtrls.ar_Name\"\r\n                             [submitted]=\"submitted\"\r\n                             label=\"ar_Name\">\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-contact-type-dropdown [control]=\"formCtrls.Comm_Contact_Type_ID\"\r\n                                             [submitted]=\"submitted\"\r\n                                             [filter]=\"true\">\r\n                  </app-contact-type-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <!--                  <app-input [control]=\"formCtrls.icon\"-->\r\n                  <!--                             [submitted]=\"submitted\"-->\r\n                  <!--                             label=\"icon\">-->\r\n                  <!--                  </app-input>-->\r\n\r\n                  <p-dropdown [formControl]=\"formCtrls.icon\"\r\n                              [options]=\"iconsList\"\r\n                              [showClear]=\"true\"\r\n                              [placeholder]=\"'icon' | translate \"\r\n                              optionLabel=\"name\"\r\n                              [autoDisplayFirst]=\"false\"\r\n                              optionValue=\"id\">\r\n                    <ng-template let-item pTemplate=\"item\">\r\n                      <i [class]=\"item.id\" class=\"font-size-25\"></i>\r\n                      <span class=\"mx-2\">{{ item.name }}</span>\r\n                    </ng-template>\r\n\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table [isLoaded]=\"isLoaded\"\r\n                            [dataSource]=\"dataSource\"\r\n                            [mandatoryColomns]=\"mandatoryColomns\"\r\n                            [optionalColomns]=\"optionalColomns\"\r\n                            [actions]=\"rowFunctions\"\r\n                            [page]=\"page\"\r\n                            [exportService]=\"contactCategoryService\"\r\n                            (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                            (editRow)=\"contactCategoryToEdit($event)\"\r\n                            (deleteRow)=\"onDelete($event)\">\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IContactTypeModel,\r\n  IContactTypeRequest,\r\n} from \"app/system-setup/hr-setup/models/contact-type\";\r\nimport { ContactTypeService } from \"app/system-setup/hr-setup/services/contact-type.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-contact-type\",\r\n  templateUrl: \"./contact-type.component.html\",\r\n  styleUrls: [\"./contact-type.component.scss\"],\r\n})\r\nexport class ContactTypeComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [\"regularExpression\"];\r\n  dataSource: MatTableDataSource<IContactTypeModel>;\r\n\r\n  constructor(\r\n    public contactService: ContactTypeService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<ContactTypeComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      regularExpression: [null],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.contactService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IContactTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IContactTypeRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n        RegularExpression: this.form.value.regularExpression,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IContactTypeRequest) {\r\n    this.showLoading();\r\n    this.contactService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IContactTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.firstPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IContactTypeRequest) {\r\n    this.showLoading();\r\n    this.contactService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IContactTypeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  contractTypeToEdit(contractType: IContactTypeModel) {\r\n    this.form.patchValue(contractType);\r\n  }\r\n\r\n  onDelete(contractType: IContactTypeModel): void {\r\n    let msg = this.msgTranslate(contractType.ar_Name, contractType.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(contractType);\r\n    });\r\n  }\r\n\r\n  delete(contractType: IContactTypeModel) {\r\n    this.showLoading();\r\n    this.contactService.Delete(contractType.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (contractType.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"contactType\"\r\n          editTitle=\"editContactType\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.regularExpression\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"regularExpression\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [actions]=\"rowFunctions\"\r\n          [page]=\"page\"\r\n          [exportService]=\"contactService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"contractTypeToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IContractTypeModel,\r\n  IContractTypeRequest,\r\n} from \"app/system-setup/hr-setup/models/contract-type\";\r\nimport { ContractTypeService } from \"app/system-setup/hr-setup/services/contract-type.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-contract-type\",\r\n  templateUrl: \"./contract-type.component.html\",\r\n  styleUrls: [\"./contract-type.component.scss\"],\r\n})\r\nexport class ContractTypeComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IContractTypeModel>;\r\n\r\n  constructor(public contractTypeService: ContractTypeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.contractTypeService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IContractTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IContractTypeRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IContractTypeRequest) {\r\n    this.showLoading();\r\n    this.contractTypeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IContractTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.firstPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IContractTypeRequest) {\r\n    this.showLoading();\r\n    this.contractTypeService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IContractTypeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  contactTypeToEdit(contractType: IContractTypeModel) {\r\n    this.form.patchValue(contractType);\r\n  }\r\n\r\n  onDelete(contractType: IContractTypeModel): void {\r\n    let msg = this.msgTranslate(contractType.ar_Name, contractType.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(contractType);\r\n    });\r\n  }\r\n\r\n  delete(contractType: IContractTypeModel) {\r\n    this.showLoading();\r\n    this.contractTypeService\r\n      .Delete(contractType.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (contractType.id == this.formCtrls.id.value) this.clearForm();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"contractType\"\r\n          editTitle=\"editContractType\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"contractTypeService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (editRow)=\"contactTypeToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ICountryModel, ICountryRequest } from \"app/system-setup/hr-setup/models/country\";\r\nimport { CountryService } from \"app/system-setup/hr-setup/services/country.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-country\",\r\n  templateUrl: \"./country.component.html\",\r\n  styleUrls: [\"./country.component.scss\"],\r\n})\r\nexport class CountryComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_NAme\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<ICountryModel>;\r\n\r\n  constructor(\r\n    public countryService: CountryService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<CountryComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_NAme: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_NAme.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    if (!this.data.isDialog) {\r\n      this.countryService.getList(params)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<ICountryModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(res.data);\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n            this.page.meta = res.meta;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ICountryRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        en_NAme: this.form.value.en_NAme,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: ICountryRequest) {\r\n    this.showLoading();\r\n    this.countryService.create(model).subscribe((res: IResponse<ICountryModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: ICountryRequest) {\r\n    this.showLoading();\r\n    this.countryService.update(model).subscribe((res: IResponse<ICountryModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  countryToEdit(country: ICountryModel) {\r\n    this.form.patchValue(country);\r\n  }\r\n\r\n  onDelete(country: ICountryModel): void {\r\n    let msg = this.msgTranslate(country.ar_Name, country.en_NAme);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(country);\r\n    });\r\n  }\r\n\r\n  delete(country: ICountryModel) {\r\n    this.showLoading();\r\n    this.countryService.Delete(country.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (country.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"country\"\r\n          editTitle=\"editCountry\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn *ngIf=\"data.isDialog\" (click)=\"onCloseDialog()\"></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_NAme\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [exportService]=\"countryService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          [actions]=\"rowFunctions\"\r\n          (editRow)=\"countryToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table\r\n        >\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IServiceModel } from \"app/system-setup/general-setup/models/service\";\r\nimport { hireDocumentToMap } from \"app/system-setup/hr-setup/mapper/hire-document\";\r\nimport { IHireDocMap, IHireDocRequest, IHireDocumentsModel, } from \"app/system-setup/hr-setup/models/hire-documents\";\r\nimport { HireDocumentsService } from \"app/system-setup/hr-setup/services/hire-documents/hire-documents.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-hire-documents\",\r\n  templateUrl: \"./hire-documents.component.html\",\r\n  styleUrls: [\"./hire-documents.component.scss\"],\r\n})\r\nexport class HireDocumentsComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  dataSource: MatTableDataSource<IHireDocMap>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"attachments\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  servicesList: IServiceModel[] = [];\r\n  disableServices: boolean = false;\r\n  docName: string;\r\n\r\n  constructor(\r\n    public hireDocumentsService: HireDocumentsService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<HireDocumentsComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) {\r\n    //   this.getList(this.currentPage);\r\n    //   this.getDocServiceDropdown();\r\n    // }\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      serviceID: [null, [Validators.required]],\r\n      attachmentIds: [[], [Validators.required]],\r\n    });\r\n    if (this.data?.id > 0) this.formCtrls.serviceID.setValue(this.data.id);\r\n    if (this.data.isDialog && this.isViewAllowed(ViewsManager.hire_documents)) {\r\n      this.rowFunctions = this.getRowFunByViewname(ViewsManager.hire_documents);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n      this.getDocServiceDropdown();\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.hireDocumentsService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IHireDocumentsModel[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(\r\n            hireDocumentToMap(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onsubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IHireDocRequest = {\r\n        ID: this.form.value.id,\r\n        Service_ID: this.form.value.serviceID,\r\n        Attachments_IDs: this.form.value.attachmentIds,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(body: IHireDocRequest) {\r\n    this.showLoading();\r\n    this.hireDocumentsService\r\n      .create(body)\r\n      .subscribe((res: IResponse<IHireDocumentsModel>) => {\r\n        if (res.message?.messageType == MessageTypes.Success) {\r\n          this.getDocServiceDropdown();\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else {\r\n          this.errorList(\r\n            res.message?.messages ?? [res.message.messageTypeName]\r\n          );\r\n          this.hideLoading();\r\n        }\r\n      });\r\n  }\r\n\r\n  update(body: IHireDocRequest) {\r\n    this.showLoading();\r\n    this.hireDocumentsService\r\n      .update(body)\r\n      .subscribe((res: IResponse<IHireDocumentsModel>) => {\r\n        if (res.message?.messageType == MessageTypes.Success) {\r\n          this.getDocServiceDropdown();\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  hireDocumentsToEdit(doc: IHireDocMap) {\r\n    this.disableServices = true;\r\n    let attachmentIds: number[] = [];\r\n    doc.attachmentsList.forEach((e) => {\r\n      attachmentIds.push(e.id);\r\n    });\r\n\r\n    this.formCtrls.serviceID.setValue(doc.id);\r\n    this.formCtrls.id.setValue(doc.id);\r\n    this.formCtrls.attachmentIds.setValue(attachmentIds);\r\n    this.docName = this.msgTranslate(doc.ar_Name, doc.en_Name);\r\n  }\r\n\r\n  onDelete(doc: IHireDocMap): void {\r\n    let msg = this.msgTranslate(doc.ar_Name, doc.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(doc);\r\n    });\r\n  }\r\n\r\n  delete(doc: IHireDocMap) {\r\n    this.showLoading();\r\n    this.hireDocumentsService.Delete(doc.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.getDocServiceDropdown();\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (doc.id == this.formCtrls.ID.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  getDocServiceDropdown() {\r\n    // let model: IServiceModel;\r\n    this.showLoading();\r\n    this.hireDocumentsService\r\n      // .getDocServiceDropdown(model.id)\r\n      .getDocServiceDropdown(57)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IServiceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.servicesList = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n    this.disableServices = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\" #dialogContainer>\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title [id]=\"formCtrls.id.value\"\r\n                    addTitle=\"hireDocuments\"\r\n                    editTitle=\"editHireDocuments\"\r\n                    [globalFunctions]=\"data.isDialog ? [] : globalFunctions\">\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn *ngIf=\"data.isDialog\"\r\n                          (click)=\"onCloseDialog()\">\r\n        </close-dialog-btn>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <!-- services dropdown  -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-prime-dropdown\r\n                [control]=\"formCtrls.serviceID\"\r\n                [submitted]=\"submitted\"\r\n                [List]=\"servicesList\"\r\n                [filter]=\"true\"\r\n                [readonly]=\"disableServices\"\r\n                label=\"services\"\r\n                [appendTo]=\"data?.isDialog ? dialogContainer : 'body'\">\r\n              </app-prime-dropdown>\r\n            </div>\r\n\r\n            <!-- attachment  dropdown -->\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-attachment-dropdown\r\n                [control]=\"formCtrls.attachmentIds\"\r\n                [submitted]=\"submitted\"\r\n                [multiple]=\"true\"\r\n                [filter]=\"true\"\r\n                [appendTo]=\"data?.isDialog ? dialogContainer : 'body'\"\r\n              >\r\n              </app-attachment-dropdown>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"onsubmit()\"></submit-btn>\r\n      </mat-card-actions>\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table [isLoaded]=\"isLoaded\"\r\n                          [dataSource]=\"dataSource\"\r\n                          [mandatoryColomns]=\"mandatoryColomns\"\r\n                          [optionalColomns]=\"optionalColomns\"\r\n                          [page]=\"page\"\r\n                          [actions]=\"rowFunctions\"\r\n                          [exportService]=\"hireDocumentsService\"\r\n                          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                          (editRow)=\"hireDocumentsToEdit($event)\"\r\n                          (deleteRow)=\"onDelete($event)\">\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { governorateToMap } from \"app/system-setup/hr-setup/mapper/governorate\";\r\nimport {\r\n  IGovernorateModel,\r\n  IGovernorateRequest,\r\n} from \"app/system-setup/hr-setup/models/governorate\";\r\nimport { GovernorateService } from \"app/system-setup/hr-setup/services/governorate.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-governorate\",\r\n  templateUrl: \"./governorate.component.html\",\r\n  styleUrls: [\"./governorate.component.scss\"],\r\n})\r\nexport class GovernorateComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  dataSource: MatTableDataSource<IGovernorateModel>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"country\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(\r\n    public governorateService: GovernorateService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<GovernorateComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      countrY_ID: [null, [Validators.required]],\r\n      ar_Name: [null, [Validators.required]],\r\n      en_Name: [null, [Validators.required]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n      this.formCtrls.countrY_ID.setValue(this.data.id);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.governorateService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IGovernorateModel[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          // res.data.map((e) => {\r\n          //   e.country = this.msgTranslate(\r\n          //     e.comm_Country.ar_Name,\r\n          //     e.comm_Country.en_NAme\r\n          //   );\r\n          // });\r\n          this.dataSource = new MatTableDataSource(governorateToMap(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IGovernorateRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n        Country_ID: this.form.value.countrY_ID,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(body: IGovernorateRequest) {\r\n    this.showLoading();\r\n    this.governorateService\r\n      .create(body)\r\n      .subscribe((res: IResponse<IGovernorateModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(body: IGovernorateRequest) {\r\n    this.showLoading();\r\n    this.governorateService\r\n      .update(body)\r\n      .subscribe((res: IResponse<IGovernorateModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  governorateToEdit(governorate: IGovernorateModel) {\r\n    this.form.patchValue(governorate);\r\n  }\r\n\r\n  onDelete(governorate: IGovernorateModel): void {\r\n    let msg = this.msgTranslate(governorate.ar_Name, governorate.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(governorate);\r\n    });\r\n  }\r\n\r\n  delete(governorate: IGovernorateModel) {\r\n    this.showLoading();\r\n    this.governorateService.Delete(governorate.id).subscribe((res: any) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (governorate.id == this.formCtrls.id.value) this.clearForm();\r\n        if (governorate.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\" #dialogContainer>\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"index-card\">\r\n      <mat-card-title>\r\n        <page-title [id]=\"formCtrls.id.value\"\r\n                    addTitle=\"governorate\"\r\n                    editTitle=\"editGovernorate\">\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn *ngIf=\"data.isDialog\"\r\n                          (click)=\"onCloseDialog()\">\r\n\r\n        </close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.ar_Name\"\r\n              label=\"ar_Name\"\r\n              [submitted]=\"submitted\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.en_Name\"\r\n              label=\"en_Name\"\r\n              [submitted]=\"submitted\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-country-dropdown\r\n              [control]=\"formCtrls.countrY_ID\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n              [appendTo]=\"data?.isDialog ? dialogContainer : 'body'\"\r\n            >\r\n            </app-country-dropdown>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [exportService]=\"governorateService\"\r\n          [actions]=\"rowFunctions\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"governorateToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IIdentityTypeModel,\r\n  IIdentityTypeRequest,\r\n} from \"app/system-setup/hr-setup/models/identity-type\";\r\nimport { IdentityTypeService } from \"app/system-setup/hr-setup/services/identity-type.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-identity-type\",\r\n  templateUrl: \"./identity-type.component.html\",\r\n  styleUrls: [\"./identity-type.component.scss\"],\r\n})\r\nexport class IdentityTypeComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IIdentityTypeModel>;\r\n  form: FormGroup;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"identity_TypeID\",\r\n    \"identity_TypeTital\",\r\n    \"isNationID\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    public identityTypeService: IdentityTypeService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<IdentityTypeComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany() ){\r\n    // this.getList(this.currentPage);\r\n    // }\r\n    this.form = this.fb.group({\r\n      identity_TypeID: [0, {nonNullable: true}],\r\n      identity_TypeTital: [null, CustomValidator.whiteSpace],\r\n      isNationID: [false],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.identity_TypeTital.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.identityTypeService\r\n      .getList(params)\r\n      .subscribe((res: IResponseList<IIdentityTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IIdentityTypeRequest = {\r\n        identity_TypeID: this.form.value.identity_TypeID,\r\n        identity_typetital: this.form.value.identity_TypeTital,\r\n        isNationID: this.form.value.isNationID ?? false,\r\n      };\r\n\r\n      model.identity_TypeID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IIdentityTypeRequest) {\r\n    this.showLoading();\r\n    this.identityTypeService\r\n      .create(model)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IIdentityTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IIdentityTypeRequest) {\r\n    this.showLoading();\r\n    this.identityTypeService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IIdentityTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  identityToEdit(identity: IIdentityTypeModel) {\r\n    this.form.patchValue(identity);\r\n  }\r\n\r\n  onDelete(identity: IIdentityTypeModel) {\r\n    let msg = this.msgTranslate(identity.identity_TypeTital);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(identity);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: IIdentityTypeModel) {\r\n    this.showLoading();\r\n    this.identityTypeService\r\n      .Delete(model.identity_TypeID)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (model.identity_TypeID == this.formCtrls.id.value)\r\n            this.clearForm();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.identity_TypeID.value\"\r\n          addTitle=\"identityType\"\r\n          editTitle=\"editIdentity\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.identity_TypeTital\"\r\n                [submitted]=\"submitted\"\r\n                label=\"identity_TypeTital\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12 p-2 align-text-center\">\r\n              <app-check-box\r\n                [control]=\"formCtrls.isNationID\"\r\n                label=\"isNationID\"\r\n              >\r\n              </app-check-box>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.identity_TypeID.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.identity_TypeID.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          [exportService]=\"identityTypeService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"identityToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IInstitutionModel,\r\n  IInstitutionRequest,\r\n} from \"app/system-setup/hr-setup/models/institution\";\r\nimport { InstitutionService } from \"app/system-setup/hr-setup/services/institution.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-institution\",\r\n  templateUrl: \"./institution.component.html\",\r\n  styleUrls: [\"./institution.component.scss\"],\r\n})\r\nexport class InstitutionComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"ar_Name\", \"en_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IInstitutionModel>;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    public institutionService: InstitutionService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<InstitutionComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany() )\r\n    //   this.getList(this.currentPage);\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.institutionService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IInstitutionModel[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onsubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IInstitutionRequest = {\r\n        ID: this.form.value.id,\r\n        En_Name: this.form.value.en_Name,\r\n        Ar_Name: this.form.value.ar_Name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(body: IInstitutionRequest) {\r\n    this.showLoading();\r\n    this.institutionService\r\n      .create(body)\r\n      .subscribe((res: IResponse<IInstitutionModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(body: IInstitutionRequest) {\r\n    this.showLoading();\r\n    this.institutionService\r\n      .update(body)\r\n      .subscribe((res: IResponse<IInstitutionModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  InstitutionToEdit(Institution: IInstitutionModel) {\r\n    this.form.patchValue(Institution);\r\n  }\r\n\r\n  onDelete(Institution: IInstitutionModel): void {\r\n    let msg = this.msgTranslate(Institution.ar_Name, Institution.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(Institution);\r\n    });\r\n  }\r\n\r\n  delete(Institution: IInstitutionModel) {\r\n    this.showLoading();\r\n    this.institutionService\r\n      .Delete(Institution.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (Institution.id == this.formCtrls.ID.value) this.clearForm();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"institution\"\r\n          editTitle=\"institutionedit\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input [control]=\"formCtrls.en_Name\"\r\n                         label=\"en_Name\"\r\n                         [submitted]=\"submitted\">\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input [control]=\"formCtrls.ar_Name\"\r\n                         label=\"ar_Name\"\r\n                         [submitted]=\"submitted\">\r\n              </app-input>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"onsubmit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          [exportService]=\"institutionService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n          (editRow)=\"InstitutionToEdit($event)\"\r\n        >\r\n        </app-material-table\r\n        >\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IInsuranceOfficeModel,\r\n  IInsuranceOfficeRequest,\r\n} from \"app/system-setup/hr-setup/models/insurance-office\";\r\nimport { InsuranceOfficeService } from \"app/system-setup/hr-setup/services/insurance-office.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-insurance-office\",\r\n  templateUrl: \"./insurance-office.component.html\",\r\n  styleUrls: [\"./insurance-office.component.scss\"],\r\n})\r\nexport class InsuranceOfficeComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IInsuranceOfficeModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(public insuranceOfficeService: InsuranceOfficeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany() )\r\n    // this.getList(this.currentPage);\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.insuranceOfficeService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IInsuranceOfficeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IInsuranceOfficeRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IInsuranceOfficeRequest) {\r\n    this.showLoading();\r\n    this.insuranceOfficeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IInsuranceOfficeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.firstPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  update(model: IInsuranceOfficeRequest) {\r\n    this.showLoading();\r\n    this.insuranceOfficeService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IInsuranceOfficeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  insuranceOfficeToEdit(insuranceOffice: IInsuranceOfficeModel) {\r\n    this.form.patchValue(insuranceOffice);\r\n  }\r\n\r\n  onDelete(insuranceOffice: IInsuranceOfficeModel) {\r\n    let msg = this.msgTranslate(\r\n      insuranceOffice.ar_Name,\r\n      insuranceOffice.en_Name\r\n    );\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(insuranceOffice);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: IInsuranceOfficeModel) {\r\n    this.showLoading();\r\n    this.insuranceOfficeService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (model.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"insuranceOffice\"\r\n          editTitle=\"editInsuranceOffice\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-12\"> -->\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <!-- </div>\r\n        </div> -->\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [exportService]=\"insuranceOfficeService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (editRow)=\"insuranceOfficeToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IKpiModel, IKpiRequest } from \"app/system-setup/hr-setup/models/kpi\";\r\nimport { KpiService } from \"app/system-setup/hr-setup/services/kpi.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-kpi\",\r\n  templateUrl: \"./kpi.component.html\",\r\n  styleUrls: [\"./kpi.component.scss\"],\r\n})\r\nexport class KpiComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IKpiModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"code\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(\r\n    public kpiService: KpiService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<KpiComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany() )\r\n    // this.getList(this.currentPage);\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      code: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.kpiService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IKpiModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IKpiRequest = {\r\n        id: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n        Code: this.form.value.code,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IKpiRequest) {\r\n    this.showLoading();\r\n    this.kpiService.create(model).subscribe((res: IResponse<IKpiModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n    });\r\n  }\r\n\r\n  update(model: IKpiRequest) {\r\n    this.showLoading();\r\n    this.kpiService.update(model).subscribe((res: IResponse<IKpiModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize);\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  kpiToEdit(kpi: IKpiModel) {\r\n    this.form.patchValue(kpi);\r\n  }\r\n\r\n  onDelete(kpi: IKpiModel) {\r\n    let msg = this.msgTranslate(kpi.ar_Name, kpi.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(kpi);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: IKpiModel) {\r\n    this.showLoading();\r\n    this.kpiService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (model.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"kpi\"\r\n          editTitle=\"editKpi\"\r\n          [globalFunctions]=\"data.isDialog ? [] : globalFunctions\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-12\"> -->\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-4 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.code\"\r\n                [submitted]=\"submitted\"\r\n                label=\"code\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <!-- </div>\r\n        </div> -->\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          [exportService]=\"kpiService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"kpiToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { INationalityModel, INationalityRequest } from \"app/system-setup/hr-setup/models/nationality\";\r\nimport { NationalityService } from \"app/system-setup/hr-setup/services/nationality.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-nationality\",\r\n  templateUrl: \"./nationality.component.html\",\r\n  styleUrls: [\"./nationality.component.scss\"],\r\n})\r\nexport class NationalityComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_NAme\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<INationalityModel>;\r\n\r\n  constructor(\r\n    public nationalityService: NationalityService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<NationalityComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_NAme: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_NAme.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n\r\n    if (!this.data.isDialog) {\r\n      this.nationalityService\r\n        .getList(params)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<INationalityModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(res.data);\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n            this.page.meta = res.meta;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: INationalityRequest = {\r\n        ID: this.form.value.id,\r\n        ar_Name: this.form.value.ar_Name,\r\n        En_NAme: this.form.value.en_NAme,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: INationalityRequest) {\r\n    this.showLoading();\r\n    this.nationalityService.create(model).subscribe((res: IResponse<INationalityModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.lastPage, this.page.pageSize);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: INationalityRequest) {\r\n    this.showLoading();\r\n    this.nationalityService.update(model).subscribe((res: IResponse<INationalityModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  nationalityToEdit(nationality: INationalityModel) {\r\n    this.form.patchValue(nationality);\r\n  }\r\n\r\n  onDelete(nationality: INationalityModel): void {\r\n    let msg = this.msgTranslate(nationality.ar_Name, nationality.en_NAme);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(nationality);\r\n    });\r\n  }\r\n\r\n  delete(nationality: INationalityModel) {\r\n    this.showLoading();\r\n    this.nationalityService.Delete(nationality.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (nationality.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title [id]=\"formCtrls.id.value\" addTitle=\"nationality\" editTitle=\"editNationality\">\r\n        </page-title>\r\n\r\n        <close-dialog-btn *ngIf=\"data.isDialog\" (click)=\"onCloseDialog()\"></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-12\"> -->\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input [control]=\"formCtrls.en_NAme\" [submitted]=\"submitted\" label=\"en_Name\">\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input [control]=\"formCtrls.ar_Name\" [submitted]=\"submitted\" label=\"ar_Name\">\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <!-- </div>\r\n        </div> -->\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\" [exportService]=\"nationalityService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"nationalityToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IReligionModel, IReligionRequest } from \"app/system-setup/hr-setup/models/religion\";\r\nimport { ReligionService } from \"app/system-setup/hr-setup/services/religion.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-religion\",\r\n  templateUrl: \"./religion.component.html\",\r\n  styleUrls: [\"./religion.component.scss\"],\r\n})\r\nexport class ReligionComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IReligionModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(\r\n    public religionService: ReligionService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<ReligionComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.religionService.getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IReligionModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IReligionRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IReligionRequest) {\r\n    this.showLoading();\r\n    this.religionService.create(model).subscribe((res: IResponse<IReligionModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.lastPage, this.page.pageSize);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IReligionRequest) {\r\n    this.showLoading();\r\n    this.religionService.update(model).subscribe((res: IResponse<IReligionModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize);\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  religionToEdit(religion: IReligionModel) {\r\n    this.form.patchValue(religion);\r\n  }\r\n\r\n  onDelete(religion: IReligionModel) {\r\n    let msg = this.msgTranslate(religion.ar_Name, religion.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(religion);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: IReligionModel) {\r\n    this.showLoading();\r\n    this.religionService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (model.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"religion\"\r\n          editTitle=\"editReligion\"\r\n        >\r\n        </page-title>\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-12\"> -->\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <!-- </div>\r\n        </div> -->\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          [exportService]=\"religionService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"religionToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {msgTranslate} from \"app/shared/resources/helpers-functions\";\r\nimport {IContactCategoryDisplay, IContactCategoryResponse} from \"../models/contact-category\";\r\n\r\nexport function contactCategoryToMap(contactCategories: IContactCategoryResponse[]): IContactCategoryDisplay[] {\r\n\r\n  return contactCategories.map((category) => {\r\n    return <IContactCategoryDisplay>{\r\n      id: category.contactCategory_ID,\r\n      ar_Name: category.comm_Contact_Category?.ar_Name,\r\n      en_Name: category.comm_Contact_Category?.en_Name,\r\n      icon: category.comm_Contact_Category?.icon,\r\n      contactType: msgTranslate(category.comm_Contact_Type?.ar_Name, category.comm_Contact_Type?.en_Name),\r\n      Comm_Contact_Type_ID: category.contactType_ID,\r\n    }\r\n  });\r\n\r\n}\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { IGovernorateModel } from \"../models/governorate\";\r\n\r\nexport function governorateToMap(governorates: IGovernorateModel[]): IGovernorateModel[] {\r\n\treturn governorates.map((governorate) => {\r\n\t\treturn <IGovernorateModel>{\r\n\t\t\t...governorate,\r\n\t\t\tcountry: msgTranslate(governorate.comm_Country?.ar_Name, governorate.comm_Country?.en_NAme),\r\n\t\t};\r\n\t});\r\n}\r\n","import { IAttachmentTypesModel } from 'app/system-setup/general-setup/models/attachment-types';\r\nimport {\r\n  IDocJobTitleMap,\r\n  IDocJobTitleModel,\r\n  IHireDocMap,\r\n  IHireDocumentsModel,\r\n} from '../models/hire-documents';\r\nimport {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from 'app/shared/resources/helpers-functions';\r\n\r\nexport function hireDocumentToMap(\r\n  documents: IHireDocumentsModel[]\r\n): IHireDocMap[] {\r\n  // get servicesIds list ex. [1,2,3]\r\n  const servicesIds = HelpersFunctions.getMatched(documents, 'serviceID');\r\n\r\n  // Distinct comm_Attachment_Type for serviceId\r\n  return servicesIds.map((serviceId) => {\r\n    let obj = {} as IHireDocMap;\r\n    obj.id = serviceId;\r\n    obj.attachmentsList = [];\r\n    obj.attachments = [];\r\n    documents.map((e) => {\r\n      if (e.serviceID == serviceId) {\r\n        obj.ar_Name = e.uM_Services?.arbName;\r\n        obj.en_Name = e.uM_Services?.engName;\r\n        obj.attachmentsList.push(e.comm_Attachment_Type);\r\n        obj.attachments.push(\r\n          `  ${msgTranslate(\r\n            e.comm_Attachment_Type?.ar_Name,\r\n            e.comm_Attachment_Type?.en_Name\r\n          )}  `\r\n        );\r\n      }\r\n    });\r\n    obj.attachments.join(' - ');\r\n    return <IHireDocMap>{...obj};\r\n  });\r\n}\r\n\r\nexport function attachmentToMap(\r\n  documents: IHireDocumentsModel[]\r\n): IAttachmentTypesModel[] {\r\n  return documents.map((document) => {\r\n    return <IAttachmentTypesModel>{\r\n      ...document.comm_Attachment_Type,\r\n    };\r\n  });\r\n}\r\n\r\nexport function documentJobTitleToMap(\r\n  documents: IDocJobTitleModel[]\r\n): IDocJobTitleMap[] {\r\n  return documents.map((document) => {\r\n    return <IDocJobTitleMap>{\r\n      ...document,\r\n      jobTitleName: msgTranslate(\r\n        document.core_Job_Title?.ar_Name,\r\n        document.core_Job_Title?.en_Name\r\n      ),\r\n      attachment: msgTranslate(\r\n        document.comm_Attachment_Type_Services?.comm_Attachment_Type?.ar_Name,\r\n        document.comm_Attachment_Type_Services?.comm_Attachment_Type?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IBankBranchRequest, IBankBranchModel } from \"../../models/bank\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BankBranchService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IBankBranchRequest) {\r\n    return this.post<IResponse<IBankBranchModel>>(\r\n      \"HRSetup/bank/AddBankBranch\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IBankBranchRequest) {\r\n    return this.post<IResponse<IBankBranchModel>>(\r\n      \"HRSetup/bank/EditBankBranch\",\r\n      data,\r\n\r\n    );\r\n  }\r\n\r\n  getList(params) {\r\n    return this.get<IResponseList<IBankBranchModel[]>>(\"HRSetup/bank/GetList\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  getBankBranches(params, id: number) {\r\n    return this.get<any>(\"HRSetup/Bank/GetAll\", {\r\n      params: {\r\n        ...params,\r\n        $filter: `id eq ${id}`,\r\n        $expand: db.comm_branch,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll(params) {\r\n    return this.get<IResponse<IBankBranchModel[]>>(\"HRSetup/Bank/GetAll\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  Delete( id: number) {\r\n    return this.delete<IResponse>(\"HRSetup/Bank/DeleteBankBranch\", {\r\n      params: {Id:id}\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IBankModel, IBankRequest } from \"../../models/bank\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class BankService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: IBankRequest) {\r\n\t\treturn this.post<IResponse<IBankModel>>(\"HRSetup/bank/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: IBankRequest) {\r\n\t\treturn this.post<IResponse<IBankModel>>(\"HRSetup/bank/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IBankModel[]>>(\"HRSetup/bank/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetById(id: number) {\r\n\t\treturn this.get<IResponse<IBankModel[]>>(\"HRSetup/Bank/GetAll\", {\r\n\t\t\tparams: {\r\n\t\t\t\t$filter: `id eq ${id}`,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IBankModel[]>>(\"HRSetup/bank/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"HRSetup/bank/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IBloodTypeModel } from \"../models/blood-type\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BloodTypeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IBloodTypeModel[]>>(\"BloodType/GetAll\").pipe(\r\n      map((res) => {\r\n        res.data.map((item: IBloodTypeModel) => {\r\n          item.en_Name = item.en_NAme;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {IResponse, IResponseList} from \"app/shared/interfaces/responces\";\r\nimport {AppClientService} from \"app/shared/services/app-client.service\";\r\nimport {IContactCategoryModel, IContactCategoryRequest, IContactCategoryResponse,} from \"../models/contact-category\";\r\nimport {db} from \"app/shared/resources/database-tabels\";\r\nimport {IPageParams} from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ContactCategoryService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IContactCategoryRequest) {\r\n    return this.post<IResponse<IContactCategoryResponse>>(\r\n      \"HRSetup/ContactType/Create_ContactCategory\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IContactCategoryRequest) {\r\n    return this.post<IResponse<IContactCategoryResponse>>(\r\n      \"HRSetup/ContactType/Edit_ContactCategory\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IContactCategoryResponse[]>>(\r\n      \"HRSetup/ContactType/GetList_ContactCategory\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $expand: `${db.comm_Contact_Category},${db.comm_Contact_Type}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IContactCategoryModel[]>>(\"HRSetup/ContactType/GetAll_TypeCategory\", {\r\n      params: {\r\n        $expand: `${db.comm_Contact_Category},${db.comm_Contact_Type}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAllCategoriesByTypeId(typeId: number) {\r\n    return this.get<IResponse<IContactCategoryModel[]>>(\"HRSetup/ContactType/GetAll_TypeCategory\", {\r\n      params: {\r\n        $filter: `ContactType_ID eq ${typeId}`,\r\n        $expand: `${db.comm_Contact_Category},${db.comm_Contact_Type}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"HRSetup/ContactType/Delete_ContactCategory\", {\r\n      params: {Id: id},\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IContactTypeModel, IContactTypeRequest } from \"../models/contact-type\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ContactTypeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IContactTypeRequest) {\r\n    return this.post<IResponse<IContactTypeModel>>(\r\n      \"HRSetup/ContactType/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IContactTypeRequest) {\r\n    return this.post<IResponse<IContactTypeModel>>(\r\n      \"HRSetup/ContactType/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IContactTypeModel[]>>(\r\n      \"HRSetup/ContactType/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IContactTypeModel[]>>(\r\n      \"HRSetup/ContactType/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"HRSetup/ContactType/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IContractTypeModel, IContractTypeRequest } from \"app/system-setup/hr-setup/models/contract-type\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class ContractTypeService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: IContractTypeRequest) {\r\n\t\treturn this.post<IResponse<IContractTypeModel>>(\"HRSetup/contracttype/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: IContractTypeRequest) {\r\n\t\treturn this.post<IResponse<IContractTypeModel>>(\"HRSetup/contracttype/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IContractTypeModel[]>>(\"HRSetup/ContractType/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IContractTypeModel[]>>(\"HRSetup/ContractType/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"HRSetup/ContractType/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ICountryRequest, ICountryModel } from \"app/system-setup/hr-setup/models/country\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class CountryService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: ICountryRequest) {\r\n\t\treturn this.post<IResponse<ICountryModel>>(\"HRSetup/country/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: ICountryRequest) {\r\n\t\treturn this.post<IResponse<ICountryModel>>(\"HRSetup/country/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<ICountryModel[]>>(\"HRSetup/Country/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<ICountryModel[]>>(\"HRSetup/Country/GetAll\").pipe(\r\n\t\t\tmap((res: IResponse<ICountryModel[]>) => {\r\n\t\t\t\tres.data.map((item: ICountryModel) => {\r\n\t\t\t\t\titem.en_Name = item.en_NAme;\r\n\t\t\t\t});\r\n\t\t\t\treturn res;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"HRSetup/Country/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEducationDegreeModel,\r\n  IEducationDegreeRequest,\r\n} from \"app/system-setup/hr-setup/models/education-degree\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EducationDegreeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEducationDegreeRequest) {\r\n    return this.post<IResponse<IEducationDegreeModel>>(\r\n      \"HRSetup/EducationDegree/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEducationDegreeRequest) {\r\n    return this.post<IResponse<IEducationDegreeModel>>(\r\n      \"HRSetup/EducationDegree/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IEducationDegreeModel[]>>(\r\n      \"HRSetup/EducationDegree/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IEducationDegreeModel[]>>(\r\n      \"HRSetup/EducationDegree/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"HRSetup/EducationDegree/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EducationGradeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<Idropdown[]>>(\"HRSetup/EducationGrade/GetAll\");\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport {AppClientService} from 'app/shared/services/app-client.service';\r\nimport {\r\n  IJobStatusEventModel,\r\n  IJobStatusModel,\r\n} from '../models/emp-job-status';\r\nimport {db} from 'app/shared/resources/database-tabels';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmpJobStatusService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAllStatus() {\r\n    return this.get<IResponse<IJobStatusModel[]>>('HRSetup/Status/GetAll', {\r\n      params: {\r\n        $expand: db.core_Status_Properties\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllStatusEvents(statusId: number) {\r\n    return this.get<IResponse<IJobStatusEventModel[]>>(\r\n      'HRSetup/Status/GetAll_StatusProperty',\r\n      {\r\n        params: {$filter: `statusID eq ${statusId}`},\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IGenderModel } from \"../models/gender\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class GenderService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IGenderModel[]>>(\"HRSetup/Gender/GetAll\").pipe(\r\n\t\t\tmap((res: IResponse<IGenderModel[]>) => {\r\n\t\t\t\tres.data.map((item: any) => {\r\n\t\t\t\t\titem.en_Name = item.en_NAme;\r\n\t\t\t\t});\r\n\t\t\t\treturn res;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n  getAllIncludeBoth() {\r\n    return this.get<IResponse<IGenderModel[]>>(\r\n      \"Recruitment/Request/GenderList\"\r\n    ).pipe(\r\n      map((res: IResponse<IGenderModel[]>) => {\r\n        res.data.map((item: any) => {\r\n          item.en_Name = item.en_NAme;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IGovernorateModel, IGovernorateRequest } from \"../models/governorate\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class GovernorateService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(body: IGovernorateRequest) {\r\n\t\treturn this.post<IResponse<IGovernorateModel>>(\"HRSetup/Governorate/Create\", body);\r\n\t}\r\n\r\n\tupdate(body: IGovernorateRequest) {\r\n\t\treturn this.post<IResponse<IGovernorateModel>>(\"HRSetup/Governorate/Edit\", body);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IGovernorateModel[]>>(\"HRSetup/Governorate/GetList\", {\r\n\t\t\tparams: {\r\n\t\t\t\t...params,\r\n\t\t\t\t$expand: db.comm_Country,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IGovernorateModel[]>>(\"HRSetup/Governorate/GetAll\");\r\n\t}\r\n\r\n  getAllByCountryId(countryId: number) {\r\n    return this.get<IResponse<IGovernorateModel[]>>(\r\n      \"HRSetup/Governorate/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `countrY_ID eq ${countryId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"HRSetup/Governorate/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n  \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IHireDocRequest,\r\n  IHireDocumentsModel,\r\n} from \"../../models/hire-documents\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { IServiceModel } from \"app/system-setup/general-setup/models/service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class HireDocumentsService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(body: IHireDocRequest) {\r\n    return this.post<IResponse<IHireDocumentsModel>>(\r\n      \"HRSetup/HireDocument/Create\",\r\n      body\r\n    );\r\n  }\r\n\r\n  update(body: IHireDocRequest) {\r\n    return this.post<IResponse<IHireDocumentsModel>>(\r\n      \"HRSetup/HireDocument/Edit\",\r\n      body\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IHireDocumentsModel[]>>(\r\n      \"HRSetup/HireDocument/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $expand: `${db.Comm_Attachment_Type},${db.Um_Services}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IHireDocumentsModel[]>>(\r\n      \"HRSetup/HireDocument/GetAll\"\r\n    );\r\n  }\r\n\r\n  GetAllByServiceId(serviceId: number) {\r\n    return this.get<IResponse<IHireDocumentsModel[]>>(\r\n      \"HRSetup/HireDocument/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `serviceid eq ${serviceId}`,\r\n          $expand: `${db.Comm_Attachment_Type},${db.Um_Services}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"HRSetup/HireDocument/Delete\", {\r\n      params: {Id: id},\r\n    });\r\n  }\r\n\r\n  getDocServiceDropdown(id: number) {\r\n    return this.get<IResponse<IServiceModel[]>>(\r\n      \"HRSetup/HireDocument/DropDownServices\",\r\n      {\r\n        params: {id: id},\r\n      }\r\n    ).pipe(\r\n      map((res: IResponse<IServiceModel[]>) => {\r\n        res.data.map((item: IServiceModel) => {\r\n          item.ar_Name = item.arbName;\r\n          item.en_Name = item.engName;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IIdentityTypeModel,\r\n  IIdentityTypeRequest,\r\n} from \"../models/identity-type\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class IdentityTypeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IIdentityTypeRequest) {\r\n    return this.post<IResponse<IIdentityTypeModel>>(\r\n      \"HRSetup/IdentityType/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IIdentityTypeRequest) {\r\n    return this.post<IResponse<IIdentityTypeModel>>(\r\n      \"HRSetup/IdentityType/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IIdentityTypeModel[]>>(\r\n      \"HRSetup/IdentityType/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IIdentityTypeModel[]>>(\r\n      \"HRSetup/IdentityType/GetAll\"\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: IIdentityTypeModel) => {\r\n          item.id = item.identity_TypeID;\r\n          item.ar_Name = item.identity_TypeTital;\r\n          item.en_Name = item.identity_TypeTital;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"HRSetup/IdentityType/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n  \r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IInstitutionModel, IInstitutionRequest } from \"../models/institution\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class InstitutionService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(body: IInstitutionRequest) {\r\n\t\treturn this.post<IResponse<IInstitutionModel>>(\"HRSetup/Institution/Create\", body);\r\n\t}\r\n\r\n\tupdate(body: IInstitutionRequest) {\r\n\t\treturn this.post<IResponse<IInstitutionModel>>(\"HRSetup/Institution/Edit\", body);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IInstitutionModel[]>>(\"HRSetup/Institution/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IInstitutionModel[]>>(\"HRSetup/Institution/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"HRSetup/Institution/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IInsuranceOfficeRequest, IInsuranceOfficeModel } from \"../models/insurance-office\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class InsuranceOfficeService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: IInsuranceOfficeRequest) {\r\n\t\treturn this.post<IResponse<IInsuranceOfficeModel>>(\"HRSetup/InsuranceOffice/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: IInsuranceOfficeRequest) {\r\n\t\treturn this.post<IResponse<IInsuranceOfficeModel>>(\"HRSetup/InsuranceOffice/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IInsuranceOfficeModel[]>>(\"HRSetup/InsuranceOffice/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IInsuranceOfficeModel[]>>(\"HRSetup/InsuranceOffice/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"HRSetup/InsuranceOffice/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n  \r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IKpiRequest, IKpiModel } from \"../models/kpi\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class KpiService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n  create(data: IKpiRequest) {\r\n    return this.post<IResponse<IKpiModel>>(\"HRSetup/kpi/Create\", data);\r\n  }\r\n\r\n  update(data: IKpiRequest) {\r\n    return this.post<IResponse<IKpiModel>>(\"HRSetup/kpi/Edit\", data);\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IKpiModel[]>>(\"HRSetup/KPI/GetList\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IKpiModel[]>>(\"HRSetup/kpi/GetAll\");\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"HRSetup/kpi/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IMaritalStatusModel } from \"../models/marital-status\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MaritalStatusService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IMaritalStatusModel[]>>(\r\n      \"HRSetup/MaritalStatus/GetAll\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IMilitaryGradeModel, IMilitaryStatusModel } from \"../models/military\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MilitaryService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAllMilitaryStatus() {\r\n    return this.get<IResponse<IMilitaryStatusModel[]>>(\r\n      \"HRSetup/MilitryStatus/GetAll\"\r\n    );\r\n  }\r\n\r\n  getAllMilitaryGrades() {\r\n    return this.get<IResponse<IMilitaryGradeModel[]>>(\r\n      \"HRSetup/MilitryGrade/GetAll\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { INationalityModel, INationalityRequest } from \"app/system-setup/hr-setup/models/nationality\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class NationalityService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: INationalityRequest) {\r\n\t\treturn this.post<IResponse<INationalityModel>>(\"HRSetup/Nationality/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: INationalityRequest) {\r\n\t\treturn this.post<IResponse<INationalityModel>>(\"HRSetup/Nationality/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<INationalityModel[]>>(\"HRSetup/nationality/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<INationalityModel[]>>(\"HRSetup/Nationality/GetAll\").pipe(\r\n\t\t\tmap((res: IResponse<INationalityModel[]>) => {\r\n\t\t\t\tres.data.map((nationality: any) => {\r\n\t\t\t\t\tnationality.en_Name = nationality.en_NAme;\r\n\t\t\t\t});\r\n\t\t\t\treturn res;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"HRSetup/Nationality/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IReligionRequest, IReligionModel } from \"../models/religion\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ReligionService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IReligionRequest) {\r\n    return this.post<IResponse<IReligionModel>>(\r\n      \"HRSetup/Religion/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IReligionRequest) {\r\n    return this.post<IResponse<IReligionModel>>(\"HRSetup/Religion/Edit\", data);\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IReligionModel[]>>(\r\n      \"HRSetup/religion/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IReligionModel[]>>(\"HRSetup/religion/GetAll\");\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"HRSetup/Religion/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ILocPenaltyModel, ILocPenaltyRequest, } from \"app/system-setup/localization-setup/models/localization-penalties\";\r\nimport { LocPenaltiesService } from \"app/system-setup/localization-setup/services/localization-penalties.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\n\r\n@Component({\r\n  selector: \"app-localization-penalties\",\r\n  templateUrl: \"./loc-penalties.component.html\",\r\n  styleUrls: [\"./loc-penalties.component.scss\"],\r\n})\r\nexport class LocPenaltiesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"name\",\r\n    \"penalty_Value\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<ILocPenaltyModel>;\r\n\r\n  constructor(public penaltiesService: LocPenaltiesService,\r\n              @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n              public dialogRef: MatDialogRef<LocPenaltiesComponent>) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      penalty_Value: [null, [Validators.required, CustomValidators.gte(0)]],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.checkNoVersionOrCountry())\r\n      this.getList(this.firstPage);\r\n  }\r\n\r\n  override onChangeVersionOrCountry() {\r\n    this.onChangeBusinessAndCompanyId();\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    if (!this.data.isDialog) {\r\n      this.penaltiesService\r\n        .getList(params)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<ILocPenaltyModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(res.data);\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n            this.page.meta = res.meta;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ILocPenaltyRequest = {\r\n        ID: this.form.value.id,\r\n        Name: this.form.value.name,\r\n        Penalty_Value: this.form.value.penalty_Value,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n    //  else this.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: ILocPenaltyRequest) {\r\n    this.showLoading();\r\n    this.penaltiesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ILocPenaltyModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ILocPenaltyRequest) {\r\n    this.showLoading();\r\n    this.penaltiesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ILocPenaltyModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  penaltyToEdit(penalty: ILocPenaltyModel) {\r\n    this.form.patchValue(penalty);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(penalty: ILocPenaltyModel): void {\r\n    let msg = this.msgTranslate(penalty.name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(penalty);\r\n    });\r\n  }\r\n\r\n  delete(penalty: ILocPenaltyModel) {\r\n    this.showLoading();\r\n    this.penaltiesService.Delete(penalty.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (penalty.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"penalties\"\r\n          editTitle=\"editPenalty\">\r\n        </page-title>\r\n        <close-dialog-btn *ngIf=\"data.isDialog\" (click)=\"dialogRef.close()\"></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"name\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.penalty_Value\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"penalty_Value\">\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider *ngIf=\"!data.isDialog\"></mat-divider>\r\n\r\n      <app-material-table *ngIf=\"!data.isDialog\"\r\n                          [isLoaded]=\"isLoaded\"\r\n                          [dataSource]=\"dataSource\"\r\n                          [mandatoryColomns]=\"mandatoryColomns\"\r\n                          [optionalColomns]=\"optionalColomns\"\r\n                          [page]=\"page\"\r\n                          [exportService]=\"penaltiesService\"\r\n                          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                          [actions]=\"rowFunctions\"\r\n                          (editRow)=\"penaltyToEdit($event)\"\r\n                          (deleteRow)=\"onDelete($event)\">\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\n\r\nimport {\r\n  ILocVersion,\r\n  ILocVersionRequest,\r\n  ILocVersionsGetAllDropdown,\r\n} from \"app/system-setup/localization-setup/models/localization-version\";\r\nimport { LocVersionService } from \"app/system-setup/localization-setup/services/localization-version.service\";\r\nimport { Params } from \"@angular/router\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\n\r\n@Component({\r\n  selector: \"app-add-version\",\r\n  templateUrl: \"./loc-add-version.component.html\",\r\n  styleUrls: [\"./loc-add-version.component.scss\"],\r\n})\r\nexport class LocAddVersionComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  versionId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private versionService: LocVersionService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<LocAddVersionComponent>\r\n  ) {\r\n    super();\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.versionId = Number(params.id ?? 0);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [this.versionId, { nonNullable: true }],\r\n      name: [null, [Validators.required]],\r\n      date: [null, [Validators.required]],\r\n      active: [false, [Validators.required]],\r\n      country_ID: [null, [Validators.required]],\r\n      OldVersionID: [null],\r\n      note: [null],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.versionId > 0) this.getById();\r\n  }\r\n\r\n  getById() {\r\n    this.showLoading();\r\n    this.versionService\r\n      .getById(this.versionId)\r\n      .subscribe((res: IResponse<ILocVersionsGetAllDropdown[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.form.patchValue(res.data[0]);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let body: ILocVersionRequest = {\r\n        OldVersionID: this.formCtrls.OldVersionID.value,\r\n        Version: {\r\n          id: this.formCtrls.id.value,\r\n          name: this.formCtrls.name.value,\r\n          date: HelpersFunctions.mapDateReverse(this.formCtrls.date.value),\r\n          active: this.formCtrls.active.value,\r\n          country_ID: this.formCtrls.country_ID.value,\r\n          note: this.formCtrls.note.value,\r\n        },\r\n      };\r\n      if (body.Version.id == 0) this.create(body);\r\n      else this.update(body);\r\n    }\r\n  }\r\n\r\n  create(data: ILocVersionRequest) {\r\n    this.showLoading();\r\n    this.versionService.create(data).subscribe((res: IResponse<ILocVersion>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.versionId = Number(res.data.id);\r\n        this.formCtrls.id.setValue(this.versionId);\r\n        let url = `/localization-setup/${this.moduleId}/version/edit/${this.versionId}`;\r\n        // this.navigateTo(url);\r\n        this.addSuccessfullyMsg(res.message.messageTypeName);\r\n        if (!this.data.isDialog) this.navigateTo(url);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      } else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(data: ILocVersionRequest) {\r\n    this.showLoading();\r\n    this.versionService\r\n      .update(data.Version)\r\n      .subscribe((res: IResponse<ILocVersion>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res.message.messageTypeName);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0, active: false });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12 cards-no-shadow\">\r\n    <mat-card #container class=\"form-card\">\r\n      <mat-card-title class=\"title-no-margin\">\r\n        <page-title title=\"versions\"></page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn *ngIf=\"data.isDialog\"\r\n                          (click)=\"dialogRef.close()\">\r\n        </close-dialog-btn>\r\n\r\n        <ng-container *ngIf=\"!data.isDialog\">\r\n          <!-- button add new-->\r\n          <app-add-new-btn\r\n            *ngIf=\"versionId > 0\"\r\n            url=\"/localization-setup/{{ moduleId }}/version/add\"\r\n            [params]=\"parentParam\">\r\n          </app-add-new-btn>\r\n\r\n          <!-- button back-->\r\n          <app-back-btn\r\n            url=\"/localization-setup/{{ moduleId }}/version\"\r\n            [params]=\"pageParams\">\r\n          </app-back-btn>\r\n        </ng-container>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid mt-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input [control]=\"formCtrls.name\"\r\n                             [submitted]=\"submitted\"\r\n                             label=\"Name\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-datepicker [control]=\"formCtrls.date\"\r\n                                  [submitted]=\"submitted\"\r\n                                  label=\"Date\">\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-country-dropdown [control]=\"formCtrls.country_ID\"\r\n                                        [submitted]=\"submitted\"\r\n                                        [filter]=\"true\">\r\n                  </app-country-dropdown>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\" *ngIf=\"formCtrls.id.value==0\">\r\n                  <app-versions-dropdown [control]=\"formCtrls.OldVersionID\"\r\n                                         [submitted]=\"submitted\"\r\n                                         [filter]=\"true\">\r\n                  </app-versions-dropdown>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input [control]=\"formCtrls.note\"\r\n                             [submitted]=\"submitted\"\r\n                             label=\"Note\">\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-check-box class=\"mt-3\" [control]=\"formCtrls.active\" label=\"Active\">\r\n                  </app-check-box>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\"\r\n                        (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n\r\n        <submit-btn (onClick)=\"submit()\"\r\n                    [id]=\"formCtrls.id.value\">\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport {\r\n  ILocViolationTypeModel,\r\n  ILocViolationTypeRequest,\r\n} from \"app/system-setup/localization-setup/models/localization-violation-types\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { LocViolationTypesService } from \"app/system-setup/localization-setup/services/localization-violation-types.service\";\r\n\r\n@Component({\r\n  selector: \"app-violation-types\",\r\n  templateUrl: \"./loc-violation-types.component.html\",\r\n  styleUrls: [\"./loc-violation-types.component.scss\"],\r\n})\r\nexport class LocViolationTypesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<ILocViolationTypeModel>;\r\n\r\n  constructor(\r\n    public violationTypesService: LocViolationTypesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<LocViolationTypesComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany() && this.checkNoVersionOrCountry())\r\n      this.getList(this.firstPage);\r\n  }\r\n  override onChangeVersionOrCountry() {\r\n    this.onChangeBusinessAndCompanyId();\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    if (!this.data.isDialog) {\r\n      this.violationTypesService\r\n        .getList(params)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<ILocViolationTypeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(res.data);\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n            this.page.meta = res.meta;\r\n          } else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ILocViolationTypeRequest = {\r\n        ID: this.form.value.id,\r\n        Name: this.form.value.name,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: ILocViolationTypeRequest) {\r\n    this.showLoading();\r\n    this.violationTypesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ILocViolationTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ILocViolationTypeRequest) {\r\n    this.showLoading();\r\n    this.violationTypesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ILocViolationTypeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  violationTypeToEdit(violationType: ILocViolationTypeModel) {\r\n    this.form.patchValue(violationType);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(violationType: ILocViolationTypeModel): void {\r\n    let msg = this.msgTranslate(violationType.name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(violationType);\r\n    });\r\n  }\r\n\r\n  delete(violationType: ILocViolationTypeModel) {\r\n    this.showLoading();\r\n    this.violationTypesService\r\n      .Delete(violationType.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (violationType.id == this.formCtrls.id.value) this.clearForm();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title [id]=\"formCtrls.id.value\"\r\n                    addTitle=\"violationTypes\"\r\n                    editTitle=\"editViolationType\">\r\n        </page-title>\r\n        <close-dialog-btn *ngIf=\"data.isDialog\" (click)=\"dialogRef.close()\"></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table *ngIf=\"!data.isDialog\"\r\n                          [isLoaded]=\"isLoaded\"\r\n                          [dataSource]=\"dataSource\"\r\n                          [mandatoryColomns]=\"mandatoryColomns\"\r\n                          [optionalColomns]=\"optionalColomns\"\r\n                          [page]=\"page\"\r\n                          [exportService]=\"violationTypesService\"\r\n                          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                          [actions]=\"rowFunctions\"\r\n                          (editRow)=\"violationTypeToEdit($event)\"\r\n                          (deleteRow)=\"onDelete($event)\">\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  ILocViolationModel,\r\n  ILocViolationRequest,\r\n  ILocViolationResponse,\r\n} from \"app/system-setup/localization-setup/models/localization-violations\";\r\nimport { LocViolationsService } from \"app/system-setup/localization-setup/services/localization-violations.service\";\r\nimport { RadioButtonModel } from \"app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\n\r\n@Component({\r\n  selector: \"localization-add-violation\",\r\n  templateUrl: \"./loc-add-violation.component.html\",\r\n  styleUrls: [\"./loc-add-violation.component.scss\"],\r\n})\r\nexport class LocAddViolationComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  violationId: number;\r\n\r\n  constructor(private violationsService: LocViolationsService,\r\n              @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n              public dialogRef: MatDialogRef<LocAddViolationComponent>) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.violationId = Number(params.get(\"id\")) ?? 0;\r\n    });\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNullable: true}],\r\n        en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n        ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n        variableCode: [null, CustomValidator.variableCodeValidators],\r\n        display_In_Result: [false],\r\n        renew_Day: [null, [CustomValidators.gte(0), CustomValidators.digits]],\r\n        fromValue: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomValidators.gte(0),\r\n            CustomValidators.digits,\r\n          ],\r\n        ],\r\n        toValue: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomValidators.gte(0),\r\n            CustomValidators.digits,\r\n          ],\r\n        ],\r\n        violation_Type_ID: [null, [Validators.required]],\r\n        type: [null, [Validators.required]],\r\n        renew_By_Period: [false],\r\n        ismoney: [false],\r\n        measureUnit: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomValidators.gte(0),\r\n            CustomValidators.digits,\r\n          ],\r\n        ],\r\n      },\r\n      {\r\n        validator: CustomValidator.greaterThan(\"fromValue\", \"toValue\"),\r\n      }\r\n    );\r\n\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (\r\n      this.checkNoBusinessOrCompany() &&\r\n      this.checkNoVersionOrCountry() &&\r\n      this.violationId > 0\r\n    ) this.getById();\r\n\r\n  }\r\n\r\n  override onChangeVersionOrCountry() {\r\n    this.onChangeBusinessAndCompanyId();\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getById() {\r\n    this.showLoading();\r\n    this.violationsService\r\n      .getById(this.violationId)\r\n      .subscribe((res: IResponse<ILocViolationResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.form.patchValue(res.data[0].loc_Violation);\r\n          this.formCtrls.variableCode.patchValue(res.data[0].loc_Variable?.code);\r\n          this.formCtrls.display_In_Result.patchValue(res.data[0].loc_Variable?.display_In_Result);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ILocViolationRequest = {\r\n        Violation: {\r\n          ID: this.form.value.id,\r\n          En_Name: this.form.value.en_Name,\r\n          Ar_Name: this.form.value.ar_Name,\r\n          Renew_Day: this.form.value.renew_Day,\r\n          FromValue: this.form.value.fromValue,\r\n          ToValue: this.form.value.toValue,\r\n          Violation_Type_ID: this.form.value.violation_Type_ID,\r\n          Type: this.form.value.type,\r\n          Renew_By_Period: this.form.value.renew_By_Period ?? false,\r\n          Ismoney: this.form.value.ismoney,\r\n          MeasureUnit: this.form.value.measureUnit,\r\n        },\r\n        VariableCode: this.form.value.variableCode,\r\n        Display_In_Result: this.form.value.display_In_Result ?? false,\r\n      };\r\n\r\n      model.Violation.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: ILocViolationRequest) {\r\n    this.showLoading();\r\n    this.violationsService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ILocViolationModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.violationId = res.data.id;\r\n          this.formCtrls.id.setValue(this.violationId);\r\n          let url = `/localization-setup/${this.moduleId}/violations/edit/${this.violationId}`;\r\n          if (!this.data.isDialog) this.navigateTo(url);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ILocViolationRequest) {\r\n    this.showLoading();\r\n    this.violationsService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ILocViolationModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.violation = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    // if (this.violationId == 0)\r\n    this.form.reset({\r\n      id: 0,\r\n      ismoney: false,\r\n      renew_By_Period: false,\r\n      display_In_Result: false,\r\n    });\r\n    // else this.violationToEdit();\r\n    this.submitted = false;\r\n  }\r\n\r\n  moneyOrPenaltyRadioList: RadioButtonModel[] = [\r\n    {\r\n      value: true,\r\n      label: \"money\",\r\n    },\r\n    {\r\n      value: false,\r\n      label: \"penalty\",\r\n    },\r\n  ];\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title [id]=\"formCtrls.id.value\"\r\n                    addTitle=\"violations\"\r\n                    editTitle=\"editViolation\">\r\n        </page-title>\r\n\r\n        <close-dialog-btn *ngIf=\"data.isDialog\" (click)=\"dialogRef.close()\"></close-dialog-btn>\r\n\r\n        <ng-container *ngIf=\"!data.isDialog\">\r\n          <!-- add new btn -->\r\n          <app-add-new-btn *ngIf=\"formCtrls.id.value > 0\"\r\n                           url=\"/localization-setup/{{ moduleId }}/violations/add\"\r\n                           [params]=\"parentParam\">\r\n          </app-add-new-btn>\r\n\r\n          <!-- back btn -->\r\n          <app-back-btn url=\"/localization-setup/{{ moduleId }}/violations/index\"\r\n                        [params]=\"pageParams\">\r\n          </app-back-btn>\r\n        </ng-container>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input [control]=\"formCtrls.en_Name\"\r\n                             [submitted]=\"submitted\"\r\n                             label=\"en_Name\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.variableCode\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"variableCode\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.renew_Day\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"renew_Month\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.fromValue\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"fromValue\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.toValue\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"toValue\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.measureUnit\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"measureUnit\">\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <local-violation-types\r\n                    [control]=\"formCtrls.violation_Type_ID\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </local-violation-types>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-local-types\r\n                    [control]=\"formCtrls.type\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </app-local-types>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 mtop-14\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.renew_By_Period\"\r\n                    label=\"renew_By_Period\"\r\n                  ></app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12 mtop-14\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.display_In_Result\"\r\n                    label=\"display_In_Result\"\r\n                  ></app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12 mtop-14\">\r\n                  <app-radio-button\r\n                    [radioList]=\"moneyOrPenaltyRadioList\"\r\n                    [control]=\"formCtrls.ismoney\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-radio-button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ParamsService } from \"app/shared/services/params.service\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\n\r\n@Component({\r\n  selector: \"app-localization-core\",\r\n  templateUrl: \"./localization-core.component.html\",\r\n  styleUrls: [\"./localization-core.component.scss\"]\r\n})\r\nexport class LocalizationCoreComponent implements OnInit {\r\n  countryId = new FormControl(null);\r\n  versionId = new FormControl(null);\r\n\r\n  constructor(public paramsService: ParamsService) {\r\n    this.countryId.setValue(Storage.getCountryID);\r\n    this.versionId.setValue(Storage.getVersionID);\r\n    // store countryID\r\n    this.countryId.valueChanges.subscribe(countryId => {\r\n      paramsService.CountryID$.next(countryId);\r\n      Storage.setCountryID(countryId);\r\n    });\r\n\r\n    // store versionID\r\n    this.versionId.valueChanges.subscribe(versionId => {\r\n      paramsService.VersionID$.next(versionId);\r\n      Storage.setVersionID(versionId);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row pt-3 px-0 mx-0 localization-core\">\r\n  <div class=\"col-md-2 col-12\">\r\n    <app-versions-dropdown [control]=\"versionId\" [setDefaultVal]=\"true\">\r\n    </app-versions-dropdown>\r\n  </div>\r\n\r\n  <div class=\"col-md-2 col-12\">\r\n    <app-country-dropdown [control]=\"countryId\" [setDefaultVal]=\"true\">\r\n    </app-country-dropdown>\r\n  </div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import {\r\n  ILocViolationModel,\r\n  ILocViolationResponse,\r\n} from \"../models/localization-violations\";\r\nimport { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\n\r\nexport function locViolationToMap(violations: ILocViolationResponse[]): ILocViolationModel[] {\r\n  return violations.map((violation) => {\r\n    return <ILocViolationModel>{\r\n      ...violation.loc_Violation,\r\n      variableCode: violation.loc_Variable?.code,\r\n      violationType: msgTranslate(violation.loc_Violation?.loc_Violation_Type?.name),\r\n      typeName: msgTranslate(violation.loc_Violation?.loc_Type?.en_Name),\r\n      display_In_Result: violation.loc_Variable?.display_In_Result,\r\n      //   moneyOrPenalty: violation.loc_Violation.ismoney ? \"money\" : \"penalty\"\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  ILocPenaltyModel,\r\n  ILocPenaltyRequest,\r\n} from \"../models/localization-penalties\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LocPenaltiesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ILocPenaltyRequest) {\r\n    return this.post<IResponse<ILocPenaltyModel>>(\"Penalities/Create\", data, {\r\n      params: this._paramsService.versionCountryParams,\r\n    });\r\n  }\r\n\r\n  update(data: ILocPenaltyRequest) {\r\n    return this.post<IResponse<ILocPenaltyModel>>(\"Penalities/Edit\", data, {\r\n      params: this._paramsService.versionCountryParams,\r\n    });\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ILocPenaltyModel[]>>(\"Penalities/GetList\", {\r\n      params: {\r\n        ...params,\r\n        ...this._paramsService.versionCountryParams,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ILocPenaltyModel[]>>(\"Penalities/GetAll\", {\r\n      params: this._paramsService.versionCountryParams,\r\n    }).pipe(\r\n      map((res) => {\r\n        res.data.map((item: ILocPenaltyModel) => {\r\n          item.ar_Name = item.name;\r\n          item.en_Name = item.name;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Penalities/Delete\", {\r\n      params: {Id: Id, ...this._paramsService.versionCountryParams},\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  ILocVersionsGetAllDropdown,\r\n  ILocVersion,\r\n  ILocVersionRequest,\r\n} from \"../models/localization-version\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LocVersionService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ILocVersion[]>>(\"Version/GetList\", {\r\n      params: {\r\n        ...params,\r\n        ...this._paramsService.versionCountryParams,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(data: ILocVersionRequest) {\r\n    return this.post<IResponse<ILocVersion>>(\"Version/Create\", data);\r\n  }\r\n\r\n  update(data: ILocVersion) {\r\n    return this.post<IResponse<ILocVersion>>(\"Version/Edit\", data);\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ILocVersionsGetAllDropdown[]>>(\"Version/GetAll\", {\r\n      params: this._paramsService.versionCountryParams,\r\n    });\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<ILocVersionsGetAllDropdown[]>>(\"Version/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${id}`,\r\n        ...this._paramsService.versionCountryParams,\r\n      },\r\n    });\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"Version/Delete\", {\r\n      params: { id: id, ...this._paramsService.versionCountryParams },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  ILocViolationTypeModel,\r\n  ILocViolationTypeRequest,\r\n} from \"../models/localization-violation-types\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LocViolationTypesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ILocViolationTypeRequest) {\r\n    return this.post<IResponse<ILocViolationTypeModel>>(\r\n      \"ViolationType/Create\",\r\n      data,\r\n      {\r\n        params: this._paramsService.versionCountryParams,\r\n      }\r\n    );\r\n  }\r\n\r\n  update(data: ILocViolationTypeRequest) {\r\n    return this.post<IResponse<ILocViolationTypeModel>>(\r\n      \"ViolationType/Edit\",\r\n      data,\r\n      {\r\n        params: this._paramsService.versionCountryParams,\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ILocViolationTypeModel[]>>(\r\n      \"ViolationType/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          ...this._paramsService.versionCountryParams,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ILocViolationTypeModel[]>>(\"ViolationType/GetAll\", {\r\n      params: this._paramsService.versionCountryParams,\r\n    }).pipe(\r\n      map((res) => {\r\n        res.data.map((item: ILocViolationTypeModel) => {\r\n          item.ar_Name = item.name;\r\n          item.en_Name = item.name;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"ViolationType/Delete\", {\r\n      params: { Id: Id, ...this._paramsService.versionCountryParams },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  ILocViolationAllType,\r\n  ILocViolationResponse,\r\n  ILocViolationRequest,\r\n  ILocViolationModel,\r\n} from \"../models/localization-violations\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LocViolationsService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  expand = `${db.Loc_Attendance_Element}.${db.Loc_Violation}/${db.Loc_Type},${db.Loc_Attendance_Element}.${db.Loc_Violation}/${db.Loc_Violation_Type}`;\r\n\r\n  create(data: ILocViolationRequest) {\r\n    return this.post<IResponse<ILocViolationModel>>(\r\n      \"Violation/Create\",\r\n      data,\r\n      {\r\n        params: this._paramsService.versionCountryParams,\r\n      }\r\n    );\r\n  }\r\n\r\n  update(data: ILocViolationRequest) {\r\n    return this.post<IResponse<ILocViolationModel>>(\r\n      \"Violation/Edit\",\r\n      data,\r\n      {\r\n        params: this._paramsService.versionCountryParams,\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ILocViolationResponse[]>>(\"Violation/GetList\", {\r\n      params: {\r\n        ...params,\r\n        ...this._paramsService.versionCountryParams,\r\n        $expand: this.expand,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ILocViolationResponse[]>>(\"Violation/GetAll\", {\r\n      params: {\r\n        ...this._paramsService.versionCountryParams,\r\n        $expand: this.expand,\r\n      },\r\n\r\n    });\r\n  }\r\n\r\n  getById(violationId: number) {\r\n    return this.get<IResponse<ILocViolationResponse[]>>(\"Violation/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${violationId}`,\r\n        $expand: this.expand,\r\n        ...this._paramsService.versionCountryParams,\r\n      },\r\n    });\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Violation/Delete\", {\r\n      params: {Id: Id, ...this._paramsService.versionCountryParams},\r\n    });\r\n  }\r\n\r\n  // minutes / day / month\r\n  getAllTypes() {\r\n    return this.get<IResponse<ILocViolationAllType[]>>(\"Violation/GetAll_Type\", {\r\n      params: this._paramsService.versionCountryParams,\r\n    }).pipe(\r\n      map((res) => {\r\n        res.data.map((item: ILocViolationAllType) => {\r\n          item.ar_Name = item.en_Name;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  ICustodyModel,\r\n  ICustodyRequest,\r\n} from \"app/system-setup/org-management-setup/models/custodies\";\r\nimport { CustodiesService } from \"app/system-setup/org-management-setup/services/custodies.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-custodies\",\r\n  templateUrl: \"./custodies.component.html\",\r\n  styleUrls: [\"./custodies.component.scss\"],\r\n})\r\nexport class CustodiesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<ICustodyModel>;\r\n\r\n  constructor(\r\n    public custodiesService: CustodiesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<CustodiesComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_name.setValue(this.data.value);\r\n      this.formCtrls.en_name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.custodiesService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ICustodyModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ICustodyRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_name,\r\n        En_Name: this.form.value.en_name,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: ICustodyRequest) {\r\n    this.showLoading();\r\n    this.custodiesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ICustodyModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ICustodyRequest) {\r\n    this.showLoading();\r\n    this.custodiesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ICustodyModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  custodyToEdit(custody: ICustodyModel) {\r\n    this.form.patchValue(custody);\r\n    this.formCtrls.ar_name.setValue(custody.ar_Name);\r\n    this.formCtrls.en_name.setValue(custody.en_Name);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(custody: ICustodyModel): void {\r\n    let msg = this.msgTranslate(custody.ar_Name, custody.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(custody);\r\n    });\r\n  }\r\n\r\n  delete(custody: ICustodyModel) {\r\n    this.showLoading();\r\n    this.custodiesService.Delete(custody.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (custody.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"custodies\"\r\n          editTitle=\"editCustody\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [exportService]=\"custodiesService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          [actions]=\"rowFunctions\"\r\n          (editRow)=\"custodyToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IJobFamilyModel, IJobFamilyRequest } from \"app/system-setup/org-management-setup/models/job-families\";\r\nimport { JobFamiliesService } from \"app/system-setup/org-management-setup/services/job-families.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-job-families\",\r\n  templateUrl: \"./job-families.component.html\",\r\n  styleUrls: [\"./job-families.component.scss\"],\r\n})\r\nexport class JobFamiliesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IJobFamilyModel>;\r\n\r\n  constructor(\r\n    public jobFamiliesService: JobFamiliesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<JobFamiliesComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_name.setValue(this.data.value);\r\n      this.formCtrls.en_name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    if (!this.data.isDialog) {\r\n      this.jobFamiliesService.getList(params)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<IJobFamilyModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(res.data);\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n            this.page.meta = res.meta;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IJobFamilyRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_name,\r\n        En_Name: this.form.value.en_name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IJobFamilyRequest) {\r\n    this.showLoading();\r\n    this.jobFamiliesService.create(model).subscribe((res: IResponse<IJobFamilyModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.lastPage, this.page.pageSize);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IJobFamilyRequest) {\r\n    this.showLoading();\r\n    this.jobFamiliesService.update(model).subscribe((res: IResponse<IJobFamilyModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  jobFamilyToEdit(jobFamily: IJobFamilyModel) {\r\n    this.form.patchValue(jobFamily);\r\n    this.formCtrls.ar_name.setValue(jobFamily.ar_Name);\r\n    this.formCtrls.en_name.setValue(jobFamily.en_Name);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(jobFamily: IJobFamilyModel): void {\r\n    let msg = this.msgTranslate(jobFamily.ar_Name, jobFamily.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(jobFamily);\r\n    });\r\n  }\r\n\r\n  delete(jobFamily: IJobFamilyModel) {\r\n    this.showLoading();\r\n    this.jobFamiliesService.Delete(jobFamily.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (jobFamily.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"jobFamilies\"\r\n          editTitle=\"editJobFamily\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [exportService]=\"jobFamiliesService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          [actions]=\"rowFunctions\"\r\n          (editRow)=\"jobFamilyToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n    >\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IOrganizationTypeModel,\r\n  IOrganizationTypeRequest,\r\n} from \"app/system-setup/org-management-setup/models/organization-types\";\r\nimport { OrganizationTypesService } from \"app/system-setup/org-management-setup/services/organization-types.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-organization-types\",\r\n  templateUrl: \"./organization-types.component.html\",\r\n  styleUrls: [\"./organization-types.component.scss\"],\r\n})\r\nexport class OrganizationTypesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IOrganizationTypeModel>;\r\n\r\n  constructor(\r\n    public organizationTypesService: OrganizationTypesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<OrganizationTypesComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_name.setValue(this.data.value);\r\n      this.formCtrls.en_name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    if (!this.data.isDialog) {\r\n      this.organizationTypesService\r\n        .getList(params)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<IOrganizationTypeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(res.data);\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n            this.page.meta = res.meta;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IOrganizationTypeRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_name,\r\n        En_Name: this.form.value.en_name,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IOrganizationTypeRequest) {\r\n    this.showLoading();\r\n    this.organizationTypesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IOrganizationTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IOrganizationTypeRequest) {\r\n    this.showLoading();\r\n    this.organizationTypesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IOrganizationTypeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  organizationTypeToEdit(organizationType: IOrganizationTypeModel) {\r\n    this.form.patchValue(organizationType);\r\n    this.formCtrls.ar_name.setValue(organizationType.ar_Name);\r\n    this.formCtrls.en_name.setValue(organizationType.en_Name);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(organizationType: IOrganizationTypeModel): void {\r\n    let msg = this.msgTranslate(organizationType.ar_Name, organizationType.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(organizationType);\r\n    });\r\n  }\r\n\r\n  delete(organizationType: IOrganizationTypeModel) {\r\n    this.showLoading();\r\n    this.organizationTypesService.Delete(organizationType.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (organizationType.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"organizationTypes\"\r\n          editTitle=\"editOrganizationType\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [exportService]=\"organizationTypesService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          [actions]=\"rowFunctions\"\r\n          (editRow)=\"organizationTypeToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ICompetenceLevelModel,\r\n  ICompetenceLevelRequest,\r\n} from \"app/system-setup/org-management-setup/models/competence-level\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CompetenceLevelService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ICompetenceLevelRequest) {\r\n    return this.post<IResponse<ICompetenceLevelModel>>(\r\n      \"CompetenceLevel/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ICompetenceLevelRequest) {\r\n    return this.post<IResponse<ICompetenceLevelModel>>(\r\n      \"CompetenceLevel/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ICompetenceLevelModel[]>>(\r\n      \"CompetenceLevel/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ICompetenceLevelModel[]>>(\r\n      \"CompetenceLevel/GetAll\"\r\n    );\r\n  }\r\n\r\n  getAllByCompetenceId(competenceId: number) {\r\n    return this.get<IResponse<ICompetenceLevelModel[]>>(\r\n      \"CompetenceLevel/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `Core_Competence_Detail/any(e: e/Competence_ID eq ${competenceId})`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"CompetenceLevel/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n\tICompetenceTypeModel,\r\n\tICompetenceTypeRequest,\r\n} from \"app/system-setup/org-management-setup/models/competence-type\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class CompetenceTypeService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: ICompetenceTypeRequest) {\r\n\t\treturn this.post<IResponse<ICompetenceTypeModel>>(\"Competencetype/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: ICompetenceTypeRequest) {\r\n\t\treturn this.post<IResponse<ICompetenceTypeModel>>(\"CompetenceType/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<ICompetenceTypeModel[]>>(\"CompetenceType/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<ICompetenceTypeModel[]>>(\"CompetenceType/GetAll\");\r\n\t}\r\n\r\n\tDelete(Id: number) {\r\n\t\treturn this.delete<IResponse>(\"CompetenceType/Delete\", {\r\n\t\t\tparams: { Id: Id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ICustodyModel, ICustodyRequest } from \"app/system-setup/org-management-setup/models/custodies\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class CustodiesService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: ICustodyRequest) {\r\n\t\treturn this.post<IResponse<ICustodyModel>>(\"custodies/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: ICustodyRequest) {\r\n\t\treturn this.post<IResponse<ICustodyModel>>(\"custodies/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<ICustodyModel[]>>(\"Custodies/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<ICustodyModel[]>>(\"Custodies/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"custodies/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IGradeModel, IGradeRequest } from \"app/system-setup/org-management-setup/models/grades\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class GradesService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: IGradeRequest) {\r\n\t\treturn this.post<IResponse<IGradeModel>>(\"Grade/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: IGradeRequest) {\r\n\t\treturn this.post<IResponse<IGradeModel>>(\"Grade/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IGradeModel[]>>(\"Grade/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IGradeModel[]>>(\"Grade/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"Grade/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IJobFamilyRequest, IJobFamilyModel } from \"app/system-setup/org-management-setup/models/job-families\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class JobFamiliesService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: IJobFamilyRequest) {\r\n\t\treturn this.post<IResponse<IJobFamilyModel>>(\"JobFamily/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: IJobFamilyRequest) {\r\n\t\treturn this.post<IResponse<IJobFamilyModel>>(\"JobFamily/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IJobFamilyModel[]>>(\"JobFamily/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.get<IResponse<IJobFamilyModel[]>>(\"JobFamily/GetAll\");\r\n\t}\r\n\r\n\tgetAllByOrgId(organizationId: number) {\r\n\t\treturn this.get<IResponse<IJobFamilyModel[]>>(\"JobFamily/GetAll_JobFamilyByOrgID\", {\r\n\t\t\tparams: {\r\n\t\t\t\tId: organizationId,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tDelete(Id: number) {\r\n\t\treturn this.delete<IResponse>(\"jobfamily/Delete\", {\r\n\t\t\tparams: { Id: Id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IOrganizationTypeModel,\r\n  IOrganizationTypeRequest,\r\n} from \"app/system-setup/org-management-setup/models/organization-types\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class OrganizationTypesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IOrganizationTypeRequest) {\r\n    return this.post<IResponse<IOrganizationTypeModel>>(\"orgType/Create\", data);\r\n  }\r\n\r\n  update(data: IOrganizationTypeRequest) {\r\n    return this.post<IResponse<IOrganizationTypeModel>>(\"orgType/Edit\", data);\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IOrganizationTypeModel[]>>(\r\n      \"OrgType/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IOrganizationTypeModel[]>>(\"OrgType/GetAll\");\r\n  }\r\n\r\n  getAllInCurrentStructure() {\r\n    return this.get<IResponse<IOrganizationTypeModel[]>>(\r\n      \"OrgType/GetAll_CurrentStructure\"\r\n    );\r\n  }\r\n\r\n  getByOrgId(orgId: number) {\r\n    return this.get<IResponse<IOrganizationTypeModel[]>>(\r\n      \"OrgType/GetAll_CurrentStructure\",\r\n      {\r\n        params: { org_ID: orgId },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"orgType/Delete\", {\r\n      params: { id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IOrganizationModel,\r\n  IOrganizationRequest,\r\n} from \"app/system-setup/org-management-setup/models/organizations\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IEmployeeCardModel } from \"app/personnel-setup/models/employees\";\r\nimport { employeeToMap } from \"app/personnel-setup/mapper/employee\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class OrganizationsService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IOrganizationRequest) {\r\n    return this.post<IResponse<IOrganizationModel>>(\"org/Create\", data);\r\n  }\r\n\r\n  update(data: IOrganizationRequest) {\r\n    return this.post<IResponse<IOrganizationModel>>(\"org/Edit\", data);\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IOrganizationModel[]>>(\"Org/GetList\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IOrganizationModel[]>>(\"Org/GetAll\").pipe(\r\n      map((res: IResponse<IOrganizationModel[]>) => {\r\n        res.data.map(e => {\r\n          delete e.logo;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  GetAllInCurrentStructureByOrgType(orgTypeId: number) {\r\n    return this.get<IResponse<IOrganizationModel[]>>(\r\n      \"orgstructure/Get_CurrentOrganizationHierarchy\",\r\n      {\r\n        params: {\r\n          OrgType: orgTypeId,\r\n          Level: 1,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  GetAllByOrgTypeAndStructure(orgTypeId: number, structureId: number) {\r\n    return this.get<IResponse<IOrganizationModel[]>>(\"orgstructure/Get_OrganizationHierarchy\", {\r\n      params: {\r\n        StructureId: structureId,\r\n        OrgType: orgTypeId,\r\n        Level: 1,\r\n      },\r\n    });\r\n  }\r\n\r\n  GetAllUnAssignedByStructureId(structureId: number) {\r\n    return this.get<IResponse<IOrganizationModel[]>>(\r\n      \"Org/GetAll_NotAssignStructure\",\r\n      {\r\n        params: {\r\n          StructureID: structureId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Org/Delete\", {\r\n      params: {Id: Id},\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { loanTypeToMap } from \"app/system-setup/payroll-setup/mapper/loan-type\";\r\nimport {\r\n  ILoanTypeModel,\r\n  ILoanTypeRequest,\r\n} from \"app/system-setup/payroll-setup/models/loan-types\";\r\nimport { LoanTypesService } from \"app/system-setup/payroll-setup/services/loan-types.service\";\r\nimport { RadioButtonModel } from \"app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-loan-types\",\r\n  templateUrl: \"./loan-types.component.html\",\r\n  styleUrls: [\"./loan-types.component.scss\"],\r\n})\r\nexport class LoanTypesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  optionalColomns: string[] = [\r\n    \"variableCode\",\r\n    \"display_In_Result\",\r\n    \"lastPeriodCalculationTypeName\",\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<ILoanTypeModel>;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    public loanTypesService: LoanTypesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<LoanTypesComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      variableCode: [null, CustomValidator.variableCodeValidators],\r\n      display_In_Result: [null],\r\n      lastPeriodCalculationType: [null],\r\n      lastPeriodCalculationTypeName: [null],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.removePageParams();\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    if (!this.data.isDialog) {\r\n      this.loanTypesService\r\n        .getList(params)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<ILoanTypeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            if (res.data.length == 0 && page > 1) {\r\n              this.getList(this.prevPage);\r\n              return;\r\n            }\r\n            this.dataSource = new MatTableDataSource(loanTypeToMap(res.data));\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n            this.page.meta = res.meta;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ILoanTypeRequest = {\r\n        loanType: {\r\n          ID: this.form.value.id,\r\n          Ar_Name: this.form.value.ar_Name,\r\n          En_Name: this.form.value.en_Name,\r\n          lastPeriodCalculationType: this.form.value.lastPeriodCalculationType,\r\n          lastPeriodCalculationTypeName:\r\n          this.form.value.lastPeriodCalculationTypeName,\r\n        },\r\n        VariableCode: this.form.value.variableCode.trim(),\r\n        Display_In_Result: this.form.value.display_In_Result ?? false,\r\n      };\r\n\r\n      model.loanType.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: ILoanTypeRequest) {\r\n    this.showLoading();\r\n    this.loanTypesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ILoanTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ILoanTypeRequest) {\r\n    this.showLoading();\r\n    this.loanTypesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ILoanTypeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  loanTypeToEdit(loanType: ILoanTypeModel) {\r\n    this.form.patchValue(loanType);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(loanType: ILoanTypeModel): void {\r\n    let msg = this.msgTranslate(loanType.ar_Name, loanType.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(loanType);\r\n    });\r\n  }\r\n\r\n  delete(loanType: ILoanTypeModel) {\r\n    this.showLoading();\r\n    this.loanTypesService.Delete(loanType.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (loanType.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  lastPeriodCalculationList: RadioButtonModel[] = [\r\n    {\r\n      value: 1,\r\n      label: \"lastConfirmedPeriod\",\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"lastPeriod\",\r\n    },\r\n  ];\r\n\r\n  onChangeCalculationType(value: number | any) {\r\n    let CalculationTypeName: string = null;\r\n    if (value == 1) CalculationTypeName = \"Last Confirmed Period\";\r\n    else if (value == 2) CalculationTypeName = \"Last Period\";\r\n    // else CalculationTypeName = null;\r\n    this.formCtrls.lastPeriodCalculationTypeName.setValue(CalculationTypeName);\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"loanTypes\"\r\n          editTitle=\"editLoanType\"\r\n        >\r\n        </page-title>\r\n        <!-- close btn -->\r\n\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.variableCode\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"variableCode\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12 ptop-15 pbottom-15\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.display_In_Result\"\r\n                    label=\"display_In_Result\"\r\n                  ></app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12 ptop-15\">\r\n                  <app-radio-button\r\n                    [control]=\"formCtrls.lastPeriodCalculationType\"\r\n                    [submitted]=\"submitted\"\r\n                    [radioList]=\"lastPeriodCalculationList\"\r\n                    (change)=\"onChangeCalculationType($event)\"\r\n                  ></app-radio-button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\" [exportService]=\"loanTypesService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          [actions]=\"rowFunctions\"\r\n          (editRow)=\"loanTypeToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { ILoanRuleModel } from \"../models/loan-rules\";\r\nimport { ILoanTypeModel } from \"../models/loan-types\";\r\n\r\nexport function loanTypeToMap(loanTypes: ILoanTypeModel[]): ILoanTypeModel[] {\r\n  return loanTypes.map((loanType) => {\r\n    return <ILoanTypeModel>{\r\n      ...loanType,\r\n      variableCode: loanType.paY_Loan_Type_Variable[0].pay_Variable?.code,\r\n      display_In_Result:\r\n        loanType.paY_Loan_Type_Variable[0].pay_Variable?.display_In_Result,\r\n    };\r\n  });\r\n}\r\n\r\nexport function loanRuleToMap(loanRules: ILoanRuleModel[]): ILoanRuleModel[] {\r\n  return loanRules.map((loanRule) => {\r\n    return <ILoanRuleModel>{\r\n      ...loanRule,\r\n      jobTitle: msgTranslate(\r\n        loanRule.core_Job_Title?.ar_Name,\r\n        loanRule.core_Job_Title?.en_Name\r\n      ),\r\n      payment: msgTranslate(\r\n        loanRule.pay_Payment?.ar_Name,\r\n        loanRule.pay_Payment?.en_Name\r\n      ),\r\n      variable: msgTranslate(\r\n        loanRule.pay_Variable?.arName,\r\n        loanRule.pay_Variable?.name\r\n      ),\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IElemenGroupModel } from \"../models/element-group\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ElementGroupService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  GetAll() {\r\n    return this.get<IResponse<IElemenGroupModel[]>>(\r\n      \"ElementGroupSetup/GetAll\"\r\n    ).pipe(\r\n      map((res: IResponse<IElemenGroupModel[]>) => {\r\n        res.data.map((item: IElemenGroupModel) => {\r\n          item.ar_Name = item.ar_NAme;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ILoanTypeModel, ILoanTypeRequest } from \"../models/loan-types\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LoanTypesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ILoanTypeRequest) {\r\n    return this.post<IResponse<ILoanTypeModel>>(\"LoanTypeSetup/Create\", data);\r\n  }\r\n\r\n  update(data: ILoanTypeRequest) {\r\n    return this.post<IResponse<ILoanTypeModel>>(\"LoanTypeSetup/Edit\", data);\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ILoanTypeModel[]>>(\"LoanTypeSetup/GetList\", {\r\n      params: {\r\n        ...params,\r\n        $expand: `${db.PAY_Loan_Type_Variable},${db.PAY_Loan_Type_Variable}/${db.PAY_Variable}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ILoanTypeModel[]>>(\"LoanTypeSetup/GetAll\");\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"LoanTypeSetup/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n  \r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  IS4SystemInstanceModel,\r\n  IS4SystemInstanceRequest,\r\n} from \"app/system-setup/s4-setup/models/s4-system-instance\";\r\nimport { S4SytemInstanceService } from \"app/system-setup/s4-setup/services/s4-sytem-instance.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-add-s4-system-instance\",\r\n  templateUrl: \"./add-s4-system-instance.component.html\",\r\n  styleUrls: [\"./add-s4-system-instance.component.scss\"],\r\n})\r\nexport class AddS4SystemInstanceComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  // s4SystemInstance: IS4SystemInstanceModel;\r\n  s4SystemInstanceId: number;\r\n\r\n  constructor(\r\n    private s4SytemInstanceService: S4SytemInstanceService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddS4SystemInstanceComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.s4SystemInstanceId = Number(params.get(\"s4SystemInstanceId\")) ?? 0;\r\n      // if (this.s4SystemInstanceId > 0 && this.CheckNoBusinessOrCompany())\r\n      //   this.getById();\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      api_Url_Prefix: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      userName: [null, [Validators.required]],\r\n      password: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      s4_Client_Code: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      s4_Company_Code: [\r\n        null,\r\n        [Validators.required, CustomValidator.whiteSpace],\r\n      ],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    // this.s4SystemInstance = null;\r\n    if (this.s4SystemInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getById();\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getById() {\r\n    this.showLoading();\r\n    this.s4SytemInstanceService\r\n      .getById(this.s4SystemInstanceId)\r\n      .subscribe((res: IResponse<IS4SystemInstanceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // this.s4SystemInstance = res.data[0];\r\n          this.s4SystemInstanceToEdit(res.data[0]);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  s4SystemInstanceToEdit(s4SystemInstance: IS4SystemInstanceModel) {\r\n    this.form.patchValue(s4SystemInstance);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IS4SystemInstanceRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n        Api_Url_Prefix: this.form.value.api_Url_Prefix,\r\n        UserName: this.form.value.userName,\r\n        Password: this.form.value.password,\r\n        S4_Client_Code: this.form.value.s4_Client_Code,\r\n        S4_Company_Code: this.form.value.s4_Company_Code,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IS4SystemInstanceRequest) {\r\n    this.showLoading();\r\n    this.s4SytemInstanceService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IS4SystemInstanceModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          // this.clearForm();\r\n          this.s4SystemInstanceId = res.data.id;\r\n          this.formCtrls.id.setValue(this.s4SystemInstanceId);\r\n          let url = `/s4-setup/${this.moduleId}/s4-system-instance/edit/${this.s4SystemInstanceId}`;\r\n          if (!this.data.isDialog) this.navigateTo(url);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.s4SystemInstance = res.data;\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IS4SystemInstanceRequest) {\r\n    this.showLoading();\r\n    this.s4SytemInstanceService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IS4SystemInstanceModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.s4SystemInstance = res.data;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    // if (this.s4SystemInstanceId == 0)\r\n    this.form.reset({id: 0});\r\n    // else this.s4SystemInstanceToEdit();\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"s4SystemInstance\"\r\n          editTitle=\"editS4SystemInstance\"\r\n        >\r\n        </page-title>\r\n        <!-- close btn -->\r\n\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n\r\n        <!-- add new btn -->\r\n        <app-add-new-btn\r\n          *ngIf=\"formCtrls.id.value > 0\"\r\n          url=\"/s4-setup/{{ moduleId }}/s4-system-instance/add\"\r\n          [params]=\"parentParam\"\r\n        >\r\n        </app-add-new-btn>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          *ngIf=\"!data.isDialog\"\r\n          url=\"/s4-setup/{{ moduleId }}/s4-system-instance/index\"\r\n          [params]=\"pageParams\"\r\n        ></app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-tab-group\r\n        class=\"col-12 w-100\"\r\n        [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\"\r\n      >\r\n        <mat-tab label=\"{{ 's4SystemInstance' | translate | titlecase }}\">\r\n          <mat-card-content class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <form [formGroup]=\"form\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.en_Name\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"en_Name\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.ar_Name\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"ar_Name\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.api_Url_Prefix\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"api_Url_Prefix\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.userName\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"userName\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.password\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"password\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.s4_Client_Code\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"s4_Client_Code\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.s4_Company_Code\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"s4_Company_Code\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n          <mat-card-actions align=\"end\">\r\n            <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n            </submit-btn>\r\n            <reset-form-btn\r\n              *ngIf=\"formCtrls.id.value == 0\"\r\n              (click)=\"clearForm()\"\r\n            >\r\n            </reset-form-btn>\r\n          </mat-card-actions>\r\n        </mat-tab>\r\n\r\n        <mat-tab\r\n          label=\"{{ 's4Methods' | translate | titlecase }}\"\r\n          *ngIf=\"!data.isDialog\"\r\n        >\r\n          <app-s4-system-instance-methods\r\n            [s4SystemInstanceId]=\"s4SystemInstanceId\"\r\n          ></app-s4-system-instance-methods>\r\n        </mat-tab>\r\n\r\n        <mat-tab\r\n          label=\"{{ 'integrationPurpose' | translate | titlecase }}\"\r\n          *ngIf=\"!data.isDialog\"\r\n        >\r\n          <app-s4-system-instance-purpose\r\n            [s4SystemInstanceId]=\"s4SystemInstanceId\"\r\n          ></app-s4-system-instance-purpose>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IS4SystemInstanceMethodModel,\r\n  IS4SystemInstanceMethodRequest,\r\n} from \"app/system-setup/s4-setup/models/s4-system-instance\";\r\nimport { S4SystemInstanceMethodsService } from \"app/system-setup/s4-setup/services/s4-system-instance-methods.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-s4-system-instance-methods\",\r\n  templateUrl: \"./s4-system-instance-methods.component.html\",\r\n  styleUrls: [\"./s4-system-instance-methods.component.scss\"],\r\n})\r\nexport class S4SystemInstanceMethodsComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  @Input() s4SystemInstanceId: number;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"name\",\r\n    \"api_Method_Name\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IS4SystemInstanceMethodModel>;\r\n\r\n  constructor(\r\n    private s4SystemInstanceMethodsService: S4SystemInstanceMethodsService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.s4SystemInstanceId && this.CheckNoBusinessOrCompany())\r\n    //   this.getAll();\r\n\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNullable: true }],\r\n      name: [null, [Validators.required]],\r\n      api_Method_Name: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // if (changes.s4SystemInstanceId.currentValue > 0) this.getAll();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.s4SystemInstanceId && this.checkNoBusinessOrCompany())\r\n      this.getAll();\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.s4SystemInstanceMethodsService\r\n      .getAllBySystemInstanceId(this.s4SystemInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IS4SystemInstanceMethodModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IS4SystemInstanceMethodRequest = {\r\n        S4_instance_Id: this.s4SystemInstanceId,\r\n        // ID: this.form.value.id,\r\n        Name: this.form.value.name,\r\n        Api_Method_Name: this.form.value.api_Method_Name,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IS4SystemInstanceMethodRequest) {\r\n    this.showLoading();\r\n    this.s4SystemInstanceMethodsService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IS4SystemInstanceMethodModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(systemInstanceMethod: IS4SystemInstanceMethodModel): void {\r\n    let msg = this.msgTranslate(systemInstanceMethod.name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(systemInstanceMethod);\r\n    });\r\n  }\r\n\r\n  delete(systemInstanceMethod: IS4SystemInstanceMethodModel) {\r\n    this.showLoading();\r\n    this.s4SystemInstanceMethodsService\r\n      .Delete(systemInstanceMethod.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset(/* { id: 0 } */);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<mat-card-content class=\"container-fluid mb-0\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.name\"\r\n              [submitted]=\"submitted\"\r\n              label=\"name\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.api_Method_Name\"\r\n              [submitted]=\"submitted\"\r\n              label=\"api_Method_Name\"\r\n            ></app-input>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <submit-btn\r\n    (onClick)=\"submit()\"\r\n    [disabled]=\"!s4SystemInstanceId\"\r\n  ></submit-btn>\r\n</mat-card-actions>\r\n\r\n<ng-container *ngIf=\"s4SystemInstanceId\">\r\n  <mat-divider></mat-divider>\r\n\r\n  <app-material-table\r\n\t\t\t\t\t[isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [actions]=\"rowFunctions\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    [showPaginator]=\"false\"\r\n  >\r\n  </app-material-table>\r\n</ng-container>\r\n","import { Component, Inject, Input, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { s4SystemInstancePurposeToMap } from \"app/system-setup/s4-setup/mapper/s4-system-instance\";\r\nimport {\r\n  IS4SystemInstancePurposeModel,\r\n  IS4SystemInstancePurposeRequest,\r\n} from \"app/system-setup/s4-setup/models/s4-system-instance\";\r\nimport { S4SystemInstancePurposeService } from \"app/system-setup/s4-setup/services/s4-system-instance-purpose.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-s4-system-instance-purpose\",\r\n  templateUrl: \"./s4-system-instance-purpose.component.html\",\r\n  styleUrls: [\"./s4-system-instance-purpose.component.scss\"],\r\n})\r\nexport class S4SystemInstancePurposeComponent extends AppHelpers implements OnInit {\r\n  @Input() s4SystemInstanceId: number;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"purpose\", \"procedure_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IS4SystemInstancePurposeModel>;\r\n\r\n  constructor(\r\n    private s4SystemInstancePurposeService: S4SystemInstancePurposeService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<S4SystemInstancePurposeComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.s4SystemInstanceId && this.CheckNoBusinessOrCompany())\r\n    //   this.getAll();\r\n\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNullable: true }],\r\n      purpose: [null, [Validators.required]],\r\n      procedureName: [null, [Validators.required]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.purpose.setValue(this.data.value);\r\n      this.s4SystemInstanceId = this.data.id;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // if (changes.s4SystemInstanceId.currentValue > 0) this.getAll();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.s4SystemInstanceId && this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    if (!this.data.isDialog) {\r\n      this.s4SystemInstancePurposeService\r\n        .getAllBySystemInstanceId(this.s4SystemInstanceId)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponse<IS4SystemInstancePurposeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(s4SystemInstancePurposeToMap(res.data));\r\n            this.isLoaded = true;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IS4SystemInstancePurposeRequest = {\r\n        SystemInstance_ID: this.s4SystemInstanceId,\r\n        // ID: this.form.value.id,\r\n        Name: this.form.value.purpose,\r\n        Procedure_Name: this.form.value.procedureName,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IS4SystemInstancePurposeRequest) {\r\n    this.showLoading();\r\n    this.s4SystemInstancePurposeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IS4SystemInstancePurposeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(systemInstancePurpose: IS4SystemInstancePurposeModel): void {\r\n    let msg = this.msgTranslate(systemInstancePurpose.name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(systemInstancePurpose);\r\n    });\r\n  }\r\n\r\n  delete(systemInstancePurpose: IS4SystemInstancePurposeModel) {\r\n    this.showLoading();\r\n    this.s4SystemInstancePurposeService\r\n      .Delete(systemInstancePurpose.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset(/* { id: 0 } */);\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<mat-card-title class=\"pt-2\">\r\n  <!-- close btn -->\r\n\r\n  <close-dialog-btn\r\n    *ngIf=\"data.isDialog\"\r\n    (click)=\"onCloseDialog()\"\r\n  ></close-dialog-btn>\r\n\r\n</mat-card-title>\r\n<mat-card-content class=\"container-fluid mb-0\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.purpose\"\r\n              [submitted]=\"submitted\"\r\n              label=\"purpose\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.procedureName\"\r\n              [submitted]=\"submitted\"\r\n              label=\"procedure_Name\"\r\n            ></app-input>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\">\r\n  <submit-btn\r\n    (onClick)=\"submit()\"\r\n    [disabled]=\"!s4SystemInstanceId\"\r\n  ></submit-btn>\r\n</mat-card-actions>\r\n\r\n<ng-container *ngIf=\"s4SystemInstanceId && !data.isDialog\">\r\n  <mat-divider></mat-divider>\r\n\r\n  <app-material-table\r\n\t\t\t\t\t[isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [actions]=\"rowFunctions\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    [showPaginator]=\"false\"\r\n  >\r\n  </app-material-table>\r\n</ng-container>\r\n","import {\r\n  IS4SystemInstanceModel,\r\n  IS4SystemInstancePurposeModel,\r\n} from \"../models/s4-system-instance\";\r\n\r\nexport function s4SystemInstancePurposeToMap(\r\n  purposes: IS4SystemInstancePurposeModel[]\r\n): IS4SystemInstancePurposeModel[] {\r\n  return purposes.map((purpose) => {\r\n    return <IS4SystemInstancePurposeModel>{\r\n      ...purpose,\r\n      purpose: purpose.name,\r\n    };\r\n  });\r\n}\r\n\r\nexport function S4SystemInstanceToDisplay(\r\n  instances: IS4SystemInstanceModel[]\r\n): IS4SystemInstanceModel[] {\r\n  return instances.map((instance) => {\r\n    return <IS4SystemInstanceModel>{\r\n      id: instance.id,\r\n      ar_Name: instance.ar_Name,\r\n      en_Name: instance.en_Name,\r\n      api_Url_Prefix: instance.api_Url_Prefix,\r\n      password: instance.password,\r\n      userName: instance.userName,\r\n      s4_Client_Code: instance.s4_Client_Code,\r\n      s4_Company_Code: instance.s4_Company_Code,\r\n    };\r\n  });\r\n}\r\n","import { IGlAccountModel } from \"./../models/s4-account-map\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GlAccountService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAllByS4SystemInstnaceId(s4SystemInstnaceId: number) {\r\n    return this.get<IResponse<IGlAccountModel[]>>(\r\n      \"S4AccountMapSetup/GetAll_GlAccount\",\r\n      {\r\n        params: {\r\n          SysteminstanceId: s4SystemInstnaceId,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res) => {\r\n        // res.data = [\r\n        //   {\r\n        //     Gl: \"01542\",\r\n        //     GLName: \"01542-ff\",\r\n        //     id: null,\r\n        //   },\r\n        // ];\r\n        res.data.map((item: IGlAccountModel) => {\r\n          item.id = item.Gl;\r\n          item.ar_Name = item.GLName;\r\n          item.en_Name = item.GLName;\r\n          item.Gl_text = item.GLName.split(\"-\")[1] ?? item.GLName;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IS4SystemInstanceMethodModel,\r\n  IS4SystemInstanceMethodRequest,\r\n} from \"../models/s4-system-instance\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class S4SystemInstanceMethodsService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IS4SystemInstanceMethodRequest) {\r\n    return this.post<IResponse<IS4SystemInstanceMethodModel>>(\r\n      \"SystemInstanceS4Setup/Create_Methods_S4\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IS4SystemInstanceMethodRequest) {\r\n    return this.post<IResponse<IS4SystemInstanceMethodModel>>(\r\n      \"SystemInstanceS4Setup/Edit_Methods_S4\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllBySystemInstanceId(systemInstanceId: number) {\r\n    return this.get<IResponse<IS4SystemInstanceMethodModel[]>>(\r\n      \"SystemInstanceS4Setup/GetAll_Methods_S4\",\r\n      {\r\n        params: {\r\n          $filter: `s4_instance_Id eq ${systemInstanceId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"SystemInstanceS4Setup/Delete_Methods_S4\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport {\r\n  IS4SystemInstancePurposeModel,\r\n  IS4SystemInstancePurposeRequest,\r\n} from \"../models/s4-system-instance\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class S4SystemInstancePurposeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IS4SystemInstancePurposeRequest) {\r\n    return this.post<IResponse<IS4SystemInstancePurposeModel>>(\r\n      \"SystemInstanceS4Setup/Create_Purpose_S4\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IS4SystemInstancePurposeRequest) {\r\n    return this.post<IResponse<IS4SystemInstancePurposeModel>>(\r\n      \"SystemInstanceS4Setup/Edit_Purpose_S4\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllBySystemInstanceId(systemInstanceId: number) {\r\n    return this.get<IResponse<IS4SystemInstancePurposeModel[]>>(\r\n      \"SystemInstanceS4Setup/GetAll_Purpose_S4\",\r\n      {\r\n        params: {\r\n          $filter: `SystemInstance_ID eq ${systemInstanceId}`,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: IS4SystemInstancePurposeModel) => {\r\n          item.ar_Name = item.name;\r\n          item.en_Name = item.name;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"SystemInstanceS4Setup/Delete_Purpose_S4\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IS4SystemInstanceModel,\r\n  IS4SystemInstanceRequest,\r\n} from \"../models/s4-system-instance\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { S4SystemInstanceToDisplay } from \"../mapper/s4-system-instance\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class S4SytemInstanceService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IS4SystemInstanceRequest) {\r\n    return this.post<IResponse<IS4SystemInstanceModel>>(\r\n      \"SystemInstanceS4Setup/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IS4SystemInstanceRequest) {\r\n    return this.post<IResponse<IS4SystemInstanceModel>>(\r\n      \"SystemInstanceS4Setup/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IS4SystemInstanceModel[]>>(\r\n      \"SystemInstanceS4Setup/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IS4SystemInstanceModel[]>>(\r\n      \"SystemInstanceS4Setup/GetAll\"\r\n    )\r\n    .pipe(\r\n      map((res: IResponse<IS4SystemInstanceModel[]>) => {\r\n        return S4SystemInstanceToDisplay( res.data);\r\n      })\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<IS4SystemInstanceModel[]>>(\r\n      \"SystemInstanceS4Setup/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${id}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"SystemInstanceS4Setup/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  ISapSystemInstanceModel,\r\n  ISapSystemInstanceRequest,\r\n} from \"app/system-setup/sap-business-one-setup/models/system-instance\";\r\nimport { SystemInstanceService } from \"app/system-setup/sap-business-one-setup/services/system-instance.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-add-system-instance\",\r\n  templateUrl: \"./add-system-instance.component.html\",\r\n  styleUrls: [\"./add-system-instance.component.scss\"],\r\n})\r\nexport class AddSystemInstanceComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  // systemInstance: ISapSystemInstanceModel;\r\n  systemInstanceId: number;\r\n\r\n  constructor(\r\n    private systemInstanceService: SystemInstanceService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddSystemInstanceComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.systemInstanceId = Number(params.get(\"systemInstanceId\")) ?? 0;\r\n      // if (this.systemInstanceId > 0 && this.CheckNoBusinessOrCompany())\r\n      //   this.getById();\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      serverName: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      licenseServer: [null, [Validators.required]],\r\n      dbUserName: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      dbPassWord: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      companyDB: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      userName: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      password: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      unit_Mesaure: [null],\r\n      enumDbServerType: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    // this.systemInstance = null;\r\n    if (this.systemInstanceId > 0 && this.checkNoBusinessOrCompany()) this.getById();\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getById() {\r\n    this.showLoading();\r\n    this.systemInstanceService\r\n      .getById(this.systemInstanceId)\r\n      .subscribe((res: IResponse<ISapSystemInstanceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // this.systemInstance = res.data[0];\r\n          this.systemInstanceToEdit(res.data[0]);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  systemInstanceToEdit(systemInstance: ISapSystemInstanceModel) {\r\n    this.form.patchValue(systemInstance);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ISapSystemInstanceRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n        ServerName: this.form.value.serverName,\r\n        LicenseServer: this.form.value.licenseServer,\r\n        DBUserName: this.form.value.dbUserName,\r\n        DBPassWord: this.form.value.dbPassWord,\r\n        CompanyDB: this.form.value.companyDB,\r\n        UserName: this.form.value.userName,\r\n        Password: this.form.value.password,\r\n        Unit_Mesaure: this.form.value.unit_Mesaure,\r\n        enumDbServerType: this.form.value.enumDbServerType,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: ISapSystemInstanceRequest) {\r\n    this.showLoading();\r\n    this.systemInstanceService.create(model).subscribe((res: IResponse<ISapSystemInstanceModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        // this.clearForm();\r\n        this.systemInstanceId = res.data.id;\r\n        this.formCtrls.id.setValue(this.systemInstanceId);\r\n        let url = `/sap-business-one-setup/${this.moduleId}/system-instance/edit/${this.systemInstanceId}`;\r\n        if (!this.data.isDialog) this.navigateTo(url);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        // this.systemInstance = res.data;\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: ISapSystemInstanceRequest) {\r\n    this.showLoading();\r\n    this.systemInstanceService.update(model).subscribe((res: IResponse<ISapSystemInstanceModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        // this.clearForm();\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        // this.systemInstance = res.data;\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    // if (this.systemInstanceId == 0)\r\n    this.form.reset({id: 0});\r\n    // else this.systemInstanceToEdit();\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"sapSystemInstance\"\r\n          editTitle=\"editSapSystemInstance\"\r\n        >\r\n        </page-title>\r\n        <!-- close btn -->\r\n\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n\r\n        <!-- add new btn -->\r\n        <app-add-new-btn\r\n          *ngIf=\"formCtrls.id.value > 0\"\r\n          url=\"/sap-business-one-setup/{{ moduleId }}/system-instance/add\"\r\n          [params]=\"parentParam\"\r\n        >\r\n        </app-add-new-btn>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          *ngIf=\"!data.isDialog\"\r\n          url=\"/sap-business-one-setup/{{ moduleId }}/system-instance/index\"\r\n          [params]=\"pageParams\"\r\n        ></app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.serverName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"serverName\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.licenseServer\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"licenseServer\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.dbUserName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"dbUserName\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.dbPassWord\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"dbPassWord\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.companyDB\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"companyDB\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.userName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"userName\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.password\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"password\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.unit_Mesaure\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"unit_Mesaure\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.enumDbServerType\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"enumDbServerType\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-system-instance-purpose\r\n          [systemInstanceId]=\"systemInstanceId\"\r\n        ></app-system-instance-purpose>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges, Inject } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  ISapSystemInstancePurposeModel,\r\n  ISapSystemInstancePurposeRequest,\r\n} from \"app/system-setup/sap-business-one-setup/models/system-instance\";\r\nimport { SystemInstancePurposeService } from \"app/system-setup/sap-business-one-setup/services/system-instance-purpose.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { sapSystemInstancePurposeToMap } from \"app/system-setup/sap-business-one-setup/mapper/sap-system-instance\";\r\n\r\n@Component({\r\n  selector: \"app-system-instance-purpose\",\r\n  templateUrl: \"./system-instance-purpose.component.html\",\r\n  styleUrls: [\"./system-instance-purpose.component.scss\"],\r\n})\r\nexport class SystemInstancePurposeComponent extends AppHelpers implements OnInit {\r\n  @Input() systemInstanceId: any;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"purpose\", \"procedure_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<ISapSystemInstancePurposeModel>;\r\n\r\n  constructor(\r\n    private systemInstancePurposeService: SystemInstancePurposeService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<SystemInstancePurposeComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.systemInstanceId && this.CheckNoBusinessOrCompany()) this.getAll();\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      purpose: [null, [Validators.required]],\r\n      procedureName: [null, [Validators.required]],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.purpose.setValue(this.data.value);\r\n      this.systemInstanceId = this.data.id;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // if (changes.systemInstanceId.currentValue > 0) this.getAll();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.systemInstanceId && this.checkNoBusinessOrCompany()) this.getAll();\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    if (!this.data.isDialog) {\r\n      this.isLoaded = false;\r\n      this.systemInstancePurposeService\r\n        .getAllBySystemInstanceId(this.systemInstanceId)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponse<ISapSystemInstancePurposeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(sapSystemInstancePurposeToMap(res.data));\r\n            this.isLoaded = true;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ISapSystemInstancePurposeRequest = {\r\n        SystemInstance_ID: this.systemInstanceId,\r\n        ID: this.form.value.id,\r\n        Name: this.form.value.purpose,\r\n        Procedure_Name: this.form.value.procedureName,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: ISapSystemInstancePurposeRequest) {\r\n    this.showLoading();\r\n    this.systemInstancePurposeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ISapSystemInstancePurposeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(systemInstancePurpose: ISapSystemInstancePurposeModel): void {\r\n    let msg = this.msgTranslate(systemInstancePurpose.name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(systemInstancePurpose);\r\n    });\r\n  }\r\n\r\n  delete(systemInstancePurpose: ISapSystemInstancePurposeModel) {\r\n    this.showLoading();\r\n    this.systemInstancePurposeService\r\n      .Delete(systemInstancePurpose.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<mat-card-title class=\"pt-2\">\r\n  <!-- <page-title title=\"purposes\"> </page-title> -->\r\n  \r\n  <!-- close btn -->\r\n\r\n  <close-dialog-btn\r\n    *ngIf=\"data.isDialog\"\r\n    (click)=\"onCloseDialog()\"\r\n  ></close-dialog-btn>\r\n\r\n</mat-card-title>\r\n\r\n<mat-card-content class=\"container-fluid mb-0\">\r\n  <div class=\"row\">\r\n    <div\r\n      [ngClass]=\"\r\n        formCtrls.id.value == 0 ? 'col-lg-11 col-md-10' : 'col-lg-10 col-md-9'\r\n      \"\r\n    >\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.purpose\"\r\n              [submitted]=\"submitted\"\r\n              label=\"purpose\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.procedureName\"\r\n              [submitted]=\"submitted\"\r\n              label=\"procedure_Name\"\r\n            ></app-input>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- actions -->\r\n    <div class=\"col-lg-1 col-md-2 p-0\">\r\n      <submit-btn\r\n        (onClick)=\"submit()\"\r\n        [disabled]=\"!systemInstanceId\"\r\n        class=\"mtop-3 btn-sm float-right my-0\"\r\n      >\r\n      </submit-btn>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<ng-container *ngIf=\"systemInstanceId && !data.isDialog\">\r\n  <!-- <mat-divider></mat-divider> -->\r\n\r\n  <app-material-table\r\n    [isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [actions]=\"rowFunctions\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    [showPaginator]=\"false\"\r\n    [showFilter]=\"false\"\r\n  >\r\n  </app-material-table>\r\n</ng-container>\r\n","import { ISapSystemInstancePurposeModel } from \"../models/system-instance\";\r\n\r\nexport function sapSystemInstancePurposeToMap(\r\n  purposes: ISapSystemInstancePurposeModel[]\r\n): ISapSystemInstancePurposeModel[] {\r\n  return purposes.map((purpose) => {\r\n    return <ISapSystemInstancePurposeModel>{\r\n      ...purpose,\r\n      purpose: purpose.name,\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ISapSystemInstancePurposeModel,\r\n  ISapSystemInstancePurposeRequest,\r\n} from \"app/system-setup/sap-business-one-setup/models/system-instance\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class SystemInstancePurposeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ISapSystemInstancePurposeRequest) {\r\n    return this.post<IResponse<ISapSystemInstancePurposeModel>>(\r\n      \"SystemInstanceS1Setup/Create_Purpose_SB1\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ISapSystemInstancePurposeRequest) {\r\n    return this.post<IResponse<ISapSystemInstancePurposeModel>>(\r\n      \"SystemInstanceS1Setup/Edit_Purpose_SB1\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllBySystemInstanceId(systemInstanceId: number) {\r\n    return this.get<IResponseList<ISapSystemInstancePurposeModel[]>>(\r\n      \"SystemInstanceS1Setup/GetAll_Purpose_SB1\",\r\n      {\r\n        params: {\r\n          $filter: `SystemInstance_ID eq ${systemInstanceId}`,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: ISapSystemInstancePurposeModel) => {\r\n          item.ar_Name = item.name;\r\n          item.en_Name = item.name;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"SystemInstanceS1Setup/Delete_Purpose_SB1\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ISapSystemInstanceModel, ISapSystemInstanceRequest,} from 'app/system-setup/sap-business-one-setup/models/system-instance';\r\nimport {IPageParams} from 'app/shared/interfaces/params';\r\nimport {IResponse, IResponseList} from 'app/shared/interfaces/responces';\r\nimport {AppClientService} from 'app/shared/services/app-client.service';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class SystemInstanceService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ISapSystemInstanceRequest) {\r\n    return this.post<IResponse<ISapSystemInstanceModel>>(\r\n      \"SystemInstanceS1Setup/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ISapSystemInstanceRequest) {\r\n    return this.post<IResponse<ISapSystemInstanceModel>>(\r\n      \"SystemInstanceS1Setup/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ISapSystemInstanceModel[]>>(\r\n      \"SystemInstanceS1Setup/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ISapSystemInstanceModel[]>>(\r\n      \"SystemInstanceS1Setup/GetAll\"\r\n    )\r\n    // .pipe(\r\n    //   map((res: IResponse<ISapSystemInstanceModel[]>) => {\r\n    //     return res.data;\r\n    //   })\r\n    // );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<ISapSystemInstanceModel[]>>(\r\n      \"SystemInstanceS1Setup/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${id}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"SystemInstanceS1Setup/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ICourseCategoryModel, ICourseCategoryRequest } from \"app/system-setup/training-setup/models/course-category\";\r\nimport { CourseCategoryService } from \"app/system-setup/training-setup/services/course-category.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-category\",\r\n  templateUrl: \"./course-category.component.html\",\r\n  styleUrls: [\"./course-category.component.scss\"],\r\n})\r\nexport class CourseCategoryComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<ICourseCategoryModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(\r\n    public _courseCategoryService: CourseCategoryService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<CourseCategoryComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNallable: true}],\r\n      ar_Name: [null, Validators.required],\r\n      en_Name: [null, Validators.required],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this._courseCategoryService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ICourseCategoryModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ICourseCategoryRequest = {\r\n        id: this.form.value.id,\r\n        ar_Name: this.form.value.ar_Name,\r\n        en_Name: this.form.value.en_Name,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: ICourseCategoryRequest) {\r\n    this.showLoading();\r\n    this._courseCategoryService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ICourseCategoryModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ICourseCategoryRequest) {\r\n    this.showLoading();\r\n    this._courseCategoryService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ICourseCategoryModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  categoryToEdit(category: ICourseCategoryModel) {\r\n    this.form.patchValue(category);\r\n  }\r\n\r\n  onDelete(category: ICourseCategoryModel) {\r\n    let msg = this.msgTranslate(category.ar_Name, category.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(category);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: ICourseCategoryModel) {\r\n    this.showLoading();\r\n    this._courseCategoryService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (model.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"courseCategory\"\r\n          editTitle=\"editcourseCategory\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          [exportService]=\"_courseCategoryService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"categoryToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport {\r\n  ICourseTypeModel,\r\n  ICourseTypeRequest,\r\n} from \"app/system-setup/training-setup/models/course-type\";\r\nimport { CourseTypeService } from \"app/system-setup/training-setup/services/course-type.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-type\",\r\n  templateUrl: \"./course-type.component.html\",\r\n  styleUrls: [\"./course-type.component.scss\"],\r\n})\r\nexport class CourseTypeComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<ICourseTypeModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(\r\n    public _courseTypeService: CourseTypeService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<CourseTypeComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNallable: true}],\r\n      ar_Name: [null, Validators.required],\r\n      en_Name: [null, Validators.required],\r\n    });\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this._courseTypeService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ICourseTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ICourseTypeRequest = {\r\n        id: this.form.value.id,\r\n        ar_Name: this.form.value.ar_Name,\r\n        en_Name: this.form.value.en_Name,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: ICourseTypeRequest) {\r\n    this.showLoading();\r\n    this._courseTypeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ICourseTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ICourseTypeRequest) {\r\n    this.showLoading();\r\n    this._courseTypeService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ICourseTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  courseToEdit(course: ICourseTypeModel) {\r\n    this.form.patchValue(course);\r\n  }\r\n\r\n  onDelete(course: ICourseTypeModel) {\r\n    let msg = this.msgTranslate(course.ar_Name, course.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(course);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: ICourseTypeModel) {\r\n    this.showLoading();\r\n    this._courseTypeService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (model.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"courseType\"\r\n          editTitle=\"editcourseType\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"[exportService]=\"_courseTypeService\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"courseToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport {\r\n  IExpenseModel,\r\n  IExpenseRequest,\r\n} from \"app/system-setup/training-setup/models/expense\";\r\nimport { ExpenseService } from \"app/system-setup/training-setup/services/expense.service\";\r\n\r\n@Component({\r\n  selector: \"app-expense\",\r\n  templateUrl: \"./expense.component.html\",\r\n  styleUrls: [\"./expense.component.scss\"],\r\n})\r\nexport class ExpenseComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IExpenseModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(\r\n    public _expenseService: ExpenseService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<ExpenseComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNallable: true}],\r\n      ar_Name: [null, Validators.required],\r\n      en_Name: [null, Validators.required],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this._expenseService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IExpenseModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IExpenseRequest = {\r\n        id: this.form.value.id,\r\n        ar_Name: this.form.value.ar_Name,\r\n        en_Name: this.form.value.en_Name,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IExpenseRequest) {\r\n    this.showLoading();\r\n    this._expenseService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IExpenseModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IExpenseRequest) {\r\n    this.showLoading();\r\n    this._expenseService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IExpenseModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  expenseToEdit(expense: IExpenseModel) {\r\n    this.form.patchValue(expense);\r\n  }\r\n\r\n  onDelete(expense: IExpenseModel) {\r\n    let msg = this.msgTranslate(expense.ar_Name, expense.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(expense);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: IExpenseModel) {\r\n    this.showLoading();\r\n    this._expenseService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (model.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"expense\"\r\n          editTitle=\"editExpense\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [exportService]=\"_expenseService\"\r\n          [actions]=\"rowFunctions\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (editRow)=\"expenseToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport {\r\n  IReasonsModel,\r\n  IReasonsRequest,\r\n} from \"app/system-setup/training-setup/models/reasons\";\r\nimport { ReasonsService } from \"app/system-setup/training-setup/services/reasons.service\";\r\n\r\n@Component({\r\n  selector: \"app-reasons\",\r\n  templateUrl: \"./reasons.component.html\",\r\n  styleUrls: [\"./reasons.component.scss\"],\r\n})\r\nexport class ReasonsComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IReasonsModel>;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"hasBusinessObjectives\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(\r\n    public _reasonsService: ReasonsService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<ReasonsComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNallable: true}],\r\n      ar_Name: [null, Validators.required],\r\n      en_Name: [null, Validators.required],\r\n      hasBusinessObjectives: [false, Validators.required],\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    }\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this._reasonsService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IReasonsModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IReasonsRequest = {\r\n        id: this.form.value.id,\r\n        ar_Name: this.form.value.ar_Name,\r\n        en_Name: this.form.value.en_Name,\r\n        hasBusinessObjectives: this.form.value.hasBusinessObjectives,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IReasonsRequest) {\r\n    this.showLoading();\r\n    this._reasonsService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IReasonsModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IReasonsRequest) {\r\n    this.showLoading();\r\n    this._reasonsService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IReasonsModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  reasonToEdit(reason: IReasonsModel) {\r\n    this.form.patchValue(reason);\r\n  }\r\n\r\n  onDelete(reason: IReasonsModel) {\r\n    let msg = this.msgTranslate(reason.ar_Name, reason.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(reason);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(model: IReasonsModel) {\r\n    this.showLoading();\r\n    this._reasonsService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (model.id == this.formCtrls.id.value) {\r\n          this.clearForm();\r\n        }\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, hasBusinessObjectives: false});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<mat-card class=\"form-card\">\r\n  <mat-card-title>\r\n    <page-title\r\n      [id]=\"formCtrls.id.value\"\r\n      addTitle=\"reasons\"\r\n      editTitle=\"editReasons\"\r\n    >\r\n    </page-title>\r\n    <!-- close btn -->\r\n    <close-dialog-btn\r\n      *ngIf=\"data.isDialog\"\r\n      (click)=\"onCloseDialog()\"\r\n    ></close-dialog-btn>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content class=\"container-fluid\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 col-12\">\r\n          <app-input\r\n            [control]=\"formCtrls.en_Name\"\r\n            [submitted]=\"submitted\"\r\n            label=\"en_Name\"\r\n          >\r\n          </app-input>\r\n        </div>\r\n\r\n        <div class=\"col-md-4 col-12\">\r\n          <app-input\r\n            [control]=\"formCtrls.ar_Name\"\r\n            [submitted]=\"submitted\"\r\n            label=\"ar_Name\"\r\n          >\r\n          </app-input>\r\n        </div>\r\n\r\n        <div class=\"col-md-4 col-12\">\r\n          <app-check-box\r\n            [control]=\"formCtrls.hasBusinessObjectives\"\r\n            [submitted]=\"submitted\"\r\n            label=\"hasBusinessObjectives\"\r\n            class=\"line-height-4\"\r\n          >\r\n          </app-check-box>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n\r\n  <mat-card-actions align=\"end\">\r\n    <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n    <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n    </reset-form-btn>\r\n  </mat-card-actions>\r\n  <ng-container *ngIf=\"!data.isDialog\">\r\n    <mat-divider></mat-divider>\r\n\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [dataSource]=\"dataSource\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [exportService]=\"_reasonsService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (editRow)=\"reasonToEdit($event)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </ng-container>\r\n</mat-card>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  ICourseCategoryModel,\r\n  ICourseCategoryRequest,\r\n} from \"../models/course-category\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CourseCategoryService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ICourseCategoryRequest) {\r\n    return this.post<IResponse<ICourseCategoryModel>>(\r\n      \"TrainingSetup/CourseCategory/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ICourseCategoryRequest) {\r\n    return this.post<IResponse<ICourseCategoryModel>>(\r\n      \"TrainingSetup/CourseCategory/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ICourseCategoryModel[]>>(\r\n      \"TrainingSetup/CourseCategory/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ICourseCategoryModel[]>>(\r\n      \"TrainingSetup/CourseCategory/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"TrainingSetup/CourseCategory/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ICourseTypeModel, ICourseTypeRequest } from \"../models/course-type\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CourseTypeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ICourseTypeRequest) {\r\n    return this.post<IResponse<ICourseTypeModel>>(\r\n      \"TrainingSetup/CourseType/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ICourseTypeRequest) {\r\n    return this.post<IResponse<ICourseTypeModel>>(\r\n      \"TrainingSetup/CourseType/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ICourseTypeModel[]>>(\r\n      \"TrainingSetup/CourseType/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ICourseTypeModel[]>>(\r\n      \"TrainingSetup/CourseType/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"TrainingSetup/CourseType/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n  exportExcel(){\r\n    this.getAll()\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IExpenseModel, IExpenseRequest } from \"../models/expense\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ExpenseService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IExpenseRequest) {\r\n    return this.post<IResponse<IExpenseModel>>(\r\n      \"TrainingSetup/Expense/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IExpenseRequest) {\r\n    return this.post<IResponse<IExpenseModel>>(\r\n      \"TrainingSetup/Expense/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IExpenseModel[]>>(\r\n      \"TrainingSetup/Expense/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IExpenseModel[]>>(\"TrainingSetup/Expense/GetAll\");\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"TrainingSetup/Expense/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IReasonsModel, IReasonsRequest } from \"../models/reasons\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class ReasonsService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tcreate(data: IReasonsRequest) {\r\n\t\treturn this.post<IResponse<IReasonsModel>>(\"TrainingSetup/Reason/Create\", data);\r\n\t}\r\n\r\n\tupdate(data: IReasonsRequest) {\r\n\t\treturn this.post<IResponse<IReasonsModel>>(\"TrainingSetup/Reason/Edit\", data);\r\n\t}\r\n\r\n\tgetList(params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IReasonsModel[]>>(\"TrainingSetup/Reason/GetList\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n\r\n\tgetAll() {\r\n\t return\tthis.get<IResponse<IReasonsModel[]>>(\"TrainingSetup/Reason/GetAll\");\r\n\t}\r\n\r\n\tDelete(id: number) {\r\n\t\treturn this.delete<IResponse>(\"TrainingSetup/Reason/Delete\", {\r\n\t\t\tparams: { Id: id },\r\n\t\t});\r\n\t}\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Component, EventEmitter, Inject, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormArray, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { courseToDisplay } from \"app/training/mapper/course\";\r\nimport {\r\n  ICourseInstructorRequstModel,\r\n  ICourseToDisplay,\r\n} from \"app/training/models/course/course\";\r\nimport {\r\n  CourseHoldingYearsModel,\r\n  ICourseGeneralRequest,\r\n} from \"app/training/models/course/general\";\r\nimport { CourseGeneralService } from \"app/training/services/course/course-general.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { ICourseCategoryModel } from \"app/system-setup/training-setup/models/course-category\";\r\nimport { ICourseTypeModel } from \"app/system-setup/training-setup/models/course-type\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\n\r\n@Component({\r\n  selector: \"app-add-course-form\",\r\n  templateUrl: \"./add-course-form.component.html\",\r\n  styleUrls: [\"./add-course-form.component.scss\"],\r\n})\r\nexport class AddCourseFormComponent extends AppHelpers implements OnInit {\r\n  @Output() changeCourseId = new EventEmitter<number>();\r\n  @Input() isGeneral: boolean = false;\r\n  @Input() isOutline: boolean = false;\r\n  @Input() CourseInstructor: ICourseInstructorRequstModel;\r\n  @Output() completed = new EventEmitter<boolean>(); // complete step to change icon\r\n  course: ICourseToDisplay;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  totalPrecentage: number;\r\n  @Input() courseId: number = 0;\r\n\r\n  constructor(\r\n    private courseGeneralService: CourseGeneralService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddCourseFormComponent>\r\n  ) {\r\n    super();\r\n    this.course = this.courseGeneralService.course$.getValue();\r\n    this.courseGeneralService.course$.subscribe((course) => {\r\n      this.course = course;\r\n      if (this.course != null) this.getCourseById();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [this.courseId, {nonNullable: true}],\r\n      ar_Name: [null, [CustomValidator.whiteSpace]],\r\n      en_Name: [null, [CustomValidator.whiteSpace]],\r\n      courseCode: [null, [CustomValidator.whiteSpace]],\r\n      abbrevation: [null, Validators.maxLength(10)],\r\n      course_Category_ID: [null],\r\n      course_Type_ID: [null],\r\n      isFree: [true], //1 true 2 false\r\n      isHolding: [false], //2 true 1 false\r\n      courseValue: [null],\r\n      holdingYears: [null, CustomValidators.gt(0)],\r\n      penaletyPercentege: [null],\r\n      sixMontheEvalution: [false],\r\n      threeMontheEvalution: [false],\r\n      note: [null],\r\n      trA_Course_Holding_Years: this.fb.array([]),\r\n      outLine: [null],\r\n      outlineDesc: [null],\r\n    });\r\n\r\n    if (this.isGeneral) {\r\n      this.formCtrls.ar_Name.addValidators(Validators.required);\r\n      this.formCtrls.en_Name.addValidators(Validators.required);\r\n      this.formCtrls.courseCode.addValidators(Validators.required);\r\n      this.formCtrls.isFree.addValidators(Validators.required);\r\n    }\r\n    if (this.data.value) {\r\n      this.isGeneral = true;\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n      this.formCtrls.course_Category_ID.setValue(this.data.id);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  get TRACourseHoldingYears() {\r\n    return this.form.controls[\"trA_Course_Holding_Years\"] as FormArray;\r\n  }\r\n\r\n  getTRACourseHoldingYearsList(value: any) {\r\n    // add new inputs\r\n    let difference = Number(value) - this.TRACourseHoldingYears.controls.length;\r\n    if (difference > 0) {\r\n      for (var i = 0; i < difference; i++) {\r\n        let TRACourseHoldingYear = this.fb.group({\r\n          holding_Year: [i + 1],\r\n          percentage: [\"\", [Validators.required, CustomValidators.gt(0)]],\r\n        });\r\n        this.TRACourseHoldingYears.push(TRACourseHoldingYear);\r\n      }\r\n    }\r\n    // remove from old inputs\r\n    else if (difference < 0) {\r\n      difference = Math.abs(difference);\r\n      for (var i = 0; i < difference; i++) {\r\n        this.TRACourseHoldingYears.removeAt(\r\n          this.TRACourseHoldingYears.controls.length - 1\r\n        );\r\n      }\r\n    }\r\n    // let length: number = value;\r\n    // this.TRACourseHoldingYears.clear();\r\n    // for (var i = 0; i < length; i++) {\r\n    //   let TRACourseHoldingYear = this.fb.group({\r\n    //     holding_Year: [i + 1],\r\n    //     percentage: [\"\", [Validators.required, CustomValidators.gt(0)]],\r\n    //   });\r\n    //   this.TRACourseHoldingYears.push(TRACourseHoldingYear);\r\n    // }\r\n  }\r\n\r\n  changeSumOfPercentage() {\r\n    // update totalPrecentage\r\n    this.totalPrecentage = 0;\r\n    this.TRACourseHoldingYears.controls.forEach((e) => {\r\n      this.totalPrecentage += e.value.percentage;\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n\r\n    if (this.form.valid) {\r\n      let data = {} as ICourseGeneralRequest;\r\n      data.Id = this.formCtrls.id.value;\r\n      data.Ar_Name = this.formCtrls.ar_Name.value;\r\n      data.En_Name = this.formCtrls.en_Name.value;\r\n      data.Course_Type_ID = this.formCtrls.course_Type_ID.value;\r\n      data.Course_Category_ID = this.formCtrls.course_Category_ID.value;\r\n      data.Code = this.formCtrls.courseCode.value;\r\n      data.Note = this.formCtrls.note.value;\r\n      data.Abbrevation = this.formCtrls.abbrevation.value;\r\n      data.IsFree = this.formCtrls.isFree.value == true ? 1 : 2;\r\n      data.CourseValue = this.formCtrls.courseValue.value;\r\n      data.IsHolding = this.formCtrls.isHolding.value == true ? 2 : 1;\r\n      data.HoldingYears = this.formCtrls.holdingYears.value;\r\n      data.Penalty = this.formCtrls.penaletyPercentege.value;\r\n      data.ThreeMontheEvalution = this.formCtrls.threeMontheEvalution.value;\r\n      data.SixMontheEvalution = this.formCtrls.sixMontheEvalution.value;\r\n      data.outline = this.formCtrls.outLine.value;\r\n      data.outlinedesc = this.formCtrls.outlineDesc.value;\r\n      data.TRA_Course_Holding_Years = [];\r\n      if (data.Penalty != null) {\r\n        this.changeSumOfPercentage();\r\n        // this.totalPrecentage = 0;\r\n        this.TRACourseHoldingYears.controls.forEach((e) => {\r\n          let Holding_Year = {} as CourseHoldingYearsModel;\r\n          Holding_Year.holding_Year = e.value.holding_Year;\r\n          Holding_Year.percentage = e.value.percentage;\r\n          data.TRA_Course_Holding_Years.push(Holding_Year);\r\n          // this.totalPrecentage += e.value.percentage;\r\n        });\r\n        if (this.totalPrecentage != data.Penalty) {\r\n          return;\r\n        }\r\n      }\r\n      if (this.courseId == 0) this.create(data);\r\n      else this.update(data);\r\n    }\r\n  }\r\n\r\n  create(model: ICourseGeneralRequest) {\r\n    this.showLoading(\"form\");\r\n    let url;\r\n    this.courseGeneralService.create(model).subscribe((res) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\r\n        this.courseId = res.data.id;\r\n        this.formCtrls.id.setValue(this.courseId);\r\n        url = `/training/${this.moduleId}/course/edit/${this.courseId}`;\r\n        if (!this.data.isDialog) this.navigateTo(url);\r\n        this.courseGeneralService.course$.next(courseToDisplay([res.data])[0]);\r\n        this.changeCourseId.emit(this.courseId);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n        this.completed.emit(true);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading(\"form\");\r\n      this.submitted = false;\r\n    });\r\n  }\r\n\r\n  update(model: ICourseGeneralRequest) {\r\n    this.showLoading(\"form\");\r\n    this.courseGeneralService.update(model).subscribe((res) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.courseGeneralService.course$.next(courseToDisplay([res.data])[0]);\r\n        this.completed.emit(true);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading(\"form\");\r\n      this.submitted = false;\r\n    });\r\n  }\r\n\r\n  getCourseById() {\r\n    // this.showLoading(\"form\");\r\n    this.courseId = this.course.id;\r\n    this.form.patchValue(this.course);\r\n    if (this.course?.trA_Course_Holding_Years?.length > 0) {\r\n      this.TRACourseHoldingYears.clear();\r\n      this.course?.trA_Course_Holding_Years.forEach((el, i) => {\r\n        let TRACourseHoldingYear = this.fb.group({\r\n          holding_Year: [el.holding_Year],\r\n          percentage: [el.percentage, [Validators.required, CustomValidators.gt(0)]],\r\n        });\r\n        this.TRACourseHoldingYears.push(TRACourseHoldingYear);\r\n        this.changeSumOfPercentage();\r\n      });\r\n    }\r\n    // this.hideLoading(\"form\");\r\n  }\r\n\r\n  onHoldingChange() {\r\n    if (this.formCtrls.isHolding.value == true) {\r\n      this.formCtrls.holdingYears.addValidators(Validators.required);\r\n      this.formCtrls.penaletyPercentege.addValidators(Validators.required);\r\n    }\r\n    else {\r\n      this.formCtrls.holdingYears.setValidators(null);\r\n      this.formCtrls.penaletyPercentege.setValidators(null);\r\n      this.formCtrls.holdingYears.setValue(null);\r\n      this.formCtrls.penaletyPercentege.setValue(null);\r\n      this.TRACourseHoldingYears.clear();\r\n    }\r\n  }\r\n\r\n  onFreeChange() {\r\n    if (!this.formCtrls.isFree.value) {\r\n      this.formCtrls.courseValue.addValidators(Validators.required);\r\n    }\r\n    else {\r\n      this.formCtrls.courseValue.clearValidators();\r\n      this.formCtrls.courseValue.setValue(null);\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner [name]=\"'form'\"></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <form [formGroup]=\"form\" [class.isDialog]=\"data.isDialog\">\r\n      <!--start general-->\r\n      <ng-container *ngIf=\"isGeneral\">\r\n        <!-- start general information -->\r\n        <mat-card>\r\n          <mat-card-title>\r\n            <page-title title=\"generalInfo\"></page-title>\r\n            <close-dialog-btn *ngIf=\"data.isDialog\"\r\n                              (click)=\"dialogRef.close()\">\r\n            </close-dialog-btn>\r\n          </mat-card-title>\r\n\r\n          <mat-divider></mat-divider>\r\n\r\n          <mat-card-content class=\"container-fluid mtop-40\">\r\n            <div class=\"row justify-content-between\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <app-input\r\n                  [control]=\"formCtrls.courseCode\"\r\n                  [submitted]=\"submitted\"\r\n                  label=\"courseCode\">\r\n                </app-input>\r\n              </div>\r\n\r\n              <div class=\"col-md-3 col-12\">\r\n                <app-input\r\n                  [control]=\"formCtrls.ar_Name\"\r\n                  [submitted]=\"submitted\"\r\n                  label=\"ar_Name\">\r\n                </app-input>\r\n              </div>\r\n\r\n              <div class=\"col-md-3 col-12\">\r\n                <app-input\r\n                  [control]=\"formCtrls.en_Name\"\r\n                  [submitted]=\"submitted\"\r\n                  label=\"en_Name\">\r\n                </app-input>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"row justify-content-between\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <app-input\r\n                  [control]=\"formCtrls.abbrevation\"\r\n                  [submitted]=\"submitted\"\r\n                  label=\"abbrevation\">\r\n                </app-input>\r\n              </div>\r\n\r\n              <div class=\"col-md-3 col-12\">\r\n                <app-course-category-dropdown\r\n                  [control]=\"formCtrls.course_Category_ID\"\r\n                  [submitted]=\"submitted\"\r\n                  [filter]=\"true\">\r\n                </app-course-category-dropdown>\r\n              </div>\r\n\r\n              <div class=\"col-md-3 col-12\">\r\n                <app-course-type-dropdown\r\n                  [control]=\"formCtrls.course_Type_ID\"\r\n                  [submitted]=\"submitted\"\r\n                  [filter]=\"true\">\r\n                </app-course-type-dropdown>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <!-- end general information -->\r\n\r\n        <!-- start  pricing & holding  -->\r\n        <mat-card class=\"mt-3\">\r\n          <mat-card-title>\r\n            <page-title title=\"pricingAndholding\"></page-title>\r\n          </mat-card-title>\r\n          <mat-divider></mat-divider>\r\n\r\n          <mat-card-content class=\"container-fluid mtop-40\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-md-4 col-lg-3\"\r\n                   [ngClass]=\"{\r\n                  rightFree: languageService.isEnglish,\r\n                  leftFree: languageService.isArabic\r\n                }\">\r\n                <p>{{ \"isFree\" | translate | titlecase }}</p>\r\n\r\n                <slide-toggle class=\"mb-3\"\r\n                              [control]=\"formCtrls.isFree\"\r\n                              (onChange)=\"onFreeChange()\">\r\n                </slide-toggle>\r\n\r\n                <slider label=\"courseValue\"\r\n                        boxClass=\"mt-3\"\r\n                        [control]=\"formCtrls.courseValue\"\r\n                        [disabled]=\"formCtrls.isFree.value\"\r\n                        [submitted]=\"submitted\">\r\n                </slider>\r\n              </div>\r\n\r\n              <div class=\"col-12 col-md-3 col-lg-3 px-4\"\r\n                   [ngClass]=\"{\r\n                  holdingright: languageService.isEnglish,\r\n                  holdingleft: languageService.isArabic\r\n                }\">\r\n\r\n                <p>{{ \"isHolding\" | translate | titlecase }}</p>\r\n\r\n                <slide-toggle class=\"mb-3\"\r\n                              [control]=\"formCtrls.isHolding\"\r\n                              (onChange)=\"onHoldingChange()\">\r\n                </slide-toggle>\r\n\r\n                <app-input [control]=\"formCtrls.holdingYears\"\r\n                           [submitted]=\"submitted\"\r\n                           label=\"holdingYears\"\r\n                           type=\"number\"\r\n                           class=\"w-100\"\r\n                           (keyUp)=\"getTRACourseHoldingYearsList($event)\"\r\n                           (Change)=\"getTRACourseHoldingYearsList($event)\"\r\n                           [disabled]=\"!formCtrls.isHolding.value\">\r\n                </app-input>\r\n\r\n\r\n                <slider label=\"penaletyPercentege\"\r\n                        boxClass=\"mt-4 w-100\"\r\n                        [control]=\"formCtrls.penaletyPercentege\"\r\n                        [disabled]=\"!formCtrls.isHolding.value\"\r\n                        [submitted]=\"submitted\"\r\n                        (onChange)=\"changeSumOfPercentage()\">\r\n                </slider>\r\n              </div>\r\n\r\n              <div class=\"col-12 col-md-9 offset-md-1 offset-lg-0 col-lg-6 offset-xl-0 mb-0 division\"\r\n                   *ngIf=\"this.formCtrls.holdingYears.value  &&\r\n                  TRACourseHoldingYears.controls.length > 0\">\r\n                <h3 class=\"mb-1 font-size-16 px-2\"> {{ \"holdingDivision\" | translate | titlecase }} </h3>\r\n                <p class=\"mb-3 text-muted px-2\">\r\n                  {{ \"totalOfYearsMustBeEqualPenaltyPercentage\" | translate }}\r\n                  <span>\r\n                   (  {{ formCtrls.penaletyPercentege.value ?? 0 }} / {{ totalPrecentage ?? 0 }} )\r\n                </span>\r\n                </p>\r\n\r\n                <div class=\"row mx-1 px-0\">\r\n                  <div class=\"col-6 px-1 mb-2\"\r\n                       *ngFor=\"\r\n                      let TRACourseHoldingYears of TRACourseHoldingYears.controls;\r\n                      let i = index\">\r\n                    <app-input [control]=\"TRACourseHoldingYears.controls.percentage\"\r\n                               [submitted]=\"submitted\"\r\n                               [label]=\"'year ' + (i + 1)\"\r\n                               type=\"number\"\r\n                               (Change)=\"changeSumOfPercentage()\"\r\n                               class=\"percentage\">\r\n                    </app-input>\r\n                  </div>\r\n                  <span id=\"persentageMessage\"\r\n                        *ngIf=\"totalPrecentage != formCtrls.penaletyPercentege.value && submitted\"\r\n                        class=\"text-danger m-2\">\r\n                    {{ \"totalOfPercentageMustBeEqualPenalety\" | translate }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <!-- end pricing & holding -->\r\n\r\n        <!-- start  evaluation -->\r\n        <mat-card class=\"mt-3\">\r\n          <mat-card-title>\r\n            <page-title title=\"evaluation\"></page-title>\r\n          </mat-card-title>\r\n\r\n          <mat-divider></mat-divider>\r\n\r\n          <mat-card-content class=\"container-fluid mtop-40\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4 col-12 mtop-15 mbottom-15\">\r\n                <app-check-box\r\n                  label=\"threeMontheEvalution\"\r\n                  [control]=\"formCtrls.threeMontheEvalution\"\r\n                >\r\n                </app-check-box>\r\n              </div>\r\n              <div class=\"col-md-4 col-12 mtop-15 mbottom-15\">\r\n                <app-check-box\r\n                  label=\"sixMontheEvalution\"\r\n                  [control]=\"formCtrls.sixMontheEvalution\"\r\n                >\r\n                </app-check-box>\r\n              </div>\r\n              <div class=\"col-md-4 col-12\">\r\n                <app-input\r\n                  [control]=\"formCtrls.note\"\r\n                  [submitted]=\"submitted\"\r\n                  label=\"note\"\r\n                >\r\n                </app-input>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <!-- end  evaluation -->\r\n\r\n        <mat-card-actions align=\"end\" class=\"mx-0\">\r\n          <submit-btn\r\n            (onClick)=\"submit()\"\r\n            [id]=\"formCtrls.id.value\"\r\n            [color]=\"btn.darkBlue\"\r\n            icon=\"pi pi-plus-circle\"\r\n            [iconPositionBefore]=\"false\"\r\n          >\r\n          </submit-btn>\r\n        </mat-card-actions>\r\n      </ng-container>\r\n      <!-- end  general -->\r\n\r\n      <!--start outline>-->\r\n      <ng-container *ngIf=\"isOutline\">\r\n        <mat-card class=\"mbottom-30\" #editorContainer>\r\n          <mat-card-title>\r\n            <page-title title=\"outLine\"></page-title>\r\n          </mat-card-title>\r\n\r\n          <mat-divider></mat-divider>\r\n\r\n          <mat-card-content class=\"container-fluid mtop-40\">\r\n            <mat-accordion>\r\n\r\n              <!-- jobPurpose and responsibilities Duties -->\r\n              <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    {{ 'outLine'|translate }}\r\n                  </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <mat-panel-description>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6 col-12\">\r\n                          <app-text-editor\r\n                            [control]=\"formCtrls.outlineDesc\"\r\n                            label=\"description\"\r\n                            [submitted]=\"submitted\"\r\n                            [bounds]=\"editorContainer\"\r\n                          ></app-text-editor>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 col-12\">\r\n                          <app-text-editor\r\n                            [control]=\"formCtrls.outLine\"\r\n                            label=\"outLine\"\r\n                            [submitted]=\"submitted\"\r\n                            [bounds]=\"editorContainer\"\r\n                          ></app-text-editor>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </mat-panel-description>\r\n              </mat-expansion-panel>\r\n\r\n            </mat-accordion>\r\n\r\n          </mat-card-content>\r\n\r\n          <mat-card-actions align=\"end\">\r\n            <submit-btn\r\n              (onClick)=\"submit()\"\r\n              [id]=\"formCtrls.id.value\"\r\n              [disabled]=\"!courseId\"\r\n              [color]=\"btn.darkBlue\"\r\n              icon=\"pi pi-plus-circle\"\r\n              [iconPositionBefore]=\"false\"\r\n            >\r\n            </submit-btn>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n\r\n        <app-course-attachments [courseId]=\"courseId\"></app-course-attachments>\r\n      </ng-container>\r\n\r\n      <!-- end  outline -->\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IFileApiModel, IFileData } from \"app/shared/interfaces/files\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ICourseAttachmentParamsRequest } from \"app/training/models/course/attachment\";\r\nimport { CourseAttachmentService } from \"app/training/services/course/course-attachment.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-attachments\",\r\n  templateUrl: \"./course-attachments.component.html\",\r\n  styleUrls: [\"./course-attachments.component.scss\"],\r\n})\r\nexport class CourseAttachmentsComponent extends AppHelpers implements OnInit {\r\n  @Input() courseId: number;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  // existingAttachments: IFileApiModel[] = [];\r\n  files: IFileData[] = [];\r\n  removeFiles: boolean = false;\r\n  addAttachParams: ICourseAttachmentParamsRequest;\r\n\r\n  constructor(private courseAttachmentService: CourseAttachmentService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      attachmentTypeId: [null, [Validators.required]],\r\n      file: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.courseId > 0) this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.showLoading(\"attach\");\r\n    this.courseAttachmentService\r\n      .getAllByCourseId(this.courseId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IFileApiModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // this.existingAttachments = res.data;\r\n          this.files = [];\r\n          res.data.forEach((attach) => {\r\n            this.files.push({\r\n              id: attach.id,\r\n              name: attach.en_Name,\r\n              path: \"/\" + attach.path,\r\n              size: attach.size,\r\n              type: attach.mime,\r\n              extra: this.msgTranslate(\r\n                attach.comm_Attachment_Type?.ar_Name,\r\n                attach.comm_Attachment_Type?.en_Name\r\n              ),\r\n            });\r\n          });\r\n          this.isLoaded = true;\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"attach\");\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    this.removeFiles = false;\r\n    if (this.form.valid) {\r\n      this.showLoading(\"attach\");\r\n\r\n      // const model: ICourseAttachmentRequest = {\r\n      //   files: this.formCtrls.file.value,\r\n      // };\r\n      // // console.log(model);\r\n      // const formData = HelpersFunctions.objectToFormData(model);\r\n\r\n      // let params: ICourseAttachmentParamsRequest = {\r\n      //   courseID: this.courseId,\r\n      //   AttachmentTypeID: this.formCtrls.attachmentTypeId.value,\r\n      // };\r\n\r\n      // this.create(formData, params);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  // create(model: FormData, params: ICourseAttachmentParamsRequest) {\r\n  //   this.showLoading(\"attach\");\r\n  //   this.courseAttachmentService\r\n  //     .create(model, params)\r\n  //     .subscribe((res: IResponse<IFileApiModel>) => {\r\n  //       if (res?.message?.messageType == MessageTypes.Success) {\r\n  //         this.clearForm();\r\n  //         this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getAll();\r\n  //       } else this.errorList(res?.message?.messages);\r\n  //       this.hideLoading(\"attach\");\r\n  //     });\r\n  // }\r\n\r\n  afterCreate() {\r\n    this.clearForm();\r\n    this.getAll();\r\n  }\r\n\r\n  // onDelete(courseAttachment: IFileApiModel): void {\r\n  //   console.log(courseAttachment);\r\n  //   let msg = courseAttachment.en_Name;\r\n  //   this.deleateDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(courseAttachment);\r\n  //   });\r\n  // }\r\n\r\n  delete(attach: IFileData) {\r\n    if (attach.id) {\r\n      this.showLoading(\"attach\");\r\n      this.courseAttachmentService\r\n        .Delete(attach.id)\r\n        .subscribe((res: IResponse) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n            this.getAll();\r\n          } else this.errorList(res?.message?.messages);\r\n          this.hideLoading(\"attach\");\r\n        });\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n    this.removeFiles = true;\r\n  }\r\n\r\n  changeAddParams() {\r\n    this.addAttachParams = {\r\n      courseID: this.courseId,\r\n      AttachmentTypeID: this.formCtrls.attachmentTypeId.value,\r\n    };\r\n  }\r\n}\r\n","<ngx-spinner [name]=\"'attach'\"></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container class=\"top-dropdown\" style=\"margin: 5px\">\r\n      <mat-card-title>\r\n        <page-title title=\"attachments\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-40\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-sm-6 col-12\">\r\n                  <app-hiring-document-by-service-dropdown\r\n                    [control]=\"formCtrls.attachmentTypeId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    label=\"attachment_types\"\r\n                    (change)=\"changeAddParams()\"\r\n                  ></app-hiring-document-by-service-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <primeng-file-upload\r\n                    [control]=\"formCtrls.file\"\r\n                    [submitted]=\"submitted\"\r\n                    [multiple]=\"true\"\r\n                    [existingFiles]=\"files\"\r\n                    [removeFiles]=\"removeFiles\"\r\n                    url=\"Training/Course/AddCourseAttachments\"\r\n                    [params]=\"addAttachParams\"\r\n                    [isFormValid]=\"form.valid\"\r\n                    [disabled]=\"!courseId\"\r\n                    (onsubmit)=\"submit()\"\r\n                    (afterupload)=\"afterCreate()\"\r\n                    (ondelete)=\"delete($event)\"\r\n                  >\r\n                  </primeng-file-upload>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <!-- <mat-card-actions align=\"end\">\r\n        <submit-btn\r\n          (onClick)=\"submit()\"\r\n          [disabled]=\"!courseId\"\r\n          [color]=\"btn.darkBlue\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [iconPositionBefore]=\"false\"\r\n        >\r\n        </submit-btn>\r\n      </mat-card-actions> -->\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IFileApiModel, IFileData } from \"app/shared/interfaces/files\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { IInstructorModel, IInstructorRequest, } from \"app/training/models/instructor\";\r\nimport { InstructorService } from \"app/training/services/instructor.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-instructor\",\r\n  templateUrl: \"./add-instructor.component.html\",\r\n  styleUrls: [\"./add-instructor.component.scss\"],\r\n})\r\nexport class AddInstructorComponent extends AppHelpers implements OnInit {\r\n  instructorId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  files: IFileData[] = [];\r\n  removeFiles: boolean = false;\r\n\r\n  constructor(\r\n    private instructorService: InstructorService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddInstructorComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.instructorId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.getInstructorById();\r\n      this.getInstructorAttachments();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [this.instructorId, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required]],\r\n      en_Name: [null, [Validators.required]],\r\n      code: [null, [Validators.required]],\r\n      mobile: [null, CustomValidator.mobileValidators],\r\n      phone: [null],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      qualification: [null],\r\n      is_TOT: [false],\r\n      job: [null],\r\n      note: [null],\r\n      attachmentTypeId: [null],\r\n      files: [],\r\n    });\r\n\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.instructorId = Number(param.id) ?? 0;\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.removeFiles = false;\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let data = {} as IInstructorRequest;\r\n      data.id = this.formCtrls.id.value;\r\n      data.ar_Name = this.formCtrls.ar_Name.value;\r\n      data.en_Name = this.formCtrls.en_Name.value;\r\n      data.code = this.formCtrls.code.value;\r\n      data.mobile = this.formCtrls.mobile.value;\r\n      data.phone = this.formCtrls.phone.value;\r\n      data.email = this.formCtrls.email.value;\r\n      data.qualification = this.formCtrls.qualification.value;\r\n      data.is_TOT = this.formCtrls.is_TOT.value ?? false;\r\n      data.job = this.formCtrls.job.value;\r\n      data.note = this.formCtrls.qualification.value;\r\n      data.AttachmentTypeID = this.formCtrls.attachmentTypeId.value ?? 0;\r\n      data.files = this.formCtrls.files.value;\r\n      const formData = HelpersFunctions.objectToFormData(data);\r\n\r\n      if (data.id == 0) {\r\n        this.create(formData);\r\n      }\r\n      else {\r\n        this.update(formData);\r\n      }\r\n    }\r\n  }\r\n\r\n  getInstructorById() {\r\n    this.showLoading();\r\n    this.instructorService\r\n      .getById(this.instructorId)\r\n      .subscribe((res: IResponse<IInstructorModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          //  console.log(res);\r\n          this.form.patchValue(res.data[0]);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  create(data: FormData) {\r\n    this.showLoading();\r\n    this.instructorService\r\n      .create(data)\r\n      .subscribe((res: IResponse<IInstructorModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res.message.messageTypeName);\r\n          this.instructorId = res.data.id;\r\n          this.formCtrls.id.setValue(this.instructorId);\r\n          let url = `/training/${this.moduleId}/instructor/edit/${this.instructorId}`;\r\n          if (!this.data.isDialog) this.navigateTo(url);\r\n          this.formCtrls.files.reset();\r\n          this.removeFiles = true;\r\n          this.getInstructorAttachments();\r\n          if (this.data.isDialog) this.dialogRef.close();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(data: FormData) {\r\n    this.showLoading();\r\n    this.instructorService\r\n      .update(data)\r\n      .subscribe((res: IResponse<IInstructorModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res.message.messageTypeName);\r\n          this.formCtrls.files.reset();\r\n          this.removeFiles = true;\r\n          this.getInstructorAttachments();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  getInstructorAttachments() {\r\n    this.showLoading();\r\n    this.instructorService\r\n      .getAllAttachmentsByInstructorId(this.instructorId)\r\n      .subscribe((res: IResponse<IFileApiModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.files = [];\r\n          res.data.forEach((file) => {\r\n            let attach = {} as IFileData;\r\n            attach.id = file.id;\r\n            attach.size = file.size;\r\n            attach.path = \"/\" + file.path;\r\n            attach.type = file.mime;\r\n            attach.name = file.en_Name;\r\n            attach.extra = this.msgTranslate(\r\n              file.comm_Attachment_Type.ar_Name,\r\n              file.comm_Attachment_Type.en_Name\r\n            );\r\n            // if (this.formCtrls.attachmentTypeId.value == null) {\r\n            //   // type_ID repeated in all object\r\n            //   this.formCtrls.attachmentTypeId.setValue(file.type_ID);\r\n            // }\r\n            this.files.push(attach);\r\n          });\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  delteAttachOfInstructor(attach: IFileData) {\r\n    this.showLoading();\r\n    this.instructorService\r\n      .deleteInstructorAttachments(this.instructorId, attach.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n          this.getInstructorAttachments();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, is_TOT: false});\r\n    this.submitted = false;\r\n    this.removeFiles = true;\r\n  }\r\n\r\n  // isAdd > is select file or remove file\r\n  onselectFile(isAdd: boolean) {\r\n    if (isAdd)\r\n      this.formCtrls.attachmentTypeId.setValidators([Validators.required]);\r\n    else this.formCtrls.attachmentTypeId.clearValidators();\r\n    this.formCtrls.attachmentTypeId.updateValueAndValidity();\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"instructor\"></page-title>\r\n\r\n        <ng-container *ngIf=\"!data.isDialog\">\r\n          <!-- button add new-->\r\n          <app-add-new-btn\r\n            *ngIf=\"instructorId > 0\"\r\n            url=\"/training/{{ moduleId }}/instructor/add\"\r\n            [params]=\"parentParam\">\r\n          </app-add-new-btn>\r\n\r\n          <!-- button back-->\r\n          <app-back-btn url=\"/training/{{ moduleId }}/instructor/index\"\r\n                        [params]=\"pageParams\">\r\n          </app-back-btn>\r\n        </ng-container>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn *ngIf=\"data.isDialog\"\r\n                          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-20\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.code\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"code\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.mobile\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"mobile\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.phone\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"phone\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.email\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"email\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.qualification\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"qualification\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.job\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"job\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.note\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"notes\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <!-- attachment  dropdown -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-hiring-document-by-service-dropdown\r\n                    [control]=\"formCtrls.attachmentTypeId\"\r\n                    [submitted]=\"submitted\"\r\n                    [multiple]=\"false\"\r\n                    [filter]=\"true\"\r\n                    label=\"attachment_types\"\r\n                  >\r\n                  </app-hiring-document-by-service-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <primeng-file-upload\r\n                    [control]=\"formCtrls.files\"\r\n                    [submitted]=\"submitted\"\r\n                    [multiple]=\"true\"\r\n                    [existingFiles]=\"files\"\r\n                    [removeFiles]=\"removeFiles\"\r\n                    [isFormValid]=\"form.valid\"\r\n                    [isDragDrop]=\"true\"\r\n                    (ondelete)=\"delteAttachOfInstructor($event)\"\r\n                    (onselect)=\"onselectFile(true)\"\r\n                    (onremove)=\"onselectFile(false)\"\r\n                    [isEdit]=\"formCtrls.files != null\">\r\n                  </primeng-file-upload>\r\n                </div>\r\n\r\n                <div class=\"col-md-2 col-12\">\r\n                  <app-check-box\r\n                    label=\"is_TOT\"\r\n                    [control]=\"formCtrls.is_TOT\"\r\n                    labelPosition=\"before\">\r\n                  </app-check-box>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n\r\n        <submit-btn\r\n          (onClick)=\"submit()\"\r\n          [id]=\"formCtrls.id.value\"\r\n          [color]=\"btn.darkBlue\"\r\n          [iconPositionBefore]=\"false\"\r\n          [id]=\"formCtrls.id.value\"\r\n          icon=\"pi pi-plus-circle\"\r\n        >\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatStepper } from \"@angular/material/stepper\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-plan-core\",\r\n  templateUrl: \"./plan-core.component.html\",\r\n  styleUrls: [\"./plan-core.component.scss\"],\r\n})\r\nexport class PlanCoreComponent extends AppHelpers implements OnInit {\r\n  planId: number = 0;\r\n  @ViewChild(\"stepper\") stepper: MatStepper;\r\n\r\n  updateCourseDropdown: boolean = false;\r\n  isGeneraCompleted: boolean = false;\r\n  isTNACompleted: boolean = false;\r\n  isExpensisCompleted: boolean = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<PlanCoreComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.planId = Number(param.id) ?? 0;\r\n    });\r\n\r\n    if (this.data.id > 0) {\r\n      this.planId = this.data.id;\r\n    }\r\n  }\r\n\r\n  stepChanged() {\r\n    // prevent inputs to be invalid after next & back\r\n    this.stepper.selected.interacted = false;\r\n  }\r\n\r\n  getPlanId(value) {\r\n    this.planId = value;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<mat-card-title\r\n  class=\"title-no-margin title-section\"\r\n  [class.fixed-title]=\"!data.isDialog\"\r\n>\r\n  <page-title title=\"addPlan\"></page-title>\r\n\r\n  <close-dialog-btn\r\n    *ngIf=\"data.isDialog\"\r\n    (click)=\"onCloseDialog()\"\r\n  ></close-dialog-btn>\r\n\r\n  <ng-container *ngIf=\"!data.isDialog\">\r\n    <!-- add new btn -->\r\n    <app-add-new-btn\r\n      *ngIf=\"planId > 0\"\r\n      url=\"/training/{{ moduleId }}/training-plan/add\"\r\n      [params]=\"parentParam\"\r\n    >\r\n    </app-add-new-btn>\r\n\r\n    <app-back-btn\r\n      url=\"/training/{{ moduleId }}/training-plan/index\"\r\n      [params]=\"pageParams\"\r\n    >\r\n    </app-back-btn>\r\n  </ng-container>\r\n</mat-card-title>\r\n\r\n<ng-container>\r\n  <mat-card-content\r\n    [class.has-fixed-title]=\"!data.isDialog\">\r\n    <mat-stepper #stepper [linear]=\"false\" (selectionChange)=\"stepChanged()\" [disableRipple]=\"true\">\r\n      <mat-step [completed]=\"isGeneraCompleted\"\r\n                label=\"{{ 'general' | translate | titlecase }}\"\r\n                *ngIf=\"!(data.isDialog && data.id)\">\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <i class=\"fas fa-check\"></i>\r\n        </ng-template>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-card>\r\n              <mat-card-title class=\"title-no-margin\">\r\n                <page-title class=\"stepper-section-title\" title=\"generalInfo\"></page-title>\r\n              </mat-card-title>\r\n\r\n              <mat-divider class=\"mt-2\"></mat-divider>\r\n              <div class=\"clearfix\"></div>\r\n\r\n              <app-plan-general-data\r\n                [data]=\"data\"\r\n                (changePlanId)=\"getPlanId($event)\"\r\n                (completed)=\"isGeneraCompleted=$event\"\r\n              ></app-plan-general-data>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n\r\n      <mat-step [completed]=\"isTNACompleted\"\r\n                label=\"{{ 'trainingNeedsAnalysis' | translate | titlecase }}\"\r\n                *ngIf=\"!(data.isDialog && !data.id)\">\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <i class=\"fas fa-check\"></i>\r\n        </ng-template>\r\n        <app-training-needs-analysis\r\n          [planId]=\"planId\"\r\n          (updateCourseDropdown)=\"updateCourseDropdown = !updateCourseDropdown\"\r\n          (completed)=\"isTNACompleted=$event\"\r\n        ></app-training-needs-analysis>\r\n      </mat-step>\r\n\r\n      <mat-step [completed]=\"isExpensisCompleted\"\r\n                label=\"{{ 'planCoursesExpensis' | translate | titlecase }}\"\r\n                *ngIf=\"!(data.isDialog && !data.id)\">\r\n        <ng-template matStepperIcon=\"edit\">\r\n          <i class=\"fas fa-check\"></i>\r\n        </ng-template>\r\n        <app-plan-courses-and-expensis\r\n          [planId]=\"planId\"\r\n          [updateCourseDropdown]=\"updateCourseDropdown\"\r\n          (completed)=\"isExpensisCompleted=$event\"\r\n        ></app-plan-courses-and-expensis>\r\n      </mat-step>\r\n    </mat-stepper>\r\n  </mat-card-content>\r\n\r\n  <steps-footer\r\n    *ngIf=\"!data.isDialog\"\r\n    [stepper]=\"stepper\"\r\n    [parentParam]=\"parentParam\"\r\n    url=\"/training/{{ moduleId }}/training-plan\"\r\n    [pageParams]=\"pageParams\"\r\n  ></steps-footer>\r\n</ng-container>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IRowActionsModel } from \"app/shared/interfaces/user-views\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport {\r\n  planCourseEmployeeToDisplay,\r\n  planCourseToDisplay,\r\n} from \"app/training/mapper/training-plan\";\r\nimport {\r\n  IPlanCourseEmployeeDeleteParams,\r\n  IPlanCourseEmployeesSearchParams,\r\n  IPlanCourseModel,\r\n  IPlanCourseRequest,\r\n  IPlanCoursesEmployeeModel,\r\n} from \"app/training/models/training-plan/plan-courses-expenses\";\r\nimport { PlanCoursesService } from \"app/training/services/traning-plan/plan-courses.service\";\r\nimport { PlanExpensesComponent } from \"../plan-expenses/plan-expenses.component\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-plan-courses-and-expensis\",\r\n  templateUrl: \"./plan-courses-and-expensis.component.html\",\r\n  styleUrls: [\"./plan-courses-and-expensis.component.scss\"],\r\n})\r\nexport class PlanCoursesAndExpensisComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  @Input() planId: number = 0;\r\n  @Input() isView: boolean = false;\r\n  showOnlyIndex = false;\r\n  @Output() updateViewDisplay = new EventEmitter<boolean>();\r\n  @Output() completed = new EventEmitter<boolean>();\r\n\r\n  // change dropdown && employees\r\n  @Input() updateCourseDropdown: boolean;\r\n\r\n  @ViewChild(PlanExpensesComponent) expenseComponent: PlanExpensesComponent;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomnsSearch: string[] = [\r\n    // \"Ser\",\r\n    \"code\",\r\n    \"employeeNameEn\",\r\n    \"employeeNameAr\",\r\n    \"job\",\r\n    \"selectAll\",\r\n  ];\r\n  isLoadedSearch: boolean = false;\r\n  dataSourceSearch: MatTableDataSource<IPlanCoursesEmployeeModel>;\r\n\r\n  mandatoryColomnsEmployee: string[] = [\r\n    // \"Ser\",\r\n    \"code\",\r\n    \"employeeNameEn\",\r\n    \"employeeNameAr\",\r\n    \"job\",\r\n    \"actions\",\r\n  ];\r\n  isLoadedEmployee: boolean = false;\r\n  dataSourceEmployee: MatTableDataSource<IPlanCoursesEmployeeModel>;\r\n\r\n  mandatoryColomnsCourses: string[] = [\r\n    // \"Ser\",\r\n    \"title\",\r\n    \"plan\",\r\n    \"course\",\r\n    \"fromDate\",\r\n    \"toDate\",\r\n    \"online\",\r\n    \"budget\",\r\n    \"actions\",\r\n  ];\r\n  isLoadedCourses: boolean = false;\r\n  dataSourceCourses: MatTableDataSource<IPlanCourseModel>;\r\n\r\n  optionalColomns: string[] = [];\r\n\r\n  showIndexAfterSubmit: boolean = false;\r\n\r\n  rowFunctionsSelectedEmployees: IRowActionsModel;\r\n\r\n  constructor(private planCoursesService: PlanCoursesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNallable: true}],\r\n        course_ID: [null, [Validators.required]],\r\n        planCourseTitle: [null, [Validators.required]],\r\n        from_Date: [null, [Validators.required]],\r\n        to_Date: [null, [Validators.required]],\r\n        instructor_ID: [, [Validators.required]],\r\n        note: [null],\r\n        isOnline: [true],\r\n        tsP_ID: [null],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"from_Date\", \"to_Date\"),\r\n      }\r\n    );\r\n\r\n    this.formCtrls.course_ID.valueChanges.subscribe((courseId) => {\r\n      if (courseId > 0) this.searchEmployees(courseId);\r\n    });\r\n\r\n    if (this.isView) this.showOnlyIndex = true;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    // if (this.dataSourceSearch?.data?.length > 0)\r\n    //   this.dataSourceSearch = new MatTableDataSource(null);\r\n    if (this.dataSourceCourses?.data?.length > 0)\r\n      this.dataSourceCourses = new MatTableDataSource(null);\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.planId > 0) {\r\n      this.getList(this.firstPage);\r\n    }\r\n    else {\r\n      this.isLoadedCourses = true;\r\n    }\r\n  }\r\n\r\n  override onModulesChanged(): void {\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.plan_course\r\n    );\r\n\r\n    this.rowFunctionsSelectedEmployees = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.plan_course_general_data\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.updateCourseDropdown && this.form) {\r\n      this.searchEmployees(this.formCtrls?.course_ID.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // //////////////// section 1 >> course & employees //////////////// //\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPlanCourseRequest = {\r\n        plan_Course: {\r\n          id: this.form.value.id,\r\n          Plan_ID: this.planId,\r\n          Course_ID: this.form.value.course_ID,\r\n          Name: this.form.value.planCourseTitle,\r\n          From_Date: HelpersFunctions.mapDateReverse(this.form.value.from_Date),\r\n          To_Date: HelpersFunctions.mapDateReverse(this.form.value.to_Date),\r\n          TSP_ID: this.form.value.tsP_ID,\r\n          Instructor_ID: this.form.value.instructor_ID,\r\n          Note: this.form.value.note,\r\n        },\r\n        IsOnline: this.form.value.isOnline ?? false,\r\n        SelectedEmployeeInstanceIDs: [], // get from datasource employees\r\n      };\r\n      if (model.IsOnline) model.plan_Course.TSP_ID = null;\r\n\r\n      this.dataSourceSearch?.data\r\n        ?.filter((ele) => ele.isSelected)\r\n        .forEach((selected) => {\r\n          model.SelectedEmployeeInstanceIDs.push(selected.person_Instance_ID);\r\n        });\r\n\r\n      // employees added before\r\n      this.dataSourceEmployee?.data?.forEach((emp) => {\r\n        model.SelectedEmployeeInstanceIDs.push(emp.person_Instance_ID);\r\n      });\r\n\r\n      if (model.SelectedEmployeeInstanceIDs.length == 0) {\r\n        this.warning(\"selectOneEmployee\");\r\n        return;\r\n      }\r\n\r\n      model.plan_Course.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  // add course and employees\r\n  create(model: IPlanCourseRequest) {\r\n    this.showLoading(\"courses\");\r\n    this.planCoursesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IPlanCourseRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.formCtrls.id.setValue(res.data.plan_Course.id);\r\n          if (this.isView) this.getList(this.currentPage);\r\n          // update employees tables\r\n          this.searchEmployees(model.plan_Course.Course_ID);\r\n          this.getSelectedEmployees(model.plan_Course.Course_ID);\r\n          this.completed.emit(true);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"courses\");\r\n      });\r\n  }\r\n\r\n  update(model: IPlanCourseRequest) {\r\n    this.showLoading(\"courses\");\r\n    this.planCoursesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IPlanCourseRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.isView) this.getList(this.currentPage);\r\n          if (\r\n            model.SelectedEmployeeInstanceIDs.length !=\r\n            this.dataSourceEmployee?.data?.length\r\n          ) {\r\n            // update employees tables\r\n            this.searchEmployees(model.plan_Course.Course_ID);\r\n            this.getSelectedEmployees(model.plan_Course.Course_ID);\r\n          }\r\n          this.completed.emit(true);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"courses\");\r\n      });\r\n  }\r\n\r\n  // get employees when select course\r\n  searchEmployees(courseId: number) {\r\n    this.dataSourceSearch = new MatTableDataSource(null);\r\n    if (courseId > 0) {\r\n      this.isLoadedSearch = false;\r\n      let searchParams: IPlanCourseEmployeesSearchParams = {\r\n        planId: this.planId,\r\n        Course_ID: courseId,\r\n      };\r\n      this.planCoursesService\r\n        .getPlanEmployees(searchParams)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponse<IPlanCoursesEmployeeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSourceSearch = new MatTableDataSource(\r\n              planCourseEmployeeToDisplay(res.data)\r\n            );\r\n            this.isLoadedSearch = true;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  // get employees selected >> in edit course\r\n  getSelectedEmployees(courseId: number) {\r\n    this.dataSourceEmployee = new MatTableDataSource(null);\r\n    if (courseId > 0) {\r\n      this.isLoadedEmployee = false;\r\n      let searchParams: IPlanCourseEmployeesSearchParams = {\r\n        planId: this.planId,\r\n        Course_ID: courseId,\r\n      };\r\n      this.planCoursesService\r\n        .getSelectedEmployees(searchParams)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponse<IPlanCoursesEmployeeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSourceEmployee = new MatTableDataSource(\r\n              planCourseEmployeeToDisplay(res.data)\r\n            );\r\n            this.isLoadedEmployee = true;\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  changeIsOnline(value: boolean) {\r\n    if (value) this.formCtrls.tsP_ID.clearValidators();\r\n    else this.formCtrls.tsP_ID.setValidators([Validators.required]);\r\n    this.formCtrls.tsP_ID.updateValueAndValidity();\r\n  }\r\n\r\n  onDeleteEmployee(employee: IPlanCoursesEmployeeModel): void {\r\n    let msg = this.msgTranslate(\r\n      employee.employeeNameAr,\r\n      employee.employeeNameEn\r\n    );\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.deleteEmployee(employee);\r\n    });\r\n  }\r\n\r\n  deleteEmployee(employee: IPlanCoursesEmployeeModel) {\r\n    let deleteParams: IPlanCourseEmployeeDeleteParams = {\r\n      person_instance_id: employee.person_Instance_ID,\r\n      plan_course_id: this.formCtrls.id.value,\r\n    };\r\n    this.showLoading(\"courses\");\r\n    this.planCoursesService\r\n      .DeleteEmployee(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // update employees tables\r\n          this.searchEmployees(this.formCtrls.course_ID.value);\r\n          this.getSelectedEmployees(this.formCtrls.course_ID.value);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"courses\");\r\n      });\r\n  }\r\n\r\n  onClearAll(): void {\r\n    let msg = this.translate(\"allEmployees\");\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.clearAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  clearAll() {\r\n    this.showLoading(\"courses\");\r\n    this.planCoursesService\r\n      .DeleteAllEmployees(this.formCtrls.id.value)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // update employees tables\r\n          this.searchEmployees(this.formCtrls.course_ID.value);\r\n          this.dataSourceEmployee = new MatTableDataSource([]);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"courses\");\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, isOnline: true});\r\n    this.submitted = false;\r\n\r\n    this.dataSourceEmployee = new MatTableDataSource(null);\r\n  }\r\n\r\n  // //////////////// section 3 > index //////////////// //\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.dataSourceCourses = new MatTableDataSource(null);\r\n    this.isLoadedCourses = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.planCoursesService\r\n      .getList(this.planId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IPlanCourseModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSourceCourses = new MatTableDataSource(\r\n            planCourseToDisplay(res.data)\r\n          );\r\n          this.isLoadedCourses = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  courseAndExpensesToEdit(course: IPlanCourseModel) {\r\n    this.form.patchValue(course);\r\n    // this.formCtrls.course_ID.setValue(course.course_ID);\r\n    this.formCtrls.planCourseTitle.setValue(course.name);\r\n    this.formCtrls.isOnline.setValue(course.tsP_ID ? false : true);\r\n    if (this.isView) this.showAddInsideView();\r\n    this.getSelectedEmployees(course.course_ID);\r\n  }\r\n\r\n  onDelete(course: IPlanCourseModel): void {\r\n    let msg = course.title + \" - \" + course.course;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(course);\r\n    });\r\n  }\r\n\r\n  delete(course: IPlanCourseModel) {\r\n    this.showLoading(\"courses\");\r\n    this.planCoursesService.Delete(course.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSourceCourses.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading(\"courses\");\r\n    });\r\n  }\r\n\r\n  // //////////////// submit all //////////////// //\r\n\r\n  submitAll() {\r\n    this.getList(this.currentPage);\r\n    if (this.isView) this.returnToView();\r\n    else {\r\n      this.clearForm();\r\n      this.expenseComponent.clearForm();\r\n      this.showIndexAfterSubmit = true;\r\n    }\r\n  }\r\n\r\n  // //////////////// view //////////////// //\r\n\r\n  showAddInsideView() {\r\n    this.updateViewDisplay.emit(true);\r\n    this.showOnlyIndex = false;\r\n    window.scrollTo({top: 0, behavior: \"smooth\"});\r\n  }\r\n\r\n  returnToView() {\r\n    this.updateViewDisplay.emit(false);\r\n    this.showOnlyIndex = true;\r\n    this.clearForm();\r\n    this.expenseComponent.clearForm();\r\n  }\r\n}\r\n","<ngx-spinner [name]=\"'courses'\"></ngx-spinner>\r\n\r\n<div class=\"row\" [class.hidden]=\"showOnlyIndex\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title class=\"stepper-section-title\" title=\"generalInformationAboutPlanCourse\"></page-title>\r\n        <span class=\"part-of-title\"> 1/2 </span>\r\n\r\n        <button\r\n          mat-button\r\n          class=\"float-right section-edit-btn pright-6 pleft-6 darkBlue\"\r\n          id=\"section_edit_btn\"\r\n          (click)=\"returnToView()\"\r\n          *ngIf=\"!showOnlyIndex && isView\"\r\n        >\r\n          <i class=\"ft-corner-up-left font-medium-3\"></i>\r\n        </button>\r\n        <div class=\"clearfix\"></div>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-course-by-plan-dropdown\r\n                    [control]=\"formCtrls.course_ID\"\r\n                    [planId]=\"planId ?? 0\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    [changeList]=\"updateCourseDropdown\"\r\n                  ></app-course-by-plan-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.planCourseTitle\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"planCourseTitle\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.from_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"fromDate\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.to_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"toDate\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-instructor-dropdown\r\n                    [control]=\"formCtrls.instructor_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  ></app-instructor-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.note\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"notes\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12 mbottom-20 mtop-14\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isOnline\"\r\n                    label=\"online\"\r\n                    labelPosition=\"before\"\r\n                    class=\"w-100\"\r\n                    (onChange)=\"changeIsOnline($event)\"\r\n                  ></app-check-box>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"col-md-4 col-lg-3 col-12\"\r\n                  [class.hidden]=\"formCtrls.isOnline.value\"\r\n                >\r\n                  <app-tsp-dropdown\r\n                    [control]=\"formCtrls.tsP_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  ></app-tsp-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <!-- display after choose course -->\r\n      <ng-container *ngIf=\"formCtrls.course_ID.value > 0\">\r\n        <mat-card-content>\r\n          <mat-divider class=\"w-75 m-auto\"></mat-divider>\r\n\r\n          <app-material-table\r\n            [isLoaded]=\"isLoadedSearch\"\r\n            [dataSource]=\"dataSourceSearch\"\r\n            [mandatoryColomns]=\"mandatoryColomnsSearch\"\r\n            [optionalColomns]=\"optionalColomns\"\r\n            class=\"table-in-forms\"\r\n            [showPaginator]=\"false\"\r\n            [showFilter]=\"false\"\r\n            checkboxColumnName=\"isSelected\"\r\n          >\r\n          </app-material-table>\r\n        </mat-card-content>\r\n      </ng-container>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn\r\n          *ngIf=\"formCtrls.id.value > 0 && (isView || showIndexAfterSubmit)\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n        </reset-form-btn>\r\n\r\n        <submit-btn\r\n          [disabled]=\"!planId\"\r\n          [id]=\"formCtrls.id.value\"\r\n          [color]=\"btn.darkBlue\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [iconPositionBefore]=\"false\"\r\n          (onClick)=\"submit()\"\r\n        >\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- display selected employees (edit course mode) -->\r\n<div class=\"row mtop-26\" *ngIf=\"formCtrls.id.value > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title class=\"stepper-section-title\" title=\"selectedEmployees\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content>\r\n        <mat-divider class=\"w-75 m-auto\"></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoadedEmployee\"\r\n          [dataSource]=\"dataSourceEmployee\"\r\n          [mandatoryColomns]=\"mandatoryColomnsEmployee\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [actions]=\"rowFunctionsSelectedEmployees\"\r\n          (deleteRow)=\"onDeleteEmployee($event)\"\r\n          class=\"table-in-forms\"\r\n          [showPaginator]=\"false\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"clearAll\"\r\n          [color]=\"btn.darkBlueBorder\"\r\n          [disabled]=\"!dataSourceEmployee || dataSourceEmployee.data?.length == 0\"\r\n          (click)=\"onClearAll()\"\r\n        >\r\n        </app-button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- expenses -->\r\n<div class=\"row mtop-26\" [class.hidden]=\"showOnlyIndex\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <app-plan-expenses\r\n        [planId]=\"planId\"\r\n        [planCourseId]=\"formCtrls.id.value\"\r\n      ></app-plan-expenses>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <app-button\r\n          [disabled]=\"!planId || formCtrls.id.value == 0\"\r\n          label=\"saveAndSubmitPlan\"\r\n          [color]=\"btn.darkBlue\"\r\n          (click)=\"submitAll()\"\r\n        >\r\n        </app-button>\r\n        <div class=\"clearfix\"></div>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- plan courses index -->\r\n<div class=\"row mtop-26\" *ngIf=\"planId > 0 && (isView || showIndexAfterSubmit)\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title class=\"stepper-section-title\" title=\"planCoursesIndex\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-35\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"addPlan\"\r\n          class=\"float-right mb-1\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [iconPositionBefore]=\"false\"\r\n          [color]=\"btn.darkBlue\"\r\n          (click)=\"showAddInsideView()\"\r\n          *ngIf=\"showOnlyIndex\"\r\n        >\r\n        </app-button>\r\n        <div class=\"clearfix\"></div>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoadedCourses\"\r\n          [dataSource]=\"dataSourceCourses\"\r\n          [mandatoryColomns]=\"mandatoryColomnsCourses\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n          (editRow)=\"courseAndExpensesToEdit($event)\"\r\n          [showPaginator]=\"false\"\r\n          class=\"table-in-forms\"\r\n          [showSpaceTop]=\"false\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { planCourseExpenseToDisplay } from \"app/training/mapper/training-plan\";\r\nimport {\r\n  IPlanCourseExpensesDeleteParams,\r\n  IPlanCourseExpensesModel,\r\n  IPlanCourseExpensesRequest,\r\n} from \"app/training/models/training-plan/plan-courses-expenses\";\r\nimport { PlanExpensesService } from \"app/training/services/traning-plan/plan-expenses.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-plan-expenses\",\r\n  templateUrl: \"./plan-expenses.component.html\",\r\n  styleUrls: [\"./plan-expenses.component.scss\"],\r\n})\r\nexport class PlanExpensesComponent extends AppHelpers implements OnInit {\r\n  @Input() planId: number = 0;\r\n  @Input() planCourseId: number = 0;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    // \"Ser\",\r\n    \"expense\",\r\n    \"value\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<IPlanCourseExpensesModel>;\r\n\r\n  constructor(private planExpensesService: PlanExpensesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNallable: true }],\r\n      expenseId: [null, [Validators.required]],\r\n      budget: [null, [Validators.required, CustomValidators.gte(0)]],\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes.planCourseId?.currentValue > 0 &&\r\n      this.checkNoBusinessOrCompany()\r\n    )\r\n      this.getAll();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.planCourseId > 0) this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  override onModulesChanged(): void {\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.plan_course_expense\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.planExpensesService\r\n      .getAll(this.planCourseId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPlanCourseExpensesModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            planCourseExpenseToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPlanCourseExpensesRequest = {\r\n        plan_Course_ID: this.planCourseId,\r\n        expense_ID: this.form.value.expenseId,\r\n        expense_Value: this.form.value.budget,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IPlanCourseExpensesRequest) {\r\n    this.showLoading(\"expenses\");\r\n    this.planExpensesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IPlanCourseExpensesModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.clearForm();\r\n          this.getAll();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"expenses\");\r\n      });\r\n  }\r\n\r\n  onDelete(expense: IPlanCourseExpensesModel): void {\r\n    let msg = expense.expense + \" - \" + expense.value;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(expense);\r\n    });\r\n  }\r\n\r\n  delete(expense: IPlanCourseExpensesModel) {\r\n    let deleteParams: IPlanCourseExpensesDeleteParams = {\r\n      plan_course_id: expense.plan_Course_ID,\r\n      expense_id: expense.expense_ID,\r\n    };\r\n    this.showLoading(\"expenses\");\r\n    this.planExpensesService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"expenses\");\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset(/* { id: 0 } */);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner [name]=\"'expenses'\"></ngx-spinner>\r\n\r\n<mat-card-title>\r\n  <page-title class=\"stepper-section-title\" title=\"planCourseExpenses\"></page-title>\r\n  <span class=\"part-of-title\"> 2/2 </span>\r\n</mat-card-title>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<mat-card-content class=\"container-fluid mtop-45\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <courseForm [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-expenses-dropdown\r\n              [control]=\"formCtrls.expenseId\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n            ></app-expenses-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.budget\"\r\n              [submitted]=\"submitted\"\r\n              label=\"budget\"\r\n              type=\"number\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <submit-btn\r\n              [disabled]=\"!planCourseId\"\r\n              [color]=\"btn.darkBlue\"\r\n              icon=\"pi pi-plus-circle\"\r\n              class=\"btn-large mt-1 line-height-3\"\r\n              [iconPositionBefore]=\"false\"\r\n              (onClick)=\"submit()\"\r\n            >\r\n            </submit-btn>\r\n          </div>\r\n        </div>\r\n      </courseForm>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<!-- expenses index -->\r\n<ng-container *ngIf=\"planCourseId\">\r\n  <mat-card-content>\r\n    <mat-divider class=\"w-75 m-auto\"></mat-divider>\r\n\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [dataSource]=\"dataSource\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [actions]=\"rowFunctions\"\r\n      class=\"table-in-forms small-table\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n      [showPaginator]=\"false\"\r\n      [showFilter]=\"false\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</ng-container>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport {\r\n  ITrainingPlanModel,\r\n  ITrainingPlanRequest,\r\n} from \"app/training/models/training-plan/training-plan\";\r\nimport { TrainingPlanIndexService } from \"app/training/services/traning-plan/training-plan-index.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-plan-general-data\",\r\n  templateUrl: \"./plan-general-data.component.html\",\r\n  styleUrls: [\"./plan-general-data.component.scss\"],\r\n})\r\nexport class PlanGeneralDataComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  planId: number = 0;\r\n  @Output() changePlanId = new EventEmitter<number>();\r\n  @Output() completed = new EventEmitter<boolean>();\r\n  // use in view\r\n  @Input() plan: ITrainingPlanModel;\r\n  @Output() closeAfterUpdate = new EventEmitter<ITrainingPlanModel>();\r\n\r\n  // from add new dialog\r\n  @Input() data: ICreateDialog;\r\n\r\n  constructor(private trainingPlanIndexService: TrainingPlanIndexService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.planId > 0 && this.checkNoBusinessOrCompany()) this.getPlanById();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [this.planId, {nonNullable: true}],\r\n        ar_Name: [null, [Validators.required]],\r\n        en_Name: [null, [Validators.required]],\r\n        from_Date: [null, Validators.required],\r\n        to_Date: [null, Validators.required],\r\n        note: [null],\r\n        budget: [null, [CustomValidators.gte(0)]],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"from_Date\", \"to_Date\"),\r\n      }\r\n    );\r\n\r\n    if (this.plan) this.planId = this.plan.id;\r\n\r\n    if (this.data?.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let data = {} as ITrainingPlanRequest;\r\n      data.id = this.formCtrls.id.value;\r\n      data.ar_Name = this.formCtrls.ar_Name.value;\r\n      data.en_Name = this.formCtrls.en_Name.value;\r\n      data.from_Date = HelpersFunctions.mapDateReverse(\r\n        this.formCtrls.from_Date.value\r\n      );\r\n      data.to_Date = HelpersFunctions.mapDateReverse(\r\n        this.formCtrls.to_Date.value\r\n      );\r\n      data.budget = this.formCtrls.budget.value;\r\n      data.note = this.formCtrls.note.value;\r\n\r\n      if (data.id == 0) this.create(data);\r\n      else this.update(data);\r\n    }\r\n  }\r\n\r\n  getPlanById() {\r\n    // edit in view\r\n    if (this.plan) this.form.patchValue(this.plan);\r\n    // edit after add if change company\r\n    else {\r\n      this.showLoading(\"general\");\r\n      this.trainingPlanIndexService\r\n        .getById(this.planId)\r\n        .subscribe((res: IResponse<ITrainingPlanModel[]>) => {\r\n          if ((res.message.messageType = MessageTypes.Success)) {\r\n            this.form.patchValue(res.data[0]);\r\n          }\r\n          else this.errorList(res?.message?.messages);\r\n          this.hideLoading(\"general\");\r\n        });\r\n    }\r\n  }\r\n\r\n  create(data: ITrainingPlanRequest) {\r\n    this.showLoading(\"general\");\r\n    this.trainingPlanIndexService\r\n      .create(data)\r\n      .subscribe((res: IResponse<ITrainingPlanModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.planId = res.data.id;\r\n          this.formCtrls.id.setValue(this.planId);\r\n          if (!this.data.isDialog) {\r\n            let url = `/training/${this.moduleId}/training-plan/edit/${this.planId}`;\r\n            this.navigateTo(url);\r\n          }\r\n          this.completed.emit(true);\r\n          this.changePlanId.emit(this.planId);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"general\");\r\n      });\r\n  }\r\n\r\n  update(data: ITrainingPlanRequest) {\r\n    this.showLoading(\"general\");\r\n    this.trainingPlanIndexService\r\n      .update(data)\r\n      .subscribe((res: IResponse<ITrainingPlanModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.closeAfterUpdate.emit(res.data);\r\n          this.completed.emit(true);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"general\");\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner [name]=\"'general'\"></ngx-spinner>\r\n\r\n<mat-card-content class=\"container-fluid mtop-40\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.ar_Name\"\r\n              [submitted]=\"submitted\"\r\n              label=\"ar_Name\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.en_Name\"\r\n              [submitted]=\"submitted\"\r\n              label=\"en_Name\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.budget\"\r\n              [submitted]=\"submitted\"\r\n              label=\"budget\"\r\n              type=\"number\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.from_Date\"\r\n              [submitted]=\"submitted\"\r\n              label=\"froM_DATE\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.to_Date\"\r\n              [submitted]=\"submitted\"\r\n              label=\"tO_DATE\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.note\"\r\n              [submitted]=\"submitted\"\r\n              label=\"notes\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\" [style]=\"{ 'margin-bottom': '-15px' }\">\r\n  <reset-form-btn\r\n    *ngIf=\"formCtrls.id.value == 0\"\r\n    (click)=\"clearForm()\"\r\n  ></reset-form-btn>\r\n\r\n  <submit-btn\r\n    (onClick)=\"submit()\"\r\n    [id]=\"formCtrls.id.value\"\r\n    [color]=\"btn.darkBlue\"\r\n    icon=\"pi pi-plus-circle\"\r\n    [iconPositionBefore]=\"false\"\r\n  >\r\n  </submit-btn>  \r\n</mat-card-actions>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { planTnaToDisplay } from \"app/training/mapper/training-plan\";\r\nimport {\r\n  IPlanTrainingNeedsEmployeeDeleteParams,\r\n  IPlanTrainingNeedsEmployeeModel,\r\n  IPlanTrainingNeedsRequest,\r\n  ITNAPlanSearchRequest,\r\n} from \"app/training/models/training-plan/training-needs-analysis\";\r\nimport { TrainingNeedsAnalysisService } from \"app/training/services/traning-plan/training-needs-analysis.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\n\r\n@Component({\r\n  selector: \"app-training-needs-analysis\",\r\n  templateUrl: \"./training-needs-analysis.component.html\",\r\n  styleUrls: [\"./training-needs-analysis.component.scss\"],\r\n})\r\nexport class TrainingNeedsAnalysisComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  @Input() planId: number = 0;\r\n  @Input() isView: boolean = false;\r\n  showOnlyIndex = false;\r\n  @Output() updateViewDisplay = new EventEmitter<boolean>();\r\n  @Output() updateCourseDropdown = new EventEmitter<any>();\r\n  @Output() completed = new EventEmitter<boolean>();\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomnsSearch: string[] = [\r\n    // \"Ser\",\r\n    // \"code\",\r\n    \"employee\",\r\n    \"department\",\r\n    \"job\",\r\n    \"noOfTakenCourses\",\r\n    Constants.selectColName,\r\n  ];\r\n  isLoadedSearch: boolean = false;\r\n  dataSourceSearch: MatTableDataSource<IPlanTrainingNeedsEmployeeModel>;\r\n  showSearchSection: boolean = false;\r\n\r\n  mandatoryColomnsEmployees: string[] = [\r\n    // \"Ser\",\r\n    // \"code\",\r\n    \"employee\",\r\n    \"department\",\r\n    \"job\",\r\n    \"noOfTakenCourses\",\r\n    \"actions\",\r\n  ];\r\n  isLoadedEmployees: boolean = false;\r\n  dataSourceEmployees: MatTableDataSource<IPlanTrainingNeedsEmployeeModel>;\r\n\r\n  optionalColomns: string[] = [];\r\n\r\n  lastSearchModel: ITNAPlanSearchRequest;\r\n  showIndexAfterAdd: boolean = false;\r\n\r\n  constructor(private tNAService: TrainingNeedsAnalysisService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      // training path\r\n      trainingPath: [false],\r\n      TrainhgPathPrioritySelected: [[]],\r\n      // training requests\r\n      trainingRequests: [false],\r\n      reasonId: [[], [Validators.required]],\r\n      selfServiceRequest: [true],\r\n      // pms\r\n      pms: [false],\r\n      appraisalFrom: [null],\r\n      appraisalTo: [null],\r\n      PMS_Grade: [0, [CustomValidators.gte(0)]],\r\n      competenceId: [[], [Validators.required]],\r\n      // with implementation\r\n      withImplementation: [false],\r\n    });\r\n\r\n    if (this.isView) {\r\n      this.showOnlyIndex = true;\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    // if (this.dataSourceEmployees?.data?.length > 0) {\r\n    //   this.dataSourceEmployees = new MatTableDataSource(null);\r\n    // }\r\n\r\n    if (this.dataSourceSearch?.data?.length > 0) {\r\n      this.dataSourceSearch = new MatTableDataSource(null);\r\n    }\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.planId > 0) {\r\n      this.getAll();\r\n    }\r\n    else {\r\n      this.isLoadedEmployees = true;\r\n    }\r\n  }\r\n\r\n  override onModulesChanged(): void {\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.plan_tna\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.dataSourceEmployees = new MatTableDataSource(null);\r\n    this.isLoadedEmployees = false;\r\n\r\n    let searchModel: ITNAPlanSearchRequest = {\r\n      Plan_ID: this.planId,\r\n      IsEditMode: true,\r\n      TrainingPath: false,\r\n      TrainhgPathPrioritySelected: [],\r\n      TrainingRequest: false,\r\n      TrainingRequestReasonsSelected: [],\r\n      TrainingRequestFromSelfService: false,\r\n      PMS: false,\r\n      AppraisalFromDate: null,\r\n      AppraisalToDate: null,\r\n      PMS_Grade: 0,\r\n      PMS_competenciesSelected: [],\r\n      WithImplementation: false,\r\n    };\r\n\r\n    this.tNAService\r\n      .searchEmployees(searchModel)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPlanTrainingNeedsEmployeeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSourceEmployees = new MatTableDataSource(\r\n            planTnaToDisplay(res.data.filter((emp) => emp.isSelected))\r\n          );\r\n          // console.log(\r\n          //   planTnaToDisplay(res.data.filter((emp) => emp.isSelected))\r\n          // );\r\n          this.isLoadedEmployees = true;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPlanTrainingNeedsRequest = {\r\n        Plan_ID: this.planId,\r\n        person_Courses: [],\r\n      };\r\n\r\n      this.dataSourceSearch.data\r\n        .filter((ele) => ele.isSelected)\r\n        .forEach((selected) => {\r\n          model.person_Courses.push({\r\n            Course_ID: selected.course_ID,\r\n            Person_Instance_ID: selected.person_Instance_ID,\r\n          });\r\n        });\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IPlanTrainingNeedsRequest) {\r\n    this.showLoading(\"tna\");\r\n    this.tNAService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IPlanTrainingNeedsEmployeeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n          if (this.isView) {\r\n            this.returnToView();\r\n          }\r\n          else {\r\n            this.showIndexAfterAdd = true;\r\n          }\r\n          // update course list in next tab\r\n          this.updateCourseDropdown.emit();\r\n          this.completed.emit(true);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading(\"tna\");\r\n      });\r\n  }\r\n\r\n  onDelete(employee: IPlanTrainingNeedsEmployeeModel): void {\r\n    let msg = employee.employee;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(employee);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(employee: IPlanTrainingNeedsEmployeeModel) {\r\n    let params: IPlanTrainingNeedsEmployeeDeleteParams = {\r\n      plan_id: this.planId,\r\n      course_id: employee.course_ID,\r\n      person_instance_id: employee.person_Instance_ID,\r\n    };\r\n    this.showLoading(\"tna\");\r\n    this.tNAService.Delete(params).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.getAll();\r\n        this.searchEmployees(this.lastSearchModel);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading(\"tna\");\r\n    });\r\n  }\r\n\r\n  onClearAll(): void {\r\n    let msg = this.translate(\"allEmployees\");\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.clearAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  clearAll() {\r\n    this.showLoading(\"tna\");\r\n    this.tNAService.DeleteAll(this.planId).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.dataSourceEmployees = new MatTableDataSource([]);\r\n        if (this.lastSearchModel) {\r\n          this.searchEmployees(this.lastSearchModel);\r\n        }\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading(\"tna\");\r\n    });\r\n  }\r\n\r\n  onSubmitSearchEmployees() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      // if no filter box checked\r\n      if (\r\n        !this.formCtrls.trainingPath.value &&\r\n        !this.formCtrls.trainingRequests.value &&\r\n        !this.formCtrls.pms.value &&\r\n        !this.formCtrls.withImplementation.value\r\n      ) {\r\n        this.warning(\"selectAnyFilter\");\r\n        return;\r\n      }\r\n\r\n      // if no priority selected in training path\r\n      if (\r\n        this.formCtrls.trainingPath.value &&\r\n        this.formCtrls.TrainhgPathPrioritySelected.value.length == 0\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      this.showSearchSection = true;\r\n\r\n      let searchModel: ITNAPlanSearchRequest = {\r\n        Plan_ID: this.planId,\r\n        IsEditMode: false,\r\n        TrainingPath: this.form.value.trainingPath,\r\n        TrainhgPathPrioritySelected:\r\n          this.form.value.TrainhgPathPrioritySelected ?? [],\r\n        TrainingRequest: this.form.value.trainingRequests,\r\n        TrainingRequestReasonsSelected: this.form.value.reasonId ?? [],\r\n        TrainingRequestFromSelfService:\r\n          this.form.value.selfServiceRequest ?? false,\r\n        PMS: this.form.value.pms,\r\n        AppraisalFromDate: this.form.value.appraisalFrom,\r\n        AppraisalToDate: this.form.value.appraisalTo,\r\n        PMS_Grade: this.form.value.PMS_Grade ?? 0,\r\n        PMS_competenciesSelected: this.form.value.competenceId ?? [],\r\n        WithImplementation: this.form.value.withImplementation,\r\n      };\r\n      if (!searchModel.TrainingPath) {\r\n        searchModel.TrainhgPathPrioritySelected = [];\r\n      }\r\n      // console.log(\"search\", searchModel);\r\n\r\n      this.searchEmployees(searchModel);\r\n    }\r\n  }\r\n\r\n  searchEmployees(searchModel: ITNAPlanSearchRequest) {\r\n    this.dataSourceSearch = new MatTableDataSource(null);\r\n    this.isLoadedSearch = false;\r\n\r\n    this.tNAService\r\n      .searchEmployees(searchModel)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPlanTrainingNeedsEmployeeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSourceSearch = new MatTableDataSource(\r\n            planTnaToDisplay(res.data)\r\n          );\r\n          this.isLoadedSearch = true;\r\n          this.lastSearchModel = searchModel;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({\r\n      id: 0,\r\n      selfServiceRequest: true,\r\n      PMS_Grade: 0,\r\n      trainingPath: false,\r\n      trainingRequests: false,\r\n      pms: false,\r\n      withImplementation: false,\r\n      TrainhgPathPrioritySelected: [],\r\n      reasonId: [],\r\n      competenceId: [],\r\n    });\r\n    this.submitted = false;\r\n  }\r\n\r\n  showAddInsideView() {\r\n    this.updateViewDisplay.emit(true);\r\n    this.showOnlyIndex = false;\r\n    window.scrollTo({top: 0, behavior: \"smooth\"});\r\n  }\r\n\r\n  returnToView() {\r\n    this.updateViewDisplay.emit(false);\r\n    this.showOnlyIndex = true;\r\n    this.clearForm();\r\n    this.dataSourceSearch = new MatTableDataSource(null);\r\n    this.showSearchSection = false;\r\n  }\r\n}\r\n","<ngx-spinner [name]=\"'tna'\"></ngx-spinner>\r\n\r\n<div class=\"row\" [class.hidden]=\"showOnlyIndex\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title class=\"stepper-section-title\" title=\"searchEmployees\"></page-title>\r\n\r\n        <button\r\n          mat-button\r\n          class=\"float-right section-edit-btn pright-6 pleft-6 darkBlue\"\r\n          id=\"section_edit_btn\"\r\n          (click)=\"returnToView()\"\r\n          *ngIf=\"!showOnlyIndex && isView\"\r\n        >\r\n          <i class=\"ft-corner-up-left font-medium-3\"></i>\r\n        </button>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row justify-content-between\">\r\n                <div class=\"col-sm-6 col-lg-3 col-12\">\r\n                  <div class=\"inputs-box-with-label\">\r\n                    <div class=\"box-label\">\r\n                      <app-check-box\r\n                        [control]=\"formCtrls.trainingPath\"\r\n                        label=\"trainingPath\"\r\n                        labelPosition=\"before\"\r\n                        class=\"w-100\"\r\n                      ></app-check-box>\r\n                    </div>\r\n\r\n                    <div class=\"box-inputs pr-1 pl-3\">\r\n                      <app-priorities-checkboxs\r\n                        [control]=\"formCtrls.TrainhgPathPrioritySelected\"\r\n                        [disable]=\"!formCtrls.trainingPath.value\"\r\n                      >\r\n                      </app-priorities-checkboxs>\r\n                      <span\r\n                        class=\"danger\"\r\n                        [style]=\"{ 'font-size': '11px' }\"\r\n                        *ngIf=\"\r\n                          formCtrls.TrainhgPathPrioritySelected?.value?.length ==\r\n                            0 &&\r\n                          submitted &&\r\n                          formCtrls.trainingPath.value\r\n                        \"\r\n                      >\r\n                        {{ \"selectOnePriority\" | translate }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6 col-lg-3 col-12\">\r\n                  <div class=\"inputs-box-with-label\">\r\n                    <div class=\"box-label\">\r\n                      <app-check-box\r\n                        [control]=\"formCtrls.trainingRequests\"\r\n                        label=\"trainingRequests\"\r\n                        labelPosition=\"before\"\r\n                        class=\"w-100\"\r\n                      ></app-check-box>\r\n                    </div>\r\n\r\n                    <div class=\"box-inputs\">\r\n                      <app-reason-dropdown\r\n                        [control]=\"formCtrls.reasonId\"\r\n                        [submitted]=\"submitted\"\r\n                        [filter]=\"true\"\r\n                        [multi]=\"true\"\r\n                        [disable]=\"!formCtrls.trainingRequests.value\"\r\n                      ></app-reason-dropdown>\r\n\r\n                      <div>\r\n                        <app-check-box\r\n                          [control]=\"formCtrls.selfServiceRequest\"\r\n                          label=\"selfServiceRequest\"\r\n                          labelPosition=\"before\"\r\n                          [disabled]=\"!formCtrls.trainingRequests.value\"\r\n                        ></app-check-box>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6 col-lg-3 col-12\">\r\n                  <div class=\"inputs-box-with-label\">\r\n                    <div class=\"box-label\">\r\n                      <app-check-box\r\n                        [control]=\"formCtrls.pms\"\r\n                        label=\"PMS\"\r\n                        labelPosition=\"before\"\r\n                        class=\"w-100\"\r\n                      ></app-check-box>\r\n                    </div>\r\n\r\n                    <div class=\"box-inputs\">\r\n                      <app-datepicker\r\n                        [control]=\"formCtrls.appraisalFrom\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"appraisalFrom\"\r\n                        [disabled]=\"!formCtrls.pms.value\"\r\n                      >\r\n                      </app-datepicker>\r\n\r\n                      <app-datepicker\r\n                        [control]=\"formCtrls.appraisalTo\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"appraisalTo\"\r\n                        [disabled]=\"!formCtrls.pms.value\"\r\n                      >\r\n                      </app-datepicker>\r\n\r\n                      <app-input\r\n                        [control]=\"formCtrls.PMS_Grade\"\r\n                        [submitted]=\"submitted\"\r\n                        type=\"number\"\r\n                        label=\"PMS_Grade\"\r\n                        [disabled]=\"!formCtrls.pms.value\"\r\n                      >\r\n                      </app-input>\r\n\r\n                      <app-competence-dropdown\r\n                        [control]=\"formCtrls.competenceId\"\r\n                        [submitted]=\"submitted\"\r\n                        [filter]=\"true\"\r\n                        [multi]=\"true\"\r\n                        [disable]=\"!formCtrls.pms.value\"\r\n                      >\r\n                      </app-competence-dropdown>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6 col-lg-3 col-12\">\r\n                  <div class=\"inputs-box-with-label\">\r\n                    <div class=\"box-label no-content\">\r\n                      <app-check-box\r\n                        [control]=\"formCtrls.withImplementation\"\r\n                        label=\"withImplementation\"\r\n                        labelPosition=\"before\"\r\n                        class=\"w-100\"\r\n                      ></app-check-box>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"General.search\"\r\n          [color]=\"btn.darkBlue\"\r\n          (click)=\"onSubmitSearchEmployees()\"\r\n        >\r\n        </app-button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- display after search -->\r\n<div class=\"row mtop-26\" *ngIf=\"showSearchSection && !showOnlyIndex\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <span>{{ dataSourceSearch?.data?.length ?? 0 }}</span>\r\n        <page-title class=\"stepper-section-title\" title=\"result\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <app-material-table\r\n          *ngIf=\"planId > 0\"\r\n          [isLoaded]=\"isLoadedSearch\"\r\n          [dataSource]=\"dataSourceSearch\"\r\n          [mandatoryColomns]=\"mandatoryColomnsSearch\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          class=\"table-in-forms\"\r\n          [showPaginator]=\"false\"\r\n          [showSpaceTop]=\"false\"\r\n          checkboxColumnName=\"isSelected\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn\r\n          [color]=\"btn.darkBlue\"\r\n          icon=\"pi pi-plus-circle\"\r\n          (onClick)=\"submit()\"\r\n          [disabled]=\"!planId\"\r\n        >\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- display selected employees (after add them) -->\r\n<div class=\"row mtop-26\" *ngIf=\"planId > 0 && (isView || showIndexAfterAdd)\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title class=\"stepper-section-title\" title=\"selectedEmployees\"></page-title>\r\n        <span class=\"part-of-title\"> (TNA)</span>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-35\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"addEmployee\"\r\n          class=\"float-right mb-1\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [iconPositionBefore]=\"false\"\r\n          [color]=\"btn.darkBlue\"\r\n          (click)=\"showAddInsideView()\"\r\n          *ngIf=\"showOnlyIndex\"\r\n        >\r\n        </app-button>\r\n        <div class=\"clearfix\"></div>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoadedEmployees\"\r\n          *ngIf=\"planId > 0\"\r\n          [dataSource]=\"dataSourceEmployees\"\r\n          [mandatoryColomns]=\"mandatoryColomnsEmployees\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [actions]=\"rowFunctions\"\r\n          class=\"table-in-forms\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n          [showPaginator]=\"false\"\r\n          [showSpaceTop]=\"false\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"clearAll\"\r\n          [color]=\"btn.darkBlueBorder\"\r\n          [disabled]=\"!dataSourceEmployees || dataSourceEmployees?.data?.length == 0\"\r\n          (click)=\"onClearAll()\"\r\n        >\r\n        </app-button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { ISTPModel, ITSPRequest } from \"app/training/models/tsp\";\r\nimport { TspService } from \"app/training/services/tsp.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-add-tsp\",\r\n  templateUrl: \"./add-tsp.component.html\",\r\n  styleUrls: [\"./add-tsp.component.scss\"],\r\n})\r\nexport class AddTspComponent extends AppHelpers implements OnInit {\r\n  tspId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private tspService: TspService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddTspComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.tspId > 0 && this.checkNoBusinessOrCompany()) this.getTspById();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [this.tspId, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required]],\r\n      en_Name: [null, [Validators.required]],\r\n      breif_Name: [null],\r\n      address: [null],\r\n      mobile: [\r\n        null,\r\n        [\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n          CustomValidator.MobileStartsWith,\r\n          CustomValidator.mobileLength,\r\n        ],\r\n      ],\r\n      phone: [null],\r\n      fax: [null],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      webSite_URL: [null, CustomValidators.url],\r\n      i_M_C_Code: [null],\r\n      location: [null],\r\n      note: [null],\r\n      contactPersonName: [null],\r\n      contactPersonPhone: [null],\r\n      contactPersonMobile: [\r\n        null,\r\n        [\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n          CustomValidator.MobileStartsWith,\r\n          CustomValidator.mobileLength,\r\n        ],\r\n      ],\r\n      contactPersonEmail: [null, Validators.email],\r\n    });\r\n\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.tspId = Number(param.id);\r\n    });\r\n\r\n    if (this.data.value) {\r\n      this.formCtrls.ar_Name.setValue(this.data.value);\r\n      this.formCtrls.en_Name.setValue(this.data.value);\r\n    }\r\n\r\n    console.log(this.moduleId);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let data = {} as ITSPRequest;\r\n      data.id = this.formCtrls.id.value;\r\n      data.ar_Name = this.formCtrls.ar_Name.value;\r\n      data.en_Name = this.formCtrls.en_Name.value;\r\n      data.breif_Name = this.formCtrls.breif_Name.value;\r\n      data.location = this.formCtrls.location.value;\r\n      data.address = this.formCtrls.address.value;\r\n      data.webSite_URL = this.formCtrls.webSite_URL.value;\r\n      data.email = this.formCtrls.email.value;\r\n      data.mobile = this.formCtrls.mobile.value;\r\n      data.phone = this.formCtrls.phone.value;\r\n      data.fax = this.formCtrls.fax.value;\r\n      data.contactPersonName = this.formCtrls.contactPersonName.value;\r\n      data.contactPersonEmail = this.formCtrls.contactPersonEmail.value;\r\n      data.contactPersonMobile = this.formCtrls.contactPersonMobile.value;\r\n      data.contactPersonPhone = this.formCtrls.contactPersonPhone.value;\r\n      data.i_M_C_Code = this.formCtrls.i_M_C_Code.value;\r\n      data.note = this.formCtrls.note.value;\r\n\r\n      if (data.id == 0) this.create(data);\r\n      else this.update(data);\r\n    }\r\n  }\r\n\r\n  getTspById() {\r\n    this.showLoading();\r\n    this.tspService\r\n      .getById(this.tspId)\r\n      .subscribe((res: IResponse<ISTPModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          res.data[0].i_M_C_Code = res.data[0].i_M_C_Code?.trim();\r\n          this.form.patchValue(res.data[0]);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  create(data: ITSPRequest) {\r\n    this.showLoading();\r\n    this.tspService.create(data).subscribe((res: IResponse<ISTPModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.tspId = res.data.id;\r\n        this.formCtrls.id.setValue(this.tspId);\r\n        let url = `/training/${this.moduleId}/tsp/edit/${this.tspId}`;\r\n        if (!this.data.isDialog) this.navigateTo(url);\r\n        if (this.data.isDialog) this.dialogRef.close();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(data: ITSPRequest) {\r\n    this.showLoading();\r\n    this.tspService.update(data).subscribe((res: IResponse<ISTPModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"TSP\"></page-title>\r\n\r\n        <ng-container *ngIf=\"!data.isDialog\">\r\n          <!-- button add new-->\r\n          <app-add-new-btn\r\n            *ngIf=\"tspId > 0\"\r\n            url=\"/training/{{ moduleId }}/tsp/add\"\r\n            [params]=\"parentParam\"\r\n          >\r\n          </app-add-new-btn>\r\n\r\n          <!-- button back-->\r\n          <app-back-btn\r\n            url=\"/training/{{ moduleId }}/tsp/index\"\r\n            [params]=\"pageParams\"\r\n          >\r\n          </app-back-btn>\r\n        </ng-container>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n\r\n      <mat-card-content class=\"container-fluid mtop-20\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.breif_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"breif_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.address\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"address\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.mobile\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"mobile\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.phone\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"phone\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.fax\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"fax\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.email\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"email\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.webSite_URL\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"webSite_URL\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.i_M_C_Code\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"i_M_C_Code\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.location\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"location\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.note\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"notes\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.contactPersonName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"contactPersonName\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.contactPersonPhone\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"contactPersonPhone\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.contactPersonMobile\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"contactPersonMobile\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.contactPersonEmail\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"contactPersonEmail\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn\r\n          *ngIf=\"formCtrls.id.value == 0\"\r\n          (click)=\"clearForm()\"\r\n        ></reset-form-btn>\r\n\r\n        <submit-btn\r\n          (onClick)=\"submit()\"\r\n          [id]=\"formCtrls.id.value\"\r\n          [color]=\"btn.darkBlue\"\r\n          [iconPositionBefore]=\"false\"\r\n          [id]=\"formCtrls.id.value\"\r\n          icon=\"pi pi-plus-circle\"\r\n        >\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { ICourseModel, ICourseToDisplay } from \"../models/course/course\";\r\n\r\nexport function courseToDisplay(courses: ICourseModel[]): ICourseToDisplay[] {\r\n  return courses.map((course) => {\r\n    return <ICourseToDisplay>{\r\n      id: course.id,\r\n      courseCode: course.code,\r\n      ar_Name: course.ar_Name,\r\n      en_Name: course.en_Name,\r\n      abbrevation: course.abbrevation,\r\n      isFree: course.isFree == 1 ? true : false,\r\n      courseValue: course.courseValue,\r\n      isHolding: course.isHolding == 2 ? true : false,\r\n      holdingYears: course.holdingYears,\r\n      penaletyPercentege: course.penalty,\r\n      note: course.note,\r\n      outLine: course.outLine,\r\n      outlineDesc: course.outlineDesc,\r\n      threeMontheEvalution: course.threeMontheEvalution,\r\n      sixMontheEvalution: course.sixMontheEvalution,\r\n      trA_Course_Holding_Years: course.trA_Course_Holding_Years,\r\n      trA_TSP_Course: course.trA_TSP_Course?.map((res) => {\r\n        return {\r\n          tsP_ID: res.trA_TSP?.id,\r\n          location: res.trA_TSP?.location,\r\n          Name: msgTranslate(res.trA_TSP?.ar_Name, res.trA_TSP?.en_Name),\r\n        };\r\n      }),\r\n      trA_Instructor_Course: course.trA_Instructor_Course?.map((res) => {\r\n        return {\r\n          instructor_ID: res.trA_Instructor?.id,\r\n          jobTitle: res.trA_Instructor?.job,\r\n\r\n          Name: msgTranslate(\r\n            res.trA_Instructor?.ar_Name,\r\n            res.trA_Instructor?.en_Name\r\n          ),\r\n        };\r\n      }),\r\n      course_Type_ID: course.course_Type_ID,\r\n      courseType: msgTranslate(\r\n        course.trA_Course_Type?.ar_Name,\r\n        course.trA_Course_Type?.en_Name\r\n      ),\r\n      course_Category_ID: course.course_Category_ID,\r\n       courseCategory: msgTranslate(\r\n        course.trA_Course_Category?.ar_Name,\r\n        course.trA_Course_Category?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IPlanCourseExpensesModel,\r\n  IPlanCourseModel,\r\n  IPlanCoursesEmployeeModel,\r\n} from \"../models/training-plan/plan-courses-expenses\";\r\nimport { IPlanTrainingNeedsEmployeeModel } from \"../models/training-plan/training-needs-analysis\";\r\n\r\nexport function planTnaToDisplay(\r\n  data: IPlanTrainingNeedsEmployeeModel[]\r\n): IPlanTrainingNeedsEmployeeModel[] {\r\n  return (\r\n    data\r\n      // .filter((ele) => ele.core_Person != null)\r\n      .map((ele) => {\r\n        return <IPlanTrainingNeedsEmployeeModel>{\r\n          ...ele,\r\n          // code: ele.core_Person?.code,\r\n          // employee: msgTranslate(\r\n          //   ele.core_Person?.ar_Name,\r\n          //   ele.core_Person?.en_Name\r\n          // ),\r\n          employee: msgTranslate(ele.personNameAr, ele.personNameEn),\r\n          department: ele.core_Org\r\n            ?.map((org) => msgTranslate(org.ar_Name, org.en_Name))\r\n            .join(\", \"),\r\n          job: ele.core_Job_Title\r\n            ?.map((job) => msgTranslate(job.ar_Name, job.en_Name))\r\n            .join(\", \"),\r\n          noOfTakenCourses: `${msgTranslate(\r\n            ele.courseNameAr,\r\n            ele.courseNameEn\r\n          )} - (${ele.courseCount})`,\r\n          // isAdded: ele.isSelected,\r\n        };\r\n      })\r\n  );\r\n}\r\n\r\nexport function planCourseEmployeeToDisplay(\r\n  data: IPlanCoursesEmployeeModel[]\r\n): IPlanCoursesEmployeeModel[] {\r\n  return data.map((ele) => {\r\n    return <IPlanCoursesEmployeeModel>{\r\n      ...ele,\r\n      employeeNameAr: ele.ar_Name,\r\n      employeeNameEn: ele.en_Name,\r\n      job: msgTranslate(ele.ar_Job, ele.en_Job),\r\n      isSelected: false,\r\n    };\r\n  });\r\n}\r\n\r\nexport function planCourseToDisplay(\r\n  data: IPlanCourseModel[]\r\n): IPlanCourseModel[] {\r\n  return data.map((ele) => {\r\n    return <IPlanCourseModel>{\r\n      ...ele,\r\n      title: ele.name,\r\n      course: msgTranslate(ele.trA_Course?.ar_Name, ele.trA_Course?.en_Name),\r\n      plan: msgTranslate(ele.trA_PLan?.ar_Name, ele.trA_PLan?.en_Name),\r\n      fromDate: HelpersFunctions.mapDate(ele.from_Date),\r\n      toDate: HelpersFunctions.mapDate(ele.to_Date),\r\n      online: ele.tsP_ID ? false : true,\r\n      budget: ele.trA_PLan?.budget,\r\n    };\r\n  });\r\n}\r\n\r\nexport function planCourseExpenseToDisplay(\r\n  data: IPlanCourseExpensesModel[]\r\n): IPlanCourseExpensesModel[] {\r\n  return data.map((ele) => {\r\n    return <IPlanCourseExpensesModel>{\r\n      ...ele,\r\n      // id: ele.plan_Course_ID,\r\n      expense: msgTranslate(ele.trA_Expense?.ar_Name, ele.trA_Expense?.en_Name),\r\n      value: ele.expense_Value,\r\n    };\r\n  });\r\n}\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  ITrainingRequestIndexModel,\r\n  ITrainingToDisplayModel,\r\n} from \"../models/training-request\";\r\n\r\nexport function trainingRequestToDisplay(\r\n  trainingRequests: ITrainingRequestIndexModel[]\r\n): ITrainingToDisplayModel[] {\r\n  return trainingRequests.map((trainingRequest) => {\r\n    return <ITrainingToDisplayModel>{\r\n      id: trainingRequest.id,\r\n      fromDate: HelpersFunctions.mapDateReverse(trainingRequest.from_Date),\r\n      toDate: HelpersFunctions.mapDateReverse(trainingRequest.to_Date),\r\n      course_ID: trainingRequest.trA_Course.id,\r\n      course_name: msgTranslate(\r\n        trainingRequest.trA_Course?.ar_Name,\r\n        trainingRequest.trA_Course?.en_Name\r\n      ),\r\n      course_Category_ID: trainingRequest.trA_Course?.course_Category_ID,\r\n\r\n      reason_id: trainingRequest.trA_Reason?.id,\r\n      reason: msgTranslate(\r\n        trainingRequest.trA_Reason?.ar_Name,\r\n        trainingRequest.trA_Reason?.en_Name\r\n      ),\r\n      note: trainingRequest.note,\r\n    };\r\n  });\r\n}\r\n","import { ISTPModel } from \"../models/tsp\";\r\n\r\nexport function tspTodisplay(TSP: ISTPModel[]): ISTPModel[] {\r\n  return TSP.map((tsp) => {\r\n    return <ISTPModel>{\r\n      id: tsp.id,\r\n      ar_Name: tsp.ar_Name,\r\n      en_Name: tsp.en_Name,\r\n      breif_Name: tsp.breif_Name,\r\n      address: tsp.address,\r\n      location: tsp.location,\r\n      webSite_URL: tsp.webSite_URL,\r\n      email: tsp.email,\r\n      mobile: tsp.mobile,\r\n      phone: tsp.phone,\r\n      fax: tsp.fax,\r\n      contactPersonName: tsp.contactPersonName,\r\n      contactPersonEmail: tsp.contactPersonEmail,\r\n      contactPersonMobile: tsp.contactPersonMobile,\r\n      contactPersonPhone: tsp.contactPersonPhone,\r\n      i_M_C_Code: tsp.i_M_C_Code,\r\n      note: tsp.note,\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IFileApiModel } from \"app/shared/interfaces/files\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ICourseAttachmentParamsRequest } from \"app/training/models/course/attachment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CourseAttachmentService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // FormData > ICourseAttachmentRequest\r\n  create(data: FormData, params: ICourseAttachmentParamsRequest) {\r\n    return this.post<IResponse<IFileApiModel>>(\r\n      \"Training/Course/AddCourseAttachments\",\r\n      data,\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllByCourseId(courseId: number) {\r\n    return this.get<IResponse<IFileApiModel[]>>(\r\n      \"Training/Course/GetAllCourseAttachments\",\r\n      {\r\n        params: {\r\n          courseID: courseId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"Training/Course/DeleteCourseAttachments\", {\r\n      params: { AttachmentID: id },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ICourseModel, ICourseToDisplay } from \"app/training/models/course/course\";\r\nimport { ICourseGeneralRequest } from \"app/training/models/course/general\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CourseGeneralService extends AppClientService {\r\n  course$ = new BehaviorSubject<ICourseToDisplay>(undefined);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ICourseGeneralRequest) {\r\n    return this.post<IResponse<ICourseModel>>(\r\n      \"Training/Course/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ICourseGeneralRequest) {\r\n    return this.post<IResponse>(\r\n      \"Training/Course/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { courseToDisplay } from \"app/training/mapper/course\";\r\nimport { map } from \"rxjs/operators\";\r\nimport {\r\n  ICourseInstructorRequstModel,\r\n  ICourseModel,\r\n  ICourseTspRequstModel,\r\n} from \"../../models/course/course\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CourseService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ICourseModel[]>>(\"Training/Course/GetList\", {\r\n      params: { ...params, $expand: db.TRA_Course_Holding_Years },\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ICourseModel[]>>(\"Training/Course/GetAll\", {\r\n      params: {\r\n        PageNumber: 1,\r\n        pageSize: 1,\r\n        $expand: `${db.TRA_Course_Holding_Years}`,\r\n      },\r\n    }).pipe(\r\n      map((res: IResponse<any[]>) => {\r\n        res.data = courseToDisplay(res.data)\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<ICourseModel[]>>(\"Training/Course/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${id}`,\r\n        $expand: `${db.TRA_Course_Holding_Years},${db.Tra_Instructor_course}.${db.Tra_Instructor},${db.tra_TSP_Course}.${db.TRA_TSP}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  getCourseByCategoryId(id: number) {\r\n    return this.get<IResponse<ICourseModel[]>>(\"Training/Course/GetAll\", {\r\n      params: {\r\n        $filter: `Course_Category_ID  eq ${id}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Training/Course/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  addTSPToCourse(data: ICourseTspRequstModel) {\r\n    return this.post<IResponse<ICourseTspRequstModel>>(\r\n      \"Training/Course/AddTSPToCourse\",\r\n      data\r\n    );\r\n  }\r\n\r\n  addInstructorToCourse(data: ICourseInstructorRequstModel) {\r\n    return this.post<IResponse<ICourseInstructorRequstModel>>(\r\n      \"Training/Course/AddInstructorsToCourse\",\r\n      data\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IInstructorModel } from \"../models/instructor\";\r\nimport { IFileApiModel } from \"app/shared/interfaces/files\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class InstructorService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: FormData) {\r\n    return this.post<IResponse<IInstructorModel>>(\r\n      \"Training/Instructor/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: FormData) {\r\n    return this.post<IResponse<IInstructorModel>>(\r\n      \"Training/Instructor/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IInstructorModel[]>>(\r\n      \"Training/Instructor/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IInstructorModel[]>>(\r\n      \"Training/Instructor/GetAll\"\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponseList<IInstructorModel[]>>(\r\n      \"Training/Instructor/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${id}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Training/Instructor/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  getAllAttachmentsByInstructorId(InstructorID: number) {\r\n    return this.get<IResponse<IFileApiModel[]>>(\r\n      \"Training/Instructor/GetAllInstructorAttachments\",\r\n      {\r\n        params: {\r\n          InstructorID: InstructorID,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteInstructorAttachments(instructorID: number, attchmentId: number) {\r\n    return this.delete<IResponse>(\r\n      \"Training/Instructor/DeleteInstructorAttachment\",\r\n      {\r\n        params: {\r\n          InstructorID: instructorID,\r\n          AttachmentID: attchmentId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {IResponse, IResponseList} from 'app/shared/interfaces/responces';\r\nimport {AppClientService} from 'app/shared/services/app-client.service';\r\nimport {IBusinessObjectiveModel, ITrainingReqModel, ITrainingReqRequest, ITrainingRequestIndexModel,} from '../models/training-request';\r\nimport {db} from 'app/shared/resources/database-tabels';\r\nimport {map} from 'rxjs/operators';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {trainingRequestToDisplay} from '../mapper/training-request';\r\nimport {IPageParams} from 'app/shared/interfaces/params';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrainingRequestService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ITrainingRequestIndexModel[]>>(\r\n      'Training/TrainingRequest/GetList',\r\n      {\r\n        params: {...params, $expand: `${db.TRA_Course},${db.TRA_Reason}`},\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ITrainingRequestIndexModel[]>>(\r\n      'Training/TrainingRequest/GetAll',\r\n      {\r\n        params: {\r\n          $expand: `${db.TRA_Training_Request}.${db.TRA_Course},\r\n                    ${db.TRA_Training_Request}.${db.TRA_Reason},\r\n                    ${db.Core_Person_Instance}.${db.Core_Person}`,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res: IResponse<ITrainingRequestIndexModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          return trainingRequestToDisplay(res.data);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<ITrainingReqModel>>(\r\n      'Training/TrainingRequest/GetTrainingRequest',\r\n      {\r\n        params: {ID: id},\r\n      }\r\n    );\r\n  }\r\n\r\n  create(data: ITrainingReqRequest) {\r\n    return this.post<IResponse<ITrainingReqRequest>>('Training/trainingrequest/Create', data);\r\n  }\r\n\r\n  update(data: ITrainingReqRequest) {\r\n    return this.post<IResponse<ITrainingReqRequest>>('Training/trainingrequest/Edit', data);\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>('Training/trainingrequest/Delete', {\r\n      params: {Id: Id},\r\n    });\r\n  }\r\n\r\n  loadBusinessObjective() {\r\n    return this.get<IResponse<IBusinessObjectiveModel[]>>('Training/TrainingRequest/LoadBusinessObjectiveDropDownList');\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getList({pageSize: 10, PageNumber: 1});\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ICourseModel } from \"app/training/models/course/course\";\r\nimport {\r\n  IPlanCourseEmployeeDeleteParams,\r\n  IPlanCourseEmployeesSearchParams,\r\n  IPlanCourseModel,\r\n  IPlanCourseRequest,\r\n  IPlanCoursesEmployeeModel,\r\n} from \"app/training/models/training-plan/plan-courses-expenses\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PlanCoursesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(planId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IPlanCourseModel[]>>(\r\n      \"Training/PlanCourses/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `plan_ID eq ${planId}`,\r\n          $expand: `${db.trA_PLan},${db.trA_Course}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(planId: number) {\r\n    return this.get<IResponse<IPlanCourseModel[]>>(\r\n      \"Training/PlanCourses/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `plan_ID eq ${planId}`,\r\n        },\r\n      }\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data.map((item: IPlanCourseModel) => {\r\n          item.ar_Name = `${item.name} (${HelpersFunctions.mapDate(\r\n            item.from_Date\r\n          )} - ${HelpersFunctions.mapDate(item.to_Date)})`;\r\n          item.en_Name = `${item.name} (${HelpersFunctions.mapDate(\r\n            item.from_Date\r\n          )} - ${HelpersFunctions.mapDate(item.to_Date)})`;\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  create(data: IPlanCourseRequest) {\r\n    return this.post<IResponse<IPlanCourseRequest>>(\r\n      \"Training/PlanCourses/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IPlanCourseRequest) {\r\n    return this.post<IResponse<IPlanCourseRequest>>(\r\n      \"Training/PlanCourses/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"Training/PlanCourses/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  // get employees by course // not selected\r\n  getPlanEmployees(params: IPlanCourseEmployeesSearchParams) {\r\n    return this.get<IResponse<IPlanCoursesEmployeeModel[]>>(\r\n      \"Training/PlanCourses/GetPlanEmployees\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  // get employees by course // not selected\r\n  getSelectedEmployees(params: IPlanCourseEmployeesSearchParams) {\r\n    return this.get<IResponse<IPlanCoursesEmployeeModel[]>>(\r\n      \"Training/PlanCourses/GetSelectedEmployees\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  DeleteEmployee(params: IPlanCourseEmployeeDeleteParams) {\r\n    return this.delete<IResponse>(\"Training/PlanCourses/Clear\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  DeleteAllEmployees(planCourseId: number) {\r\n    return this.delete<IResponse>(\"Training/PlanCourses/ClearAll\", {\r\n      params: { plan_course_id: planCourseId },\r\n    });\r\n  }\r\n\r\n  // get courses by plan (courses can add to this plan)\r\n  getAllCourses(planId: number) {\r\n    return this.get<IResponse<ICourseModel[]>>(\r\n      \"Training/PlanCourses/DropDownListCourses\",\r\n      {\r\n        params: {\r\n          planId: planId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IPlanCourseExpensesDeleteParams,\r\n  IPlanCourseExpensesModel,\r\n  IPlanCourseExpensesRequest\r\n} from \"app/training/models/training-plan/plan-courses-expenses\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PlanExpensesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll(planId: number) {\r\n    return this.get<IResponse<IPlanCourseExpensesModel[]>>(\r\n      \"Training/PlanCourseExpenses/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `plan_Course_ID eq ${planId}`,\r\n          $expand: `${db.TRA_expense}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  create(data: IPlanCourseExpensesRequest) {\r\n    return this.post<IResponse<IPlanCourseExpensesModel>>(\r\n      \"Training/PlanCourseExpenses/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  Delete(params: IPlanCourseExpensesDeleteParams) {\r\n    return this.delete<IResponse>(\"Training/PlanCourseExpenses/Delete\", {\r\n      params: params,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IPlanTrainingNeedsEmployeeDeleteParams,\r\n  IPlanTrainingNeedsEmployeeModel,\r\n  IPlanTrainingNeedsRequest,\r\n  ITNAPlanSearchRequest,\r\n} from \"app/training/models/training-plan/training-needs-analysis\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TrainingNeedsAnalysisService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  searchEmployees(model: ITNAPlanSearchRequest) {\r\n    return this.post<IResponse<IPlanTrainingNeedsEmployeeModel[]>>(\r\n      \"Training/TNA/GetSearchTNAResults\",\r\n      model\r\n    );\r\n  }\r\n\r\n  create(data: IPlanTrainingNeedsRequest) {\r\n    return this.post<IResponse<IPlanTrainingNeedsEmployeeModel>>(\r\n      \"Training/TNA/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  Delete(params: IPlanTrainingNeedsEmployeeDeleteParams) {\r\n    return this.delete<IResponse>(\"Training/TNA/Delete\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  DeleteAll(planId: number) {\r\n    return this.delete<IResponse>(\"Training/TNA/DeleteAll\", {\r\n      params: { plan_id: planId },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  ITrainingPlanListModel,\r\n  ITrainingPlanModel,\r\n  ITrainingPlanRequest,\r\n} from \"app/training/models/training-plan/training-plan\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TrainingPlanIndexService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ITrainingPlanListModel[]>>(\r\n      \"Training/plan/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Training/plan/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  create(data: ITrainingPlanRequest) {\r\n    return this.post<IResponse<ITrainingPlanModel>>(\r\n      \"Training/plan/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ITrainingPlanRequest) {\r\n    return this.post<IResponse<ITrainingPlanModel>>(\"Training/plan/Edit\", data);\r\n  }\r\n\r\n  // getList(params: IPageParams) {\r\n  //   return this.get<IResponseList<IPlanModel[]>>(\"Training/Plan/GetList\", {\r\n  //     params: params,\r\n  //   });\r\n  // }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ITrainingPlanModel[]>>(\r\n      \"Training/Plan/GetAll\"\r\n    ).pipe();\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<ITrainingPlanModel[]>>(\"Training/Plan/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${id}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteInstructorAttachments(instructorID: number, attchmentId: number) {\r\n    return this.delete<IResponse>(\r\n      \"Training/Instructor/DeleteInstructorAttachment\",\r\n      {\r\n        params: {\r\n          InstructorID: instructorID,\r\n          AttachmentID: attchmentId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ISTPModel, ITSPRequest } from \"app/training/models/tsp\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { tspTodisplay } from \"../mapper/tsp\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TspService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ISTPModel[]>>(\"Training/TSP/GetList\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ISTPModel[]>>(\"Training/TSP/GetAll\").pipe(\r\n      map((res: IResponse<any[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          res.data = tspTodisplay(res.data);\r\n          return res;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponseList<ISTPModel[]>>(\"Training/TSP/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${id}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  create(data: ITSPRequest) {\r\n    return this.post<IResponse<ISTPModel>>(\"Training/TSP/Create\", data);\r\n  }\r\n\r\n  update(data: ITSPRequest) {\r\n    return this.post<IResponse<ISTPModel>>(\"Training/TSP/Edit\", data);\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Training/TSP/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll();\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  //baseUrl: \"https://localhost:7155\",\r\n  baseUrl: \"https://testproj6.cloudiax.com\",\r\n  EncryptKey: 1203199320052021,\r\n  EncryptIV: 1203199320052021,\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","/* (ignored) */"],"names":["i0","ButtonFileInputComponent","constructor","ngOnInit","ngOnChanges","removeFile","uploadFile","event","selectors","inputs","control","submitted","accept","htmlId","showIcon","label","features","decls","vars","consts","template","ctx","EventEmitter","SimpleChanges","ReplaySubject","Subject","take","takeUntil","DropdownWithSearchComponent","languageService","filteredList","next","List","slice","console","log","value","filterControl","valueChanges","pipe","_onDestroy","subscribe","filterCategories","changes","currentValue","previousValue","change","onChange","emit","ngAfterViewInit","setInitialValue","singleSelect","compareWith","a","b","search","toLowerCase","filter","category","ar_name","indexOf","en_name","ngOnDestroy","complete","viewQuery","inject","FileService","MessagesService","FileInputComponent","files","setValue","fileService","upload","resetFileById","isBase64","uploadBase64","then","file","size","messageService","warning","setTimeout","SvgManager","BaseDropdown","LanguageService","environment","ctx_r3","ctx_r13","ctx_r0","ctx_r22","ctx_r34","ctx_r30","ctx_r40","ctx_r44","ctx_r1","FileUploadComponent","baseUrl","removeFiles","isEdit","fileUpload","clear","multiple","isHexImg","createFileFromHex","uploadHexImage","hexString","onDeleteFile","msg","translate","toLocaleLowerCase","dialogsService","deleteDialog","confirm","removeFileFromList","ondelete","removeFileNotUploaded","i","findIndex","ele","name","splice","select","afterRemove","length","objectURL","onselect","onremove","beforeUpload","onsubmit","afterUpload","messagesService","success","originalEvent","body","message","messageTypeName","afterupload","getUrl","isFormValid","params","businessCompanyParams","url","URLSearchParams","toString","chooseFile","choose","t","AppHelpers","ParamsService","InputAppearance","HomeMenuComponent","detectorService","paramsService","parentModuleId$","moduleId$","businessCompanyParams$","res","onChangeBusinessAndCompanyId","getUserModules","selectModule","mod","id","navigateToService","children","uM_Services","path","viewsService","getUserModulesMaped","FileSaver","ExcelFormat","ImgFormat","PdfFormat","WordFormat","http","formData","FormData","append","download","startsWith","window","open","downloadByAttachId","attachId","get","BusinessEntityID","CompanyID","AttachmentID","responseType","downloadFromServer","saveAs","downloadBase64File","base64","fileName","byteCharacters","atob","split","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","type","URL","createObjectURL","anchor","document","createElement","href","click","preview","FileAsBase64","resetFileInputs","FileInputs","querySelectorAll","forEach","input","getElementById","data","reader","FileReader","readAsDataURL","onload","target","result","LastModified","lastModified","LastModifiedDate","lastModifiedDate","readAsArrayBuffer","binaryData","imgageToHex","buffer","uint8Array","hex","previewHexImage","replace","binary","h","parseInt","base64String","String","fromCharCode","btoa","mimeType","bytes","push","substr","File","getFileIcon","format","includes","svgManager","img","word","excel","pdf","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}