{"version":3,"file":"src_app_system-setup_dashboard-setup_dashboard-setup_module_ts.js","mappings":"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","sources":["./src/app/shared/Guards/check-is-allowd.guard.ts","./src/app/system-setup/dashboard-setup/components/dashboard-properties/dashboard-properties.component.ts","./src/app/system-setup/dashboard-setup/components/dashboard-properties/dashboard-properties.component.html","./src/app/system-setup/dashboard-setup/components/dashboard/dashboard.component.ts","./src/app/system-setup/dashboard-setup/components/dashboard/dashboard.component.html","./src/app/system-setup/dashboard-setup/dashboard-setup-routing.module.ts","./src/app/system-setup/dashboard-setup/dashboard-setup.module.ts","./src/app/system-setup/dashboard-setup/mapper/dashboard-properties.ts","./src/app/system-setup/dashboard-setup/services/dashboard-properties.service.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, } from \"@angular/router\";\r\nimport { UserViewsService } from \"app/auth/services/user-views.service\";\r\nimport { IUM_ModulesModel } from \"app/shared/interfaces/user-views\";\r\nimport { LoadingService } from \"app/shared/services/loading.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CheckIsViewAllowedGuard implements CanActivate {\r\n  UserModules: IUM_ModulesModel[];\r\n  public loadingService = inject(LoadingService);\r\n  loading: HTMLElement;\r\n\r\n  constructor(private viewsService: UserViewsService) {\r\n    this.UserModules = this.viewsService.UserModules$.getValue();\r\n    this.loading = document.getElementById(\"page-loading\");\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    return true;\r\n    // un comment code for used\r\n    // let view = route.data?.view;\r\n    // this.showLoading();\r\n    // if (this.UserModules?.length > 0) {\r\n    //   if (!this.viewsService.isViewAllowed(view)) {\r\n    //     this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //     this.hideLoading();\r\n    //   }\r\n    //   else {\r\n    //     this.hideLoading();\r\n    //     return true;\r\n    //   }\r\n    // }\r\n    //\r\n    // else {\r\n    //   this.viewsService.UserModules$.subscribe((val) => {\r\n    //     if (val?.length > 0) {\r\n    //       if (!this.viewsService.isViewAllowed(view)) {\r\n    //         this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //         this.hideLoading();\r\n    //       }\r\n    //       else {\r\n    //         this.hideLoading();\r\n    //         return true;\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  showLoading() {\r\n    this.loading.style.display = \"block\";\r\n    this.loading.style.opacity = \"1\";\r\n    this.loading.style.zIndex = \"998\";\r\n  }\r\n\r\n  hideLoading() {\r\n    this.loading.style.display = \"none\";\r\n    this.loading.style.opacity = \"0\";\r\n    this.loading.style.zIndex = \"0\";\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IDashboardDataModel, IDashboardToDisplay } from \"app/system-setup/dashboard-setup/models/dashboard\";\r\nimport {\r\n  IDashboardPropertyModel,\r\n  IDashboardPropertyRequest,\r\n} from \"app/system-setup/dashboard-setup/models/dashboard-properties\";\r\nimport { DashboardPropertiesService } from \"app/system-setup/dashboard-setup/services/dashboard-properties.service\";\r\nimport { DashboardService } from \"app/system-setup/dashboard-setup/services/dashboard.service\";\r\nimport { IPropertyModel } from \"../../models/properties\";\r\nimport { dashboardPropertyDisplay } from \"../../mapper/dashboard-properties\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { EDashboardPropertiesType } from \"app/shared/enums/dashboard-properties-type.enum\";\r\nimport { dashboardDisplay } from \"../../mapper/dashboard\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard-properties\",\r\n  templateUrl: \"./dashboard-properties.component.html\",\r\n  styleUrls: [\"./dashboard-properties.component.scss\"],\r\n})\r\nexport class DashboardPropertiesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"property\", \"value\", \"actions\"];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IDashboardPropertyModel>;\r\n  isLoaded: boolean = false;\r\n\r\n  dashboardId: number;\r\n  currentDashboard: IDashboardToDisplay;\r\n\r\n  selectedPropertyType: string;\r\n  dashboardPropertiesType = EDashboardPropertiesType;\r\n\r\n  constructor(\r\n    public dashboardPropertiesService: DashboardPropertiesService,\r\n    private dashboardService: DashboardService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.dashboardId = Number(params.get(\"id\")) ?? 0;\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      propertyId: [null, [Validators.required]],\r\n      value: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.dashboardId && this.checkNoBusinessOrCompany()) {\r\n      this.getCurrentDashboard();\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getCurrentDashboard() {\r\n    this.dashboardService\r\n      .getById(this.dashboardId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IDashboardDataModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.currentDashboard =dashboardDisplay(res.data)[0];\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.dashboardPropertiesService\r\n      .getList(this.dashboardId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IDashboardPropertyModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            dashboardPropertyDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IDashboardPropertyRequest = {\r\n        dashboard_ID: this.dashboardId,\r\n        // id: this.form.value.id,\r\n        property_ID: this.form.value.propertyId,\r\n        value: this.form.value.value,\r\n      };\r\n      if (this.selectedPropertyType == EDashboardPropertiesType.number)\r\n        model.value = JSON.stringify(model.value);\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IDashboardPropertyRequest) {\r\n    this.showLoading();\r\n    this.dashboardPropertiesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IDashboardPropertyModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.firstPage);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(dashboardProperties: IDashboardPropertyModel): void {\r\n    let msg = dashboardProperties.property;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(dashboardProperties);\r\n    });\r\n  }\r\n\r\n  delete(dashboardProperties: IDashboardPropertyModel) {\r\n    this.showLoading();\r\n    this.dashboardPropertiesService\r\n      .Delete(dashboardProperties.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n\r\n  onChangeProperty(values: IPropertyModel[]) {\r\n    // change value input type (number or text)\r\n    let newSelectedType = values.length > 0 ? values[0]?.property_Type : null;\r\n    if (newSelectedType != this.selectedPropertyType) {\r\n      this.formCtrls.value.reset();\r\n\r\n      if (newSelectedType == EDashboardPropertiesType.number) {\r\n        this.formCtrls.value.setValidators([\r\n          Validators.required,\r\n          CustomValidators.number,\r\n        ]);\r\n      } else\r\n        this.formCtrls.value.setValidators([\r\n          Validators.required,\r\n          CustomValidator.whiteSpace,\r\n          CustomValidator.atLeastOneCharacter,\r\n        ]);\r\n      this.formCtrls.value.updateValueAndValidity();\r\n\r\n      this.selectedPropertyType = newSelectedType;\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"dashboardProperties\"> </page-title>\r\n\r\n        <span *ngIf=\"currentDashboard\">\r\n          -\r\n          {{\r\n            msgTranslate(currentDashboard?.ar_Name, currentDashboard?.en_Name)\r\n          }}\r\n        </span>\r\n\r\n        <app-back-btn\r\n          url=\"/dashboard-setup/{{ moduleId }}/dashboard\"\r\n          [params]=\"pageParams\"\r\n        ></app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-properties-dropdown\r\n                    [control]=\"formCtrls.propertyId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    (change)=\"onChangeProperty($event)\"\r\n                  >\r\n                  </app-properties-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.value\"\r\n                    [submitted]=\"submitted\"\r\n                    [type]=\"\r\n                      selectedPropertyType ?? dashboardPropertiesType.text\r\n                    \"\r\n                    label=\"value\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n\r\n        <submit-btn (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <!-- [exportService]=\"dashboardPropertiesService\" -->\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IDashboardDataModel,\r\n  IDashboardModel,\r\n  IDashboardModuleRequest,\r\n  IDashboardRequest,\r\n  IDashboardToDisplay,\r\n} from \"app/system-setup/dashboard-setup/models/dashboard\";\r\nimport { DashboardService } from \"app/system-setup/dashboard-setup/services/dashboard.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { dashboardDisplay } from \"../../mapper/dashboard\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.scss\"],\r\n})\r\nexport class DashboardComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  removeFiles: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"module\",\r\n    \"link\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IDashboardToDisplay>;\r\n  constructor(public dashboardService: DashboardService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      ar_Name: [null, CustomValidator.whiteSpace],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      link: [\r\n        null,\r\n        [Validators.required, CustomValidator.whiteSpace, CustomValidators.url],\r\n      ],\r\n      module_Id: [null, Validators.required],\r\n      service_Id: [null],\r\n      isExistInHome: [false],\r\n      home_Order: [null, CustomValidators.gt(0)],\r\n      file: [null, Validators.required],\r\n      dashboard_Order: [null, CustomValidators.gt(0)],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.dashboardService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IDashboardDataModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(dashboardDisplay(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.removeFiles = false;\r\n    this.submitted = true;\r\n\r\n    if (this.form.valid) {\r\n      const model = {\r\n\r\n        dash_dashboard: {\r\n          ID: this.formCtrls.id.value,\r\n          Ar_Name: this.formCtrls.ar_Name.value,\r\n          En_Name: this.formCtrls.en_Name.value,\r\n          Link: this.formCtrls.link.value,\r\n          Home_Order: this.formCtrls.home_Order.value??0,\r\n          IsExistInHome:this.formCtrls.isExistInHome.value,\r\n        } as IDashboardRequest,\r\n\r\n        Module_ID: this.formCtrls.module_Id.value,\r\n        Service_ID: this.formCtrls.service_Id.value??0,\r\n        Dashboard_Order: this.formCtrls.dashboard_Order.value,\r\n        file: this.formCtrls.file.value,\r\n      } as IDashboardModuleRequest;\r\n\r\n      let formData = HelpersFunctions.objectToFormData(model);\r\n\r\n      model.dash_dashboard.ID == 0\r\n        ? this.create(formData)\r\n        : this.update(formData);\r\n    }\r\n  }\r\n\r\n  create(model: FormData) {\r\n    this.showLoading();\r\n    this.dashboardService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IDashboardModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.firstPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: FormData) {\r\n    this.showLoading();\r\n    this.dashboardService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IDashboardModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  itemToEdit(item: IDashboardToDisplay) {\r\n\r\n    this.form.patchValue(item);\r\n    this.formCtrls.file.setValue({\r\n      id: item.id,\r\n      name: item.en_Name,\r\n      path: \"/\" + item?.file?.path,\r\n      size: item.file?.size,\r\n      type: item.file?.mime,\r\n    })\r\n\r\n    console.log('edit', this.formCtrls.file.value)\r\n\r\n  }\r\n\r\n  onDelete(item: IDashboardModel): void {\r\n    let msg = this.msgTranslate(item.ar_Name, item.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(item);\r\n    });\r\n  }\r\n\r\n  delete(item: IDashboardModel) {\r\n    this.showLoading();\r\n    this.dashboardService.Delete(item.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        } else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (item.id == this.formCtrls.id.value) this.clearForm();\r\n      } else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n    this.removeFiles = true;\r\n  }\r\n\r\n  changeHomeOrderValidation() {\r\n    if (this.formCtrls.isExistInHome.value) {\r\n      this.formCtrls.home_Order.addValidators(Validators.required);\r\n    } else {\r\n      this.formCtrls.home_Order.clearValidators();\r\n      this.formCtrls.home_Order.setValue(null);\r\n    }\r\n  }\r\n\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"dashboard\"\r\n          editTitle=\"editdDashboard\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-module-dropdown\r\n                    [control]=\"formCtrls.module_Id\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  ></app-module-dropdown>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-service-by-module-id-dropdown\r\n                    [moduleControl]=\"formCtrls.module_Id\"\r\n                    [control]=\"formCtrls.service_Id\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    [multi]=\"true\"\r\n                  ></app-service-by-module-id-dropdown>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.dashboard_Order\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"DashboardOrder\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.link\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"link\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n                <div class=\"col-md-2 col-12\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isExistInHome\"\r\n                    label=\"IsExistInHome\"\r\n                    (onChange)=\"changeHomeOrderValidation()\"\r\n                  >\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"col-md-4 col-12\"\r\n                  *ngIf=\"formCtrls.isExistInHome.value\"\r\n                >\r\n                  <app-input\r\n                    [control]=\"formCtrls.home_Order\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"HomeOrder\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <primeng-file-upload\r\n                    [control]=\"formCtrls.file\"\r\n                    [submitted]=\"submitted\"\r\n                    [multiple]=\"false\"\r\n                    [removeFiles]=\"removeFiles\"\r\n                    [isFormValid]=\"form.valid\"\r\n                    [isEdit]=\"formCtrls.file != null\"\r\n                    accept=\"image/*\"\r\n                   \r\n\r\n                  >\r\n                  </primeng-file-upload>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [exportService]=\"dashboardService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (editRow)=\"itemToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { pathMatch } from \"app/shared/enums/route-path-match.enum\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { DashboardPropertiesComponent } from \"./components/dashboard-properties/dashboard-properties.component\";\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { CheckIsViewAllowedGuard } from \"app/shared/Guards/check-is-allowd.guard\";\r\nimport { PropertiesComponent } from \"app/system-setup/dashboard-setup/components/properties/properties.component\";\r\nimport { DashboardDisplayComponent } from \"app/system-setup/dashboard-setup/components/dashboard-dispaly/dashboard-display.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"dashboard\",\r\n    data: {view: ViewsManager.dashboard_setup},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        pathMatch: pathMatch.full,\r\n        component: DashboardComponent,\r\n        data: {view: ViewsManager.dashboard_setup},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"dashboard-properties/:id\",\r\n        component: DashboardPropertiesComponent,\r\n        data: {view: ViewsManager.dashboard_properties},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      // {\r\n      //   path: \"module-dashboard/:dashboardModuleId\",\r\n      //   component: DashboardDisplayComponent,\r\n      //   data: {view: ViewsManager.module_dashboard},\r\n      //   canActivate: [CheckIsViewAllowedGuard],\r\n      // },\r\n      {\r\n        path: \"home-dashboard\",\r\n        component: DashboardDisplayComponent,\r\n        data: {view: ViewsManager.home_dashboard},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"properties\",\r\n    component: PropertiesComponent,\r\n    data: {view: ViewsManager.properties},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardSetupRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { DashboardSetupRoutingModule } from \"./dashboard-setup-routing.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { DashboardPropertiesComponent } from \"./components/dashboard-properties/dashboard-properties.component\";\r\nimport { PropertiesComponent } from \"./components/properties/properties.component\";\r\nimport {\r\n  DashboardDispalyDetailsComponent\r\n} from \"app/system-setup/dashboard-setup/components/dashboard-dispaly-details/dashboard-dispaly-details.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    DashboardPropertiesComponent,\r\n    PropertiesComponent,\r\n    DashboardDispalyDetailsComponent\r\n  ],\r\n  imports: [CommonModule, DashboardSetupRoutingModule, SharedModule],\r\n  exports: []\r\n})\r\nexport class DashboardSetupModule {}\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { IDashboardPropertyModel } from \"../models/dashboard-properties\";\r\n\r\nexport function dashboardPropertyDisplay(\r\n  data: IDashboardPropertyModel[]\r\n): IDashboardPropertyModel[] {\r\n  return data.map((ele) => {\r\n    return <IDashboardPropertyModel>{\r\n      ...ele,\r\n      property: msgTranslate(\r\n        ele.properties?.ar_Name,\r\n        ele.properties?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IDashboardPropertyModel,\r\n  IDashboardPropertyRequest,\r\n} from \"../models/dashboard-properties\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DashboardPropertiesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IDashboardPropertyRequest) {\r\n    return this.post<IResponse<IDashboardPropertyModel>>(\r\n      \"Dashboard/DashboardProperty/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(dashboardId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IDashboardPropertyModel[]>>(\r\n      \"Dashboard/DashboardProperty/GetList\",\r\n      {\r\n        params: params\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(dashboardId: number) {\r\n    return this.get<IResponseList<IDashboardPropertyModel[]>>(\r\n      \"Dashboard/DashboardProperty/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `dashboard_ID eq ${dashboardId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Dashboard/DashboardProperty/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}