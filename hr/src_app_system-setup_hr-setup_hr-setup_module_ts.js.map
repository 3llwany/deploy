{"version":3,"file":"src_app_system-setup_hr-setup_hr-setup_module_ts.js","mappings":"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","sources":["./src/app/shared/Guards/check-is-allowd.guard.ts","./src/app/system-setup/hr-setup/components/bank/bank-index/bank-index.component.ts","./src/app/system-setup/hr-setup/components/bank/bank-index/bank-index.component.html","./src/app/system-setup/hr-setup/components/documents/assign-attachment-to-job/assign-attachment-to-job.component.ts","./src/app/system-setup/hr-setup/components/documents/assign-attachment-to-job/assign-attachment-to-job.component.html","./src/app/system-setup/hr-setup/components/education-degree/education-degree.component.ts","./src/app/system-setup/hr-setup/components/education-degree/education-degree.component.html","./src/app/system-setup/hr-setup/components/finincial-company/financial-company.component.ts","./src/app/system-setup/hr-setup/components/finincial-company/financial-company.component.html","./src/app/system-setup/hr-setup/hr-setup-routing.module.ts","./src/app/system-setup/hr-setup/hr-setup.module.ts","./src/app/system-setup/hr-setup/services/financial-company.service.ts","./src/app/system-setup/hr-setup/services/hire-documents/assign-doc-to-job.service.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, } from \"@angular/router\";\r\nimport { UserViewsService } from \"app/auth/services/user-views.service\";\r\nimport { IUM_ModulesModel } from \"app/shared/interfaces/user-views\";\r\nimport { LoadingService } from \"app/shared/services/loading.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CheckIsViewAllowedGuard implements CanActivate {\r\n  UserModules: IUM_ModulesModel[];\r\n  public loadingService = inject(LoadingService);\r\n  loading: HTMLElement;\r\n\r\n  constructor(private viewsService: UserViewsService) {\r\n    this.UserModules = this.viewsService.UserModules$.getValue();\r\n    this.loading = document.getElementById(\"page-loading\");\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    return true;\r\n    // un comment code for used\r\n    // let view = route.data?.view;\r\n    // this.showLoading();\r\n    // if (this.UserModules?.length > 0) {\r\n    //   if (!this.viewsService.isViewAllowed(view)) {\r\n    //     this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //     this.hideLoading();\r\n    //   }\r\n    //   else {\r\n    //     this.hideLoading();\r\n    //     return true;\r\n    //   }\r\n    // }\r\n    //\r\n    // else {\r\n    //   this.viewsService.UserModules$.subscribe((val) => {\r\n    //     if (val?.length > 0) {\r\n    //       if (!this.viewsService.isViewAllowed(view)) {\r\n    //         this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //         this.hideLoading();\r\n    //       }\r\n    //       else {\r\n    //         this.hideLoading();\r\n    //         return true;\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  showLoading() {\r\n    this.loading.style.display = \"block\";\r\n    this.loading.style.opacity = \"1\";\r\n    this.loading.style.zIndex = \"998\";\r\n  }\r\n\r\n  hideLoading() {\r\n    this.loading.style.display = \"none\";\r\n    this.loading.style.opacity = \"0\";\r\n    this.loading.style.zIndex = \"0\";\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IBankModel } from \"app/system-setup/hr-setup/models/bank\";\r\nimport { BankService } from \"app/system-setup/hr-setup/services/bank/bank.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-bank-index\",\r\n  templateUrl: \"./bank-index.component.html\",\r\n  styleUrls: [\"./bank-index.component.scss\"],\r\n})\r\nexport class BankIndexComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IBankModel>;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(public bankService: BankService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.removePageParams();\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.bankService.getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IBankModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  // navigateToEdit(bank: IBankModel | any) {\r\n  //   this.router.navigate([`hr-setup/${this.moduleId}/edit-bank/${bank.id}`], {\r\n  //     queryParams: {\r\n  //       parentView: this.getViewName,\r\n  //       ...this.pageParams,\r\n  //       // parentId: bank.function.id,\r\n  //     },\r\n  //   });\r\n  // }\r\n\r\n  onDelete(bank: IBankModel): void {\r\n    let msg = this.msgTranslate(bank.ar_Name, bank.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(bank);\r\n    });\r\n  }\r\n\r\n  delete(bank: IBankModel) {\r\n    this.showLoading();\r\n    this.bankService.Delete(bank.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else this.getList(this.currentPage, this.page.pageSize);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"index-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"bank\" [globalFunctions]=\"globalFunctions\">\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"bankService\"\r\n        [actions]=\"rowFunctions\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { documentJobTitleToMap } from \"app/system-setup/hr-setup/mapper/hire-document\";\r\nimport { IDocJobTitleMap, IDocJobTitleModel, IDocJobTitleRequest, } from \"app/system-setup/hr-setup/models/hire-documents\";\r\nimport { AssignDocToJobtitleService } from \"app/system-setup/hr-setup/services/hire-documents/assign-doc-to-job.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IAttachmentTypesModel } from \"app/system-setup/general-setup/models/attachment-types\";\r\n\r\n@Component({\r\n  selector: \"app-assign-attachment-to-job\",\r\n  templateUrl: \"./assign-attachment-to-job.component.html\",\r\n  styleUrls: [\"./assign-attachment-to-job.component.scss\"],\r\n})\r\nexport class AssignAttachmentToJobComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  attachmentList: IAttachmentTypesModel[] = [];\r\n  mandatoryColomns: string[] = [\"Ser\", \"jobTitleName\", \"attachment\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IDocJobTitleModel>;\r\n\r\n  constructor(\r\n    public jobTitleService: AssignDocToJobtitleService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0],\r\n      serviceId: [null, [Validators.required]],\r\n      Attachments_IDs: [[], [Validators.required]],\r\n      SelecetedJobTitle: [[], Validators.required],\r\n    });\r\n\r\n    // this.formCtrls.serviceId.valueChanges.subscribe((serviceId) => {\r\n    //   if (serviceId > 0) {\r\n    //     this.getAttachmentByServiceId();\r\n    //   } else {\r\n    //     this.attachmentList = [];\r\n    //     this.formCtrls.Attachments_IDs.disable();\r\n    //   }\r\n    // });\r\n\r\n    this.formCtrls.Attachments_IDs.disable();\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    }\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.jobTitleService.getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IDocJobTitleModel[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          //#region start join data with jobId\r\n          // let result = [];\r\n          // const jobIds = this.getMatched(res.data, \"job_Title_ID\");\r\n          // jobIds.map((jobId) => {\r\n          //   let obj = {} as IDocJobTitleMap;\r\n          //   obj.id = jobId;\r\n\r\n          //   obj.attachmentsList = [];\r\n          //   obj.attachments = [];\r\n          //   res.data.map((e: IDocJobTitleMap) => {\r\n          //     if (e.job_Title_ID == jobId) {\r\n          //       obj.jobTitleName = this.msgTranslate(\r\n          //         e.core_Job_Title.ar_Name,\r\n          //         e.core_Job_Title.en_Name\r\n          //       );\r\n          //       obj.attachments.push(\r\n          //         `  ${this.msgTranslate(\r\n          //           e.comm_Attachment_Type_Services.comm_Attachment_Type\r\n          //             .ar_Name,\r\n          //           e.comm_Attachment_Type_Services.comm_Attachment_Type.en_Name\r\n          //         )}  `\r\n          //       );\r\n          //     }\r\n          //   });\r\n          //   result.push(obj);\r\n          // });\r\n          //#endregion\r\n          console.log(documentJobTitleToMap(res.data));\r\n          this.dataSource = new MatTableDataSource(documentJobTitleToMap(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else {\r\n          this.errorList(res?.message?.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  create() {\r\n    let model: IDocJobTitleRequest = {\r\n      Attachments_IDs: this.form.value.Attachments_IDs,\r\n      SelecetedJobTitle: this.form.value.SelecetedJobTitle,\r\n    };\r\n    console.log(\"model\", model);\r\n    this.submitted = true;\r\n    this.showLoading();\r\n    this.jobTitleService\r\n      .create(model)\r\n      .subscribe((res: IResponseList<IDocJobTitleModel[]>) => {\r\n        if (this.form.valid) {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            // this.getAttachmentByServiceId();\r\n            this.clearForm();\r\n            this.getList(this.lastPage, this.page.pageSize);\r\n            this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          }\r\n          else {\r\n            this.errorList(\r\n              res.message?.messages ?? [res.message.messageTypeName]\r\n            );\r\n            this.hideLoading();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onDelete(jobTitle: IDocJobTitleMap): void {\r\n    this.deleteDialog(jobTitle.jobTitleName).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(jobTitle);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(jobTitle: IDocJobTitleMap) {\r\n    let params = {\r\n      Job_Title_ID: jobTitle.job_Title_ID,\r\n      AttachmentTypeService_ID: jobTitle.attachmentTypeService_ID,\r\n    };\r\n    this.showLoading();\r\n    this.jobTitleService.Delete(params).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (jobTitle.job_Title_ID == this.formCtrls.ID.value) {\r\n          this.clearForm();\r\n        }\r\n      }\r\n      else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.formCtrls.serviceId.enable();\r\n    this.submitted = false;\r\n  }\r\n\r\n  // getAttachmentByServiceId() {\r\n  //   this.showLoading();\r\n  //   this.hireDocumentsService\r\n  //     .GetAllByServiceId(this.formCtrls.serviceId.value)\r\n  //     .subscribe((res: IResponse<IHireDocumentsModel[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.formCtrls.Attachments_IDs.enable();\r\n  //         this.attachmentList = attachmentToMap(res.data);\r\n  //       } else {\r\n  //         this.errorList(res.message?.messages);\r\n  //         this.hideLoading();\r\n  //       }\r\n  //     });\r\n  // }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title [id]=\"formCtrls.id.value\"\r\n                    addTitle=\"jobTitleHireDocuments\"\r\n                    editTitle=\"editJobTitleHireDocuments\">\r\n        </page-title>\r\n\r\n        <app-back-btn url=\"/hr-setup/{{ moduleId }}/hire-documents\"\r\n                      [params]=\"pageParams\">\r\n\r\n        </app-back-btn>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-4\">\r\n              <app-service-dropdown\r\n                [control]=\"formCtrls.serviceId\"\r\n                [submitted]=\"false\"\r\n                [filterId]=\"8\"\r\n              >\r\n              </app-service-dropdown>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <app-hiring-document-by-service-dropdown\r\n                [control]=\"formCtrls.Attachments_IDs\"\r\n                [serviceControl]=\"formCtrls.serviceId\"\r\n                label=\"attachments\"\r\n                [submitted]=\"submitted\"\r\n                [multiple]=\"true\"\r\n                [filter]=\"true\"\r\n              ></app-hiring-document-by-service-dropdown>\r\n\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <app-job-title-dropdown\r\n                [control]=\"formCtrls.SelecetedJobTitle\"\r\n                [submitted]=\"submitted\"\r\n                [multi]=\"true\"\r\n                [filter]=\"true\"\r\n              ></app-job-title-dropdown>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"create()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"jobTitleService\"\r\n        [actions]=\"rowFunctions\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n      <!-- (deleteRow)=\"onDelete($event)\" -->\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IEducationDegreeModel,\r\n  IEducationDegreeRequest,\r\n} from \"app/system-setup/hr-setup/models/education-degree\";\r\nimport { EducationDegreeService } from \"app/system-setup/hr-setup/services/education-degree.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-education-degree\",\r\n  templateUrl: \"./education-degree.component.html\",\r\n  styleUrls: [\"./education-degree.component.scss\"],\r\n})\r\nexport class EducationDegreeComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEducationDegreeModel>;\r\n\r\n  constructor(public educationDegreeService: EducationDegreeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.educationDegreeService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEducationDegreeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.successPrime(res.message.messageTypeName);\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEducationDegreeRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IEducationDegreeRequest) {\r\n    this.showLoading();\r\n    this.educationDegreeService.create(model).subscribe((res: IResponse<IEducationDegreeModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IEducationDegreeRequest) {\r\n    this.showLoading();\r\n    this.educationDegreeService.update(model).subscribe((res: IResponse<IEducationDegreeModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  educationDegreeToEdit(educationDegree: IEducationDegreeModel) {\r\n    this.form.patchValue(educationDegree);\r\n  }\r\n\r\n  onDelete(educationDegree: IEducationDegreeModel): void {\r\n    let msg = this.msgTranslate(educationDegree.ar_Name, educationDegree.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(educationDegree);\r\n    });\r\n  }\r\n\r\n  delete(educationDegree: IEducationDegreeModel) {\r\n    this.showLoading();\r\n    this.educationDegreeService.Delete(educationDegree.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (educationDegree.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"educationDegree\"\r\n          editTitle=\"editEducationDegree\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"educationDegreeService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (editRow)=\"educationDegreeToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IFinancialCompanyModel,\r\n  IFinancialCompanyRequest,\r\n} from \"app/system-setup/hr-setup/models/financial-company\";\r\nimport { FinancialCompanyService } from \"app/system-setup/hr-setup/services/financial-company.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-FinancialCompany\",\r\n  templateUrl: \"./financial-company.component.html\",\r\n  styleUrls: [\"./financial-company.component.scss\"],\r\n})\r\nexport class FinancialCompanyComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"ar_Name\", \"en_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IFinancialCompanyModel>;\r\n\r\n  constructor(public financialService: FinancialCompanyService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pagesize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pagesize) this.page.pageSize = pagesize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.financialService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IFinancialCompanyModel[]>) => {\r\n        if (res?.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.page.meta = res.meta;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IFinancialCompanyRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n      };\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IFinancialCompanyRequest) {\r\n    this.showLoading();\r\n    this.financialService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IFinancialCompanyModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IFinancialCompanyRequest) {\r\n    this.showLoading();\r\n    this.financialService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IFinancialCompanyModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  FinancialCompanyToEdit(FinancialCompany: IFinancialCompanyModel) {\r\n    this.form.patchValue(FinancialCompany);\r\n  }\r\n\r\n  onDelete(FinancialCompany: IFinancialCompanyModel): void {\r\n    let msg = this.msgTranslate(\r\n      FinancialCompany.ar_Name,\r\n      FinancialCompany.en_Name\r\n    );\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.Delete(FinancialCompany);\r\n    });\r\n  }\r\n\r\n  Delete(FinancialCompany: IFinancialCompanyModel) {\r\n    this.showLoading();\r\n    this.financialService\r\n      .Delete(FinancialCompany.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (FinancialCompany.id == this.formCtrls.id.value) this.clearForm();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- not used spinner -->\r\n<!--<ngx-spinner></ngx-spinner>-->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"financialCompany\"\r\n          editTitle=\"editFinancialCompany\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input [control]=\"formCtrls.en_Name\"\r\n                         label=\"en_Name\"\r\n                         [submitted]=\"submitted\">\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input [control]=\"formCtrls.ar_Name\"\r\n                         label=\"ar_Name\"\r\n                         [submitted]=\"submitted\">\r\n              </app-input>\r\n            </div>\r\n\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"onSubmit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [exportService]=\"financialService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (editRow)=\"FinancialCompanyToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { NationalityComponent } from \"./components/nationality/nationality.component\";\r\nimport { CountryComponent } from \"./components/country/country.component\";\r\nimport { EducationDegreeComponent } from \"./components/education-degree/education-degree.component\";\r\nimport { ContractTypeComponent } from \"./components/contract-type/contract-type.component\";\r\nimport { ReligionComponent } from \"./components/religion/religion.component\";\r\nimport { InsuranceOfficeComponent } from \"./components/insurance-office/insurance-office.component\";\r\nimport { InstitutionComponent } from \"./components/institution/institution.component\";\r\nimport { KpiComponent } from \"./components/kpi/kpi.component\";\r\nimport { AddBankComponent } from \"./components/bank/add-bank/add-bank.component\";\r\nimport { BankIndexComponent } from \"./components/bank/bank-index/bank-index.component\";\r\nimport { IdentityTypeComponent } from \"./components/identity-type/identity-type.component\";\r\nimport { HireDocumentsComponent } from \"./components/documents/hire-documents/hire-documents.component\";\r\nimport { AssignAttachmentToJobComponent } from \"./components/documents/assign-attachment-to-job/assign-attachment-to-job.component\";\r\nimport { GovernorateComponent } from \"./components/governorate/governorate.component\";\r\nimport { FinancialCompanyComponent } from \"./components/finincial-company/financial-company.component\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { pathMatch } from \"app/shared/enums/route-path-match.enum\";\r\nimport { ContactTypeComponent } from \"./components/contact-type/contact-type.component\";\r\nimport { ContactCategoryComponent } from \"./components/contact-category/contact-category.component\";\r\nimport { CheckIsViewAllowedGuard } from \"app/shared/Guards/check-is-allowd.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"nationality\",\r\n    component: NationalityComponent,\r\n    data: {view: ViewsManager.nationality},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"country\",\r\n    component: CountryComponent,\r\n    data: {view: ViewsManager.country},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"education-degree\",\r\n    component: EducationDegreeComponent,\r\n    data: {view: ViewsManager.education_degree},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"contract-type\",\r\n    component: ContractTypeComponent,\r\n    data: {view: ViewsManager.contract_type},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n  {\r\n    path: \"contact-type\",\r\n    component: ContactTypeComponent,\r\n    data: {view: ViewsManager.contact_type},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n  {\r\n    path: \"contact-category\",\r\n    component: ContactCategoryComponent,\r\n    data: {view: ViewsManager.contact_category},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"religion\",\r\n    component: ReligionComponent,\r\n    data: {view: ViewsManager.religion},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"finincial-company\",\r\n    component: FinancialCompanyComponent,\r\n    data: {view: ViewsManager.finincial_company},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"insurance-office\",\r\n    component: InsuranceOfficeComponent,\r\n    data: {view: ViewsManager.insurance_office},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"institution\",\r\n    component: InstitutionComponent,\r\n    data: {view: ViewsManager.institution},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n  {\r\n    path: \"bank\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n\r\n      {\r\n        path: \"index\",\r\n        component: BankIndexComponent,\r\n        data: {view: ViewsManager.bank_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n\r\n      {\r\n        path: \"add\",\r\n        component: AddBankComponent,\r\n        data: {view: ViewsManager.add_bank},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n\r\n      {\r\n        path: \"edit/:bankid\",\r\n        component: AddBankComponent,\r\n        data: {view: ViewsManager.add_bank},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"hire-documents\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n\r\n      {\r\n        path: \"index\",\r\n        component: HireDocumentsComponent,\r\n        data: {view: ViewsManager.hire_documents},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n\r\n      {\r\n        path: \"assign-to-job\",\r\n        component: AssignAttachmentToJobComponent,\r\n        data: {view: ViewsManager.assign_to_job},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"governorate\",\r\n    component: GovernorateComponent,\r\n    data: {view: ViewsManager.governorate},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"kpi\",\r\n    component: KpiComponent,\r\n    data: {view: ViewsManager.kpi},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"identity-type\",\r\n    component: IdentityTypeComponent,\r\n    data: {view: ViewsManager.identity_type},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HrSetupRoutingModule {}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { AddBankComponent } from \"./components/bank/add-bank/add-bank.component\";\r\nimport { BankBranchComponent } from \"./components/bank/bank-branch/bank-branch.component\";\r\nimport { BankIndexComponent } from \"./components/bank/bank-index/bank-index.component\";\r\nimport { ContractTypeComponent } from \"./components/contract-type/contract-type.component\";\r\nimport { CountryComponent } from \"./components/country/country.component\";\r\nimport { AssignAttachmentToJobComponent } from \"./components/documents/assign-attachment-to-job/assign-attachment-to-job.component\";\r\nimport { HireDocumentsComponent } from \"./components/documents/hire-documents/hire-documents.component\";\r\nimport { EducationDegreeComponent } from \"./components/education-degree/education-degree.component\";\r\nimport { FinancialCompanyComponent } from \"./components/finincial-company/financial-company.component\";\r\nimport { GovernorateComponent } from \"./components/governorate/governorate.component\";\r\nimport { IdentityTypeComponent } from \"./components/identity-type/identity-type.component\";\r\nimport { InstitutionComponent } from \"./components/institution/institution.component\";\r\nimport { InsuranceOfficeComponent } from \"./components/insurance-office/insurance-office.component\";\r\nimport { KpiComponent } from \"./components/kpi/kpi.component\";\r\nimport { NationalityComponent } from \"./components/nationality/nationality.component\";\r\nimport { ReligionComponent } from \"./components/religion/religion.component\";\r\nimport { HrSetupRoutingModule } from \"./hr-setup-routing.module\";\r\nimport { ContactTypeComponent } from './components/contact-type/contact-type.component';\r\nimport { ContactCategoryComponent } from './components/contact-category/contact-category.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NationalityComponent,\r\n    CountryComponent,\r\n    EducationDegreeComponent,\r\n    ContractTypeComponent,\r\n    ReligionComponent,\r\n    InsuranceOfficeComponent,\r\n    InstitutionComponent,\r\n    BankIndexComponent,\r\n    BankBranchComponent,\r\n    AddBankComponent,\r\n    KpiComponent,\r\n    IdentityTypeComponent,\r\n    HireDocumentsComponent,\r\n    AssignAttachmentToJobComponent,\r\n    GovernorateComponent,\r\n    FinancialCompanyComponent,\r\n    ContactTypeComponent,\r\n    ContactCategoryComponent,\r\n  ],\r\n  imports: [CommonModule, HrSetupRoutingModule, SharedModule],\r\n})\r\nexport class HrSetupModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IFinancialCompanyModel,\r\n  IFinancialCompanyRequest,\r\n} from \"../models/financial-company\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FinancialCompanyService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(body: IFinancialCompanyRequest) {\r\n    return this.post<IResponse<IFinancialCompanyModel[]>>(\r\n      \"HRSetup/FinancialCompany/Create\",\r\n      body\r\n    );\r\n  }\r\n\r\n  update(body: IFinancialCompanyRequest) {\r\n    return this.post<IResponse<IFinancialCompanyModel[]>>(\r\n      \"HRSetup/FinancialCompany/Edit\",\r\n      body\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IFinancialCompanyModel[]>>(\r\n      \"HRSetup/FinancialCompany/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IFinancialCompanyModel[]>>(\r\n      \"HRSetup/FinancialCompany/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(`HRSetup/FinancialCompany/Delete`, {\r\n      params: { id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport {\r\n  IDocJobTitleModel,\r\n  IDocJobTitleRequest,\r\n} from \"app/system-setup/hr-setup/models/hire-documents\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AssignDocToJobtitleService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(body: IDocJobTitleRequest) {\r\n    return this.post<IResponseList<IDocJobTitleModel[]>>(\r\n      \"HRSetup/JobTitleHireDocument/Create\",\r\n      body,\r\n\r\n    );\r\n  }\r\n\r\n  getList(params:IPageParams) {\r\n    return this.get<IResponseList<IDocJobTitleModel[]>>(\r\n      \"HRSetup/JobTitleHireDocument/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $expand: `${db.Comm_Attachment_Type_Services}.${db.Comm_Attachment_Type},${db.Core_Job_Title}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IDocJobTitleModel[]>>(\r\n      \"HRSetup/JobTitleHireDocument/GetAll\"\r\n\r\n    );\r\n  }\r\n\r\n  Delete(param) {\r\n    return this.delete<IResponse>(\"HRSetup/JobTitleHireDocument/Delete\", {\r\n          params:param\r\n        });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}