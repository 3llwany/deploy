{"version":3,"file":"src_app_system-setup_general-setup_general-setup_module_ts.js","mappings":"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","sources":["./src/app/shared/Guards/check-is-allowd.guard.ts","./src/app/shared/enums/gender.enum.ts","./src/app/system-setup/general-setup/components/activation-setup/activation-setup.component.ts","./src/app/system-setup/general-setup/components/activation-setup/activation-setup.component.html","./src/app/system-setup/general-setup/components/attachment-types/attachment-types.component.ts","./src/app/system-setup/general-setup/components/attachment-types/attachment-types.component.html","./src/app/system-setup/general-setup/components/company-code/company-code.component.ts","./src/app/system-setup/general-setup/components/company-code/company-code.component.html","./src/app/system-setup/general-setup/components/groups/add-group/add-group.component.ts","./src/app/system-setup/general-setup/components/groups/add-group/add-group.component.html","./src/app/system-setup/general-setup/components/groups/groups-index/groups-index.component.ts","./src/app/system-setup/general-setup/components/groups/groups-index/groups-index.component.html","./src/app/system-setup/general-setup/components/iso-code/iso-code.component.ts","./src/app/system-setup/general-setup/components/iso-code/iso-code.component.html","./src/app/system-setup/general-setup/components/personal-notification/add-personal-notification/add-personal-notification.component.ts","./src/app/system-setup/general-setup/components/personal-notification/add-personal-notification/add-personal-notification.component.html","./src/app/system-setup/general-setup/components/personal-notification/notification-details/notification-details.component.ts","./src/app/system-setup/general-setup/components/personal-notification/notification-details/notification-details.component.html","./src/app/system-setup/general-setup/components/personal-notification/personal-notification-index/personal-notification-index.component.ts","./src/app/system-setup/general-setup/components/personal-notification/personal-notification-index/personal-notification-index.component.html","./src/app/system-setup/general-setup/components/users/user-index/user-index.component.ts","./src/app/system-setup/general-setup/components/users/user-index/user-index.component.html","./src/app/system-setup/general-setup/general-setup-routing.module.ts","./src/app/system-setup/general-setup/general-setup.module.ts","./src/app/system-setup/general-setup/mapper/groups.ts","./src/app/system-setup/general-setup/services/activation-setup.service.ts","./src/app/system-setup/general-setup/services/attachment-types.service.ts","./src/app/system-setup/general-setup/services/company-code.service.ts","./src/app/system-setup/general-setup/services/personal-notification.service.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, } from \"@angular/router\";\r\nimport { UserViewsService } from \"app/auth/services/user-views.service\";\r\nimport { IUM_ModulesModel } from \"app/shared/interfaces/user-views\";\r\nimport { LoadingService } from \"app/shared/services/loading.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CheckIsViewAllowedGuard implements CanActivate {\r\n  UserModules: IUM_ModulesModel[];\r\n  public loadingService = inject(LoadingService);\r\n  loading: HTMLElement;\r\n\r\n  constructor(private viewsService: UserViewsService) {\r\n    this.UserModules = this.viewsService.UserModules$.getValue();\r\n    this.loading = document.getElementById(\"page-loading\");\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    return true;\r\n    // un comment code for used\r\n    // let view = route.data?.view;\r\n    // this.showLoading();\r\n    // if (this.UserModules?.length > 0) {\r\n    //   if (!this.viewsService.isViewAllowed(view)) {\r\n    //     this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //     this.hideLoading();\r\n    //   }\r\n    //   else {\r\n    //     this.hideLoading();\r\n    //     return true;\r\n    //   }\r\n    // }\r\n    //\r\n    // else {\r\n    //   this.viewsService.UserModules$.subscribe((val) => {\r\n    //     if (val?.length > 0) {\r\n    //       if (!this.viewsService.isViewAllowed(view)) {\r\n    //         this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //         this.hideLoading();\r\n    //       }\r\n    //       else {\r\n    //         this.hideLoading();\r\n    //         return true;\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  showLoading() {\r\n    this.loading.style.display = \"block\";\r\n    this.loading.style.opacity = \"1\";\r\n    this.loading.style.zIndex = \"998\";\r\n  }\r\n\r\n  hideLoading() {\r\n    this.loading.style.display = \"none\";\r\n    this.loading.style.opacity = \"0\";\r\n    this.loading.style.zIndex = \"0\";\r\n  }\r\n}\r\n","export enum EGender {\r\n\tmale = 1,\r\n\tfemale = 2,\r\n\tallofThem = 3,\r\n}\r\nexport namespace EGender {\r\n\texport function getValue(gender: EGender | number): string {\r\n\t\tswitch (gender) {\r\n\t\t\tcase EGender.male:\r\n\t\t\t\treturn \"male\";\r\n\t\t\tcase EGender.female:\r\n\t\t\t\treturn \"female\";\r\n\t\t\tcase EGender.allofThem:\r\n\t\t\t\treturn \"allofThem\";\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IActivationSetupModel, IActivationSetupRequest, } from \"app/system-setup/general-setup/models/activation-setup\";\r\nimport { ActivationSetupService } from \"app/system-setup/general-setup/services/activation-setup.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-activation-setup\",\r\n  templateUrl: \"./activation-setup.component.html\",\r\n  styleUrls: [\"./activation-setup.component.scss\"],\r\n})\r\nexport class ActivationSetupComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  dataSource: MatTableDataSource<IActivationSetupModel>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"object_Name\",\r\n    \"require_Activation\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  // private destroy$ = new Subject<void>();\r\n\r\n  constructor(public activationService: ActivationSetupService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      object_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      require_Activation: [false],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.activationService\r\n      .getList(params)\r\n      // .pipe(takeUntil(this.destroy$))\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IActivationSetupModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IActivationSetupRequest = {\r\n        id: this.formCtrls.id.value,\r\n        object_Name: this.formCtrls.object_Name.value,\r\n        require_Activation: this.formCtrls.require_Activation.value,\r\n      };\r\n\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IActivationSetupRequest) {\r\n    this.showLoading();\r\n    this.activationService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IActivationSetupModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IActivationSetupRequest) {\r\n    this.showLoading();\r\n    this.activationService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IActivationSetupModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(activationSetup: IActivationSetupModel): void {\r\n    let msg = this.msgTranslate(activationSetup.object_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.Delete(activationSetup);\r\n    });\r\n  }\r\n\r\n  Delete(activationSetup: IActivationSetupModel) {\r\n    this.showLoading();\r\n    this.activationService\r\n      .Delete(activationSetup.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (activationSetup.id == this.formCtrls.id.value) this.clearForm();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  activationSetupToEdit(activationSetup: IActivationSetupModel) {\r\n    this.form.patchValue(activationSetup);\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, require_Activation: false});\r\n    this.submitted = false;\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   // Unsubscribe from all observables to prevent memory leaks\r\n  //   this.destroy$.next();\r\n  //   this.destroy$.complete();\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"activation_setup\"\r\n          editTitle=\"editActivation_setup\">\r\n        </page-title>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.object_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"object_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12 mt-3\">\r\n              <app-check-box\r\n                color=\"primary\"\r\n                label=\"require_Activation\"\r\n                [control]=\"formCtrls.require_Activation\"\r\n              >\r\n              </app-check-box>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [exportService]=\"activationService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (editRow)=\"activationSetupToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IAttachmentTypesModel, IAttachmentTypesRequest, } from \"app/system-setup/general-setup/models/attachment-types\";\r\nimport { AttachmentTypesService } from \"app/system-setup/general-setup/services/attachment-types.service\";\r\nimport { RadioButtonModel } from \"app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { EGender } from \"app/shared/enums/gender.enum\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-attachment-types\",\r\n  templateUrl: \"./attachment-types.component.html\",\r\n  styleUrls: [\"./attachment-types.component.scss\"],\r\n})\r\nexport class AttachmentTypesComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  dataSource: MatTableDataSource<IAttachmentTypesModel>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"genderName\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  // private destroy$ = new Subject<void>();\r\n\r\n  constructor(public attachmentTypsService: AttachmentTypesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      gender: [3],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  genderList: RadioButtonModel[] = [\r\n    {\r\n      value: EGender.male,\r\n      label: \"male\",\r\n      cssClass: \"col-md-4 col-12\",\r\n    },\r\n\r\n    {\r\n      value: EGender.female,\r\n      label: \"female\",\r\n      cssClass: \"col-md-4 col-12\",\r\n    },\r\n\r\n    {\r\n      value: EGender.allofThem,\r\n      label: \"allofThem\",\r\n      cssClass: \"col-md-4 col-12\",\r\n    },\r\n  ];\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.attachmentTypsService\r\n      .getList(params)\r\n      // .pipe(takeUntil(this.destroy$))\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IAttachmentTypesModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data.map((item: IAttachmentTypesModel) => {\r\n            item.genderName = this.translate(EGender.getValue(item.gender));\r\n          });\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IAttachmentTypesRequest = {\r\n        Id: this.formCtrls.id.value,\r\n        ar_Name: this.formCtrls.ar_Name.value,\r\n        en_Name: this.formCtrls.en_Name.value,\r\n        gender: this.formCtrls.gender.value,\r\n      };\r\n\r\n      model.Id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IAttachmentTypesRequest) {\r\n    this.showLoading();\r\n    this.attachmentTypsService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IAttachmentTypesModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IAttachmentTypesRequest) {\r\n    this.showLoading();\r\n    this.attachmentTypsService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IAttachmentTypesModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(attachmentTyps: IAttachmentTypesModel): void {\r\n    let msg = this.msgTranslate(attachmentTyps.ar_Name, attachmentTyps.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.Delete(attachmentTyps);\r\n    });\r\n  }\r\n\r\n  Delete(attachmentTyps: IAttachmentTypesModel) {\r\n    this.showLoading();\r\n    this.attachmentTypsService\r\n      .Delete(attachmentTyps.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (attachmentTyps.id == this.formCtrls.id.value) this.clearForm();\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  attachmentTypsToEdit(attachmentTyps: IAttachmentTypesRequest) {\r\n    this.form.patchValue(attachmentTyps);\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   // Unsubscribe from all observables to prevent memory leaks\r\n  //   this.destroy$.next();\r\n  //   this.destroy$.complete();\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"attachment_types\"\r\n          editTitle=\"edit_attachment_types\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-radio-button\r\n                [control]=\"formCtrls.gender\"\r\n                [submitted]=\"submitted\"\r\n                [radioList]=\"genderList\"\r\n              ></app-radio-button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"attachmentTypsService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (editRow)=\"attachmentTypsToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  ICompanyCodeModel,\r\n  ICompanyCodeRequest,\r\n} from \"app/system-setup/general-setup/models/company-code\";\r\nimport { CompanyCodeService } from \"app/system-setup/general-setup/services/company-code.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-company-code\",\r\n  templateUrl: \"./company-code.component.html\",\r\n  styleUrls: [\"./company-code.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CompanyCodeComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  constructor(private _companyCodeService: CompanyCodeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNallable: true }],\r\n      isHasCode: [false, Validators.required],\r\n      company_ID: [, Validators.required],\r\n    });\r\n\r\n    this.formCtrls.company_ID.valueChanges.subscribe((val) => {\r\n      if (val > 0) {\r\n        this.getCodeStatus();\r\n      }\r\n    });\r\n  }\r\n  get formCtrls() {\r\n    return this.form?.controls;\r\n  }\r\n\r\n  getCodeStatus() {\r\n    this.showLoading();\r\n    this._companyCodeService\r\n      .getCodeStatus(this.formCtrls.company_ID.value)\r\n      .subscribe((res: IResponse<ICompanyCodeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data == null) {\r\n            this.formCtrls.id.setValue(0);\r\n            this.formCtrls.isHasCode.setValue(false);\r\n          } else {\r\n            this.formCtrls.id.setValue(res.data.id);\r\n            this.formCtrls.isHasCode.setValue(res.data.isHasCode);\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ICompanyCodeRequest = {\r\n        id: this.formCtrls.id.value,\r\n        isHasCode: this.formCtrls.isHasCode.value,\r\n        company_ID: this.formCtrls.company_ID.value,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: ICompanyCodeRequest) {\r\n    this.showLoading();\r\n    this._companyCodeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ICompanyCodeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res.message.messageTypeName);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ICompanyCodeRequest) {\r\n    this.showLoading();\r\n    this._companyCodeService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ICompanyCodeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res.message.messageTypeName);\r\n        } else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"companyCode\"\r\n          editTitle=\"editcompanyCode\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <company-by-businessId-dropdown\r\n                    [control]=\"formCtrls.company_ID\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </company-by-businessId-dropdown>\r\n                </div>\r\n                <div class=\"col-md-6 col-12 p-2\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isHasCode\"\r\n                    label=\"isHasCode\"\r\n                  >\r\n                  </app-check-box>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (click)=\"submit()\"> </submit-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { Params } from \"@angular/router\";\r\nimport { IGroupModel, IGroupRequest } from \"app/system-setup/general-setup/models/groups\";\r\nimport { GroupsService } from \"app/system-setup/general-setup/services/groups.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-add-group\",\r\n  templateUrl: \"./add-group.component.html\",\r\n  styleUrls: [\"./add-group.component.scss\"],\r\n})\r\nexport class AddGroupComponent extends AppHelpers implements OnInit {\r\n  groupId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  constructor(private _groupsService: GroupsService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n\t\t\tthis.groupId = params.groupId ?? 0;\r\n\t\t});\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      engName: [null, [Validators.required]],\r\n      arbName: [null, [Validators.required]],\r\n      engDescription: [null, [Validators.required]],\r\n      arbDescription: [null, [Validators.required]],\r\n    });\r\n\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.groupId > 0) {\r\n      this.getGroupById();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IGroupRequest = {\r\n        id: this.form.value.id,\r\n        engName: this.form.value.engName,\r\n        arbName: this.form.value.arbName,\r\n        engDescription: this.form.value.engDescription,\r\n        arbDescription: this.form.value.arbDescription\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IGroupRequest) {\r\n    this.showLoading();\r\n    this._groupsService.create(model).subscribe((res: IResponse<IGroupModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm()\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.groupId = res.data.id;\r\n      } else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IGroupRequest) {\r\n    this.showLoading();\r\n    this._groupsService.update(model).subscribe((res: IResponse<IGroupModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm()\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      } else {\r\n        this.errorList(res?.message?.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  getGroupById() {\r\n    this._groupsService\r\n      .getGroupById(this.groupId)\r\n      .subscribe((res: IResponse<IGroupModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.form.patchValue(res.data[0])\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div>\r\n  <div class=\"col-12 w-100\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <div>\r\n          <page-title title=\" groups\"></page-title>\r\n          <app-add-new-btn\r\n            *ngIf=\"groupId > 0\"\r\n            url=\"/general-setup/{{ moduleId }}/groups/add\"\r\n            [params]=\"pageParams\"\r\n            label=\"addgroup\">\r\n          </app-add-new-btn>\r\n          <app-back-btn url=\"/general-setup/{{ moduleId }}/groups/index\"\r\n                        [params]=\"pageParams\">\r\n          </app-back-btn>\r\n        </div>\r\n      </mat-card-title>\r\n      <mat-tab-group\r\n        class=\"col-12 w-100\"\r\n        [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n        <mat-tab\r\n          class=\"w-100\"\r\n          label=\"{{ 'userGroups' | translate | titlecase }}\">\r\n          <mat-card-content class=\"container-fluid mt-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 w-100\">\r\n                <form [formGroup]=\"form\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.engName\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"en_Name\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.arbName\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"ar_Name\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.engDescription\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"engDescription\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"formCtrls.arbDescription\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"arbDescription\"\r\n                      >\r\n                      </app-input>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n          <div class=\"m-2\">\r\n            <mat-card-actions align=\"end\">\r\n              <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n              </submit-btn>\r\n              <reset-form-btn\r\n                *ngIf=\"formCtrls.id.value > 0\"\r\n                (click)=\"clearForm()\"\r\n              >\r\n              </reset-form-btn>\r\n            </mat-card-actions>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab\r\n          class=\"w-100\"\r\n          label=\"{{ 'privileges' | translate | titlecase }}\"\r\n        >\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { groupToMap } from \"app/system-setup/general-setup/mapper/groups\";\r\nimport { IGroupModel } from \"app/system-setup/general-setup/models/groups\";\r\nimport { GroupsService } from \"app/system-setup/general-setup/services/groups.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-groups-index\",\r\n  templateUrl: \"./groups-index.component.html\",\r\n  styleUrls: [\"./groups-index.component.scss\"],\r\n})\r\nexport class GroupsIndexComponent extends AppHelpers implements OnInit {\r\n  dataSource: MatTableDataSource<IGroupModel>;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"ar_Name\", \"en_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  // private destroy$ = new Subject<void>();\r\n\r\n  constructor(public _groupsService: GroupsService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this._groupsService\r\n      .getList(params)\r\n      // .pipe(takeUntil(this.destroy$))\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IGroupModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(groupToMap(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onDelete(group: IGroupModel): void {\r\n    let msg = this.msgTranslate(group.engName, group.arbName);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(group);\r\n    });\r\n  }\r\n\r\n  delete(group: IGroupModel) {\r\n    this.showLoading();\r\n    this._groupsService.Delete(group.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1)\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        else this.getList(this.currentPage, this.page.pageSize);\r\n      }\r\n      else this.errorList(res?.message?.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   // Unsubscribe from all observables to prevent memory leaks\r\n  //   this.destroy$.next();\r\n  //   this.destroy$.complete();\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"index-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          title=\"groups\"\r\n          [globalFunctions]=\"globalFunctions\"\r\n        ></page-title>\r\n      </mat-card-title>\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"_groupsService\"\r\n        [actions]=\"rowFunctions\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { IReportsModel, IsoCodeRequest } from \"app/system-setup/general-setup/models/iso-code\";\r\nimport { IsoCodeService } from \"app/system-setup/general-setup/services/iso-code.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"app-iso-code\",\r\n\ttemplateUrl: \"./iso-code.component.html\",\r\n\tstyleUrls: [\"./iso-code.component.scss\"],\r\n})\r\nexport class IsoCodeComponent extends AppHelpers implements OnInit {\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\tisoChanged: boolean;\r\n\tconstructor(private isoCodeService: IsoCodeService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\treportId: [null, [Validators.required]],\r\n\t\t\tiso: [null, [Validators.required]],\r\n\t\t});\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst model: IsoCodeRequest = {\r\n\t\t\t\tid: this.formCtrls.reportId.value,\r\n\t\t\t\tiso: this.formCtrls.iso.value,\r\n\t\t\t};\r\n\t\t\tthis.update(model);\r\n\t\t}\r\n\t}\r\n\r\n\tonSelectReport(report: IReportsModel) {\r\n\t\tif (report) this.formCtrls.iso.setValue(report.iso);\r\n\t\telse this.formCtrls.iso.setValue(null);\r\n\t}\r\n\r\n\tupdate(model: IsoCodeRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.isoCodeService.Edit(model).subscribe((res) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.isoChanged = true;\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.addSuccessfullyMsg(res.message.messageTypeName);\r\n\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t});\r\n\t}\r\n\r\n\tclearForm() {\r\n\t\tthis.form.reset();\r\n\t\tthis.submitted = false;\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<mat-card class=\"form-card\">\r\n  <mat-card-title>\r\n    <page-title title=\"isoCode\"></page-title>\r\n  </mat-card-title>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 col-12\">\r\n          <reports-dropdown\r\n            [control]=\"formCtrls.reportId\"\r\n            [submitted]=\"submitted\"\r\n            [isoChanged]=\"isoChanged\"\r\n            (select)=\"onSelectReport($event)\">\r\n          </reports-dropdown>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-12\">\r\n          <app-input [control]=\"formCtrls.iso\" [submitted]=\"submitted\" label=\"isoCode\"></app-input>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <mat-card-actions align=\"end\">\r\n      <submit-btn (onClick)=\"submit()\"></submit-btn>\r\n      <reset-form-btn *ngIf=\"formCtrls.reportId.value || formCtrls.iso.value\" (click)=\"clearForm()\">\r\n      </reset-form-btn>\r\n    </mat-card-actions>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  IPersonalNotificationModel,\r\n  IPersonalNotificationRequest,\r\n} from \"app/system-setup/general-setup/models/person/personal-notification\";\r\nimport { PersonalNotificationService } from \"app/system-setup/general-setup/services/personal-notification.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"app-add-personal-notification\",\r\n\ttemplateUrl: \"./add-personal-notification.component.html\",\r\n\tstyleUrls: [\"./add-personal-notification.component.scss\"],\r\n})\r\nexport class AddPersonalNotificationComponent extends AppHelpers implements OnInit {\r\n\tPersonalId: number = 0;\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\r\n\tconstructor(private personalNotificationService: PersonalNotificationService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.activatedRoute.paramMap.subscribe((params) => {\r\n\t\t\tthis.PersonalId = Number(params.get(\"PersonalId\")) ?? 0;\r\n\t\t\tif (this.checkNoBusinessOrCompany() && this.PersonalId > 0) {\r\n\t\t\t\tthis.getPersonById();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tPersonid: [null],\r\n\t\t\tid: [0, { nonNallable: true }],\r\n\t\t\tName: [null, [Validators.required]],\r\n\t\t\tPassWord: [null, [Validators.required]],\r\n\t\t\tIs_Active: [false],\r\n\t\t});\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany() && this.PersonalId > 0) this.getPersonById();\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tthis.submitted = true;\r\n\t\t// if (this.form.valid) {\r\n\t\t// \tconst model: IPersonalNotificationRequest = {};\r\n\t\t// \t// model.User.Id == 0 ? this.create(model) : this.update(model);\r\n\t\t// }\r\n\t}\r\n\r\n\tcreate(model: IPersonalNotificationRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.personalNotificationService\r\n\t\t\t.createPersonalNotification(model, this.businessCompanyParams)\r\n\t\t\t.subscribe((res: IResponse<IPersonalNotificationModel>) => {\r\n\t\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.addSuccessfullyMsg(res.message.messageTypeName);\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tupdate(model: IPersonalNotificationRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.personalNotificationService\r\n\t\t\t.updatePersonalNotificationy(model, this.businessCompanyParams)\r\n\t\t\t.subscribe((res: IResponse<IPersonalNotificationModel>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success)\r\n\t\t\t\t\tthis.updateSuccessfullyMsg(res.message.messageTypeName);\r\n\t\t\t\telse this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetPersonById() {}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<mat-card>\r\n  <mat-card-title>\r\n    <page-title title=\"personal_Notification\"> </page-title>\r\n    <app-add-new-btn\r\n      *ngIf=\"PersonalId > 0\"\r\n      url=\"/attendance-setup/{{ moduleId }}/personal_notification/add\"\r\n      [params]=\"pageParams\"\r\n      label=\"addPersonal_Notification\"\r\n    >\r\n    </app-add-new-btn>\r\n    <app-back-btn\r\n      url=\"/general-setup/{{ moduleId }}/personal_notification/index\"\r\n      [params]=\"pageParams\"\r\n    ></app-back-btn>\r\n  </mat-card-title>\r\n  <mat-tab-group [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\">\r\n    <mat-tab label=\"{{ 'personal_notification' | translate | titlecase }}\">\r\n      <mat-card-subtitle>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"addPersonal_notification\"\r\n          editTitle=\"editPersonal_notification\"\r\n        >\r\n        </page-title>\r\n      </mat-card-subtitle>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input [submitted]=\"submitted\" label=\"arName\" [control]=\"formCtrls.Name\"> </app-input>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input [submitted]=\"submitted\" label=\"enName\"  [control]=\"formCtrls.Name\"> </app-input>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-prime-dropdown [submitted]=\"submitted\"  [control]=\"formCtrls.Name\"> </app-prime-dropdown>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-prime-dropdown [submitted]=\"submitted\"  [control]=\"formCtrls.Name\"> </app-prime-dropdown>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n    </mat-tab>\r\n    <mat-tab label=\"{{ 'Notification Details' | translate | titlecase }}\">\r\n\t\t\t<app-notification-details [PersonalId]=\"PersonalId\"></app-notification-details>\r\n\t\t</mat-tab>\r\n  </mat-tab-group>\r\n</mat-card>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  INotificationDetailsModel,\r\n  INotificationDetailsRequest,\r\n} from \"app/system-setup/general-setup/models/person/personal-notification\";\r\nimport { PersonalNotificationService } from \"app/system-setup/general-setup/services/personal-notification.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"app-notification-details\",\r\n\ttemplateUrl: \"./notification-details.component.html\",\r\n\tstyleUrls: [\"./notification-details.component.scss\"],\r\n})\r\nexport class NotificationDetailsComponent extends AppHelpers implements OnInit {\r\n\t@Input() PersonalId: number = 0;\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\tmandatoryColomns: string[] = [\"Ser\", \"NotificationType\", \"actions\"];\r\n\tisLoaded: boolean = false;\r\n\toptionalColomns: string[] = [];\r\n\tdataSource: MatTableDataSource<INotificationDetailsModel>;\r\n\r\n\tconstructor(\r\n \t\tprivate personalNotificationService: PersonalNotificationService\r\n\t) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.checkNoBusinessOrCompany() && this.PersonalId > 0) {\r\n\t\t\tthis.getList(1);\r\n\t\t}\r\n\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tid: [0, { nonNallable: true }],\r\n\t\t\tnotificationType: [null, [Validators.required]],\r\n\t\t});\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.checkNoBusinessOrCompany() && this.PersonalId > 0) this.getList(1);\r\n\t}\r\n\r\n\tgetList(page: number, pageSize?: number) {\r\n\t\tthis.page.pageIndex = page;\r\n\t\tif (pageSize) this.page.pageSize = pageSize;\r\n\t\tthis.removePageParams();\r\n\t\tlet params = {\r\n\t\t\tPageNumber: page,\r\n\t\t\tpageSize: this.page.pageSize,\r\n\t\t};\r\n\t\tthis.personalNotificationService\r\n\t\t\t.getNotificationDetails(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<INotificationDetailsModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tif (res.data.length == 0 && page > 1) {\r\n\t\t\t\t\t\tthis.getList(this.prevPage);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t\tthis.page.length = res.meta.totalItemCount;\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t//\tconst model: INotificationDetailsRequest = {};\r\n\t\t\t// model.User.Id == 0 ? this.create(model) : this.update(model);\r\n\t\t}\r\n\t}\r\n\r\n\tcreate(model: INotificationDetailsRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.personalNotificationService\r\n\t\t\t.createPersonalNotification(model, this.businessCompanyParams)\r\n\t\t\t.subscribe((res: IResponse<INotificationDetailsModel>) => {\r\n\t\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.addSuccessfullyMsg(res.message.messageTypeName);\r\n\t\t\t\t} else this.errorList(res?.message?.messages);\r\n\t\t\t});\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card-subtitle>\r\n      <page-title\r\n        [id]=\"formCtrls.id.value\"\r\n        addTitle=\"addNotificationDetails\"\r\n        editTitle=\"editNotificationDetails\"\r\n      >\r\n      </page-title>\r\n    </mat-card-subtitle>\r\n    <mat-card-content class=\"container-fluid\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-md-6\">\r\n            <app-prime-dropdown [submitted]=\"submitted\" [control]=\"formCtrls.notificationType\" >\r\n            </app-prime-dropdown>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-card-actions align=\"end\">\r\n              <submit-btn\r\n                [id]=\"formCtrls.id.value\"\r\n                (onClick)=\"submit()\"\r\n              ></submit-btn>\r\n            </mat-card-actions>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n    <app-material-table\r\n\t\t\t\t\t[isLoaded]=\"isLoaded\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [page]=\"page\"\r\n    [actions]=\"rowFunctions\"\r\n    [dataSource]=\"dataSource\"\r\n    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n  >\r\n\r\n  </app-material-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IPersonalNotificationModel } from \"app/system-setup/general-setup/models/person/personal-notification\";\r\nimport { PersonalNotificationService } from \"app/system-setup/general-setup/services/personal-notification.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-personal-notification\",\r\n  templateUrl: \"./personal-notification-index.component.html\",\r\n  styleUrls: [\"./personal-notification-index.component.scss\"],\r\n})\r\nexport class PersonalNotificationComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"English Name\", \"Group\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IPersonalNotificationModel>;\r\n\r\n  constructor(public personalNotificationService: PersonalNotificationService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.personalNotificationService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IPersonalNotificationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onDelete(personalNotification: any): void {\r\n    let msg = this.msgTranslate(personalNotification.name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(personalNotification);\r\n    });\r\n  }\r\n\r\n  delete(personalNotification: IPersonalNotificationModel) {\r\n    let params = {\r\n      ...this.businessCompanyParams,\r\n      id: personalNotification.id,\r\n    };\r\n    this.showLoading();\r\n    this.personalNotificationService\r\n      .Delete(params)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"index-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          title=\"personal_Notification\"\r\n          [globalFunctions]=\"globalFunctions\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n       <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"personalNotificationService\"\r\n        [actions]=\"rowFunctions\"\r\n        [dataSource]=\"dataSource\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { userToMap } from \"app/system-setup/general-setup/mapper/users\";\r\nimport { IUMUsers, IUserModel } from \"app/system-setup/general-setup/models/users\";\r\nimport { UsersService } from \"app/system-setup/general-setup/services/users/users.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-user-index\",\r\n  templateUrl: \"./user-index.component.html\",\r\n  styleUrls: [\"./user-index.component.scss\"],\r\n})\r\nexport class UserIndexComponent extends AppHelpers implements OnInit {\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IUMUsers>;\r\n\r\n  // private destroy$ = new Subject<void>();\r\n\r\n  constructor(public userService: UsersService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.userService.getList(params)\r\n      // .pipe(takeUntil(this.destroy$))\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IUserModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(userToMap(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n      });\r\n  }\r\n\r\n  onDelete(user: IUMUsers): void {\r\n    let msg = this.msgTranslate(user.name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(user);\r\n    });\r\n  }\r\n\r\n  delete(user: IUMUsers) {\r\n    this.showLoading();\r\n    this.userService.Delete(user.id).subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res?.message?.messages);\r\n        this.hideLoading();\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Unsubscribe from all observables to prevent memory leaks\r\n    // this.destroy$.next();\r\n    // this.destroy$.complete();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"index-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"users\" [globalFunctions]=\"globalFunctions\">\r\n        </page-title>\r\n      </mat-card-title>\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [dataSource]=\"dataSource\"\r\n        [exportService]=\"userService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- Dashboard -->\r\n<side-helping-menu>\r\n  <app-dashboard-display [serviceId]=\"getCurrentServiceId()\"></app-dashboard-display>\r\n</side-helping-menu>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { pathMatch } from \"app/shared/enums/route-path-match.enum\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { ActivationSetupComponent } from \"./components/activation-setup/activation-setup.component\";\r\nimport { AttachmentTypesComponent } from \"./components/attachment-types/attachment-types.component\";\r\nimport { CompanyCodeComponent } from \"./components/company-code/company-code.component\";\r\nimport { AddGroupComponent } from \"./components/groups/add-group/add-group.component\";\r\nimport { GroupsIndexComponent } from \"./components/groups/groups-index/groups-index.component\";\r\nimport { IsoCodeComponent } from \"./components/iso-code/iso-code.component\";\r\nimport {\r\n  AddPersonalNotificationComponent\r\n} from \"./components/personal-notification/add-personal-notification/add-personal-notification.component\";\r\nimport {\r\n  PersonalNotificationComponent\r\n} from \"./components/personal-notification/personal-notification-index/personal-notification-index.component\";\r\nimport { AddUserComponent } from \"./components/users/add-user/add-user.component\";\r\nimport { UserIndexComponent } from \"./components/users/user-index/user-index.component\";\r\nimport { CheckIsViewAllowedGuard } from \"app/shared/Guards/check-is-allowd.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"activation-setup\",\r\n    component: ActivationSetupComponent,\r\n    data: {view: ViewsManager.activation_setup},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"attachment-types\",\r\n    component: AttachmentTypesComponent,\r\n    data: {view: ViewsManager.attachment_types},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n  {\r\n    path: \"users\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: UserIndexComponent,\r\n        data: {view: ViewsManager.users_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddUserComponent,\r\n        data: {view: ViewsManager.add_user},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:userId\",\r\n        component: AddUserComponent,\r\n        data: {view: ViewsManager.add_user},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"personal-notification\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: PersonalNotificationComponent,\r\n        data: {view: ViewsManager.personal_notification_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddPersonalNotificationComponent,\r\n        data: {view: ViewsManager.add_personal_notification},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:PersonalId\",\r\n        component: AddPersonalNotificationComponent,\r\n        data: {view: ViewsManager.add_personal_notification},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"iso-code\",\r\n    component: IsoCodeComponent,\r\n    data: {view: ViewsManager.iso_code},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n  {\r\n    path: \"company-code\",\r\n    component: CompanyCodeComponent,\r\n    data: {view: ViewsManager.company_code},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"groups\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: GroupsIndexComponent,\r\n        data: {view: ViewsManager.groups_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddGroupComponent,\r\n        data: {view: ViewsManager.add_group},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:groupId\",\r\n        component: AddGroupComponent,\r\n        data: {view: ViewsManager.add_group},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GeneralSetupRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { GeneralSetupRoutingModule } from \"./general-setup-routing.module\";\r\nimport { ActivationSetupComponent } from \"./components/activation-setup/activation-setup.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { AttachmentTypesComponent } from \"./components/attachment-types/attachment-types.component\";\r\nimport { AddUserComponent } from \"./components/users/add-user/add-user.component\";\r\nimport { UserIndexComponent } from \"./components/users/user-index/user-index.component\";\r\nimport { UserCompaniesComponent } from \"./components/users/user-companies/user-companies.component\";\r\nimport { UserGroupComponent } from \"./components/users/user-group/user-group.component\";\r\nimport { UserPolicyGroupsComponent } from \"./components/users/user-policy-groups/user-policy-groups.component\";\r\nimport { IsoCodeComponent } from \"./components/iso-code/iso-code.component\";\r\nimport { CompanyCodeComponent } from \"./components/company-code/company-code.component\";\r\nimport { GroupsIndexComponent } from \"./components/groups/groups-index/groups-index.component\";\r\nimport { AddGroupComponent } from \"./components/groups/add-group/add-group.component\";\r\nimport { AddPersonalNotificationComponent } from \"./components/personal-notification/add-personal-notification/add-personal-notification.component\";\r\nimport { NotificationDetailsComponent } from \"./components/personal-notification/notification-details/notification-details.component\";\r\nimport { PersonalNotificationComponent } from \"./components/personal-notification/personal-notification-index/personal-notification-index.component\";\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tActivationSetupComponent,\r\n\t\tAttachmentTypesComponent,\r\n\t\tAddUserComponent,\r\n\t\tUserCompaniesComponent,\r\n\t\tUserGroupComponent,\r\n\t\tUserIndexComponent,\r\n\t\tUserPolicyGroupsComponent,\r\n\t\tIsoCodeComponent,\r\n\t\tAddPersonalNotificationComponent,\r\n\t\tNotificationDetailsComponent,\r\n\t\tPersonalNotificationComponent,\r\n\t\tCompanyCodeComponent,\r\n\t\tGroupsIndexComponent,\r\n\t\tAddGroupComponent,\r\n\t],\r\n\timports: [CommonModule, GeneralSetupRoutingModule, SharedModule],\r\n})\r\nexport class GeneralSetupModule {}\r\n","import { IGroupModel } from \"../models/groups\";\r\n\r\nexport function groupToMap(users: IGroupModel[]): IGroupModel[] {\r\n  return users.map((group) => {\r\n    return <IGroupModel>{\r\n      ...group,\r\n      ar_Name: group.arbName,\r\n      en_Name: group.engName,\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IActivationSetupModel,\r\n  IActivationSetupRequest,\r\n} from \"../models/activation-setup\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ActivationSetupService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(body: IActivationSetupRequest) {\r\n    return this.post<IResponse<IActivationSetupModel>>(\r\n      \"GeneralSetup/ActivationSetup/Create\",\r\n      body\r\n    );\r\n  }\r\n\r\n  update(data: IActivationSetupRequest) {\r\n    return this.post<IResponse<IActivationSetupModel>>(\r\n      \"GeneralSetup/ActivationSetup/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IActivationSetupModel[]>>(\r\n      \"GeneralSetup/ActivationSetup/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IActivationSetupModel[]>>(\r\n      \"GeneralSetup/ActivationSetup/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"GeneralSetup/ActivationSetup/Delete\", {\r\n      params: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IAttachmentTypesModel,\r\n  IAttachmentTypesRequest,\r\n} from \"../models/attachment-types\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AttachmentTypesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(body: IAttachmentTypesRequest) {\r\n    return this.post<IResponse<IAttachmentTypesModel>>(\r\n      \"GeneralSetup/AttachmentType/Create\",\r\n      body\r\n    );\r\n  }\r\n\r\n  update(data: IAttachmentTypesRequest) {\r\n    return this.post<IResponse<IAttachmentTypesModel>>(\r\n      \"GeneralSetup/AttachmentType/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IAttachmentTypesModel[]>>(\r\n      \"GeneralSetup/AttachmentType/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponseList<IAttachmentTypesModel[]>>(\r\n      \"GeneralSetup/AttachmentType/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"GeneralSetup/AttachmentType/Delete\", {\r\n      params: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ICompanyCodeModel, ICompanyCodeRequest } from \"../models/company-code\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CompanyCodeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ICompanyCodeRequest) {\r\n    return this.post<IResponse<ICompanyCodeModel>>(\r\n      \"GeneralSetup/CompanyCode/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ICompanyCodeRequest) {\r\n    return this.post<IResponse<ICompanyCodeModel>>(\r\n      \"GeneralSetup/CompanyCode/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getCodeStatus(compId: number) {\r\n    return this.get<IResponse<ICompanyCodeModel>>(\r\n      \"GeneralSetup/CompanyCode/GetCodeStatus\",\r\n      {\r\n        params: {\r\n          compId: `${compId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  INotificationDetailsModel,\r\n  INotificationDetailsRequest,\r\n  IPersonalNotificationModel,\r\n  IPersonalNotificationRequest,\r\n} from \"../models/person/personal-notification\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PersonalNotificationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(params) {\r\n    return this.get<IResponseList<IPersonalNotificationModel[]>>(\r\n      \"GeneralSetup/PersonalNotification/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params) {\r\n    return this.delete<IResponse>(\"\", {\r\n      params: params,\r\n    });\r\n  }\r\n  //////////////////\r\n\r\n  createPersonalNotification(data: IPersonalNotificationRequest, params) {\r\n    return this.post<IResponse<IPersonalNotificationModel>>(\"\", data, {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  updatePersonalNotificationy(data: IPersonalNotificationRequest, params) {\r\n    return this.post<IResponse<IPersonalNotificationModel>>(\"\", data, {\r\n      params: params,\r\n    });\r\n  }\r\n  // ///\r\n\r\n  getNotificationDetails(params) {\r\n    return this.get<IResponseList<INotificationDetailsModel[]>>(\"\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  createNotificationDetails(data: INotificationDetailsRequest, params) {\r\n    return this.post<IResponse<INotificationDetailsModel>>(\"\", data, {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IPersonalNotificationModel[]>>(\r\n      \"GeneralSetup/PersonalNotification/GetAll\"\r\n    );\r\n  }\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}