{"version":3,"file":"src_app_payroll-setup_payroll-setup_module_ts.js","mappings":"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","sources":["./src/app/payroll-setup/components/loan types/loan-rules/loan-rules.component.ts","./src/app/payroll-setup/components/loan types/loan-rules/loan-rules.component.html","./src/app/payroll-setup/components/payment-types/payment-types.component.ts","./src/app/payroll-setup/components/payment-types/payment-types.component.html","./src/app/payroll-setup/components/payroll-elements/add-payroll-element/add-payroll-element.component.ts","./src/app/payroll-setup/components/payroll-elements/add-payroll-element/add-payroll-element.component.html","./src/app/payroll-setup/components/payroll-elements/payroll-element-users/payroll-element-users.component.ts","./src/app/payroll-setup/components/payroll-elements/payroll-element-users/payroll-element-users.component.html","./src/app/payroll-setup/components/payroll-elements/payroll-elements-index/payroll-elements-index.component.ts","./src/app/payroll-setup/components/payroll-elements/payroll-elements-index/payroll-elements-index.component.html","./src/app/payroll-setup/payroll-setup-routing.module.ts","./src/app/payroll-setup/payroll-setup.module.ts","./src/app/payroll-setup/services/loan-rules.service.ts","./src/app/payroll-setup/services/payment-types.service.ts","./src/app/payroll-setup/services/payroll-elements.service.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ILoanRuleModel, ILoanRuleRequest } from \"app/payroll-setup/models/loan-rules\";\r\nimport { LoanRulesService } from \"app/payroll-setup/services/loan-rules.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n\tselector: \"app-loan-rules\",\r\n\ttemplateUrl: \"./loan-rules.component.html\",\r\n\tstyleUrls: [\"./loan-rules.component.scss\"],\r\n})\r\nexport class LoanRulesComponent extends AppHelpers implements OnInit {\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\tmandatoryColomns: string[] = [\"Ser\", \"id\", \"jobTitle\", \"payment\", \"variable\", \"actions\"];\r\n\toptionalColomns: string[] = [\"variablePercantage\", \"monthlyInterval\"];\r\n\r\n\tdataSource: MatTableDataSource<ILoanRuleModel>;\r\n\tloanTypeId: number;\r\n\tisLoaded: boolean = false;\r\n\tconstructor(private loanRulesService: LoanRulesService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.activatedRoute.paramMap.subscribe((params) => {\r\n\t\t\tthis.loanTypeId = Number(params.get(\"loanTypeId\")) ?? 0;\r\n\t\t\t// if (this.loanTypeId > 0 && this.CheckNoBusinessOrCompany())\r\n\t\t\t//   this.getList(this.currentPage);\r\n\t\t});\r\n\r\n\t\tthis.form = this.fb.group({\r\n\t\t\t// id: [0, { nonNullable: true }],\r\n\t\t\tjobTitleId: [null, [Validators.required]],\r\n\t\t\tpaymentId: [null, [Validators.required]],\r\n\t\t\tvariableId: [null, [Validators.required]],\r\n\t\t\tvariablePercantage: [null, [CustomValidators.digits]],\r\n\t\t\tmonthlyInterval: [null, [CustomValidators.digits]],\r\n\t\t});\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId() {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.loanTypeId && this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n\t}\r\n\r\n\tgetList(page: number, pageSize?: number) {\r\n\t\tthis.page.pageIndex = page;\r\n\t\tif (pageSize) this.page.pageSize = pageSize;\r\n\t\tlet params: IPageParams = {\r\n\t\t\tPageNumber: page,\r\n\t\t\tpageSize: this.page.pageSize,\r\n\t\t};\r\n\t\tthis.loanRulesService\r\n\t\t\t.getListByLoanTypeId(params, this.loanTypeId)\r\n\t\t\t.subscribe((res: IResponseList<ILoanRuleModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tres.data.map((ele) => {\r\n\t\t\t\t\t\tele.jobTitle = this.msgTranslate(\r\n\t\t\t\t\t\t\tele.core_Job_Title.ar_Name,\r\n\t\t\t\t\t\t\tele.core_Job_Title.en_Name\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tele.payment = this.msgTranslate(ele.pay_Payment.ar_Name, ele.pay_Payment.en_Name);\r\n\t\t\t\t\t\tele.variable = this.msgTranslate(ele.pay_Variable.arName, ele.pay_Variable.name);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t\tthis.page.length = res.meta.totalItemCount;\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\t// console.log(this.form.value);\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tif (!this.form.value.variablePercantage && !this.form.value.monthlyInterval) {\r\n\t\t\t\tthis.warning(\"variablePercentageAndMonthlyIntervalMsg\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst model: ILoanRuleRequest = {\r\n\t\t\t\tloneTypeId: this.loanTypeId,\r\n\t\t\t\t// id: this.form.value.id,\r\n\t\t\t\t// jobTitleId: this.form.value.jobTitleId,\r\n\t\t\t\tjobTitleIdLst: this.form.value.jobTitleId,\r\n\t\t\t\tpaymentId: this.form.value.paymentId,\r\n\t\t\t\tvariableId: this.form.value.variableId,\r\n\t\t\t\tvariablePercantage: this.form.value.variablePercantage,\r\n\t\t\t\tmonthlyInterval: this.form.value.monthlyInterval,\r\n\t\t\t};\r\n\r\n\t\t\tthis.create(model);\r\n\t\t} // else this.toastr.error(\"General.formNotValid\");\r\n\t}\r\n\r\n\tcreate(model: ILoanRuleRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.loanRulesService.create(model).subscribe((res: IResponse<ILoanRuleModel>) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getList(this.lastPage, this.page.pageSize);\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tonDelete(loanRule: ILoanRuleModel): void {\r\n\t\tlet msg = this.msgTranslate(`${loanRule.jobTitle} - ${loanRule.variable}`);\r\n\t\tthis.deleateDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(loanRule);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(loanRule: ILoanRuleModel) {\r\n\t\tthis.showLoading();\r\n\t\tthis.loanRulesService.Delete(loanRule.id).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tif (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n\t\t\t\t\t// if last item in list: get previous page\r\n\t\t\t\t\tthis.getList(this.prevPage, this.page.pageSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not last item in list: get current page\r\n\t\t\t\t\tthis.getList(this.currentPage, this.page.pageSize);\r\n\t\t\t\t}\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tclearForm() {\r\n\t\tthis.form.reset(/* { id: 0 } */);\r\n\t\tthis.submitted = false;\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title title=\"loanRules\"> </page-title>\r\n\r\n        <app-back-btn\r\n          url=\"/payroll-setup/{{ moduleId }}/loans/loan-types\"\r\n          [params]=\"pageParams\"\r\n        ></app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12 mbottom-10\">\r\n                  <app-job-title-dropdown\r\n                    [control]=\"formCtrls.jobTitleId\"\r\n                    [submitted]=\"submitted\"\r\n                    [multi]=\"true\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-job-title-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-payment-dropdown\r\n                    [control]=\"formCtrls.paymentId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-payment-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-variable-by-payment-dropdown\r\n                    [control]=\"formCtrls.variableId\"\r\n                    [paymentControl]=\"formCtrls.paymentId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-variable-by-payment-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.variablePercantage\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"variablePercantage\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.monthlyInterval\"\r\n                    [submitted]=\"submitted\"\r\n                    type=\"number\"\r\n                    label=\"monthlyInterval\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n\t\t\t\t\t[isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IPaymentTypeModel, IPaymentTypeRequest } from \"app/payroll-setup/models/payment-types\";\r\nimport { PaymentTypesService } from \"app/payroll-setup/services/payment-types.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n\tselector: \"app-payment-types\",\r\n\ttemplateUrl: \"./payment-types.component.html\",\r\n\tstyleUrls: [\"./payment-types.component.scss\"],\r\n})\r\nexport class PaymentTypesComponent extends AppHelpers implements OnInit {\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\tmandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_NAme\", \"actions\"];\r\n\tisLoaded: boolean = false;\r\n\toptionalColomns: string[] = [];\r\n\r\n\tdataSource: MatTableDataSource<IPaymentTypeModel>;\r\n\r\n\tconstructor(private paymentTypesService: PaymentTypesService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tid: [0, { nonNullable: true }],\r\n\t\t\tar_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n\t\t\ten_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n\t\t});\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId() {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n\t}\r\n\r\n\tgetList(page: number, pageSize?: number) {\r\n\t\tthis.page.pageIndex = page;\r\n\t\tif (pageSize) this.page.pageSize = pageSize;\r\n\t\tlet params: IPageParams = {\r\n\t\t\tPageNumber: page,\r\n\t\t\tpageSize: this.page.pageSize,\r\n\t\t};\r\n\t\tthis.paymentTypesService\r\n\t\t\t.getList(params)\r\n\t\t\t.subscribe((res: IResponseList<IPaymentTypeModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t\tthis.page.length = res.meta.totalItemCount;\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\t// console.log(this.form.value);\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst model: IPaymentTypeRequest = {\r\n\t\t\t\tID: this.form.value.id,\r\n\t\t\t\tAr_Name: this.form.value.ar_name,\r\n\t\t\t\tEn_Name: this.form.value.en_name,\r\n\t\t\t};\r\n\r\n\t\t\tmodel.ID == 0 ? this.create(model) : this.update(model);\r\n\t\t} // else this.toastr.error(\"General.formNotValid\");\r\n\t}\r\n\r\n\tcreate(model: IPaymentTypeRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.paymentTypesService.create(model).subscribe((res: IResponse<IPaymentTypeModel>) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.getList(this.lastPage, this.page.pageSize);\r\n\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(model: IPaymentTypeRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.paymentTypesService.update(model).subscribe((res: IResponse<IPaymentTypeModel>) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.getList(this.currentPage, this.page.pageSize); // current page after update\r\n\t\t\t\tthis.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tpaymentTypeToEdit(paymentType: IPaymentTypeModel) {\r\n\t\tthis.form.patchValue(paymentType);\r\n\t\tthis.formCtrls.ar_name.setValue(paymentType.ar_NAme);\r\n\t\tthis.formCtrls.en_name.setValue(paymentType.en_Name);\r\n\t\t// console.log(this.form.value);\r\n\t}\r\n\r\n\tonDelete(paymentType: IPaymentTypeModel): void {\r\n\t\tlet msg = this.msgTranslate(paymentType.ar_NAme, paymentType.en_Name);\r\n\t\tthis.deleateDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(paymentType);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(paymentType: IPaymentTypeModel) {\r\n\t\tthis.showLoading();\r\n\t\tthis.paymentTypesService.Delete(paymentType.id).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tif (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n\t\t\t\t\t// if last item in list: get previous page\r\n\t\t\t\t\tthis.getList(this.prevPage, this.page.pageSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not last item in list: get current page\r\n\t\t\t\t\tthis.getList(this.currentPage, this.page.pageSize);\r\n\t\t\t\t}\r\n\t\t\t\tif (paymentType.id == this.formCtrls.id.value) this.clearForm();\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tclearForm() {\r\n\t\tthis.form.reset({ id: 0 });\r\n\t\tthis.submitted = false;\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"paymentTypes\"\r\n          editTitle=\"editPaymentType\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n\t\t\t\t<submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\"> </submit-btn>\r\n\t\t\t\t<reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"> </reset-form-btn>\r\n\t\t\t</mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n\t\t\t\t\t[isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (editRow)=\"paymentTypeToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  IPayrollElementModel,\r\n  IPayrollElementRequest,\r\n} from \"app/payroll-setup/models/payroll-elements\";\r\nimport { PayrollElementsService } from \"app/payroll-setup/services/payroll-elements.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-add-payroll-element\",\r\n  templateUrl: \"./add-payroll-element.component.html\",\r\n  styleUrls: [\"./add-payroll-element.component.scss\"],\r\n})\r\nexport class AddPayrollElementComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  // payrollElement: IPayrollElementModel;\r\n  payrollElementId: number;\r\n\r\n  constructor(private payrollElementsService: PayrollElementsService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.payrollElementId = Number(params.get(\"payrollElementId\")) ?? 0;\r\n      // if (this.payrollElementId > 0 && this.CheckNoBusinessOrCompany())\r\n      //   this.getById();\r\n    });\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      variableCode: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          CustomValidator.whiteSpace,\r\n          CustomValidator.noSpace,\r\n          Validators.pattern(Constants.variableCode_pattern),\r\n        ],\r\n      ],\r\n      element_Group_ID: [null, [Validators.required]],\r\n      display_In_Result: [null],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    // this.payrollElement = null;\r\n    if (this.payrollElementId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getById();\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getById() {\r\n    this.showLoading();\r\n    this.payrollElementsService\r\n      .getById(this.payrollElementId)\r\n      .subscribe((res: IResponse<IPayrollElementModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // this.payrollElement = res.data[0];\r\n          this.payrollElementToEdit(res.data[0]);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  payrollElementToEdit(payrollElement: IPayrollElementModel) {\r\n    this.form.patchValue(payrollElement);\r\n    this.formCtrls.en_name.setValue(payrollElement.name);\r\n    this.formCtrls.variableCode.setValue(\r\n      payrollElement.paY_Element_Variable[0].pay_Variable.code\r\n    );\r\n    this.formCtrls.display_In_Result.setValue(\r\n      payrollElement.paY_Element_Variable[0].pay_Variable.display_In_Result\r\n    );\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPayrollElementRequest = {\r\n        PAY_Element: {\r\n          ID: this.form.value.id,\r\n          ar_Name: this.form.value.ar_Name,\r\n          name: this.form.value.en_name,\r\n          element_Group_ID: this.form.value.element_Group_ID,\r\n        },\r\n        variableCode: this.form.value.variableCode.trim(),\r\n        display_In_Result: this.form.value.display_In_Result ?? false,\r\n      };\r\n\r\n      model.PAY_Element.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IPayrollElementRequest) {\r\n    this.showLoading();\r\n    this.payrollElementsService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IPayrollElementModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          // this.clearForm();\r\n          this.payrollElementId = res.data.id;\r\n          this.formCtrls.id.setValue(this.payrollElementId);\r\n          let url = `/payroll-setup/${this.moduleId}/payroll-elements/edit/${this.payrollElementId}`;\r\n          this.navigateTo(url);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.payrollElement = res.data;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IPayrollElementRequest) {\r\n    this.showLoading();\r\n    this.payrollElementsService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IPayrollElementModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.payrollElement = res.data;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    /* if (this.payrollElementId == 0) */\r\n    this.form.reset({ id: 0 });\r\n    // else this.payrollElementToEdit();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"payrollElements\"\r\n          editTitle=\"editPayrollElement\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- add new btn -->\r\n        <app-add-new-btn\r\n          *ngIf=\"formCtrls.id.value > 0\"\r\n          url=\"/payroll-setup/{{ moduleId }}/payroll-elements/add\"\r\n          [params]=\"parantParam\"\r\n        >\r\n        </app-add-new-btn>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          url=\"/payroll-setup/{{ moduleId }}/payroll-elements/index\"\r\n          [params]=\"pageParams\"\r\n        ></app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.variableCode\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"variableCode\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-element-groups-dropdown\r\n                    [control]=\"formCtrls.element_Group_ID\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-element-groups-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12 ptop-15 pbottom-15\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.display_In_Result\"\r\n                    label=\"display_In_Result\"\r\n                    color=\"primary\"\r\n                    class=\"mx-2\"\r\n                  ></app-check-box>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-payroll-element-users [payrollElementId]=\"payrollElementId\">\r\n      </app-payroll-element-users>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n\tIUserDeleteParams,\r\n\tIPayrollElementUserModel,\r\n\tIPayrollElementUserRequest,\r\n} from \"app/payroll-setup/models/payroll-elements\";\r\nimport { PayrollElementsService } from \"app/payroll-setup/services/payroll-elements.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n\tselector: \"app-payroll-element-users\",\r\n\ttemplateUrl: \"./payroll-element-users.component.html\",\r\n\tstyleUrls: [\"./payroll-element-users.component.scss\"],\r\n})\r\nexport class PayrollElementUsersComponent extends AppHelpers implements OnInit {\r\n\t@Input() payrollElementId: number;\r\n\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\r\n\tmandatoryColomns: string[] = [\r\n\t\t\"Ser\",\r\n\t\t// \"id\",\r\n\t\t\"name\",\r\n\t\t\"dateFrom\",\r\n\t\t\"dateTo\",\r\n\t\t\"actions\",\r\n\t];\r\n\tisLoaded: boolean = false;\r\n\toptionalColomns: string[] = [];\r\n\r\n\tdataSource: MatTableDataSource<IPayrollElementUserModel>;\r\n\r\n\tconstructor(private payrollElementsService: PayrollElementsService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.payrollElementId && this.CheckNoBusinessOrCompany()) this.getAll();\r\n\r\n\t\tthis.form = this.fb.group(\r\n\t\t\t{\r\n\t\t\t\tUserID: [null, [Validators.required]],\r\n\t\t\t\tDateFrom: [null, [Validators.required]],\r\n\t\t\t\tDateTo: [null, [Validators.required]],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalidator: CustomValidator.compareDates(\"DateFrom\", \"DateTo\"),\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges): void {\r\n\t\t// if (changes.payrollElementId.currentValue > 0) this.getAll();\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.payrollElementId && this.checkNoBusinessOrCompany()) this.getAll();\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\tthis.payrollElementsService\r\n\t\t\t.getAllUsersByPayrollElement(this.payrollElementId)\r\n\t\t\t.subscribe((res: IResponse<IPayrollElementUserModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tres.data.map((user: IPayrollElementUserModel) => {\r\n\t\t\t\t\t\tuser.dateFrom = HelpersFunctions.mapDate(user.dateFrom);\r\n\t\t\t\t\t\tuser.dateTo = HelpersFunctions.mapDate(user.dateTo);\r\n\t\t\t\t\t\tuser.name = user.uM_Users.name;\r\n\t\t\t\t\t\tuser.id = user.userID;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\t// console.log(this.form.value);\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst model: IPayrollElementUserRequest[] = [\r\n\t\t\t\t{\r\n\t\t\t\t\tElementID: this.payrollElementId,\r\n\t\t\t\t\tUserID: this.form.value.UserID,\r\n\t\t\t\t\tDateFrom: HelpersFunctions.mapDateReverse(this.form.value.DateFrom),\r\n\t\t\t\t\tDateTo: HelpersFunctions.mapDateReverse(this.form.value.DateTo),\r\n\t\t\t\t},\r\n\t\t\t];\r\n\r\n\t\t\tthis.create(model);\r\n\t\t} // else this.toastr.error(\"General.formNotValid\");\r\n\t}\r\n\r\n\tcreate(model: IPayrollElementUserRequest[]) {\r\n\t\tthis.showLoading();\r\n\t\tthis.payrollElementsService\r\n\t\t\t.createUser(model)\r\n\t\t\t.subscribe((res: IResponse<IPayrollElementUserModel>) => {\r\n\t\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.clearForm();\r\n\t\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\t\tthis.getAll();\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t\tthis.hideLoading();\r\n\t\t\t});\r\n\t}\r\n\r\n\tonDelete(payrollElementUser: IPayrollElementUserModel): void {\r\n\t\tlet msg = this.msgTranslate(payrollElementUser.uM_Users.name);\r\n\t\tthis.deleateDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(payrollElementUser);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(payrollElementUser: IPayrollElementUserModel) {\r\n\t\tlet params: IUserDeleteParams = {\r\n\t\t\telementid: this.payrollElementId,\r\n\t\t\tuserid: payrollElementUser.uM_Users.id,\r\n\t\t\tfrom: this.resetDateFormat(payrollElementUser.dateFrom),\r\n\t\t\tto: this.resetDateFormat(payrollElementUser.dateTo),\r\n\t\t};\r\n\r\n\t\tthis.showLoading();\r\n\t\tthis.payrollElementsService.DeleteUser(params).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getAll();\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tclearForm() {\r\n\t\tthis.form.reset();\r\n\t\tthis.submitted = false;\r\n\t}\r\n\r\n\tresetDateFormat(date: string) {\r\n\t\t// return date as exist in backend\r\n\t\treturn date.split(\"-\").reverse().join(\"-\").concat(\"T00:00:00\");\r\n\t}\r\n}\r\n","<mat-card-title class=\"pt-2\">\r\n  <page-title title=\"users\"> </page-title>\r\n</mat-card-title>\r\n\r\n<mat-card-content class=\"container-fluid mb-0\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-11 col-md-10\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-users-dropdown\r\n              [control]=\"formCtrls.UserID\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n            ></app-users-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.DateFrom\"\r\n              [submitted]=\"submitted\"\r\n              label=\"dateFrom\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.DateTo\"\r\n              [submitted]=\"submitted\"\r\n              label=\"dateTo\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- actions -->\r\n    <div class=\"col-lg-1 col-md-2 p-0\">\r\n      <submit-btn\r\n        (onClick)=\"submit()\"\r\n        [disabled]=\"!payrollElementId\"\r\n        class=\"mtop-3 btn-sm float-right my-0\"\r\n      >\r\n      </submit-btn>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<ng-container *ngIf=\"payrollElementId\">\r\n  <!-- <mat-divider></mat-divider> -->\r\n\r\n  <app-material-table\r\n\t\t\t\t\t[isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [actions]=\"rowFunctions\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    [showPaginator]=\"false\"\r\n    [showFilter]=\"false\"\r\n  >\r\n  </app-material-table>\r\n</ng-container>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IPayrollElementModel } from \"app/payroll-setup/models/payroll-elements\";\r\nimport { PayrollElementsService } from \"app/payroll-setup/services/payroll-elements.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"app-payroll-elements-index\",\r\n\ttemplateUrl: \"./payroll-elements-index.component.html\",\r\n\tstyleUrls: [\"./payroll-elements-index.component.scss\"],\r\n})\r\nexport class PayrollElementsIndexComponent extends AppHelpers implements OnInit {\r\n\tmandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n\toptionalColomns: string[] = [\"variableCode\", \"display_In_Result\"];\r\n\r\n\tdataSource: MatTableDataSource<IPayrollElementModel>;\r\n\tisLoaded: boolean = false;\r\n\tconstructor(private payrollElementsService: PayrollElementsService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.checkNoBusinessOrCompany())\r\n\t\t\tthis.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.currentPage);\r\n\t}\r\n\r\n\tgetList(page: number, pageSize?: number) {\r\n\t\tthis.removePageParams();\r\n\t\tthis.page.pageIndex = page;\r\n\t\tif (pageSize) this.page.pageSize = pageSize;\r\n\t\tlet params: IPageParams = {\r\n\t\t\tPageNumber: this.page.pageIndex,\r\n\t\t\tpageSize: this.page.pageSize,\r\n\t\t};\r\n\t\tthis.payrollElementsService\r\n\t\t\t.getList(params)\r\n\t\t\t.subscribe((res: IResponseList<IPayrollElementModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tif (res.data.length == 0 && page > 1) {\r\n\t\t\t\t\t\tthis.getList(this.prevPage);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tres.data.map((res) => {\r\n\t\t\t\t\t\tres.en_Name = res.name;\r\n\t\t\t\t\t\tres.variableCode = res.paY_Element_Variable[0].pay_Variable.code;\r\n\t\t\t\t\t\tres.display_In_Result = res.paY_Element_Variable[0].pay_Variable.display_In_Result;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t\tthis.page.length = res.meta.totalItemCount;\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tonDelete(payrollElement: IPayrollElementModel): void {\r\n\t\tlet msg = this.msgTranslate(payrollElement.ar_Name, payrollElement.en_Name);\r\n\t\tthis.deleateDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(payrollElement);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(payrollElement: IPayrollElementModel) {\r\n\t\tthis.showLoading();\r\n\t\tthis.payrollElementsService.Delete(payrollElement.id).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tif (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n\t\t\t\t\t// if last item in list: get previous page\r\n\t\t\t\t\tthis.getList(this.prevPage, this.page.pageSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not last item in list: get current page\r\n\t\t\t\t\tthis.getList(this.currentPage, this.page.pageSize);\r\n\t\t\t\t}\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n\t<div class=\"col-12\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-title>\r\n\t\t\t\t<page-title title=\"payrollElements\" [globalFunctions]=\"globalFunctions\"> </page-title>\r\n\t\t\t</mat-card-title>\r\n\r\n\t\t\t<mat-divider></mat-divider>\r\n\r\n\t\t\t<app-material-table\r\n\t\t\t\t\t[isLoaded]=\"isLoaded\"\r\n\t\t\t\t[dataSource]=\"dataSource\"\r\n\t\t\t\t[mandatoryColomns]=\"mandatoryColomns\"\r\n\t\t\t\t[optionalColomns]=\"optionalColomns\"\r\n\t\t\t\t[page]=\"page\"\r\n\t\t\t\t(onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n\t\t\t\t[actions]=\"rowFunctions\"\r\n\t\t\t\t(deleteRow)=\"onDelete($event)\"\r\n\t\t\t>\r\n\t\t\t</app-material-table>\r\n\t\t</mat-card>\r\n\t</div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { PayrollElementsIndexComponent } from \"./components/payroll-elements/payroll-elements-index/payroll-elements-index.component\";\r\nimport { AddPayrollElementComponent } from \"./components/payroll-elements/add-payroll-element/add-payroll-element.component\";\r\nimport { PaymentTypesComponent } from \"./components/payment-types/payment-types.component\";\r\nimport { LoanRulesComponent } from \"./components/loan types/loan-rules/loan-rules.component\";\r\nimport { LoanTypesComponent } from \"./components/loan types/loan-types/loan-types.component\";\r\nimport { pathMatch } from \"app/shared/enums/route-path-match.enum\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"payroll-elements\",\r\n\t\tdata: { view: ViewsManager.payroll_elements },\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tredirectTo: \"index\",\r\n\t\t\t\tpathMatch: pathMatch.full,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"index\",\r\n\t\t\t\tcomponent: PayrollElementsIndexComponent,\r\n\t\t\t\tdata: { view: ViewsManager.payroll_elements_index },\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"add\",\r\n\t\t\t\tcomponent: AddPayrollElementComponent,\r\n\t\t\t\tdata: { view: ViewsManager.add_payroll_elements },\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit/:payrollElementId\",\r\n\t\t\t\tcomponent: AddPayrollElementComponent,\r\n\t\t\t\tdata: { view: ViewsManager.add_payroll_elements },\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tpath: \"payment-types\",\r\n\t\tcomponent: PaymentTypesComponent,\r\n\t\tdata: { view: ViewsManager.payment_types },\r\n\t},\r\n\t{\r\n\t\tpath: \"loans\",\r\n\t\tdata: { view: ViewsManager.loans },\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tredirectTo: \"loan-types\",\r\n\t\t\t\tpathMatch: pathMatch.full,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"loan-types\",\r\n\t\t\t\tcomponent: LoanTypesComponent,\r\n\t\t\t\tdata: { view: ViewsManager.loan_types },\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"loan-rules/:loanTypeId\",\r\n\t\t\t\tcomponent: LoanRulesComponent,\r\n\t\t\t\tdata: { view: ViewsManager.loan_rules },\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class PayrollSetupRoutingModule {}\r\n","import { AddPayrollElementComponent } from \"./components/payroll-elements/add-payroll-element/add-payroll-element.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { PayrollSetupRoutingModule } from \"./payroll-setup-routing.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { PayrollElementsIndexComponent } from \"./components/payroll-elements/payroll-elements-index/payroll-elements-index.component\";\r\nimport { PayrollElementUsersComponent } from \"./components/payroll-elements/payroll-element-users/payroll-element-users.component\";\r\nimport { PaymentTypesComponent } from \"./components/payment-types/payment-types.component\";\r\nimport { LoanTypesComponent } from \"./components/loan types/loan-types/loan-types.component\";\r\nimport { LoanRulesComponent } from \"./components/loan types/loan-rules/loan-rules.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PayrollElementsIndexComponent,\r\n    AddPayrollElementComponent,\r\n    PayrollElementUsersComponent,\r\n    PaymentTypesComponent,\r\n    LoanTypesComponent,\r\n    LoanRulesComponent,\r\n  ],\r\n  imports: [CommonModule, PayrollSetupRoutingModule, SharedModule],\r\n})\r\nexport class PayrollSetupModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ILoanRuleModel, ILoanRuleRequest } from \"../models/loan-rules\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LoanRulesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ILoanRuleRequest) {\r\n    return this.post<IResponse<ILoanRuleModel>>(\"LoanRules/Create\", data);\r\n  }\r\n\r\n  getListByLoanTypeId(params: IPageParams, loanTypeId: number) {\r\n    return this.get<IResponseList<ILoanRuleModel[]>>(\"LoanRules/GetList\", {\r\n      params: {\r\n        ...params,\r\n        $filter: `loneTypeId eq ${loanTypeId}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ILoanRuleModel[]>>(\"LoanRules/GetAll\");\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"LoanRules/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IPaymentTypeModel,\r\n  IPaymentTypeRequest,\r\n} from \"../models/payment-types\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PaymentTypesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IPaymentTypeRequest) {\r\n    return this.post<IResponse<IPaymentTypeModel>>(\r\n      \"PaymentTypeSetup/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IPaymentTypeRequest) {\r\n    return this.post<IResponse<IPaymentTypeModel>>(\r\n      \"PaymentTypeSetup/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IPaymentTypeModel[]>>(\r\n      \"PaymentTypeSetup/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IPaymentTypeModel[]>>(\"PaymentTypeSetup/GetAll\");\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"PaymentTypeSetup/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IPayrollElementModel,\r\n  IPayrollElementRequest,\r\n  IPayrollElementUserModel,\r\n  IPayrollElementUserRequest,\r\n  IUserDeleteParams,\r\n} from \"../models/payroll-elements\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PayrollElementsService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IPayrollElementRequest) {\r\n    return this.post<IResponse<IPayrollElementModel>>(\r\n      \"PayrollElementSetup/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IPayrollElementRequest) {\r\n    return this.post<IResponse<IPayrollElementModel>>(\r\n      \"PayrollElementSetup/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IPayrollElementModel[]>>(\r\n      \"PayrollElementSetup/GetList\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $expand: `${db.PAY_Element_Variable},${db.PAY_Element_Variable}/${db.PAY_Variable}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IPayrollElementModel[]>>(\r\n      \"PayrollElementSetup/GetAll\"\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<IPayrollElementModel[]>>(\r\n      \"PayrollElementSetup/GetAll\",\r\n      {\r\n        params: {\r\n          $expand: `${db.PAY_Element_Variable},${db.PAY_Element_Variable}/${db.PAY_Variable}`,\r\n          $filter: `id eq ${id}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"PayrollElementSetup/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  ////////// payroll element users\r\n\r\n  createUser(data: IPayrollElementUserRequest[]) {\r\n    return this.post<IResponse<IPayrollElementUserModel>>(\r\n      \"PayrollElementSetup/Create_Element_Users_Details\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllUsersByPayrollElement(payrollElementId: number) {\r\n    return this.get<IResponse<IPayrollElementUserModel[]>>(\r\n      \"PayrollElementSetup/GetAll_Element_Users_Details\",\r\n      {\r\n        params: { Element_ID: payrollElementId },\r\n      }\r\n    );\r\n  }\r\n\r\n  DeleteUser(params: IUserDeleteParams) {\r\n    return this.delete<IResponse>(\r\n      \"PayrollElementSetup/Delete_Element_Users_Details\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}