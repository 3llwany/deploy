{"version":3,"file":"src_app_dashboard_pages_setup_financial-setup_financial-setup_module_ts.js","mappings":"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","sources":["./src/app/dashboard/pages/setup/financial-setup/academic-year/academic-expenses-index/academic-expenses-index.component.ts","./src/app/dashboard/pages/setup/financial-setup/academic-year/academic-expenses-index/academic-expenses-index.component.html","./src/app/dashboard/pages/setup/financial-setup/academic-year/academic-year-expenses-details/academic-year-expenses-details.component.ts","./src/app/dashboard/pages/setup/financial-setup/academic-year/academic-year-expenses-details/academic-year-expenses-details.component.html","./src/app/dashboard/pages/setup/financial-setup/academic-year/academic-year-expenses/academic-year-expenses.component.ts","./src/app/dashboard/pages/setup/financial-setup/academic-year/academic-year-expenses/academic-year-expenses.component.html","./src/app/dashboard/pages/setup/financial-setup/academic-year/bus-line-expenses/bus-line-expenses.component.ts","./src/app/dashboard/pages/setup/financial-setup/academic-year/bus-line-expenses/bus-line-expenses.component.html","./src/app/dashboard/pages/setup/financial-setup/expense-elements/expense-elements.component.ts","./src/app/dashboard/pages/setup/financial-setup/expense-elements/expense-elements.component.html","./src/app/dashboard/pages/setup/financial-setup/external-organization-type/external-organization-type.component.ts","./src/app/dashboard/pages/setup/financial-setup/external-organization-type/external-organization-type.component.html","./src/app/dashboard/pages/setup/financial-setup/financial-item/financial-item.component.ts","./src/app/dashboard/pages/setup/financial-setup/financial-item/financial-item.component.html","./src/app/dashboard/pages/setup/financial-setup/financial-setup-routing.module.ts","./src/app/dashboard/pages/setup/financial-setup/financial-setup.module.ts","./src/app/dashboard/pages/setup/financial-setup/installment-types/installment-types.component.ts","./src/app/dashboard/pages/setup/financial-setup/installment-types/installment-types.component.html","./src/app/dashboard/pages/setup/financial-setup/payment-methods/payment-methods.component.ts","./src/app/dashboard/pages/setup/financial-setup/payment-methods/payment-methods.component.html","./src/app/dashboard/pages/setup/financial-setup/salary-item/salary-item.component.ts","./src/app/dashboard/pages/setup/financial-setup/salary-item/salary-item.component.html","./src/app/dashboard/pages/setup/financial-setup/suppliers-and-customers/suppliers-and-customers.component.ts","./src/app/dashboard/pages/setup/financial-setup/suppliers-and-customers/suppliers-and-customers.component.html","./src/app/dashboard/services/setup/financial-setup/academic-year-expenses.service.ts","./src/app/dashboard/services/setup/financial-setup/ademic-year-expenses-details.service.ts","./src/app/dashboard/services/setup/financial-setup/bus-line-expenses.service.ts","./src/app/dashboard/services/setup/financial-setup/expense-elements.service.ts","./src/app/dashboard/services/setup/financial-setup/external-organization-type.service.ts","./src/app/dashboard/services/setup/financial-setup/financial-item.service.ts","./src/app/dashboard/services/setup/financial-setup/installment-types.service.ts","./src/app/dashboard/services/setup/general-setup/bus-line.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-academic-expenses-index',\r\n  templateUrl: './academic-expenses-index.component.html',\r\n  styleUrls: ['./academic-expenses-index.component.scss']\r\n})\r\nexport class AcademicExpensesIndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-tab-group>\r\n  <mat-tab label=\"{{ 'Financial.YearExpenses' | translate }}\"\r\n    ><app-academic-year-expenses></app-academic-year-expenses\r\n  ></mat-tab>\r\n  <mat-tab label=\"{{ 'Financial.BusExpenses' | translate }}\"\r\n    ><app-bus-line-expenses></app-bus-line-expenses\r\n  ></mat-tab>\r\n</mat-tab-group>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { AdemicYearExpensesDetailsService } from \"app/dashboard/services/setup/financial-setup/ademic-year-expenses-details.service\";\r\nimport { ExpenseElementsService } from \"app/dashboard/services/setup/financial-setup/expense-elements.service\";\r\nimport {\r\n  IAddEditYearExpenseDetails,\r\n  IYearExpenseDetailList,\r\n  IYearExpenseDetails,\r\n} from \"app/dashboard/models/setup/financial-setup/ademic-year-expenses-detail\";\r\nimport { IExpenseElementsVM } from \"app/dashboard/models/setup/financial-setup/expense-elements\";\r\n@Component({\r\n  selector: \"app-academic-year-expenses-details\",\r\n  templateUrl: \"./academic-year-expenses-details.component.html\",\r\n  styleUrls: [\"./academic-year-expenses-details.component.scss\"],\r\n})\r\nexport class AcademicYearExpensesDetailsComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  expendsList: IExpenseElementsVM[];\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  curLang: string;\r\n  displayColumns: string[] = [\"#\", \"Name\", \"Amount\", \"option\"];\r\n  dataSource: MatTableDataSource<IYearExpenseDetails>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private YearExpensesDetailService: AdemicYearExpensesDetailsService,\r\n    private expenseElementsService: ExpenseElementsService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnYearExpensesDetails(1);\r\n    this.getAllExpenseElements();\r\n    this.myForm = this.fb.group({\r\n      ID: [0],\r\n      Amount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      ExpenseElementID: [\"\", Validators.required],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnYearExpensesDetails(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editYearExpensesDetail(YearExpensesDetailData: IYearExpenseDetails) {\r\n    this.myForm.patchValue(YearExpensesDetailData);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  // Start: Return All  Expense Elements\r\n  getAllExpenseElements() {\r\n    this.expenseElementsService\r\n      .getAllExpenseElementsDropdown(this.EduCompId)\r\n      .subscribe((res: IExpenseElementsVM[]) => {\r\n        this.expendsList = res;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Year Expenses Details\r\n  returnYearExpensesDetails(page: number) {\r\n    let res:IYearExpenseDetails[] = [\r\n      {\r\n        ID:1,\r\n        Amount:2,\r\n        ExpenseElement_Ar_Name: \"jj\",\r\n        ExpenseElement_En_Name: \"n\",\r\n      },\r\n    ];\r\n    this.dataSource = new MatTableDataSource(res);\r\n\r\n    this.YearExpensesDetailService.getYearExpenseDetails(page).subscribe(\r\n      (res: IYearExpenseDetailList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.YearExpenseDetailList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let Data: IAddEditYearExpenseDetails = {\r\n      ID: this.FormCtrls.id.value,\r\n      ExpenseElementID: this.FormCtrls.ExpenseElementID.value,\r\n      Amount: this.FormCtrls.Amount.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      Data.ID == 0\r\n        ? this.addYearExpensesDetail(Data)\r\n        : this.updateYearExpensesDetail(Data);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Start: Add Year Expenses Detail\r\n  addYearExpensesDetail(YearExpensesDetailData: IAddEditYearExpenseDetails) {\r\n    this.YearExpensesDetailService.addYearExpenseDetails(\r\n      YearExpensesDetailData\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.spinner.show();\r\n        this.dataSource.data.push(res);\r\n        this.submitted = true;\r\n        this.myForm.reset();\r\n        this.toastr.success(\"General.AddSuccessfully\");\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Start: Update Year Expenses Detail\r\n  updateYearExpensesDetail(YearExpensesDetailData: IAddEditYearExpenseDetails) {\r\n    this.YearExpensesDetailService.updateYearExpenseDetails(\r\n      YearExpensesDetailData\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.spinner.show();\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.ID == YearExpensesDetailData.ID\r\n        );\r\n        this.dataSource.data[i] = res;\r\n        this.submitted = true;\r\n        this.myForm.reset();\r\n        this.FormCtrls.ID.setValue(0);\r\n        this.toastr.success(\"General.UpdateSuccessfully\");\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(YearExpensesDetailData: IYearExpenseDetails): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? YearExpensesDetailData.ExpenseElement_Ar_Name\r\n              : YearExpensesDetailData.ExpenseElement_En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteYearExpensesDetail(YearExpensesDetailData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Year Expenses Detail\r\n  deleteYearExpensesDetail(YearExpensesDetailData: IYearExpenseDetails) {\r\n    this.YearExpensesDetailService.deleteYearExpenseDetails(\r\n      YearExpensesDetailData.ID\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let index = this.dataSource.data.findIndex(\r\n          (e) => e == YearExpensesDetailData\r\n        );\r\n        this.dataSource.data.splice(index);\r\n\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.toastr.error(\"General.TosterErrorMessage\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row \">\r\n  <div class=\"col-12\">\r\n <a class=\"btn btn-primary mb-3 \" routerLink=\"../../year-expenses\">\r\n    <span>\r\n      {{ \"General.Back\" | translate }}\r\n    </span>\r\n  </a>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.ID.value == 0\r\n            ? \"Financial.AddYearExpenseDetail\"\r\n            : \"Financial.UpdateYearExpenseDetail\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.Expense\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"ExpenseElementID\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of expendsList\"\r\n                        [value]=\"ele.ID\"\r\n                      >\r\n                        {{\r\n                          curLang == \"ar\"\r\n                            ? ele.ExpenseElement_Ar_Name\r\n                            : ele.ExpenseElement_En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.ExpenseElementID.invalid &&\r\n                        (FormCtrls.ExpenseElementID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.ExpenseElementID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Amount\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Amount\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Amount.invalid &&\r\n                        (FormCtrls.Amount.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <!-- <span *ngIf=\"FormCtrls.Amount.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span> -->\r\n                      <span *ngIf=\"FormCtrls.Amount.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{\r\n            (this.FormCtrls.ID.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.YearExpensesDetail\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.ExpenseElement_Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Amout Column -->\r\n            <ng-container matColumnDef=\"Amount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Amount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Amount }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editYearExpensesDetail(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnYearExpensesDetails($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { IEducationYear } from \"app/dashboard/models/setup/educational-setup/education-year\";\r\nimport { IExpenseElementsVM } from \"app/dashboard/models/setup/financial-setup/expense-elements\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IAcademicYearExpensesListVM,\r\n  IAcademicYearExpensesVM,\r\n  IAddAcademicYearExpensesVM,\r\n} from \"app/dashboard/models/setup/financial-setup/academic-year-expenses\";\r\nimport { EducationYearService } from \"app/dashboard/services/setup/educational-setup/education-year.service\";\r\nimport { AcademicYearExpensesService } from \"app/dashboard/services/setup/financial-setup/academic-year-expenses.service\";\r\nimport { ExpenseElementsService } from \"app/dashboard/services/setup/financial-setup/expense-elements.service\";\r\nimport { InstallmentTypesService } from \"app/dashboard/services/setup/financial-setup/installment-types.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AcademicYearService } from \"app/dashboard/services/setup/educational-setup/academic-year.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { IAcademicYear } from \"app/dashboard/models/setup/educational-setup/academic-year\";\r\nimport { IInstallmentsVM } from \"app/dashboard/models/setup/financial-setup/installmentT-types\";\r\n\r\n@Component({\r\n  selector: \"app-academic-year-expenses\",\r\n  templateUrl: \"./academic-year-expenses.component.html\",\r\n  styleUrls: [\"./academic-year-expenses.component.scss\"],\r\n})\r\nexport class AcademicYearExpensesComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curLang: string;\r\n  EduCompId: number = 2;\r\n  functionId: number;\r\n  //rowFunctions:IRowFunctionVM[];\r\n  rowFunctions: any = [\r\n    { functionName: \"Update\" },\r\n    { functionName: \"Delete\" },\r\n    { functionName: \"Detail\" },\r\n  ];\r\n\r\n  AcademicYears: IAcademicYear[];\r\n  EducationYears: IEducationYear[];\r\n  InstallmentTypes: IInstallmentsVM[];\r\n  ExpenseElements: IExpenseElementsVM[];\r\n  itemCount: number;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"AcademicYear\",\r\n    \"EducationYear\",\r\n    // \"Installment\",\r\n    \"Expenses\",\r\n    \"Amount\",\r\n    //\"Min_Cash\",\r\n    \"IsMandatory\",\r\n\r\n    \"action\",\r\n  ];\r\n  dataSource: MatTableDataSource<IAcademicYearExpensesVM>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private toastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public yearExpensesService: AcademicYearExpensesService,\r\n    private educationYearService: EducationYearService,\r\n    private AcademicYearservice: AcademicYearService,\r\n    private installmentTypesService: InstallmentTypesService,\r\n    private expenseElementsService: ExpenseElementsService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getYearExpenses(1);\r\n    this.getAllExpenseElements();\r\n    this.getEducationalYears();\r\n    this.returnAllAcademicEduYear();\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      eduYearId: [\"\", [Validators.required]],\r\n      academicEduYearId: [\"\", [Validators.required]],\r\n      expanseElementId: [\"\", [Validators.required]],\r\n      //InstallmentTypeID: [\"\", [Validators.required]],\r\n      amount: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      //Min_Cash: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      isMandatory: [true, [Validators.required]],\r\n\r\n    });\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getYearExpenses(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getInstallmentTypes() {\r\n    this.spinner.show();\r\n    this.installmentTypesService\r\n      .getInstallmentTypesDropdown()\r\n      .subscribe((res: any) => {\r\n        this.InstallmentTypes = res;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllExpenseElements() {\r\n    this.expenseElementsService\r\n      .getAllExpenseElementsDropdown(this.EduCompId)\r\n      .subscribe((res: any) => {\r\n        this.ExpenseElements = res;\r\n      });\r\n  }\r\n\r\n  returnAllAcademicEduYear() {\r\n    this.AcademicYearservice.getYearsDropdown().subscribe((res: any) => {\r\n      if (res) {\r\n        this.AcademicYears = res.academicEduYearList;\r\n      }\r\n    });\r\n  }\r\n\r\n  getEducationalYears() {\r\n    this.educationYearService\r\n      .getEducationalYearDropdown()\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.EducationYears = res.eduYearList;\r\n          console.log(\"edu\", this.EducationYears);\r\n        }\r\n      });\r\n  }\r\n\r\n  getYearExpenses(page: number) {\r\n    this.yearExpensesService\r\n      .getYearExpenses(page, this.EduCompId)\r\n      .subscribe((res: IAcademicYearExpensesListVM) => {\r\n        this.dataSource = new MatTableDataSource(res.academicExpanseList);\r\n        this.itemCount = res.countItems;\r\n        console.log(\"dd\", res);\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let body = {} as IAddAcademicYearExpensesVM;\r\n    body.eduCompId = this.EduCompId;\r\n    body.id = this.FormCtrl.id?.value;\r\n    body.academicEduYearId = this.FormCtrl.academicEduYearId?.value;\r\n    body.eduYearId = this.FormCtrl.eduYearId?.value;\r\n    body.expanseElementId = this.FormCtrl.expanseElementId?.value;\r\n    //body.InstallmentTypeID = this.FormCtrl.InstallmentTypeID?.value;\r\n    body.amount = this.FormCtrl.amount?.value;\r\n    //body.Min_Cash = this.FormCtrl.Min_Cash?.value;\r\n    body.isMandatory = this.FormCtrl.isMandatory?.value;\r\n\r\n    if (this.myForm.valid) {\r\n      this.yearExpensesService\r\n        .addEditYearExpense(body)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.spinner.show();\r\n            if (body.id == 0) {\r\n              this.dataSource.data.unshift(res.academic_year_Expanse);\r\n              this.itemCount++;\r\n              this.toastrMsg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex((e) => e.id == body.id);\r\n              this.dataSource.data[i] = res.academic_year_Expanse;\r\n\r\n              this.toastrMsg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.FormCtrl.id.setValue(0);\r\n    this.FormCtrl.amount.setValue(null);\r\n    this.FormCtrl.Min_Cash.setValue(null);\r\n\r\n\r\n\r\n  }\r\n  openDeleateDialog(installment: IAcademicYearExpensesVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.datePipe.transform(installment.academicEduYearFrom) +\r\n            \" - \" +\r\n            this.datePipe.transform(installment.academicEduYearTo),\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteYearExpense(installment);\r\n      });\r\n  }\r\n\r\n  deleteYearExpense(installment: IAcademicYearExpensesVM) {\r\n    this.spinner.show();\r\n    this.yearExpensesService\r\n      .deleteYearExpense(installment.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == installment);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastrMsg.success(\"General.DeleteSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n  getYearExpenseToEdit(data: IAcademicYearExpensesVM) {\r\n    this.myForm.patchValue(data);\r\n    this.FormCtrl.eduYearId.setValue(data.eduYearId);\r\n    this.FormCtrl.academicEduYearId.setValue(data.academicEduYearId);\r\n    this.FormCtrl.expanseElementId.setValue(data.expanseElementId);\r\n       console.log(data.academicEduYearId);\r\n\r\n\r\n  }\r\n\r\n  getYearExpenseById(id: any) {\r\n    this.spinner.show();\r\n    this.yearExpensesService.getYearExpenseById(id).subscribe((res: any) => {\r\n      //  console.log(res)\r\n      if (res.Id != null) {\r\n        this.myForm.patchValue(res);\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrl.id.value == 0\r\n            ? \"Financial.AddYearExpense\"\r\n            : \"Financial.UpdateYearExpense\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <!-- Academic Year -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-academic-year-dropdown\r\n                    [control]=\"FormCtrl.academicEduYearId\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </app-academic-year-dropdown>\r\n                </div>\r\n\r\n                <!-- Educational Year -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"EducationalSetup.EducationalYear\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"eduYearId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let educationYear of EducationYears\"\r\n                        [value]=\"educationYear.id\"\r\n                      >\r\n                        {{\r\n                          curLang == \"ar\"\r\n                            ? educationYear?.ar_name\r\n                            : educationYear?.en_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.eduYearId?.invalid &&\r\n                        (FormCtrl.eduYearId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.eduYearId?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Installment Type -->\r\n                <!-- <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Financial.Installment\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"InstallmentTypeID\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let installment of InstallmentTypes\"\r\n                        [value]=\"installment.Id\"\r\n                      >\r\n                        {{ installment.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.InstallmentTypeID?.invalid &&\r\n                        (FormCtrl.InstallmentTypeID?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"FormCtrl.InstallmentTypeID?.errors?.required\"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- Expenses -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Financial.Expense\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"expanseElementId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let expense of ExpenseElements\"\r\n                        [value]=\"expense.id\"\r\n                      >\r\n                        {{\r\n                          curLang == \"ar\" ? expense.Ar_Name : expense.En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.expanseElementId?.invalid &&\r\n                        (FormCtrl.expanseElementId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.expanseElementId?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- Amount -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Amount\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"amount\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.amount?.invalid &&\r\n                        (FormCtrl.amount?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.amount?.errors?.required ||\r\n                          FormCtrl.amount?.errors?.minusNum\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-radio-group formControlName=\"IsMandatory\" class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        [checked]=\"this.FormCtrl.isMandatory?.value == true\"\r\n                        >{{ \"labels.IsMandatory\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        [checked]=\"this.FormCtrl.isMandatory?.value == false\"\r\n                      >\r\n                        {{ \"labels.isOptionaly\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- Min Cash -->\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.MinCash\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Min_Cash\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.Min_Cash?.invalid &&\r\n                        (FormCtrl.Min_Cash?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.Min_Cash?.errors?.required ||\r\n                          FormCtrl.Min_Cash?.errors?.minusNum\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n          *ngIf=\"FormCtrl.id.value == 0\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrl.id.value > 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrl.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.YearExpenses\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- id Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- AcademicYear Column -->\r\n            <ng-container matColumnDef=\"AcademicYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.AcademicYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.academicEduYearFrom | NewDate }}&nbsp;&nbsp;-&nbsp;\r\n                &nbsp;{{ ele?.academicEduYearTo | NewDate }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- EducationYear Column -->\r\n            <ng-container matColumnDef=\"EducationYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele?.eduYearArName : ele?.eduYearEnName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!--  Installment Column -->\r\n            <!-- <ng-container matColumnDef=\"Installment\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.Installment\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Min_Cash }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!--  Expenses Column -->\r\n            <ng-container matColumnDef=\"Expenses\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.Expense\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\"\r\n                    ? ele?.expanseElementArName\r\n                    : ele?.expanseElementEnName\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Amount Column -->\r\n            <ng-container matColumnDef=\"Amount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Amount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.amount }}\r\n              </td>\r\n            </ng-container>\r\n                        <!-- isOptionaly Column -->\r\n                        <ng-container matColumnDef=\"IsMandatory\">\r\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            {{ \"labels.OptionalyOrMandatory\" | translate }}\r\n                          </th>\r\n                          <td mat-cell *matCellDef=\"let ele\">\r\n                            <span>\r\n                              {{(ele.isMandatory?\"labels.IsMandatory\": \"labels.isOptionaly\" )| translate }}\r\n                            </span>\r\n\r\n                          </td>\r\n                        </ng-container>\r\n\r\n            <!-- Min_Cash Column -->\r\n            <!-- <ng-container matColumnDef=\"Min_Cash\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.MinCash\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.Min_Cash }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Update'\"\r\n                        (click)=\"getYearExpenseToEdit(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Detail'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"../year-expenses-details/{{ ele.id }}\"\r\n                      >\r\n                        <i class=\"fa fa-edit font-medium-3 mr-2\"></i>\r\n                        {{ \"labels.Details\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getYearExpenses($event.pageIndex + 1)\"\r\n            [length]=\"itemCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { EducationalGroupService } from \"app/dashboard/services/setup/general-setup/educational-group.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CityGetVM } from \"app/dashboard/models/setup/general-setup/location/city\";\r\nimport { GovernorateGetVM } from \"app/dashboard/models/setup/general-setup/location/governorate\";\r\nimport { AreaGetVM } from \"app/dashboard/models/setup/general-setup/location/area\";\r\nimport {\r\n  IAddEditBusLineExpenses,\r\n  IBusLineExpenses,\r\n  IBusLineExpensesList,\r\n} from \"app/dashboard/models/setup/financial-setup/bus-line-expenses\";\r\nimport { BusLineExpensesService } from \"app/dashboard/services/setup/financial-setup/bus-line-expenses.service\";\r\nimport { AreaService } from \"app/dashboard/services/setup/general-setup/location/area.service\";\r\nimport { CityService } from \"app/dashboard/services/setup/general-setup/location/city.service\";\r\nimport { GovernorateService } from \"app/dashboard/services/setup/general-setup/location/governorate.service\";\r\nimport { IBusLineDropDown } from \"app/dashboard/models/setup/general-setup/bus-line\";\r\nimport { BusLineService } from \"app/dashboard/services/setup/general-setup/bus-line.service\";\r\n@Component({\r\n  selector: \"app-bus-line-expenses\",\r\n  templateUrl: \"./bus-line-expenses.component.html\",\r\n  styleUrls: [\"./bus-line-expenses.component.scss\"],\r\n})\r\nexport class BusLineExpensesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  cityList: CityGetVM[];\r\n  areaList: AreaGetVM[];\r\n  governorateList: GovernorateGetVM[];\r\n  busLineList: IBusLineDropDown[];\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  //rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any = [{ functionName: \"Update\" }, { functionName: \"Delete\" }];\r\n  displayColumns: string[] = [\"#\", \"Name\", \"Amount\", \"option\"];\r\n\r\n  dataSource: MatTableDataSource<IBusLineExpenses>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private busLineExpensesService: BusLineExpensesService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private areaService: AreaService,\r\n    private busLineService: BusLineService,\r\n    private cityService: CityService,\r\n    private governorateService: GovernorateService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      busLineId: [\"\", [Validators.required]],\r\n      governorateID: [\"\", [Validators.required]],\r\n      cityID: [\"\", [Validators.required]],\r\n      AreaID: [null, [Validators.required]],\r\n      Amount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnAllBusLineExpensess(1);\r\n    //this.returnAllGovernorates();\r\n\r\n    this.FormCtrls.AreaID.valueChanges.subscribe((val)=>{\r\n      if(val>0)\r\n         this.getAllBuslineName();\r\n    })\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllBusLineExpensess(1);\r\n    });\r\n\r\n  }\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editBusLineExpenses(BusLineExpensesData: IBusLineExpenses) {\r\n    this.myForm.patchValue(BusLineExpensesData);\r\n    this.FormCtrls.cityID.setValue(BusLineExpensesData.cityID);\r\n    this.FormCtrls.AreaID.setValue(BusLineExpensesData.AreaID);\r\n    this.FormCtrls.busLineId.setValue(BusLineExpensesData.busLineId);\r\n\r\n\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.FormCtrls.id.setValue(0);\r\n    this.FormCtrls.Amount.setValue(\"\");\r\n\r\n    this.submitted = false;\r\n  }\r\n\r\n// Start: Return All busline Name\r\n\r\n  getAllBuslineName() {\r\n    this.busLineService\r\n      .getBusLinesDropDownByAreaId(this.FormCtrls.AreaID.value,this.EduCompId)\r\n      .subscribe((res: IBusLineDropDown[]) => {\r\n        this.busLineList = res;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Bus Line Expenses\r\n  returnAllBusLineExpensess(page: number) {\r\n    let BusLineExpensesData: IAddEditBusLineExpenses = {\r\n      id: this.FormCtrls.id.value,\r\n      busLineId: this.FormCtrls.busLineId.value,\r\n      governorateID: this.FormCtrls.governorateID.value,\r\n      cityID: this.FormCtrls.cityID.value,\r\n      AreaID: this.FormCtrls.AreaID.value,\r\n      Amount: this.FormCtrls.Amount.value,\r\n      EduCompId:this.EduCompId\r\n\r\n    };\r\n    this.busLineExpensesService\r\n      .getBusLineExpenses(BusLineExpensesData,page)\r\n      .subscribe((res: IBusLineExpensesList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.BusLineExpanseList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let BusLineExpensesData: IAddEditBusLineExpenses = {\r\n      id: this.FormCtrls.id.value,\r\n      busLineId: this.FormCtrls.busLineId.value,\r\n      governorateID: this.FormCtrls.governorateID.value,\r\n      cityID: this.FormCtrls.cityID.value,\r\n      AreaID: this.FormCtrls.AreaID.value,\r\n      Amount: this.FormCtrls.Amount.value,\r\n      EduCompId:this.EduCompId\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.busLineExpensesService\r\n      .addEditBusLineExpenses(BusLineExpensesData)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          if(BusLineExpensesData.id==0){\r\n            this.dataSource.data.unshift(res.BusLineExpanse);\r\n            this.itemsCounts++;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          }else{\r\n            let i = this.dataSource.data.findIndex((e) => e.id == BusLineExpensesData.id);\r\n            this.dataSource.data[i] = res.BusLineExpanse;\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n\r\n          }\r\n\r\n          this.dataSource.paginator=this.paginator;\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n\r\n  openDeleateDialog(BusLineExpensesData: IBusLineExpenses): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:  this.curLang == \"ar\" ? BusLineExpensesData.Bus_ar_name : BusLineExpensesData.Bus_en_name\r\n\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteBusLineExpenses(BusLineExpensesData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Bus Line Expenses\r\n  deleteBusLineExpenses(BusLineExpensesData: IBusLineExpenses) {\r\n    this.busLineExpensesService\r\n      .deleteBusLineExpenses(BusLineExpensesData.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex(\r\n            (e) => e == BusLineExpensesData\r\n          );\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource.paginator=this.paginator;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"Financial.AddBusLineExpenses\"\r\n            : \"Financial.EditBusLineExpenses\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n\r\n                  <app-governorate-dropdown\r\n                    [control]=\"FormCtrls.governorateID\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </app-governorate-dropdown>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n\r\n                  <app-city-by-governrate-dropdown\r\n                    [cityControl]=\"FormCtrls.cityID\"\r\n                    [goverControl]=\"FormCtrls.governorateID\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-city-by-governrate-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-area-by-city-dropdown\r\n                    [cityControl]=\"FormCtrls.cityID\"\r\n                    [areaControl]=\"FormCtrls.AreaID\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </app-area-by-city-dropdown>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"GeneralSetup.BusLine\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select\r\n                      formControlName=\"busLineId\"\r\n                      [disabled]=\"FormCtrls.AreaID.value == null ? true : false\"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of busLineList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.busLineId.invalid &&\r\n                        (FormCtrls.busLineId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.busLineId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Amount\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Amount\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Amount.invalid &&\r\n                        (FormCtrls.Amount.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.Amount.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.Amount.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value == 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.BusLineExpenses\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.Bus_ar_name : ele.Bus_en_name }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- Amount Column -->\r\n\r\n            <ng-container matColumnDef=\"Amount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Amount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Amount }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editBusLineExpenses(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                  \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllBusLineExpensess($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IExpenseElementListVM,\r\n  IExpenseElementsVM,\r\n} from \"app/dashboard/models/setup/financial-setup/expense-elements\";\r\nimport { ExpenseElementsService } from \"app/dashboard/services/setup/financial-setup/expense-elements.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-expense-elements\",\r\n  templateUrl: \"./expense-elements.component.html\",\r\n  styleUrls: [\"./expense-elements.component.scss\"],\r\n})\r\nexport class ExpenseElementsComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemCount: number;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"enName\",\r\n    \"arName\",\r\n    \"type\",\r\n    // \"IsMandatory\",\r\n    \"action\",\r\n  ];\r\n  dataSource: MatTableDataSource<IExpenseElementsVM>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private toastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private expenseElementsService: ExpenseElementsService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllExpenseElements(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      IsGeneral: [true, [Validators.required]],\r\n     // IsOption: [true, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllExpenseElements(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllExpenseElements(page: number) {\r\n    this.spinner.show();\r\n    this.expenseElementsService\r\n      .getAllExpenseElements(page, this.EduCompId)\r\n      .subscribe((res: IExpenseElementListVM) => {\r\n        console.log(\"AllPaymentMethods=> \", res);\r\n        this.dataSource = new MatTableDataSource(res.expanseElementList);\r\n        this.itemCount = res.countItems;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let body = {} as IExpenseElementsVM;\r\n    body.eduCompId = this.EduCompId;\r\n    body.id = this.FormCtrl.id?.value;\r\n    body.En_Name = this.FormCtrl.En_Name?.value;\r\n    body.Ar_Name = this.FormCtrl.Ar_Name?.value;\r\n    body.IsGeneral = this.FormCtrl.IsGeneral?.value;\r\n    //body.IsOption = this.FormCtrl.IsOption?.value;\r\n    if (this.myForm.valid) {\r\n      this.expenseElementsService\r\n        .addEditExpenseElement(body)\r\n        .subscribe((res: any) => {\r\n          console.log(\"addPaymentMethod=> \", res);\r\n          if (res.returnValue == 1) {\r\n            if (body.id == 0) {\r\n              this.dataSource.data.unshift(res.expanse_element);\r\n              this.itemCount++;\r\n              this.toastrMsg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex((e) => e.id == body.id);\r\n              this.dataSource.data[i] = res.expanse_element;\r\n\r\n              this.toastrMsg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.FormCtrl.Ar_Name.setValue(null);\r\n    this.FormCtrl.En_Name.setValue(null);\r\n\r\n  }\r\n  openDeleateDialog(paymentMethod: IExpenseElementsVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? paymentMethod.Ar_Name\r\n              : paymentMethod.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteExpenseElement(paymentMethod);\r\n      });\r\n  }\r\n\r\n  deleteExpenseElement(paymentMethod: IExpenseElementsVM) {\r\n    this.spinner.show();\r\n    this.expenseElementsService\r\n      .deleteExpenseElement(paymentMethod.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == paymentMethod);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastrMsg.success(\"General.DeleteSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n  getPaymentMethodToEdit(paymentMethod: IExpenseElementsVM) {\r\n    this.myForm.patchValue(paymentMethod);\r\n  }\r\n\r\n  getExpenseElementById(id: any) {\r\n    this.spinner.show();\r\n    this.expenseElementsService\r\n      .getExpenseElementById(id)\r\n      .subscribe((res: any) => {\r\n        //  console.log(res)\r\n        if (res.Id != null) {\r\n          this.myForm.patchValue(res);\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title *ngIf=\"FormCtrl.id.value == 0\">\r\n        {{ \"Financial.addExpense\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"FormCtrl.id.value > 0\">\r\n        {{ \"Financial.updateExpense\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <!-- english name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.enName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.En_Name?.invalid &&\r\n                        (FormCtrl.En_Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.En_Name?.errors?.required ||\r\n                          FormCtrl.En_Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- arabic name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.arName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.Ar_Name?.invalid &&\r\n                        (FormCtrl.Ar_Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.Ar_Name?.errors?.required ||\r\n                          FormCtrl.Ar_Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <mat-radio-group formControlName=\"IsOption\" class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        [checked]=\"this.FormCtrl.IsOption?.value == true\"\r\n                        >{{ \"labels.IsMandatory\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        [checked]=\"this.FormCtrl.IsOption?.value == false\"\r\n                      >\r\n                        {{ \"labels.isOptionaly\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-radio-group formControlName=\"IsGeneral\" class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        [checked]=\"this.FormCtrl.IsGeneral?.value == true\"\r\n                        >{{ \"Financial.GeneralExpense\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        [checked]=\"this.FormCtrl.IsGeneral?.value == false\"\r\n                      >\r\n                        {{ \"Financial.StudentExpense\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"FormCtrl.id.value == 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrl.id.value > 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrl.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.Expenses\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- id Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english Name Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic Name Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- type Column -->\r\n            <ng-container matColumnDef=\"type\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Type\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  (ele.IsGeneral == true\r\n                    ? \"Financial.GeneralExpense\"\r\n                    : \"Financial.StudentExpense\"\r\n                  ) | translate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- isOptionaly Column -->\r\n            <!-- <ng-container matColumnDef=\"IsMandatory\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.OptionalyOrMandatory\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span *ngIf=\"ele.IsOption\">\r\n                  {{(ele.IsOption==true? \"labels.isOptionaly\": \"labels.IsMandatory\")| translate }}\r\n                </span>\r\n\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"getPaymentMethodToEdit(ele)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of departments\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { MatDialog } from \"@angular/material/dialog\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ExternalOrganizationTypeService } from \"app/dashboard/services/setup/financial-setup/external-organization-type.service\";\r\nimport { IExternalOrganizationListVM, IExternalOrganizationTypeVM } from \"app/dashboard/models/setup/financial-setup/external-organization-type\";\r\n\r\n@Component({\r\n  selector: \"external-organization-type\",\r\n  templateUrl: \"./external-organization-type.component.html\",\r\n  styleUrls: [\"./external-organization-type.component.scss\"],\r\n})\r\nexport class ExternalOrganizationTypeComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemCount: number;\r\n  countItems: number;\r\n  displayedColumns: string[] = [\"#\", \"enName\", \"arName\", \"action\"];\r\n  dataSource: MatTableDataSource<IExternalOrganizationTypeVM>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private toastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private externalOrganizationTypeService: ExternalOrganizationTypeService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllExternalOrganizations(1);\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllExternalOrganizations(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  EditExternalOrganization(data: IExternalOrganizationTypeVM) {\r\n    this.myForm.patchValue(data);\r\n    console.log(data.Id);\r\n  }\r\n  getAllExternalOrganizations(page: number) {\r\n    this.spinner.show();\r\n    this.externalOrganizationTypeService.getExternalOrganizationTypes(\r\n      page,\r\n      this.EduCompId\r\n    ).subscribe((res: IExternalOrganizationListVM) => {\r\n      this.dataSource = new MatTableDataSource(res.externalTypeList);\r\n      this.itemCount = res.countItems;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let body = {} as IExternalOrganizationTypeVM;\r\n    body.EduCompId = this.EduCompId;\r\n    body.Id = this.FormCtrl.Id?.value;\r\n    body.Ar_Name = this.FormCtrl.Ar_Name?.value;\r\n    body.En_Name = this.FormCtrl.En_Name?.value;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n\r\n      this.externalOrganizationTypeService.addEditExternalOrganizationType(body).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n            if (body.Id == 0) {\r\n              console.log(res);\r\n              this.dataSource.data.unshift(res.externalOrg_Type);\r\n              this.itemCount++;\r\n              this.toastrMsg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex((e) => e.Id == body.Id);\r\n              this.dataSource.data[i] = res.externalOrg_Type;\r\n\r\n              this.toastrMsg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        }\r\n      );\r\n    } else this.toastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrl.Id.setValue(0);\r\n  }\r\n  openDeleateDialog(data:IExternalOrganizationTypeVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? data.Ar_Name\r\n              : data.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletedata(data);\r\n      });\r\n  }\r\n\r\n  deletedata(data: IExternalOrganizationTypeVM) {\r\n    this.spinner.show();\r\n    this.externalOrganizationTypeService.deleteExternalOrganizationType(data.Id).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastrMsg.success(\"General.DeleteSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title *ngIf=\"FormCtrl.Id.value == 0\">\r\n        {{ \"Financial.AddExternalOrganizationType\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"FormCtrl.Id.value > 0\">\r\n        {{ \"Financial.UpdateExternalOrganizationType\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <!-- english name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.enName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.En_Name?.invalid &&\r\n                        (FormCtrl.En_Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.En_Name?.errors?.required ||\r\n                          FormCtrl.En_Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- arabic name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.arName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.Ar_Name?.invalid &&\r\n                        (FormCtrl.Ar_Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.Ar_Name?.errors?.required ||\r\n                          FormCtrl.Ar_Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n          *ngIf=\"FormCtrl.Id.value == 0\"\r\n\r\n        >\r\n        <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button  *ngIf=\"FormCtrl.Id.value > 0\"\r\n\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrl.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.ExternalOrganizationTypes\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- id Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english Name Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic Name Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"EditExternalOrganization(ele)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllExternalOrganizations($event.pageIndex + 1)\"\r\n            [length]=\"itemCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { FinancialItemService } from \"app/dashboard/services/setup/financial-setup/financial-item.service\";\r\nimport {\r\n  IAddEditFainancialItem,\r\n  IFainancialItem,\r\n  IFainancialItemList,\r\n} from \"app/dashboard/models/setup/financial-setup/financial-item\";\r\n\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n@Component({\r\n  selector: \"app-financial-item\",\r\n  templateUrl: \"./financial-item.component.html\",\r\n  styleUrls: [\"./financial-item.component.scss\"],\r\n})\r\nexport class FinancialItemComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  EduCompId: number = 2;\r\n  functionId: number;\r\n  select = true;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  curLang: string;\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"itemName\",\r\n    \"itemCode\",\r\n    \"IsInventory\",\r\n    \"itemType\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IFainancialItem>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private financialItemService: FinancialItemService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n\r\n      ItemCode: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      IsInventory: [false, Validators.required],\r\n      IsCostElement: [false],\r\n      IsRevenueElement: [false],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnFinancialItems(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnFinancialItems(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editFinancialItem(FinancialItemData: IFainancialItem) {\r\n    console.log(\r\n      FinancialItemData.revenueElement,\r\n      FinancialItemData.costElement\r\n    );\r\n    this.myForm.patchValue(FinancialItemData);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All Financial Items\r\n  returnFinancialItems(page: number) {\r\n    this.financialItemService\r\n      .getFinancialItems(page, this.EduCompId)\r\n      .subscribe((res: IFainancialItemList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.FainancialItemList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let financialData: IAddEditFainancialItem = {\r\n      id: this.FormCtrls.id.value,\r\n      Ar_Name: this.FormCtrls.Ar_Name.value,\r\n      En_Name: this.FormCtrls.En_Name.value,\r\n\r\n      ItemCode: this.FormCtrls.ItemCode.value,\r\n      EducationalComponentID: this.EduCompId,\r\n\r\n      IsInventory: this.FormCtrls.IsInventory.value,\r\n      IsCostElement: this.FormCtrls.IsCostElement.value,\r\n      IsRevenueElement: this.FormCtrls.IsRevenueElement.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.financialItemService\r\n        .addEditFinancialItem(financialData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.spinner.show();\r\n            if (financialData.id == 0) {\r\n              this.dataSource.data.unshift(res.Inventory_Item);\r\n              this.itemsCounts++;\r\n              console.log(\"rrr\", res.Inventory_Item);\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex(\r\n                (e) => e.id == financialData.id\r\n              );\r\n\r\n              this.dataSource.data[i] = res.Inventory_Item;\r\n              this.toastr.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n  }\r\n  openDeleateDialog(FinancialItemData: IFainancialItem): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? FinancialItemData.Ar_Name\r\n              : FinancialItemData.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteFinancialItem(FinancialItemData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Financial Item\r\n  deleteFinancialItem(FinancialItemData: IFainancialItem) {\r\n    this.financialItemService\r\n      .deleteFinancialItem(FinancialItemData.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex(\r\n            (e) => e == FinancialItemData\r\n          );\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"Financial.addFinancialItem\"\r\n            : \"Financial.updateFinancialItem\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.enName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.En_Name.invalid &&\r\n                        (FormCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.En_Name.errors?.required ||\r\n                          FormCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.arName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Ar_Name.invalid &&\r\n                        (FormCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Ar_Name.errors?.required ||\r\n                          FormCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.ItemCode\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ItemCode\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.ItemCode.invalid &&\r\n                        (FormCtrls.ItemCode.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ItemCode.errors?.required ||\r\n                          FormCtrls.ItemCode.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-label>\r\n                    {{ \"Financial.IsInventory\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group formControlName=\"IsInventory\">\r\n                    <mat-radio-button\r\n                      [value]=\"true\"\r\n                      [checked]=\"FormCtrls.IsInventory.value == true\"\r\n                      class=\"m-2\"\r\n                    >\r\n                      {{ \"labels.Yes\" | translate }}\r\n                    </mat-radio-button>\r\n                    <mat-radio-button\r\n                      [value]=\"false\"\r\n                      [checked]=\"FormCtrls.IsInventory.value == false\"\r\n                      class=\"m-2\"\r\n                    >\r\n                      {{ \"labels.No\" | translate }}\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                  <mat-hint\r\n                    *ngIf=\"\r\n                      FormCtrls.IsInventory.invalid &&\r\n                      (FormCtrls.IsInventory.touched || submitted)\r\n                    \"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    <span *ngIf=\"FormCtrls.IsInventory.errors?.required\">\r\n                      <i class=\"ft-alert-circle align-middle\"></i>\r\n                      {{ \"labels.MustChoosevalue\" | translate }}\r\n                    </span>\r\n                  </mat-hint>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-label>\r\n                    {{ \"Financial.ItemType\" | translate }}\r\n                  </mat-label>\r\n                  <mat-checkbox\r\n                    formControlName=\"IsCostElement\"\r\n                    [checked]=\"FormCtrls.IsCostElement.value == true\"\r\n                    [value]=\"true\"\r\n                    class=\"m-2\"\r\n                  >\r\n                    {{ \"Financial.CostElement\" | translate }}\r\n                  </mat-checkbox>\r\n                  <mat-checkbox\r\n                    formControlName=\"IsRevenueElement\"\r\n                    [value]=\"true\"\r\n                    [checked]=\"FormCtrls.IsRevenueElement.value == true\"\r\n                    class=\"m-2\"\r\n                  >\r\n                    {{ \"Financial.RevenueElement\" | translate }}\r\n                  </mat-checkbox>\r\n                  <mat-hint\r\n                    *ngIf=\"FormCtrls.ItemCode.invalid && submitted\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.IsRevenueElement.value == false &&\r\n                        FormCtrls.IsCostElement.value == false\r\n                      \"\r\n                    >\r\n                      <i class=\"ft-alert-circle align-middle\"></i>\r\n                      {{ \"labels.MustChoosevalue\" | translate }}\r\n                    </span>\r\n                  </mat-hint>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n        *ngIf=\"FormCtrls.id.value == 0\"\r\n\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.FinancialItems\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- ItemName Column -->\r\n            <ng-container matColumnDef=\"itemName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.ItemName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.Ar_Name : ele.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- ItemCode Column -->\r\n            <ng-container matColumnDef=\"itemCode\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.ItemCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ItemCode }}</td>\r\n            </ng-container>\r\n            <!-- IsInventory Column -->\r\n            <ng-container matColumnDef=\"IsInventory\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.IsInventory\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  (ele.IsInventory == true ? \"labels.Yes\" : \"labels.No\")\r\n                    | translate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- ItemType Column -->\r\n            <ng-container matColumnDef=\"itemType\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.ItemType\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  (ele.IsCostElement == true && ele.IsRevenueElement == true\r\n                    ? \"both\"\r\n                    : ele.IsRevenueElement == true\r\n                    ? \"Financial.RevenueElement\"\r\n                    : \"Financial.CostElement\"\r\n                  ) | translate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editFinancialItem(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnFinancialItems($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { InstallmentTypesComponent } from \"./installment-types/installment-types.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ExpenseElementsComponent } from \"./expense-elements/expense-elements.component\";\r\nimport { PaymentMethodsComponent } from \"./payment-methods/payment-methods.component\";\r\nimport { SalaryItemComponent } from \"./salary-item/salary-item.component\";\r\nimport { FinancialItemComponent } from \"./financial-item/financial-item.component\";\r\nimport { SuppliersAndCustomersComponent } from \"./suppliers-and-customers/suppliers-and-customers.component\";\r\nimport { AcademicYearExpensesComponent } from \"./academic-year/academic-year-expenses/academic-year-expenses.component\";\r\nimport { AcademicYearExpensesDetailsComponent } from \"./academic-year/academic-year-expenses-details/academic-year-expenses-details.component\";\r\nimport { AcademicExpensesIndexComponent } from \"./academic-year/academic-expenses-index/academic-expenses-index.component\";\r\nimport { BusLineExpensesComponent } from \"./academic-year/bus-line-expenses/bus-line-expenses.component\";\r\nimport { ExternalOrganizationTypeComponent } from \"./external-organization-type/external-organization-type.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"payment-methods\",\r\n    component: PaymentMethodsComponent,\r\n  },\r\n  {\r\n    path: \"salary-items\",\r\n    component: SalaryItemComponent,\r\n  },\r\n  {\r\n    path: \"expense-elements\",\r\n    component: ExpenseElementsComponent,\r\n  },\r\n  {\r\n    path: \"installments\",\r\n    component: InstallmentTypesComponent,\r\n  },\r\n  {\r\n    path: \"financial-item\",\r\n    component: FinancialItemComponent,\r\n  },\r\n  {\r\n    path: \"supplier-and-customer\",\r\n    component: SuppliersAndCustomersComponent,\r\n  },\r\n  {\r\n    path: \"organization-type\",\r\n    component: ExternalOrganizationTypeComponent,\r\n  },\r\n  {\r\n    path: \"year-expenses\",\r\n    component: AcademicExpensesIndexComponent,\r\n  },\r\n  {\r\n    path: \"year-expenses-details/:id\",\r\n    component: AcademicYearExpensesDetailsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FinancialSetupRoutingModule {}\r\n","import { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { FinancialSetupRoutingModule } from \"./financial-setup-routing.module\";\r\nimport { PaymentMethodsComponent } from \"./payment-methods/payment-methods.component\";\r\nimport { ExpenseElementsComponent } from \"./expense-elements/expense-elements.component\";\r\nimport { SalaryItemComponent } from \"./salary-item/salary-item.component\";\r\nimport { InstallmentTypesComponent } from \"./installment-types/installment-types.component\";\r\nimport { AcademicYearExpensesComponent } from './academic-year/academic-year-expenses/academic-year-expenses.component';\r\nimport { FinancialItemComponent } from \"./financial-item/financial-item.component\";\r\nimport { SuppliersAndCustomersComponent } from \"./suppliers-and-customers/suppliers-and-customers.component\";\r\nimport { AcademicYearExpensesDetailsComponent } from './academic-year/academic-year-expenses-details/academic-year-expenses-details.component';\r\nimport { AcademicExpensesIndexComponent } from './academic-year/academic-expenses-index/academic-expenses-index.component';\r\nimport { BusLineExpensesComponent } from './academic-year/bus-line-expenses/bus-line-expenses.component';\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { ExternalOrganizationTypeComponent } from \"./external-organization-type/external-organization-type.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PaymentMethodsComponent,\r\n    ExpenseElementsComponent,\r\n    SalaryItemComponent,\r\n    InstallmentTypesComponent,\r\n    AcademicYearExpensesComponent,\r\n    FinancialItemComponent,\r\n    SuppliersAndCustomersComponent,\r\n    AcademicYearExpensesDetailsComponent,\r\n    AcademicExpensesIndexComponent,\r\n    BusLineExpensesComponent,\r\n    ExternalOrganizationTypeComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FinancialSetupRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class FinancialSetupModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IInstallmentsVM } from \"app/dashboard/models/setup/financial-setup/installmentT-types\";\r\nimport { InstallmentTypesService } from \"app/dashboard/services/setup/financial-setup/installment-types.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-installment-types\",\r\n  templateUrl: \"./installment-types.component.html\",\r\n  styleUrls: [\"./installment-types.component.css\"],\r\n})\r\nexport class InstallmentTypesComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  displayedColumns: string[] = [\"#\", \"Name\", \"NumberOfMonths\", \"action\"];\r\n  dataSource: MatTableDataSource<IInstallmentsVM>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private toastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private installmentTypesService: InstallmentTypesService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInstallmentTypes();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      NumberOfMonths: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getInstallmentTypes();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getInstallmentTypes() {\r\n    this.spinner.show();\r\n    this.installmentTypesService.getInstallmentTypes().subscribe((res: any) => {\r\n      console.log(\"getInstallmentTypes=> \", res);\r\n      this.dataSource = new MatTableDataSource(res);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let body = {} as IInstallmentsVM;\r\n    body.EduCompId = this.EduCompId;\r\n    body.Id = this.FormCtrl.Id?.value;\r\n    body.Name = this.FormCtrl.Name?.value;\r\n    body.NumberOfMonths = this.FormCtrl.NumberOfMonths?.value;\r\n    if (this.myForm.valid) {\r\n      body.Id == 0\r\n        ? this.addInstallmentType(body)\r\n        : this.updateInstallmentType(body);\r\n    } else this.toastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  addInstallmentType(body: IInstallmentsVM) {\r\n    this.spinner.show();\r\n    this.installmentTypesService\r\n      .addInstallmentType(body)\r\n      .subscribe((res: any) => {\r\n        console.log(\"addInstallmentType=> \", res);\r\n        if (res.returnValue == 1) {\r\n          this.dataSource.data.unshift(res);\r\n          \r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.FormCtrl.Id.setValue(0);\r\n          this.toastrMsg.success(\"General.AddSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  updateInstallmentType(body: IInstallmentsVM) {\r\n    this.spinner.show();\r\n    this.installmentTypesService\r\n      .updateInstallmentType(body.Id, body)\r\n      .subscribe((res: any) => {\r\n        console.log(\"updateInstallmentType=> \", res);\r\n        if (res.Id == body.Id) {\r\n          let i = this.dataSource.data.findIndex((e) => e.Id == body.Id);\r\n          this.dataSource.data[i] = res;\r\n\r\n          this.toastrMsg.success(\"General.UpdateSuccessfully\");\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrl.id.setValue(0);\r\n  }\r\n\r\n  openDeleateDialog(installment: IInstallmentsVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: installment.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteInstallmentType(installment);\r\n      });\r\n  }\r\n\r\n  deleteInstallmentType(installment: IInstallmentsVM) {\r\n    this.spinner.show();\r\n    this.installmentTypesService\r\n      .deleteInstallmentType(installment.Id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == installment);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.toastrMsg.success(\"General.DeleteSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n  getInstallmentToEdit(installment: IInstallmentsVM) {\r\n    this.myForm.patchValue(installment);\r\n  }\r\n\r\n  getInstallmentTypeById(id: any) {\r\n    this.spinner.show();\r\n    this.installmentTypesService\r\n      .getInstallmentTypeById(id)\r\n      .subscribe((res: any) => {\r\n        //  console.log(res)\r\n        if (res.Id != null) {\r\n          this.myForm.patchValue(res);\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title *ngIf=\"FormCtrl.Id.value == 0\">\r\n        {{ \"Financial.AddInstallment\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"FormCtrl.Id.value > 0\">\r\n        {{ \"Financial.updateInstallment\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <!--   name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Name\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.Name?.invalid &&\r\n                        (FormCtrl.Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.Name?.errors?.required ||\r\n                          FormCtrl.Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- NumberOfMonths -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.NumberOfMonths\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"NumberOfMonths\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.NumberOfMonths?.invalid &&\r\n                        (FormCtrl.NumberOfMonths?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.NumberOfMonths?.errors?.required ||\r\n                          FormCtrl.NumberOfMonths?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          type=\"submit\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <span *ngIf=\"FormCtrl.Id.value == 0\">\r\n            {{ \"General.Add\" | translate }}\r\n          </span>\r\n          <span *ngIf=\"FormCtrl.Id.value > 0\">\r\n            {{ \"General.Update\" | translate }}\r\n          </span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.Installments\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- id Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!--   Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- NumberOfMonths Column -->\r\n            <ng-container matColumnDef=\"NumberOfMonths\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.NumberOfMonths\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.NumberOfMonths }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"getInstallmentToEdit(ele)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of departments\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { MatDialog } from \"@angular/material/dialog\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { PaymentMethodService } from \"app/dashboard/services/setup/financial-setup/payment-method.service\";\r\nimport {\r\n  IPaymentMethodListVM,\r\n  IPaymentMethodsVM,\r\n} from \"app/dashboard/models/setup/financial-setup/payment-methods\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-payment-methods\",\r\n  templateUrl: \"./payment-methods.component.html\",\r\n  styleUrls: [\"./payment-methods.component.scss\"],\r\n})\r\nexport class PaymentMethodsComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemCount: number;\r\n  countItems: number;\r\n  displayedColumns: string[] = [\"#\", \"enName\", \"arName\", \"action\"];\r\n  dataSource: MatTableDataSource<IPaymentMethodsVM>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private toastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private PaymentMethodService: PaymentMethodService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllPaymentMethods(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllPaymentMethods(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllPaymentMethods(page: number) {\r\n    this.spinner.show();\r\n    this.PaymentMethodService.getAllPaymentMethods(\r\n      page,\r\n      this.EduCompId\r\n    ).subscribe((res: IPaymentMethodListVM) => {\r\n      console.log(\"AllPaymentMethods=> \", res);\r\n      this.dataSource = new MatTableDataSource(res.paymentList);\r\n      this.itemCount = res.countItems;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let body = {} as IPaymentMethodsVM;\r\n    body.EduCompId = this.EduCompId;\r\n    body.Id = this.FormCtrl.Id?.value;\r\n    body.Ar_Name = this.FormCtrl.Ar_Name?.value;\r\n    body.En_Name = this.FormCtrl.En_Name?.value;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n\r\n      this.PaymentMethodService.addEditPaymentMethod(body).subscribe(\r\n        (res: any) => {\r\n          console.log(\"addPaymentMethod=> \", res);\r\n          if (res.returnValue == 1) {\r\n            if (body.Id == 0) {\r\n              console.log(res);\r\n              this.dataSource.data.unshift(res.paymentMethod);\r\n              this.itemCount++;\r\n              this.toastrMsg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex((e) => e.Id == body.Id);\r\n              this.dataSource.data[i] = res.paymentMethod;\r\n\r\n              this.toastrMsg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        }\r\n      );\r\n    } else this.toastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrl.Id.setValue(0);\r\n  }\r\n  openDeleateDialog(paymentMethod: IPaymentMethodsVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? paymentMethod.Ar_Name\r\n              : paymentMethod.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletePaymentMethod(paymentMethod);\r\n      });\r\n  }\r\n\r\n  deletePaymentMethod(paymentMethod: IPaymentMethodsVM) {\r\n    this.spinner.show();\r\n    this.PaymentMethodService.deletePaymentMethod(paymentMethod.Id).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == paymentMethod);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastrMsg.success(\"General.DeleteSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      }\r\n    );\r\n  }\r\n  getPaymentMethodToEdit(paymentMethod: IPaymentMethodsVM) {\r\n    this.myForm.patchValue(paymentMethod);\r\n    console.log(paymentMethod.Id);\r\n  }\r\n\r\n  getPaymentMethodById(id: any) {\r\n    this.spinner.show();\r\n    this.PaymentMethodService.getPaymentMethodById(id).subscribe((res: any) => {\r\n      //  console.log(res)\r\n      if (res.Id != null) {\r\n        this.myForm.patchValue(res);\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title *ngIf=\"FormCtrl.Id.value == 0\">\r\n        {{ \"Financial.addPaymentMethod\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"FormCtrl.Id.value > 0\">\r\n        {{ \"Financial.aupdatePaymentMethod\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <!-- english name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.enName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.En_Name?.invalid &&\r\n                        (FormCtrl.En_Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.En_Name?.errors?.required ||\r\n                          FormCtrl.En_Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- arabic name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.arName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.Ar_Name?.invalid &&\r\n                        (FormCtrl.Ar_Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.Ar_Name?.errors?.required ||\r\n                          FormCtrl.Ar_Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n          *ngIf=\"FormCtrl.Id.value == 0\"\r\n\r\n        >\r\n        <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button  *ngIf=\"FormCtrl.Id.value > 0\"\r\n\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrl.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.paymentMethods\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- id Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english Name Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic Name Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"getPaymentMethodToEdit(ele)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllPaymentMethods($event.pageIndex + 1)\"\r\n            [length]=\"itemCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\nimport { SalaryItemService } from \"app/dashboard/services/setup/financial-setup/salary-item.service\";\r\nimport {\r\n  ISalaryItem,\r\n  ISalaryItemList,\r\n} from \"app/dashboard/models/setup/financial-setup/salary-item\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n@Component({\r\n  selector: \"app-salary-item\",\r\n  templateUrl: \"./salary-item.component.html\",\r\n  styleUrls: [\"./salary-item.component.scss\"],\r\n})\r\nexport class SalaryItemComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\"#\", \"En_Name\",\"Ar_Name\", \"IsDeduction\", \"option\"];\r\n  dataSource: MatTableDataSource<ISalaryItem>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private salaryItemService: SalaryItemService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      IsDeduction: [false, Validators.required],\r\n\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnSalaryItems(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnSalaryItems(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  editSalaryItem(salaryItemData: ISalaryItem) {\r\n    // this.salaryItemId = this.FormCtrls?.Id.value;\r\n    this.myForm.patchValue(salaryItemData);\r\n  }\r\n  // Start: Return All Salary Item\r\n  returnSalaryItems(page: number) {\r\n    this.salaryItemService\r\n      .getSalaryItems(page,this.EduCompId)\r\n      .subscribe((res: ISalaryItemList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.SalaryItemList);\r\n          this.itemsCounts = res.itemCount;\r\n          console.log(\"all\",res);\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let salaryItemData: ISalaryItem = {\r\n      id: this.FormCtrls.id.value,\r\n      Ar_Name: this.FormCtrls.Ar_Name.value,\r\n      En_Name: this.FormCtrls.En_Name.value,\r\n      EduCompId:this.EduCompId,\r\n      IsDeduction: this.FormCtrls.IsDeduction.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.salaryItemService\r\n        .addEditSalaryItem(salaryItemData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.spinner.show();\r\n            if (salaryItemData.id == 0) {\r\n              this.dataSource.data.unshift(res.salary_item);\r\n              this.itemsCounts++;\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex(\r\n                (e) => e.id == salaryItemData.id\r\n              );\r\n\r\n              this.dataSource.data[i] = res.salary_item;\r\n              this.toastr.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n  }\r\n\r\n  openDeleateDialog(salaryItemData: ISalaryItem): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? salaryItemData.Ar_Name\r\n              : salaryItemData.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteSalaryItem(salaryItemData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Salary Item\r\n  deleteSalaryItem(salaryItemData: ISalaryItem) {\r\n    this.salaryItemService\r\n      .deleteSalaryItem(salaryItemData.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex(\r\n            (e) => e == salaryItemData\r\n          );\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"Financial.addSalaryItem\"\r\n            : \"Financial.updateSalaryItem\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.En_Name.invalid &&\r\n                        (FormCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.En_Name.errors?.required ||\r\n                          FormCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Ar_Name.invalid &&\r\n                        (FormCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Ar_Name.errors?.required ||\r\n                          FormCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-label>\r\n                    {{ \"Financial.IsDeduction\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group formControlName=\"IsDeduction\">\r\n                    <mat-radio-button\r\n                      [value]=\"true\"\r\n                      [checked]=\"FormCtrls.IsDeduction.value == true\"\r\n                      class=\"m-4\"\r\n                    >\r\n                      {{ \"labels.Yes\" | translate }}\r\n                    </mat-radio-button>\r\n                    <mat-radio-button\r\n                      [value]=\"false\"\r\n                      [checked]=\"FormCtrls.IsDeduction.value == false\"\r\n                      class=\"m-4\"\r\n                    >\r\n                      {{ \"labels.No\" | translate }}\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                  <mat-hint\r\n                    *ngIf=\"\r\n                      FormCtrls.IsDeduction.invalid &&\r\n                      (FormCtrls.IsDeduction.touched || submitted)\r\n                    \"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    <span *ngIf=\"FormCtrls.IsDeduction.errors?.required\">\r\n                      <i class=\"ft-alert-circle align-middle\"></i>\r\n                      {{ \"labels.MustChoosevalue\" | translate }}\r\n                    </span>\r\n                  </mat-hint>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value == 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.SalaryItems\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- arName Column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.En_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- IsDeduction Column -->\r\n            <ng-container matColumnDef=\"IsDeduction\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.IsDeduction\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ (ele.IsDeduction ? \"labels.Yes\" : \"labels.No\") | translate }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editSalaryItem(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnSalaryItems($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\nimport { SuppliersAndCustomersService } from \"app/dashboard/services/setup/financial-setup/suppliers-and-customers.service\";\r\nimport {\r\n  IExternalOrganiztion,\r\n  IExternalOrganiztionList,\r\n} from \"app/dashboard/models/setup/financial-setup/suppliers-and-customers\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { IAddEditExternalOrganiztion } from \"./../../../../models/setup/financial-setup/suppliers-and-customers\";\r\nimport { ExternalOrganizationTypeService } from \"app/dashboard/services/setup/financial-setup/external-organization-type.service\";\r\n@Component({\r\n  selector: \"app-suppliers-and-customers\",\r\n  templateUrl: \"./suppliers-and-customers.component.html\",\r\n  styleUrls: [\"./suppliers-and-customers.component.scss\"],\r\n})\r\nexport class SuppliersAndCustomersComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  EduCompId: number = 2;\r\n  functionId: number;\r\n  rowFunctions: any = [{ functionName: \"Update\" }, { functionName: \"Delete\" }];\r\n  type: number;\r\n  curLang: string;\r\n  ExternalOrganizationList: IExternalOrganiztion[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"Name\",\r\n    \"Address\",\r\n    \"Email\",\r\n    \"Phone\",\r\n    \"Telephone\",\r\n    \"Website\",\r\n    \"Type\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IExternalOrganiztion>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n\r\n    private suppliersAndCustomersService: SuppliersAndCustomersService,\r\n    private externalOrganizationTypeService: ExternalOrganizationTypeService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n\r\n      Address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Telephone: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, CustomeValidator.whiteSpace],\r\n      ],\r\n      Mobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          CustomeValidator.whiteSpace,\r\n          Validators.minLength(7),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n        ],\r\n      ],\r\n      Website: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      // Note: [],\r\n      externalTypeId: [, [Validators.required]],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnAllSuppliersAndCustomers(1);\r\n    this.returnAllExternalOrganizationTypes();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllSuppliersAndCustomers(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editSupplierAndCustomer(data: IExternalOrganiztion) {\r\n    this.myForm.patchValue(data);\r\n    this.type = this.FormCtrls.externalTypeId.value;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  //return All Organization\r\n  returnAllExternalOrganizationTypes() {\r\n    this.externalOrganizationTypeService\r\n      .getExternalOrgnizationTypesDropDown(this.EduCompId)\r\n      .subscribe((res: any) => {\r\n        this.ExternalOrganizationList = res;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Suppliers and Customers\r\n  returnAllSuppliersAndCustomers(page: number) {\r\n    this.suppliersAndCustomersService\r\n      .getExternalOrgnizations(page, this.EduCompId)\r\n      .subscribe((res: IExternalOrganiztionList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.ExternalOrgList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n    console.log(\"update\", this.FormCtrls.externalTypeId.value);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let supplierData: IAddEditExternalOrganiztion = {\r\n      id: this.FormCtrls.id.value,\r\n      Ar_Name: this.FormCtrls.Ar_Name.value,\r\n      En_Name: this.FormCtrls.En_Name.value,\r\n      EducationalComponentID: this.EduCompId,\r\n      Address: this.FormCtrls.Address.value,\r\n      Telephone: this.FormCtrls.Telephone.value,\r\n      Email: this.FormCtrls.Email.value,\r\n      Mobile: this.FormCtrls.Mobile.value,\r\n      Website: this.FormCtrls.Website.value,\r\n      // Note: this.FormCtrls.Note.value,\r\n      ExternalOrgTypeId: this.FormCtrls.externalTypeId.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.suppliersAndCustomersService\r\n        .addEditExternalOrgnization(supplierData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.spinner.show();\r\n\r\n            if (supplierData.id == 0) {\r\n              this.dataSource.data.unshift(res.external_org);\r\n              this.itemsCounts++;\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex(\r\n                (e) => e.id == supplierData.id\r\n              );\r\n              this.dataSource.data[i] = res.external_org;\r\n              this.toastr.success(\"General.UpdateSuccessfully\");\r\n            }\r\n\r\n            this.dataSource.paginator = this.paginator;\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.FormCtrls.externalTypeId.setValue(this.type);\r\n  }\r\n  openDeleateDialog(data: IExternalOrganiztion): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? data.Ar_Name : data.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteSupplierAndCustomer(data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Supplier or Customer\r\n  deleteSupplierAndCustomer(data: IExternalOrganiztion) {\r\n    this.suppliersAndCustomersService\r\n      .deleteExternalOrgnization(data.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"Financial.addSupplier\"\r\n            : \"Financial.updateSupplier\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.enName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.En_Name.invalid &&\r\n                        (FormCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.En_Name.errors?.required ||\r\n                          FormCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.arName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Ar_Name.invalid &&\r\n                        (FormCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Ar_Name.errors?.required ||\r\n                          FormCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      <mat-label>\r\n                        {{ \"labels.HomeTelephone\" | translate }}\r\n                      </mat-label>\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Telephone\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Telephone.invalid &&\r\n                        (FormCtrls.Telephone.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Telephone.errors?.required ||\r\n                          FormCtrls.Telephone.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      <mat-label>\r\n                        {{ \"labels.MobileNo\" | translate }}\r\n                      </mat-label>\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Mobile\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Mobile.invalid &&\r\n                        (FormCtrls.Mobile.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Mobile.errors?.required ||\r\n                          FormCtrls.Mobile.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.Mobile.errors?.pattern\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.Mobile.errors?.minlength\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      <mat-label>\r\n                        {{ \"labels.Email\" | translate }}\r\n                      </mat-label>\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Email\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Email.invalid &&\r\n                        (FormCtrls.Email.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Email.errors?.required ||\r\n                          FormCtrls.Email.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      <mat-label>\r\n                        {{ \"labels.Website\" | translate }}\r\n                      </mat-label>\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Website\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Website.invalid &&\r\n                        (FormCtrls.Website.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Website.errors?.required ||\r\n                          FormCtrls.Website.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Address\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Address\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.Address.invalid &&\r\n                        (FormCtrls.Address.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Address.errors?.required ||\r\n                          FormCtrls.Address.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Type\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"externalTypeId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of ExternalOrganizationList\"\r\n                        [value]=\"ele.externalTypeId\"\r\n                        [selected]=\"\r\n                          FormCtrls.externalTypeId.value == ele.externalTypeId\r\n                        \"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.Ar_Name : ele.En_Name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.externalTypeId.invalid &&\r\n                        (FormCtrls.externalTypeId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.externalTypeId.errors?.required ||\r\n                          FormCtrls.externalTypeId.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button *ngIf=\"FormCtrls.id.value ==0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n        <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button  *ngIf=\"FormCtrls.id.value > 0\"\r\n\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Financial.Suppliers\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.Ar_Name : ele.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Address Column -->\r\n            <ng-container matColumnDef=\"Address\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Address\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Address }}</td>\r\n            </ng-container>\r\n            <!-- Email Column -->\r\n            <ng-container matColumnDef=\"Email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Email }}</td>\r\n            </ng-container>\r\n            <!-- Phone Column -->\r\n            <ng-container matColumnDef=\"Phone\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.MobileNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Mobile }}</td>\r\n            </ng-container>\r\n            <!-- Telephone Column -->\r\n            <ng-container matColumnDef=\"Telephone\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.HomeTelephone\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Telephone }}</td>\r\n            </ng-container>\r\n            <!-- Website Column -->\r\n            <ng-container matColumnDef=\"Website\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Website\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Website }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Type Column -->\r\n            <ng-container matColumnDef=\"Type\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Type\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.Type_Ar_Name : ele.Type_En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editSupplierAndCustomer(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllSuppliersAndCustomers($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IAddAcademicYearExpensesVM } from \"app/dashboard/models/setup/financial-setup/academic-year-expenses\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AcademicYearExpensesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getYearExpenses(page:number,EduCompId:number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}AcademicYearExpanse/getAcademicYearExpanseByPage/${EduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  getYearExpenseById(id: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}AcademicYearExpanse/AcademicYearExpenses/${id}`\r\n    );\r\n  }\r\n\r\n  addEditYearExpense(data: IAddAcademicYearExpensesVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}AcademicYearExpanse/addEditAcademicYearExpanse`,\r\n      data\r\n    );\r\n  }\r\n\r\n\r\n  deleteYearExpense(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}AcademicYearExpanse/deleteAcademicYearExpanse/${id}`\r\n    );\r\n  }\r\n\r\n  // getAllExpenseDetails(AcademicYearID: any) {\r\n  //   return this.http.get(\r\n  //     `${environment.baseUrl}SchoolSystem/AcademicYearExpenseDetails/${AcademicYearID}`\r\n  //   );\r\n  // }\r\n\r\n  // getExpenseDetailById(AcademicYearID: any, id: any) {\r\n  //   return this.http.get(\r\n  //     `${environment.baseUrl}SchoolSystem/AcademicYearExpenseDetails/${AcademicYearID}/${id}`\r\n  //   );\r\n  // }\r\n\r\n  // addExpenseDetail(AcademicYearID: any, data: any) {\r\n  //   return this.http.post(\r\n  //     `${environment.baseUrl}SchoolSystem/AcademicYearExpenseDetails/${AcademicYearID}`,\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  // updateExpenseDetail(id: any, data: any) {\r\n  //   return this.http.put(\r\n  //     `${environment.baseUrl}SchoolSystem/AcademicYearExpenseDetails/${id}`,\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  // deleteExpenseDetail(id: any) {\r\n  //   return this.http.delete(\r\n  //     `${environment.baseUrl}SchoolSystem/AcademicYearExpenseDetails/${id}`\r\n  //   );\r\n  // }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditYearExpenseDetails } from \"app/dashboard/models/setup/financial-setup/ademic-year-expenses-detail\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AdemicYearExpensesDetailsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All Year Expenses Details\r\n  getYearExpenseDetails(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}/SchoolSystem/YearExpenseDetails/getYearExpenseDetailss/${page}`\r\n    );\r\n  }\r\n\r\n  //Add New Year Expenses Detail\r\n  addYearExpenseDetails(data: IAddEditYearExpenseDetails) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/SchoolSystem/YearExpenseDetails/addYearExpenseDetails`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update Year Expenses Detail\r\n  updateYearExpenseDetails(data: IAddEditYearExpenseDetails) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}/SchoolSystem/YearExpenseDetails/editYearExpenseDetails/${data.ID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Year Expenses Detail\r\n  deleteYearExpenseDetails(YearExpenseDetailsId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}/SchoolSystem/YearExpenseDetails/deleteYearExpenseDetails/${YearExpenseDetailsId}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditBusLineExpenses } from \"app/dashboard/models/setup/financial-setup/bus-line-expenses\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BusLineExpensesService {\r\n  constructor(private http: HttpClient) {}\r\n  // Return All  Bus Line Expensess\r\n  getBusLineExpenses(data: IAddEditBusLineExpenses,page: number) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}BusLineExpanse/getBusLineExpanseByPage/${data.EduCompId}/${page}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Add New  Bus Line Expenses\r\n  addEditBusLineExpenses(data: IAddEditBusLineExpenses) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}BusLineExpanse/addEditBusLineExpanse`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete  Bus Line Expenses\r\n  deleteBusLineExpenses(BusLineExpensesId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}BusLineExpanse/deleteBusLineExpanse/${BusLineExpensesId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IExpenseElementsVM } from \"app/dashboard/models/setup/financial-setup/expense-elements\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ExpenseElementsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllExpenseElements(page:number,EduCompId:number) {\r\n    return this.http.get(`${environment.baseUrl}ExpanseElement/getExpanseElementByPage/${EduCompId}/${page}`);\r\n  }\r\n  getAllExpenseElementsDropdown(EduCompId:number) {\r\n    return this.http.get(`${environment.baseUrl}ExpanseElement/getAllExpanseElement/${EduCompId}`);\r\n  }\r\n\r\n  getExpenseElementById(id: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}ExpanseElement/getAllExpanseElementById/${id}`\r\n    );\r\n  }\r\n\r\n  addEditExpenseElement(data:IExpenseElementsVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}ExpanseElement/addEditExpanseElement`,\r\n      data\r\n    );\r\n  }\r\n\r\n\r\n\r\n  deleteExpenseElement(id: any) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}ExpanseElement/deleteExpanseElement/${id}`\r\n    );\r\n  }\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IExternalOrganizationTypeVM } from \"app/dashboard/models/setup/financial-setup/external-organization-type\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ExternalOrganizationTypeService {\r\n  constructor(private http: HttpClient) {}\r\n  // Return All External organization types\r\n  getExternalOrganizationTypes(page: number, EduCompId: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}ExternalOrgType/getExternalOrgTypeByPage/${EduCompId}/${page}`\r\n    );\r\n  }\r\n  //Return All External Orgnizations dropdown\r\n\r\n  getExternalOrgnizationTypesDropDown(eduCompId: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}ExternalOrgType/getAllExternalOrgType/${eduCompId}`\r\n    );\r\n  }\r\n\r\n  //Add New || UpdateSalary External Organization Type\r\n  addEditExternalOrganizationType(data: IExternalOrganizationTypeVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}ExternalOrgType/addEditExternalOrgType`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete External Organization Type\r\n  deleteExternalOrganizationType(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}ExternalOrgType/deleteExternalOrgType/${Id}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditFainancialItem } from \"app/dashboard/models/setup/financial-setup/financial-item\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FinancialItemService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  // Return All Financial Items\r\n  getFinancialItems(page: number, EduCompId:number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}/FinancialItem/getAllFinancialItem/${EduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add || Edit Financial Item\r\n  addEditFinancialItem(data: IAddEditFainancialItem) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/FinancialItem/addEditFinancialItem`,\r\n      data\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Delete Financial Item\r\n  deleteFinancialItem(FinancialItemId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}/FinancialItem/deleteFinancialItem/${FinancialItemId}`\r\n    );\r\n  }\r\n}\r\n","import { IInstallmentsVM } from \"app/dashboard/models/setup/financial-setup/installmentT-types\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class InstallmentTypesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getInstallmentTypes() {\r\n    return this.http.get(`${environment.baseUrl}SchoolSystem/InstallmentType`);\r\n  }\r\n\r\n  getInstallmentTypesDropdown<IInstallmentsVM>() {\r\n    return this.http.get<IInstallmentsVM[]>(\r\n      `${environment.baseUrl}SchoolSystem/InstallmentType`\r\n    );\r\n  }\r\n\r\n  getInstallmentTypeById(id: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}SchoolSystem/InstallmentType/${id}`\r\n    );\r\n  }\r\n\r\n  addInstallmentType(data: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}SchoolSystem/InstallmentType`,\r\n      data\r\n    );\r\n  }\r\n\r\n  updateInstallmentType(id: any, data: any) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}SchoolSystem/InstallmentType/${id}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteInstallmentType(id: any) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}SchoolSystem/InstallmentType/${id}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditBusLine } from \"app/dashboard/models/setup/general-setup/bus-line\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BusLineService {\r\n  constructor(private http: HttpClient) {}\r\n  // Return All Bus Lines\r\n  getBusLines(page: number,EduCompId:number) {\r\n    console.log(\"ed\",EduCompId);\r\n\r\n    return this.http.get(\r\n      `${environment.baseUrl}BusLine/getBusLineByeduCompId/${EduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  // Return All Bus Lines\r\n  getBusLinesDropDown(EduCompId:number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}BusLine/getAllBusLine/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  // Return All Bus Lines by Area id\r\n  getBusLinesDropDownByAreaId(AreaId: number,EduCompId:number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}BusLine/getBusLineByAreaId/${EduCompId}/${AreaId}`\r\n    );\r\n  }\r\n  //Add and Edit New Bus Line\r\n  addEditBusLine(data: IAddEditBusLine) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}BusLine/addEditBusLine`,\r\n      data\r\n    );\r\n  }\r\n\r\n\r\n  //Delete Bus Line\r\n  deleteBusLine(BusLineId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}BusLine/deleteBusLine/${BusLineId}`\r\n    );\r\n  }\r\n}\r\n"],"names":["AcademicExpensesIndexComponent","selectors","decls","vars","consts","template","i0","Validators","CustomeValidator","MatSort","MatPaginator","MatTableDataSource","DeleteDialogComponent","ctx_r27","ctx_r30","AcademicYearExpensesDetailsComponent","spinner","toastr","dialog","translate","fb","route","authService","YearExpensesDetailService","expenseElementsService","queryParamMap","subscribe","params","functionId","Number","get","getUserRowFunctions","res","length","rowFunctions","EduCompId","getEduCompId","returnYearExpensesDetails","getAllExpenseElements","myForm","group","ID","Amount","required","bigZero","ExpenseElementID","onLangChange","lang","curLang","dataSource","paginator","sort","e","controls","YearExpensesDetailData","patchValue","event","filterValue","target","value","filter","trim","toLowerCase","getAllExpenseElementsDropdown","expendsList","page","ExpenseElement_Ar_Name","ExpenseElement_En_Name","getYearExpenseDetails","YearExpenseDetailList","itemsCounts","itemCount","submitted","Data","FormCtrls","id","valid","addYearExpensesDetail","updateYearExpensesDetail","error","addYearExpenseDetails","returnValue","show","data","push","reset","success","hide","updateYearExpenseDetails","i","findIndex","setValue","open","msg","afterClosed","confirm","deleteYearExpensesDetail","deleteYearExpenseDetails","index","splice","viewQuery","ctx","ctx_r32","ctx_r35","ctx_r37","ctx_r52","ctx_r55","AcademicYearExpensesComponent","toastrMsg","yearExpensesService","educationYearService","AcademicYearservice","installmentTypesService","datePipe","functionName","getYearExpenses","getEducationalYears","returnAllAcademicEduYear","eduYearId","academicEduYearId","expanseElementId","amount","minusNum","isMandatory","firstPage","getInstallmentTypesDropdown","InstallmentTypes","ExpenseElements","getYearsDropdown","AcademicYears","academicEduYearList","getEducationalYearDropdown","EducationYears","eduYearList","console","log","academicExpanseList","countItems","body","eduCompId","FormCtrl","_a","_b","_c","_d","_e","_f","addEditYearExpense","unshift","academic_year_Expanse","clearForm","Min_Cash","installment","transform","academicEduYearFrom","academicEduYearTo","deleteYearExpense","getYearExpenseById","Id","ctx_r23","ctx_r26","ctx_r28","ctx_r38","ctx_r41","BusLineExpensesComponent","busLineExpensesService","areaService","busLineService","cityService","governorateService","busLineId","governorateID","cityID","AreaID","returnAllBusLineExpensess","valueChanges","val","getAllBuslineName","BusLineExpensesData","getBusLinesDropDownByAreaId","busLineList","getBusLineExpenses","BusLineExpanseList","addEditBusLineExpenses","BusLineExpanse","Bus_ar_name","Bus_en_name","deleteBusLineExpenses","ctx_r24","ctx_r29","ctx_r44","ExpenseElementsComponent","Ar_Name","whiteSpace","En_Name","IsGeneral","expanseElementList","addEditExpenseElement","expanse_element","paymentMethod","deleteExpenseElement","getExpenseElementById","ctx_r22","ctx_r25","ExternalOrganizationTypeComponent","externalOrganizationTypeService","getAllExternalOrganizations","getExternalOrganizationTypes","externalTypeList","addEditExternalOrganizationType","externalOrg_Type","deletedata","deleteExternalOrganizationType","ctx_r33","ctx_r47","ctx_r50","FinancialItemComponent","financialItemService","ItemCode","IsInventory","IsCostElement","IsRevenueElement","returnFinancialItems","FinancialItemData","revenueElement","costElement","getFinancialItems","FainancialItemList","financialData","EducationalComponentID","addEditFinancialItem","Inventory_Item","deleteFinancialItem","InstallmentTypesComponent","RouterModule","PaymentMethodsComponent","SalaryItemComponent","SuppliersAndCustomersComponent","routes","path","component","FinancialSetupRoutingModule","forChild","imports","exports","NgxSpinnerModule","ReactiveFormsModule","MaterialModule","SharedModule","CommonModule","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","FinancialSetupModule","provide","useClass","useValue","declarations","getInstallmentTypes","Name","NumberOfMonths","addInstallmentType","updateInstallmentType","deleteInstallmentType","getInstallmentTypeById","PaymentMethodService","getAllPaymentMethods","paymentList","addEditPaymentMethod","deletePaymentMethod","getPaymentMethodById","ctx_r40","ctx_r43","salaryItemService","IsDeduction","returnSalaryItems","salaryItemData","getSalaryItems","SalaryItemList","addEditSalaryItem","salary_item","deleteSalaryItem","ctx_r7","ctx_r46","ctx_r49","ctx_r51","ctx_r66","ctx_r69","suppliersAndCustomersService","Address","Telephone","Email","email","Mobile","minLength","pattern","Website","externalTypeId","returnAllSuppliersAndCustomers","returnAllExternalOrganizationTypes","type","getExternalOrgnizationTypesDropDown","ExternalOrganizationList","getExternalOrgnizations","ExternalOrgList","supplierData","ExternalOrgTypeId","addEditExternalOrgnization","external_org","deleteSupplierAndCustomer","deleteExternalOrgnization","environment","AcademicYearExpensesService","http","baseUrl","post","delete","factory","providedIn","AdemicYearExpensesDetailsService","put","YearExpenseDetailsId","BusLineExpensesService","BusLineExpensesId","ExpenseElementsService","ExternalOrganizationTypeService","FinancialItemService","FinancialItemId","InstallmentTypesService","BusLineService","AreaId","BusLineId"],"sourceRoot":"webpack:///"}