{"version":3,"file":"src_app_dashboard_pages_employees_employees_module_ts.js","mappings":"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","sources":["./src/app/dashboard/pages/employees/attendance/load-fingerprint-index/load-fingerprint-index.component.ts","./src/app/dashboard/pages/employees/attendance/load-fingerprint-index/load-fingerprint-index.component.html","./src/app/dashboard/pages/employees/attendance/register-fingerprint/register-fingerprint.component.ts","./src/app/dashboard/pages/employees/attendance/register-fingerprint/register-fingerprint.component.html","./src/app/dashboard/pages/employees/attendance/upload-fingerprint/upload-fingerprint.component.ts","./src/app/dashboard/pages/employees/attendance/upload-fingerprint/upload-fingerprint.component.html","./src/app/dashboard/pages/employees/department/department.component.ts","./src/app/dashboard/pages/employees/department/department.component.html","./src/app/dashboard/pages/employees/employee/add-employee/add-employee.component.ts","./src/app/dashboard/pages/employees/employee/add-employee/add-employee.component.html","./src/app/dashboard/pages/employees/employee/employee-attachments/employee-attachments.component.ts","./src/app/dashboard/pages/employees/employee/employee-attachments/employee-attachments.component.html","./src/app/dashboard/pages/employees/employee/employee-certifications/employee-certifications.component.ts","./src/app/dashboard/pages/employees/employee/employee-certifications/employee-certifications.component.html","./src/app/dashboard/pages/employees/employee/employee-courses/employee-courses.component.ts","./src/app/dashboard/pages/employees/employee/employee-courses/employee-courses.component.html","./src/app/dashboard/pages/employees/employee/employee-experience-history/employee-experience-history.component.ts","./src/app/dashboard/pages/employees/employee/employee-experience-history/employee-experience-history.component.html","./src/app/dashboard/pages/employees/employee/employee-index/employee-index.component.ts","./src/app/dashboard/pages/employees/employee/employee-index/employee-index.component.html","./src/app/dashboard/pages/employees/employee/employee-job-info/employee-job-info.component.ts","./src/app/dashboard/pages/employees/employee/employee-job-info/employee-job-info.component.html","./src/app/dashboard/pages/employees/employees-routing.module.ts","./src/app/dashboard/pages/employees/employees.module.ts","./src/app/dashboard/pages/employees/job-title/job-title.component.ts","./src/app/dashboard/pages/employees/job-title/job-title.component.html","./src/app/dashboard/services/employees/department.service.ts","./src/app/dashboard/services/employees/emp-attachment.service.ts","./src/app/dashboard/services/employees/emp-certification.service.ts","./src/app/dashboard/services/employees/emp-course.service.ts","./src/app/dashboard/services/employees/emp-experience-history.service.ts","./src/app/dashboard/services/employees/emp-job-info.service.ts","./src/app/dashboard/services/employees/fingerprint.service.ts","./src/app/dashboard/services/employees/job-title.service.ts","./src/app/dashboard/services/setup/general-setup/attach-type.service.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  ILoadFPGetVM,\r\n  IUploadFPVM,\r\n} from \"app/dashboard/models/employees/fingerprint\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IfileVM, IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { FingerprintService } from \"app/dashboard/services/employees/fingerprint.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-load-fingerprint-index\",\r\n  templateUrl: \"./load-fingerprint-index.component.html\",\r\n  styleUrls: [\"./load-fingerprint-index.component.scss\"],\r\n})\r\nexport class LoadFingerprintIndexComponent implements OnInit {\r\n  @ViewChild(\"fileInput\") fileInput: ElementRef;\r\n\r\n  EmpFPs: ILoadFPGetVM[] = [\r\n    {\r\n      Id: 1,\r\n      EduCompId: 2,\r\n      Device: \"dd\",\r\n      BudgeNumber: 22,\r\n      CompanyId: 2,\r\n      Date: new Date(),\r\n      Employee: {\r\n        Address: \"n\",\r\n        Code: \"sd\",\r\n        CountryID: 1,\r\n        EduCompId: 2,\r\n        Email: \"bn\",\r\n        Id: 1,\r\n        Mobile: \"011521555\",\r\n        Name: \"ss\",\r\n        ar_name: \"ss\",\r\n        en_name: \"ss\",\r\n\r\n      },\r\n    },\r\n  ];\r\n  Devices: any[] = [{ Id: 1, Name: \"ff\" }];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [\r\n    /* { functionName: \"Edit\" },  */ { functionName: \"Delete\" },\r\n  ];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"Employee\",\r\n    \"BudgeNumber\",\r\n    \"Date\",\r\n    \"Device\",\r\n    \"CompanyId\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<ILoadFPGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private FingerprintServ: FingerprintService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllEmpFPs(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      DeviceId: [\"\", [Validators.required]],\r\n      UploadedData: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // test\r\n    this.dataSource = new MatTableDataSource(this.EmpFPs);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllEmpFPs(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all devices\r\n  getAllDevices() {\r\n    this.spinner.show();\r\n    this.FingerprintServ.getAllDevices().subscribe((res) => {\r\n      if (res) this.Devices = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get all Employee EmpFPs\r\n  getAllEmpFPs(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.FingerprintServ.getAllLoadFPs(page).subscribe((res) => {\r\n      if (res) {\r\n        this.EmpFPs = res.FingerprintsList;\r\n        this.dataSource = new MatTableDataSource(this.EmpFPs);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"EmpFPs: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // add Employee EmpFP\r\n  addEmpFP() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let EmpFP = {} as IUploadFPVM;\r\n      EmpFP.EduCompId = this.EduCompId;\r\n      EmpFP.UploadedData = this.formCtrls.UploadedData?.value;\r\n      EmpFP.DeviceId = this.formCtrls.DeviceId?.value;\r\n      console.log(\"EmpFP\", EmpFP);\r\n\r\n      this.spinner.show();\r\n      this.FingerprintServ.uploadFP(EmpFP).subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.dataSource.data.push(res);\r\n          this.itemsCounts++;\r\n          // this.getAllEmpFPs(this.curPage);\r\n          this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // on select file\r\n  onChangeFile(event: any) {\r\n    let fileName = event.target.files[0].name;\r\n    let fileSize = event.target.files[0].size;\r\n    let fileType = event.target.files[0].type;\r\n    let LastModified = event.target.files[0].lastModified;\r\n    let LastModifiedDate = event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n\r\n        let data: IfileVM = {\r\n          FileAsBase64: fileReder.replace(\r\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\",\r\n            \"\"\r\n          ),\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.formCtrls?.UploadedData?.setValue(data);\r\n      };\r\n    }\r\n  }\r\n\r\n  RemoveFile() {\r\n    this.formCtrls.UploadedData.setValue(\"\");\r\n    this.fileInput.nativeElement.value = \"\";\r\n  }\r\n\r\n  downloadTemplate() {}\r\n\r\n  // delete dialog\r\n  openDeleteDialog(EmpFP: ILoadFPGetVM): void {\r\n    // let title = `${EmpFP.Employee.Name} - ${EmpFP.Date}`;\r\n    let title = `${EmpFP.Employee.Name}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteEmpFP(EmpFP);\r\n      });\r\n  }\r\n\r\n  // delete EmpFP\r\n  deleteEmpFP(EmpFP: ILoadFPGetVM) {\r\n    this.spinner.show();\r\n    this.FingerprintServ.deleteLoadFP(EmpFP.Id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == EmpFP);\r\n        this.dataSource.data.splice(i, 1);\r\n        this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- upload empFP -->\r\n      <mat-card-title>\r\n        {{ \"Employees.UploadFP\" | translate }}\r\n        <!-- back -->\r\n        <!-- <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/employees/attendance/load-FP\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a> -->\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- UploadedData input -->\r\n                <div class=\"col-md-6 col-12 pt-2\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12 d-flex justify-content-between\">\r\n                      <mat-label>\r\n                        {{ \"Employees.UploadedData\" | translate }}\r\n                      </mat-label>\r\n                      <div>\r\n                        <!-- file input -->\r\n                        <input\r\n                          #fileInput\r\n                          class=\"file-upload\"\r\n                          type=\"file\"\r\n                          (change)=\"onChangeFile($event)\"\r\n                          name=\"File\"\r\n                        />\r\n                        <!-- delete button -->\r\n                        <!-- matTooltip=\"{{ 'General.Delete' | translate }}\" -->\r\n                        <a (click)=\"RemoveFile()\" class=\"danger p-0\">\r\n                          <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                      <mat-hint\r\n                        class=\"text-danger error\"\r\n                        *ngIf=\"\r\n                          formCtrls?.UploadedData.invalid &&\r\n                          (formCtrls?.UploadedData.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"formCtrls?.UploadedData.errors?.required\">\r\n                          <i class=\"ft-alert-circle align-middle\"></i>\r\n                          {{ \"labels.MustSelectFile\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Device input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Employees.Device\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"DeviceId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Device of Devices\"\r\n                        [value]=\"Device.Id\"\r\n                      >\r\n                        {{ Device.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.DeviceId.invalid &&\r\n                        (formCtrls?.DeviceId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.DeviceId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"downloadTemplate()\"\r\n        >\r\n          {{ \"Employees.DownloadTemplate\" | translate }}\r\n        </button>\r\n        <!-- upload -->\r\n        <button mat-raised-button class=\"btn btn-info\" (click)=\"addEmpFP()\">\r\n          {{ \"General.Upload\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <a\r\n      mat-raised-button\r\n      routerLink=\"/dashboard/employees/attendance/upload-FP\"\r\n      [queryParams]=\"{\r\n        functionId: functionId\r\n      }\"\r\n      class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n    >\r\n      {{ \"General.Upload\" | translate }}\r\n    </a>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Employees.Fingerprints\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Employee column -->\r\n            <ng-container matColumnDef=\"Employee\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.Employee\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Employee.Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Budge Number column -->\r\n            <ng-container matColumnDef=\"BudgeNumber\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.BudgeNumber\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.BudgeNumber }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Date column -->\r\n            <ng-container matColumnDef=\"Date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Date | date : \"mediumDate\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Device column -->\r\n            <ng-container matColumnDef=\"Device\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.Device\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Device }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- CompanyId column -->\r\n            <ng-container matColumnDef=\"CompanyId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.CompanyId\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.CompanyId }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let empFP\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(empFP)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllEmpFPs($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IRegisterFPGetVM,\r\n  IRegisterFPAddEditVM,\r\n} from \"app/dashboard/models/employees/fingerprint\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { IEmployeeVM } from \"app/dashboard/models/employees/employee\";\r\nimport { EmployeeService } from \"app/dashboard/services/employees/employee.service\";\r\nimport { FingerprintService } from \"app/dashboard/services/employees/fingerprint.service\";\r\nimport { IEmployeesVM } from \"app/dashboard/models/control/control-employee\";\r\n\r\n@Component({\r\n  selector: \"app-register-fingerprint\",\r\n  templateUrl: \"./register-fingerprint.component.html\",\r\n  styleUrls: [\"./register-fingerprint.component.scss\"],\r\n})\r\nexport class RegisterFingerprintComponent implements OnInit {\r\n  empFPs: IRegisterFPGetVM[] = [\r\n    {\r\n      Id: 1,\r\n      EduCompId: 2,\r\n      Employee: {\r\n        Address: \"n\",\r\n        Code: \"sd\",\r\n        CountryID: 1,\r\n        EduCompId: 2,\r\n        Email: \"bn\",\r\n        Id: 1,\r\n        Mobile: \"011521555\",\r\n        Name: \"ss\",\r\n        ar_name: \"ss\",\r\n\r\n        en_name: \"ss\",\r\n\r\n      },\r\n      Code: \"ss\",\r\n      Date: new Date(),\r\n      Notes: \"Dd\",\r\n    },\r\n  ];\r\n\r\n  Employees: any[] = [\r\n    {\r\n      Address: \"n\",\r\n      Code: \"sd\",\r\n      CountryID: 1,\r\n      EduCompId: 2,\r\n      Email: \"bn\",\r\n      Id: 1,\r\n      Mobile: \"011521555\",\r\n      Name: \"ss\",\r\n    },\r\n  ];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"Employee\",\r\n    \"Code\",\r\n    \"Date\",\r\n    \"Notes\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IRegisterFPGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private FingerprintServ: FingerprintService,\r\n    private EmployeeServ: EmployeeService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllempFPs(1);\r\n    this.getAllEmployees();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      EmployeeId: [\"\", [Validators.required]],\r\n      Date: [\"\", [Validators.required]],\r\n      FingerPrint: [\"\", [Validators.required]],\r\n      Notes: [\"\"],\r\n      IsAbsent: [\"\" /* , [Validators.required] */],\r\n    });\r\n\r\n    // test\r\n    this.dataSource = new MatTableDataSource(this.empFPs);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllempFPs(1);\r\n      this.getAllEmployees();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all employee empFPs\r\n  getAllempFPs(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.FingerprintServ.getAllRegisterFPs(page).subscribe((res) => {\r\n      if (res) {\r\n        this.empFPs = res.FingerprintsList;\r\n        this.dataSource = new MatTableDataSource(this.empFPs);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"empFPs: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getAllEmployees() {\r\n    this.spinner.show();\r\n    this.EmployeeServ.getEmployeeEmployeesDropDown().subscribe((res) => {\r\n      if (res) this.Employees = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let empFP = {} as IRegisterFPAddEditVM;\r\n      empFP.EduCompId = this.EduCompId;\r\n      empFP.EmployeeId = this.formCtrls.EmployeeId?.value;\r\n      empFP.Date = this.formCtrls.Date?.value;\r\n      empFP.FingerPrint = this.formCtrls.FingerPrint?.value;\r\n      empFP.Notes = this.formCtrls.Notes?.value;\r\n      empFP.IsAbsent = this.formCtrls.IsAbsent?.value;\r\n      console.log(\"empFP\", empFP);\r\n\r\n      this.formCtrls.Id?.value ? this.updateempFP(empFP) : this.addempFP(empFP);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add employee empFP\r\n  addempFP(empFP: IRegisterFPAddEditVM) {\r\n    this.spinner.show();\r\n    this.FingerprintServ.addRegisterFP(empFP).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.dataSource.data.push(res);\r\n        this.itemsCounts++;\r\n        // this.getAllempFPs(this.curPage);\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditempFP(empFP: IRegisterFPGetVM) {\r\n    this.myForm.patchValue(empFP);\r\n    this.formCtrls?.EmployeeId.setValue(empFP.Employee.Id);\r\n  }\r\n\r\n  // update employee empFP\r\n  updateempFP(empFP: IRegisterFPAddEditVM) {\r\n    this.spinner.show();\r\n    this.FingerprintServ.updateRegisterFP(\r\n      this.formCtrls?.Id?.value,\r\n      empFP\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n        this.ToastrMsg.success(\"General.UpdeteSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(empFP: IRegisterFPGetVM): void {\r\n    let title = `${empFP.Code} - ${empFP.Employee.Name}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteempFP(empFP);\r\n      });\r\n  }\r\n\r\n  // delete empFP\r\n  deleteempFP(empFP: IRegisterFPGetVM) {\r\n    this.spinner.show();\r\n    this.FingerprintServ.deleteRegisterFP(empFP.Id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == empFP);\r\n        this.dataSource.data.splice(i, 1);\r\n        this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add empFP -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"Employees.AddFP\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit empFP -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"Employees.UpdateFP\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Employee input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Employees.Employee\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"EmployeeId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Employee of Employees\"\r\n                        [value]=\"Employee.Id\"\r\n                      >\r\n                        {{ Employee.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.EmployeeId.invalid &&\r\n                        (formCtrls?.EmployeeId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.EmployeeId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Date input  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Date\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"Date\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        formCtrls?.Date?.invalid &&\r\n                        (formCtrls?.Date?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.Date?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- FingerPrint input  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Employees.FingerPrint\" | translate }}</mat-label\r\n                    >\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"FingerPrint\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        formCtrls?.FingerPrint?.invalid &&\r\n                        (formCtrls?.FingerPrint?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.FingerPrint?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Notes input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                    <input matInput formControlName=\"Notes\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- IsAbsent -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-label class=\"mr-1\"\r\n                    >{{ \"Employees.IsAbsent\" | translate }}\r\n                  </mat-label>\r\n                  <mat-radio-group\r\n                    class=\"radio-group\"\r\n                    formControlName=\"IsAbsent\"\r\n                  >\r\n                    <mat-radio-button [value]=\"true\" class=\"radio-button\">\r\n                      Yes\r\n                    </mat-radio-button>\r\n                    <mat-radio-button [value]=\"false\" class=\"radio-button\">\r\n                      No\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <!-- add empFP -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit empFP -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Cancel\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Employees.Fingerprints\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Employee column -->\r\n            <ng-container matColumnDef=\"Employee\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.Employee\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Employee.Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Code column -->\r\n            <ng-container matColumnDef=\"Code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Code }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Date column -->\r\n            <ng-container matColumnDef=\"Date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Date | date : \"mediumDate\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Notes column -->\r\n            <ng-container matColumnDef=\"Notes\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Notes }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let empFP\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditempFP(empFP)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(empFP)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllempFPs($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IUploadFPGetVM,\r\n  IUploadFPVM,\r\n} from \"app/dashboard/models/employees/fingerprint\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { FingerprintService } from \"app/dashboard/services/employees/fingerprint.service\";\r\nimport { IfileVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-upload-fingerprint\",\r\n  templateUrl: \"./upload-fingerprint.component.html\",\r\n  styleUrls: [\"./upload-fingerprint.component.scss\"],\r\n})\r\nexport class UploadFingerprintComponent implements OnInit {\r\n  @ViewChild(\"fileInput\") fileInput: ElementRef;\r\n\r\n  EmpFPs: IUploadFPGetVM[] = [];\r\n  Devices: any[] = [{ Id: 1, Name: \"ff\" }];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"Employee\", \"Code\", \"Date\", \"Device\"];\r\n  dataSource: MatTableDataSource<IUploadFPGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private FingerprintServ: FingerprintService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllEmpFPs(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      DeviceId: [\"\", [Validators.required]],\r\n      UploadedData: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllEmpFPs(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all devices\r\n  getAllDevices() {\r\n    this.spinner.show();\r\n    this.FingerprintServ.getAllDevices().subscribe((res) => {\r\n      if (res) this.Devices = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get all Employee EmpFPs\r\n  getAllEmpFPs(page: number) {\r\n    // this.curPage = page;\r\n    // this.spinner.show();\r\n    // this.FingerprintServ.getAllUploadFPs(page).subscribe((res) => {\r\n    //   if (res) {\r\n    //     this.EmpFPs = res.FingerprintsList;\r\n    //     this.dataSource = new MatTableDataSource(this.EmpFPs);\r\n    //     this.itemsCounts = res.countItems;\r\n    //     console.log(\"EmpFPs: >> \", res);\r\n    //   }\r\n    //   this.spinner.hide();\r\n    // });\r\n  }\r\n\r\n  // add Employee EmpFP\r\n  addEmpFP() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let EmpFP = {} as IUploadFPVM;\r\n      EmpFP.EduCompId = this.EduCompId;\r\n      EmpFP.UploadedData = this.formCtrls.UploadedData?.value;\r\n      EmpFP.DeviceId = this.formCtrls.DeviceId?.value;\r\n      console.log(\"EmpFP\", EmpFP);\r\n\r\n      this.spinner.show();\r\n      this.FingerprintServ.uploadFP(EmpFP).subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.dataSource.data.push(res);\r\n          this.itemsCounts++;\r\n          // this.getAllEmpFPs(this.curPage);\r\n          this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // on select file\r\n  onChangeFile(event: any) {\r\n    let fileName = event.target.files[0].name;\r\n    let fileSize = event.target.files[0].size;\r\n    let fileType = event.target.files[0].type;\r\n    let LastModified = event.target.files[0].lastModified;\r\n    let LastModifiedDate = event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n\r\n        let data: IfileVM = {\r\n          FileAsBase64: fileReder.replace(\r\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\",\r\n            \"\"\r\n          ),\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.formCtrls?.UploadedData?.setValue(data);\r\n      };\r\n    }\r\n  }\r\n\r\n  RemoveFile() {\r\n    this.formCtrls.UploadedData.setValue(\"\");\r\n    this.fileInput.nativeElement.value = \"\";\r\n  }\r\n\r\n  downloadTemplate() {}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- upload empFP -->\r\n      <mat-card-title>\r\n        {{ \"Employees.UploadFP\" | translate }}\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/employees/attendance/load-FP\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- UploadedData input -->\r\n                <div class=\"col-md-6 col-12 pt-2\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12 d-flex justify-content-between\">\r\n                      <mat-label>\r\n                        {{ \"Employees.UploadedData\" | translate }}\r\n                      </mat-label>\r\n                      <div>\r\n                        <!-- file input -->\r\n                        <input\r\n                          #fileInput\r\n                          class=\"file-upload\"\r\n                          type=\"file\"\r\n                          (change)=\"onChangeFile($event)\"\r\n                          name=\"File\"\r\n                        />\r\n                        <!-- delete button -->\r\n                        <!-- matTooltip=\"{{ 'General.Delete' | translate }}\" -->\r\n                        <a (click)=\"RemoveFile()\" class=\"danger p-0\">\r\n                          <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                      <mat-hint\r\n                        class=\"text-danger error\"\r\n                        *ngIf=\"\r\n                          formCtrls?.UploadedData.invalid &&\r\n                          (formCtrls?.UploadedData.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"formCtrls?.UploadedData.errors?.required\">\r\n                          <i class=\"ft-alert-circle align-middle\"></i>\r\n                          {{ \"labels.MustSelectFile\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Device input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Employees.Device\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"DeviceId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Device of Devices\"\r\n                        [value]=\"Device.Id\"\r\n                      >\r\n                        {{ Device.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.DeviceId.invalid &&\r\n                        (formCtrls?.DeviceId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.DeviceId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"downloadTemplate()\"\r\n        >\r\n          {{ \"Employees.DownloadTemplate\" | translate }}\r\n        </button>\r\n        <!-- upload -->\r\n        <button mat-raised-button class=\"btn btn-info\" (click)=\"addEmpFP()\">\r\n          {{ \"General.Upload\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Employees.Fingerprints\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Employee column -->\r\n            <ng-container matColumnDef=\"Employee\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.Employee\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Employee.Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Code column -->\r\n            <ng-container matColumnDef=\"Code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Code }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Date column -->\r\n            <ng-container matColumnDef=\"Date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Date | date : \"mediumDate\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Device column -->\r\n            <ng-container matColumnDef=\"Device\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.Device\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let empFP\">\r\n                {{ empFP.Device }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllEmpFPs($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  DepartmentAddEditVM,\r\n  DepartmentGetVM,\r\n} from \"app/dashboard/models/employees/department\";\r\nimport { DepartmentService } from \"app/dashboard/services/employees/department.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-department\",\r\n  templateUrl: \"./department.component.html\",\r\n  styleUrls: [\"./department.component.scss\"],\r\n})\r\nexport class DepartmentComponent implements OnInit {\r\n  Departments: DepartmentGetVM[] = [\r\n    { Id: 1, Ar_Name: \"لل\", En_Name: \"ff\", EduCompId: 2 },\r\n  ];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"Ar_Name\", \"En_Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<DepartmentGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private DepartmentServ: DepartmentService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllEmployeeDepartments(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    // test data\r\n    this.dataSource = new MatTableDataSource(this.Departments);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllEmployeeDepartments(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all departments\r\n  getAllEmployeeDepartments(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.DepartmentServ.getAllEmployeeDepartments(page).subscribe((res) => {\r\n      if (res) {\r\n        this.Departments = res.DepartmentList;\r\n        this.dataSource = new MatTableDataSource(this.Departments);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"Departments: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let department = {} as DepartmentAddEditVM;\r\n      department.EduCompId = this.EduCompId;\r\n      department.Ar_Name = this.formCtrls.Ar_Name?.value;\r\n      department.En_Name = this.formCtrls.En_Name?.value;\r\n      console.log(\"department\", department);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateDepartment(department)\r\n        : this.addDepartment(department);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add department\r\n  addDepartment(department: DepartmentAddEditVM) {\r\n    this.spinner.show();\r\n    this.DepartmentServ.addEmployeeDepartment(department).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.dataSource.data.push(res);\r\n          this.itemsCounts++;\r\n          // this.getAllEmployeeDepartments(this.curPage);\r\n          this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get form values to update\r\n  toEditDepartment(department: DepartmentGetVM) {\r\n    this.myForm.patchValue(department);\r\n  }\r\n\r\n  // update department\r\n  updateDepartment(department: DepartmentAddEditVM) {\r\n    this.spinner.show();\r\n    this.DepartmentServ.updateEmployeeDepartment(\r\n      this.formCtrls.Id.value,\r\n      department\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(department: DepartmentGetVM): void {\r\n    let departmentName =\r\n      this.currentLang == \"ar\" ? department.Ar_Name : department.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: departmentName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteDepartment(department);\r\n      });\r\n  }\r\n\r\n  // delete department\r\n  deleteDepartment(department: DepartmentGetVM) {\r\n    this.spinner.show();\r\n    this.DepartmentServ.deleteEmployeeDepartment(department.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == department);\r\n          this.dataSource.data.splice(i, 1);\r\n\r\n          this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Department -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"EducationalSetup.AddDepartment\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Department -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"EducationalSetup.EditDepartment\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Ar_Name.invalid &&\r\n                        (formCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Ar_Name.errors?.required ||\r\n                          formCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.En_Name.invalid &&\r\n                        (formCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.En_Name.errors?.required ||\r\n                          formCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add Department -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit Department -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Cancel\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.Departments\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let department\">\r\n                {{ department.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let department\">\r\n                {{ department.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let department\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditDepartment(department)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(department)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllEmployeeDepartments($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of departments\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IEmployeeVM } from \"app/dashboard/models/employees/employee\";\r\nimport { EmployeeService } from \"app/dashboard/services/employees/employee.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { country } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-add-employee\",\r\n  templateUrl: \"./add-employee.component.html\",\r\n  styleUrls: [\"./add-employee.component.scss\"],\r\n})\r\nexport class AddEmployeeComponent implements OnInit {\r\n  Employee: IEmployeeVM;\r\n  EmployeeID: number;\r\n\r\n  Countries: country[];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService,\r\n    private fb: FormBuilder,\r\n    private EmployeeServ: EmployeeService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    route.paramMap.subscribe((params) => {\r\n      let id = Number(params.get(\"employeeId\"));\r\n      if (id) {\r\n        this.EmployeeID = id;\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.EmployeeID) this.getEmployeeById();\r\n    this.getAllCountries();\r\n\r\n    this.myForm = this.fb.group({\r\n      Code: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      CountryID: [\"\", [Validators.required]],\r\n      Address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Mobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(/^(010|011|012|015)[0-9]{8}$/),\r\n          CustomeValidator.whiteSpace,\r\n        ],\r\n      ],\r\n      Email: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.EmployeeID) this.getEmployeeById();\r\n      this.getAllCountries();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get educational years\r\n  getAllCountries() {\r\n    this.spinner.show();\r\n    this.EmployeeServ.getAllCountries().subscribe((res) => {\r\n      if (res) this.Countries = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get employee info if edit\r\n  getEmployeeById() {\r\n    this.spinner.show();\r\n    this.EmployeeServ.getEmployeeById(this.EmployeeID).subscribe((res) => {\r\n      if (res) {\r\n        this.Employee = res;\r\n        this.myForm.patchValue(this.Employee);\r\n        // this.formCtrls.CountryID?.setValue(\r\n        //   this.Employee.Country.country_id\r\n        // );\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let employeeInfo = {} as IEmployeeVM;\r\n      employeeInfo.EduCompId = this.EduCompId;\r\n      employeeInfo.Name = this.formCtrls.Name?.value;\r\n      employeeInfo.Code = this.formCtrls.Code?.value;\r\n      employeeInfo.CountryID = this.formCtrls.CountryID?.value;\r\n      employeeInfo.Address = this.formCtrls.Address?.value;\r\n      employeeInfo.Mobile = this.formCtrls.Mobile?.value;\r\n      employeeInfo.Email = this.formCtrls.Email?.value;\r\n      console.log(\"Employee\", employeeInfo);\r\n\r\n      this.EmployeeID\r\n        ? this.updateEmployee(employeeInfo)\r\n        : this.addEmployee(employeeInfo);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add employee Info\r\n  addEmployee(employeeInfo: IEmployeeVM) {\r\n    this.spinner.show();\r\n    this.EmployeeServ.addEmployee(employeeInfo).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        // get employee id after add\r\n        this.EmployeeID = res.ID;\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n        this.submitted = false;\r\n        // this.getEmployeeById();\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // update employee Info\r\n  updateEmployee(employeeInfo: IEmployeeVM) {\r\n    this.spinner.show();\r\n    this.EmployeeServ.updateEmployee(this.EmployeeID, employeeInfo).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n          this.submitted = false;\r\n          // this.getEmployeeById();\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <!-- add Employee -->\r\n        <span *ngIf=\"!EmployeeID\">\r\n          {{ \"Employees.AddEmployee\" | translate }}\r\n        </span>\r\n        <!-- edit Employee -->\r\n        <span *ngIf=\"EmployeeID\">\r\n          {{ \"Employees.UpdateEmployee\" | translate }} -\r\n          <!-- {{\r\n            currentLang == \"ar\" ? Employee?.Ar_Name : Employee?.En_Name\r\n          }} -->\r\n          {{ Employee?.Name }}\r\n        </span>\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/employees/employee/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid mb-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <!-- employee info -->\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Code input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Code\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"Code\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Code?.invalid &&\r\n                        (formCtrls.Code?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.Code?.errors?.required ||\r\n                          formCtrls?.Code?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- name input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Name\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Name?.invalid &&\r\n                        (formCtrls.Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.Name?.errors?.required ||\r\n                          formCtrls?.Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Country input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Country\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"CountryID\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Country of Countries\"\r\n                        [value]=\"Country.country_id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? Country.country_ar_name\r\n                            : Country.country_en_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.CountryID?.invalid &&\r\n                        (formCtrls?.CountryID?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.CountryID?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Address input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Address\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"Address\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Address?.invalid &&\r\n                        (formCtrls?.Address?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.Address?.errors?.required ||\r\n                          formCtrls?.Address?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Mobile input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.MobileNo\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"Mobile\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Mobile?.invalid &&\r\n                        (formCtrls?.Mobile?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.Mobile?.errors?.required ||\r\n                          formCtrls?.Mobile?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.Mobile?.errors?.pattern\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.PhonePattern\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Email input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Email\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"Email\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Email?.invalid &&\r\n                        (formCtrls?.Email?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.Email?.errors?.required ||\r\n                          formCtrls?.Email?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <div>\r\n              <!-- add Employee Info -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-info mb-3 float-right\"\r\n                *ngIf=\"!EmployeeID\"\r\n                (click)=\"onSubmit()\"\r\n              >\r\n                {{ \"General.Add\" | translate }}\r\n              </button>\r\n\r\n              <!-- edit Employee Info -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-info mb-3 float-right\"\r\n                *ngIf=\"EmployeeID\"\r\n                (click)=\"onSubmit()\"\r\n              >\r\n                {{ \"General.Update\" | translate }}\r\n              </button>\r\n\r\n              <!-- reset -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-info bg-light-info mb-3 float-right\"\r\n                (click)=\"myForm.reset(); submitted = false\"\r\n              >\r\n                {{ \"General.Reset\" | translate }}\r\n              </button>\r\n            </div>\r\n\r\n            <hr class=\"break\" />\r\n\r\n            <div class=\"d-flex break\">\r\n              <ul\r\n                ngbNav\r\n                #nav=\"ngbNav\"\r\n                activeId=\"JobInfo\"\r\n                class=\"nav-pills\"\r\n                orientation=\"vertical\"\r\n              >\r\n                <!-- Job Info -->\r\n                <li ngbNavItem=\"JobInfo\">\r\n                  <a ngbNavLink>{{ \"Employees.JobInfo\" | translate }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-employee-job-info\r\n                      [EmployeeID]=\"EmployeeID\"\r\n                    ></app-employee-job-info>\r\n                  </ng-template>\r\n                </li>\r\n\r\n                <!-- Courses Info -->\r\n                <li ngbNavItem=\"Courses\">\r\n                  <a ngbNavLink>{{ \"EducationalSetup.courses\" | translate }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-employee-courses\r\n                      [EmployeeID]=\"EmployeeID\"\r\n                    ></app-employee-courses>\r\n                  </ng-template>\r\n                </li>\r\n\r\n                <!-- experience History -->\r\n                <li ngbNavItem=\"ExperienceHistory\">\r\n                  <a ngbNavLink>{{\r\n                    \"Employees.ExperienceHistory\" | translate\r\n                  }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-employee-experience-history\r\n                      [EmployeeID]=\"EmployeeID\"\r\n                    ></app-employee-experience-history>\r\n                  </ng-template>\r\n                </li>\r\n\r\n                <!-- Attachments -->\r\n                <li ngbNavItem=\"Attachments\">\r\n                  <a ngbNavLink>{{ \"StudentSetup.Attachments\" | translate }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-employee-attachments\r\n                      [EmployeeID]=\"EmployeeID\"\r\n                    ></app-employee-attachments>\r\n                  </ng-template>\r\n                </li>\r\n\r\n                <!-- Certifications Info -->\r\n                <li ngbNavItem=\"Certifications\">\r\n                  <a ngbNavLink>{{ \"Employees.Certifications\" | translate }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-employee-certifications\r\n                      [EmployeeID]=\"EmployeeID\"\r\n                    ></app-employee-certifications>\r\n                  </ng-template>\r\n                </li>\r\n              </ul>\r\n\r\n              <div [ngbNavOutlet]=\"nav\" class=\"ms-4\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IAttachmentAddEditVM,\r\n  IAttachmentGetVM,\r\n  IAttachTypeGetDropdown,\r\n} from \"app/dashboard/models/setup/general-setup/attach-type\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AttachTypeService } from \"app/dashboard/services/setup/general-setup/attach-type.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IfileVM, IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { EmpAttachmentService } from \"app/dashboard/services/employees/emp-attachment.service\";\r\n\r\n@Component({\r\n  selector: \"app-employee-attachments\",\r\n  templateUrl: \"./employee-attachments.component.html\",\r\n  styleUrls: [\"./employee-attachments.component.scss\"],\r\n})\r\nexport class EmployeeAttachmentsComponent implements OnInit {\r\n  @Input(\"EmployeeID\") EmployeeID: number;\r\n\r\n  @ViewChild(\"fileInput\") fileInput: ElementRef;\r\n\r\n  Attachments: IAttachmentGetVM[] = [\r\n    {\r\n      Id: 1,\r\n      EduCompId: 2,\r\n      AttachmentUrl: \"sx\",\r\n      AttachmentType: { Id: 1, Ar_Name: \"ss\", En_Name: \"ax\" },\r\n    },\r\n  ];\r\n  AttachmentTypes: IAttachTypeGetDropdown[] = [];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"AttachmentType\", \"Download\", \"actions\"];\r\n  dataSource: MatTableDataSource<IAttachmentGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private EmpAttachmentServ: EmpAttachmentService,\r\n    private AttachTypeServ: AttachTypeService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.EmployeeID) this.getAllAttachments(1);\r\n    this.getAttachmentTypes();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      Type: [\"\", [Validators.required]],\r\n      File: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // test\r\n    this.dataSource = new MatTableDataSource(this.Attachments);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.EmployeeID) this.getAllAttachments(1);\r\n      this.getAttachmentTypes();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get Attachment Types\r\n  getAttachmentTypes() {\r\n    this.spinner.show();\r\n    this.AttachTypeServ.getAttachTypesDropDown(this.EduCompId).subscribe(\r\n      (res) => {\r\n        if (res) this.AttachmentTypes = res;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get all attachments\r\n  getAllAttachments(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.EmpAttachmentServ.getAllAttachmentsByEmployeeID(\r\n      page,\r\n      this.EmployeeID\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.Attachments = res.AttachmentList;\r\n        this.dataSource = new MatTableDataSource(this.Attachments);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"Attachments: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // on select file\r\n  onChangeFile(event: any) {\r\n    let fileName = event.target.files[0].name;\r\n    let fileSize = event.target.files[0].size;\r\n    let fileType = event.target.files[0].type;\r\n    let LastModified = event.target.files[0].lastModified;\r\n    let LastModifiedDate = event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n\r\n        let data: IfileVM = {\r\n          FileAsBase64: fileReder.replace(\r\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\",\r\n            \"\"\r\n          ),\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.formCtrls?.File?.setValue(data);\r\n      };\r\n    }\r\n  }\r\n\r\n  RemoveFile() {\r\n    this.formCtrls.File.setValue(\"\");\r\n    this.fileInput.nativeElement.value = \"\";\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let attachment = {} as IAttachmentAddEditVM;\r\n      attachment.EduCompId = this.EduCompId;\r\n      attachment.Id = this.formCtrls.Id?.value;\r\n      attachment.AttachmentTypeId = this.formCtrls.Type?.value;\r\n      attachment.AttachmentFile = this.formCtrls.File?.value;\r\n      console.log(\"attachment\", attachment);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateAttachment(attachment)\r\n        : this.addAttachment(attachment);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add attachment\r\n  addAttachment(attachment: IAttachmentAddEditVM) {\r\n    this.spinner.show();\r\n    this.EmpAttachmentServ.addEmpAttachment(\r\n      this.EmployeeID,\r\n      attachment\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.getAllAttachments(this.curPage);\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditAttachment(attachment: IAttachmentGetVM) {\r\n    this.formCtrls?.Id.setValue(attachment.Id);\r\n    this.formCtrls?.Type.setValue(attachment.AttachmentType.Id);\r\n    this.formCtrls?.File.setValue(attachment.AttachmentUrl);\r\n  }\r\n\r\n  // update attachment\r\n  updateAttachment(attachment: IAttachmentAddEditVM) {\r\n    this.spinner.show();\r\n    this.EmpAttachmentServ.updateEmpAttachment(\r\n      this.EmployeeID,\r\n      attachment\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdeteSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(attachment: IAttachmentGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: attachment.AttachmentType,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteAttachment(attachment);\r\n      });\r\n  }\r\n\r\n  // delete attachment\r\n  deleteAttachment(attachment: IAttachmentGetVM) {\r\n    this.spinner.show();\r\n    this.EmpAttachmentServ.deleteEmpAttachment(attachment.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == attachment);\r\n          this.dataSource.data.splice(i, 1);\r\n\r\n          this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Attachment -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"StudentSetup.addAttachment\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Attachment -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"StudentSetup.updateAttachment\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Attachment Type input -->\r\n                <div class=\"col-md-6 col-12 height-150 mb-3\">\r\n                  <div class=\"row h-100\">\r\n                    <div class=\"col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>{{\r\n                          \"StudentSetup.AttachmentType\" | translate\r\n                        }}</mat-label>\r\n                        <mat-select formControlName=\"Type\">\r\n                          <mat-option>{{\r\n                            \"General.Choose\" | translate\r\n                          }}</mat-option>\r\n                          <mat-option\r\n                            *ngFor=\"let AttachmentType of AttachmentTypes\"\r\n                            [value]=\"AttachmentType.Id\"\r\n                          >\r\n                            {{\r\n                              currentLang == \"ar\"\r\n                                ? AttachmentType.Ar_Name\r\n                                : AttachmentType.En_Name\r\n                            }}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            formCtrls?.Type.invalid &&\r\n                            (formCtrls?.Type.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span *ngIf=\"formCtrls?.Type.errors?.required\">\r\n                            <i class=\"ft-alert-circle align-middle\"></i>\r\n                            {{ \"labels.MustChoosevalue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- Attachment file input -->\r\n                    <div class=\"col-12\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-between\">\r\n                          <mat-label>\r\n                            {{ \"StudentSetup.Attachment\" | translate }}\r\n                          </mat-label>\r\n                          <!-- file input -->\r\n                          <input\r\n                            #fileInput\r\n                            class=\"file-upload\"\r\n                            type=\"file\"\r\n                            (change)=\"onChangeFile($event)\"\r\n                            name=\"File\"\r\n                            [disabled]=\"!EmployeeID || !formCtrls?.Type?.value\"\r\n                          />\r\n                          <!-- delete button -->\r\n                          <a\r\n                            (click)=\"RemoveFile()\"\r\n                            class=\"danger p-0\"\r\n                            matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                          >\r\n                            <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                          </a>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                          <mat-hint\r\n                            class=\"text-danger error\"\r\n                            *ngIf=\"\r\n                              formCtrls?.File.invalid &&\r\n                              (formCtrls?.File.touched || submitted) &&\r\n                              formCtrls?.Type?.value\r\n                            \"\r\n                          >\r\n                            <span *ngIf=\"formCtrls?.File.errors?.required\">\r\n                              <i class=\"ft-alert-circle align-middle\"></i>\r\n                              {{ \"labels.MustSelectFile\" | translate }}\r\n                            </span>\r\n                          </mat-hint>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- file preview -->\r\n                <div class=\"col-md-6 col-12 d-flex justify-content-center\">\r\n                  <div class=\"row\">\r\n                    <span class=\"mt-1 mr-2\">\r\n                      <!--  <a\r\n                        [href]=\"formCtrls?.File?.value.FileAsBase64\"\r\n                        target=\"_blank\"\r\n                      > -->\r\n                      <img\r\n                        [class.hideImg]=\"!formCtrls?.File?.value\"\r\n                        [src]=\"formCtrls?.File?.value.FileAsBase64\"\r\n                        class=\"fileReview\"\r\n                        alt=\"{{ 'EducationalSetup.Image' | translate }}\"\r\n                      />\r\n                      <!-- </a> -->\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <!-- reset -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n\r\n        <!-- add Attachment -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          [disabled]=\"!EmployeeID\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit Attachment -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n      <hr class=\"my-1\" />\r\n\r\n      <mat-card-title>\r\n        {{ \"StudentSetup.Attachments\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Attachment Type column -->\r\n            <ng-container matColumnDef=\"AttachmentType\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Type\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let attachment\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? attachment.AttachmentType.Ar_Name\r\n                    : attachment.AttachmentType.En_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Download column -->\r\n            <ng-container matColumnDef=\"Download\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"General.Download\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let attachment\">\r\n                <a [href]=\"attachment.AttachmentUrl\" target=\"_blank\">\r\n                  {{ attachment.AttachmentUrl }}\r\n                </a>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let attachment\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditAttachment(attachment)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(attachment)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllAttachments($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of attachments\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IEmpCertificationVM } from \"app/dashboard/models/employees/employee\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { EmpCertificationService } from \"app/dashboard/services/employees/emp-certification.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-employee-certifications\",\r\n  templateUrl: \"./employee-certifications.component.html\",\r\n  styleUrls: [\"./employee-certifications.component.scss\"],\r\n})\r\nexport class EmployeeCertificationsComponent implements OnInit {\r\n  @Input(\"EmployeeID\") EmployeeID: number;\r\n\r\n  EmpCertifications: IEmpCertificationVM[] = [\r\n    { EduCompId: 2, Id: 2, Name: \"Sx\", FromDate: new Date(), Place: \"dc\" },\r\n  ];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"Name\", \"Place\", \"FromDate\", \"actions\"];\r\n  dataSource: MatTableDataSource<IEmpCertificationVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private EmpCertificationServ: EmpCertificationService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.EmployeeID) this.getAllCertifications(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Place: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      FromDate: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // test\r\n    this.dataSource = new MatTableDataSource(this.EmpCertifications);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.EmployeeID) this.getAllCertifications(1);\r\n    });\r\n\r\n    // console.log(this.EmployeeID);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all employee Certifications\r\n  getAllCertifications(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.EmpCertificationServ.getAllCertificationsByEmployeeID(\r\n      page,\r\n      this.EmployeeID\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.EmpCertifications = res.EmpCertificationList;\r\n        this.dataSource = new MatTableDataSource(this.EmpCertifications);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"Certifications: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let employeeCertification = {} as IEmpCertificationVM;\r\n      employeeCertification.EduCompId = this.EduCompId;\r\n      employeeCertification.Id = this.formCtrls.Id?.value;\r\n      employeeCertification.Name = this.formCtrls.Name?.value;\r\n      employeeCertification.Place = this.formCtrls.Place?.value;\r\n      employeeCertification.FromDate = this.formCtrls.FromDate?.value;\r\n      console.log(\"employeeCertification\", employeeCertification);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateCertification(employeeCertification)\r\n        : this.addCertification(employeeCertification);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add employee Certification\r\n  addCertification(employeeCertification: IEmpCertificationVM) {\r\n    this.spinner.show();\r\n    this.EmpCertificationServ.addEmpCertification(\r\n      this.EmployeeID,\r\n      employeeCertification\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.dataSource.data.push(res);\r\n        this.itemsCounts++;\r\n        // this.getAllCertifications(this.curPage);\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditCertification(employeeCertification: IEmpCertificationVM) {\r\n    this.myForm.patchValue(employeeCertification);\r\n  }\r\n\r\n  // update employee Certification\r\n  updateCertification(employeeCertification: IEmpCertificationVM) {\r\n    this.spinner.show();\r\n    this.EmpCertificationServ.updateEmpCertification(\r\n      this.EmployeeID,\r\n      employeeCertification\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdeteSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(employeeCertification: IEmpCertificationVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: employeeCertification.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteCertification(employeeCertification);\r\n      });\r\n  }\r\n\r\n  // delete employeeCertification\r\n  deleteCertification(employeeCertification: IEmpCertificationVM) {\r\n    this.spinner.show();\r\n    this.EmpCertificationServ.deleteEmpCertification(\r\n      employeeCertification.Id\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e == employeeCertification\r\n        );\r\n        this.dataSource.data.splice(i, 1);\r\n\r\n        this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Certification -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"Employees.AddCertification\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Certification -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"Employees.UpdateCertification\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput formControlName=\"Place\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Name.invalid &&\r\n                        (formCtrls.Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Name.errors?.required ||\r\n                          formCtrls.Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Place input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"Employees.Place\" | translate }} </mat-label>\r\n                    <input matInput formControlName=\"Place\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Place.invalid &&\r\n                        (formCtrls.Place.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Place.errors?.required ||\r\n                          formCtrls.Place.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- From Date input  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"FromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        formCtrls?.FromDate?.invalid &&\r\n                        (formCtrls?.FromDate?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.FromDate?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <!-- reset -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n\r\n        <!-- add Certification -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          [disabled]=\"!EmployeeID\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit Certification -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n      <hr class=\"my-1\" />\r\n\r\n      <mat-card-title>\r\n        {{ \"Employees.Certifications\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Name column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let certification\">\r\n                {{ certification.Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Place column -->\r\n            <ng-container matColumnDef=\"Place\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.Place\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let certification\">\r\n                {{ certification.Place }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- FromDate column -->\r\n            <ng-container matColumnDef=\"FromDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let certification\">\r\n                {{ certification.FromDate | date : \"mediumDate\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let certification\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditCertification(certification)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(certification)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllCertifications($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of certifications\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CourseGetVM } from \"app/dashboard/models/setup/educational-setup/course\";\r\nimport { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IEmpCourseAddEditVM,\r\n  IEmpCourseGetVM,\r\n} from \"app/dashboard/models/employees/employee\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { EmpCourseService } from \"app/dashboard/services/employees/emp-course.service\";\r\nimport { CourseService } from \"app/dashboard/services/setup/educational-setup/course.service\";\r\nimport { ClassRoomGetVM } from \"app/dashboard/models/setup/general-setup/classes/class-room\";\r\nimport { EducationYearService } from \"app/dashboard/services/setup/educational-setup/education-year.service\";\r\nimport { ClassRoomService } from \"app/dashboard/services/setup/general-setup/classes/class-room.service\";\r\nimport { IEducationYear } from \"app/dashboard/models/setup/educational-setup/education-year\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-employee-courses\",\r\n  templateUrl: \"./employee-courses.component.html\",\r\n  styleUrls: [\"./employee-courses.component.scss\"],\r\n})\r\nexport class EmployeeCoursesComponent implements OnInit {\r\n  @Input(\"EmployeeID\") EmployeeID: number;\r\n\r\n  EmpCourses: IEmpCourseGetVM[] = [];\r\n\r\n  Courses: CourseGetVM[] = [];\r\n  EducationYears: IEducationYear[] = [];\r\n  ClassRooms: ClassRoomGetVM[] = [];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"Course\",\r\n    \"EducationaYear\",\r\n    \"ClassRoom\",\r\n    \"LecturePerWeek\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmpCourseGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private EmpCourseServ: EmpCourseService,\r\n    private EducationYearServ: EducationYearService,\r\n    private CourseServ: CourseService,\r\n    private ClassRoomServ: ClassRoomService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.EmployeeID) this.getAllEmpCourses(1);\r\n    this.getAllCourses();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      CourseId: [\"\", [Validators.required]],\r\n      StageId: [\"\", [Validators.required]],\r\n      EducationaYearId: [\"\", [Validators.required]],\r\n      ClassRoomId: [\"\", [Validators.required]],\r\n      LecturePerWeek: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    // test\r\n    this.dataSource = new MatTableDataSource(this.EmpCourses);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.EmployeeID) this.getAllEmpCourses(1);\r\n      this.getAllCourses();\r\n    });\r\n\r\n    console.log(this.EmployeeID);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all employee Courses\r\n  getAllEmpCourses(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.EmpCourseServ.getAllCoursesByEmployeeID(\r\n      page,\r\n      this.EmployeeID\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.EmpCourses = res.EmpCoursesList;\r\n        this.dataSource = new MatTableDataSource(this.EmpCourses);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"Courses: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getAllCourses() {\r\n    this.spinner.show();\r\n    this.CourseServ.getAllCoursesDropDown().subscribe((res) => {\r\n      if (res) this.Courses = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getAllClassRooms() {\r\n    this.spinner.show();\r\n    this.ClassRoomServ.getAllClassRoomsDropDown(this.EduCompId).subscribe(\r\n      (res) => {\r\n        if (res) this.ClassRooms = res;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let employeeCourse = {} as IEmpCourseAddEditVM;\r\n      employeeCourse.EduCompId = this.EduCompId;\r\n      employeeCourse.Id = this.formCtrls.Id?.value;\r\n      employeeCourse.CourseId = this.formCtrls.CourseId?.value;\r\n      // employeeCourse.StageId = this.formCtrls.StageId?.value;\r\n      employeeCourse.EducationaYearId = this.formCtrls.EducationaYearId?.value;\r\n      employeeCourse.ClassRoomId = this.formCtrls.ClassRoomId?.value;\r\n      employeeCourse.LecturePerWeek = this.formCtrls.LecturePerWeek?.value;\r\n      console.log(\"employeeCourse\", employeeCourse);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateEmpCourse(employeeCourse)\r\n        : this.addEmpCourse(employeeCourse);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add employee Course\r\n  addEmpCourse(employeeCourse: IEmpCourseAddEditVM) {\r\n    this.spinner.show();\r\n    this.EmpCourseServ.addEmpCourse(this.EmployeeID, employeeCourse).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.dataSource.data.push(res);\r\n          this.itemsCounts++;\r\n          // this.getAllEmpCourses(this.curPage);\r\n          this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n          this.formCtrls?.ClassRoomId?.setValue(\"\");\r\n          // this.myForm.reset();\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get form values to update\r\n  toEditEmpCourse(employeeCourse: IEmpCourseGetVM) {\r\n    this.myForm.patchValue(employeeCourse);\r\n    this.formCtrls?.CourseId.setValue(employeeCourse.Course.id);\r\n    this.formCtrls?.EducationYearId.setValue(\r\n      employeeCourse.EducationaYear.eduYearId\r\n    );\r\n    this.formCtrls?.EducationYearId.setValue(\r\n      employeeCourse.EducationaYear.eduYearId\r\n    );\r\n    this.formCtrls?.EducationYearId.setValue(employeeCourse.ClassRoom.id);\r\n  }\r\n\r\n  // update employee Course\r\n  updateEmpCourse(employeeCourse: IEmpCourseAddEditVM) {\r\n    this.spinner.show();\r\n    this.EmpCourseServ.updateEmpCourse(\r\n      this.EmployeeID,\r\n      employeeCourse\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdeteSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(employeeCourse: IEmpCourseGetVM): void {\r\n    let title =\r\n      this.currentLang == \"ar\"\r\n        ? `${employeeCourse.Course.subject_ar_name} - ${employeeCourse.EducationaYear.ar_name}`\r\n        : `${employeeCourse.Course.subject_en_name} - ${employeeCourse.EducationaYear.en_name}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteEmpCourse(employeeCourse);\r\n      });\r\n  }\r\n\r\n  // delete employeeCourse\r\n  deleteEmpCourse(employeeCourse: IEmpCourseGetVM) {\r\n    this.spinner.show();\r\n    this.EmpCourseServ.deleteEmpCourse(employeeCourse.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == employeeCourse);\r\n          this.dataSource.data.splice(i, 1);\r\n\r\n          this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Course -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"EducationalSetup.addCourse\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Course -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"EducationalSetup.updateCourse\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Course input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <all-cources-dropdown\r\n                    [control]=\"formCtrls?.CourseId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></all-cources-dropdown>\r\n                </div>\r\n\r\n                <!-- Stage input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-educational-stage-dropdown\r\n                    [control]=\"formCtrls?.StageId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-educational-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Stage input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <educational-year-by-stage-dropdown\r\n                    [stageControl]=\"formCtrls?.StageId\"\r\n                    [control]=\"formCtrls?.EducationaYearId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></educational-year-by-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Class Room input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"classes.classRoom\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"ClassRoomId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ClassRoom of ClassRooms\"\r\n                        [value]=\"ClassRoom.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? ClassRoom.Ar_Name\r\n                            : ClassRoom.En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.ClassRoomId.invalid &&\r\n                        (formCtrls?.ClassRoomId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.ClassRoomId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Lecture Per Week input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Employees.LecturePerWeek\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"LecturePerWeek\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.LecturePerWeek.invalid &&\r\n                        (formCtrls?.LecturePerWeek.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.LecturePerWeek.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.LecturePerWeek.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <!-- reset -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n\r\n        <!-- add Course -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          [disabled]=\"!EmployeeID\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit Course -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n      <hr class=\"my-1\" />\r\n\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.courses\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Course column -->\r\n            <ng-container matColumnDef=\"Course\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.Course\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? course.Course.Ar_Name\r\n                    : course.Course.En_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Educationa Year column -->\r\n            <ng-container matColumnDef=\"EducationaYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? course.EducationaYear.Educational_year_ar_name\r\n                    : course.EducationaYear.Educational_year_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- ClassRoom column -->\r\n            <ng-container matColumnDef=\"ClassRoom\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"classes.classRoom\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.ClassRoom.RoomCode }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Lecture Per Week column -->\r\n            <ng-container matColumnDef=\"LecturePerWeek\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.LecturePerWeek\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.LecturePerWeek }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let course\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditEmpCourse(course)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(course)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllEmpCourses($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of courses\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IEmpExperienceHistoryVM } from \"app/dashboard/models/employees/employee\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { EmpExperienceHistoryService } from \"app/dashboard/services/employees/emp-experience-history.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-employee-experience-history\",\r\n  templateUrl: \"./employee-experience-history.component.html\",\r\n  styleUrls: [\"./employee-experience-history.component.scss\"],\r\n})\r\nexport class EmployeeExperienceHistoryComponent implements OnInit {\r\n  @Input(\"EmployeeID\") EmployeeID: number;\r\n\r\n  EmpExperiences: IEmpExperienceHistoryVM[] = [\r\n    {\r\n      Id: 2,\r\n      EduCompId: 2,\r\n      FromDate: new Date(),\r\n      JobTitle: \"sx\",\r\n      Place: \"Sx\",\r\n      ToDate: new Date(),\r\n    },\r\n  ];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"Place\",\r\n    \"JobTitle\",\r\n    \"FromDate\",\r\n    \"ToDate\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmpExperienceHistoryVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private EmpExperienceServ: EmpExperienceHistoryService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.EmployeeID) this.getAllExperiences(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      Place: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      JobTitle: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      FromDate: [\"\", [Validators.required]],\r\n      ToDate: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // test\r\n    this.dataSource = new MatTableDataSource(this.EmpExperiences);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.EmployeeID) this.getAllExperiences(1);\r\n    });\r\n\r\n    // console.log(this.EmployeeID);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all employee Experiences\r\n  getAllExperiences(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.EmpExperienceServ.getAllExperienceHistorysByEmployeeID(\r\n      page,\r\n      this.EmployeeID\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.EmpExperiences = res.EmpExperienceList;\r\n        this.dataSource = new MatTableDataSource(this.EmpExperiences);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"Experiences: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let employeeExperience = {} as IEmpExperienceHistoryVM;\r\n      employeeExperience.EduCompId = this.EduCompId;\r\n      employeeExperience.Id = this.formCtrls.Id?.value;\r\n      employeeExperience.Place = this.formCtrls.Place?.value;\r\n      employeeExperience.JobTitle = this.formCtrls.JobTitle?.value;\r\n      employeeExperience.FromDate = this.formCtrls.FromDate?.value;\r\n      employeeExperience.ToDate = this.formCtrls.ToDate?.value;\r\n      console.log(\"employeeExperience\", employeeExperience);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateExperienceHistory(employeeExperience)\r\n        : this.addExperienceHistory(employeeExperience);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add employee Experience\r\n  addExperienceHistory(employeeExperience: IEmpExperienceHistoryVM) {\r\n    this.spinner.show();\r\n    this.EmpExperienceServ.addEmpExperienceHistory(\r\n      this.EmployeeID,\r\n      employeeExperience\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.dataSource.data.push(res);\r\n        this.itemsCounts++;\r\n        // this.getAllExperiences(this.curPage);\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditExperience(employeeExperience: IEmpExperienceHistoryVM) {\r\n    this.myForm.patchValue(employeeExperience);\r\n  }\r\n\r\n  // update employee Experience\r\n  updateExperienceHistory(employeeExperience: IEmpExperienceHistoryVM) {\r\n    this.spinner.show();\r\n    this.EmpExperienceServ.updateEmpExperienceHistory(\r\n      this.EmployeeID,\r\n      employeeExperience\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdeteSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(employeeExperience: IEmpExperienceHistoryVM): void {\r\n    let title = `${employeeExperience.Place} - ${employeeExperience.JobTitle}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteExperience(employeeExperience);\r\n      });\r\n  }\r\n\r\n  // delete employeeExperience\r\n  deleteExperience(employeeExperience: IEmpExperienceHistoryVM) {\r\n    this.spinner.show();\r\n    this.EmpExperienceServ.deleteEmpExperienceHistory(\r\n      employeeExperience.Id\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == employeeExperience);\r\n        this.dataSource.data.splice(i, 1);\r\n\r\n        this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Experience -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"Employees.AddExperience\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Experience -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"Employees.UpdateExperience\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Place input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"Employees.Place\" | translate }} </mat-label>\r\n                    <input matInput formControlName=\"Place\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Place.invalid &&\r\n                        (formCtrls.Place.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Place.errors?.required ||\r\n                          formCtrls.Place.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Job Title input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Employees.JobTitle\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"JobTitle\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.JobTitle.invalid &&\r\n                        (formCtrls.JobTitle.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.JobTitle.errors?.required ||\r\n                          formCtrls.JobTitle.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- From Date input  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"FromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        formCtrls?.FromDate?.invalid &&\r\n                        (formCtrls?.FromDate?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.FromDate?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- To Date input  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"ToDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        formCtrls?.ToDate?.invalid &&\r\n                        (formCtrls?.ToDate?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.ToDate?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <!-- reset -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n\r\n        <!-- add Experience -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          [disabled]=\"!EmployeeID\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit Experience -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n      <hr class=\"my-1\" />\r\n\r\n      <mat-card-title>\r\n        {{ \"Employees.Experiences\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Place column -->\r\n            <ng-container matColumnDef=\"Place\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.Place\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let experience\">\r\n                {{ experience.Place }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Job Title column -->\r\n            <ng-container matColumnDef=\"JobTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.JobTitle\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let experience\">\r\n                {{ experience.JobTitle }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- FromDate column -->\r\n            <ng-container matColumnDef=\"FromDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let experience\">\r\n                {{ experience.FromDate | date : \"mediumDate\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- ToDate column -->\r\n            <ng-container matColumnDef=\"ToDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let experience\">\r\n                {{ experience.ToDate | date : \"mediumDate\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let experience\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditExperience(experience)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(experience)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllExperiences($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of experiences\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IEmployeeVM } from \"app/dashboard/models/employees/employee\";\r\nimport { EmployeeService } from \"app/dashboard/services/employees/employee.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-employee-index\",\r\n  templateUrl: \"./employee-index.component.html\",\r\n  styleUrls: [\"./employee-index.component.scss\"],\r\n})\r\nexport class EmployeeIndexComponent implements OnInit {\r\n  Employees: any[] = [\r\n    {\r\n      Id: 1,\r\n      Code: \"hh\",\r\n      Email: \"vgnjj\",\r\n      Mobile: \"01254813232\",\r\n      Name: \"Ss\",\r\n      Address: \"hhh\",\r\n      EduCompId: 2,\r\n      CountryID: 1,\r\n    },\r\n  ];\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"Code\",\r\n    \"Name\",\r\n    \"Mobile\",\r\n    \"Email\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmployeeVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private EmployeeServ: EmployeeService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllEmployees(1);\r\n\r\n    // test\r\n    this.dataSource = new MatTableDataSource(this.Employees);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllEmployees(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // get all employees\r\n  getAllEmployees(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.EmployeeServ.getAllEmployees(page).subscribe((res) => {\r\n      if (res) {\r\n        this.Employees = res.EmployeeList;\r\n        this.dataSource = new MatTableDataSource(this.Employees);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"Employees: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(employee: IEmployeeVM): void {\r\n    let name = `${employee.Code} - ${employee.Name}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteEmployee(employee);\r\n      });\r\n  }\r\n\r\n  // delete employee\r\n  deleteEmployee(employee: IEmployeeVM) {\r\n    this.spinner.show();\r\n    this.EmployeeServ.deleteEmployee(employee.Id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == employee);\r\n        this.dataSource.data.splice(i, 1);\r\n\r\n        this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <!-- add Employee -->\r\n    <a\r\n      mat-raised-button\r\n      routerLink=\"/dashboard/employees/employee/add-employee\"\r\n      [queryParams]=\"{\r\n        functionId: functionId\r\n      }\"\r\n      class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n    >\r\n      {{ \"General.Add\" | translate }}\r\n    </a>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Employees.Employees\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Code column -->\r\n            <ng-container matColumnDef=\"Code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"General.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let employee\">\r\n                {{ employee.Code }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- name column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let employee\">\r\n                {{ employee.Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Mobile column -->\r\n            <ng-container matColumnDef=\"Mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let employee\">\r\n                {{ employee.Mobile }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Email column -->\r\n            <ng-container matColumnDef=\"Email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let employee\">\r\n                {{ employee.Email }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let employee\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    routerLink=\"/dashboard/employees/employee/edit-employee/{{\r\n                      employee.Id\r\n                    }}\"\r\n                    [queryParams]=\"{\r\n                      functionId: functionId\r\n                    }\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(employee)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllEmployees($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of employees\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IEmpJobInfoAddEditVM,\r\n  IEmpJobInfoGetVM,\r\n} from \"app/dashboard/models/employees/employee\";\r\nimport { JobTitleGetVM } from \"app/dashboard/models/employees/job-title\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { DepartmentGetVM } from \"app/dashboard/models/employees/department\";\r\nimport { EmpJobInfoService } from \"app/dashboard/services/employees/emp-job-info.service\";\r\nimport { JobTitleService } from \"app/dashboard/services/employees/job-title.service\";\r\nimport { DepartmentService } from \"app/dashboard/services/employees/department.service\";\r\n\r\n@Component({\r\n  selector: \"app-employee-job-info\",\r\n  templateUrl: \"./employee-job-info.component.html\",\r\n  styleUrls: [\"./employee-job-info.component.scss\"],\r\n})\r\nexport class EmployeeJobInfoComponent implements OnInit {\r\n  @Input(\"EmployeeID\") EmployeeID: number;\r\n\r\n  EmpJobInfos: IEmpJobInfoGetVM[] = [\r\n    {\r\n      Id: 1,\r\n      EduCompId: 2,\r\n      Department: { Ar_Name: \"ss\", EduCompId: 2, En_Name: \"ss\", Id: 2 },\r\n      FromDate: new Date(),\r\n      JobTitle: { Ar_Name: \"ss\", EduCompId: 2, En_Name: \"ss\", Id: 2 },\r\n      ToDate: new Date(),\r\n    },\r\n  ];\r\n\r\n  Departments: DepartmentGetVM[] = [];\r\n  JobTitles: JobTitleGetVM[] = [];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"Department\",\r\n    \"JobTitle\",\r\n    \"FromDate\",\r\n    \"ToDate\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmpJobInfoGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private EmpJobInfoServ: EmpJobInfoService,\r\n    private JobTitleServ: JobTitleService,\r\n    private DepartmentServ: DepartmentService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.EmployeeID) this.getAllJobInfos(1);\r\n    this.getAllDepartments();\r\n    this.getAllJobTitles();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      DepartmentId: [\"\", [Validators.required]],\r\n      JobTitleId: [\"\", [Validators.required]],\r\n      FromDate: [\"\", [Validators.required]],\r\n      ToDate: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // test\r\n    this.dataSource = new MatTableDataSource(this.EmpJobInfos);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.EmployeeID) this.getAllJobInfos(1);\r\n      this.getAllDepartments();\r\n      this.getAllJobTitles();\r\n    });\r\n\r\n    // console.log(this.EmployeeID);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all employee JobInfos\r\n  getAllJobInfos(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.EmpJobInfoServ.getAllJobInfosByEmployeeID(\r\n      page,\r\n      this.EmployeeID\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.EmpJobInfos = res.EmpJobInfosList;\r\n        this.dataSource = new MatTableDataSource(this.EmpJobInfos);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"JobInfos: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getAllDepartments() {\r\n    this.spinner.show();\r\n    this.DepartmentServ.getEmployeeDepartmentsDropDown().subscribe((res) => {\r\n      if (res) this.Departments = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getAllJobTitles() {\r\n    this.spinner.show();\r\n    this.JobTitleServ.getEmployeeJobTitlesDropDown().subscribe((res) => {\r\n      if (res) this.JobTitles = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let employeeJobInfo = {} as IEmpJobInfoAddEditVM;\r\n      employeeJobInfo.EduCompId = this.EduCompId;\r\n      employeeJobInfo.Id = this.formCtrls.Id?.value;\r\n      employeeJobInfo.DepartmentId = this.formCtrls.DepartmentId?.value;\r\n      employeeJobInfo.JobTitleId = this.formCtrls.JobTitleId?.value;\r\n      employeeJobInfo.FromDate = this.formCtrls.FromDate?.value;\r\n      employeeJobInfo.ToDate = this.formCtrls.ToDate?.value;\r\n      console.log(\"employeeJobInfo\", employeeJobInfo);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateJobInfo(employeeJobInfo)\r\n        : this.addJobInfo(employeeJobInfo);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add employee JobInfo\r\n  addJobInfo(employeeJobInfo: IEmpJobInfoAddEditVM) {\r\n    this.spinner.show();\r\n    this.EmpJobInfoServ.addEmpJobInfo(\r\n      this.EmployeeID,\r\n      employeeJobInfo\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.dataSource.data.push(res);\r\n        this.itemsCounts++;\r\n        // this.getAllJobInfos(this.curPage);\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditJobInfo(employeeJobInfo: IEmpJobInfoGetVM) {\r\n    this.myForm.patchValue(employeeJobInfo);\r\n    this.formCtrls?.DepartmentId.setValue(employeeJobInfo.Department.Id);\r\n    this.formCtrls?.JobTitleId.setValue(employeeJobInfo.JobTitle.Id);\r\n  }\r\n\r\n  // update employee JobInfo\r\n  updateJobInfo(employeeJobInfo: IEmpJobInfoAddEditVM) {\r\n    this.spinner.show();\r\n    this.EmpJobInfoServ.updateEmpJobInfo(\r\n      this.EmployeeID,\r\n      employeeJobInfo\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdeteSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(employeeJobInfo: IEmpJobInfoGetVM): void {\r\n    let title = `${employeeJobInfo.FromDate} - ${employeeJobInfo.ToDate}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJobInfo(employeeJobInfo);\r\n      });\r\n  }\r\n\r\n  // delete employeeJobInfo\r\n  deleteJobInfo(employeeJobInfo: IEmpJobInfoGetVM) {\r\n    this.spinner.show();\r\n    this.EmpJobInfoServ.deleteEmpJobInfo(employeeJobInfo.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == employeeJobInfo);\r\n          this.dataSource.data.splice(i, 1);\r\n\r\n          this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add JobInfo -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"Employees.AddJob\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit JobInfo -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"Employees.UpdateJob\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Department input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"GeneralSetup.Department\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"DepartmentId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Department of Departments\"\r\n                        [value]=\"Department.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? Department.Ar_Name\r\n                            : Department.En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.DepartmentId.invalid &&\r\n                        (formCtrls?.DepartmentId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.DepartmentId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Job Title input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Employees.JobTitle\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"JobTitleId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let JobTitle of JobTitles\"\r\n                        [value]=\"JobTitle.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? JobTitle.Ar_Name\r\n                            : JobTitle.En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.JobTitleId.invalid &&\r\n                        (formCtrls?.JobTitleId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.JobTitleId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- From Date input  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"FromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        formCtrls?.FromDate?.invalid &&\r\n                        (formCtrls?.FromDate?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.FromDate?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- To Date input  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"ToDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        formCtrls?.ToDate?.invalid &&\r\n                        (formCtrls?.ToDate?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.ToDate?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <!-- reset -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n\r\n        <!-- add JobInfo -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          [disabled]=\"!EmployeeID\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit JobInfo -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n      <hr class=\"my-1\" />\r\n\r\n      <mat-card-title> {{ \"Employees.Jobs\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Department column -->\r\n            <ng-container matColumnDef=\"Department\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"GeneralSetup.Department\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobInfo\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? jobInfo.Department.Ar_Name\r\n                    : jobInfo.Department.En_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- JobTitle column -->\r\n            <ng-container matColumnDef=\"JobTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Employees.JobTitle\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobInfo\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? jobInfo.JobTitle?.Ar_Name\r\n                    : jobInfo.JobTitle?.En_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- FromDate column -->\r\n            <ng-container matColumnDef=\"FromDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobInfo\">\r\n                {{ jobInfo.FromDate | date : \"mediumDate\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- ToDate column -->\r\n            <ng-container matColumnDef=\"ToDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobInfo\">\r\n                {{ jobInfo.ToDate | date : \"mediumDate\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let jobInfo\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditJobInfo(jobInfo)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(jobInfo)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllJobInfos($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of jobInfos\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DepartmentComponent } from \"app/dashboard/pages/employees/department/department.component\";\r\nimport { JobTitleComponent } from \"app/dashboard/pages/employees/job-title/job-title.component\";\r\nimport { AddEmployeeComponent } from \"./employee/add-employee/add-employee.component\";\r\nimport { EmployeeIndexComponent } from \"./employee/employee-index/employee-index.component\";\r\nimport { LoadFingerprintIndexComponent } from \"app/dashboard/pages/employees/attendance/load-fingerprint-index/load-fingerprint-index.component\";\r\nimport { RegisterFingerprintComponent } from \"app/dashboard/pages/employees/attendance/register-fingerprint/register-fingerprint.component\";\r\nimport { UploadFingerprintComponent } from \"./attendance/upload-fingerprint/upload-fingerprint.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"employee\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: EmployeeIndexComponent,\r\n      },\r\n      {\r\n        path: \"edit-employee/:employeeId\",\r\n        component: AddEmployeeComponent,\r\n      },\r\n      {\r\n        path: \"add-employee\",\r\n        component: AddEmployeeComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"department\",\r\n    component: DepartmentComponent,\r\n  },\r\n  {\r\n    path: \"job-title\",\r\n    component: JobTitleComponent,\r\n  },\r\n  {\r\n    path: \"attendance\",\r\n    children: [\r\n      {\r\n        path: \"load-FP\",\r\n        component: LoadFingerprintIndexComponent,\r\n      },\r\n      // {\r\n      //   path: \"upload-FP\",\r\n      //   component: UploadFingerprintComponent,\r\n      // },\r\n      {\r\n        path: \"register-FP\",\r\n        component: RegisterFingerprintComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EmployeesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EmployeesRoutingModule } from './employees-routing.module';\r\nimport { DepartmentComponent } from './department/department.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { MaterialModule } from 'app/shared/material/material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { JobTitleComponent } from './job-title/job-title.component';\r\nimport { EmployeeIndexComponent } from './employee/employee-index/employee-index.component';\r\nimport { AddEmployeeComponent } from './employee/add-employee/add-employee.component';\r\nimport { EmployeeJobInfoComponent } from './employee/employee-job-info/employee-job-info.component';\r\nimport { EmployeeCoursesComponent } from './employee/employee-courses/employee-courses.component';\r\nimport { EmployeeExperienceHistoryComponent } from './employee/employee-experience-history/employee-experience-history.component';\r\nimport { EmployeeAttachmentsComponent } from './employee/employee-attachments/employee-attachments.component';\r\nimport { EmployeeCertificationsComponent } from './employee/employee-certifications/employee-certifications.component';\r\nimport { LoadFingerprintIndexComponent } from './attendance/load-fingerprint-index/load-fingerprint-index.component';\r\nimport { RegisterFingerprintComponent } from './attendance/register-fingerprint/register-fingerprint.component';\r\nimport { UploadFingerprintComponent } from './attendance/upload-fingerprint/upload-fingerprint.component';\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DepartmentComponent,\r\n    JobTitleComponent,\r\n    EmployeeIndexComponent,\r\n    AddEmployeeComponent,\r\n    EmployeeJobInfoComponent,\r\n    EmployeeCoursesComponent,\r\n    EmployeeExperienceHistoryComponent,\r\n    EmployeeAttachmentsComponent,\r\n    EmployeeCertificationsComponent,\r\n    LoadFingerprintIndexComponent,\r\n    RegisterFingerprintComponent,\r\n    UploadFingerprintComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    EmployeesRoutingModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class EmployeesModule { }\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  JobTitleAddEditVM,\r\n  JobTitleGetVM,\r\n} from \"app/dashboard/models/employees/job-title\";\r\nimport { JobTitleService } from \"app/dashboard/services/employees/job-title.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-job-title\",\r\n  templateUrl: \"./job-title.component.html\",\r\n  styleUrls: [\"./job-title.component.scss\"],\r\n})\r\nexport class JobTitleComponent implements OnInit {\r\n  JobTitles: JobTitleGetVM[] = [\r\n    { Id: 1, Ar_Name: \"لل\", En_Name: \"ff\", EduCompId: 2 },\r\n  ];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"Ar_Name\", \"En_Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<JobTitleGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private JobTitleServ: JobTitleService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllEmployeeJobTitles(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    // test data\r\n    this.dataSource = new MatTableDataSource(this.JobTitles);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllEmployeeJobTitles(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all jobTitles\r\n  getAllEmployeeJobTitles(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.JobTitleServ.getAllEmployeeJobTitles(page).subscribe((res) => {\r\n      if (res) {\r\n        this.JobTitles = res.JobTitleList;\r\n        this.dataSource = new MatTableDataSource(this.JobTitles);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"JobTitles: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let jobTitle = {} as JobTitleAddEditVM;\r\n      jobTitle.EduCompId = this.EduCompId;\r\n      jobTitle.Ar_Name = this.formCtrls.Ar_Name?.value;\r\n      jobTitle.En_Name = this.formCtrls.En_Name?.value;\r\n      console.log(\"jobTitle\", jobTitle);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateJobTitle(jobTitle)\r\n        : this.addJobTitle(jobTitle);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add jobTitle\r\n  addJobTitle(jobTitle: JobTitleAddEditVM) {\r\n    this.spinner.show();\r\n    this.JobTitleServ.addEmployeeJobTitle(jobTitle).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.dataSource.data.push(res);\r\n        this.itemsCounts++;\r\n        // this.getAllEmployeeJobTitles(this.curPage);\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditJobTitle(jobTitle: JobTitleGetVM) {\r\n    this.myForm.patchValue(jobTitle);\r\n  }\r\n\r\n  // update jobTitle\r\n  updateJobTitle(jobTitle: JobTitleAddEditVM) {\r\n    this.spinner.show();\r\n    this.JobTitleServ.updateEmployeeJobTitle(\r\n      this.formCtrls.Id.value,\r\n      jobTitle\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(jobTitle: JobTitleGetVM): void {\r\n    let jobTitleName =\r\n      this.currentLang == \"ar\" ? jobTitle.Ar_Name : jobTitle.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: jobTitleName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJobTitle(jobTitle);\r\n      });\r\n  }\r\n\r\n  // delete jobTitle\r\n  deleteJobTitle(jobTitle: JobTitleGetVM) {\r\n    this.spinner.show();\r\n    this.JobTitleServ.deleteEmployeeJobTitle(jobTitle.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == jobTitle);\r\n          this.dataSource.data.splice(i, 1);\r\n\r\n          this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add JobTitle -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"Employees.AddJobTitle\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit JobTitle -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"Employees.EditJobTitle\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Ar_Name.invalid &&\r\n                        (formCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Ar_Name.errors?.required ||\r\n                          formCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.En_Name.invalid &&\r\n                        (formCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.En_Name.errors?.required ||\r\n                          formCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add JobTitle -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit JobTitle -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Cancel\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Employees.JobTitles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobTitle\">\r\n                {{ jobTitle.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobTitle\">\r\n                {{ jobTitle.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let jobTitle\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditJobTitle(jobTitle)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(jobTitle)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllEmployeeJobTitles($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of jobTitles\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  DepartmentAddEditVM,\r\n  DepartmentGetResponseVM,\r\n  DepartmentGetVM,\r\n} from \"app/dashboard/models/employees/department\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DepartmentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All  Departments by page\r\n  getAllEmployeeDepartments(page: number): Observable<DepartmentGetResponseVM> {\r\n    return this.http.get<DepartmentGetResponseVM>(\r\n      `${environment.baseUrl}Departments/getAllEmployeeDepartments/${page}`\r\n    );\r\n  }\r\n\r\n  // Return All Departments > dropDown list\r\n  getEmployeeDepartmentsDropDown(): Observable<DepartmentGetVM[]> {\r\n    return this.http.get<DepartmentGetVM[]>(\r\n      `${environment.baseUrl}Departments/getAllDepartmentsDropDown`\r\n    );\r\n  }\r\n\r\n  //Add New Department\r\n  addEmployeeDepartment(data: DepartmentAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Departments/addDepartment`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update Department\r\n  updateEmployeeDepartment(id: number, data: DepartmentAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}Departments/updateDepartment${id}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Department\r\n  deleteEmployeeDepartment(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Departments/deleteDepartment/${id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IAttachmentAddEditVM,\r\n  IAttachmentResponseVM,\r\n} from \"app/dashboard/models/setup/general-setup/attach-type\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, shareReplay } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmpAttachmentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All EmpAttachments\r\n  getAllAttachmentsByEmployeeID(\r\n    page: number,\r\n    empId: number\r\n  ): Observable<IAttachmentResponseVM> {\r\n    return this.http.get<IAttachmentResponseVM>(\r\n      `${environment.baseUrl}EmpAttachments/GetAllEmpAttachments/${page}/${empId}`\r\n    );\r\n  }\r\n\r\n  // add EmpAttachment\r\n  addEmpAttachment(empId: number, empAttachment: IAttachmentAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}EmpAttachments/addEmpAttachment/${empId}`,\r\n      empAttachment\r\n    );\r\n  }\r\n\r\n  // update EmpAttachment\r\n  updateEmpAttachment(empId: number, empAttachment: IAttachmentAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}EmpAttachments/updateEmpAttachment/${empId}`,\r\n      empAttachment\r\n    );\r\n  }\r\n\r\n  // delete EmpAttachment\r\n  deleteEmpAttachment(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}EmpAttachments/deleteEmpAttachment/${id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpCertificationGetResponseVM,\r\n  IEmpCertificationVM,\r\n} from \"app/dashboard/models/employees/employee\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmpCertificationService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All EmpCertifications\r\n  getAllCertificationsByEmployeeID(\r\n    page: number,\r\n    empId: number\r\n  ): Observable<IEmpCertificationGetResponseVM> {\r\n    return this.http.get<IEmpCertificationGetResponseVM>(\r\n      `${environment.baseUrl}EmpCertifications/GetAllEmpCertifications/${page}/${empId}`\r\n    );\r\n  }\r\n\r\n  // add EmpCertification\r\n  addEmpCertification(empId: number, empCertification: IEmpCertificationVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}EmpCertifications/addEmpCertification/${empId}`,\r\n      empCertification\r\n    );\r\n  }\r\n\r\n  // update EmpCertification\r\n  updateEmpCertification(empId: number, empCertification: IEmpCertificationVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}EmpCertifications/updateEmpCertification/${empId}`,\r\n      empCertification\r\n    );\r\n  }\r\n\r\n  // delete EmpCertification\r\n  deleteEmpCertification(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}EmpCertifications/deleteEmpCertification/${id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpCourseAddEditVM,\r\n  IEmpCourseGetResponseVM,\r\n} from \"app/dashboard/models/employees/employee\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmpCourseService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All EmpCourses\r\n  getAllCoursesByEmployeeID(\r\n    page: number,\r\n    empId: number\r\n  ): Observable<IEmpCourseGetResponseVM> {\r\n    return this.http.get<IEmpCourseGetResponseVM>(\r\n      `${environment.baseUrl}EmpCourses/GetAllEmpCourses/${page}/${empId}`\r\n    );\r\n  }\r\n\r\n  // add EmpCourse\r\n  addEmpCourse(empId: number, empCourse: IEmpCourseAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}EmpCourses/addEmpCourse/${empId}`,\r\n      empCourse\r\n    );\r\n  }\r\n\r\n  // update EmpCourse\r\n  updateEmpCourse(empId: number, empCourse: IEmpCourseAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}EmpCourses/updateEmpCourse/${empId}`,\r\n      empCourse\r\n    );\r\n  }\r\n\r\n  // delete EmpCourse\r\n  deleteEmpCourse(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}EmpCourses/deleteEmpCourse/${id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpExperienceHistoryGetResponseVM,\r\n  IEmpExperienceHistoryVM,\r\n} from \"app/dashboard/models/employees/employee\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmpExperienceHistoryService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All EmpExperienceHistorys\r\n  getAllExperienceHistorysByEmployeeID(\r\n    page: number,\r\n    empId: number\r\n  ): Observable<IEmpExperienceHistoryGetResponseVM> {\r\n    return this.http.get<IEmpExperienceHistoryGetResponseVM>(\r\n      `${environment.baseUrl}EmpExperienceHistorys/GetAllEmpExperienceHistorys/${page}/${empId}`\r\n    );\r\n  }\r\n\r\n  // add EmpExperienceHistory\r\n  addEmpExperienceHistory(\r\n    empId: number,\r\n    empExperienceHistory: IEmpExperienceHistoryVM\r\n  ) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}EmpExperienceHistorys/addEmpExperienceHistory/${empId}`,\r\n      empExperienceHistory\r\n    );\r\n  }\r\n\r\n  // update EmpExperienceHistory\r\n  updateEmpExperienceHistory(\r\n    empId: number,\r\n    empExperienceHistory: IEmpExperienceHistoryVM\r\n  ) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}EmpExperienceHistorys/updateEmpExperienceHistory/${empId}`,\r\n      empExperienceHistory\r\n    );\r\n  }\r\n\r\n  // delete EmpExperienceHistory\r\n  deleteEmpExperienceHistory(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}EmpExperienceHistorys/deleteEmpExperienceHistory/${id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpJobInfoAddEditVM,\r\n  IEmpJobInfoGetResponseVM,\r\n} from \"app/dashboard/models/employees/employee\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmpJobInfoService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All EmpJobInfos\r\n  getAllJobInfosByEmployeeID(\r\n    page: number,\r\n    empId: number\r\n  ): Observable<IEmpJobInfoGetResponseVM> {\r\n    return this.http.get<IEmpJobInfoGetResponseVM>(\r\n      `${environment.baseUrl}EmpJobInfos/GetAllEmpJobInfos/${page}/${empId}`\r\n    );\r\n  }\r\n\r\n  // add EmpJobInfo\r\n  addEmpJobInfo(empId: number, empJobInfo: IEmpJobInfoAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}EmpJobInfos/addEmpJobInfo/${empId}`,\r\n      empJobInfo\r\n    );\r\n  }\r\n\r\n  // update EmpJobInfo\r\n  updateEmpJobInfo(empId: number, empJobInfo: IEmpJobInfoAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}EmpJobInfos/updateEmpJobInfo/${empId}`,\r\n      empJobInfo\r\n    );\r\n  }\r\n\r\n  // delete EmpJobInfo\r\n  deleteEmpJobInfo(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}EmpJobInfos/deleteEmpJobInfo/${id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IUploadFPVM,\r\n  ILoadFPResponseVM,\r\n  IRegisterFPAddEditVM,\r\n  // IRegisterFPGetVM,\r\n  IRegisterFPResponseVM,\r\n  IUploadFPResponseVM,\r\n} from \"app/dashboard/models/employees/fingerprint\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FingerprintService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //#region register Fingerprints\r\n  // Return All RegisterFingerprints\r\n  getAllRegisterFPs(page: number): Observable<IRegisterFPResponseVM> {\r\n    return this.http.get<IRegisterFPResponseVM>(\r\n      `${environment.baseUrl}RegisterFingerprints/GetAllRegisterFingerprints/${page}`\r\n    );\r\n  }\r\n\r\n  // // Return RegisterFingerprint ById\r\n  // getRegisterFPById(id: number): Observable<IRegisterFPGetVM> {\r\n  //   return this.http.get<IRegisterFPGetVM>(\r\n  //     `${environment.baseUrl}RegisterFingerprints/getRegisterFingerprintById/${id}`\r\n  //   );\r\n  // }\r\n\r\n  // add RegisterFingerprint\r\n  addRegisterFP(registerFingerprint: IRegisterFPAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}RegisterFingerprints/addRegisterFingerprint`,\r\n      registerFingerprint\r\n    );\r\n  }\r\n\r\n  // update RegisterFingerprint\r\n  updateRegisterFP(id: number, registerFingerprint: IRegisterFPAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}RegisterFingerprints/updateRegisterFingerprint/${id}`,\r\n      registerFingerprint\r\n    );\r\n  }\r\n\r\n  // delete RegisterFingerprint\r\n  deleteRegisterFP(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}RegisterFingerprints/deleteRegisterFingerprint/${id}`\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region loadFingerprints\r\n  // get all device\r\n  getAllDevices(): Observable<any[]> {\r\n    return this.http.get<any[]>(\r\n      `${environment.baseUrl}LoadFingerprints/getAllDevices`\r\n    );\r\n  }\r\n\r\n  // Return All LoadFingerprints\r\n  getAllLoadFPs(page: number): Observable<ILoadFPResponseVM> {\r\n    return this.http.get<ILoadFPResponseVM>(\r\n      `${environment.baseUrl}LoadFingerprints/GetAllLoadFingerprints/${page}`\r\n    );\r\n  }\r\n\r\n  // delete LoadFingerprint\r\n  deleteLoadFP(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}LoadFingerprints/deleteLoadFingerprint/${id}`\r\n    );\r\n  }\r\n\r\n  // add LoadFingerprint\r\n  uploadFP(uploadFingerprint: IUploadFPVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}LoadFingerprints/addLoadFingerprint`,\r\n      uploadFingerprint\r\n    );\r\n  }\r\n\r\n  // // Return All LoadFingerprints\r\n  // getAllUploadFPs(page: number): Observable<IUploadFPResponseVM> {\r\n  //   return this.http.get<IUploadFPResponseVM>(\r\n  //     `${environment.baseUrl}LoadFingerprints/GetAllLoadFingerprints/${page}`\r\n  //   );\r\n  // }\r\n  //#endregion\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  JobTitleAddEditVM,\r\n  JobTitleGetResponseVM,\r\n  JobTitleGetVM,\r\n} from \"app/dashboard/models/employees/job-title\";\r\nimport { environment } from \"environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobTitleService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All JobTitles by page\r\n  getAllEmployeeJobTitles(page: number): Observable<JobTitleGetResponseVM> {\r\n    return this.http.get<JobTitleGetResponseVM>(\r\n      `${environment.baseUrl}JobTitles/getAllEmployeeJobTitles/${page}`\r\n    );\r\n  }\r\n\r\n  // Return All JobTitles > dropDown list\r\n  getEmployeeJobTitlesDropDown(): Observable<JobTitleGetVM[]> {\r\n    return this.http.get<JobTitleGetVM[]>(\r\n      `${environment.baseUrl}JobTitles/getAllJobTitlesDropDown`\r\n    );\r\n  }\r\n\r\n  // Add New JobTitle\r\n  addEmployeeJobTitle(data: JobTitleAddEditVM) {\r\n    return this.http.post(`${environment.baseUrl}JobTitles/addJobTitle`, data);\r\n  }\r\n\r\n  // Update JobTitle\r\n  updateEmployeeJobTitle(id: number, data: JobTitleAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}JobTitles/updateJobTitle${id}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Delete JobTitle\r\n  deleteEmployeeJobTitle(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}JobTitles/deleteJobTitle/${id}`\r\n    );\r\n  }\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  AttachTypeAddEditVM,\r\n  AttachTypeGetResponseVM,\r\n  AttachTypeGetVM,\r\n  IAttachTypeGetByUserType,\r\n  IAttachTypeGetDropdown,\r\n  IAttachUserTypeAddEditVM,\r\n  IAttachUserTypeGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/attach-type\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AttachTypeService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All  AttachTypes by page\r\n  getAllAttachTypes(\r\n    page: number,\r\n    eduCompId: number\r\n  ): Observable<AttachTypeGetResponseVM> {\r\n    return this.http.get<AttachTypeGetResponseVM>(\r\n      `${environment.baseUrl}AttachType/getAttachTypeByEduCompId/${eduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  // Return All  AttachTypes > dropDown list\r\n  getAttachTypesDropDown(eduCompId: number) {\r\n    return this.http.get<IAttachTypeGetDropdown[]>(\r\n      `${environment.baseUrl}AttachType/getAllAttachType/${eduCompId}`\r\n    );\r\n  }\r\n\r\n  // Return All  AttachTypes > dropDown list\r\n  getAttachTypesDropDownByUserId(userId: number) {\r\n    return this.http.get<{ attachmentList: IAttachTypeGetByUserType[] }>(\r\n      `${environment.baseUrl}AttachType/GetAttachmentByStudentUserId/${userId}`\r\n    );\r\n  }\r\n\r\n  //Add New AttachType\r\n  addEditAttachType(data: AttachTypeAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}AttachType/addEditAttachType`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete AttachType\r\n  deleteAttachType(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}AttachType/deleteAttachType/${id}`\r\n    );\r\n  }\r\n\r\n  ////////// add user types to attachments\r\n  // Return All  UserTypes\r\n  getAllUserTypesByAttachId(attachTypeId: number) {\r\n    return this.http.get<{ attachUserTypeList: IAttachUserTypeGetVM[] }>(\r\n      `${environment.baseUrl}UserType/GetAllAttachUserTypeByAttachTypeId/${attachTypeId}`\r\n    );\r\n  }\r\n\r\n  //Add UserTypes\r\n  addUserTypes(data: IAttachUserTypeAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}AttachType/AddAttachUserType`,\r\n      data\r\n    );\r\n  }\r\n\r\n  EditUserTypes(data: IAttachUserTypeAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}AttachType/EditAttachUserType`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete UserTypes\r\n  deleteUserTypes(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Student/deleteAttachuserType/${id}`\r\n    );\r\n  }\r\n}\r\n"],"names":["MatPaginator","MatSort","MatTableDataSource","DeleteDialogComponent","Validators","i0","ctx_r35","LoadFingerprintIndexComponent","fb","FingerprintServ","translate","spinner","ToastrMsg","dialog","route","authserv","Id","EduCompId","Device","BudgeNumber","CompanyId","Date","Employee","Address","Code","CountryID","Email","Mobile","Name","ar_name","en_name","functionName","queryParamMap","subscribe","params","functionId","Number","get","getUserRowFunctions","res","length","rowFunctions","onLangChange","lang","currentLang","getEduCompId","getAllEmpFPs","myForm","group","DeviceId","required","UploadedData","dataSource","EmpFPs","paginator","sort","e","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","controls","show","getAllDevices","Devices","hide","page","curPage","getAllLoadFPs","FingerprintsList","itemsCounts","countItems","console","log","submitted","valid","EmpFP","formCtrls","_a","_b","uploadFP","returnValue","data","push","success","reset","error","returnString","fileName","files","name","fileSize","size","fileType","type","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","result","FileAsBase64","replace","setValue","fileInput","nativeElement","title","open","msg","afterClosed","confirm","deleteEmpFP","deleteLoadFP","i","findIndex","splice","info","selectors","viewQuery","ctx","ctx_r31","ctx_r33","ctx_r47","ctx_r50","RegisterFingerprintComponent","EmployeeServ","Notes","getAllempFPs","getAllEmployees","EmployeeId","FingerPrint","IsAbsent","empFPs","getAllRegisterFPs","getEmployeeEmployeesDropDown","Employees","empFP","_c","_d","_e","_f","updateempFP","addempFP","addRegisterFP","patchValue","updateRegisterFP","deleteempFP","deleteRegisterFP","UploadFingerprintComponent","CustomeValidator","ctx_r21","ctx_r23","ctx_r25","ctx_r38","DepartmentComponent","DepartmentServ","Ar_Name","En_Name","getAllEmployeeDepartments","whiteSpace","Departments","DepartmentList","department","updateDepartment","addDepartment","addEmployeeDepartment","updateEmployeeDepartment","departmentName","deleteDepartment","deleteEmployeeDepartment","ctx_r27","AddEmployeeComponent","paramMap","id","EmployeeID","getEmployeeById","getAllCountries","pattern","email","Countries","employeeInfo","updateEmployee","addEmployee","ID","decls","vars","consts","template","EmployeeAttachmentsComponent","EmpAttachmentServ","AttachTypeServ","AttachmentUrl","AttachmentType","getAllAttachments","getAttachmentTypes","Type","File","Attachments","getAttachTypesDropDown","AttachmentTypes","getAllAttachmentsByEmployeeID","AttachmentList","attachment","AttachmentTypeId","AttachmentFile","updateAttachment","addAttachment","addEmpAttachment","updateEmpAttachment","deleteAttachment","deleteEmpAttachment","ctx_r41","EmployeeCertificationsComponent","EmpCertificationServ","FromDate","Place","getAllCertifications","EmpCertifications","getAllCertificationsByEmployeeID","EmpCertificationList","employeeCertification","updateCertification","addCertification","addEmpCertification","updateEmpCertification","deleteCertification","deleteEmpCertification","ctx_r29","ctx_r44","EmployeeCoursesComponent","EmpCourseServ","EducationYearServ","CourseServ","ClassRoomServ","getAllEmpCourses","getAllCourses","CourseId","StageId","EducationaYearId","ClassRoomId","LecturePerWeek","minusNum","EmpCourses","getAllCoursesByEmployeeID","EmpCoursesList","getAllCoursesDropDown","Courses","getAllClassRoomsDropDown","ClassRooms","employeeCourse","updateEmpCourse","addEmpCourse","Course","EducationYearId","EducationaYear","eduYearId","ClassRoom","subject_ar_name","subject_en_name","deleteEmpCourse","ctx_r30","ctx_r32","EmployeeExperienceHistoryComponent","EmpExperienceServ","JobTitle","ToDate","getAllExperiences","EmpExperiences","getAllExperienceHistorysByEmployeeID","EmpExperienceList","employeeExperience","updateExperienceHistory","addExperienceHistory","addEmpExperienceHistory","updateEmpExperienceHistory","deleteExperience","deleteEmpExperienceHistory","EmployeeIndexComponent","EmployeeList","employee","deleteEmployee","ctx_r34","ctx_r36","ctx_r48","ctx_r51","EmployeeJobInfoComponent","EmpJobInfoServ","JobTitleServ","Department","getAllJobInfos","getAllDepartments","getAllJobTitles","DepartmentId","JobTitleId","EmpJobInfos","getAllJobInfosByEmployeeID","EmpJobInfosList","getEmployeeDepartmentsDropDown","getEmployeeJobTitlesDropDown","JobTitles","employeeJobInfo","updateJobInfo","addJobInfo","addEmpJobInfo","updateEmpJobInfo","deleteJobInfo","deleteEmpJobInfo","RouterModule","JobTitleComponent","routes","path","children","redirectTo","pathMatch","component","EmployeesRoutingModule","forChild","imports","exports","CommonModule","SharedModule","NgxSpinnerModule","MaterialModule","ReactiveFormsModule","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","EmployeesModule","provide","useClass","useValue","declarations","getAllEmployeeJobTitles","JobTitleList","jobTitle","updateJobTitle","addJobTitle","addEmployeeJobTitle","updateEmployeeJobTitle","jobTitleName","deleteJobTitle","deleteEmployeeJobTitle","environment","DepartmentService","http","baseUrl","post","put","delete","factory","providedIn","EmpAttachmentService","empId","empAttachment","EmpCertificationService","empCertification","EmpCourseService","empCourse","EmpExperienceHistoryService","empExperienceHistory","EmpJobInfoService","empJobInfo","FingerprintService","registerFingerprint","uploadFingerprint","JobTitleService","AttachTypeService","eduCompId","userId","attachTypeId"],"sourceRoot":"webpack:///"}