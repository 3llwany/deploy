{"version":3,"file":"src_app_dashboard_pages_setup_general-setup_general-setup_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBsBK,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AAEFA,IAAAA,0DAAAA;;;;;;AAJEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAWFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAgBPA,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AAEFA,IAAAA,0DAAAA;;;;;;AAJEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAWFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAgBPA,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AAEFA,IAAAA,0DAAAA;;;;;;AAJEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAWFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAiDfA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASC,oCAAT;AAAiC,KAAjC;AAKAD,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAEAA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASE,kCAAT;AAA+B,KAA/B;AAIAF,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAlBFA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAUAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAjBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAUAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAbPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAoBFA,IAAAA,0DAAAA;;;;;AApBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADtLT,IAAMG,wBAAb;AAiBE,oCACUC,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUC,KALV,EAMSC,WANT,EAOUC,EAPV,EAQUC,sBARV,EASUC,oBATV,EAUUC,iBAVV,EAU8C;AAAA;;AAAA;;AATpC;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AAzBV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAKA,0BAA2B,CAAC,GAAD,EAAM,MAAN,EAAc,OAAd,EAAuB,YAAvB,EAAqC,QAArC,CAA3B;AAqBEL,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAKG,SAAL,GAAiBN,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB;AACD;;AA1CH;AAAA;AAAA,WA4CE,oBAAQ;AAAA;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1BC,iBAAS,EAAE,CAAC,EAAD,EAAKlC,+DAAL,CAFe;AAG1BoC,cAAM,EAAE,CAAC,EAAD,EAAKpC,+DAAL,CAHkB;AAI1BqC,eAAO,EAAE,CAAC,EAAD,EAAKrC,+DAAL;AAJiB,OAAd,CAAd;AAMA,WAAKY,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAKE,qBAAL,CAA2B,CAA3B;AACA,WAAKC,iBAAL;AAEA,WAAKC,qBAAL;AAEA,WAAKC,YAAL;AACD;AA5DH;AAAA;AAAA,WA8DE,2BAAe;AAAA;;AACb,UAAI,KAAKC,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AACD,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACY,qBAAL,CAA2B,CAA3B;AACD,OAHD;AAID;AAvEH;AAAA;AAAA,SAyEE,eAAa;AACX,aAAO,KAAKV,MAAL,CAAYkB,QAAnB;AACD;AA3EH;AAAA;AAAA,WA6EE,6BAAoBC,mBAApB,EAAmD;AACjD,WAAKnB,MAAL,CAAYoB,UAAZ,CAAuBD,mBAAvB;AACD;AA/EH;AAAA;AAAA,WAiFE,qBAAYE,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AApFH;AAAA;AAAA,WAqFE,qBAAS;AACP,WAAKC,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD,KAxFH,CA0FE;;AA1FF;AAAA;AAAA,WA4FE,wBAAY,CAAK,CA5FnB,CA8FE;;AA9FF;AAAA;AAAA,WAgGE,6BAAiB;AAAA;;AACf,WAAK3C,iBAAL,CACG4C,qBADH,GAEG1C,SAFH,CAEa,UAACM,GAAD,EAAuB;AAChC,cAAI,CAACqC,cAAL,GAAsBrC,GAAtB;AACD,OAJH;AAKD,KAtGH,CAwGE;;AAxGF;AAAA;AAAA,WA0GE,iCAAqB;AAAA;;AACnB,WAAKT,oBAAL,CAA0B+C,0BAA1B,GAAuD5C,SAAvD,CAAiE,UAACM,GAAD,EAAQ;AACvE,cAAI,CAACuC,mBAAL,GAA2BvC,GAAG,CAACwC,WAA/B;AACD,OAFD;AAGD,KA9GH,CAgHE;;AAhHF;AAAA;AAAA,WAiHE,+BAAsBC,IAAtB,EAAkC;AAAA;;AAChC,WAAKnD,sBAAL,CACGoD,sBADH,CAC0BD,IAD1B,EAC+B,KAAKtC,SADpC,EAEGT,SAFH,CAEa,UAACM,GAAD,EAAwB;AACjC,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuBuB,GAAG,CAAC2C,mBAA3B,CAAlB;AACA,gBAAI,CAACC,WAAL,GAAmB5C,GAAG,CAAC6C,SAAvB;AACD;AACF,OAPH;AAQD;AA1HH;AAAA;AAAA,WA4HE,oBAAQ;AAAA;;AACN,WAAKV,SAAL,GAAiB,IAAjB;AACA,UAAIX,mBAAmB,GAAsB;AAC3CsB,UAAE,EAAE,KAAKb,SAAL,CAAe1B,EAAf,CAAkBsB,KADqB;AAE3CkB,iBAAS,EAAE,KAAKd,SAAL,CAAezB,SAAf,CAAyBqB,KAFO;AAG3CmB,eAAO,EAAE,KAAKf,SAAL,CAAetB,OAAf,CAAuBkB,KAHW;AAI3CoB,uBAAe,EAAE,KAAKhB,SAAL,CAAevB,MAAf,CAAsBmB;AAJI,OAA7C;;AAMA,UAAI,KAAKxB,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,aAAK5D,sBAAL,CAA4B6D,sBAA5B,CAAmD3B,mBAAnD,EAAwE9B,SAAxE,CAAkF,UAACM,GAAD,EAAa;AAC7F,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACrE,OAAL,CAAasE,IAAb;;AACA,gBAAI7B,mBAAmB,CAACsB,EAApB,IAA0B,CAA9B,EAAiC;AAC/B,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAACwD,MAAjC;;AACA,oBAAI,CAACZ,WAAL;;AAEA,oBAAI,CAAC5D,MAAL,CAAYyE,OAAZ,CAAoB,yBAApB;AACD,aALD,MAKO;AACL,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACwB,EAAF,IAAQtB,mBAAmB,CAACsB,EAAnC;AAAA,eADM,CAAR;;AAGA,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAACwD,MAA9B;;AACA,oBAAI,CAACxE,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD;;AACD,kBAAI,CAACtC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,kBAAI,CAACwC,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SAnBD;AAoBD,OArBD,MAqBO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AAER;AA3JH;AAAA;AAAA,WA+JE,2BAAkBtC,mBAAlB,EAAiD;AAAA;;AAC/C,WAAKvC,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EACD,KAAKlD,OAAL,IAAgB,IAAhB,GACIU,mBAAmB,CAACyC,aADxB,GAEIzC,mBAAmB,CAACyC;AAJtB;AADqB,OAD/B,EASGC,WATH,GAUGxE,SAVH,CAUa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACC,qBAAL,CAA2B5C,mBAA3B;AACd,OAZH;AAaD,KA7KH,CA+KE;;AA/KF;AAAA;AAAA,WAgLE,+BAAsBA,mBAAtB,EAAqD;AAAA;;AACnD,WAAKlC,sBAAL,CACG+E,qBADH,CACyB7C,mBAAmB,CAACsB,EAD7C,EAEGpD,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAIkB,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACV,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIE,mBAAZ;AAAA,WADU,CAAZ;;AAGA,gBAAI,CAACL,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4BD,KAA5B,EAAkC,CAAlC;;AACA,gBAAI,CAACnD,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AAEA,gBAAI,CAACpC,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD,SARD,MAQO;AACL,gBAAI,CAACzE,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAdH;AAeD;AAhMH;;AAAA;AAAA;;;mBAAahF,0BAAwBH,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,uHAAAA,GAAAA,+DAAAA,CAAAA,uHAAAA,GAAAA,+DAAAA,CAAAA,gHAAAA;AAAA;;;QAAxBG;AAAwB0F;AAAAC;AAAA;gEAexBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AC/CpBI,MAAAA,uDAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAOFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAOFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAOFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAIEA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAA4CA,MAAAA,0DAAAA;AAE9CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC7CA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAsBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,6CAAyC,CAAzC,CAAR;AAAmD,OAAnD;AAMF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAlOQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKIA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIEA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGgBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQjBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAgBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIEA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGgBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQjBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAgBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIEA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGgBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQjBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAyBbA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAaFA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIaA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAUMA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA0DKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxNZ;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACkBsB/F,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAuBjBA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASiG,mBAAT;AAAoB,KAApB;AAEAjG,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA2BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASkG,+BAAT;AAA4B,KAA5B;AAGAlG,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAEAA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASmG,kCAAT;AAA+B,KAA/B;AAGAnG,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAfFA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAQAA,IAAAA,wDAAAA;AAOFA,IAAAA,mEAAAA;;;;;AAdKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAXPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAiBFA,IAAAA,0DAAAA;;;;;AAjBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAoBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADpIT,IAAMoG,mBAAb;AAaE,+BACUhG,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUC,KALV,EAMSC,WANT,EAOUC,EAPV,EAQU2F,iBARV,EAQ8C;AAAA;;AAAA;;AAPpC;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AAnBV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAKA,0BAA2B,CAAC,GAAD,EAAM,SAAN,EAAiB,SAAjB,EAA4B,QAA5B,CAA3B;AAeE7F,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACE,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAKG,SAAL,GAAiBN,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB;AACD;;AApCH;AAAA;AAAA,WAsCE,oBAAQ;AAAA;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,+DAAD,EAAsBqG,qGAAtB,CAAL;AAHiB,OAAd,CAAd;AAKA,WAAKzF,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAKuE,oBAAL,CAA0B,CAA1B;AACD;AAhDH;AAAA;AAAA,WAkDE,2BAAe;AAAA;;AACb,UAAI,KAAKjE,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACiF,oBAAL,CAA0B,CAA1B;AACD,OAHD;AAID;AA5DH;AAAA;AAAA,SA8DE,eAAa;AACX,aAAO,KAAK/E,MAAL,CAAYkB,QAAnB;AACD;AAhEH;AAAA;AAAA,WAkEE,qBAAYG,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD,KArEH,CAuEE;;AAvEF;AAAA;AAAA,WAwEE,8BAAqBS,IAArB,EAAiC;AAAA;;AAC/B,WAAKuC,iBAAL,CAAuBK,iBAAvB,CAAyC5C,IAAzC,EAA+C/C,SAA/C,CACE,UAACM,GAAD,EAAyB;AACvB,YAAIA,GAAJ,EAAS;AACPsF,iBAAO,CAACC,GAAR,CAAYvF,GAAZ;AACA,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuBuB,GAAG,CAACwF,eAA3B,CAAlB;AACA,gBAAI,CAAC5C,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACD;AACF,OAPH;AASD;AAlFH;AAAA;AAAA,WAoFE,oBAAQ;AAAA;;AACN,WAAKtD,SAAL,GAAiB,IAAjB;AAEA,UAAIuD,KAAK,GAAsB;AAC7BnF,UAAE,EAAE,KAAK0B,SAAL,CAAe1B,EAAf,CAAkBsB,KADO;AAE7B;AACA8D,iBAAS,EAAE,KAAKxF,SAHa;AAI7B8E,eAAO,EAAE,KAAKhD,SAAL,CAAegD,OAAf,CAAuBpD,KAJH;AAK7BsD,eAAO,EAAE,KAAKlD,SAAL,CAAekD,OAAf,CAAuBtD;AALH,OAA/B;;AAOA,UAAI,KAAKxB,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,aAAKnE,OAAL,CAAasE,IAAb;AACA,aAAK2B,iBAAL,CAAuBY,aAAvB,CAAqCF,KAArC,EAA4ChG,SAA5C,CAAsD,UAACM,GAAD,EAAa;AACjE,cAAIA,GAAJ,EAAS;AACP,gBAAI6F,UAAU,GAAkB;AAC9B/C,gBAAE,EAAE9C,GAAG,CAAC8F,WAAJ,CAAgBvF,EADU;AAE9BwF,qBAAO,EAAE/F,GAAG,CAAC8F,WAAJ,CAAgBb,OAFK;AAG9Be,qBAAO,EAAEhG,GAAG,CAAC8F,WAAJ,CAAgBX;AAHK,aAAhC;;AAKA,gBAAIO,KAAK,CAACnF,EAAN,IAAY,CAAhB,EAAmB;AACjB,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BsC,UAA7B;;AACA,oBAAI,CAACjD,WAAL;AACA,oBAAI,CAACzB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD,aAJD,MAIO;AACL,kBAAIiD,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACV,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACwB,EAAF,IAAQ+C,UAAU,CAAC/C,EAA1B;AAAA,eADU,CAAZ;;AAGA,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBgB,KAArB,IAA8BuB,UAA9B;AACA,oBAAI,CAAC1E,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;;AACD,kBAAI,CAACrC,MAAL,CAAYyE,OAAZ,CACEiC,KAAK,CAACnF,EAAN,IAAY,CAAZ,GACI,yBADJ,GAEI,4BAHN;;AAKA,kBAAI,CAACqD,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SA1BD;AA2BD,OA7BD,MA6BO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AACR;AA5HH;AAAA;AAAA,WA8HE,wBAAemC,cAAf,EAA4C;AAC1C;AACA,WAAKhE,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B+D,cAAc,CAACnD,EAA1C;AACA,WAAKb,SAAL,CAAegD,OAAf,CAAuB/C,QAAvB,CAAgC+D,cAAc,CAACF,OAA/C;AACA,WAAK9D,SAAL,CAAekD,OAAf,CAAuBjD,QAAvB,CAAgC+D,cAAc,CAACD,OAA/C;AACD;AAnIH;AAAA;AAAA,WAqIE,2BAAkBC,cAAlB,EAA+C;AAAA;;AAC7C,WAAKhH,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EACD,KAAKlD,OAAL,IAAgB,IAAhB,GACImF,cAAc,CAACF,OADnB,GAEIE,cAAc,CAACD;AAJjB;AADqB,OAD/B,EASG9B,WATH,GAUGxE,SAVH,CAUa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC+B,gBAAL,CAAsBD,cAAtB;AACd,OAZH;AAaD,KAnJH,CAqJE;;AArJF;AAAA;AAAA,WAsJE,0BAAiBE,UAAjB,EAA0C;AAAA;;AACxC,WAAKnB,iBAAL,CAAuBkB,gBAAvB,CAAwCC,UAAU,CAACrD,EAAnD,EAAuDpD,SAAvD,CACE,UAACM,GAAD,EAAa;AACX,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAIkB,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAI6E,UAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAAChF,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAAC1B,WAAL;AACA,gBAAI,CAACzB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AAEA,gBAAI,CAACrC,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD,SAPD,MAOO;AACL,gBAAI,CAACzE,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAZH;AAcD;AArKH;AAAA;AAAA,WAuKE,qBAAS;AACP,WAAKzD,MAAL,CAAY+F,KAAZ;AACA,WAAKnE,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AA3KH;;AAAA;AAAA;;;mBAAa4C,qBAAmBpG,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,6GAAAA;AAAA;;;QAAnBoG;AAAmBP;AAAAC;AAAA;gEAWnBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACvCpBI,MAAAA,uDAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAkDA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAChD/F,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAA8CA,MAAAA,0DAAAA;AAEhDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC7CA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAmBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,4CAAwC,CAAxC,CAAR;AAAkD,OAAlD;AAMF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA5KQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAyBbA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAMCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIaA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAUMA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA+CKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClKZ;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;ACkBsB/F,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBHA,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AAEFA,IAAAA,0DAAAA;;;;;;AAJEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAWFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAmBPA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAtBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAqBPA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAjBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAGFA,IAAAA,0DAAAA;;;;;AAXKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAYrBA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAS0H,kBAAT;AAAmB,KAAnB;AAEA1H,IAAAA,uDAAAA;AAEAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAGFA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAS2H,kBAAT;AAAmB,KAAnB;AAEA3H,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAEFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAS4H,mBAAT;AAAoB,KAApB;AAEA5H,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA4BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAInCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAInCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AAKFA,IAAAA,0DAAAA;;;;;;AALEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AASFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAeA,IAAAA,0DAAAA;;;;;AAAfA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAgBA,IAAAA,0DAAAA;;;;;AAAhBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAInCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAmBA,IAAAA,0DAAAA;;;;;AAAnBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAaQA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS6H,2BAAT;AAAwB,KAAxB;AAGA7H,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAGFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS8H,kCAAT;AAA+B,KAA/B;AAGA9H,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAKEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;;AAJEA,IAAAA,oEAAAA;AAGAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAxBJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAxBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA9BXA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAMEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AA2BFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;AA7BoCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAgCtCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;AD9VT,IAAM+H,gBAAb;AA6BE,4BACU3H,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUG,EALV,EAMUsH,eANV,EAOUC,aAPV,EAQUzH,KARV,EASSC,WATT,EASiC;AAAA;;AAAA;;AARvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AApCT,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAQA,0BAA2B,CACzB,GADyB,EAEzB,SAFyB,EAIzB,SAJyB,EAKzB,sBALyB,EAMzB,SANyB,EAQzB,OARyB,EASzB,QATyB,EAUzB,WAVyB,EAWzB,QAXyB,CAA3B;AA6BED,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAKG,SAAL,GAAiBN,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB;AACD;;AArDH;AAAA;AAAA,WAuDE,oBAAQ;AAAA;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1BwF,eAAO,EAAE,CAAC,EAAD,EAAK,CAACzH,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BqB,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC1H,+DAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAI1BkC,mBAAW,EAAE,CAAC,EAAD,EAAKvI,+DAAL,CAJa;AAK1BwI,eAAO,EAAE,CAAC,EAAD,EAAK,CAACxI,+DAAD,EAAsBqG,qGAAtB,CAAL,CALiB;AAM1BoC,aAAK,EAAE,CACL,EADK,EAEL,CAACzI,+DAAD,EAAsBA,4DAAtB,EAAwCqG,qGAAxC,CAFK,CANmB;AAU1BsC,cAAM,EAAE,CACN,EADM,EAEN,CACE3I,+DADF,EAEEA,8DAAA,CAAmB,wCAAnB,CAFF,EAGEA,gEAAA,CAAqB,EAArB,CAHF,EAIEqG,qGAJF,EAKEA,qGALF,CAFM,CAVkB;AAoB1B0C,iBAAS,EAAE,CAAC,EAAD,EAAK,CAAC/I,+DAAD,EAAsBqG,qGAAtB,CAAL;AApBe,OAAd,CAAd;AAsBA,WAAKzF,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAKyG,aAAL,CAAmB,CAAnB;AACA,WAAKC,cAAL,CAAoB,CAApB;AACA,WAAKC,UAAL,GAAgB,KAAKvF,SAAL,CAAe4E,WAAf,CAA2BhF,KAA3C;AAED;AArFH;AAAA;AAAA,WAsFE,2BAAe;AAAA;;AACb,UAAI,KAAKV,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AACD,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACmH,aAAL,CAAmB,CAAnB;AACD,OAHD;AAID;AA/FH;AAAA;AAAA,SAiGE,eAAa;AACX,aAAO,KAAKjH,MAAL,CAAYkB,QAAnB;AAED;AApGH;AAAA;AAAA,WAsGE,oBAAWkG,UAAX,EAA8B;AAC5B,WAAKpH,MAAL,CAAYoB,UAAZ,CAAuBgG,UAAvB;AACA,WAAKD,UAAL,GAAgB,KAAKvF,SAAL,CAAe4E,WAAf,CAA2BhF,KAA3C;AAED;AA1GH;AAAA;AAAA,WA4GE,qBAAYH,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AA/GH;AAAA;AAAA,WAgHE,qBAAS;AACP,WAAK3B,MAAL,CAAY+F,KAAZ;AACA,WAAKnE,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKD,SAAL,CAAe4E,WAAf,CAA2B3E,QAA3B,CAAoC,KAAKsF,UAAzC;AAEA,WAAKrF,SAAL,GAAiB,KAAjB;AACD,KAtHH,CAwHE;;AAxHF;AAAA;AAAA,WA0HE,wBAAeM,IAAf,EAA2B;AAAA;;AACzB,WAAKkE,eAAL,CACGe,mBADH,CACuBjF,IADvB,EAEG/C,SAFH,CAEa,UAACM,GAAD,EAAuB;AAChC,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAAC2H,kBAAL,GAA0B3H,GAAG,CAAC4H,aAA9B;AACD;AACF,OANH;AAOD,KAlIH,CAoIE;;AApIF;AAAA;AAAA,WAqIE,uBAAcnF,IAAd,EAA0B;AAAA;;AACxB,WAAKmE,aAAL,CAAmBiB,aAAnB,CAAiCpF,IAAjC,EAAuC/C,SAAvC,CAAiD,UAACM,GAAD,EAAqB;AACpE,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuBuB,GAAG,CAAC8H,UAA3B,CAAlB;AACA,gBAAI,CAAClF,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACD;AACF,OALD;AAMD;AA5IH;AAAA;AAAA,WA8IE,oBAAQ;AAAA;;AACN,WAAKtD,SAAL,GAAiB,IAAjB;AACA,UAAIsF,UAAU,GAAmB;AAC/BlH,UAAE,EAAE,KAAK0B,SAAL,CAAe1B,EAAf,CAAkBsB,KADS;AAE/BkE,eAAO,EAAE,KAAK9D,SAAL,CAAe8D,OAAf,CAAuBlE,KAFD;AAG/BmE,eAAO,EAAE,KAAK/D,SAAL,CAAe+D,OAAf,CAAuBnE,KAHD;AAI/BgF,mBAAW,EAAE,KAAK5E,SAAL,CAAe4E,WAAf,CAA2BhF,KAJT;AAK/BiF,eAAO,EAAE,KAAK7E,SAAL,CAAe6E,OAAf,CAAuBjF,KALD;AAM/BoF,cAAM,EAAE,KAAKhF,SAAL,CAAegF,MAAf,CAAsBpF,KANC;AAO/BwF,iBAAS,EAAE,KAAKpF,SAAL,CAAeoF,SAAf,CAAyBxF,KAPL;AAQ/BkF,aAAK,EAAE,KAAK9E,SAAL,CAAe8E,KAAf,CAAqBlF;AARG,OAAjC;;AAUA,UAAI,KAAKxB,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,aAAK0D,aAAL,CAAmBmB,aAAnB,CAAiCN,UAAjC,EAA6C/H,SAA7C,CAAuD,UAACM,GAAD,EAAa;AAClE,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACrE,OAAL,CAAasE,IAAb;;AACA,gBAAIoE,UAAU,CAAClH,EAAX,IAAiB,CAArB,EAAwB;AACtB,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAACwD,MAAjC;;AACA,oBAAI,CAACZ,WAAL;;AAEA,oBAAI,CAAC5D,MAAL,CAAYyE,OAAZ,CAAoB,yBAApB;AACD,aALD,MAKO;AACL,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACf,EAAF,IAAQkH,UAAU,CAAClH,EAA1B;AAAA,eADM,CAAR;;AAGA,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAACwD,MAA9B;;AACA,oBAAI,CAACxE,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD;;AACD,kBAAI,CAACtC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,kBAAI,CAACwC,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SAnBD;AAoBD,OArBD,MAqBO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AACR;AAhLH;AAAA;AAAA,WAkLE,2BAAkB2D,UAAlB,EAAqC;AAAA;;AACnC,WAAKxI,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE,KAAKlD,OAAL,IAAgB,IAAhB,GAAuB2G,UAAU,CAAC1B,OAAlC,GAA4C0B,UAAU,CAACzB;AADxD;AADqB,OAD/B,EAMG9B,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC6D,YAAL,CAAkBP,UAAlB;AACd,OATH;AAUD,KA7LH,CA+LE;;AA/LF;AAAA;AAAA,WAgME,sBAAaA,UAAb,EAA4B;AAAA;;AAC1B,WAAKb,aAAL,CAAmBoB,YAAnB,CAAgCP,UAAU,CAAClH,EAA3C,EAA+Cb,SAA/C,CAAyD,UAACM,GAAD,EAAa;AACpE,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAIkB,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAImG,UAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAACtG,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4BD,KAA5B,EAAkC,CAAlC;;AACA,gBAAI,CAACnD,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AAEA,gBAAI,CAACpC,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD,SAND,MAMO;AACL,gBAAI,CAACzE,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAVD;AAWD;AA5MH;;AAAA;AAAA;;;mBAAa4C,kBAAgB/H,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,yHAAAA,GAAAA,+DAAAA,CAAAA,sGAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAAhB+H;AAAgBlC;AAAAC;AAAA;gEA2BhBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AC5DpBI,MAAAA,uDAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAOFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAmCA,MAAAA,0DAAAA;AAC/CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAoCA,MAAAA,0DAAAA;AAChDA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAiCA,MAAAA,0DAAAA;AAC7CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAoBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,wDAAAA;AAYAA,MAAAA,wDAAAA;AASAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAA0CA,MAAAA,0DAAAA;AAE5CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC7CA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAEAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAEAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAOFA,MAAAA,mEAAAA;AAEAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAEAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyCFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,qCAAiC,CAAjC,CAAR;AAA2C,OAA3C;AAMF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA3YQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAsBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIEA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGgBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQjBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAgBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAsBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA6BDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAICA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAsBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2BZA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAYAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AASAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAgBHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIaA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAUMA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA+GKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnYZ;AAEA;AACA;AACA;AAMA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACasB/F,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwCjBA,IAAAA,uDAAAA;;;;;;;;AAQAA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASsJ,mBAAT;AAAoB,KAApB;AAEAtJ,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA2BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AAMFA,IAAAA,0DAAAA;;;;;AANEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAWFA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASuJ,gCAAT;AAA6B,KAA7B;;AAIAvJ,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASwJ,kCAAT;AAA+B,KAA/B;;AAIAxJ,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAZPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADlLT,IAAMyJ,gCAAb;AAcE,4CACUrJ,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUC,KALV,EAMSC,WANT,EAOUC,EAPV,EAQUgJ,oBARV,EAQoD;AAAA;;AAAA;;AAP1C;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AApBV,qBAAqB,KAArB;AAEA,uBAAsB,CAAtB,CAkBoD,CAhBpD;;AACA,wBAAe,CAAC;AAAEC,kBAAY,EAAE;AAAhB,KAAD,EAA6B;AAAEA,kBAAY,EAAE;AAAhB,KAA7B,CAAf;AAEA,0BAA2B,CAAC,GAAD,EAAM,SAAN,EAAiB,SAAjB,EAA4B,UAA5B,EAAwC,SAAxC,CAA3B;AAeEnJ,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAK2F,SAAL,GAAiB9F,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB;AACD;;AArCH;AAAA;AAAA,WAuCE,oBAAQ;AAAA;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BwC,UAAE,EAAE,CADsB;AAE1BiD,eAAO,EAAE,CAAC,EAAD,EAAK,CAACzH,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BqB,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC1H,+DAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAI1B4D,iBAAS,EAAE,CAAC,IAAD;AAJe,OAAd,CAAd;AAMA,WAAKrJ,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAK2H,cAAL,CAAoB,CAApB;AACD;AAlDH;AAAA;AAAA,WAoDE,2BAAe;AAAA;;AACb,UAAI,KAAKrH,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACqE,SAAL,GAAiBrE,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACqI,cAAL,CAAoB,CAApB;AACD,OAHD;AAID;AA9DH;AAAA;AAAA,SAgEE,eAAa;AACX,aAAO,KAAKnI,MAAL,CAAYkB,QAAnB;AACD;AAlEH;AAAA;AAAA,WAoEE,qBAAYG,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD,KAvEH,CAyEE;;AAzEF;AAAA;AAAA,WA0EE,wBAAeS,IAAf,EAA2B;AAAA;;AACzB,WAAK4F,oBAAL,CACGG,cADH,CACkB/F,IADlB,EAEG/C,SAFH,CAEa,UAACM,GAAD,EAAwB;AACjC,YAAIA,GAAJ,EAAS;AACPsF,iBAAO,CAACC,GAAR,CAAYvF,GAAZ;AACA,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuBuB,GAAG,CAACyI,sBAA3B,CAAlB;AACA,gBAAI,CAAC7F,WAAL,GAAiB5C,GAAG,CAAC0I,UAArB;AACD;AACF,OARH;AASD;AApFH;AAAA;AAAA,WAsFE,oBAAQ;AAAA;;AACN,WAAKvG,SAAL,GAAiB,IAAjB;AACA,UAAIwG,UAAU,GAAoB;AAChC7F,UAAE,EAAE,KAAKb,SAAL,CAAea,EAAf,CAAkBjB,KADU;AAEhCkE,eAAO,EAAE,KAAK9D,SAAL,CAAe8D,OAAf,CAAuBlE,KAFA;AAGhCmE,eAAO,EAAE,KAAK/D,SAAL,CAAe+D,OAAf,CAAuBnE,KAHA;AAIhC0G,iBAAS,EAAE,KAAKtG,SAAL,CAAesG,SAAf,CAAyB1G;AAJJ,OAAlC;;AAMA,UAAI,KAAKxB,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,aAAKnE,OAAL,CAAasE,IAAb;AACA,aAAKgF,oBAAL,CACGO,mBADH,CACuBD,UADvB,EAEGjJ,SAFH,CAEa,UAACM,GAAD,EAAyB;;;AAClCsF,iBAAO,CAACC,GAAR,CAAYoD,UAAU,CAAC7F,EAAvB;;AACA,cAAI9C,GAAJ,EAAS;AACP,gBAAI2I,UAAU,CAAC7F,EAAX,IAAiB,CAArB,EAAwB;AACtB,0BAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,MAAoB,IAApB,IAAoBuF,aAApB,GAAoB,MAApB,GAAoBA,GAAEtF,OAAF,CAAUvD,GAAV,CAApB;AACA,oBAAI,CAACmB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAED,aAJD,MAIO;AACL,kBAAIiD,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACwB,EAAF,IAAQ9C,GAAG,CAAC8C,EAAnB;AAAA,eAA/B,CAAZ;;AACA,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBgB,KAArB,IAA8BtE,GAA9B;AACA,oBAAI,CAACmB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD,aATM,CAUP;;;AACA,kBAAI,CAACrC,MAAL,CAAYyE,OAAZ,CACEkF,UAAU,CAAC7F,EAAX,IAAiB,CAAjB,GACI,yBADJ,GAEI,4BAHN;;AAKA,kBAAI,CAACc,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SAvBH;AAwBD,OA1BD,MA0BO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AACR;AAzHH;AAAA;AAAA,WA2HE,yBAAgBgF,SAAhB,EAA0C;AACxC,WAAKzI,MAAL,CAAYoB,UAAZ,CAAuBqH,SAAvB,EADwC,CAExC;AACD;AA9HH;AAAA;AAAA,WAgIE,2BAAkBA,SAAlB,EAA4C;AAAA;;AAC1C,WAAK7J,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE,KAAKlD,OAAL,IAAgB,IAAhB,GAAuBgI,SAAS,CAAC/C,OAAjC,GAA2C+C,SAAS,CAAC9C;AADtD;AADqB,OAD/B,EAMG9B,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC4E,gBAAL,CAAsBD,SAAtB;AACd,OATH;AAUD,KA3IH,CA6IE;;AA7IF;AAAA;AAAA,WA8IE,0BAAiBA,SAAjB,EAA2C;AAAA;;AACzC,WAAKT,oBAAL,CACGU,gBADH,CACoBD,SAAS,CAAChG,EAD9B,EAEGpD,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAIkB,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIwH,SAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAAC3H,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAACnD,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,gBAAI,CAACuC,SAAL;;AACA,gBAAI,CAAC5E,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD,SAND,MAMO;AACL,gBAAI,CAACzE,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAZH;AAaD;AA5JH;AAAA;AAAA,WA8JE,qBAAS;AACP,WAAKzD,MAAL,CAAY+F,KAAZ;AACA,WAAKnE,SAAL,CAAea,EAAf,CAAkBZ,QAAlB,CAA2B,CAA3B;AAEA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AAnKH;;AAAA;AAAA;;;mBAAaiG,kCAAgCzJ,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,kHAAAA;AAAA;;;QAAhCyJ;AAAgC5D;AAAAC;AAAA;gEAYhCjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACpCpBI,MAAAA,uDAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAGGA,MAAAA,oDAAAA;;AACHA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAIEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACAA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AACA/F,MAAAA,wDAAAA;AAEEA,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AAEAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAwDA,MAAAA,0DAAAA;AAE1DA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC7CA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAQFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAqBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,sCAAkC,CAAlC,CAAR;AAA4C,OAA5C;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AArNQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAuBCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,gBAAc,SAAd,EAAc,gFAAd;AAECA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,KAAAA,yDAAAA;AAMDA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,iBAAe,SAAf,EAAe,iFAAf;AAGAA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAaZA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAEFA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAOCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIaA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAUMA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAgEKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9MZ;AAIA;;;;;;;;;;;;;;;;;;;;ACkCsB/F,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAHEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAUFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAmBnBA,IAAAA,uDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASqK,yBAAT;AAA2B,KAA3B;AAEArK,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;ADhEH,IAAMsK,4BAAb;AAWE,wCACU5J,EADV,EAEU6J,WAFV,EAGUC,cAHV,EAIUjK,SAJV,EAKUH,OALV,EAMUqK,SANV,EAOUnK,MAPV,EAQUE,KARV,EASSkK,QATT,EAS8B;AAAA;;AAAA;;AARpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAnBT,wBAAuB,CAAvB;AAEA,iBAAiB,IAAjB;AAGA,qBAAqB,KAArB,CAc8B,CAE5B;;AACAlK,SAAK,CAACmK,QAAN,CAAe5J,SAAf,CAAyB,UAACC,MAAD,EAAW;AAClC,UAAIY,EAAE,GAAGV,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,UAAX,CAAD,CAAf;;AACA,UAAIS,EAAJ,EAAQ;AACN,aAAI,CAACgJ,YAAL,GAAoBhJ,EAApB;;AACA,aAAI,CAAC4I,cAAL,CAAoBK,yBAApB,CACE,KAAI,CAACD,YADP,EAEE7J,SAFF,CAEY,UAACM,GAAD,EAAQ;AAClB,cAAIA,GAAJ,EAAS;AACP,gBAAIA,GAAG,CAACyJ,kBAAJ,CAAuBxJ,MAAvB,GAAgC,CAApC,EAAuC,KAAI,CAACyJ,KAAL,GAAa,KAAb;;AACvC,iBAAI,CAACC,cAAL,CAAoBzH,QAApB,CACElC,GAAG,CAACyJ,kBAAJ,CAAuBG,GAAvB,CAA2B,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACC,UAAvB;AAAA,aAA3B,CADF;AAGD;AACF,SATD;AAUD;AACF,KAfD,EAH4B,CAoB5B;;AACA3K,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;AACD,KAHD,EArB4B,CA0B5B;;AACA,SAAKZ,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AApDH;AAAA;AAAA,WAsDE,oBAAQ;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1B0J,mBAAW,EAAE,CAAC,EAAD,EAAK,CAAC1L,+DAAD,CAAL;AADa,OAAd,CAAd;AAIA,WAAK2L,eAAL;AACD;AA5DH;AAAA;AAAA,WA8DE,2BAAe;AAAA;;AACb,WAAKZ,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAAC8J,eAAL;AACD,OAHD;AAID;AAnEH;AAAA;AAAA,SAqEE,eAAkB;AAChB,aAAO,KAAK5J,MAAL,CAAYkB,QAAZ,CAAqByI,WAA5B;AACD;AAvEH;AAAA;AAAA,WAyEE,2BAAe;AAAA;;AACb,WAAKjL,OAAL,CAAasE,IAAb;AACA,WAAK6F,WAAL,CAAiBe,eAAjB,GAAmCvK,SAAnC,CAA6C,UAACM,GAAD,EAAQ;AACnD,YAAIA,GAAJ,EAAS,MAAI,CAACkK,YAAL,GAAoBlK,GAAG,CAACkK,YAAxB;;AACT,cAAI,CAACnL,OAAL,CAAa8E,IAAb;AACD,OAHD;AAID;AA/EH;AAAA;AAAA,WAiFE,oBAAQ;AACN,WAAK1B,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIiH,SAAS,GAA6B;AACxCC,wBAAc,EAAE,KAAKb,YADmB;AAExCS,qBAAW,EAAE,KAAKL,cAAL,CAAoB9H;AAFO,SAA1C,CADqB,CAKrB;;AAEA,aAAK9C,OAAL,CAAasE,IAAb;AACA,aAAKqG,KAAL,GACI,KAAKW,YAAL,CAAkBF,SAAlB,CADJ,GAEI,KAAKG,eAAL,CAAqBH,SAArB,EAAgC,KAAhC,CAFJ;AAGD,OAXD,MAWO,KAAKf,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KA/FH,CAiGE;;AAjGF;AAAA;AAAA,WAkGE,sBAAaqG,SAAb,EAAgD;AAAA;;AAC9C,WAAKhB,cAAL,CAAoBoB,YAApB,CAAiCJ,SAAjC,EAA4CzK,SAA5C,CAAsD,UAACM,GAAD,EAAa;AACjE,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,gBAAI,CAACsG,KAAL,GAAa,KAAb,CADwB,CAExB;;AACA,gBAAI,CAACC,cAAL,CAAoBzH,QAApB,CACElC,GAAG,CAACwK,cAAJ,CAAmBZ,GAAnB,CAAuB,UAACC,QAAD;AAAA,mBAAcA,QAAQ,CAACC,UAAvB;AAAA,WAAvB,CADF;;AAGA,gBAAI,CAACV,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AACD,SAPD,MAOO,MAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;;AACP,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAVD;AAWD,KA9GH,CAgHE;;AAhHF;AAAA;AAAA,WAiHE,yBAAgBsG,SAAhB,EAAqDO,QAArD,EAAsE;AAAA;;AACpE,WAAKvB,cAAL,CAAoBwB,aAApB,CAAkCR,SAAlC,EAA6CzK,SAA7C,CAAuD,UAACM,GAAD,EAAa;AAClE,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB;AACA,gBAAI,CAACuG,cAAL,CAAoBzH,QAApB,CACElC,GAAG,CAAC4K,eAAJ,CAAoBhB,GAApB,CAAwB,UAACC,QAAD;AAAA,mBAAcA,QAAQ,CAACC,UAAvB;AAAA,WAAxB,CADF;;AAGA,cAAIY,QAAJ,EAAc;AACZ,kBAAI,CAACtB,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;;AACA,kBAAI,CAACiG,KAAL,GAAa,IAAb;AACA,kBAAI,CAACvH,SAAL,GAAiB,KAAjB;AACD,WAJD,MAIO,MAAI,CAACiH,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACR,SAVD,MAUO,MAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;;AACP,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAbD;AAcD,KAhIH,CAkIE;;AAlIF;AAAA;AAAA,WAmIE,4BAAgB;AAAA;;AACd,WAAK3E,SAAL,CAAeY,GAAf,CAAmB,2BAAnB,EAAgDJ,SAAhD,CAA0D,UAACmL,IAAD,EAAS;AACjE,cAAI,CAAC5L,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,cAAI,EAAE;AACJU,eAAG,EAAE6G;AADD;AADqB,SAD/B,EAMG3G,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,cAAIA,OAAJ,EAAa,MAAI,CAAC2G,eAAL;AACd,SATH;AAUD,OAXD;AAYD,KAhJH,CAkJE;;AAlJF;AAAA;AAAA,WAmJE,2BAAe;AACb,WAAKnB,cAAL,CAAoBzH,QAApB,CAA6B,EAA7B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AAEA,UAAIgI,SAAS,GAA6B;AACxCC,sBAAc,EAAE,KAAKb,YADmB;AAExCS,mBAAW,EAAE,KAAKL,cAAL,CAAoB9H;AAFO,OAA1C,CAJa,CAQb;;AAEA,WAAK9C,OAAL,CAAasE,IAAb;AACA,WAAKiH,eAAL,CAAqBH,SAArB,EAAgC,IAAhC;AACD;AA/JH;;AAAA;AAAA;;;mBAAalB,8BAA4BtK,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,uFAAAA,GAAAA,+DAAAA,CAAAA,6GAAAA,GAAAA,+DAAAA,CAAAA,iEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAA5BsK;AAA4BzE;AAAAuG;AAAAC;AAAAC;AAAAC;AAAA;ACnBzCvM,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAKAA,MAAAA,4DAAAA;AAQEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,wDAAAA;AACAA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAjFQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQEA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,gBAAAA,6DAAAA;AAKAA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAOQA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMIA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIEA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGgBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQjBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAwBUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACvBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EX;AAEA;AACA;AACA;AASA;AAKA;;;;;;;;;;;;;;;;;;;;;;ACbMA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAmBcA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAkBjBA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASwM,kBAAT;AAAmB,KAAnB;AAEAxM,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAIFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASyM,kBAAT;AAAmB,KAAnB;AAEAzM,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAGFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAS0M,mBAAT;AAAoB,KAApB;AAEA1M,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA8BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAkBQA,IAAAA,4DAAAA;AAGEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASC,wCAAT;AAAqC,KAArC;AAEAD,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAGFA,IAAAA,4DAAAA;AAGEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASE,wCAAT;AAAqC,KAArC;AAEAF,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;;;AAGFA,IAAAA,4DAAAA;AAQEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;;;AAPEA,IAAAA,oEAAAA;AACAA,IAAAA,wDAAAA,gBAAAA,6DAAAA;AAKAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA5BJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAWFA,IAAAA,mEAAAA;;;;;AA3BKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AArCXA,IAAAA,4DAAAA;AAKEA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAMEA,IAAAA,oDAAAA;AAEFA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AA+BFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;AAjCoCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAoCtCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;AD9LT,IAAM2M,mBAAb;AAmBE,+BACUjM,EADV,EAEU8J,cAFV,EAGUjK,SAHV,EAIUH,OAJV,EAKUqK,SALV,EAMUnK,MANV,EAOUE,KAPV,EAQSkK,QART,EAQ8B;AAAA;;AAAA;;AAPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA1BT,uBAAiC,EAAjC;AAEA,qBAAY,KAAZ;AACA,mBAAkB,CAAlB,CAuB8B,CAf9B;;AACA,4BAA6B,CAAC,GAAD,EAAM,SAAN,EAAiB,SAAjB,EAA4B,SAA5B,CAA7B,CAc8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AAnDH;AAAA;AAAA,WAqDE,oBAAQ;AACN,WAAKmL,iBAAL,CAAuB,CAAvB;AAEA,WAAKlL,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BwC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1BiD,eAAO,EAAE,CAAC,EAAD,EAAK,CAACzH,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BqB,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC1H,+DAAD,EAAsBqG,qGAAtB,CAAL;AAHiB,OAAd,CAAd;AAKD;AA7DH;AAAA;AAAA,WA+DE,2BAAe;AAAA;;AACb,UAAI,KAAKxD,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKgI,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACoL,iBAAL,CAAuB,CAAvB;AACD,OAHD;AAID;AAzEH;AAAA;AAAA,WA2EE,qBAAY7J,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AAlFH;AAAA;AAAA,WAmFE,qBAAS;AACP,WAAKnL,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAe3I,EAAf,CAAkBZ,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AAvFH;AAAA;AAAA,SAwFE,eAAa;AACX,aAAO,KAAK9B,MAAL,CAAYkB,QAAnB;AACD,KA1FH,CA4FE;;AA5FF;AAAA;AAAA,WA6FE,2BAAkBkB,IAAlB,EAA8B;AAAA;;AAC5B,WAAKiJ,OAAL,GAAejJ,IAAf;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAK8F,cAAL,CAAoBoC,iBAApB,CAAsC9I,IAAtC,EAA4C,KAAKtC,SAAjD,EAA4DT,SAA5D,CACE,UAACM,GAAD,EAAiC;AAC/B,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAAC2L,WAAL,GAAmB3L,GAAG,CAAC4L,cAAvB;AACA,gBAAI,CAACzK,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuB,MAAI,CAACkN,WAA5B,CAAlB;AACA,gBAAI,CAAC/I,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACA,gBAAI,CAACtE,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACAiE,iBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCvF,GAAhC;AACD;;AACD,cAAI,CAACjB,OAAL,CAAa8E,IAAb;AACD,OAVH;AAYD;AA7GH;AAAA;AAAA,WA+GE,oBAAQ;AAAA;;;;AACN,WAAK1B,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAI2I,UAAU,GAAG,EAAjB;AACAA,kBAAU,CAAC/I,EAAX,GAAgB,WAAK2I,SAAL,CAAe3I,EAAf,MAAiB,IAAjB,IAAiB+F,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEhH,KAAnC;AACAgK,kBAAU,CAAC1L,SAAX,GAAuB,KAAKA,SAA5B;AACA0L,kBAAU,CAAC9F,OAAX,GAAqB,WAAK0F,SAAL,CAAe1F,OAAf,MAAsB,IAAtB,IAAsB+F,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK,KAA7C;AACAgK,kBAAU,CAAC7F,OAAX,GAAqB,WAAKyF,SAAL,CAAezF,OAAf,MAAsB,IAAtB,IAAsB+F,aAAtB,GAAsB,MAAtB,GAAsBA,GAAElK,KAA7C;AACAyD,eAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BsG,UAA1B;AACA,aAAK1C,cAAL,CAAoB6C,iBAApB,CAAsCH,UAAtC,EAAkDnM,SAAlD,CACE,UAACM,GAAD,EAAa;AACX,cAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,gBAAIyI,UAAU,CAAC/I,EAAX,IAAiB,CAArB,EAAwB;AACtB,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAACiM,WAAjC;;AACA,oBAAI,CAACrJ,WAAL;;AACA,oBAAI,CAACwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AACD,aAJD,MAIO;AACL,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACwB,EAAF,IAAQ,MAAI,CAAC2I,SAAL,CAAe3I,EAAf,CAAkBjB,KAAjC;AAAA,eADM,CAAR;;AAGA,oBAAI,CAACV,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAACiM,WAA9B;;AAEA,oBAAI,CAAC7C,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD;;AACD,kBAAI,CAACtC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACuC,SAAL;AACD;;AACD,gBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD,SAnBH;AAqBD,OA5BD,MA4BO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KA9IH,CAgJE;;AAhJF;AAAA;AAAA,WAiJE,0BAAiB+H,UAAjB,EAA4C;AAC1C,WAAKxL,MAAL,CAAYoB,UAAZ,CAAuBoK,UAAvB;AACD,KAnJH,CAqJE;;AArJF;AAAA;AAAA,WAsJE,0BAAiBA,UAAjB,EAA4C;AAAA;;AAC1C,UAAIK,cAAc,GAChB,KAAKnC,WAAL,IAAoB,IAApB,GAA2B8B,UAAU,CAAC9F,OAAtC,GAAgD8F,UAAU,CAAC7F,OAD7D;AAGA,WAAK/G,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEkI;AADD;AADqB,OAD/B,EAMGhI,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACgI,gBAAL,CAAsBN,UAAtB;AACd,OATH;AAUD,KApKH,CAsKE;;AAtKF;AAAA;AAAA,WAuKE,0BAAiBA,UAAjB,EAA4C;AAAA;;AAC1C,WAAK9M,OAAL,CAAasE,IAAb;AACA,WAAK8F,cAAL,CAAoBgD,gBAApB,CAAqCN,UAAU,CAAC/I,EAAhD,EAAoDpD,SAApD,CACE,UAACM,GAAD,EAAa;AACX,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB;AACA;AACA;AACA;AACA,gBAAI,CAACgG,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;;AAEA,gBAAI,CAAC8H,iBAAL,CAAuB,CAAvB;;AACA,gBAAI,CAACpK,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AAEA,cAAIyK,UAAU,CAAC/I,EAAX,IAAiB,MAAI,CAAC2I,SAAL,CAAe3I,EAAf,CAAkBjB,KAAvC,EAA8C,MAAI,CAAC+B,SAAL;AAC/C,SAXD,MAWO;AACL,gBAAI,CAACwF,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAjBH;AAmBD;AA5LH;;AAAA;AAAA;;;mBAAayH,qBAAmB3M,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,6GAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAAnB2M;AAAmB9G;AAAAC;AAAA;gEAgBnBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AC3CpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAWAA,MAAAA,wDAAAA;AASAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAA4CA,MAAAA,0DAAAA;AAE9CA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAkDFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,yCAAqC,CAArC,CAAR;AAA+C,OAA/C;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAnOuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2BZA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AASAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAcHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAgBmBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoFKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3NZ;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoCsB/F,IAAAA,6DAAAA;AAIEA,IAAAA,qDAAAA;AAEFA,IAAAA,2DAAAA;;;;;;AAJEA,IAAAA,yDAAAA;AAEAA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAWFA,IAAAA,6DAAAA;AACEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AATJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AAIFA,IAAAA,2DAAAA;;;;;AAJSA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAkBPA,IAAAA,6DAAAA;AAIEA,IAAAA,qDAAAA;AAEFA,IAAAA,2DAAAA;;;;;;AAJEA,IAAAA,yDAAAA;AAEAA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAWFA,IAAAA,6DAAAA;AACEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AATJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AAIFA,IAAAA,2DAAAA;;;;;AAJSA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAuBPA,IAAAA,6DAAAA;AACEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAbJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AAIAA,IAAAA,yDAAAA;AAIFA,IAAAA,2DAAAA;;;;;AARSA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AAIAA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAwBPA,IAAAA,6DAAAA;AAMEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAdJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AASFA,IAAAA,2DAAAA;;;;;AARKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;;;AAiBjBA,IAAAA,6DAAAA;AAKEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA,aAASyN,kBAAT;AAAmB,KAAnB;AAEAzN,IAAAA,wDAAAA;AAEAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;;;AAGFA,IAAAA,6DAAAA;AAKEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA,aAAS0N,kBAAT;AAAmB,KAAnB;AAEA1N,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;;;AAEFA,IAAAA,6DAAAA;AAIEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA,aAAS2N,mBAAT;AAAoB,KAApB;AAEA3N,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AA4BIA,IAAAA,6DAAAA;AAAsDA,IAAAA,qDAAAA;AAACA,IAAAA,2DAAAA;;;;;;AACvDA,IAAAA,6DAAAA;AAAyCA,IAAAA,qDAAAA;AAAWA,IAAAA,2DAAAA;;;;;AAAXA,IAAAA,wDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAKzCA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AAGFA,IAAAA,2DAAAA;;;;;;AAHEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAQFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AAAmCA,IAAAA,qDAAAA;AAAsBA,IAAAA,2DAAAA;;;;;AAAtBA,IAAAA,wDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAInCA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AAAmCA,IAAAA,qDAAAA;AAAeA,IAAAA,2DAAAA;;;;;AAAfA,IAAAA,wDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAKnCA,IAAAA,wDAAAA;;;;;;;;AAGIA,IAAAA,6DAAAA;AAEEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA;AAAA,aAAS4N,kCAAT;AAA+B,KAA/B;AAKA5N,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;;;;;;;;AAEAA,IAAAA,6DAAAA;AAEEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA;AAAA,aAAS6N,kCAAT;AAA+B,KAA/B;AAIA7N,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;;;;;;AAlBFA,IAAAA,sEAAAA;AACEA,IAAAA,yDAAAA;AAUAA,IAAAA,yDAAAA;AAQFA,IAAAA,oEAAAA;;;;;AAjBKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AAUAA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAbPA,IAAAA,6DAAAA;AACEA,IAAAA,yDAAAA;AAoBFA,IAAAA,2DAAAA;;;;;AApBgCA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAuBlCA,IAAAA,wDAAAA;;;;;;AACAA,IAAAA,wDAAAA;;;;;;AAGAA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;;;;;;;;AAFIA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;;;;;;;;;ADhRT,IAAM8N,sBAAb;AA0BE,kCACU1N,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUG,EALV,EAMUqN,qBANV,EAOUvN,KAPV,EAQSC,WART,EASUuN,aATV,EAUUC,cAVV,EAUwC;AAAA;;AAAA;;AAT9B;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AAlCV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB,CAiCwC,CA3BxC;;AACA,wBAAoB,CAAC;AAAEtE,kBAAY,EAAE;AAAhB,KAAD,EAA6B;AAAEA,kBAAY,EAAE;AAAhB,KAA7B,CAApB;AAEA,0BAA2B,CACzB,GADyB,EAEzB,MAFyB,EAGzB,QAHyB,EAIzB,SAJyB,EAKzB,OALyB,EAMzB,OANyB,EAOzB,QAPyB,CAA3B;AA0BEnJ,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAKG,SAAL,GAAiBN,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB;AACA,SAAKjB,KAAL,CAAWmK,QAAX,CAAoB5J,SAApB,CAA8B,UAACmN,KAAD,EAAU;AACtC,WAAI,CAACC,SAAL,GAAiBjN,MAAM,CAACgN,KAAK,CAAC/M,GAAN,CAAU,IAAV,CAAD,CAAvB;AACD,KAFD;AAGD;;AAtDH;AAAA;AAAA,WAwDE,oBAAQ;AAAA;;AACN,WAAKO,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1BwM,eAAO,EAAE,CAAC,EAAD,EAAK,CAACzO,gEAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BqI,gBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC1O,gEAAD,CAAL,CAHgB;AAI1B2O,iBAAS,EAAE,CACT;AACEpL,eAAK,EAAE,EADT;AAEEqL,kBAAQ,EAAE;AAFZ,SADS,EAKT,CAAC5O,gEAAD,CALS,CAJe;AAW1B6O,oBAAY,EAAE,CAAC,EAAD,EAAK,CAAC7O,gEAAD,EAAsBqG,kGAAtB,CAAL,CAXY;AAY1B0I,aAAK,EAAE,CAAC,EAAD,EAAK,CAAC/O,gEAAD,EAAsBqG,qGAAtB,CAAL;AAZmB,OAAd,CAAd;AAeA,WAAKzF,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAKyM,uBAAL,CAA6B,CAA7B;AACA,WAAKC,aAAL;AACD;AA7EH;AAAA;AAAA,WA+EE,2BAAe;AAAA;;AACb,UAAI,KAAKpM,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACmN,uBAAL,CAA6B,CAA7B;AACD,OAHD;AAID;AAzFH;AAAA;AAAA,SA2FE,eAAa;AACX,aAAO,KAAKjN,MAAL,CAAYkB,QAAnB;AACD;AA7FH;AAAA;AAAA,WA+FE,2BAAkBiM,WAAlB,EAA8C;AAC5C,WAAKnN,MAAL,CAAYoB,UAAZ,CAAuB+L,WAAvB;AACA,WAAKC,aAAL;AACA,WAAKxL,SAAL,CAAegL,SAAf,CAAyB/K,QAAzB,CAAkCsL,WAAW,CAACP,SAA9C;AACD;AAnGH;AAAA;AAAA,WAqGE,qBAAYvL,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAxGH;AAAA;AAAA,WAyGE,qBAAS;AACP,WAAKG,SAAL,GAAiB,KAAjB;AACA,WAAKF,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKD,SAAL,CAAe8K,OAAf,CAAuB7K,QAAvB,CAAgC,EAAhC;AAEA,WAAKD,SAAL,CAAekL,YAAf,CAA4BjL,QAA5B,CAAqC,EAArC;AACA,WAAKD,SAAL,CAAeoL,KAAf,CAAqBnL,QAArB,CAA8B,EAA9B;AACD,KAhHH,CAkHE;;AAlHF;AAAA;AAAA,WAoHE,yBAAa;AAAA;;AACX,WAAKyK,aAAL,CAAmBe,qBAAnB,GAA2ChO,SAA3C,CAAqD,UAACM,GAAD,EAAQ;AAC3D,YAAIA,GAAJ,EAAS;AACPsF,iBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBvF,GAAtB;AAEA,gBAAI,CAAC2N,UAAL,GAAkB3N,GAAlB;AACD;AACF,OAND;AAOD,KA5HH,CA8HE;;AA9HF;AAAA;AAAA,WAgIE,yBAAa;AAAA;;;;AACX,WAAKiC,SAAL,CAAegL,SAAf,CAAyB/K,QAAzB,CAAkC,IAAlC;;AACA,UAAI,WAAKD,SAAL,CAAe+K,QAAf,MAAuB,IAAvB,IAAuBnE,aAAvB,GAAuB,MAAvB,GAAuBA,GAAEhH,KAA7B,EAAoC;AAClC,aAAK+K,cAAL,CACGgB,wBADH,CAC4B,WAAK3L,SAAL,CAAe+K,QAAf,MAAuB,IAAvB,IAAuBlB,aAAvB,GAAuB,MAAvB,GAAuBA,GAAEjK,KADrD,EAEGnC,SAFH,CAEa,UAACM,GAAD,EAAQ;AACjB,cAAIA,GAAJ,EAAS;AACPsF,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBvF,GAAvB;AACA,kBAAI,CAAC6N,WAAL,GAAmB7N,GAAnB;;AACA,kBAAI,CAACiC,SAAL,CAAegL,SAAf,CAAyBa,MAAzB;AACD;AACF,SARH;AASD,OAVD,MAUO,KAAK7L,SAAL,CAAegL,SAAf,CAAyBc,OAAzB;AACR,KA7IH,CA+IE;;AA/IF;AAAA;AAAA,WAgJE,iCAAwBtL,IAAxB,EAAoC;AAAA;;AAClC,WAAKiK,qBAAL,CACGsB,iBADH,CACqBvL,IADrB,EAC2B,KAAKtC,SADhC,EAEGT,SAFH,CAEa,UAACM,GAAD,EAA6B;AACtC,YAAIA,GAAJ,EAAS;AACPsF,iBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBvF,GAAnB;AACA,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuBuB,GAAG,CAACiO,kBAA3B,CAAlB;AACA,gBAAI,CAACrL,WAAL,GAAmB5C,GAAG,CAAC6C,SAAvB;AACA,gBAAI,CAAC1B,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;AACF,OATH;AAUD;AA3JH;AAAA;AAAA,WA6JE,oBAAQ;AAAA;;AACN,WAAKc,SAAL,GAAiB,IAAjB;AACA,UAAI+L,iBAAiB,GAA2B;AAC9C3N,UAAE,EAAE,KAAK0B,SAAL,CAAe1B,EAAf,CAAkBsB,KADwB;AAE9CkL,eAAO,EAAE,KAAK9K,SAAL,CAAe8K,OAAf,CAAuBlL,KAFc;AAG9CoL,iBAAS,EAAE,KAAKhL,SAAL,CAAegL,SAAf,CAAyBpL,KAHU;AAI9CsL,oBAAY,EAAE,KAAKlL,SAAL,CAAekL,YAAf,CAA4BtL,KAJI;AAK9CwL,aAAK,EAAE,KAAKpL,SAAL,CAAeoL,KAAf,CAAqBxL,KALkB;AAM9CiL,iBAAS,EAAE,KAAKA,SAN8B;AAO9CnH,iBAAS,EAAE,KAAKxF;AAP8B,OAAhD;;AASA,UAAI,KAAKE,MAAL,CAAY6C,KAAhB,EAAuB;AACrBoC,eAAO,CAACC,GAAR,CAAY2I,iBAAZ;AACA,aAAKxB,qBAAL,CACGyB,oBADH,CACwBD,iBADxB,EAEGxO,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACrE,OAAL,CAAasE,IAAb;;AAEA,gBAAI6K,iBAAiB,CAAC3N,EAAlB,IAAwB,CAA5B,EAA+B;AAC7B,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAACoO,eAAjC;;AACA,oBAAI,CAACxL,WAAL;;AACA,oBAAI,CAAC5D,MAAL,CAAYyE,OAAZ,CAAoB,yBAApB;AACD,aAJD,MAIO;AACL,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACf,EAAF,IAAQ2N,iBAAiB,CAAC3N,EAAjC;AAAA,eADM,CAAR;;AAGA,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAACoO,eAA9B;;AACA,oBAAI,CAACpP,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD;;AACD,kBAAI,CAACtC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACuC,SAAL;;AAEA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SAtBH;AAuBD,OAzBD,MAyBO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AACR;AAlMH;AAAA;AAAA,WAoME,2BAAkBuK,iBAAlB,EAAoD;AAAA;;AAClD,WAAKpP,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEqK,iBAAiB,CAACC;AADnB;AADqB,OAD/B,EAMGpK,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACoK,mBAAL,CAAyBF,iBAAzB;AACd,OATH;AAUD,KA/MH,CAiNE;;AAjNF;AAAA;AAAA,WAkNE,6BAAoBA,iBAApB,EAAsD;AAAA;;AACpD,WAAK3B,qBAAL,CACG6B,mBADH,CACuBF,iBAAiB,CAAC9N,EADzC,EAEGb,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB;AACA;AACA;AACA;AACA,gBAAI,CAACpE,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;;AAEA,gBAAI,CAAC6J,uBAAL,CAA6B,CAA7B;;AACA,gBAAI,CAACnM,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AAEA,cAAIiN,iBAAiB,CAAC9N,EAAlB,IAAwB,MAAI,CAAC0B,SAAL,CAAe1B,EAAf,CAAkBsB,KAA9C,EAAqD,MAAI,CAAC+B,SAAL;AACtD,SAXD,MAWO;AACL,gBAAI,CAAC5E,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAjBH;AAkBD;AArOH;;AAAA;AAAA;;;mBAAa2I,wBAAsB9N,gEAAAA,CAAAA,2DAAAA,GAAAA,gEAAAA,CAAAA,iFAAAA,GAAAA,gEAAAA,CAAAA,gEAAAA,GAAAA,gEAAAA,CAAAA,kEAAAA,GAAAA,gEAAAA,CAAAA,wDAAAA,GAAAA,gEAAAA,CAAAA,sHAAAA,GAAAA,gEAAAA,CAAAA,4DAAAA,GAAAA,gEAAAA,CAAAA,8EAAAA,GAAAA,gEAAAA,CAAAA,6GAAAA,GAAAA,gEAAAA,CAAAA,+GAAAA;AAAA;;;QAAtB8N;AAAsBjI;AAAAC;AAAA;iEAwBtBjG,sEAAYA,EAAA;iEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACxDpBI,MAAAA,wDAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AAOAA,MAAAA,6DAAAA;AAKEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAYA,MAAAA,qDAAAA;;AAAgCA,MAAAA,2DAAAA;AAC5CA,MAAAA,wDAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AAEEA,MAAAA,yDAAAA;AAAA,eAAmB+F,mBAAnB;AAAkC,OAAlC;AAEA/F,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,yDAAAA;AAOFA,MAAAA,2DAAAA;AACAA,MAAAA,yDAAAA;AAYFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,yDAAAA;AAOFA,MAAAA,2DAAAA;AACAA,MAAAA,yDAAAA;AAYFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAYA,MAAAA,qDAAAA;;AAAiCA,MAAAA,2DAAAA;AAC7CA,MAAAA,wDAAAA;AAKAA,MAAAA,yDAAAA;AAgBFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAYA,MAAAA,qDAAAA;;AAAiCA,MAAAA,2DAAAA;AAC7CA,MAAAA,wDAAAA;AAKAA,MAAAA,yDAAAA;AAiBFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,yDAAAA;AAYAA,MAAAA,yDAAAA;AASAA,MAAAA,yDAAAA;AAQFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AAA8CA,MAAAA,2DAAAA;AAEhDA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAWA,MAAAA,qDAAAA;;AAAkCA,MAAAA,2DAAAA;AAC7CA,MAAAA,6DAAAA;AAEEA,MAAAA,yDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,2DAAAA;AAMFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAEEA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AACFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAKFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AACFA,MAAAA,oEAAAA;AAEAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AACFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AAsBFA,MAAAA,oEAAAA;AAEAA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAKFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AAEEA,MAAAA,yDAAAA;AAAA,eAAQ+F,+CAA2C,CAA3C,CAAR;AAAqD,OAArD;AAMF/F,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;;;;AA3TQA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAUEA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,gBAAAA,8DAAAA;AAGEA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAOMA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAIcA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAQVA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAOEA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAGgBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAQjBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAkBDA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAIEA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAGgBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAQjBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAgBSA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAQTA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAoBSA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAQTA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAwBZA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAYAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AASAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAgBHA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAIaA,MAAAA,wDAAAA;AAAAA,MAAAA,gEAAAA,CAAAA,0DAAAA;AAUMA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAiFKA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AACaA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAWjCA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,oBAAAA,8DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClTZ;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBsB/F,IAAAA,6DAAAA;AAMEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAdJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AASFA,IAAAA,2DAAAA;;;;;AARKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAsBHA,IAAAA,6DAAAA;AAMEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAdJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AASFA,IAAAA,2DAAAA;;;;;AARKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AA+CHA,IAAAA,6DAAAA;AAIEA,IAAAA,qDAAAA;AAEFA,IAAAA,2DAAAA;;;;;AAJEA,IAAAA,yDAAAA;AAEAA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAWFA,IAAAA,6DAAAA;AACEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AATJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AAIFA,IAAAA,2DAAAA;;;;;AAJSA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAqBPA,IAAAA,6DAAAA;AAMEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAdJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AASFA,IAAAA,2DAAAA;;;;;AARKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;;;AAiBjBA,IAAAA,6DAAAA;AAKEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA,aAASC,kBAAT;AAAmB,KAAnB;AAEAD,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;;;AAGFA,IAAAA,6DAAAA;AAKEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA,aAASE,kBAAT;AAAmB,KAAnB;AAEAF,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;;;AAEFA,IAAAA,6DAAAA;AAIEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA,aAAS6P,mBAAT;AAAoB,KAApB;AAEA7P,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AA0BIA,IAAAA,6DAAAA;AAAsDA,IAAAA,qDAAAA;AAACA,IAAAA,2DAAAA;;;;;;AACvDA,IAAAA,6DAAAA;AAAyCA,IAAAA,qDAAAA;AAAWA,IAAAA,2DAAAA;;;;;AAAXA,IAAAA,wDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAKzCA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAKFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAKFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AAAmCA,IAAAA,qDAAAA;AAAqBA,IAAAA,2DAAAA;;;;;AAArBA,IAAAA,wDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAKnCA,IAAAA,wDAAAA;;;;;;;;AAGIA,IAAAA,6DAAAA;AAEEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA;AAAA,aAAS8P,4BAAT;AAAyB,KAAzB;AAKA9P,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;;;;;;;;AAEAA,IAAAA,6DAAAA;AAEEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA;AAAA,aAAS+P,kCAAT;AAA+B,KAA/B;AAIA/P,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;;;;;;;;;;;;AACAA,IAAAA,6DAAAA;AAKEA,IAAAA,wDAAAA;AAIFA,IAAAA,2DAAAA;;;;;;AAPEA,IAAAA,qEAAAA;AACAA,IAAAA,yDAAAA,gBAAAA,8DAAAA;;;;;;AAtBJA,IAAAA,sEAAAA;AACEA,IAAAA,yDAAAA;AAUAA,IAAAA,yDAAAA;AAQAA,IAAAA,yDAAAA;AAUFA,IAAAA,oEAAAA;;;;;AA3BKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AAUAA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AAQAA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AArBPA,IAAAA,6DAAAA;AACEA,IAAAA,yDAAAA;AA8BFA,IAAAA,2DAAAA;;;;;AA9BgCA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAiClCA,IAAAA,wDAAAA;;;;;;AACAA,IAAAA,wDAAAA;;;;;;AAGAA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;;;;;;;;AAFIA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;;;ADpRT,IAAMgQ,gBAAb;AAgCE,4BACU5P,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUG,EALV,EAMUuP,cANV,EAOUC,eAPV,EAQU1P,KARV,EASSC,WATT,EASiC;AAAA;;AAAA;;AARvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAvCT,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAWA,0BAA2B,CACzB,GADyB,EAEzB,SAFyB,EAGzB,SAHyB,EAKzB,aALyB,EAMzB,MANyB,EAOzB,MAPyB,EASzB,SATyB,EAUzB,QAVyB,EAWzB,QAXyB,CAA3B;AA6BED,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAKG,SAAL,GAAiBN,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB;AACD;;AAxDH;AAAA;AAAA,WA0DE,oBAAQ;AAAA;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,gEAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,gEAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAK1BmK,qBAAa,EAAE,CAAC,EAAD,EAAK,CAACxQ,gEAAD,CAAL,CALW;AAM1ByQ,cAAM,EAAE,CAAC,EAAD,EAAK,CAACzQ,gEAAD,CAAL,CANkB;AAO1B0Q,cAAM,EAAE,CAAC,EAAD,EAAK,CAAC1Q,gEAAD,CAAL,CAPkB;AAQ1B2Q,iBAAS,EAAE,CAAC,EAAD,EAAK,CAAC3Q,gEAAD,CAAL,CARe;AAS1B;AACA4Q,mBAAW,EAAE,CAAC,EAAD,EAAK,CAAC5Q,gEAAD,EAAsBqG,qGAAtB,CAAL;AAVa,OAAd,CAAd;AAaA,WAAKzF,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAKsO,iBAAL,CAAuB,CAAvB;AACA,WAAKC,cAAL,GAlBM,CAmBN;AACD;AA9EH;AAAA;AAAA,WA+EE,2BAAe;AAAA;;AACb,UAAI,KAAKjO,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AACD,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACgP,iBAAL,CAAuB,CAAvB;AACD,OAHD;AAID;AAxFH;AAAA;AAAA,SAyFE,eAAa;AACX,aAAO,KAAK9O,MAAL,CAAYkB,QAAnB;AACD;AA3FH;AAAA;AAAA,WA6FE,qBAAYiM,WAAZ,EAAiC;AAC/B,WAAKnN,MAAL,CAAYoB,UAAZ,CAAuB+L,WAAvB;AACA,WAAKvL,SAAL,CAAe6M,aAAf,CAA6B5M,QAA7B,CAAsCsL,WAAW,CAAC6B,KAAlD;AACA,WAAKpN,SAAL,CAAe8M,MAAf,CAAsB7M,QAAtB,CAA+BsL,WAAW,CAACuB,MAA3C;AAEA,WAAK9M,SAAL,CAAe+M,MAAf,CAAsB9M,QAAtB,CAA+BsL,WAAW,CAACwB,MAA3C;AACA,WAAK/M,SAAL,CAAegN,SAAf,CAAyB/M,QAAzB,CAAkCsL,WAAW,CAACyB,SAA9C;AACD;AApGH;AAAA;AAAA,WAsGE,qBAAYvN,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAzGH;AAAA;AAAA,WA0GE,qBAAS;AACP,WAAKG,SAAL,GAAiB,KAAjB;AACA,WAAKF,SAAL,CAAegD,OAAf,CAAuBmB,KAAvB;AACA,WAAKnE,SAAL,CAAekD,OAAf,CAAuBiB,KAAvB;AACA,WAAKnE,SAAL,CAAeiN,WAAf,CAA2B9I,KAA3B;AAEA,WAAKnE,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACD,KAjHH,CAkHE;AAEA;AAEA;;AAtHF;AAAA;AAAA,WAwHE,0BAAc;AAAA;;AACZ,WAAK2M,eAAL,CACGS,sBADH,CAC0B,KAAKnP,SAD/B,EAEGT,SAFH,CAEa,UAACM,GAAD,EAAoB;AAC7B,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACuP,WAAL,GAAmBvP,GAAnB;AACD;AACF,OANH;AAOD,KAhIH,CAkIE;;AAlIF;AAAA;AAAA,WAmIE,2BAAkByC,IAAlB,EAA8B;AAAA;;AAC5B,WAAKmM,cAAL,CACGY,WADH,CACe/M,IADf,EACqB,KAAKtC,SAD1B,EAEGT,SAFH,CAEa,UAACM,GAAD,EAAsB;AAC/B,YAAIA,GAAJ,EAAS;AACPsF,iBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBvF,GAAnB;AAEA,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuBuB,GAAG,CAACyP,YAA3B,CAAlB;AACAnK,iBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBvF,GAAG,CAACyP,YAAvB;AACA,gBAAI,CAAC7M,WAAL,GAAmB5C,GAAG,CAAC6C,SAAvB;AACA,gBAAI,CAAC1B,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;AACF,OAXH;AAYD;AAhJH;AAAA;AAAA,WAkJE,oBAAQ;AAAA;;AACN,WAAKc,SAAL,GAAiB,IAAjB;AACA,UAAIuN,WAAW,GAAG,EAAlB;AACAA,iBAAW,CAACnP,EAAZ,GAAiB,KAAK0B,SAAL,CAAe1B,EAAf,CAAkBsB,KAAnC;AACA6N,iBAAW,CAACzK,OAAZ,GAAsB,KAAKhD,SAAL,CAAegD,OAAf,CAAuBpD,KAA7C;AACA6N,iBAAW,CAACvK,OAAZ,GAAsB,KAAKlD,SAAL,CAAekD,OAAf,CAAuBtD,KAA7C;AACA6N,iBAAW,CAAC/J,SAAZ,GAAwB,KAAKxF,SAA7B;AACAuP,iBAAW,CAACV,MAAZ,GAAqB,KAAK/M,SAAL,CAAe+M,MAAf,CAAsBnN,KAA3C;AACA6N,iBAAW,CAACT,SAAZ,GAAwB,KAAKhN,SAAL,CAAegN,SAAf,CAAyBpN,KAAjD;AACA6N,iBAAW,CAACR,WAAZ,GAA0B,KAAKjN,SAAL,CAAeiN,WAAf,CAA2BrN,KAArD;AACAyD,aAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBmK,WAAnB;;AACA,UAAI,KAAKrP,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,aAAK0L,cAAL,CAAoBe,cAApB,CAAmCD,WAAnC,EAAgDhQ,SAAhD,CAA0D,UAACM,GAAD,EAAa;AACrE,gBAAI,CAACjB,OAAL,CAAasE,IAAb;;AAEA,cAAIrD,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,gBAAIsM,WAAW,CAACnP,EAAZ,IAAkB,CAAtB,EAAyB;AACvB,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAAC4P,OAAjC;;AACA,oBAAI,CAAChN,WAAL;;AACA,oBAAI,CAAC5D,MAAL,CAAYyE,OAAZ,CAAoB,yBAApB;AACD,aAJD,MAIO;AACL,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACf,EAAF,IAAQmP,WAAW,CAACnP,EAA3B;AAAA,eADM,CAAR;;AAGA,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAAC4P,OAA9B;;AACA,oBAAI,CAAC5Q,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD;;AAED,kBAAI,CAACtC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACuC,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SApBD;AAqBD,OAtBD,MAsBO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AACR;AApLH;AAAA;AAAA,WAsLE,2BAAkB0J,WAAlB,EAAuC;AAAA;;AACrC,WAAKvO,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE,KAAKlD,OAAL,IAAgB,IAAhB,GAAuB0M,WAAW,CAACvI,OAAnC,GAA6CuI,WAAW,CAACrI;AAD1D;AADqB,OAD/B,EAMGjB,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC0L,aAAL,CAAmBrC,WAAnB;AACd,OATH;AAUD,KAjMH,CAmME;;AAnMF;AAAA;AAAA,WAoME,uBAAcA,WAAd,EAAmC;AAAA;;AACjC,WAAKoB,cAAL,CAAoBiB,aAApB,CAAkCrC,WAAW,CAACjN,EAA9C,EAAkDb,SAAlD,CAA4D,UAACM,GAAD,EAAa;AACvE,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB;AACA;AACA,gBAAI,CAACpE,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;;AAEA,gBAAI,CAAC0L,iBAAL,CAAuB,CAAvB;;AACA,gBAAI,CAAChO,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AAEA,cAAIoM,WAAW,CAACjN,EAAZ,IAAkB,MAAI,CAAC0B,SAAL,CAAe1B,EAAf,CAAkBsB,KAAxC,EAA+C,MAAI,CAAC+B,SAAL;AAChD,SATD,MASO;AACL,gBAAI,CAAC5E,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAbD;AAcD;AAnNH;;AAAA;AAAA;;;mBAAa6K,kBAAgBhQ,gEAAAA,CAAAA,2DAAAA,GAAAA,gEAAAA,CAAAA,iFAAAA,GAAAA,gEAAAA,CAAAA,gEAAAA,GAAAA,gEAAAA,CAAAA,kEAAAA,GAAAA,gEAAAA,CAAAA,wDAAAA,GAAAA,gEAAAA,CAAAA,uGAAAA,GAAAA,gEAAAA,CAAAA,wGAAAA,GAAAA,gEAAAA,CAAAA,4DAAAA,GAAAA,gEAAAA,CAAAA,8EAAAA;AAAA;;;QAAhBgQ;AAAgBnK;AAAAC;AAAA;iEA8BhBjG,sEAAYA,EAAA;iEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACzEpBI,MAAAA,wDAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AAMFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAYA,MAAAA,qDAAAA;;AAAkCA,MAAAA,2DAAAA;AAC9CA,MAAAA,wDAAAA;AACAA,MAAAA,yDAAAA;AAiBFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAYA,MAAAA,qDAAAA;;AAAkCA,MAAAA,2DAAAA;AAC9CA,MAAAA,wDAAAA;AACAA,MAAAA,yDAAAA;AAiBFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AAKFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AAKFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AAMFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,yDAAAA;AAOFA,MAAAA,2DAAAA;AACAA,MAAAA,yDAAAA;AAYFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,wDAAAA;AACAA,MAAAA,yDAAAA;AAiBFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,yDAAAA;AAWAA,MAAAA,yDAAAA;AASAA,MAAAA,yDAAAA;AAQFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAiBA,MAAAA,qDAAAA;;AAAwCA,MAAAA,2DAAAA;AACzDA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAWA,MAAAA,qDAAAA;;AAAkCA,MAAAA,2DAAAA;AAC7CA,MAAAA,6DAAAA;AAEEA,MAAAA,yDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,2DAAAA;AAMFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAEEA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AACFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAEAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAEAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AACFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AAgCFA,MAAAA,oEAAAA;AAEAA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAKFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AAEEA,MAAAA,yDAAAA;AAAA,eAAQ+F,yCAAqC,CAArC,CAAR;AAA+C,OAA/C;AAMF/F,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;;;;AA3UQA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAUUA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAIcA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAITA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAmBSA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAITA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAqBHA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,yCAAmC,WAAnC,EAAmC+F,aAAnC;AAOA/F,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,sCAAgC,cAAhC,EAAgC+F,2BAAhC,EAAgC,WAAhC,EAAgCA,aAAhC;AAQA/F,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,sCAAgC,aAAhC,EAAgC+F,oBAAhC,EAAgC,WAAhC,EAAgCA,aAAhC;AAWE/F,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAIEA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAGgBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAQjBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAiBDA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAICA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAyBZA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAWAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AASAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAeYA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAGFA,MAAAA,wDAAAA;AAAAA,MAAAA,gEAAAA,CAAAA,0DAAAA;AAUMA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AA8GKA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AACaA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAWjCA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,oBAAAA,8DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnUZ;AAEA;AACA;AACA;AASA;AAKA;;;;;;;;;;;;;;;;;;;;;;ACbM/F,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAmBcA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAkBjBA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASwM,kBAAT;AAAmB,KAAnB;AAEAxM,IAAAA,uDAAAA;AAEAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAIFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASyM,kBAAT;AAAmB,KAAnB;AAEAzM,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAEFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAS0M,mBAAT;AAAoB,KAApB;AAEA1M,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA8BIA,IAAAA,4DAAAA;AAAuDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACxDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASyN,gDAAT;AAA6C,KAA7C;;AAIAzN,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS0N,4CAAT;AAAyC,KAAzC;;AAIA1N,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADrKT,IAAMmR,wBAAb;AAmBE,oCACUzQ,EADV,EAEU0Q,kBAFV,EAGU7Q,SAHV,EAIUH,OAJV,EAKUqK,SALV,EAMUnK,MANV,EAOUE,KAPV,EAQSkK,QART,EAQ8B;AAAA;;AAAA;;AAPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA1BT,2BAAyC,EAAzC;AAEA,qBAAY,KAAZ;AACA,mBAAkB,CAAlB,CAuB8B,CAf9B;;AACA,4BAA6B,CAAC,GAAD,EAAO,SAAP,EAAiB,SAAjB,EAA4B,SAA5B,CAA7B,CAc8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAID,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACA;;AAnDH;AAAA;AAAA,WAqDE,oBAAQ;AACN,WAAK4P,qBAAL,CAA2B,CAA3B;AAEA,WAAK3P,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BwC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1BiD,eAAO,EAAE,CAAC,EAAD,EAAK,CAACzH,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BqB,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC1H,+DAAD,EAAsBqG,qGAAtB,CAAL;AAHiB,OAAd,CAAd;AAOD;AA/DH;AAAA;AAAA,WAiEE,2BAAe;AAAA;;AACb,UAAI,KAAKxD,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKgI,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAAC6P,qBAAL,CAA2B,CAA3B;AACD,OAHD;AAID;AA3EH;AAAA;AAAA,WA6EE,qBAAYtO,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AApFH;AAAA;AAAA,SAsFE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD;AAxFH;AAAA;AAAA,WAyFE,qBAAS;AACP,WAAKlB,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAe3I,EAAf,CAAkBZ,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD,KA7FH,CA+FE;;AA/FF;AAAA;AAAA,WAgGE,+BAAsBM,IAAtB,EAAkC;AAAA;;AAChC,WAAKiJ,OAAL,GAAejJ,IAAf;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAK0M,kBAAL,CAAwBC,qBAAxB,CAA8CvN,IAA9C,EAAmD,KAAKtC,SAAxD,EAAmET,SAAnE,CAA6E,UAACM,GAAD,EAAoC;AAC/G,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACiQ,eAAL,GAAuBjQ,GAAG,CAACkQ,kBAA3B;AACA,gBAAI,CAAC/O,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuB,MAAI,CAACwR,eAA5B,CAAlB;AACA,gBAAI,CAACrN,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACAH,iBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCvF,GAAG,CAACkQ,kBAAxC;AACD;;AACD,cAAI,CAACnR,OAAL,CAAa8E,IAAb;AACD,OARD;AASD;AA7GH;AAAA;AAAA,WA+GE,oBAAQ;AAAA;;;;AACN,WAAK1B,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIiN,cAAc,GAAG,EAArB;AACAA,sBAAc,CAACrN,EAAf,GAAmB,WAAK2I,SAAL,CAAe3I,EAAf,MAAiB,IAAjB,IAAiB+F,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEhH,KAAtC;AACAsO,sBAAc,CAAChQ,SAAf,GAA2B,KAAKA,SAAhC;AACAgQ,sBAAc,CAACpK,OAAf,GAAyB,WAAK0F,SAAL,CAAe1F,OAAf,MAAsB,IAAtB,IAAsB+F,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK,KAAjD;AACAsO,sBAAc,CAACnK,OAAf,GAAyB,WAAKyF,SAAL,CAAezF,OAAf,MAAsB,IAAtB,IAAsB+F,aAAtB,GAAsB,MAAtB,GAAsBA,GAAElK,KAAjD;AACAyD,eAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B4K,cAA9B;AACA,aAAKJ,kBAAL,CAAwBK,qBAAxB,CAA8CD,cAA9C,EAA8DzQ,SAA9D,CACE,UAACM,GAAD,EAAa;AACX,cAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,gBAAI+M,cAAc,CAACrN,EAAf,IAAmB,CAAvB,EAA0B;AACxB,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAACqQ,gBAAjC;;AACA,oBAAI,CAACzN,WAAL;;AACA,oBAAI,CAACwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AACD,aAJD,MAIO;AACL,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACwB,EAAF,IAAQ,MAAI,CAAC2I,SAAL,CAAe3I,EAAf,CAAkBjB,KAAjC;AAAA,eADM,CAAR;;AAIA,oBAAI,CAACV,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAACqQ,gBAA9B;;AAEA,oBAAI,CAACjH,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD;;AACD,kBAAI,CAACtC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,kBAAI,CAACwC,SAAL;AACD;;AACD,gBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD,SApBH;AAsBD,OA7BD,MA6BO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KA/IH,CAmJE;;AAnJF;AAAA;AAAA,WAoJE,8BAAqBqM,cAArB,EAAwD;AACtD,WAAK9P,MAAL,CAAYoB,UAAZ,CAAuB0O,cAAvB;AACD,KAtJH,CA0JE;;AA1JF;AAAA;AAAA,WA2JE,0BAAiBA,cAAjB,EAAoD;AAAA;;AAClD,UAAIG,kBAAkB,GACpB,KAAKvG,WAAL,IAAoB,IAApB,GACIoG,cAAc,CAACpK,OADnB,GAEIoK,cAAc,CAACnK,OAHrB;AAKA,WAAK/G,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEsM;AADD;AADqB,OAD/B,EAMGpM,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACoM,oBAAL,CAA0BJ,cAA1B;AACd,OATH;AAUD,KA3KH,CA6KE;;AA7KF;AAAA;AAAA,WA8KE,8BAAqBA,cAArB,EAAwD;AAAA;;AACtD,WAAKpR,OAAL,CAAasE,IAAb;AACA,WAAK0M,kBAAL,CAAwBQ,oBAAxB,CAA6CJ,cAAc,CAACrN,EAA5D,EAAgEpD,SAAhE,CACE,UAACM,GAAD,EAAa;AACX,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAI6O,cAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAAChP,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B;;AACA,gBAAI,CAACvC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AAEA,gBAAI,CAACgI,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SAND,MAMO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAZH;AAcD;AA9LH;;AAAA;AAAA;;;mBAAaiM,0BAAwBnR,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,qHAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAAxBmR;AAAwBtL;AAAAC;AAAA;gEAgBxBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AC3CpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAYAA,MAAAA,wDAAAA;AAQAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAgDA,MAAAA,0DAAAA;AAElDA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,6CAAyC,CAAzC,CAAR;AAAmD,OAAnD;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA1MuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2BZA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAYAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAcHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAgBmBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2DKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpMZ;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkCsB/F,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAHEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAUFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAqDfA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASyM,qCAAT;AAAkC,KAAlC;;AAIAzM,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AALJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAPKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAPPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAUFA,IAAAA,0DAAAA;;;;;AAVgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAalCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;;;;;;;ADvIT,IAAM6R,+BAAb;AA4BE,2CACUnR,EADV,EAEUoR,WAFV,EAGUC,iBAHV,EAIUC,aAJV,EAKUzR,SALV,EAMUH,OANV,EAOUqK,SAPV,EAQUnK,MARV,EASUE,KATV,EAUSkK,QAVT,EAU8B;AAAA;;AAAA;;AATpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AArCT,wBAAqC,EAArC;AACA,+BAA4C,EAA5C;AACA,uBAAsB,CAAtB;AAKA,qBAAqB,KAArB,CA8B8B,CAxB9B;AAEA;;AACA,4BAA6B,CAC3B,GAD2B,EAE3B,cAF2B,EAG3B,eAH2B,EAI3B,SAJ2B,CAA7B,CAqB8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AA9DH;AAAA;AAAA,WAgEE,oBAAQ;AAAA;;;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BsQ,eAAO,EAAE,CACP;AACE/O,eAAK,EAAE,YAAKgP,cAAL,MAAmB,IAAnB,IAAmBhI,aAAnB,GAAmB,MAAnB,GAAmBA,GAAEtI,EAArB,KAA2B,CADpC;AAEE2M,kBAAQ,EAAE;AAFZ,SADO,EAKP,CAAC5O,gEAAD,CALO,CADiB;AAQ1BwS,kBAAU,EAAE,CAAC,EAAD,EAAK,CAACxS,gEAAD,CAAL;AARc,OAAd,CAAd,CADM,CAYN;;AACA,WAAKa,KAAL,CAAWmK,QAAX,CAAoB5J,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,YAAIY,EAAE,GAAGV,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,SAAX,CAAD,CAAf;;AACA,YAAIS,EAAJ,EAAQ;AACN,gBAAI,CAACwQ,WAAL,GAAmBxQ,EAAnB;;AACA,gBAAI,CAACmQ,iBAAL,CAAuBM,gCAAvB,CACE,MAAI,CAACD,WADP,EAEErR,SAFF,CAEY,UAACM,GAAD,EAAQ;;;AAClB,gBAAIA,GAAJ,EAAS;AACP,oBAAI,CAAC6Q,cAAL,GAAsB7Q,GAAtB;AACA,gCAAI,CAACyL,SAAL,MAAc,IAAd,IAAc5C,aAAd,GAAc,MAAd,GAAcA,GAAE+H,OAAhB,MAAuB,IAAvB,IAAuB9E,aAAvB,GAAuB,MAAvB,GAAuBA,GAAE5J,QAAF,CAAW,MAAI,CAAC2O,cAAL,CAAoBtQ,EAA/B,CAAvB;;AACA,oBAAI,CAAC0Q,uBAAL,CAA6B,MAAI,CAACJ,cAAL,CAAoBtQ,EAAjD;AACD;AACF,WARD;AASD;AACF,OAdD;AAgBA,WAAK2Q,yBAAL,CAA+B,CAA/B;AACD;AA9FH;AAAA;AAAA,WAgGE,2BAAe;AAAA;;AACb,UAAI,KAAK/P,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKgI,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAAC+Q,yBAAL,CAA+B,CAA/B;AACD,OAHD;AAID;AA1GH;AAAA;AAAA,WA4GE,qBAAYxP,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AAnHH;AAAA;AAAA,SAqHE,eAAa;;;AACX,aAAO,WAAKnL,MAAL,MAAW,IAAX,IAAWwI,aAAX,GAAW,MAAX,GAAWA,GAAEtH,QAApB;AACD;AAvHH;AAAA;AAAA,WAyHE,iCAAwB4P,SAAxB,EAAyC;AAAA;;AACvC,WAAK1F,SAAL,CAAeqF,UAAf,CAA0B1K,KAA1B;AACA,WAAKgL,YAAL,GAAoB,EAApB;;AACA,UAAID,SAAJ,EAAe;AACb,aAAKpS,OAAL,CAAasE,IAAb;AACA,aAAKoN,WAAL,CAAiBY,uBAAjB,CAAyCF,SAAzC,EAAoDzR,SAApD,CAA8D,UAACM,GAAD,EAAQ;AACpE,cAAIA,GAAJ,EAAS;AACP,kBAAI,CAACoR,YAAL,GAAoBpR,GAApB;;AACA,kBAAI,CAACyL,SAAL,CAAeqF,UAAf,CAA0B5O,QAA1B,CAAmClC,GAAG,CAAC4J,GAAJ,CAAQ,UAAC0H,GAAD;AAAA,qBAASA,GAAG,CAAC/Q,EAAb;AAAA,aAAR,CAAnC;AACD;;AACD,gBAAI,CAACxB,OAAL,CAAa8E,IAAb;AACD,SAND;AAOD;AACF,KAtIH,CAwIE;;AAxIF;AAAA;AAAA,WAyIE,mCAA0BpB,IAA1B,EAAsC;AAAA;;AACpC,WAAK1D,OAAL,CAAasE,IAAb;AACA,WAAKoN,WAAL,CAAiBc,iCAAjB,CACE,KAAKR,WADP,EAEEtO,IAFF,EAGE/C,SAHF,CAGY,UAACM,GAAD,EAAQ;AAClB,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACwR,mBAAL,GAA2BxR,GAAG,CAACyR,aAA/B;AACA,gBAAI,CAACtQ,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuB,MAAI,CAAC+S,mBAA5B,CAAlB;AACA,gBAAI,CAAC5O,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACA,gBAAI,CAACtE,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;;AACD,cAAI,CAACtC,OAAL,CAAa8E,IAAb;AACD,OAXD;AAYD;AAvJH;AAAA;AAAA,WAyJE,oBAAQ;AAAA;;AACN,WAAK1B,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIwO,QAAQ,GAAyB;AACnC;AACAZ,oBAAU,EAAE,KAAKrF,SAAL,CAAeqF,UAAf,CAA0BjP;AAFH,SAArC;AAIAyD,eAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBmM,QAAvB;AAEA,aAAK3S,OAAL,CAAasE,IAAb;AACA,aAAKsN,aAAL,CAAmBgB,yBAAnB,CAA6CD,QAA7C,EAAuDhS,SAAvD,CACE,UAACM,GAAD,EAAa;AACX,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACgG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB,EADwB,CAExB;;;AACA,kBAAI,CAACyN,yBAAL,CAA+B,CAA/B,EAHwB,CAIxB;AACA;AACA;AACA;;AACD,WARD,MAQO,MAAI,CAAC9H,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;;AACP,gBAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,SAZH;AAcD,OAtBD,MAsBO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KAlLH,CAoLE;;AApLF;AAAA;AAAA,WAqLE,0BAAiB8N,OAAjB,EAA4C;AAAA;;AAC1C,WAAK3S,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE4N,OAAO,CAACC;AADT;AADqB,OAD/B,EAMG3N,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC2N,aAAL,CAAmBF,OAAnB;AACd,OATH;AAUD,KAhMH,CAkME;;AAlMF;AAAA;AAAA,WAmME,uBAAcA,OAAd,EAAyC;AAAA;;AACvC,WAAK7S,OAAL,CAAasE,IAAb;AACA,WAAKsN,aAAL,CAAmBoB,0BAAnB,CAA8CH,OAAO,CAACrR,EAAtD,EAA0Db,SAA1D,CACE,UAACM,GAAD,EAAa;AACX,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIsQ,OAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACzQ,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B,EAFyB,CAGzB;;;AACA,gBAAI,CAACvC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B,CAJyB,CAMzB;;AAEA,gBAAI,CAAC+H,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SATD,MASO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAfH;AAiBD;AAtNH;;AAAA;AAAA;;;mBAAa2M,iCAA+B7R,+DAAAA,CAAAA,wDAAAA,GAAAA,+DAAAA,CAAAA,gGAAAA,GAAAA,+DAAAA,CAAAA,uHAAAA,GAAAA,+DAAAA,CAAAA,mHAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAA/B6R;AAA+BhM;AAAAC;AAAA;gEAyB/BjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACrDpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAGAA,MAAAA,4DAAAA;AAQEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,uDAAAA;AAIFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAmCA,MAAAA,0DAAAA;AAC9CA,MAAAA,4DAAAA;AAIEA,MAAAA,wDAAAA;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,uDAAAA;AACAA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAmCA,MAAAA,0DAAAA;AACpDA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAgBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,iDAA6C,CAA7C,CAAR;AAAuD,OAAvD;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA5KQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAMEA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,gBAAAA,6DAAAA;AAKAA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAMQA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKEA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,kEAA8B,WAA9B,EAA8B+F,aAA9B;AAQW/F,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAMaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQrBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAyBbA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeaA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAkDKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvKZ;AAEA;AACA;AACA;AASA;AAKA;;;;;;;;;;;;;;;;;;;;;;ACbM/F,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAmBcA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA8BHA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AAEFA,IAAAA,0DAAAA;;;;;AAFEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AAEFA,IAAAA,0DAAAA;;;;;AAFEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAlBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAKAA,IAAAA,wDAAAA;AAKFA,IAAAA,0DAAAA;;;;;AAdSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAKAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAyBrBA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASqT,kBAAT;AAAmB,KAAnB;AAEFrT,IAAAA,uDAAAA;AAEEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAIDA,IAAAA,4DAAAA;AAIAA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASuJ,kBAAT;AAAmB,KAAnB;AAEAvJ,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAEDA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASsT,mBAAT;AAAoB,KAApB;AAEAtT,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA6BIA,IAAAA,4DAAAA;AAAuDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACxDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS0H,oCAAT;AAAiC,KAAjC;;AAIA1H,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS2H,sCAAT;AAAmC,KAAnC;;AAIA3H,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADvOT,IAAMuT,kBAAb;AA0BE,8BACU7S,EADV,EAEU8S,YAFV,EAGUjT,SAHV,EAIUH,OAJV,EAKUqK,SALV,EAMUnK,MANV,EAOUE,KAPV,EAQSkK,QART,EAQ8B;AAAA;;AAAA;;AAPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAhCT,qBAAY,KAAZ;AACA,mBAAkB,CAAlB,CA+B8B,CAvB9B;;AACA,4BAA6B,CAC3B,GAD2B,EAE3B,SAF2B,EAG3B,SAH2B,EAK3B,YAL2B,EAM3B,aAN2B,EAO3B,SAP2B,CAA7B,CAsB8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AA1DH;AAAA;AAAA,WA4DE,oBAAQ;AACN,WAAKgS,eAAL,CAAqB,CAArB;AAEA,WAAK/R,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BwC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1BmC,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAI1B0N,kBAAU,EAAE,CACV,EADU,EAEV,CAAC/T,+DAAD,EAAsBA,0DAAA,CAAe,CAAf,CAAtB,EAAyCA,0DAAA,CAAe,GAAf,CAAzC,CAFU,CAJc;AAQ1BkU,mBAAW,EAAE,CAAC,EAAD;AARa,OAAd,CAAd;AAUD;AAzEH;AAAA;AAAA,WA2EE,2BAAe;AAAA;;AACb,UAAI,KAAKrR,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKgI,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACiS,eAAL,CAAqB,CAArB;AACD,OAHD;AAID;AArFH;AAAA;AAAA,WAuFE,qBAAY1Q,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AA9FH;AAAA;AAAA,SAgGE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD;AAlGH;AAAA;AAAA,WAmGE,qBAAS;AACP,WAAKlB,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAe3I,EAAf,CAAkBZ,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD,KAvGH,CAyGE;;AAzGF;AAAA;AAAA,WA0GE,yBAAgBM,IAAhB,EAA4B;AAAA;;AAC1B,WAAKiJ,OAAL,GAAejJ,IAAf;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAK8O,YAAL,CAAkBC,eAAlB,CAAkC3P,IAAlC,EAAwC,KAAKtC,SAA7C,EAAwDT,SAAxD,CACE,UAACM,GAAD,EAA+B;AAC7B,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuBuB,GAAG,CAACyS,YAA3B,CAAlB;AACA,gBAAI,CAAC7P,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACAH,iBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BvF,GAA9B;AACD;;AACD,cAAI,CAACjB,OAAL,CAAa8E,IAAb;AACD,OARH;AAUD;AAxHH;AAAA;AAAA,WA0HE,oBAAQ;AAAA;;;;AACN,WAAK1B,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIwP,QAAQ,GAAG,EAAf;AACAA,gBAAQ,CAAC5P,EAAT,GAAc,WAAK2I,SAAL,CAAe3I,EAAf,MAAiB,IAAjB,IAAiB+F,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEhH,KAAjC;AACA6Q,gBAAQ,CAAC/M,SAAT,GAAqB,KAAKxF,SAA1B;AACAuS,gBAAQ,CAACzN,OAAT,GAAmB,WAAKwG,SAAL,CAAexG,OAAf,MAAsB,IAAtB,IAAsB6G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK,KAA3C;AACA6Q,gBAAQ,CAACvN,OAAT,GAAmB,WAAKsG,SAAL,CAAetG,OAAf,MAAsB,IAAtB,IAAsB4G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAElK,KAA3C;AACA6Q,gBAAQ,CAACL,UAAT,GAAsB,WAAK5G,SAAL,CAAe4G,UAAf,MAAyB,IAAzB,IAAyBM,aAAzB,GAAyB,MAAzB,GAAyBA,GAAE9Q,KAAjD;AACA6Q,gBAAQ,CAACF,WAAT,GAAuB,WAAK/G,SAAL,CAAe+G,WAAf,MAA0B,IAA1B,IAA0BI,aAA1B,GAA0B,MAA1B,GAA0BA,GAAE/Q,KAAnD;AACAyD,eAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBmN,QAAxB;AAEA,aAAKP,YAAL,CAAkBU,eAAlB,CAAkCH,QAAlC,EAA4ChT,SAA5C,CAAsD,UAACM,GAAD,EAAa;AACjE,cAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,kBAAI,CAACrE,OAAL,CAAasE,IAAb;;AAEA,gBAAIqP,QAAQ,CAAC5P,EAAT,IAAe,CAAnB,EAAsB;AACpB,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAAC0S,QAAjC;;AACA,oBAAI,CAAC9P,WAAL;;AACA,oBAAI,CAACwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AACD,aAJD,MAIO;AACL,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACwB,EAAF,IAAQ4P,QAAQ,CAAC5P,EAAxB;AAAA,eAA/B,CAAR;;AACA,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAAC0S,QAA9B;;AAEA,oBAAI,CAACtJ,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD;;AACD,kBAAI,CAACtC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,kBAAI,CAACwC,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SAlBD;AAmBD,OA7BD,MA6BO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KA1JH,CA4JE;;AA5JF;AAAA;AAAA,WA6JE,wBAAe4O,QAAf,EAAsC;AACpC,WAAKrS,MAAL,CAAYoB,UAAZ,CAAuBiR,QAAvB;AACD,KA/JH,CAiKE;;AAjKF;AAAA;AAAA,WAkKE,0BAAiBA,QAAjB,EAAwC;AAAA;;AACtC,UAAII,YAAY,GACd,KAAK/I,WAAL,IAAoB,IAApB,GAA2B2I,QAAQ,CAACzN,OAApC,GAA8CyN,QAAQ,CAACvN,OADzD;AAGA,WAAKlG,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE8O;AADD;AADqB,OAD/B,EAMG5O,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC4O,cAAL,CAAoBL,QAApB;AACd,OATH;AAUD,KAhLH,CAkLE;;AAlLF;AAAA;AAAA,WAmLE,wBAAeA,QAAf,EAAsC;AAAA;;AACpC,WAAK3T,OAAL,CAAasE,IAAb;AACA,WAAK8O,YAAL,CAAkBY,cAAlB,CAAiCL,QAAQ,CAAC5P,EAA1C,EAA8CpD,SAA9C,CAAwD,UAACM,GAAD,EAAa;AACnE,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIoR,QAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACvR,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B;;AACA,gBAAI,CAACvC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AAEA,gBAAI,CAACgI,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SAND,MAMO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAXD;AAYD;AAjMH;;AAAA;AAAA;;;mBAAaqO,oBAAkBvT,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,gHAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAAlBuT;AAAkB1N;AAAAC;AAAA;gEAuBlBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AClDpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AAKAA,MAAAA,wDAAAA;AAsBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAYCA,MAAAA,wDAAAA;AAQDA,MAAAA,wDAAAA;AASFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAqCA,MAAAA,0DAAAA;AACtDA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,uCAAmC,CAAnC,CAAR;AAA6C,OAA7C;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA5QuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAqBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAsBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2BDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeXA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAYDA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAcYA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA+EKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtQZ;AAEA;AACA;AACA;AAUA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;AClBM/F,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAqBcA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AAKFA,IAAAA,0DAAAA;;;;;;AAPEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAcFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA0BPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAbJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAcFA,IAAAA,0DAAAA;;;;;AAlBSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAgCPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AAEFA,IAAAA,0DAAAA;;;;;AAFEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AAEFA,IAAAA,0DAAAA;;;;;AAFEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAlBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAKAA,IAAAA,wDAAAA;AAKFA,IAAAA,0DAAAA;;;;;AAdSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAKAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAyBrBA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASC,kBAAT;AAAmB,KAAnB;AAEAD,IAAAA,uDAAAA;AAEAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAIFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAS0N,kBAAT;AAAmB,KAAnB;AAEA1N,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAEFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAS2N,mBAAT;AAAoB,KAApB;AAEA3N,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA4BIA,IAAAA,4DAAAA;AAAuDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACxDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AAKFA,IAAAA,0DAAAA;;;;;;AALEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAUFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS4N,sCAAT;AAAmC,KAAnC;;AAIA5N,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS6N,uCAAT;AAAoC,KAApC;;AAIA7N,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAoBFA,IAAAA,mEAAAA;;;;;AA5BKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AA+BFA,IAAAA,0DAAAA;;;;;AA/BgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAkClCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;AD7ST,IAAMqU,mBAAb;AA4BE,+BACU3T,EADV,EAEUsR,aAFV,EAGUwB,YAHV,EAIUjT,SAJV,EAKUH,OALV,EAMUqK,SANV,EAOUnK,MAPV,EAQUE,KARV,EASSkK,QATT,EAS8B;AAAA;;AAAA;;AARpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AApCT,sBAA+B,EAA/B;AAEA,qBAAY,KAAZ;AACA,mBAAkB,CAAlB;AAGA,qBAAqC,EAArC,CA8B8B,CAxB9B;;AACA,4BAA6B,CAC3B,GAD2B,EAE3B,UAF2B,EAG3B,UAH2B,EAI3B,eAJ2B,EAK3B,aAL2B,EAM3B,aAN2B,EAO3B,SAP2B,CAA7B,CAuB8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AA7DH;AAAA;AAAA,WA+DE,oBAAQ;AACN,WAAK6S,gBAAL,CAAsB,CAAtB;AAEA,WAAK5S,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B2S,gBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC5U,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFgB;AAG1BwO,kBAAU,EAAE,CAAC,EAAD,EAAK,CAAC7U,+DAAD,CAAL,CAHc;AAI1B8U,oBAAY,EAAE,CACZ,EADY,EAEZ,CACE9U,+DADF;AAEE;AAA6CqG,QAAAA,mGAF/C,CAFY,CAJY;AAW1B2O,eAAO,EAAE,CACP,EADO,EAEP,CAAChV,+DAAD,EAAsBA,0DAAA,CAAe,CAAf,CAAtB,EAAyCA,0DAAA,CAAe,GAAf,CAAzC,CAFO,CAXiB;AAe1BkU,mBAAW,EAAE,CAAC,EAAD;AAfa,OAAd,CAAd,CAHM,CAqBN;;AACA,WAAKJ,eAAL;AAED;AAvFH;AAAA;AAAA,WAyFE,2BAAe;AAAA;;AACb,UAAI,KAAKjR,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC,CADmB,CAGnB;;AACA,aAAKD,UAAL,CAAgBoS,mBAAhB,GAAsC,UAACC,IAAD,EAAOC,QAAP,EAAmB;AACvD,kBAAQA,QAAR;AACE,iBAAK,UAAL;AACE,qBAAO,MAAI,CAAC1J,WAAL,IAAoB,IAApB,GACHyJ,IAAI,CAACE,gBADF,GAEHF,IAAI,CAACG,gBAFT;;AAGF;AACE,qBAAOH,IAAI,CAACC,QAAD,CAAX;AANJ;AAQD,SATD;;AAUA,aAAKtS,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B,CAdmB,CAgBnB;;AACA,aAAKF,UAAL,CAAgByS,eAAhB,GAAkC,UAACtQ,IAAD,EAAuBxB,MAAvB,EAAiC;AACjE,iBAAO,MAAI,CAACiI,WAAL,IAAoB,IAApB,GACHzG,IAAI,CAACoQ,gBAAL,CAAsBG,iBAAtB,GAA0CC,OAA1C,CAAkDhS,MAAlD,KAA6D,CAAC,CAD3D,GAEHwB,IAAI,CAACqQ,gBAAL,CAAsBE,iBAAtB,GAA0CC,OAA1C,CAAkDhS,MAAlD,KAA6D,CAAC,CAFlE;AAGD,SAJD;AAKD;;AAED,WAAKuH,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAAC8S,gBAAL,CAAsB,CAAtB;AACD,OAHD;AAID;AAtHH;AAAA;AAAA,WAwHE,qBAAYvR,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AA/HH;AAAA;AAAA,SAiIE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD;AAnIH;AAAA;AAAA,WAoIE,qBAAS;AACP,WAAKlB,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAelL,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD,KAxIH,CA0IE;;AA1IF;AAAA;AAAA,WA2IE,2BAAe;AAAA;;AACb,WAAKgQ,YAAL,CAAkB4B,uBAAlB,CAA0C,KAAK5T,SAA/C,EAA0DT,SAA1D,CACE,UAACM,GAAD,EAAQ;AACN,YAAIA,GAAJ,EAAS;AAAC,gBAAI,CAACgU,SAAL,GAAiBhU,GAAjB;AAAqBsF,iBAAO,CAACC,GAAR,CAAYvF,GAAZ;AAAiB;AACjD,OAHH;AAKD,KAjJH,CAmJE;;AAnJF;AAAA;AAAA,WAoJE,4BAAgB;;;AACd,UAAIO,EAAE,GAAG,WAAKkL,SAAL,MAAc,IAAd,IAAc5C,aAAd,GAAc,MAAd,GAAcA,GAAEoL,UAAF,CAAapS,KAApC;;AACA,UAAItB,EAAJ,EAAQ;AACN,YAAI2T,UAAU,GAAG,KAAKF,SAAL,CAAeG,IAAf,CAAoB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACtR,EAAF,IAAQvC,EAAf;AAAA,SAApB,EAAuC8R,UAAxD;AACA,mBAAK5G,SAAL,MAAc,IAAd,IAAcK,aAAd,GAAc,MAAd,GAAcA,GAAEuI,WAAF,CAAcC,aAAd,CAA4B,CACxChW,+DADwC,EAExCA,0DAAA,CAAe,CAAf,CAFwC,EAGxCA,0DAAA,CAAe4V,UAAf,CAHwC,CAA5B,CAAd;AAKD,OAPD,MAOO;AACL,mBAAKzI,SAAL,MAAc,IAAd,IAAcM,aAAd,GAAc,MAAd,GAAcA,GAAEuH,OAAF,CAAUgB,aAAV,CAAwB,CACpChW,+DADoC,EAEpCA,0DAAA,CAAe,CAAf,CAFoC,EAGpCA,0DAAA,CAAe,GAAf,CAHoC,CAAxB,CAAd;AAKD;;AACD,iBAAKmN,SAAL,MAAc,IAAd,IAAckH,aAAd,GAAc,MAAd,GAAcA,GAAEW,OAAF,CAAUiB,sBAAV,EAAd;AACD,KArKH,CAuKE;;AAvKF;AAAA;AAAA,WAwKE,0BAAiB9R,IAAjB,EAA6B;AAAA;;AAC3B,WAAKiJ,OAAL,GAAejJ,IAAf;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAKsN,aAAL,CAAmBsC,gBAAnB,CAAoCxQ,IAApC,EAA0C,KAAKtC,SAA/C,EAA0DT,SAA1D,CACE,UAACM,GAAD,EAA+B;AAC7B,YAAIA,GAAJ,EAAS;AAEP,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuBuB,GAAG,CAACyR,aAA3B,CAAlB;AACA,gBAAI,CAAC7O,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACAH,iBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BvF,GAA/B;AACD;;AACD,cAAI,CAACjB,OAAL,CAAa8E,IAAb;AACD,OATH;AAWD;AAvLH;AAAA;AAAA,WAyLE,oBAAQ;AAAA;;;;AACN,WAAK1B,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIsR,SAAS,GAAG,EAAhB;AACAA,iBAAS,CAACjU,EAAV,GAAc,WAAKkL,SAAL,CAAelL,EAAf,MAAiB,IAAjB,IAAiBsI,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEhH,KAAjC;AACA2S,iBAAS,CAAC7O,SAAV,GAAsB,KAAKxF,SAA3B;AACAqU,iBAAS,CAACtB,QAAV,GAAqB,WAAKzH,SAAL,CAAeyH,QAAf,MAAuB,IAAvB,IAAuBpH,aAAvB,GAAuB,MAAvB,GAAuBA,GAAEjK,KAA9C;AACA2S,iBAAS,CAACrB,UAAV,GAAuB,WAAK1H,SAAL,CAAe0H,UAAf,MAAyB,IAAzB,IAAyBpH,aAAzB,GAAyB,MAAzB,GAAyBA,GAAElK,KAAlD;AACA2S,iBAAS,CAACpB,YAAV,GAAyB,WAAK3H,SAAL,CAAe2H,YAAf,MAA2B,IAA3B,IAA2BT,aAA3B,GAA2B,MAA3B,GAA2BA,GAAE9Q,KAAtD;AACA2S,iBAAS,CAAClB,OAAV,GAAoB,WAAK7H,SAAL,CAAe6H,OAAf,MAAsB,IAAtB,IAAsBV,aAAtB,GAAsB,MAAtB,GAAsBA,GAAE/Q,KAA5C;AACA2S,iBAAS,CAAChC,WAAV,GAAwB,WAAK/G,SAAL,CAAe+G,WAAf,MAA0B,IAA1B,IAA0BiC,aAA1B,GAA0B,MAA1B,GAA0BA,GAAE5S,KAApD;AACAyD,eAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBiP,SAAzB;AACA,aAAK7D,aAAL,CAAmB+D,kBAAnB,CAAsCF,SAAtC,EAAiD9U,SAAjD,CAA2D,UAACM,GAAD,EAAa;AACtE,cAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,kBAAI,CAACrE,OAAL,CAAasE,IAAb;;AAEA,gBAAImR,SAAS,CAACjU,EAAV,IAAc,CAAlB,EAAqB;AACnB,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAAC2U,UAAjC;;AACA,oBAAI,CAAC/R,WAAL;;AACA,oBAAI,CAACwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AACD,aAJD,MAIK;AACH,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACf,EAAF,IAAQiU,SAAS,CAACjU,EAAzB;AAAA,eADM,CAAR;;AAGA,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAAC2U,UAA9B;;AAEA,oBAAI,CAACvL,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD;;AACD,kBAAI,CAACtC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,kBAAI,CAACwC,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD,WAlBD,MAkBO;AACL,kBAAI,CAACuF,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;AACF,SAtBD;AAuBD,OAjCD,MAiCO,KAAKrB,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KA7NH,CA+NE;AAEA;;AAjOF;AAAA;AAAA,WAkOE,yBAAgB0Q,SAAhB,EAAyC;;;AACvC,WAAKnU,MAAL,CAAYoB,UAAZ,CAAuB+S,SAAvB;AACA,iBAAK/I,SAAL,CAAe0H,UAAf,MAAyB,IAAzB,IAAyBtK,aAAzB,GAAyB,MAAzB,GAAyBA,GAAE3G,QAAF,CAAWsS,SAAS,CAACrB,UAArB,CAAzB;AACD,KArOH,CAuOE;;AAvOF;AAAA;AAAA,WAwOE,0BAAiBqB,SAAjB,EAA0C;AAAA;;AACxC,WAAKvV,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEwQ,SAAS,CAACtB;AADX;AADqB,OAD/B,EAMGhP,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACyQ,eAAL,CAAqBJ,SAArB;AACd,OATH;AAUD,KAnPH,CAqPE;;AArPF;AAAA;AAAA,WAsPE,yBAAgBA,SAAhB,EAAyC;AAAA;;AACvC,WAAKzV,OAAL,CAAasE,IAAb;AACA,WAAKsN,aAAL,CAAmBiE,eAAnB,CAAmCJ,SAAS,CAACjU,EAA7C,EAAiDb,SAAjD,CAA2D,UAACM,GAAD,EAAa;AACtE,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIkT,SAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACrT,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B;;AACA,gBAAI,CAACvC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AAEA,gBAAI,CAACgI,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SAND,MAMO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAXD;AAYD;AApQH;;AAAA;AAAA;;;mBAAamP,qBAAmBrU,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,mHAAAA,GAAAA,+DAAAA,CAAAA,gHAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAAnBqU;AAAmBxO;AAAAC;AAAA;gEAyBnBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACzDpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAoCA,MAAAA,0DAAAA;AAC/CA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAmB+F,sBAAnB;AAAqC,OAArC;AAEA/F,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAEVA,MAAAA,0DAAAA;AACFA,MAAAA,wDAAAA;AAUFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AAKAA,MAAAA,wDAAAA;AA0BFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAsBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAYAA,MAAAA,wDAAAA;AAQAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAsCA,MAAAA,0DAAAA;AACvDA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAOFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAqCFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,wCAAoC,CAApC,CAAR;AAA8C,OAA9C;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAvVuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMIA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAqBQA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAKGA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAIWA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAYtBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA+BDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2BDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeXA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAYAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAaYA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAyGKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/UZ;AAEA;AACA;AACA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;ACasB/F,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAuBjBA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASiG,mBAAT;AAAoB,KAApB;AAEAjG,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA2BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASkG,6BAAT;AAA0B,KAA1B;AAGAlG,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAEAA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASmG,kCAAT;AAA+B,KAA/B;AAGAnG,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAfFA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAQAA,IAAAA,wDAAAA;AAOFA,IAAAA,mEAAAA;;;;;AAdKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAXPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAiBFA,IAAAA,0DAAAA;;;;;AAjBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAoBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADrIT,IAAMkW,yBAAb;AAaE,qCACU9V,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUC,KALV,EAMSC,WANT,EAOUC,EAPV,EAQUyV,eARV,EAQkD;AAAA;;AAAA;;AAPxC;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AAnBV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAMA,0BAA2B,CAAC,GAAD,EAAM,SAAN,EAAiB,SAAjB,EAA4B,QAA5B,CAA3B;AAcE3V,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACE,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAKG,SAAL,GAAiBN,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB;AACD;;AApCH;AAAA;AAAA,WAsCE,oBAAQ;AAAA;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,+DAAD,EAAsBqG,qGAAtB,CAAL;AAHiB,OAAd,CAAd;AAKA,WAAKzF,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAKkU,cAAL,CAAoB,CAApB;AACD;AAhDH;AAAA;AAAA,WAkDE,2BAAe;AAAA;;AACb,UAAI,KAAK5T,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAAC4U,cAAL,CAAoB,CAApB;AACD,OAHD;AAID;AA5DH;AAAA;AAAA,SA8DE,eAAa;AACX,aAAO,KAAK1U,MAAL,CAAYkB,QAAnB;AACD;AAhEH;AAAA;AAAA,WAkEE,sBAAayT,QAAb,EAAyC;AACvC,WAAK3U,MAAL,CAAYoB,UAAZ,CAAuBuT,QAAvB;AACA,WAAK/S,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B8S,QAAQ,CAACnO,WAApC;AACD;AArEH;AAAA;AAAA,WAuEE,qBAAYnF,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD,KA1EH,CA4EE;;AA5EF;AAAA;AAAA,WA6EE,wBAAeS,IAAf,EAA2B;AAAA;;AACzB,WAAKqS,eAAL,CAAqBpN,mBAArB,CAAyCjF,IAAzC,EAA+C/C,SAA/C,CACE,UAACM,GAAD,EAAuB;AACrB,YAAIA,GAAJ,EAAS;AACPsF,iBAAO,CAACC,GAAR,CAAYvF,GAAZ;AACA,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuBuB,GAAG,CAAC4H,aAA3B,CAAlB;AACA,gBAAI,CAAChF,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACD;AACF,OAPH;AASD;AAvFH;AAAA;AAAA,WAyFE,oBAAQ;AAAA;;AACN,WAAKtD,SAAL,GAAiB,IAAjB;AACA,UAAI6S,QAAQ,GAA2B;AACrCzU,UAAE,EAAE,KAAK0B,SAAL,CAAe1B,EAAf,CAAkBsB,KADe;AAErC8D,iBAAS,EAAE,KAAKxF,SAFqB;AAGrC8E,eAAO,EAAE,KAAKhD,SAAL,CAAegD,OAAf,CAAuBpD,KAHK;AAIrCsD,eAAO,EAAE,KAAKlD,SAAL,CAAekD,OAAf,CAAuBtD;AAJK,OAAvC;;AAMA,UAAI,KAAKxB,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,aAAKnE,OAAL,CAAasE,IAAb;AACA,aAAKyR,eAAL,CAAqBG,iBAArB,CAAuCD,QAAvC,EAAiDtV,SAAjD,CAA2D,UAACM,GAAD,EAAa;AACtE,cAAIA,GAAJ,EAAS;AACPA,eAAG,CAACkV,cAAJ,CAAmBrO,WAAnB,GAAiC7G,GAAG,CAACkV,cAAJ,CAAmB3U,EAApD;;AACA,gBAAIyU,QAAQ,CAACzU,EAAT,IAAe,CAAnB,EAAsB;AACpB,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAACkV,cAAjC;;AACA,oBAAI,CAACtS,WAAL;AACA,oBAAI,CAACzB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD,aAJD,MAIO;AACL,kBAAIiD,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACV,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACuF,WAAF,IAAiB7G,GAAG,CAACkV,cAAJ,CAAmBrO,WAA3C;AAAA,eADU,CAAZ;;AAGA,oBAAI,CAAC1F,UAAL,CAAgBmC,IAAhB,CAAqBgB,KAArB,IAA8BtE,GAAG,CAACkV,cAAlC;AACA,oBAAI,CAAC/T,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;;AACD,kBAAI,CAACrC,MAAL,CAAYyE,OAAZ,CACEuR,QAAQ,CAACzU,EAAT,IAAe,CAAf,GACI,yBADJ,GAEI,4BAHN;;AAKA,kBAAI,CAACqD,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SAtBD;AAuBD,OAzBD,MAyBO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AACR;AA3HH;AAAA;AAAA,WA6HE,2BAAkBqR,QAAlB,EAA8C;AAAA;;AAC5C,WAAKlW,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE,KAAKlD,OAAL,IAAgB,IAAhB,GAAuBqU,QAAQ,CAAClQ,OAAhC,GAA0CkQ,QAAQ,CAAChQ;AADpD;AADqB,OAD/B,EAMGjB,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACiR,cAAL,CAAoBD,QAApB;AACd,OATH;AAUD,KAxIH,CA0IE;;AA1IF;AAAA;AAAA,WA2IE,wBAAeA,QAAf,EAA2C;AAAA;;AACzC7P,aAAO,CAACC,GAAR,CAAY4P,QAAZ;AACA,WAAKL,eAAL,CAAqBO,sBAArB,CAA4CF,QAAQ,CAACtO,WAArD,EAAkEnH,SAAlE,CACE,UAACM,GAAD,EAAa;AACX,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAIkB,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAI6T,QAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAAChU,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAAC1B,WAAL;AACA,gBAAI,CAACzB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AAEA,gBAAI,CAACrC,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD,SAPD,MAOO;AACL,gBAAI,CAACzE,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAZH;AAcD;AA3JH;AAAA;AAAA,WA6JE,qBAAS;AACP,WAAKzD,MAAL,CAAY+F,KAAZ;AACA,WAAKnE,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AAjKH;;AAAA;AAAA;;;mBAAa0S,2BAAyBlW,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,yHAAAA;AAAA;;;QAAzBkW;AAAyBrQ;AAAAC;AAAA;gEAWzBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACtCpBI,MAAAA,uDAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAkDA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAChD/F,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAA+CA,MAAAA,0DAAAA;AAEjDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC7CA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAmBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,sCAAkC,CAAlC,CAAR;AAA4C,OAA5C;AAMF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA5KQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAyBbA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAMCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIaA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAUMA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA+CKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrKZ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMqR,MAAM,GAAW,CACrB;AACEC,MAAI,EAAE,QADR;AAEEC,WAAS,EAAEX,qEAAeA;AAF5B,CADqB,EAKrB;AACEU,MAAI,EAAE,mBADR;AAEEC,WAAS,EAAEpB,qGAAyBA;AAFtC,CALqB,EASrB;AACEmB,MAAI,EAAE,aADR;AAEEC,WAAS,EAAElR,0FAAmBA;AAFhC,CATqB,EAarB;AACEiR,MAAI,EAAE,SADR;AAEEC,WAAS,EAAEvP,+EAAgBA;AAF7B,CAbqB,EAiBrB;AACEsP,MAAI,EAAE,sBADR;AAEEC,WAAS,EAAEnX,yGAAwBA;AAFrC,CAjBqB,EAqBrB;AACEkX,MAAI,EAAE,UADR;AAEEC,WAAS,EAAET,2EAAiBA;AAF9B,CArBqB,EAyBrB;AACEQ,MAAI,EAAE,UADR;AAEEC,WAAS,EAAEtH,8EAAgBA;AAF7B,CAzBqB,EA6BrB;AACEqH,MAAI,EAAE,sBADR;AAEEC,WAAS,EAAExJ,mGAAsBA;AAFnC,CA7BqB,EAkCrB;AACEuJ,MAAI,EAAE,UADR;AAEE;AACAE,UAAQ,EAAE,CACR;AACEF,QAAI,EAAE,cADR;AAEEC,aAAS,EAAEJ,iGAAqBA;AAFlC,GADQ,EAKR;AACEG,QAAI,EAAE,QADR;AAEEC,aAAS,EAAER,+EAAeA;AAF5B,GALQ,EASR;AACEO,QAAI,EAAE,OADR;AAEEC,aAAS,EAAEP,4EAAcA;AAF3B,GATQ,EAaR;AACEM,QAAI,EAAE,SADR;AAEEC,aAAS,EAAEN,kFAAgBA;AAF7B,GAbQ,EAiBR;AACEK,QAAI,EAAE,UADR;AAEEC,aAAS,EAAEL,qFAAiBA;AAF9B,GAjBQ;AAHZ,CAlCqB,EA4DrB;AACEI,MAAI,EAAE,SADR;AAEE;AACAE,UAAQ,EAAE,CACR;AACEF,QAAI,EAAE,WADR;AAEEC,aAAS,EAAE/D,8HAAkBA;AAF/B,GADQ,EAKR;AACE8D,QAAI,EAAE,YADR;AAEEC,aAAS,EAAEjD,mIAAmBA;AAFhC,GALQ,EASR;AACEgD,QAAI,EAAE,uBADR;AAEEC,aAAS,EAAEzF,mIAA+BA;AAF5C,GATQ;AAHZ,CA5DqB,EA8ErB;AACEwF,MAAI,EAAE,aADR;AAEEC,WAAS,EAAEH,wFAAqBA;AAFlC,CA9EqB,EAkFrB;AACEE,MAAI,EAAE,aADR;AAEEC,WAAS,EAAE3K,oFAAmBA;AAFhC,CAlFqB,EAsFrB;AACE0K,MAAI,EAAE,6BADR;AAEEC,WAAS,EAAEhN,mHAA4BA;AAFzC,CAtFqB,EA0FrB;AACE+M,MAAI,EAAE,iBADR;AAEEC,WAAS,EAAEnG,mGAAwBA;AAFrC,CA1FqB,EA8FrB;AACEkG,MAAI,EAAE,0BADR;AAEEC,WAAS,EAAE7N,2HAAgCA;AAF7C,CA9FqB,CAAvB;AAwGO,IAAM+N,yBAAb;AAAA;AAAA;;;mBAAaA;AAAyB;;;QAAzBA;;;YAHF,CAACZ,mEAAA,CAAsBQ,MAAtB,CAAD,GACCR,0DAAYA;;;;uHAEXY,2BAAyB;AAAAE,cAAAA,0DAAAA;AAAAC,cAF1Bf,0DAE0B;AAAA;AAFd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9HxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;AA6CO,IAAMyB,kBAAb;AAAA;AAAA;;;mBAAaA;AAAkB;;;QAAlBA;;;aAXA,CACT;AACEC,WAAO,EAAEL,gEADX;AAEEM,YAAQ,EAAEJ,+EAAcA;AAF1B,GADS,EAKT;AACEG,WAAO,EAAEJ,qEADX;AAEEM,YAAQ,EAAEJ,iFAAgBA;AAF5B,GALS;AASVV,YAjBQ,CACPE,0DADO,EAEPC,0DAFO,EAGPC,+EAHO,EAIPC,gEAJO,EAKPP,oFALO,EAMPQ,kEANO,CAiBR;;;;uHAEUK,oBAAkB;AAAAI,mBAzC3BvC,qGAyC2B,EAxC3B9P,0FAwC2B,EAvC3B2B,+EAuC2B,EAtC3B5H,yGAsC2B,EArC3B0W,4EAqC2B,EApC3B7G,+EAoC2B,EAnC3BlC,mGAmC2B,EAlC3B6I,qEAkC2B,EAjC3BO,iGAiC2B,EAhC3BJ,+EAgC2B,EA/B3BC,4EA+B2B,EA9B3BC,kFA8B2B,EA7B3BC,qFA6B2B,EA5B3B5C,4FA4B2B,EA3B3Bd,uFA2B2B,EA1B3BpC,mGA0B2B,EAzB3BgG,wFAyB2B,EAxB3BxK,oFAwB2B,EAvB3BlD,2HAuB2B,EAtB3BoI,oIAsB2B,EArB3BvH,mHAqB2B;AArBCoN,cAG5BE,0DAH4B,EAI5BC,0DAJ4B,EAK5BC,+EAL4B,EAM5BC,gEAN4B,EAO5BP,oFAP4B,EAQ5BQ,kEAR4B;AAqBD;AAbf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEhB;AAEA;AACA;AACA;AAQA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;ACZMhY,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAmBcA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwCfA,IAAAA,uDAAAA;;;;;;AAsCIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AAGFA,IAAAA,0DAAAA;;;;;;AAHEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAQFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AAGFA,IAAAA,0DAAAA;;;;;;AAHEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAQFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASsT,4BAAT;AAAyB,KAAzB;;AAIAtT,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASC,kCAAT;AAA+B,KAA/B;;AAIAD,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADnMT,IAAM+W,cAAb;AA2BE,0BACUrW,EADV,EAEUgY,QAFV,EAGUnY,SAHV,EAIUH,OAJV,EAKUqK,SALV,EAMUnK,MANV,EAOUE,KAPV,EAQSkK,QART,EAQ8B;AAAA;;AAAA;;AAPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAlCT,iBAAqB,EAArB;AAEA,qBAAqB,KAArB,CAgC8B,CAxB9B;AAEA;;AACA,4BAA6B,CAC3B,GAD2B,EAE3B,SAF2B,EAG3B,SAH2B,EAI3B,aAJ2B,EAK3B,MAL2B,EAM3B,SAN2B,CAA7B,CAqB8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAA0B;AACnC,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AA3DH;AAAA;AAAA,WA6DE,oBAAQ;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,gEAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,gEAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAI1B0K,aAAK,EAAE,CAAC,EAAD,EAAK,CAAC/Q,gEAAD,CAAL,CAJmB;AAK1ByQ,cAAM,EAAE,CACN;AACElN,eAAK,EAAE,EADT;AAEEqL,kBAAQ,EAAE;AAFZ,SADM,EAKN,CAAC5O,gEAAD,CALM;AALkB,OAAd,CAAd;AAcA,WAAKgZ,WAAL,CAAiB,CAAjB;AACD;AA7EH;AAAA;AAAA,WA+EE,2BAAe;AAAA;;AACb,UAAI,KAAKnW,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKmW,iBAAL;AACD;;AAED,WAAKlO,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACmX,WAAL,CAAiB,CAAjB;AACD,OAHD;AAID;AAzFH;AAAA;AAAA,WA2FE,6BAAiB;AAAA;;AACf;AACA,WAAKnW,UAAL,CAAgBoS,mBAAhB,GAAsC,UAACC,IAAD,EAAOC,QAAP,EAAmB;AACvD,gBAAQA,QAAR;AACE,eAAK,aAAL;AACE,mBAAO,MAAI,CAAC1J,WAAL,IAAoB,IAApB,GAA2ByJ,IAAI,CAACgE,WAAhC,GAA8ChE,IAAI,CAACiE,WAA1D;;AACF,eAAK,MAAL;AACE,mBAAO,MAAI,CAAC1N,WAAL,IAAoB,IAApB,GACHyJ,IAAI,CAACkE,YADF,GAEHlE,IAAI,CAACmE,YAFT;;AAGF;AACE,mBAAOnE,IAAI,CAACC,QAAD,CAAX;AARJ;AAUD,OAXD;;AAYA,WAAKtS,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AA1GH;AAAA;AAAA,WA4GE,qBAAYK,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AAnHH;AAAA;AAAA,SAqHE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD,KAvHH,CAyHE;;AAzHF;AAAA;AAAA,WA0HE,qBAAYkB,IAAZ,EAAwB;AAAA;;AACtB;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAKgU,QAAL,CAAcC,WAAd,CAA0B7U,IAA1B,EAAgC/C,SAAhC,CAA0C,UAACM,GAAD,EAAQ;AAChD,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAAC4X,KAAL,GAAa5X,GAAG,CAAC6X,QAAjB;AACA,gBAAI,CAAC1W,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuB,MAAI,CAACmZ,KAA5B,CAAlB;AACA,gBAAI,CAAChV,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;;AACA,gBAAI,CAAC8R,iBAAL;AACD;;AACD,cAAI,CAACxY,OAAL,CAAa8E,IAAb;AACD,OARD;AASD,KAvIH,CAyIE;;AAzIF;AAAA;AAAA,WA0IE,oBAAWiU,IAAX,EAA0B;;;AACxB,WAAKzX,MAAL,CAAYoB,UAAZ,CAAuBqW,IAAvB;AACA,iBAAKrM,SAAL,CAAelL,EAAf,MAAiB,IAAjB,IAAiBsI,aAAjB,GAAiB,MAAjB,GAAiBA,GAAE3G,QAAF,CAAW4V,IAAI,CAAC9I,MAAhB,CAAjB;AACA,iBAAKvD,SAAL,CAAesD,MAAf,MAAqB,IAArB,IAAqBjD,aAArB,GAAqB,MAArB,GAAqBA,GAAE5J,QAAF,CAAW4V,IAAI,CAAC/I,MAAhB,CAArB;AACD;AA9IH;AAAA;AAAA,WAgJE,oBAAQ;AAAA;;;;AACN,WAAK5M,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAI4U,IAAI,GAAkB;AACxB;AACAvX,YAAE,EAAE,WAAKkL,SAAL,CAAelL,EAAf,MAAiB,IAAjB,IAAiBsI,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEhH,KAFC;AAGxBoD,iBAAO,EAAE,WAAKwG,SAAL,CAAexG,OAAf,MAAsB,IAAtB,IAAsB6G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK,KAHT;AAIxBsD,iBAAO,EAAE,WAAKsG,SAAL,CAAetG,OAAf,MAAsB,IAAtB,IAAsB4G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAElK,KAJT;AAKxBkN,gBAAM,EAAE,WAAKtD,SAAL,CAAesD,MAAf,MAAqB,IAArB,IAAqB4D,aAArB,GAAqB,MAArB,GAAqBA,GAAE9Q;AALP,SAA1B;AAOAyD,eAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBuS,IAApB;AAEA,aAAK/Y,OAAL,CAAasE,IAAb;AACA,aAAKgU,QAAL,CAAcU,WAAd,CAA0BD,IAA1B,EAAgCpY,SAAhC,CAA0C,UAACM,GAAD,EAAa;AACrD,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApD,eAAG,CAACgY,IAAJ,CAAShJ,MAAT,GAAkBhP,GAAG,CAACgY,IAAJ,CAASzX,EAA3B;AAEAuX,gBAAI,CAACvX,EAAL,IAAW,CAAX,GAAe,MAAI,CAAC0X,OAAL,CAAajY,GAAG,CAACgY,IAAjB,CAAf,GAAwC,MAAI,CAACE,UAAL,CAAgBlY,GAAG,CAACgY,IAApB,CAAxC;AACA,kBAAI,CAAC7W,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B,CAhBwB,CAiBxB;AACD,WAlBD,MAkBO,MAAI,CAAC+H,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;;AACP,gBAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,SArBD;AAsBD,OAjCD,MAiCO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KApLH,CAsLE;;AAtLF;AAAA;AAAA,WAuLE,iBAAQ9D,GAAR,EAAsB;AACpB,WAAKmB,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAA7B;AACA,WAAK4C,WAAL;AACA,WAAKwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AAEA,WAAKgI,SAAL,CAAexG,OAAf,CAAuBmB,KAAvB;AACA,WAAKqF,SAAL,CAAetG,OAAf,CAAuBiB,KAAvB;AACA,WAAKjE,SAAL,GAAiB,KAAjB;AACD,KA/LH,CAiME;;AAjMF;AAAA;AAAA,WAkME,oBAAWnC,GAAX,EAAyB;AACvB,UAAI0D,CAAC,GAAG,KAAKvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,eAAOA,CAAC,CAAC0N,MAAF,IAAYhP,GAAG,CAACgP,MAAvB;AAAA,OAA/B,CAAR;AACA,WAAK7N,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAA1B;AACA,WAAKoJ,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AAEA,WAAKG,SAAL;AACD,KAxMH,CA0ME;;AA1MF;AAAA;AAAA,WA2ME,0BAAiBkU,IAAjB,EAAgC;AAAA;;AAC9B,UAAIK,IAAI,GAAG,KAAKpO,WAAL,IAAoB,IAApB,GAA2B+N,IAAI,CAAC7S,OAAhC,GAA0C6S,IAAI,CAAC3S,OAA1D;AAEA,WAAKlG,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEmU;AADD;AADqB,OAD/B,EAMGjU,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACiU,UAAL,CAAgBN,IAAhB;AACd,OATH;AAUD,KAxNH,CA0NE;;AA1NF;AAAA;AAAA,WA2NE,oBAAWA,IAAX,EAA0B;AAAA;;AACxB,WAAK/Y,OAAL,CAAasE,IAAb;AACA,WAAKgU,QAAL,CAAce,UAAd,CAAyBN,IAAI,CAAC9I,MAA9B,EAAsCtP,SAAtC,CAAgD,UAACM,GAAD,EAAa;AAC3D,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIwW,IAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAAC3W,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B,EAFyB,CAGzB;;;AACA,gBAAI,CAACvC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAIyW,IAAI,CAAC9I,MAAL,IAAe,MAAI,CAACvD,SAAL,CAAelL,EAAf,CAAkBsB,KAArC,EAA4C,MAAI,CAAC+B,SAAL;;AAE5C,gBAAI,CAACwF,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SATD,MASO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAdD;AAeD;AA5OH;AAAA;AAAA,WA8OE,qBAAS;AACP,WAAKxD,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAelL,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AAlPH;;AAAA;AAAA;;;mBAAauT,gBAAc/W,+DAAAA,CAAAA,wDAAAA,GAAAA,+DAAAA,CAAAA,yGAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAAd+W;AAAclR;AAAAC;AAAA;gEAwBdjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AClDpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,uDAAAA;AAIFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,uDAAAA;AAKFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,wDAAAA;AACAA,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AAIAA,MAAAA,4DAAAA;AAAkDA,MAAAA,wDAAAA;AAAA,eAAS+F,eAAT;AAAoB,OAApB;AAChD/F,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AACnDA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,mCAA+B,CAA/B,CAAR;AAAyC,OAAzC;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAvOuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAqBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAqBHA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,iCAA2B,WAA3B,EAA2B+F,aAA3B;AAQA/F,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,sCAAgC,cAAhC,EAAgC+F,mBAAhC,EAAgC,WAAhC,EAAgCA,aAAhC;AAiBa/F,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACvBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASAA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUaA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAmFKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjOZ;AAEA;AACA;AACA;AAQA;AAKA;;;;;;;;;;;;;;;;;;;;;;;ACZM/F,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAmBcA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA+BfA,IAAAA,uDAAAA;;;;;;AAsCIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AAGFA,IAAAA,0DAAAA;;;;;;AAHEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAQFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASmG,4BAAT;AAAyB,KAAzB;;AAIAnG,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASsT,kCAAT;AAA+B,KAA/B;;AAIAtT,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;AD9KT,IAAM8W,eAAb;AA0BE,2BACUpW,EADV,EAEUgZ,QAFV,EAGUnZ,SAHV,EAIUH,OAJV,EAKUqK,SALV,EAMUnK,MANV,EAOUE,KAPV,EAQSkK,QART,EAQ8B;AAAA;;AAAA;;AAPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAjCT,kBAAsB,EAAtB;AAEA,qBAAqB,KAArB,CA+B8B,CAvB9B;AAEA;;AACA,4BAA6B,CAC3B,GAD2B,EAE3B,SAF2B,EAG3B,SAH2B,EAI3B,aAJ2B,EAK3B,SAL2B,CAA7B,CAoB8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAA0B;AACnC,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AA1DH;AAAA;AAAA,WA4DE,oBAAQ;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAI1B0K,aAAK,EAAE,CAAC,EAAD,EAAK,CAAC/Q,+DAAD,CAAL;AAJmB,OAAd,CAAd;AAOA,WAAKga,YAAL,CAAkB,CAAlB;AACD;AArEH;AAAA;AAAA,WAuEE,2BAAe;AAAA;;AACb,UAAI,KAAKnX,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKmW,iBAAL;AACD;;AAED,WAAKlO,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACmY,YAAL,CAAkB,CAAlB;AACD,OAHD;AAID;AAjFH;AAAA;AAAA,WAmFE,6BAAiB;AAAA;;AACf;AACA,WAAKnX,UAAL,CAAgBoS,mBAAhB,GAAsC,UAACC,IAAD,EAAOC,QAAP,EAAmB;AACvD,gBAAQA,QAAR;AACE,eAAK,aAAL;AACE,mBAAO,MAAI,CAAC1J,WAAL,IAAoB,IAApB,GAA2ByJ,IAAI,CAACgE,WAAhC,GAA8ChE,IAAI,CAACiE,WAA1D;;AACF;AACE,mBAAOjE,IAAI,CAACC,QAAD,CAAX;AAJJ;AAMD,OAPD;;AAQA,WAAKtS,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AA9FH;AAAA;AAAA,WAgGE,qBAAYK,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AAvGH;AAAA;AAAA,SAyGE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD,KA3GH,CA6GE;;AA7GF;AAAA;AAAA,WA8GE,sBAAakB,IAAb,EAAyB;AAAA;;AACvB;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAKgV,QAAL,CAAcC,YAAd,CAA2B7V,IAA3B,EAAiC/C,SAAjC,CAA2C,UAACM,GAAD,EAAQ;AACjD,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACuY,MAAL,GAAcvY,GAAG,CAACwY,UAAlB;AACA,gBAAI,CAACrX,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuB,MAAI,CAAC8Z,MAA5B,CAAlB;AACA,gBAAI,CAAC3V,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;;AACA,gBAAI,CAAC8R,iBAAL;AACD;;AACD,cAAI,CAACxY,OAAL,CAAa8E,IAAb;AACD,OARD;AASD,KA3HH,CA6HE;;AA7HF;AAAA;AAAA,WA8HE,oBAAW4U,IAAX,EAA0B;;;AACxB,WAAKpY,MAAL,CAAYoB,UAAZ,CAAuBgX,IAAvB;AACA,iBAAKhN,SAAL,CAAe4D,KAAf,MAAoB,IAApB,IAAoBxG,aAApB,GAAoB,MAApB,GAAoBA,GAAE3G,QAAF,CAAWuW,IAAI,CAACC,MAAhB,CAApB;AACA,iBAAKjN,SAAL,CAAelL,EAAf,MAAiB,IAAjB,IAAiBuL,aAAjB,GAAiB,MAAjB,GAAiBA,GAAE5J,QAAF,CAAWuW,IAAI,CAACE,OAAhB,CAAjB;AACD;AAlIH;AAAA;AAAA,WAoIE,oBAAQ;AAAA;;;;AACN,WAAKxW,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIuV,IAAI,GAAkB;AACxB;AACAlY,YAAE,EAAE,KAAKkL,SAAL,CAAelL,EAAf,CAAkBsB,KAFE;AAGxBoD,iBAAO,EAAE,WAAKwG,SAAL,CAAexG,OAAf,MAAsB,IAAtB,IAAsB4D,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEhH,KAHT;AAIxBsD,iBAAO,EAAE,WAAKsG,SAAL,CAAetG,OAAf,MAAsB,IAAtB,IAAsB2G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK,KAJT;AAKxBwN,eAAK,EAAE,WAAK5D,SAAL,CAAe4D,KAAf,MAAoB,IAApB,IAAoBtD,aAApB,GAAoB,MAApB,GAAoBA,GAAElK;AALL,SAA1B;AAOAyD,eAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBkT,IAApB;AAEA,aAAKJ,QAAL,CAAcO,WAAd,CAA0BH,IAA1B,EAAgC/Y,SAAhC,CAA0C,UAACM,GAAD,EAAa;AACrD,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,gBAAIyV,YAAY,GAAG7Y,GAAG,CAAC8Y,IAAvB;AACA,gBAAIjT,UAAU,GAAc;AAC1B8S,qBAAO,EAAEE,YAAY,CAACtY,EADI;AAE1B0E,qBAAO,EAAE4T,YAAY,CAAC5T,OAFI;AAG1BE,qBAAO,EAAE0T,YAAY,CAAC1T,OAHI;AAI1BuT,oBAAM,EAAEG,YAAY,CAACxJ,KAJK;AAK1BmI,yBAAW,EAAEqB,YAAY,CAACrB,WALA;AAM1BC,yBAAW,EAAEoB,YAAY,CAACpB;AANA,aAA5B;AASAgB,gBAAI,CAAClY,EAAL,IAAW,CAAX,GAAe,MAAI,CAACwY,OAAL,CAAalT,UAAb,CAAf,GAA0C,MAAI,CAACmT,UAAL,CAAgBnT,UAAhB,CAA1C;AACA,kBAAI,CAAC1E,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B,CAZwB,CAaxB;AACD,WAdD,MAcO,MAAI,CAAC+H,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;;AACP,gBAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,SAjBD;AAkBD,OA5BD,MA4BO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KAnKH,CAqKE;;AArKF;AAAA;AAAA,WAsKE,iBAAQ9D,GAAR,EAAsB;AACpB,WAAKmB,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAA7B;AACA,WAAK4C,WAAL;AACA,WAAKwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AAEA,WAAKgI,SAAL,CAAexG,OAAf,CAAuBmB,KAAvB;AACA,WAAKqF,SAAL,CAAetG,OAAf,CAAuBiB,KAAvB;AACA,WAAKjE,SAAL,GAAiB,KAAjB;AACD,KA9KH,CAgLE;;AAhLF;AAAA;AAAA,WAiLE,oBAAWnC,GAAX,EAAyB;AACvB,UAAI0D,CAAC,GAAG,KAAKvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,eAAOA,CAAC,CAACqX,OAAF,IAAa3Y,GAAG,CAAC2Y,OAAxB;AAAA,OAA/B,CAAR;AACA,WAAKxX,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAA1B;AACA,WAAKoJ,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AAEA,WAAKG,SAAL;AACD,KAvLH,CAyLE;;AAzLF;AAAA;AAAA,WA0LE,0BAAiB6U,IAAjB,EAAgC;AAAA;;AAC9B,UAAIQ,QAAQ,GAAG,KAAKlP,WAAL,IAAoB,IAApB,GAA2B0O,IAAI,CAACxT,OAAhC,GAA0CwT,IAAI,CAACtT,OAA9D;AAEA,WAAKlG,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEiV;AADD;AADqB,OAD/B,EAMG/U,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC+U,UAAL,CAAgBT,IAAhB;AACd,OATH;AAUD,KAvMH,CAyME;;AAzMF;AAAA;AAAA,WA0ME,oBAAWA,IAAX,EAA0B;AAAA;;AACxB,WAAK1Z,OAAL,CAAasE,IAAb;AACA,WAAKgV,QAAL,CAAca,UAAd,CAAyBT,IAAI,CAACE,OAA9B,EAAuCjZ,SAAvC,CAAiD,UAACM,GAAD,EAAa;AAC5D,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAImX,IAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACtX,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B,EAFyB,CAGzB;;;AACA,gBAAI,CAACvC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAIoX,IAAI,CAACE,OAAL,IAAgB,MAAI,CAAClN,SAAL,CAAelL,EAAf,CAAkBsB,KAAtC,EAA6C,MAAI,CAAC+B,SAAL;;AAE7C,gBAAI,CAACwF,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SATD,MASO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAdD;AAeD;AA3NH;AAAA;AAAA,WA6NE,qBAAS;AACP,WAAKxD,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAelL,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AAjOH;;AAAA;AAAA;;;mBAAasT,iBAAe9W,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,yGAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAAf8W;AAAejR;AAAAC;AAAA;gEAuBfjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACjDpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,uDAAAA;AAIFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,wDAAAA;AACAA,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AAIAA,MAAAA,4DAAAA;AAAkDA,MAAAA,wDAAAA;AAAA,eAAS+F,eAAT;AAAoB,OAApB;AAChD/F,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAmCA,MAAAA,0DAAAA;AACpDA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,oCAAgC,CAAhC,CAAR;AAA0C,OAA1C;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAlNuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAqBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAqBHA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,iCAA2B,WAA3B,EAA2B+F,aAA3B;AAgBa/F,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACvBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASAA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUaA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAuEKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5MZ;AAEA;AACA;AACA;AAQA;AAKA;;;;;;;;;;;;;;;;;;;;;;ACZM/F,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAmBcA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBfA,IAAAA,uDAAAA;;;;;;;;AAQFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASsJ,mBAAT;AAAoB,KAApB;AAEAtJ,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA8BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASmG,0CAAT;AAAuC,KAAvC;;AAIAnG,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASsT,yCAAT;AAAsC,KAAtC;;AAIAtT,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADhKT,IAAMkX,qBAAb;AAoBE,iCACUxW,EADV,EAEU8Z,eAFV,EAGUja,SAHV,EAIUH,OAJV,EAKUqK,SALV,EAMUnK,MANV,EAOUE,KAPV,EAQSkK,QART,EAQ8B;AAAA;;AAAA;;AAPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA3BT,wBAAmC,EAAnC;AAEA,qBAAqB,KAArB,CAyB8B,CAjB9B;AAEA;;AACA,4BAA6B,CAAC,GAAD,EAAM,SAAN,EAAiB,SAAjB,EAA4B,SAA5B,CAA7B,CAc8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAA0B;AACnC,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AApDH;AAAA;AAAA,WAsDE,oBAAQ;AACN,WAAKgZ,kBAAL,CAAwB,CAAxB;AAEA,WAAK/Y,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,+DAAD,EAAsBqG,qGAAtB,CAAL;AAHiB,OAAd,CAAd;AAKD;AA9DH;AAAA;AAAA,WAgEE,2BAAe;AAAA;;AACb,UAAI,KAAKxD,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKgI,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACiZ,kBAAL,CAAwB,CAAxB;AACD,OAHD;AAID;AA1EH;AAAA;AAAA,WA4EE,qBAAY1X,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AAnFH;AAAA;AAAA,SAqFE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD,KAvFH,CAyFE;;AAzFF;AAAA;AAAA,WA0FE,4BAAmBkB,IAAnB,EAA+B;AAAA;;AAC7B;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAK8V,eAAL,CAAqBC,kBAArB,CAAwC3W,IAAxC,EAA8C/C,SAA9C,CAAwD,UAACM,GAAD,EAAQ;AAC9D,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACqZ,YAAL,GAAoBrZ,GAAG,CAACsZ,eAAxB;AACA,gBAAI,CAACnY,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuB,MAAI,CAAC4a,YAA5B,CAAlB;AACA,gBAAI,CAACzW,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACA,gBAAI,CAACtE,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;;AACD,cAAI,CAACtC,OAAL,CAAa8E,IAAb;AACD,OARD;AASD,KAvGH,CAyGE;;AAzGF;AAAA;AAAA,WA0GE,2BAAkB0V,WAAlB,EAA+C;AAC7C;AACA,WAAK9N,SAAL,CAAelL,EAAf,CAAkB2B,QAAlB,CAA2BqX,WAAW,CAACzW,EAAvC;AACA,WAAK2I,SAAL,CAAexG,OAAf,CAAuB/C,QAAvB,CAAgCqX,WAAW,CAACxT,OAA5C;AACA,WAAK0F,SAAL,CAAetG,OAAf,CAAuBjD,QAAvB,CAAgCqX,WAAW,CAACvT,OAA5C;AACD;AA/GH;AAAA;AAAA,WAiHE,oBAAQ;AAAA;;;;AACN,WAAK7D,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIqW,WAAW,GAAyB;AACtC;AACAhZ,YAAE,EAAE,KAAKkL,SAAL,CAAelL,EAAf,CAAkBsB,KAFgB;AAGtCoD,iBAAO,EAAE,WAAKwG,SAAL,CAAexG,OAAf,MAAsB,IAAtB,IAAsB4D,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEhH,KAHK;AAItCsD,iBAAO,EAAE,WAAKsG,SAAL,CAAetG,OAAf,MAAsB,IAAtB,IAAsB2G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK;AAJK,SAAxC;AAMAyD,eAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgU,WAA3B;AAEA,aAAKxa,OAAL,CAAasE,IAAb;AACA,aAAK8V,eAAL,CAAqBK,kBAArB,CAAwCD,WAAxC,EAAqD7Z,SAArD,CACE,UAACM,GAAD,EAAa;AACX,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,gBAAIyV,YAAY,GAAG7Y,GAAG,CAACyZ,WAAvB;AACA,gBAAI5T,UAAU,GAAqB;AACjC/C,gBAAE,EAAE+V,YAAY,CAACtY,EADgB;AAEjCwF,qBAAO,EAAE8S,YAAY,CAAC5T,OAFW;AAGjCe,qBAAO,EAAE6S,YAAY,CAAC1T;AAHW,aAAnC;AAMAoU,uBAAW,CAAChZ,EAAZ,IAAkB,CAAlB,GACI,MAAI,CAACmZ,cAAL,CAAoB7T,UAApB,CADJ,GAEI,MAAI,CAAC8T,iBAAL,CAAuB9T,UAAvB,CAFJ;AAGA,kBAAI,CAAC1E,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACuC,SAAL;AACD,WAbD,MAaO,MAAI,CAACwF,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;;AACP,gBAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,SAjBH;AAmBD,OA7BD,MA6BO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KAjJH,CAmJE;;AAnJF;AAAA;AAAA,WAoJE,wBAAe9D,GAAf,EAAoC;AAClC,WAAKmB,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAA7B;AACA,WAAK4C,WAAL;AACA,WAAKwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AACD,KAxJH,CA0JE;;AA1JF;AAAA;AAAA,WA2JE,2BAAkBzD,GAAlB,EAAuC;AACrC,UAAI0D,CAAC,GAAG,KAAKvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,eAAOA,CAAC,CAACwB,EAAF,IAAQ9C,GAAG,CAAC8C,EAAnB;AAAA,OAA/B,CAAR;AACA,WAAK3B,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAA1B;AACA,WAAKoJ,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,KA/JH,CAiKE;;AAjKF;AAAA;AAAA,WAkKE,0BAAiB8V,WAAjB,EAA8C;AAAA;;AAC5C,UAAIK,eAAe,GACjB,KAAK7P,WAAL,IAAoB,IAApB,GAA2BwP,WAAW,CAACxT,OAAvC,GAAiDwT,WAAW,CAACvT,OAD/D;AAGA,WAAK/G,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE4V;AADD;AADqB,OAD/B,EAMG1V,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC0V,iBAAL,CAAuBN,WAAvB;AACd,OATH;AAUD,KAhLH,CAkLE;;AAlLF;AAAA;AAAA,WAmLE,2BAAkBA,WAAlB,EAA+C;AAAA;;AAC7C,WAAKxa,OAAL,CAAasE,IAAb;AACA,WAAK8V,eAAL,CAAqBU,iBAArB,CAAuCN,WAAW,CAACzW,EAAnD,EAAuDpD,SAAvD,CACE,UAACM,GAAD,EAAa;AACX,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIiY,WAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACpY,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B,EAFyB,CAGzB;;;AACA,gBAAI,CAACvC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAIkY,WAAW,CAACzW,EAAZ,IAAkB,MAAI,CAAC2I,SAAL,CAAelL,EAAf,CAAkBsB,KAAxC,EAA+C,MAAI,CAAC+B,SAAL;;AAE/C,gBAAI,CAACwF,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SATD,MASO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAfH;AAiBD;AAtMH;AAAA;AAAA,WAwME,qBAAS;AACP,WAAKxD,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAelL,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AA5MH;;AAAA;AAAA;;;mBAAa0T,uBAAqBlX,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,uHAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAArBkX;AAAqBrR;AAAAC;AAAA;gEAiBrBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AC3CpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,wDAAAA;AACAA,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AAGAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAyCA,MAAAA,0DAAAA;AAE3CA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,0CAAsC,CAAtC,CAAR;AAAgD,OAAhD;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AApMuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAqBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA6BUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACvBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAgBHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAgBmBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2DKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9LZ;AAEA;AACA;AACA;AASA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;ACdM/F,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAuBkBA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA0BHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBPA,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AAGFA,IAAAA,0DAAAA;;;;;;AALEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAYFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAlBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AAbSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAKJA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA0BHA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAlBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AAbSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAKJA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBfA,IAAAA,uDAAAA;;;;;;;;AAQFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASC,mBAAT;AAAoB,KAApB;AAEAD,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA4BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AAKFA,IAAAA,0DAAAA;;;;;;AALEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAUFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASmb,kCAAT;AAA+B,KAA/B;;AAIAnb,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASob,qCAAT;AAAkC,KAAlC;;AAIApb,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADpST,IAAMiX,iBAAb;AA6BE,6BACUvW,EADV,EAEU2a,WAFV,EAGUC,UAHV,EAIU/a,SAJV,EAKUH,OALV,EAMUqK,SANV,EAOUnK,MAPV,EAQUE,KARV,EASSkK,QATT,EAS8B;AAAA;;AAAA;;AARpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AArCT,oBAA2B,EAA3B;AAEA,qBAAqB,KAArB;AAIA,mBAAyB,EAAzB,CA+B8B,CA1B9B;AAEA;;AACA,4BAA6B,CAC3B,GAD2B,EAE3B,SAF2B,EAG3B,SAH2B,EAI3B,QAJ2B,EAK3B,WAL2B,EAM3B,UAN2B,EAO3B,SAP2B,CAA7B,CAuB8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAA0B;AACnC,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AA9DH;AAAA;AAAA,WAgEE,oBAAQ;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAI1BqI,gBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC1O,+DAAD,CAAL,CAJgB;AAK1B4b,iBAAS,EAAE,CACT,EADS,EAET,CAAC5b,+DAAD,EAAsBA,0DAAA,CAAe,CAAC,GAAhB,CAAtB,EAA4CA,0DAAA,CAAe,GAAf,CAA5C,CAFS,CALe;AAS1B6b,gBAAQ,EAAE,CACR,EADQ,EAER,CAAC7b,+DAAD,EAAsBA,0DAAA,CAAe,CAAC,EAAhB,CAAtB,EAA2CA,0DAAA,CAAe,EAAf,CAA3C,CAFQ;AATgB,OAAd,CAAd;AAeA,WAAK8b,cAAL,CAAoB,CAApB;AACA,WAAK7M,aAAL;AACD;AAlFH;AAAA;AAAA,WAoFE,2BAAe;AAAA;;AACb,UAAI,KAAKpM,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKmW,iBAAL;AACD;;AAED,WAAKlO,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACia,cAAL,CAAoB,CAApB;;AACA,cAAI,CAAC7M,aAAL;AACD,OAJD;AAKD;AA/FH;AAAA;AAAA,WAiGE,6BAAiB;AAAA;;AACf;AACA,WAAKpM,UAAL,CAAgBoS,mBAAhB,GAAsC,UAACC,IAAD,EAAOC,QAAP,EAAmB;AACvD,gBAAQA,QAAR;AACE,eAAK,QAAL;AACE,mBAAO,MAAI,CAAC1J,WAAL,IAAoB,IAApB,GACHyJ,IAAI,CAAClF,cADF,GAEHkF,IAAI,CAAC6G,cAFT;;AAGF;AACE,mBAAO7G,IAAI,CAACC,QAAD,CAAX;AANJ;AAQD,OATD;;AAUA,WAAKtS,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AA9GH;AAAA;AAAA,WAgHE,qBAAYK,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AAvHH;AAAA;AAAA,SAyHE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD,KA3HH,CA6HE;;AA7HF;AAAA;AAAA,WA8HE,yBAAa;AAAA;;AACX,WAAKxC,OAAL,CAAasE,IAAb;AACA,WAAK4W,UAAL,CAAgBvM,qBAAhB,GAAwChO,SAAxC,CAAkD,UAACM,GAAD,EAAQ;AACxD,YAAIA,GAAJ,EAAS,MAAI,CAACsa,OAAL,GAAeta,GAAf;;AACT,cAAI,CAACjB,OAAL,CAAa8E,IAAb;AACD,OAHD;AAID,KApIH,CAsIE;;AAtIF;AAAA;AAAA,WAuIE,wBAAepB,IAAf,EAA2B;AAAA;;AACzB;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAK2W,WAAL,CAAiBI,cAAjB,CAAgC3X,IAAhC,EAAsC/C,SAAtC,CAAgD,UAACM,GAAD,EAAQ;AACtD,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACua,QAAL,GAAgBva,GAAG,CAAC6N,WAApB;AACA,gBAAI,CAAC1M,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuB,MAAI,CAAC8b,QAA5B,CAAlB;AACA,gBAAI,CAAC3X,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;;AACA,gBAAI,CAAC8R,iBAAL;AACD;;AACD,cAAI,CAACxY,OAAL,CAAa8E,IAAb;AACD,OARD;AASD,KApJH,CAsJE;;AAtJF;AAAA;AAAA,WAuJE,uBAAc2W,OAAd,EAAmC;;;AACjC,WAAKna,MAAL,CAAYoB,UAAZ,CAAuB+Y,OAAvB;AACA,iBAAK/O,SAAL,CAAelL,EAAf,MAAiB,IAAjB,IAAiBsI,aAAjB,GAAiB,MAAjB,GAAiBA,GAAE3G,QAAF,CAAWsY,OAAO,CAACvN,SAAnB,CAAjB;AACD;AA1JH;AAAA;AAAA,WA4JE,oBAAQ;AAAA;;;;AACN,WAAK9K,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIsX,OAAO,GAAqB;AAC9B7U,mBAAS,EAAE,KAAKxF,SADc;AAE9BI,YAAE,EAAE,WAAKkL,SAAL,CAAelL,EAAf,MAAiB,IAAjB,IAAiBsI,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEhH,KAFO;AAG9BoD,iBAAO,EAAE,WAAKwG,SAAL,CAAexG,OAAf,MAAsB,IAAtB,IAAsB6G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK,KAHH;AAI9BsD,iBAAO,EAAE,WAAKsG,SAAL,CAAetG,OAAf,MAAsB,IAAtB,IAAsB4G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAElK,KAJH;AAK9BmL,kBAAQ,EAAE,WAAKvB,SAAL,CAAeuB,QAAf,MAAuB,IAAvB,IAAuB2F,aAAvB,GAAuB,MAAvB,GAAuBA,GAAE9Q,KALL;AAM9BqY,mBAAS,EAAE,WAAKzO,SAAL,CAAeyO,SAAf,MAAwB,IAAxB,IAAwBtH,aAAxB,GAAwB,MAAxB,GAAwBA,GAAE/Q,KANP;AAO9BsY,kBAAQ,EAAE,WAAK1O,SAAL,CAAe0O,QAAf,MAAuB,IAAvB,IAAuB1F,aAAvB,GAAuB,MAAvB,GAAuBA,GAAE5S;AAPL,SAAhC,CADqB,CAUrB;;AAEA,aAAKmY,WAAL,CAAiBS,cAAjB,CAAgCD,OAAhC,EAAyC9a,SAAzC,CAAmD,UAACM,GAAD,EAAa;AAC9D,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAoX,mBAAO,CAACja,EAAR,IAAc,CAAd,GACI,MAAI,CAACma,UAAL,CAAgB1a,GAAG,CAAC2a,OAApB,CADJ,GAEI,MAAI,CAACC,aAAL,CAAmB5a,GAAG,CAAC2a,OAAvB,CAFJ;AAGA,kBAAI,CAACxZ,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACuC,SAAL;AACD,WAlBD,MAkBO,MAAI,CAACwF,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;;AACP,gBAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,SArBD;AAsBD,OAlCD,MAkCO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KAjMH,CAmME;;AAnMF;AAAA;AAAA,WAoME,oBAAW9D,GAAX,EAA4B;AAC1B,WAAKmB,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAA7B;AACA,WAAK4C,WAAL;AACA,WAAKwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AACD,KAxMH,CA0ME;;AA1MF;AAAA;AAAA,WA2ME,uBAAczD,GAAd,EAA+B;AAC7B,UAAI0D,CAAC,GAAG,KAAKvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,eAAOA,CAAC,CAAC2L,SAAF,IAAejN,GAAG,CAACiN,SAA1B;AAAA,OAA/B,CAAR;AACA,WAAK9L,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAA1B;AACA,WAAKoJ,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,KA/MH,CAiNE;;AAjNF;AAAA;AAAA,WAkNE,0BAAiB+W,OAAjB,EAAsC;AAAA;;AACpC,UAAIK,IAAI,GAAG,KAAK9Q,WAAL,IAAoB,IAApB,GAA2ByQ,OAAO,CAACvV,OAAnC,GAA6CuV,OAAO,CAACrV,OAAhE;AAEA,WAAKlG,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE6W;AADD;AADqB,OAD/B,EAMG3W,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC2W,aAAL,CAAmBN,OAAnB;AACd,OATH;AAUD,KA/NH,CAiOE;;AAjOF;AAAA;AAAA,WAkOE,uBAAcA,OAAd,EAAmC;AAAA;;AACjC,WAAKzb,OAAL,CAAasE,IAAb;AACA,WAAK2W,WAAL,CAAiBc,aAAjB,CAA+BN,OAAO,CAACvN,SAAvC,EAAkDvN,SAAlD,CAA4D,UAACM,GAAD,EAAa;AACvE,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIkZ,OAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACrZ,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B,EAFyB,CAGzB;;;AACA,gBAAI,CAACvC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAImZ,OAAO,CAACvN,SAAR,IAAqB,MAAI,CAACxB,SAAL,CAAelL,EAAf,CAAkBsB,KAA3C,EAAkD,MAAI,CAAC+B,SAAL;;AAElD,gBAAI,CAACwF,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SATD,MASO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAdD;AAeD;AAnPH;AAAA;AAAA,WAqPE,qBAAS;AACP,WAAKxD,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAelL,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AAzPH;;AAAA;AAAA;;;mBAAayT,mBAAiBjX,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,+GAAAA,GAAAA,+DAAAA,CAAAA,6GAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAAjBiX;AAAiBpR;AAAAC;AAAA;gEA0BjBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACtDpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAmCA,MAAAA,0DAAAA;AAC9CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAEVA,MAAAA,0DAAAA;AACFA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAqBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAqBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,wDAAAA;AACAA,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AAGAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAqCA,MAAAA,0DAAAA;AACtDA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAOFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,sCAAkC,CAAlC,CAAR;AAA4C,OAA5C;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA1UuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAsBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAuBIA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAEGA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAISA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAUpBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA0BDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiCUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACvBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAcYA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAeIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA6FKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpUZ;AAEA;AACA;AACA;AAUA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;ACfM/F,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAGFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAuBkBA,IAAAA,6DAAAA;AAMEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAdJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AASFA,IAAAA,2DAAAA;;;;;AARKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AA0BHA,IAAAA,6DAAAA;AAMEA,IAAAA,wDAAAA;AACAA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAdJA,IAAAA,6DAAAA;AAOEA,IAAAA,yDAAAA;AASFA,IAAAA,2DAAAA;;;;;AARKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAmDnBA,IAAAA,wDAAAA;;;;;;AAsCIA,IAAAA,6DAAAA;AAAsDA,IAAAA,qDAAAA;AAACA,IAAAA,2DAAAA;;;;;;AACvDA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAMFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AAKFA,IAAAA,2DAAAA;;;;;;AALEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAUFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AAKFA,IAAAA,2DAAAA;;;;;;AALEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAUFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;;AACFA,IAAAA,2DAAAA;;;;AADEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA,MAAAA,0DAAAA;;;;;;AAEFA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AAKFA,IAAAA,2DAAAA;;;;;;AALEA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAUFA,IAAAA,wDAAAA;;;;;;;;AAOIA,IAAAA,6DAAAA;AAEEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA;AAAA,aAASC,gCAAT;AAA6B,KAA7B;;AAIAD,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;;;;AAHEA,IAAAA,oEAAAA,eAAAA,0DAAAA;;;;;;;;AAKFA,IAAAA,6DAAAA;AAEEA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA;AAAA,aAASE,oCAAT;AAAiC,KAAjC;;AAIAF,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;;;;AAHEA,IAAAA,oEAAAA,eAAAA,0DAAAA;;;;;;AAdJA,IAAAA,sEAAAA;AACEA,IAAAA,yDAAAA;AASAA,IAAAA,yDAAAA;AAQFA,IAAAA,oEAAAA;;;;;AAhBKA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AASAA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAhBPA,IAAAA,6DAAAA;AAKEA,IAAAA,yDAAAA;AAmBFA,IAAAA,2DAAAA;;;;;AAnBgCA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAsBlCA,IAAAA,wDAAAA;;;;;;AACAA,IAAAA,wDAAAA;;;;;;AAGAA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;;;;;;;;AAFIA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;;;ADnOT,IAAMgX,gBAAb;AA4BE,4BACUtW,EADV,EAEU4a,UAFV,EAGU/a,SAHV,EAIUH,OAJV,EAKUqK,SALV,EAMUnK,MANV,EAOUE,KAPV,EAQSkK,QART,EAQ8B;AAAA;;AAAA;;AAPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAnCT,mBAAyB,EAAzB;AAEA,qBAAqB,KAArB,CAiC8B,CAzB9B;AAEA;;AACA,4BAA6B,CAC3B,GAD2B,EAE3B,SAF2B,EAG3B,SAH2B,EAI3B,aAJ2B,EAK3B,MAL2B,EAM3B,MAN2B,EAO3B,SAP2B,CAA7B,CAsB8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAA0B;AACnC,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AA5DH;AAAA;AAAA,WA8DE,oBAAQ;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1B0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,gEAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,gEAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAI1B0K,aAAK,EAAE,CAAC,EAAD,EAAK,CAAC/Q,gEAAD,CAAL,CAJmB;AAK1ByQ,cAAM,EAAE,CACN;AACElN,eAAK,EAAE,EADT;AAEEqL,kBAAQ,EAAE;AAFZ,SADM,EAKN,CAAC5O,gEAAD,CALM,CALkB;AAY1B0Q,cAAM,EAAE,CACN;AACEnN,eAAK,EAAE,EADT;AAEEqL,kBAAQ,EAAE;AAFZ,SADM,EAKN,CAAC5O,gEAAD,CALM;AAZkB,OAAd,CAAd;AAqBA,WAAKiP,aAAL,CAAmB,CAAnB;AACD;AArFH;AAAA;AAAA,WAuFE,2BAAe;AAAA;;AACb,UAAI,KAAKpM,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKmW,iBAAL;AACD;;AAED,WAAKlO,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACoN,aAAL,CAAmB,CAAnB;AACD,OAHD;AAID;AAjGH;AAAA;AAAA,WAmGE,6BAAiB;AAAA;;AACf;AACA,WAAKpM,UAAL,CAAgBoS,mBAAhB,GAAsC,UAACC,IAAD,EAAOC,QAAP,EAAmB;AACvD,gBAAQA,QAAR;AACE,eAAK,aAAL;AACE,mBAAO,MAAI,CAAC1J,WAAL,IAAoB,IAApB,GAA2ByJ,IAAI,CAACgE,WAAhC,GAA8ChE,IAAI,CAACiE,WAA1D;;AACF,eAAK,MAAL;AACE,mBAAO,MAAI,CAAC1N,WAAL,IAAoB,IAApB,GACHyJ,IAAI,CAACkE,YADF,GAEHlE,IAAI,CAACmE,YAFT;;AAGF,eAAK,MAAL;AACE,mBAAO,MAAI,CAAC5N,WAAL,IAAoB,IAApB,GACHyJ,IAAI,CAACuH,YADF,GAEHvH,IAAI,CAACwH,YAFT;;AAGF;AACE,mBAAOxH,IAAI,CAACC,QAAD,CAAX;AAZJ;AAcD,OAfD;;AAgBA,WAAKtS,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AAtHH;AAAA;AAAA,WAwHE,qBAAYK,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AA/HH;AAAA;AAAA,SAiIE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD,KAnIH,CAqIE;;AArIF;AAAA;AAAA,WAsIE,uBAAckB,IAAd,EAA0B;AAAA;;AACxB;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAK4W,UAAL,CAAgB1M,aAAhB,CAA8B9K,IAA9B,EAAoC/C,SAApC,CAA8C,UAACM,GAAD,EAAQ;AACpD,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACib,OAAL,GAAejb,GAAG,CAACkb,UAAnB;AACA,gBAAI,CAAC/Z,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuB,MAAI,CAACwc,OAA5B,CAAlB;AACA,gBAAI,CAACrY,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;;AACA,gBAAI,CAAC8R,iBAAL;AACD;;AACD,cAAI,CAACxY,OAAL,CAAa8E,IAAb;AACD,OARD;AASD,KAnJH,CAqJE;;AArJF;AAAA;AAAA,WAsJE,sBAAasX,MAAb,EAAgC;;;AAC9B,WAAK9a,MAAL,CAAYoB,UAAZ,CAAuB0Z,MAAvB;AACA,iBAAK1P,SAAL,CAAesD,MAAf,MAAqB,IAArB,IAAqBlG,aAArB,GAAqB,MAArB,GAAqBA,GAAE3G,QAAF,CAAWiZ,MAAM,CAACpM,MAAlB,CAArB;AACA,iBAAKtD,SAAL,CAAeuD,MAAf,MAAqB,IAArB,IAAqBlD,aAArB,GAAqB,MAArB,GAAqBA,GAAE5J,QAAF,CAAWiZ,MAAM,CAACnM,MAAlB,CAArB;AACA,iBAAKvD,SAAL,CAAelL,EAAf,MAAiB,IAAjB,IAAiBwL,aAAjB,GAAiB,MAAjB,GAAiBA,GAAE7J,QAAF,CAAWiZ,MAAM,CAACC,SAAlB,CAAjB;AACD;AA3JH;AAAA;AAAA,WA6JE,oBAAQ;AAAA;;;;AACN,WAAKjZ,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIiY,MAAM,GAAoB;AAC5BxV,mBAAS,EAAE,KAAKxF,SADY;AAE5BI,YAAE,EAAE,WAAKkL,SAAL,CAAelL,EAAf,MAAiB,IAAjB,IAAiBsI,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEhH,KAFK;AAG5BoD,iBAAO,EAAE,WAAKwG,SAAL,CAAexG,OAAf,MAAsB,IAAtB,IAAsB6G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK,KAHL;AAI5BsD,iBAAO,EAAE,WAAKsG,SAAL,CAAetG,OAAf,MAAsB,IAAtB,IAAsB4G,aAAtB,GAAsB,MAAtB,GAAsBA,GAAElK,KAJL;AAK5BmN,gBAAM,EAAE,WAAKvD,SAAL,CAAeuD,MAAf,MAAqB,IAArB,IAAqB2D,aAArB,GAAqB,MAArB,GAAqBA,GAAE9Q;AALH,SAA9B;AAOAyD,eAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB4V,MAAtB;AAEA,aAAKpc,OAAL,CAAasE,IAAb;AACA,aAAK4W,UAAL,CAAgBoB,aAAhB,CAA8BF,MAA9B,EAAsCzb,SAAtC,CAAgD,UAACM,GAAD,EAAa;AAC3D,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApD,eAAG,CAACgY,IAAJ,CAASoD,SAAT,GAAqBpb,GAAG,CAACgY,IAAJ,CAASzX,EAA9B;AAEA4a,kBAAM,CAAC5a,EAAP,IAAa,CAAb,GACI,MAAI,CAAC+a,SAAL,CAAetb,GAAG,CAACgY,IAAnB,CADJ,GAEI,MAAI,CAACuD,YAAL,CAAkBvb,GAAG,CAACgY,IAAtB,CAFJ;AAGA,kBAAI,CAAC7W,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B,CArBwB,CAsBxB;AACD,WAvBD,MAuBO,MAAI,CAAC+H,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;;AACP,gBAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,SA1BD;AA2BD,OAtCD,MAsCO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KAtMH,CAwME;;AAxMF;AAAA;AAAA,WAyME,mBAAU9D,GAAV,EAA0B;AACxB,WAAKmB,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAA7B;AACA,WAAK4C,WAAL;AACA,WAAKwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AAEA,WAAKgI,SAAL,CAAexG,OAAf,CAAuBmB,KAAvB;AACA,WAAKqF,SAAL,CAAetG,OAAf,CAAuBiB,KAAvB;AACA,WAAKjE,SAAL,GAAiB,KAAjB;AACD,KAjNH,CAmNE;;AAnNF;AAAA;AAAA,WAoNE,sBAAanC,GAAb,EAA6B;AAC3B,UAAI0D,CAAC,GAAG,KAAKvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,eAAOA,CAAC,CAAC8Z,SAAF,IAAepb,GAAG,CAACob,SAA1B;AAAA,OAA/B,CAAR;AACA,WAAKja,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAA1B;AACA,WAAKoJ,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AAEA,WAAKG,SAAL;AACD,KA1NH,CA4NE;;AA5NF;AAAA;AAAA,WA6NE,0BAAiBuX,MAAjB,EAAoC;AAAA;;AAClC,UAAIhD,IAAI,GAAG,KAAKpO,WAAL,IAAoB,IAApB,GAA2BoR,MAAM,CAAClW,OAAlC,GAA4CkW,MAAM,CAAChW,OAA9D;AAEA,WAAKlG,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEmU;AADD;AADqB,OAD/B,EAMGjU,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACqX,YAAL,CAAkBL,MAAlB;AACd,OATH;AAUD,KA1OH,CA4OE;;AA5OF;AAAA;AAAA,WA6OE,sBAAaA,MAAb,EAAgC;AAAA;;AAC9B,WAAKpc,OAAL,CAAasE,IAAb;AACA,WAAK4W,UAAL,CAAgBuB,YAAhB,CAA6BL,MAAM,CAACC,SAApC,EAA+C1b,SAA/C,CAAyD,UAACM,GAAD,EAAa;AACpE,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAI6Z,MAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACha,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B,EAFyB,CAGzB;;;AACA,gBAAI,CAACvC,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAI8Z,MAAM,CAACC,SAAP,IAAoB,MAAI,CAAC3P,SAAL,CAAelL,EAAf,CAAkBsB,KAA1C,EAAiD,MAAI,CAAC+B,SAAL;;AAEjD,gBAAI,CAACwF,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SATD,MASO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAdD;AAeD;AA9PH;AAAA;AAAA,WAgQE,qBAAS;AACP,WAAKxD,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAelL,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AApQH;;AAAA;AAAA;;;mBAAawT,kBAAgBhX,gEAAAA,CAAAA,wDAAAA,GAAAA,gEAAAA,CAAAA,6GAAAA,GAAAA,gEAAAA,CAAAA,kEAAAA,GAAAA,gEAAAA,CAAAA,2DAAAA,GAAAA,gEAAAA,CAAAA,iFAAAA,GAAAA,gEAAAA,CAAAA,gEAAAA,GAAAA,gEAAAA,CAAAA,4DAAAA,GAAAA,gEAAAA,CAAAA,8EAAAA;AAAA;;;QAAhBgX;AAAgBnR;AAAAC;AAAA;iEAyBhBjG,sEAAYA,EAAA;iEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;ACtDpBI,MAAAA,wDAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAEEA,MAAAA,yDAAAA;AAIAA,MAAAA,yDAAAA;AAGAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAEEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,wDAAAA;AACAA,MAAAA,yDAAAA;AAiBFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAGAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,wDAAAA;AACAA,MAAAA,yDAAAA;AAiBFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAGAA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AAIFA,MAAAA,2DAAAA;AAGAA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AAKFA,MAAAA,2DAAAA;AAGAA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AAKFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AAEEA,MAAAA,6DAAAA;AAGEA,MAAAA,yDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,yDAAAA;AACAA,MAAAA,qDAAAA;;AAIFA,MAAAA,2DAAAA;AAIAA,MAAAA,6DAAAA;AAAkDA,MAAAA,yDAAAA;AAAA,eAAS+F,eAAT;AAAoB,OAApB;AAChD/F,MAAAA,qDAAAA;;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAiBA,MAAAA,qDAAAA;;AAAoCA,MAAAA,2DAAAA;AACrDA,MAAAA,6DAAAA;AAEEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAWA,MAAAA,qDAAAA;AAAMA,MAAAA,2DAAAA;AACjBA,MAAAA,6DAAAA;AAEEA,MAAAA,yDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,2DAAAA;AAMFA,MAAAA,2DAAAA;AAGAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAEEA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAGFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAOFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAOFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAOFA,MAAAA,oEAAAA;AAGAA,MAAAA,sEAAAA;AACEA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AAyBFA,MAAAA,oEAAAA;AAEAA,MAAAA,yDAAAA;AACAA,MAAAA,yDAAAA;AAGAA,MAAAA,yDAAAA;AAKFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AAEEA,MAAAA,yDAAAA;AAAA,eAAQ+F,qCAAiC,CAAjC,CAAR;AAA2C,OAA3C;AAKF/F,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;;;;AA1QuBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAIAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAMLA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAQQA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAKCA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAsBDA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAKCA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAuBPA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,iCAA2B,WAA3B,EAA2B+F,aAA3B;AAQA/F,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,sCAAgC,cAAhC,EAAgC+F,mBAAhC,EAAgC,WAAhC,EAAgCA,aAAhC;AASA/F,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,sCAAgC,aAAhC,EAAgC+F,oBAAhC,EAAgC,WAAhC,EAAgCA,aAAhC;AAiBa/F,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AACvBA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AASAA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAUaA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA,MAAAA,0DAAAA;AAeIA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAqGKA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AACaA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAWjCA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,oBAAAA,8DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClQZ;AACA;AACA;AACA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;ACgBsB/F,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAmDfA,IAAAA,uDAAAA;;;;;;;;AAOFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASsJ,mBAAT;AAAoB,KAApB;AAEAtJ,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA2BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAuBA,IAAAA,0DAAAA;;;;;AAAvBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASuJ,0BAAT;AAAuB,KAAvB;;AAIAvJ,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASwJ,kCAAT;AAA+B,KAA/B;;AAIAxJ,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAZPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADjLT,IAAM2W,eAAb;AAsBE,2BACUvW,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUC,KALV,EAMSC,WANT,EAOUC,EAPV,EAQUoc,YARV,EASUC,cATV,EASwC;AAAA;;AAAA;;AAR9B;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AA7BV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAEA,mBAAkB,CAAlB;AAMA,0BAA2B,CACzB,GADyB,EAEzB,SAFyB,EAGzB,SAHyB,EAIzB;AACA,aALyB,CAA3B;AAsBEvc,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAK2F,SAAL,GAAiB9F,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB,CAdsC,CAetC;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AArDH;AAAA;AAAA,WAuDE,oBAAQ;AAAA;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CADsB;AAE1B;AACA0E,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC3G,+DAAD,EAAsBqG,qGAAtB,CAAL,CAHiB;AAI1BQ,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC7G,+DAAD,EAAsBqG,qGAAtB,CAAL;AAJiB,OAAd,CAAd;AAMA,WAAKzF,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAK8a,cAAL,CAAoB,CAApB;AACD;AAlEH;AAAA;AAAA,WAoEE,2BAAe;AAAA;;AACb,UAAI,KAAKxa,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACqE,SAAL,GAAiBrE,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACwb,cAAL,CAAoB,CAApB;AACD,OAHD;AAID;AA9EH;AAAA;AAAA,SAgFE,eAAa;AACX,aAAO,KAAKtb,MAAL,CAAYkB,QAAnB;AACD;AAlFH;AAAA;AAAA,WAoFE,qBAAYG,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD,KAvFH,CAyFE;;AAzFF;AAAA;AAAA,WA0FE,wBAAeS,IAAf,EAA2B;AAAA;;AACzB,WAAKiJ,OAAL,GAAejJ,IAAf;AACA,WAAKgZ,YAAL,CAAkBG,YAAlB,CAA+BnZ,IAA/B,EAAqC/C,SAArC,CAA+C,UAACM,GAAD,EAAoB;AACjE,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,wEAAJ,CAAuBuB,GAAG,CAAC6b,UAA3B,CAAlB;AACA,gBAAI,CAACjZ,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACA,gBAAI,CAACtE,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;AACF,OAND;AAOD;AAnGH;AAAA;AAAA,WAqGE,oBAAQ;AAAA;;AACN,WAAKc,SAAL,GAAiB,IAAjB;AAEA,UAAIuD,KAAK,GAAiB;AACxBnF,UAAE,EAAE,KAAK0B,SAAL,CAAe1B,EAAf,CAAkBsB,KADE;AAExB;AACA8D,iBAAS,EAAE,KAAKA,SAHQ;AAIxBV,eAAO,EAAE,KAAKhD,SAAL,CAAegD,OAAf,CAAuBpD,KAJR;AAKxBsD,eAAO,EAAE,KAAKlD,SAAL,CAAekD,OAAf,CAAuBtD;AALR,OAA1B;;AAOA,UAAI,KAAKxB,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,aAAKnE,OAAL,CAAasE,IAAb;AACA,aAAKoY,YAAL,CAAkBK,cAAlB,CAAiCpW,KAAjC,EAAwChG,SAAxC,CAAkD,UAACM,GAAD,EAAa;AAC7D,cAAIA,GAAJ,EAAS;AACP,gBAAI0F,KAAK,CAACnF,EAAN,IAAY,CAAhB,EAAmB;AACjB,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAAC8F,WAAjC;;AACA,oBAAI,CAAClD,WAAL;AACA,oBAAI,CAACzB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD,aAJD,MAIO;AACL,kBAAIiD,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACV,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACya,QAAF,IAAc/b,GAAG,CAAC8F,WAAJ,CAAgBiW,QAArC;AAAA,eADU,CAAZ;;AAGA,oBAAI,CAAC5a,UAAL,CAAgBmC,IAAhB,CAAqBgB,KAArB,IAA8BtE,GAAG,CAAC8F,WAAlC;AACA,oBAAI,CAAC3E,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD,aAXM,CAYP;;;AACA,kBAAI,CAACrC,MAAL,CAAYyE,OAAZ,CACEiC,KAAK,CAACnF,EAAN,IAAY,CAAZ,GACI,yBADJ,GAEI,4BAHN;;AAKA,kBAAI,CAACqD,SAAL;;AACA,kBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD;AACF,SAtBD;AAuBD,OAzBD,MAyBO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AACR;AAzIH;AAAA;AAAA,WA2IE,mBAAU4B,KAAV,EAAyB;AACvB,WAAKrF,MAAL,CAAYoB,UAAZ,CAAuBiE,KAAvB;AACA,WAAKzD,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2BwD,KAAK,CAACqW,QAAjC;AACD;AA9IH;AAAA;AAAA,WAgJE,2BAAkBC,SAAlB,EAAqC;AAAA;;AACnC,WAAK/c,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAE,KAAKlD,OAAL,IAAgB,IAAhB,GAAuBkb,SAAS,CAAC/W,OAAjC,GAA2C+W,SAAS,CAAC7W;AADtD;AADqB,OAD/B,EAMGjB,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC8X,WAAL,CAAiBD,SAAjB;AACd,OATH;AAUD,KA3JH,CA6JE;;AA7JF;AAAA;AAAA,WA8JE,qBAAYA,SAAZ,EAA+B;AAAA;;AAC7B,WAAKP,YAAL,CAAkBQ,WAAlB,CAA8BD,SAAS,CAACD,QAAxC,EAAkDrc,SAAlD,CAA4D,UAACM,GAAD,EAAa;AACvE,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB;AACA;AACA;AACA;AACA,gBAAI,CAACpE,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;;AAEA,gBAAI,CAACkY,cAAL,CAAoB,CAApB;;AACA,gBAAI,CAACxa,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AAEA,cAAI4a,SAAS,CAACD,QAAV,IAAsB,MAAI,CAAC9Z,SAAL,CAAe1B,EAAf,CAAkBsB,KAA5C,EAAmD,MAAI,CAAC+B,SAAL;AACpD,SAXD,MAWO;AACL,gBAAI,CAAC5E,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAfD;AAgBD;AA/KH;AAAA;AAAA,WAiLE,qBAAS;AACP,WAAKzD,MAAL,CAAY+F,KAAZ;AACA,WAAKnE,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;AArLH;;AAAA;AAAA;;;mBAAamT,iBAAe3W,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,oGAAAA,GAAAA,+DAAAA,CAAAA,sGAAAA;AAAA;;;QAAf2W;AAAe9Q;AAAAC;AAAA;gEAoBfjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AChDpBI,MAAAA,uDAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AA8BFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAAS+F,cAAT;AAAmB,OAAnB;AAEA/F,MAAAA,wDAAAA;AACAA,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AAEAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAA0CA,MAAAA,0DAAAA;AAE5CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC7CA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAqBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,sCAAkC,CAAlC,CAAR;AAA4C,OAA5C;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAxNQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA0DTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACJA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAOCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIaA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAUMA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAyDKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjNZ;AAEA;AACA;AACA;AASA;AAKA;;;;;;;;;;;;;;;;;;;;;;ACbM/F,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAmBcA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAkBjBA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASwM,kBAAT;AAAmB,KAAnB;AAEFxM,IAAAA,uDAAAA;AAEEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAIDA,IAAAA,4DAAAA;AAIAA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASyM,kBAAT;AAAmB,KAAnB;AAEAzM,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAEDA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAS0M,mBAAT;AAAoB,KAApB;AAEA1M,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA+BIA,IAAAA,4DAAAA;AAAuDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACxDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASyN,0CAAT;AAAuC,KAAvC;;AAIAzN,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS0N,yCAAT;AAAsC,KAAtC;;AAIA1N,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADtKT,IAAMmX,qBAAb;AAmBE,iCACUzW,EADV,EAEU6c,eAFV,EAGUhd,SAHV,EAIUH,OAJV,EAKUqK,SALV,EAMUnK,MANV,EAOUE,KAPV,EAQSkK,QART,EAQ8B;AAAA;;AAAA;;AAPpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA1BT,wBAAmC,EAAnC;AAEA,qBAAY,KAAZ;AACA,mBAAkB,CAAlB,CAuB8B,CAf9B;;AACA,4BAA6B,CAAC,GAAD,EAAM,SAAN,EAAiB,SAAjB,EAA4B,SAA5B,CAA7B,CAc8B,CAE5B;;AACAlK,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACyJ,QAAL,CACGtJ,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SAPH;AAQD;AACF,KAbD,EAH4B,CAkB5B;;AACA,SAAKd,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,WAAI,CAACkJ,WAAL,GAAmBlJ,IAAI,CAACA,IAAxB;AACD,KAFD;AAIA,SAAKV,SAAL,GAAiBN,MAAM,CAACwJ,QAAQ,CAACjJ,YAAT,EAAD,CAAvB;AACD;;AAnDH;AAAA;AAAA,WAqDE,oBAAQ;AACN,WAAK+b,kBAAL,CAAwB,CAAxB;AAEA,WAAK9b,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BwC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1BiD,eAAO,EAAE,CAAC,EAAD,EAAK,CAACzH,+DAAD,EAAsBqG,qGAAtB,CAAL,CAFiB;AAG1BqB,eAAO,EAAE,CAAC,EAAD,EAAK,CAAC1H,+DAAD,EAAsBqG,qGAAtB,CAAL;AAHiB,OAAd,CAAd,CAHM,CASN;;AACA,WAAKxD,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuB,KAAK2d,YAA5B,CAAlB;AACD;AAhEH;AAAA;AAAA,WAkEE,2BAAe;AAAA;;AACb,UAAI,KAAKjb,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKgI,QAAL,CAAclJ,SAAd,CAAwBT,SAAxB,CAAkC,UAAC4B,CAAD,EAAM;AACtC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAACgc,kBAAL,CAAwB,CAAxB;AACD,OAHD;AAID;AA5EH;AAAA;AAAA,WA8EE,qBAAYza,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,UAAI,KAAKb,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,aAAKD,UAAL,CAAgBC,SAAhB,CAA0BoK,SAA1B;AACD;AACF;AArFH;AAAA;AAAA,SAuFE,eAAa;AACX,aAAO,KAAKnL,MAAL,CAAYkB,QAAnB;AACD;AAzFH;AAAA;AAAA,WA0FE,qBAAS;AACP,WAAKlB,MAAL,CAAY+F,KAAZ;AACA,WAAKqF,SAAL,CAAe3I,EAAf,CAAkBZ,QAAlB,CAA2B,CAA3B;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD,KA9FH,CAgGE;;AAhGF;AAAA;AAAA,WAiGE,4BAAmBM,IAAnB,EAA+B;AAAA;;AAC7B,WAAKiJ,OAAL,GAAejJ,IAAf;AACA,WAAK1D,OAAL,CAAasE,IAAb;AAEA,WAAK6Y,eAAL,CAAqBC,kBAArB,CAAwC1Z,IAAxC,EAA8C,KAAKtC,SAAnD,EAA8DT,SAA9D,CACE,UAACM,GAAD,EAAiC;AAC/B,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACoc,YAAL,GAAoBpc,GAAG,CAACqc,cAAxB;AACA,gBAAI,CAAClb,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuB,MAAI,CAAC2d,YAA5B,CAAlB;AACA,gBAAI,CAACxZ,WAAL,GAAmB5C,GAAG,CAACyF,UAAvB;AACAH,iBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCvF,GAAjC;AACD;;AACD,cAAI,CAACjB,OAAL,CAAa8E,IAAb;AACD,OATH;AAWD;AAhHH;AAAA;AAAA,WAkHE,oBAAQ;AAAA;;;;AACN,WAAK1B,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAK9B,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,YAAIoZ,WAAW,GAAG,EAAlB;AACAA,mBAAW,CAACxZ,EAAZ,GAAe,KAAK2I,SAAL,CAAe3I,EAAf,CAAkBjB,KAAjC;AACAya,mBAAW,CAACnc,SAAZ,GAAwB,KAAKA,SAA7B;AACAmc,mBAAW,CAACvW,OAAZ,GAAsB,WAAK0F,SAAL,CAAe1F,OAAf,MAAsB,IAAtB,IAAsB8C,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEhH,KAA9C;AACAya,mBAAW,CAACtW,OAAZ,GAAsB,WAAKyF,SAAL,CAAezF,OAAf,MAAsB,IAAtB,IAAsB8F,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEjK,KAA9C;AACAyD,eAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B+W,WAA3B;AAEA,aAAKJ,eAAL,CAAqBK,kBAArB,CAAwCD,WAAxC,EAAqD5c,SAArD,CACE,UAACM,GAAD,EAAa;AACX,cAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,kBAAI,CAACrE,OAAL,CAAasE,IAAb;;AAEA,gBAAGiZ,WAAW,CAACxZ,EAAZ,IAAkB,CAArB,EAAuB;AACrB,oBAAI,CAAC3B,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAACwc,UAAjC;;AACA,oBAAI,CAAC5Z,WAAL;;AACA,oBAAI,CAACwG,SAAL,CAAe3F,OAAf,CAAuB,yBAAvB;AACD,aAJD,MAIK;AACH,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACwB,EAAF,IAAQ,MAAI,CAAC2I,SAAL,CAAe3I,EAAf,CAAkBjB,KAAjC;AAAA,eADM,CAAR;;AAIA,oBAAI,CAACV,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAACwc,UAA9B;;AAEA,oBAAI,CAACpT,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD;;AACD,kBAAI,CAACtC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,kBAAI,CAACwC,SAAL;AACD;;AACD,gBAAI,CAAC7E,OAAL,CAAa8E,IAAb;AACD,SAtBH;AAwBD,OAhCD,MAgCO,KAAKuF,SAAL,CAAetF,KAAf,CAAqB,sBAArB;AACR,KArJH,CAuJE;;AAvJF;AAAA;AAAA,WAwJE,2BAAkBwY,WAAlB,EAA+C;AAC7C,WAAKjc,MAAL,CAAYoB,UAAZ,CAAuB6a,WAAvB;AACD,KA1JH,CA4JE;;AA5JF;AAAA;AAAA,WA6JE,0BAAiBA,WAAjB,EAA8C;AAAA;;AAC5C,UAAIG,eAAe,GACjB,KAAK1S,WAAL,IAAoB,IAApB,GAA2BuS,WAAW,CAACvW,OAAvC,GAAiDuW,WAAW,CAACtW,OAD/D;AAGA,WAAK/G,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEyY;AADD;AADqB,OAD/B,EAMGvY,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACuY,iBAAL,CAAuBJ,WAAvB;AACd,OATH;AAUD,KA3KH,CA6KE;;AA7KF;AAAA;AAAA,WA8KE,2BAAkBA,WAAlB,EAA+C;AAAA;;AAC7C,WAAKvd,OAAL,CAAasE,IAAb;AACA,WAAK6Y,eAAL,CAAqBQ,iBAArB,CAAuCJ,WAAW,CAACxZ,EAAnD,EAAuDpD,SAAvD,CACE,UAACM,GAAD,EAAa;AACX,YAAI,IAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEoD,WAAL,KAAoB,CAAxB,EAA2B;AACzB,cAAIM,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAIgb,WAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACnb,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4Bb,CAA5B,EAA+B,CAA/B;;AACA,gBAAI,CAACvC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AAEA,gBAAI,CAACgI,SAAL,CAAe3F,OAAf,CAAuB,4BAAvB;AACD,SAND,MAMO;AACL,gBAAI,CAAC2F,SAAL,CAAetF,KAAf,CAAqB9D,GAAG,SAAH,OAAG,WAAH,GAAG,MAAH,MAAG,CAAEyK,YAA1B;AACD;;AACD,cAAI,CAAC1L,OAAL,CAAa8E,IAAb;AACD,OAZH;AAcD;AA9LH;;AAAA;AAAA;;;mBAAaiS,uBAAqBnX,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,8GAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA;AAAA;;;QAArBmX;AAAqBtR;AAAAC;AAAA;gEAgBrBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AC3CpBI,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAIAA,MAAAA,wDAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAYCA,MAAAA,wDAAAA;AAQDA,MAAAA,wDAAAA;AASFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAA6CA,MAAAA,0DAAAA;AAE/CA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,0CAAsC,CAAtC,CAAR;AAAgD,OAAhD;AAKF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA3MuBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2BZA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAYDA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAgBmBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA2DKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnMZ;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACoBsB/F,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA6BHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA8BHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAiBjBA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASge,kBAAT;AAAmB,KAAnB;AAEFhe,IAAAA,uDAAAA;AAEEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAGFA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASkG,kBAAT;AAAmB,KAAnB;AAEAlG,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAEFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASqT,mBAAT;AAAoB,KAApB;AAEArT,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA2BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAmBA,IAAAA,0DAAAA;;;;;AAAnBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAsBA,IAAAA,0DAAAA;;;;;AAAtBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAInCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAkBA,IAAAA,0DAAAA;;;;;AAAlBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS2N,4BAAT;AAAyB,KAAzB;AAKA3N,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAEAA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASie,kCAAT;AAA+B,KAA/B;AAIAje,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAlBFA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAUAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAjBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAUAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAbPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAoBFA,IAAAA,0DAAAA;;;;;AApBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADnMT,IAAM6W,iBAAb;AAqBE,6BACUzW,OADV,EAEUC,MAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUC,KALV,EAMSC,WANT,EAOUC,EAPV,EAQUwP,eARV,EAQ0C;AAAA;;AAAA;;AAPhC;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AA3BV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAOA,0BAA2B,CACzB,GADyB,EAEzB,WAFyB,EAGzB,cAHyB,EAIzB,SAJyB,EAKzB,QALyB,CAA3B;AAqBE1P,SAAK,CAACM,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,WAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,iBAAI,CAACC,YAAL,GAAoBF,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAKG,SAAL,GAAiBN,MAAM,CAACT,WAAW,CAACgB,YAAZ,EAAD,CAAvB;AACD;;AA5CH;AAAA;AAAA,WA8CE,oBAAQ;AAAA;;AACN,WAAKC,MAAL,GAAc,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AAC1BC,UAAE,EAAE,CAAC,CAAD,CADsB;AAE1Bsc,iBAAS,EAAE,CAAC,EAAD,EAAKve,+DAAL,CAFe;AAG1Bwe,oBAAY,EAAE,CAAC,EAAD,EAAKxe,+DAAL,CAHY;AAI1Bye,gBAAQ,EAAE,CAAC,EAAD,EAAKze,+DAAL;AAJgB,OAAd,CAAd;AAMA,WAAKY,SAAL,CAAe0B,YAAf,CAA4BlB,SAA5B,CAAsC,UAACmB,IAAD,EAAS;AAC7C,cAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,OAFD;AAGA,WAAKmc,iBAAL,CAAuB,CAAvB;AACD;AAzDH;AAAA;AAAA,WA2DE,2BAAe;AAAA;;AACb,UAAI,KAAK7b,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AACD,WAAKjC,WAAL,CAAiBe,SAAjB,CAA2BT,SAA3B,CAAqC,UAAC4B,CAAD,EAAM;AACzC,cAAI,CAACnB,SAAL,GAAiBmB,CAAC,CAACnB,SAAnB;;AACA,cAAI,CAAC6c,iBAAL,CAAuB,CAAvB;AACD,OAHD;AAID;AApEH;AAAA;AAAA,SAsEE,eAAa;AACX,aAAO,KAAK3c,MAAL,CAAYkB,QAAnB;AACD;AAxEH;AAAA;AAAA,WA0EE,qBAAY0b,WAAZ,EAAiC;AAC/B,WAAK5c,MAAL,CAAYoB,UAAZ,CAAuBwb,WAAvB;AACD;AA5EH;AAAA;AAAA,WA8EE,qBAAYvb,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKV,UAAL,CAAgBW,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAjFH;AAAA;AAAA,WAkFE,qBAAS;AACP,WAAKG,SAAL,GAAiB,KAAjB;AACA,WAAK9B,MAAL,CAAY+F,KAAZ;AACA,WAAKnE,SAAL,CAAe1B,EAAf,CAAkB2B,QAAlB,CAA2B,CAA3B;AACD,KAtFH,CAwFE;;AAxFF;AAAA;AAAA,WAyFE,2BAAkBO,IAAlB,EAA8B;AAAA;;AAC5B,WAAKoM,eAAL,CACGO,cADH,CACkB3M,IADlB,EACwB,KAAKtC,SAD7B,EAEGT,SAFH,CAEa,UAACM,GAAD,EAAsB;AAC/B,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACmB,UAAL,GAAkB,IAAI1C,uEAAJ,CAAuBuB,GAAG,CAACuP,WAA3B,CAAlB;AACAjK,iBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBvF,GAAG,CAACuP,WAAxB;AACA,gBAAI,CAAC3M,WAAL,GAAmB5C,GAAG,CAAC6C,SAAvB;AACD;AACF,OARH;AASD;AAnGH;AAAA;AAAA,WAqGE,oBAAQ;AAAA;;AACN,WAAKV,SAAL,GAAiB,IAAjB;AACA,UAAI+a,YAAY,GAAa;AAC3B3c,UAAE,EAAE,KAAK0B,SAAL,CAAe1B,EAAf,CAAkBsB,KADK;AAE3Bgb,iBAAS,EAAE,KAAK5a,SAAL,CAAe4a,SAAf,CAAyBhb,KAFT;AAG3Bib,oBAAY,EAAE,KAAK7a,SAAL,CAAe6a,YAAf,CAA4Bjb,KAHf;AAI3Bkb,gBAAQ,EAAE,KAAK9a,SAAL,CAAe8a,QAAf,CAAwBlb,KAJP;AAK3B8D,iBAAS,EAAE,KAAKxF;AALW,OAA7B;;AAOA,UAAI,KAAKE,MAAL,CAAY6C,KAAhB,EAAuB;AACrB,aAAK2L,eAAL,CACGsO,cADH,CACkBD,YADlB,EAEGxd,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACrE,OAAL,CAAasE,IAAb;;AAEA,gBAAI6Z,YAAY,CAAC3c,EAAb,IAAmB,CAAvB,EAA0B;AACxB,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBC,OAArB,CAA6BvD,GAAG,CAACod,OAAjC;;AACA,oBAAI,CAACxa,WAAL;;AACA,oBAAI,CAAC5D,MAAL,CAAYyE,OAAZ,CAAoB,yBAApB;AACD,aAJD,MAIO;AACL,kBAAIC,CAAC,GAAG,MAAI,CAACvC,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CACN,UAACrC,CAAD;AAAA,uBAAOA,CAAC,CAACf,EAAF,IAAQ2c,YAAY,CAAC3c,EAA5B;AAAA,eADM,CAAR;;AAGA,oBAAI,CAACY,UAAL,CAAgBmC,IAAhB,CAAqBI,CAArB,IAA0B1D,GAAG,CAACod,OAA9B;;AAEA,oBAAI,CAACpe,MAAL,CAAYyE,OAAZ,CAAoB,4BAApB;AACD;;AACD6B,mBAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB2X,YAAjB;AAEA,kBAAI,CAAC/b,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,kBAAI,CAACrC,OAAL,CAAa8E,IAAb;AACD;AACF,SAvBH;AAwBD,OAzBD,MAyBO,KAAK7E,MAAL,CAAY8E,KAAZ,CAAkB,sBAAlB;AACR;AAxIH;AAAA;AAAA,WA0IE,2BAAkBmZ,WAAlB,EAAuC;AAAA;;AACrC,WAAKhe,MAAL,CACG8E,IADH,CACQrF,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJU,aAAG,EAAEiZ,WAAW,CAACF;AADb;AADqB,OAD/B,EAMG7Y,WANH,GAOGxE,SAPH,CAOa,UAACyE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACkZ,aAAL,CAAmBJ,WAAnB;AACd,OATH;AAUD,KArJH,CAsJE;;AAtJF;AAAA;AAAA,WAuJE,uBAAcA,WAAd,EAAmC;AAAA;;AACjC,WAAKpO,eAAL,CAAqBwO,aAArB,CAAmCJ,WAAW,CAAC1c,EAA/C,EAAmDb,SAAnD,CAA6D,UAACM,GAAD,EAAa;AACxE,YAAIA,GAAG,CAACoD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAIkB,KAAK,GAAG,MAAI,CAACnD,UAAL,CAAgBmC,IAAhB,CAAqBK,SAArB,CAA+B,UAACrC,CAAD;AAAA,mBAAOA,CAAC,IAAI2b,WAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAAC9b,UAAL,CAAgBmC,IAAhB,CAAqBiB,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAACnD,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AAEA,gBAAI,CAACpC,MAAL,CAAYyE,OAAZ,CAAoB,6BAApB;AACD,SAND,MAMO;AACL,gBAAI,CAACzE,MAAL,CAAY8E,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAVD;AAWD;AAnKH;;AAAA;AAAA;;;mBAAa0R,mBAAiB7W,+DAAAA,CAAAA,0DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,wGAAAA;AAAA;;;QAAjB6W;AAAiBhR;AAAAC;AAAA;gEAmBjBjG,sEAAYA,EAAA;gEACZD,4DAAOA,EAAA;;;;;;;;;;;;;;;AC/CpBI,MAAAA,uDAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AAKAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAoCA,MAAAA,0DAAAA;AAChDA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,wDAAAA;AAWAA,MAAAA,wDAAAA;AASAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAyCA,MAAAA,0DAAAA;AAE3CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC7CA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAS+F,uBAAT;AAA4B,OAA5B;AAFF/F,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAEAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAsBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQ+F,yCAAqC,CAArC,CAAR;AAA+C,OAA/C;AAMF/F,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA3OQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKIA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAqBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAwBLA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAITA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAuBNA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAUPA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeHA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAIaA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAUMA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAyDKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAWjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwB+F,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;AClOZ;;;AAUO,IAAM6Y,iBAAb;AACE,6BAAoBC,IAApB,EAAoC;AAAA;;AAAhB;AAAoB,GAD1C,CAGE;;;AAHF;AAAA;AAAA,WAIE,uBAAc/a,IAAd,EAA0B;AACxB,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WACFwd,yEADE,4CACmD7a,IADnD,EAAP;AAGD;AARH;AAAA;AAAA,WAUE,iCAAqB;AACnB,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WACFwd,yEADE,iCAAP;AAGD,KAdH,CAgBE;;AAhBF;AAAA;AAAA,WAiBE,2BAAkBha,IAAlB,EAA0C;AACxC,aAAO,KAAKka,IAAL,CAAUE,IAAV,WACFJ,yEADE,mCAELha,IAFK,CAAP;AAID,KAtBH,CAwBE;;AAxBF;AAAA;AAAA,WAyBE,0BAAiBqa,YAAjB,EAAqC;AACnC,aAAO,KAAKH,IAAL,CAAUI,MAAV,WACFN,yEADE,yCACgDK,YADhD,EAAP;AAGD;AA7BH;;AAAA;AAAA;;;mBAAaJ,mBAAiB5e,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAjB4e;AAAiBM,WAAjBN,iBAAiB;AAAAO,cAFhB;;;;;;;;;;;;;;;;;;;;;;ACRd;;;AAKO,IAAMC,qBAAb;AAEE,iCAAoBP,IAApB,EAAoC;AAAA;;AAAhB;AAAqB,GAF3C,CAGE;;;AAHF;AAAA;AAAA,WAIE,2BAAkB/a,IAAlB,EAA+BtC,SAA/B,EAA+C;AAC7C,aAAO,KAAKqd,IAAL,CAAU1d,GAAV,WACFwd,yEADE,yDACgEnd,SADhE,cAC6EsC,IAD7E,EAAP;AAGD,KARH,CAYE;;AAZF;AAAA;AAAA,WAaE,8BAAqBa,IAArB,EAAiD;AAC/C,aAAO,KAAKka,IAAL,CAAUE,IAAV,WACFJ,yEADE,2CAELha,IAFK,CAAP;AAID,KAlBH,CAqBE;;AArBF;AAAA;AAAA,WAsBE,6BAAoB0a,SAApB,EAAqC;AACnC,aAAO,KAAKR,IAAL,CAAUI,MAAV,WACFN,yEADE,iDACwDU,SADxD,EAAP;AAGD;AA1BH;;AAAA;AAAA;;;mBAAaD,uBAAqBpf,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAArBof;AAAqBF,WAArBE,qBAAqB;AAAAD,cAFpB;;;;;;;;;;;;;;;;;;;;;;ACGd;;;AAKO,IAAMG,eAAb;AACE,2BAAoBT,IAApB,EAAoC;AAAA;;AAAhB;AAAoB,GAD1C,CAGE;;;AAHF;AAAA;AAAA,WAIE,yBAAgB/a,IAAhB,EAA6BkD,SAA7B,EAA6C;AAC3C,aAAO,KAAK6X,IAAL,CAAU1d,GAAV,WACFwd,yEADE,gDACuD3X,SADvD,cACoElD,IADpE,EAAP;AAGD,KARH,CAUE;;AAVF;AAAA;AAAA,WAWE,iCAAwBkD,SAAxB,EAAwC;AACtC,aAAO,KAAK6X,IAAL,CAAU1d,GAAV,WACFwd,yEADE,qCAC4C3X,SAD5C,EAAP;AAGD,KAfH,CAiBE;;AAjBF;AAAA;AAAA,WAkBE,yBAAgBrC,IAAhB,EAAuC;AACrC,aAAO,KAAKka,IAAL,CAAUE,IAAV,WAAkBJ,yEAAlB,+BAAiEha,IAAjE,CAAP;AACD,KApBH,CAwBE;;AAxBF;AAAA;AAAA,WAyBE,wBAAe/C,EAAf,EAAyB;AACvB,aAAO,KAAKid,IAAL,CAAUI,MAAV,WACFN,yEADE,sCAC6C/c,EAD7C,EAAP;AAGD;AA7BH;;AAAA;AAAA;;;mBAAa0d,iBAAetf,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAfsf;AAAeJ,WAAfI,eAAe;AAAAH,cAFd;;;;;;;;;;;;;;;;;;;;;;ACRd;;;AAMO,IAAMI,cAAb;AACE,0BAAoBV,IAApB,EAAoC;AAAA;;AAAhB;AAAoB;;AAD1C;AAAA;AAAA,WAEE,2BAAe;AACb,aAAO,KAAKA,IAAL,CAAU1d,GAAV,WACFwd,yEADE,8BAAP;AAGD;AANH;;AAAA;AAAA;;;mBAAaY,gBAAcvf,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAduf;AAAcL,WAAdK,cAAc;AAAAJ,cAFb;;;;;;;;;;;;;;;;;;;;;;ACLd;;;AAMO,IAAMK,uBAAb;AACE,mCAAoBX,IAApB,EAAoC;AAAA;;AAAhB;AAAoB;;AAD1C;AAAA;AAAA,WAGE,6BAAoB/a,IAApB,EAAgC;AAC9B,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WACFwd,yEADE,8CACqD7a,IADrD,EAAP;AAGD;AAPH;AAAA;AAAA,WASE,uCAA2B;AACzB,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WAAiBwd,yEAAjB,mCAAP;AACD;AAXH;AAAA;AAAA,WAaE,2BAAkBha,IAAlB,EAA8C;AAC5C,aAAO,KAAKka,IAAL,CAAUE,IAAV,WACFJ,yEADE,qCAELha,IAFK,CAAP;AAID;AAlBH;AAAA;AAAA,WAoBE,gCAAuBkE,UAAvB,EAAyC;AACvC,aAAO,KAAKgW,IAAL,CAAUI,MAAV,WACFN,yEADE,2CACkD9V,UADlD,EAAP;AAGD;AAxBH;;AAAA;AAAA;;;mBAAa2W,yBAAuBxf,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAvBwf;AAAuBN,WAAvBM,uBAAuB;AAAAL,cAFtB;;;;;;;;;;;;;;;;;;;;;;ACCd;;;AAKO,IAAMM,aAAb;AACE,yBAAoBZ,IAApB,EAAoC;AAAA;;AAAhB;AAAoB,GAD1C,CAGE;;;AAHF;AAAA;AAAA,WAIE,uBAAc/a,IAAd,EAA0B;AACxB,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WACFwd,yEADE,oCAC2C7a,IAD3C,EAAP;AAGD,KARH,CAUE;;AAVF;AAAA;AAAA,WAWE,iCAAqB;AACnB,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WACFwd,yEADE,0BAAP;AAGD,KAfH,CAiBE;AACA;AACA;AACA;AACA;AACA;AAEA;;AAxBF;AAAA;AAAA,WAyBE,uBAAcha,IAAd,EAAmC;AACjC,aAAO,KAAKka,IAAL,CAAUE,IAAV,WAAkBJ,yEAAlB,2BAA6Dha,IAA7D,CAAP;AACD,KA3BH,CA6BE;;AA7BF;AAAA;AAAA,WA8BE,sBAAa/C,EAAb,EAAuB;AACrB,aAAO,KAAKid,IAAL,CAAUI,MAAV,WAAoBN,yEAApB,iCAA8D/c,EAA9D,EAAP;AACD;AAhCH;;AAAA;AAAA;;;mBAAa6d,eAAazf,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAbyf;AAAaP,WAAbO,aAAa;AAAAN,cAFZ;;;;;;;;;;;;;;;;;;;;;;ACRd;;;AAKO,IAAMO,sBAAb;AAEE,kCAAoBb,IAApB,EAAoC;AAAA;;AAAhB;AAAqB,GAF3C,CAGE;;;AAHF;AAAA;AAAA,WAIE,gCAAuB/a,IAAvB,EAAoCkD,SAApC,EAAoD;AAClD,aAAO,KAAK6X,IAAL,CAAU1d,GAAV,WACFwd,yEADE,mEAC0E3X,SAD1E,cACuFlD,IADvF,EAAP;AAGD,KARH,CAYE;;AAZF;AAAA;AAAA,WAaE,gCAAuBa,IAAvB,EAA8C;AAC5C,aAAO,KAAKka,IAAL,CAAUE,IAAV,WAAkBJ,yEAAlB,+CAAiFha,IAAjF,CAAP;AACD,KAfH,CAkBE;;AAlBF;AAAA;AAAA,WAmBE,+BAAsBgb,iBAAtB,EAA+C;AAC7C,aAAO,KAAKd,IAAL,CAAUI,MAAV,WACFN,yEADE,qDAC4DgB,iBAD5D,EAAP;AAGD;AAvBH;;AAAA;AAAA;;;mBAAaD,wBAAsB1f,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAtB0f;AAAsBR,WAAtBQ,sBAAsB;AAAAP,cAFrB;;;;;;;;;;;;;;;;;;;;;;ACHd;;;AAKO,IAAM9Y,iBAAb;AACE,6BAAoBwY,IAApB,EAAoC;AAAA;;AAAhB;AAAoB;;AAD1C;AAAA;AAAA,WAEE,2BAAkB/a,IAAlB,EAA8B;AAC5B,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WACFwd,yEADE,4CACmD7a,IADnD,EAAP;AAGD;AANH;AAAA;AAAA,WAQE,kCAAsB;AACpB,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WAAiBwd,yEAAjB,8BAAP;AACD;AAVH;AAAA;AAAA,WAYE,uBAAcha,IAAd,EAAqC;AACnC,aAAO,KAAKka,IAAL,CAAUE,IAAV,WACFJ,yEADE,mCAELha,IAFK,CAAP;AAID;AAjBH;AAAA;AAAA,WAmBE,0BAAiBib,YAAjB,EAAqC;AACnC,aAAO,KAAKf,IAAL,CAAUI,MAAV,WACFN,yEADE,yCACgDiB,YADhD,EAAP;AAGD;AAvBH;;AAAA;AAAA;;;mBAAavZ,mBAAiBrG,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAjBqG;AAAiB6Y,WAAjB7Y,iBAAiB;AAAA8Y,cAFhB;;;;;;;;;;;;;;;;;;;;;;ACHd;;;AAMO,IAAMU,cAAb;AAEE,0BAAoBhB,IAApB,EAAoC;AAAA;;AAAhB;AAAqB,GAF3C,CAGG;;;AAHH;AAAA;AAAA,WAIG,uBAAc/a,IAAd,EAA0B;AACzB,aAAO,KAAK+a,IAAL,CAAU1d,GAAV,WACFwd,yEADE,oCAC2C7a,IAD3C,EAAP;AAGD,KARH,CAYE;;AAZF;AAAA;AAAA,WAaE,uBAAca,IAAd,EAAkC;AAChC,aAAO,KAAKka,IAAL,CAAUE,IAAV,WACFJ,yEADE,2BAELha,IAFK,CAAP;AAID,KAlBH,CAqBE;;AArBF;AAAA;AAAA,WAsBE,sBAAamb,QAAb,EAA6B;AAC3B,aAAO,KAAKjB,IAAL,CAAUI,MAAV,WACFN,yEADE,iCACwCmB,QADxC,EAAP;AAGD;AA1BH;;AAAA;AAAA;;;mBAAaD,gBAAc7f,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAd6f;AAAcX,WAAdW,cAAc;AAAAV,cAFb;;;;;;;;;;;;;;;;;;;;;;ACJd;;;AAKO,IAAMY,eAAb;AAEE,2BAAoBlB,IAApB,EAAoC;AAAA;;AAAhB;AAAqB,GAF3C,CAGI;;;AAHJ;AAAA;AAAA,WAII,wBAAe/a,IAAf,EAA4BtC,SAA5B,EAA4C;AAC1C,aAAO,KAAKqd,IAAL,CAAU1d,GAAV,WACFwd,yEADE,sCAC6C7a,IAD7C,EAAP;AAGD,KARL,CASQ;;AATR;AAAA;AAAA,WAUQ,gCAAuBtC,SAAvB,EAAuC;AACrC,aAAO,KAAKqd,IAAL,CAAU1d,GAAV,WACFwd,yEADE,2BAAP;AAGD,KAdT,CAkBI;;AAlBJ;AAAA;AAAA,WAmBI,wBAAeha,IAAf,EAA6B;AAC3B,aAAO,KAAKka,IAAL,CAAUE,IAAV,WAAkBJ,yEAAlB,6BAA+Dha,IAA/D,CAAP;AACD,KArBL,CAwBI;;AAxBJ;AAAA;AAAA,WAyBI,uBAAcqb,SAAd,EAA+B;AAC7B,aAAO,KAAKnB,IAAL,CAAUI,MAAV,WACFN,yEADE,mCAC0CqB,SAD1C,EAAP;AAGD;AA7BL;;AAAA;AAAA;;;mBAAaD,iBAAe/f,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAf+f;AAAeb,WAAfa,eAAe;AAAAZ,cAFd","sources":["./src/app/dashboard/pages/setup/general-setup/School/school-hierarchy/school-hierarchy.component.ts","./src/app/dashboard/pages/setup/general-setup/School/school-hierarchy/school-hierarchy.component.html","./src/app/dashboard/pages/setup/general-setup/School/school-type/school-type.component.ts","./src/app/dashboard/pages/setup/general-setup/School/school-type/school-type.component.html","./src/app/dashboard/pages/setup/general-setup/School/schools/schools.component.ts","./src/app/dashboard/pages/setup/general-setup/School/schools/schools.component.html","./src/app/dashboard/pages/setup/general-setup/appreciation-expressions/appreciation-expressions.component.ts","./src/app/dashboard/pages/setup/general-setup/appreciation-expressions/appreciation-expressions.component.html","./src/app/dashboard/pages/setup/general-setup/attach-type-user-types/attach-type-user-types.component.ts","./src/app/dashboard/pages/setup/general-setup/attach-type-user-types/attach-type-user-types.component.html","./src/app/dashboard/pages/setup/general-setup/attach-type/attach-type.component.ts","./src/app/dashboard/pages/setup/general-setup/attach-type/attach-type.component.html","./src/app/dashboard/pages/setup/general-setup/bus/bus-line-detail/bus-line-detail.component.ts","./src/app/dashboard/pages/setup/general-setup/bus/bus-line-detail/bus-line-detail.component.html","./src/app/dashboard/pages/setup/general-setup/bus/bus-line/bus-line.component.ts","./src/app/dashboard/pages/setup/general-setup/bus/bus-line/bus-line.component.html","./src/app/dashboard/pages/setup/general-setup/chronic-diseases/chronic-diseases.component.ts","./src/app/dashboard/pages/setup/general-setup/chronic-diseases/chronic-diseases.component.html","./src/app/dashboard/pages/setup/general-setup/classes/add-students-to-classroom/add-students-to-classroom.component.ts","./src/app/dashboard/pages/setup/general-setup/classes/add-students-to-classroom/add-students-to-classroom.component.html","./src/app/dashboard/pages/setup/general-setup/classes/buildings/buildings.component.ts","./src/app/dashboard/pages/setup/general-setup/classes/buildings/buildings.component.html","./src/app/dashboard/pages/setup/general-setup/classes/class-rooms/class-rooms.component.ts","./src/app/dashboard/pages/setup/general-setup/classes/class-rooms/class-rooms.component.html","./src/app/dashboard/pages/setup/general-setup/educational-group/educational-group.component.ts","./src/app/dashboard/pages/setup/general-setup/educational-group/educational-group.component.html","./src/app/dashboard/pages/setup/general-setup/general-setup-routing.module.ts","./src/app/dashboard/pages/setup/general-setup/general-setup.module.ts","./src/app/dashboard/pages/setup/general-setup/location/areas/areas.component.ts","./src/app/dashboard/pages/setup/general-setup/location/areas/areas.component.html","./src/app/dashboard/pages/setup/general-setup/location/cities/cities.component.ts","./src/app/dashboard/pages/setup/general-setup/location/cities/cities.component.html","./src/app/dashboard/pages/setup/general-setup/location/governorates/governorates.component.ts","./src/app/dashboard/pages/setup/general-setup/location/governorates/governorates.component.html","./src/app/dashboard/pages/setup/general-setup/location/stations/stations.component.ts","./src/app/dashboard/pages/setup/general-setup/location/stations/stations.component.html","./src/app/dashboard/pages/setup/general-setup/location/streets/streets.component.ts","./src/app/dashboard/pages/setup/general-setup/location/streets/streets.component.html","./src/app/dashboard/pages/setup/general-setup/stages/stages.component.ts","./src/app/dashboard/pages/setup/general-setup/stages/stages.component.html","./src/app/dashboard/pages/setup/general-setup/vaccinations/vaccinations.component.ts","./src/app/dashboard/pages/setup/general-setup/vaccinations/vaccinations.component.html","./src/app/dashboard/pages/setup/general-setup/vehicles/vehicles.component.ts","./src/app/dashboard/pages/setup/general-setup/vehicles/vehicles.component.html","./src/app/dashboard/services/setup/educational-setup/department.service.ts","./src/app/dashboard/services/setup/general-setup/bus-line-details.service.ts","./src/app/dashboard/services/setup/general-setup/classes/building.service.ts","./src/app/dashboard/services/setup/general-setup/country.service.ts","./src/app/dashboard/services/setup/general-setup/educational-group.service.ts","./src/app/dashboard/services/setup/general-setup/location/street.service.ts","./src/app/dashboard/services/setup/general-setup/school-hierarchy.service.ts","./src/app/dashboard/services/setup/general-setup/school-type.service.ts","./src/app/dashboard/services/setup/general-setup/schools.service.ts","./src/app/dashboard/services/setup/general-setup/vehicles.service.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\nimport { SchoolHierarchyService } from \"app/dashboard/services/setup/general-setup/school-hierarchy.service\";\r\nimport { EducationYearService } from \"app/dashboard/services/setup/educational-setup/education-year.service\";\r\nimport { DepartmentService } from \"app/dashboard/services/setup/educational-setup/department.service\";\r\nimport {\r\n  IAddEditHierarchy,\r\n  IHierarchy,\r\n  IHierarchyList,\r\n} from \"app/dashboard/models/setup/general-setup/school-hierarchy\";\r\nimport { IDepartment } from \"app/dashboard/models/setup/educational-setup/department\";\r\nimport { IEducationYearDropDown } from \"app/dashboard/models/setup/educational-setup/education-year\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n@Component({\r\n  selector: \"app-school-hierarchy\",\r\n  templateUrl: \"./school-hierarchy.component.html\",\r\n  styleUrls: [\"./school-hierarchy.component.scss\"],\r\n})\r\nexport class SchoolHierarchyComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  curLang: string;\r\n  displayColumns: string[] = [\"#\", \"year\", \"group\", \"department\", \"option\"];\r\n  dataSource: MatTableDataSource<IHierarchy>;\r\n  groupList: any;\r\n  departmentList: IDepartment[];\r\n\r\n  educationalYearList: IEducationYearDropDown[];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private schoolHierarchyService: SchoolHierarchyService,\r\n    private educationYearService: EducationYearService,\r\n    private departmentService: DepartmentService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      EduYearId: [\"\", Validators.required],\r\n      deptId: [\"\", Validators.required],\r\n      groupId: [\"\", Validators.required],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnSchoolHierarchy(1);\r\n    this.getAllDepartments();\r\n\r\n    this.getAllEducationalYear();\r\n\r\n    this.getAllGroups();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnSchoolHierarchy(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editSchoolHierarchy(SchoolHierarchyData: IHierarchy) {\r\n    this.myForm.patchValue(SchoolHierarchyData);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  // Start: Return Groups\r\n\r\n  getAllGroups() {}\r\n\r\n  // Start: Return All Departments\r\n\r\n  getAllDepartments() {\r\n    this.departmentService\r\n      .getDepartmentDropdown()\r\n      .subscribe((res: IDepartment[]) => {\r\n        this.departmentList = res;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Educational Years\r\n\r\n  getAllEducationalYear() {\r\n    this.educationYearService.getEducationalYearDropdown().subscribe((res) => {\r\n      this.educationalYearList = res.eduYearList;\r\n    });\r\n  }\r\n\r\n  // Start: Return All school Hierarchy\r\n  returnSchoolHierarchy(page: number) {\r\n    this.schoolHierarchyService\r\n      .getAllSchoolHierarchys(page,this.EduCompId)\r\n      .subscribe((res: IHierarchyList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.SchoolHierarchyList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let SchoolHierarchyData: IAddEditHierarchy = {\r\n      Id: this.FormCtrls.id.value,\r\n      eduYearID: this.FormCtrls.EduYearId.value,\r\n      groupID: this.FormCtrls.groupId.value,\r\n      eduDepartmentID: this.FormCtrls.deptId.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.schoolHierarchyService.addEditSchoolHierarchy(SchoolHierarchyData).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          if (SchoolHierarchyData.Id == 0) {\r\n            this.dataSource.data.unshift(res.school);\r\n            this.itemsCounts++;\r\n\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            let i = this.dataSource.data.findIndex(\r\n              (e) => e.Id == SchoolHierarchyData.Id\r\n            );\r\n            this.dataSource.data[i] = res.school;\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n          }\r\n          this.dataSource.paginator = this.paginator;\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n\r\n  }\r\n\r\n\r\n\r\n  openDeleateDialog(SchoolHierarchyData: IHierarchy): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? SchoolHierarchyData.group_ar_name\r\n              : SchoolHierarchyData.group_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteschoolHierarchy(SchoolHierarchyData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete School Hierarchy\r\n  deleteschoolHierarchy(SchoolHierarchyData: IHierarchy) {\r\n    this.schoolHierarchyService\r\n      .deleteSchoolHierarchy(SchoolHierarchyData.Id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex(\r\n            (e) => e == SchoolHierarchyData\r\n          );\r\n          this.dataSource.data.splice(index,1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          ( this.FormCtrls.id.value == 0\r\n            ? \"GeneralSetup.AddHierarchy\"\r\n            : \"GeneralSetup.EditEducationGroup\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.EducationalYear\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"EduYearId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of educationalYearList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.EduYearId.invalid &&\r\n                        (FormCtrls.EduYearId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.EduYearId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"GeneralSetup.Department\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"deptId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of departmentList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.deptId.invalid &&\r\n                        (FormCtrls.deptId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.deptId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Group\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of groupList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.groupId.invalid &&\r\n                        (FormCtrls.groupId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.groupId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{\r\n            ( this.FormCtrls.id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.Hierarchies\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- year Column -->\r\n            <ng-container matColumnDef=\"year\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- department Column -->\r\n            <ng-container matColumnDef=\"department\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"GeneralSetup.Department\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editSchoolHierarchy(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnSchoolHierarchy($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  ISchoolTypeBodyVM,\r\n  ISchoolTypeList,\r\n  ISchoolTypeVM,\r\n} from \"app/dashboard/models/setup/general-setup/school-type\";\r\nimport { SchoolTypeService } from \"app/dashboard/services/setup/general-setup/school-type.service\";\r\n\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n@Component({\r\n  selector: \"app-school-type\",\r\n  templateUrl: \"./school-type.component.html\",\r\n  styleUrls: [\"./school-type.component.scss\"],\r\n})\r\nexport class SchoolTypeComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\"#\", \"ar_name\", \"en_name\", \"option\"];\r\n  dataSource: MatTableDataSource<ISchoolTypeVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private SchoolTypeService: SchoolTypeService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnAllSchoolTypes(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllSchoolTypes(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All School Types\r\n  returnAllSchoolTypes(page: number) {\r\n    this.SchoolTypeService.getAllSchoolTypes(page).subscribe(\r\n      (res: ISchoolTypeList) => {\r\n        if (res) {\r\n          console.log(res);\r\n          this.dataSource = new MatTableDataSource(res.schoolType_list);\r\n          this.itemsCounts = res.countItems;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let stage: ISchoolTypeBodyVM = {\r\n      id: this.FormCtrls.id.value,\r\n      // countryId: this.FormCtrls.countryId.value,\r\n      eduCompId: this.EduCompId,\r\n      ar_name: this.FormCtrls.ar_name.value,\r\n      en_name: this.FormCtrls.en_name.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.SchoolTypeService.addSchoolType(stage).subscribe((res: any) => {\r\n        if (res) {\r\n          let returnData: ISchoolTypeVM = {\r\n            Id: res.school_type.id,\r\n            Ar_Name: res.school_type.ar_name,\r\n            En_Name: res.school_type.en_name,\r\n          };\r\n          if (stage.id == 0) {\r\n            this.dataSource.data.unshift(returnData);\r\n            this.itemsCounts++;\r\n            this.dataSource.sort = this.sort;\r\n          } else {\r\n            let index = this.dataSource.data.findIndex(\r\n              (e) => e.Id == returnData.Id\r\n            );\r\n            this.dataSource.data[index] = returnData;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n          this.toastr.success(\r\n            stage.id == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  editSchoolType(SchoolDataType: ISchoolTypeVM) {\r\n    // this.myForm.patchValue(SchoolDataType);\r\n    this.FormCtrls.id.setValue(SchoolDataType.Id);\r\n    this.FormCtrls.ar_name.setValue(SchoolDataType.Ar_Name);\r\n    this.FormCtrls.en_name.setValue(SchoolDataType.En_Name);\r\n  }\r\n\r\n  openDeleateDialog(SchoolDataType: ISchoolTypeVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? SchoolDataType.Ar_Name\r\n              : SchoolDataType.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteSchoolType(SchoolDataType);\r\n      });\r\n  }\r\n\r\n  // Start:Delete School Type\r\n  deleteSchoolType(SchoolData: ISchoolTypeVM) {\r\n    this.SchoolTypeService.deleteSchoolType(SchoolData.Id).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == SchoolData);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"GeneralSetup.AddSchoolType\"\r\n            : \"GeneralSetup.EditSchoolType\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.required ||\r\n                          FormCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.en_name.invalid &&\r\n                        (FormCtrls.en_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.en_name.errors?.required ||\r\n                          FormCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n          {{\r\n            (this.FormCtrls.id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"this.FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.AllSchoolType\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.En_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editSchoolType(ele)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllSchoolTypes($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { SchoolsService } from \"app/dashboard/services/setup/general-setup/schools.service\";\r\nimport {\r\n  IEductionalGroupVM,\r\n  IEduGroupList,\r\n} from \"app/dashboard/models/setup/general-setup/educational-group\";\r\nimport {\r\n  IAddEditSchool,\r\n  ISchool,\r\n  ISchoolList,\r\n} from \"app/dashboard/models/setup/general-setup/school\";\r\nimport { EducationalGroupService } from \"app/dashboard/services/setup/general-setup/educational-group.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-schools\",\r\n  templateUrl: \"./schools.component.html\",\r\n  styleUrls: [\"./schools.component.scss\"],\r\n})\r\nexport class SchoolsComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  educationGroupLIst: IEductionalGroupVM[];\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  EduGroupId:number;\r\n\r\n  curLang: string;\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"en_name\",\r\n\r\n    \"ar_name\",\r\n    \"EducationalGroupName\",\r\n    \"Address\",\r\n\r\n    \"Email\",\r\n    \"Mobile\",\r\n    \"Telephone\",\r\n    \"option\",\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<ISchool>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private eduGroupService: EducationalGroupService,\r\n    private schoolService: SchoolsService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      eduGroup_id: [\"\", Validators.required],\r\n      Address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, CustomeValidator.whiteSpace],\r\n      ],\r\n      Mobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n          Validators.minLength(11),\r\n          CustomeValidator.startsWith,\r\n          CustomeValidator.whiteSpace,\r\n        ],\r\n      ],\r\n      Telephone: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnSchools(1);\r\n    this.getAllEduGroup(1);\r\n    this.EduGroupId=this.FormCtrls.eduGroup_id.value;\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnSchools(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n\r\n  }\r\n\r\n  editSchool(schoolData: ISchool) {\r\n    this.myForm.patchValue(schoolData);\r\n    this.EduGroupId=this.FormCtrls.eduGroup_id.value;\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.FormCtrls.eduGroup_id.setValue(this.EduGroupId);\r\n\r\n    this.submitted = false;\r\n  }\r\n\r\n  // Start: Return All Educational group\r\n\r\n  getAllEduGroup(page: number) {\r\n    this.eduGroupService\r\n      .getEducationalGroup(page)\r\n      .subscribe((res: IEduGroupList) => {\r\n        if (res) {\r\n          this.educationGroupLIst = res.eduGroup_list;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Start: Return All Schools\r\n  returnSchools(page: number) {\r\n    this.schoolService.getAllSchools(page).subscribe((res: ISchoolList) => {\r\n      if (res) {\r\n        this.dataSource = new MatTableDataSource(res.schoolList);\r\n        this.itemsCounts = res.countItems;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let schoolData: IAddEditSchool = {\r\n      id: this.FormCtrls.id.value,\r\n      Ar_Name: this.FormCtrls.Ar_Name.value,\r\n      En_Name: this.FormCtrls.En_Name.value,\r\n      eduGroup_id: this.FormCtrls.eduGroup_id.value,\r\n      Address: this.FormCtrls.Address.value,\r\n      Mobile: this.FormCtrls.Mobile.value,\r\n      Telephone: this.FormCtrls.Telephone.value,\r\n      Email: this.FormCtrls.Email.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.schoolService.addEditSchool(schoolData).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          if (schoolData.id == 0) {\r\n            this.dataSource.data.unshift(res.school);\r\n            this.itemsCounts++;\r\n\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            let i = this.dataSource.data.findIndex(\r\n              (e) => e.id == schoolData.id\r\n            );\r\n            this.dataSource.data[i] = res.school;\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n          }\r\n          this.dataSource.paginator = this.paginator;\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(schoolData: ISchool): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? schoolData.Ar_Name : schoolData.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteSchool(schoolData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete School\r\n  deleteSchool(schoolData: any) {\r\n    this.schoolService.deleteSchool(schoolData.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let index = this.dataSource.data.findIndex((e) => e == schoolData);\r\n        this.dataSource.data.splice(index,1);\r\n        this.dataSource.paginator = this.paginator;\r\n\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.toastr.error(\"General.TosterErrorMessage\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"GeneralSetup.AddSchool\"\r\n            : \"GeneralSetup.EditSchool\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.En_Name.invalid &&\r\n                        (FormCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.En_Name.errors?.required ||\r\n                          FormCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Ar_Name.invalid &&\r\n                        (FormCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Ar_Name.errors?.required ||\r\n                          FormCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"GeneralSetup.EducationGroup\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"eduGroup_id\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of educationGroupLIst\"\r\n                        [value]=\"ele.eduGroup_id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.eduGroup_id.invalid &&\r\n                        (FormCtrls.eduGroup_id.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.eduGroup_id.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Address\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Address\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.Address?.invalid &&\r\n                        (FormCtrls.Address.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Address.errors?.required ||\r\n                          FormCtrls.Address.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.MobileNo\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Mobile\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Mobile.invalid &&\r\n                        (FormCtrls.Mobile.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Mobile.errors?.required ||\r\n                          FormCtrls.Mobile.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.Mobile.errors?.pattern\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.Mobile.errors?.minlength\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.HomeTelephone\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Telephone\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.Telephone.invalid &&\r\n                        (FormCtrls.Telephone.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Telephone.errors?.required ||\r\n                          FormCtrls.Telephone.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Email\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Email.invalid &&\r\n                        (FormCtrls.Email.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Email.errors?.required ||\r\n                          FormCtrls.Email.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.Email.errors?.email\">\r\n                        {{ \"labels.emailFormate\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value == 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.AllSchool\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.En_Name }}</td>\r\n            </ng-container>\r\n            <!-- arName Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Ar_Name }}</td>\r\n            </ng-container>\r\n            <!-- EducationalGroupName Column -->\r\n            <ng-container matColumnDef=\"EducationalGroupName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"GeneralSetup.EducationGroup\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  (curLang == \"ar\") == true\r\n                    ? ele.eduGroupArName\r\n                    : ele.eduGroupEnName\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"Email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"Mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.MobileNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Mobile }}</td>\r\n            </ng-container>\r\n            <!-- telephone Column -->\r\n            <ng-container matColumnDef=\"Telephone\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.HomeTelephone\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Telephone }}</td>\r\n            </ng-container>\r\n\r\n            <!-- address Column -->\r\n            <ng-container matColumnDef=\"Address\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Address\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Address }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Update'\"\r\n                        (click)=\"editSchool(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-edit-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-trash\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Hierarchy'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"../school-hierarchy/{{ ele.id }}\"\r\n                      >\r\n                        <i class=\"fa fa-sitemap\"></i>\r\n                        {{ \"GeneralSetup.Hierarchy\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnSchools($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IExpressioModel, IExpressionList } from \"app/dashboard/models/setup/general-setup/appreciation-expressions\";\r\n\r\nimport { AppreciationsService } from \"app/dashboard/services/setup/general-setup/appreciations.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-appreciation-expressions\",\r\n  templateUrl: \"./appreciation-expressions.component.html\",\r\n  styleUrls: [\"./appreciation-expressions.component.scss\"],\r\n})\r\nexport class AppreciationExpressionsComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  eduCompId: number;\r\n  itemsCounts: number = 0;\r\n  functionId: number;\r\n  //rowFunctions: IRowFunctionVM[];\r\n  rowFunctions = [{ functionName: \"Update\" }, { functionName: \"Delete\" }];\r\n  curLang: string;\r\n  displayColumns: string[] = [\"#\", \"ar_name\", \"en_name\", \"usingFor\", \"actions\"];\r\n  dataSource: MatTableDataSource<IExpressioModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private appreciationsService: AppreciationsService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.eduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      Id: 0,\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      ToTeacher: [true],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.gatExpressions(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.eduCompId = e.EduCompId;\r\n      this.gatExpressions(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All Stages\r\n  gatExpressions(page: number) {\r\n    this.appreciationsService\r\n      .gatExpressions(page)\r\n      .subscribe((res:IExpressionList) => {\r\n        if (res) {\r\n          console.log(res);\r\n          this.dataSource = new MatTableDataSource(res.appreciationExpression);\r\n          this.itemsCounts=res.itemsCount\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let expression: IExpressioModel = {\r\n      Id: this.FormCtrls.Id.value,\r\n      Ar_Name: this.FormCtrls.Ar_Name.value,\r\n      En_Name: this.FormCtrls.En_Name.value,\r\n      ToTeacher: this.FormCtrls.ToTeacher.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.appreciationsService\r\n        .addUpdateExpression(expression)\r\n        .subscribe((res: IExpressioModel) => {\r\n          console.log(expression.Id);\r\n          if (res) {\r\n            if (expression.Id == 0) {\r\n              this.dataSource.data?.unshift(res);\r\n              this.dataSource.sort = this.sort;\r\n\r\n            } else {\r\n              let index = this.dataSource.data.findIndex((e) => e.Id == res.Id);\r\n              this.dataSource.data[index] = res;\r\n              this.dataSource.sort = this.sort;\r\n            }\r\n            // this.returnAllStage(1);\r\n            this.toastr.success(\r\n              expression.Id == 0\r\n                ? \"General.AddSuccessfully\"\r\n                : \"General.UpdateSuccessfully\"\r\n            );\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  expressioToEdit(expressio: IExpressioModel) {\r\n    this.myForm.patchValue(expressio);\r\n    //this.FormCtrls.id.setValue(expressio.id);\r\n  }\r\n\r\n  openDeleateDialog(expressio: IExpressioModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? expressio.Ar_Name : expressio.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteExpression(expressio);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Stage\r\n  deleteExpression(expressio: IExpressioModel) {\r\n    this.appreciationsService\r\n      .deleteExpression(expressio.Id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == expressio);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.sort = this.sort;\r\n          this.clearForm();\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.Id.setValue(0);\r\n\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.Id.value == 0\r\n            ? \"GeneralSetup.AddExpressions\"\r\n            : \"GeneralSetup.UpdateExpressions\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Ar_Name.invalid &&\r\n                        (FormCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Ar_Name.errors?.required ||\r\n                          FormCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.En_Name.invalid &&\r\n                        (FormCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.En_Name.errors?.required ||\r\n                          FormCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-radio-group formControlName=\"ToTeacher\" class=\"row\">\r\n                    <div class=\"col-6\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        [checked]=\"this.FormCtrls.ToTeacher?.value == true\"\r\n                        >{{ \"GeneralSetup.TeacherExpressions\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-6\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        [checked]=\"this.FormCtrls.ToTeacher?.value == false\"\r\n                      >\r\n                        {{ \"GeneralSetup.ParentExpressions\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button class=\"btn btn-info bg-light-info\"\r\n        (click)=\"onSubmit()\">\r\n        <i *ngIf=\"this.FormCtrls.Id.value == 0 \" class=\"fa fa-plus-square\"></i>\r\n\r\n          {{\r\n            (this.FormCtrls.Id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"this.FormCtrls.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.AppreciationExpressions\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.En_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- usingFor Column -->\r\n            <ng-container matColumnDef=\"usingFor\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.usingFor\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  (ele.ToTeacher\r\n                    ? \"GeneralSetup.TeacherExpressions\"\r\n                    : \"GeneralSetup.ParentExpressions\"\r\n                  ) | translate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"expressioToEdit(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Update' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"gatExpressions($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { IUserTypeVM } from \"app/shared/models/general/general\";\r\nimport { AttachTypeService } from \"app/dashboard/services/setup/general-setup/attach-type.service\";\r\nimport { IAttachUserTypeAddEditVM } from \"app/dashboard/models/setup/general-setup/attach-type\";\r\n\r\n@Component({\r\n  selector: \"app-attach-type-user-types\",\r\n  templateUrl: \"./attach-type-user-types.component.html\",\r\n  styleUrls: [\"./attach-type-user-types.component.scss\"],\r\n})\r\nexport class AttachTypeUserTypesComponent implements OnInit {\r\n  attachTypeId: number = 0;\r\n  UserTypeList: IUserTypeVM[];\r\n  IsAdd: boolean = true;\r\n\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private GeneralServ: GeneralService,\r\n    private AttachTypeServ: AttachTypeService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    // get course id\r\n    route.paramMap.subscribe((params) => {\r\n      let id = Number(params.get(\"attachId\"));\r\n      if (id) {\r\n        this.attachTypeId = id;\r\n        this.AttachTypeServ.getAllUserTypesByAttachId(\r\n          this.attachTypeId\r\n        ).subscribe((res) => {\r\n          if (res) {\r\n            if (res.attachUserTypeList.length > 0) this.IsAdd = false;\r\n            this.userTypesCtrls.setValue(\r\n              res.attachUserTypeList.map((usertype) => usertype.userTypeId)\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      userTypeIds: [\"\", [Validators.required]],\r\n    });\r\n\r\n    this.getAllUserTypes();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllUserTypes();\r\n    });\r\n  }\r\n\r\n  get userTypesCtrls() {\r\n    return this.myForm.controls.userTypeIds;\r\n  }\r\n\r\n  getAllUserTypes() {\r\n    this.spinner.show();\r\n    this.GeneralServ.getAllUserTypes().subscribe((res) => {\r\n      if (res) this.UserTypeList = res.UserTypeList;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let userTypes: IAttachUserTypeAddEditVM = {\r\n        attach_type_id: this.attachTypeId,\r\n        userTypeIds: this.userTypesCtrls.value,\r\n      };\r\n      // console.log(\"UserTypes\", userTypes);\r\n\r\n      this.spinner.show();\r\n      this.IsAdd\r\n        ? this.adduserTypes(userTypes)\r\n        : this.updateuserTypes(userTypes, false);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add user type\r\n  adduserTypes(userTypes: IAttachUserTypeAddEditVM) {\r\n    this.AttachTypeServ.addUserTypes(userTypes).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.IsAdd = false;\r\n        // get user type ids from response after add\r\n        this.userTypesCtrls.setValue(\r\n          res.attachUserType.map((usertype) => usertype.userTypeId)\r\n        );\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // update user type\r\n  updateuserTypes(userTypes: IAttachUserTypeAddEditVM, isDelete: Boolean) {\r\n    this.AttachTypeServ.EditUserTypes(userTypes).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        // get user type ids from response after edit\r\n        this.userTypesCtrls.setValue(\r\n          res.attach_userType.map((usertype) => usertype.userTypeId)\r\n        );\r\n        if (isDelete) {\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n          this.IsAdd = true;\r\n          this.submitted = false;\r\n        } else this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(): void {\r\n    this.translate.get(\"GeneralSetup.AllUserTypes\").subscribe((text) => {\r\n      this.dialog\r\n        .open(DeleteDialogComponent, {\r\n          data: {\r\n            msg: text,\r\n          },\r\n        })\r\n        .afterClosed()\r\n        .subscribe((confirm) => {\r\n          if (confirm) this.deleteuserTypes();\r\n        });\r\n    });\r\n  }\r\n\r\n  // delete user type\r\n  deleteuserTypes() {\r\n    this.userTypesCtrls.setValue([]);\r\n    this.submitted = false;\r\n\r\n    let userTypes: IAttachUserTypeAddEditVM = {\r\n      attach_type_id: this.attachTypeId,\r\n      userTypeIds: this.userTypesCtrls.value,\r\n    };\r\n    // console.log(\"UserTypes\", userTypes);\r\n\r\n    this.spinner.show();\r\n    this.updateuserTypes(userTypes, true);\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add - edit Course Lecture -->\r\n      <mat-card-title>\r\n        {{\r\n          (IsAdd ? \"GeneralSetup.AddUserType\" : \"GeneralSetup.UpdateUserType\")\r\n            | translate\r\n        }}\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/general-setup/attach-type\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- User Types input -->\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"GeneralSetup.UserType\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"userTypeIds\" multiple>\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of UserTypeList\"\r\n                        [value]=\"ele.Id\"\r\n                      >\r\n                        {{ ele.userTypeName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        userTypesCtrls?.invalid &&\r\n                        (userTypesCtrls?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"userTypesCtrls.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add || edit button -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"IsAdd\"></i>\r\n          {{ (IsAdd ? \"General.Add\" : \"General.Update\") | translate }}\r\n        </button>\r\n\r\n        <!-- delete button -->\r\n        <button\r\n          *ngIf=\"!IsAdd\"\r\n          mat-raised-button\r\n          class=\"btn btn-danger bg-light-danger\"\r\n          (click)=\"openDeleteDialog()\"\r\n        >\r\n          {{ \"General.Delete\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  AttachTypeAddEditVM,\r\n  AttachTypeGetResponseVM,\r\n  AttachTypeGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/attach-type\";\r\nimport { AttachTypeService } from \"app/dashboard/services/setup/general-setup/attach-type.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-attach-type\",\r\n  templateUrl: \"./attach-type.component.html\",\r\n  styleUrls: [\"./attach-type.component.scss\"],\r\n})\r\nexport class AttachTypeComponent implements OnInit {\r\n  AttachTypes: AttachTypeGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"En_Name\", \"Ar_Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<AttachTypeGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private AttachTypeServ: AttachTypeService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllAttachTypes(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllAttachTypes(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all attachTypes\r\n  getAllAttachTypes(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.AttachTypeServ.getAllAttachTypes(page, this.EduCompId).subscribe(\r\n      (res: AttachTypeGetResponseVM) => {\r\n        if (res) {\r\n          this.AttachTypes = res.attachTypeList;\r\n          this.dataSource = new MatTableDataSource(this.AttachTypes);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n          console.log(\"AttachTypes: >> \", res);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let attachType = {} as AttachTypeAddEditVM;\r\n      attachType.Id = this.formCtrls.Id?.value;\r\n      attachType.EduCompId = this.EduCompId;\r\n      attachType.Ar_Name = this.formCtrls.Ar_Name?.value;\r\n      attachType.En_Name = this.formCtrls.En_Name?.value;\r\n      console.log(\"attachType\", attachType);\r\n      this.AttachTypeServ.addEditAttachType(attachType).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            if (attachType.Id == 0) {\r\n              this.dataSource.data.unshift(res.attach_type);\r\n              this.itemsCounts++;\r\n              this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex(\r\n                (e) => e.Id == this.formCtrls.Id.value\r\n              );\r\n              this.dataSource.data[i] = res.attach_type;\r\n\r\n              this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // get form values to update\r\n  toEditAttachType(attachType: AttachTypeGetVM) {\r\n    this.myForm.patchValue(attachType);\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(attachType: AttachTypeGetVM): void {\r\n    let attachTypeName =\r\n      this.currentLang == \"ar\" ? attachType.Ar_Name : attachType.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: attachTypeName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteAttachType(attachType);\r\n      });\r\n  }\r\n\r\n  // delete attachType\r\n  deleteAttachType(attachType: AttachTypeGetVM) {\r\n    this.spinner.show();\r\n    this.AttachTypeServ.deleteAttachType(attachType.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          // let i = this.dataSource.data.findIndex((e) => e == attachType);\r\n          // this.dataSource.data.splice(i, 1);\r\n          // this.itemsCounts--;\r\n          // this.dataSource.sort = this.sort;\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n\r\n          this.getAllAttachTypes(1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          if (attachType.Id == this.formCtrls.Id.value) this.clearForm();\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add AttachType -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"GeneralSetup.addAttachType\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit AttachType -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"GeneralSetup.updateAttachType\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.En_Name.invalid &&\r\n                        (formCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.En_Name.errors?.required ||\r\n                          formCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Ar_Name.invalid &&\r\n                        (formCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Ar_Name.errors?.required ||\r\n                          formCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add vaccinations -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit vaccinations -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.attachTypes\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let attachType\">\r\n                {{ attachType.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let attachType\">\r\n                {{ attachType.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let attachType\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        (click)=\"toEditAttachType(attachType)\"\r\n                      >\r\n                        <i class=\"fa fa-edit mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleteDialog(attachType)\"\r\n                      >\r\n                        <i class=\"ft-trash mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'UserTypes'\"\r\n                        routerLink=\"../attach-user-types/{{ attachType.Id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-users mr-2\"></i>\r\n                        {{ \"GeneralSetup.UserTypes\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllAttachTypes($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of attachTypes\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { EducationalGroupService } from \"app/dashboard/services/setup/general-setup/educational-group.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IAddEditBusLineDetails,\r\n  IBusLineDetails,\r\n  IBusLineDetailsList,\r\n} from \"app/dashboard/models/setup/general-setup/bus-line-details\";\r\nimport { BusLineDetailsService } from \"app/dashboard/services/setup/general-setup/bus-line-details.service\";\r\n\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { StreetService } from \"app/dashboard/services/setup/general-setup/location/street.service\";\r\nimport { StationService } from \"app/dashboard/services/setup/general-setup/location/station.service\";\r\n\r\n@Component({\r\n  selector: \"app-bus-line-detail\",\r\n  templateUrl: \"./bus-line-detail.component.html\",\r\n  styleUrls: [\"./bus-line-detail.component.scss\"],\r\n})\r\nexport class BusLineDetailComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  streetList: any;\r\n  stationList: any;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  busLineId: number;\r\n  //rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any = [{ functionName: \"Update\" }, { functionName: \"Delete\" }];\r\n  curLang: string;\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"time\",\r\n    \"street\",\r\n    \"station\",\r\n    \"order\",\r\n    \"notes\",\r\n    \"option\",\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<IBusLineDetails>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private busLineDetailsService: BusLineDetailsService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private streetService: StreetService,\r\n    private stationService: StationService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.busLineId = Number(param.get(\"id\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      busTime: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      streetId: [\"\", [Validators.required]],\r\n      stationId: [\r\n        {\r\n          value: [],\r\n          disabled: true,\r\n        },\r\n        [Validators.required],\r\n      ],\r\n      stationOrder: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      notes: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnAllBusLineDetails(1);\r\n    this.getAllStreets();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllBusLineDetails(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editBusLineDetail(BusLineData: IBusLineDetails) {\r\n    this.myForm.patchValue(BusLineData);\r\n    this.getAllStation();\r\n    this.FormCtrls.stationId.setValue(BusLineData.stationId);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.FormCtrls.id.setValue(0);\r\n    this.FormCtrls.busTime.setValue(\"\");\r\n\r\n    this.FormCtrls.stationOrder.setValue(\"\");\r\n    this.FormCtrls.notes.setValue(\"\");\r\n  }\r\n\r\n  // Start: Return All  Streets\r\n\r\n  getAllStreets() {\r\n    this.streetService.getAllStreetsDropDown().subscribe((res) => {\r\n      if (res) {\r\n        console.log(\"street\", res);\r\n\r\n        this.streetList = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Start: Return All Stations\r\n\r\n  getAllStation() {\r\n    this.FormCtrls.stationId.setValue(null);\r\n    if (this.FormCtrls.streetId?.value) {\r\n      this.stationService\r\n        .getAllStationsByStreetId(this.FormCtrls.streetId?.value)\r\n        .subscribe((res) => {\r\n          if (res) {\r\n            console.log(\"station\", res);\r\n            this.stationList = res;\r\n            this.FormCtrls.stationId.enable();\r\n          }\r\n        });\r\n    } else this.FormCtrls.stationId.disable();\r\n  }\r\n\r\n  // Start: Return All Bus Line Details\r\n  returnAllBusLineDetails(page: number) {\r\n    this.busLineDetailsService\r\n      .getBusLineDetails(page, this.EduCompId)\r\n      .subscribe((res: IBusLineDetailsList) => {\r\n        if (res) {\r\n          console.log(\"all\", res);\r\n          this.dataSource = new MatTableDataSource(res.busLineDetailsList);\r\n          this.itemsCounts = res.itemCount;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let busLineDetailData: IAddEditBusLineDetails = {\r\n      id: this.FormCtrls.id.value,\r\n      busTime: this.FormCtrls.busTime.value,\r\n      stationId: this.FormCtrls.stationId.value,\r\n      stationOrder: this.FormCtrls.stationOrder.value,\r\n      notes: this.FormCtrls.notes.value,\r\n      busLineId: this.busLineId,\r\n      eduCompId: this.EduCompId,\r\n    };\r\n    if (this.myForm.valid) {\r\n      console.log(busLineDetailData);\r\n      this.busLineDetailsService\r\n        .addEditBusLineDetail(busLineDetailData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.spinner.show();\r\n\r\n            if (busLineDetailData.id == 0) {\r\n              this.dataSource.data.unshift(res.BusLine_Details);\r\n              this.itemsCounts++;\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex(\r\n                (e) => e.id == busLineDetailData.id\r\n              );\r\n              this.dataSource.data[i] = res.BusLine_Details;\r\n              this.toastr.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(BusLineDetailData: IBusLineDetails): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: BusLineDetailData.street_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteBusLineDetail(BusLineDetailData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Bus Line Detail\r\n  deleteBusLineDetail(BusLineDetailData: IBusLineDetails) {\r\n    this.busLineDetailsService\r\n      .deleteBusLineDetail(BusLineDetailData.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          // let index = this.dataSource.data.findIndex(\r\n          //   (e) => e == BusLineDetailData\r\n          // );\r\n          // this.dataSource.data.splice(index, 1);\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n\r\n          this.returnAllBusLineDetails(1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          if (BusLineDetailData.id == this.FormCtrls.id.value) this.clearForm();\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"GeneralSetup.AddBusLineDetail\"\r\n            : \"GeneralSetup.EditBusLineDetail\"\r\n          ) | translate\r\n        }}\r\n\r\n        <a\r\n          class=\"btn btn-warning bg-light-warning float-right mb-3\"\r\n          routerLink=\"../../bus-line\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          <span>\r\n            {{ \"General.Back\" | translate }}\r\n          </span>\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Time\" | translate }} </mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"busTime\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Street\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select\r\n                      formControlName=\"streetId\"\r\n                      (selectionChange)=\"getAllStation()\"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of streetList\"\r\n                        [value]=\"ele.street_id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.streetId.invalid &&\r\n                        (FormCtrls.streetId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.streetId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Station\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"stationId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of stationList\"\r\n                        [value]=\"ele.stationId\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.stationId.invalid &&\r\n                        (FormCtrls.stationId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.stationId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Order\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"stationOrder\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.stationOrder.invalid &&\r\n                        (FormCtrls.stationOrder.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.stationOrder.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.stationOrder.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                    <textarea\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"notes\"\r\n                    ></textarea>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.notes.invalid &&\r\n                        (FormCtrls.notes.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.notes.errors?.required ||\r\n                          FormCtrls.notes.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value == 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.BusLineDetail\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- time Column -->\r\n            <ng-container matColumnDef=\"time\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Time\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.busTime | Time }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- street Column -->\r\n\r\n            <ng-container matColumnDef=\"street\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Street\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.street_ar_name : ele.street_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- station Column -->\r\n            <ng-container matColumnDef=\"station\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Station\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\" ? ele.station_ar_name : ele.station_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- order Column -->\r\n            <ng-container matColumnDef=\"order\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Order\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.stationOrder }}</td>\r\n            </ng-container>\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"notes\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.notes }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editBusLineDetail(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                  \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllBusLineDetails($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { EducationalGroupService } from \"app/dashboard/services/setup/general-setup/educational-group.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\nimport { BusLineService } from \"app/dashboard/services/setup/general-setup/bus-line.service\";\r\nimport { VehiclesService } from \"app/dashboard/services/setup/general-setup/vehicles.service\";\r\nimport {\r\n  IVehicle,\r\n  IVehicleList,\r\n} from \"app/dashboard/models/setup/general-setup/vehicles \";\r\nimport {\r\n  IAddEditBusLine,\r\n  IBusLine,\r\n  IBusLineList,\r\n} from \"app/dashboard/models/setup/general-setup/bus-line\";\r\n\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CityGetVM } from \"app/dashboard/models/setup/general-setup/location/city\";\r\nimport { GovernorateGetVM } from \"app/dashboard/models/setup/general-setup/location/governorate\";\r\nimport { GovernorateService } from \"app/dashboard/services/setup/general-setup/location/governorate.service\";\r\nimport { AreaService } from \"app/dashboard/services/setup/general-setup/location/area.service\";\r\nimport { CityService } from \"app/dashboard/services/setup/general-setup/location/city.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AreaAddEditVM } from \"app/dashboard/models/setup/general-setup/location/area\";\r\n\r\n@Component({\r\n  selector: \"app-bus-line\",\r\n  templateUrl: \"./bus-line.component.html\",\r\n  styleUrls: [\"./bus-line.component.scss\"],\r\n})\r\nexport class BusLineComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  vehicleList: IVehicle[];\r\n  //driverList: any;\r\n  cityList: CityGetVM[];\r\n  areaList: AreaAddEditVM[];\r\n  governorateList: GovernorateGetVM[];\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"en_name\",\r\n    \"ar_name\",\r\n\r\n    \"Governorate\",\r\n    \"City\",\r\n    \"Area\",\r\n\r\n    \"Vehicle\",\r\n    \"Driver\",\r\n    \"option\",\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<IBusLine>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private busLineService: BusLineService,\r\n    private vehiclesService: VehiclesService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n\r\n      governorateId: [\"\", [Validators.required]],\r\n      cityId: [\"\", [Validators.required]],\r\n      areaId: [\"\", [Validators.required]],\r\n      vehicleId: [\"\", [Validators.required]],\r\n      // driverId: [\"\", [Validators.required]],\r\n      driver_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnAllBusLines(1);\r\n    this.getAllVehicles();\r\n    //this.getAllDrivers(1);\r\n  }\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllBusLines(1);\r\n    });\r\n  }\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editBusLine(BusLineData: IBusLine) {\r\n    this.myForm.patchValue(BusLineData);\r\n    this.FormCtrls.governorateId.setValue(BusLineData.govId);\r\n    this.FormCtrls.cityId.setValue(BusLineData.cityId);\r\n\r\n    this.FormCtrls.areaId.setValue(BusLineData.areaId);\r\n    this.FormCtrls.vehicleId.setValue(BusLineData.vehicleId);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.FormCtrls.ar_name.reset();\r\n    this.FormCtrls.en_name.reset();\r\n    this.FormCtrls.driver_name.reset();\r\n\r\n    this.FormCtrls.id.setValue(0);\r\n  }\r\n  // Start: Return All Drivers\r\n\r\n  // getAllDrivers(page: number) {}\r\n\r\n  // Start: Return All Vehicles\r\n\r\n  getAllVehicles() {\r\n    this.vehiclesService\r\n      .getAllVehiclesDropdown(this.EduCompId)\r\n      .subscribe((res: IVehicle[]) => {\r\n        if (res) {\r\n          this.vehicleList = res;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Start: Return All Bus Line\r\n  returnAllBusLines(page: number) {\r\n    this.busLineService\r\n      .getBusLines(page, this.EduCompId)\r\n      .subscribe((res: IBusLineList) => {\r\n        if (res) {\r\n          console.log(\"res\", res);\r\n\r\n          this.dataSource = new MatTableDataSource(res.BusLine_list);\r\n          console.log(\"all\", res.BusLine_list);\r\n          this.itemsCounts = res.itemCount;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let busLineData = {} as IAddEditBusLine;\r\n    busLineData.id = this.FormCtrls.id.value;\r\n    busLineData.ar_name = this.FormCtrls.ar_name.value;\r\n    busLineData.en_name = this.FormCtrls.en_name.value;\r\n    busLineData.eduCompId = this.EduCompId;\r\n    busLineData.areaId = this.FormCtrls.areaId.value;\r\n    busLineData.vehicleId = this.FormCtrls.vehicleId.value;\r\n    busLineData.driver_name = this.FormCtrls.driver_name.value;\r\n    console.log(\"add\", busLineData);\r\n    if (this.myForm.valid) {\r\n      this.busLineService.addEditBusLine(busLineData).subscribe((res: any) => {\r\n        this.spinner.show();\r\n\r\n        if (res.returnValue == 1) {\r\n          if (busLineData.id == 0) {\r\n            this.dataSource.data.unshift(res.BusLine);\r\n            this.itemsCounts++;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            let i = this.dataSource.data.findIndex(\r\n              (e) => e.id == busLineData.id\r\n            );\r\n            this.dataSource.data[i] = res.BusLine;\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n          }\r\n\r\n          this.dataSource.sort = this.sort;\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(BusLineData: IBusLine): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? BusLineData.ar_name : BusLineData.en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteBusLine(BusLineData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Bus Line\r\n  deleteBusLine(BusLineData: IBusLine) {\r\n    this.busLineService.deleteBusLine(BusLineData.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        // let index = this.dataSource.data.findIndex((e) => e == BusLineData);\r\n        // this.dataSource.data.splice(index, 1);\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n\r\n        this.returnAllBusLines(1);\r\n        this.dataSource.paginator = this.paginator;\r\n\r\n        if (BusLineData.id == this.FormCtrls.id.value) this.clearForm();\r\n      } else {\r\n        this.toastr.error(\"General.TosterErrorMessage\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"GeneralSetup.AddBusLine\"\r\n            : \"GeneralSetup.EditBusLine\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.en_name.invalid &&\r\n                        (FormCtrls.en_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.en_name.errors?.required ||\r\n                          FormCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.required ||\r\n                          FormCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-governorate-dropdown\r\n                    [control]=\"FormCtrls.governorateId\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </app-governorate-dropdown>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-city-by-governrate-dropdown\r\n                    [cityControl]=\"FormCtrls.cityId\"\r\n                    [goverControl]=\"FormCtrls.governorateId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-city-by-governrate-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-area-by-city-dropdown\r\n                    [cityControl]=\"FormCtrls.cityId\"\r\n                    [areaControl]=\"FormCtrls.areaId\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </app-area-by-city-dropdown>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Vehicle\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"vehicleId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of vehicleList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ ele.VehiclePlate }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.vehicleId.invalid &&\r\n                        (FormCtrls.vehicleId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.vehicleId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Driver\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"driver_name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.driver_name.invalid &&\r\n                        (FormCtrls.driver_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.en_name.errors?.required ||\r\n                          FormCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value == 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"GeneralSetup.BusLine\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.ar_name : ele.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.en_name : ele.en_name }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- Governorate Column -->\r\n\r\n            <ng-container matColumnDef=\"Governorate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Governorate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.gov_ar_name : ele.gov_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- City Column -->\r\n            <ng-container matColumnDef=\"City\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.City\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.city_ar_name : ele.city_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Area Column -->\r\n            <ng-container matColumnDef=\"Area\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Area\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.area_ar_name : ele.area_en_name }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- Vehicle Column -->\r\n            <ng-container matColumnDef=\"Vehicle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Vehicle\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.vehicle_PlateNumber }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Driver Column -->\r\n            <ng-container matColumnDef=\"Driver\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Driver\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.driver_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editBusLine(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 m-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 m-2\"></i>\r\n                  </a>\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Details'\"\r\n                    routerLink=\"../bus-line-details/{{ ele.id }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-external-link font-medium-3 m-2\"\r\n                      aria-hidden=\"true\"\r\n                    ></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllBusLines($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  ChronicDiseaseAddEditVM,\r\n  ChronicDiseaseGetResponseVM,\r\n  ChronicDiseaseGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/chronic-disease\";\r\nimport { ChronicDiseaseService } from \"app/dashboard/services/setup/general-setup/chronic-disease.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-chronic-diseases\",\r\n  templateUrl: \"./chronic-diseases.component.html\",\r\n  styleUrls: [\"./chronic-diseases.component.scss\"],\r\n})\r\nexport class ChronicDiseasesComponent implements OnInit, AfterViewInit {\r\n  ChronicDiseases: ChronicDiseaseGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n   rowFunctions: IRowFunctionVM[];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\",  \"En_Name\",\"Ar_Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<ChronicDiseaseGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private ChronicDiseaseServ: ChronicDiseaseService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n   this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllChronicDiseases(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllChronicDiseases(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  // get all chronicDiseases\r\n  getAllChronicDiseases(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.ChronicDiseaseServ.getAllChronicDiseases(page,this.EduCompId).subscribe((res:ChronicDiseaseGetResponseVM) => {\r\n      if (res) {\r\n        this.ChronicDiseases = res.ChronicDiseaseList;\r\n        this.dataSource = new MatTableDataSource(this.ChronicDiseases);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"ChronicDiseases: >> \", res.ChronicDiseaseList);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let chronicDisease = {} as ChronicDiseaseAddEditVM;\r\n      chronicDisease.Id= this.formCtrls.Id?.value;\r\n      chronicDisease.EduCompId = this.EduCompId;\r\n      chronicDisease.Ar_Name = this.formCtrls.Ar_Name?.value;\r\n      chronicDisease.En_Name = this.formCtrls.En_Name?.value;\r\n      console.log(\"chronicDisease\", chronicDisease);\r\n      this.ChronicDiseaseServ.addEditChronicDisease(chronicDisease).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            if (chronicDisease.Id==0) {\r\n              this.dataSource.data.unshift(res.chronic_deisease);\r\n              this.itemsCounts++;\r\n              this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex(\r\n                (e) => e.Id == this.formCtrls.Id.value\r\n              );\r\n\r\n              this.dataSource.data[i] = res.chronic_deisease;\r\n\r\n              this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n            this.clearForm();\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n\r\n\r\n  // get form values to update\r\n  toEditChronicDisease(chronicDisease: ChronicDiseaseGetVM) {\r\n    this.myForm.patchValue(chronicDisease);\r\n  }\r\n\r\n\r\n\r\n  // delete dialog\r\n  openDeleteDialog(chronicDisease: ChronicDiseaseGetVM): void {\r\n    let chronicDiseaseName =\r\n      this.currentLang == \"ar\"\r\n        ? chronicDisease.Ar_Name\r\n        : chronicDisease.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: chronicDiseaseName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteChronicDisease(chronicDisease);\r\n      });\r\n  }\r\n\r\n  // delete chronicDisease\r\n  deleteChronicDisease(chronicDisease: ChronicDiseaseGetVM) {\r\n    this.spinner.show();\r\n    this.ChronicDiseaseServ.deleteChronicDisease(chronicDisease.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == chronicDisease);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add ChronicDisease -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"GeneralSetup.addChronicDisease\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit ChronicDisease -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"GeneralSetup.updateChronicDisease\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.En_Name.invalid &&\r\n                        (formCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.En_Name.errors?.required ||\r\n                          formCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Ar_Name.invalid &&\r\n                        (formCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Ar_Name.errors?.required ||\r\n                          formCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add vaccinations -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n        <!-- edit vaccinations -->\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.chronicDiseases\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let chronicDisease\">\r\n                {{ chronicDisease.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let chronicDisease\">\r\n                {{ chronicDisease.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let chronicDisease\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditChronicDisease(chronicDisease)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(chronicDisease)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllChronicDiseases($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of chronicDiseases\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { StudentService } from \"app/dashboard/services/setup/student/student.service\";\r\nimport {\r\n  IAddStudentToClassVM,\r\n  IStudentClassGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/classes/class-room\";\r\nimport { EducationYearService } from \"app/dashboard/services/setup/educational-setup/education-year.service\";\r\nimport { IEducationYearDropDown } from \"app/dashboard/models/setup/educational-setup/education-year\";\r\nimport { ClassRoomService } from \"app/dashboard/services/setup/general-setup/classes/class-room.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-students-to-classroom\",\r\n  templateUrl: \"./add-students-to-classroom.component.html\",\r\n  styleUrls: [\"./add-students-to-classroom.component.scss\"],\r\n})\r\nexport class AddStudentsToClassroomComponent implements OnInit {\r\n  StudentsList: IStudentClassGetVM[] = [];\r\n  StudentsInClassroom: IStudentClassGetVM[] = [];\r\n  classroomId: number = 0;\r\n  currentEduYear: IEducationYearDropDown;\r\n  itemsCounts: number;\r\n\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"student_name\",\r\n    \"student_email\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IStudentClassGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private StudentServ: StudentService,\r\n    private EducationYearServ: EducationYearService,\r\n    private ClassRoomServ: ClassRoomService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      eduYear: [\r\n        {\r\n          value: this.currentEduYear?.id || 0,\r\n          disabled: true,\r\n        },\r\n        [Validators.required],\r\n      ],\r\n      studentIds: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // get current class id\r\n    this.route.paramMap.subscribe((params) => {\r\n      let id = Number(params.get(\"classId\"));\r\n      if (id) {\r\n        this.classroomId = id;\r\n        this.EducationYearServ.getEduYearWithCurrentClassroomId(\r\n          this.classroomId\r\n        ).subscribe((res) => {\r\n          if (res) {\r\n            this.currentEduYear = res;\r\n            this.formCtrls?.eduYear?.setValue(this.currentEduYear.id);\r\n            this.getAllStudentsInEduYear(this.currentEduYear.id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.getAllStudentsInClassRoom(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudentsInClassRoom(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm?.controls;\r\n  }\r\n\r\n  getAllStudentsInEduYear(eduYearId: number) {\r\n    this.formCtrls.studentIds.reset();\r\n    this.StudentsList = [];\r\n    if (eduYearId) {\r\n      this.spinner.show();\r\n      this.StudentServ.GetAllStudentsByEduYear(eduYearId).subscribe((res) => {\r\n        if (res) {\r\n          this.StudentsList = res;\r\n          this.formCtrls.studentIds.setValue(res.map((std) => std.id));\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  // get all students\r\n  getAllStudentsInClassRoom(page: number) {\r\n    this.spinner.show();\r\n    this.StudentServ.GetAllStudentsByClassroomIdByPage(\r\n      this.classroomId,\r\n      page\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.StudentsInClassroom = res.classRoomList;\r\n        this.dataSource = new MatTableDataSource(this.StudentsInClassroom);\r\n        this.itemsCounts = res.countItems;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let students: IAddStudentToClassVM = {\r\n        // eduCompId: this.EduCompId,\r\n        studentIds: this.formCtrls.studentIds.value,\r\n      };\r\n      console.log(\"student\", students);\r\n\r\n      this.spinner.show();\r\n      this.ClassRoomServ.assignStudentsToClassRoom(students).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n            // return list of new added students\r\n            this.getAllStudentsInClassRoom(1);\r\n            // this.dataSource.data.unshift(res.Students);\r\n            // this.itemsCounts++;\r\n            // this.dataSource.sort = this.sort;\r\n            // // this.clearForm();\r\n          } else this.ToastrMsg.error(res?.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(student: IStudentClassGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: student.student_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStudent(student);\r\n      });\r\n  }\r\n\r\n  // delete student\r\n  deleteStudent(student: IStudentClassGetVM) {\r\n    this.spinner.show();\r\n    this.ClassRoomServ.deleteStudentFromClassRoom(student.id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == student);\r\n          this.dataSource.data.splice(i, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          // change array of students ids in form\r\n\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // clearForm() {\r\n  //   this.myForm.reset();\r\n  //   this.formCtrls.id.setValue(0);\r\n  //   this.submitted = false;\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Student -->\r\n      <mat-card-title>\r\n        {{ \"StudentSetup.addStudents\" | translate }}\r\n\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../../classrooms\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- educational year input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-educational-year-dropdown\r\n                    [control]=\"formCtrls?.eduYear\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-educational-year-dropdown>\r\n                </div>\r\n\r\n                <!-- students input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Students\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"studentIds\" multiple>\r\n                      <!-- <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option> -->\r\n                      <mat-option\r\n                        *ngFor=\"let Student of StudentsList\"\r\n                        [value]=\"Student.id\"\r\n                      >\r\n                        {{ Student.student_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.studentIds.invalid &&\r\n                        (formCtrls?.studentIds.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.studentIds.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add Students -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- reset -->\r\n        <!-- <button mat-raised-button class=\"btn btn-warning\" (click)=\"clearForm()\">\r\n          {{ \"General.Reset\" | translate }}\r\n        </button> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Students\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"student_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                {{ student.student_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- governorate column -->\r\n            <ng-container matColumnDef=\"student_email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                {{ student?.student_email }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let student\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(student)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStudentsInClassRoom($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of students\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  BuildingAddEditVM,\r\n  BuildingGetResponseVM,\r\n  BuildingGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/classes/building\";\r\nimport { BuildingService } from \"app/dashboard/services/setup/general-setup/classes/building.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-buildings\",\r\n  templateUrl: \"./buildings.component.html\",\r\n  styleUrls: [\"./buildings.component.scss\"],\r\n})\r\nexport class BuildingsComponent implements OnInit, AfterViewInit {\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\nrowFunctions: IRowFunctionVM[];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"En_Name\",\r\n    \"Ar_Name\",\r\n\r\n    \"FloorCount\",\r\n    \"Description\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<BuildingGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private BuildingServ: BuildingService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBuildings(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      floorCount: [\r\n        \"\",\r\n        [Validators.required, Validators.min(1), Validators.max(100)],\r\n      ],\r\n      description: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllBuildings(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  // get all buildings\r\n  getAllBuildings(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.BuildingServ.getAllBuildings(page, this.EduCompId).subscribe(\r\n      (res: BuildingGetResponseVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.buildingList);\r\n          this.itemsCounts = res.countItems;\r\n          console.log(\"Buildings: >> \", res);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let building = {} as BuildingAddEditVM;\r\n      building.Id = this.formCtrls.Id?.value;\r\n      building.eduCompId = this.EduCompId;\r\n      building.ar_name = this.formCtrls.ar_name?.value;\r\n      building.en_name = this.formCtrls.en_name?.value;\r\n      building.floorCount = this.formCtrls.floorCount?.value;\r\n      building.description = this.formCtrls.description?.value;\r\n      console.log(\"building\", building);\r\n\r\n      this.BuildingServ.addEditBuilding(building).subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.spinner.show();\r\n\r\n          if (building.Id == 0) {\r\n            this.dataSource.data.unshift(res.building);\r\n            this.itemsCounts++;\r\n            this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            let i = this.dataSource.data.findIndex((e) => e.Id == building.Id);\r\n            this.dataSource.data[i] = res.building;\r\n\r\n            this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n          }\r\n          this.dataSource.paginator = this.paginator;\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // get form values to update\r\n  toEditBuilding(building: BuildingGetVM) {\r\n    this.myForm.patchValue(building);\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(building: BuildingGetVM): void {\r\n    let buildingName =\r\n      this.currentLang == \"ar\" ? building.ar_name : building.en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: buildingName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteBuilding(building);\r\n      });\r\n  }\r\n\r\n  // delete building\r\n  deleteBuilding(building: BuildingGetVM) {\r\n    this.spinner.show();\r\n    this.BuildingServ.deleteBuilding(building.Id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == building);\r\n        this.dataSource.data.splice(i, 1);\r\n        this.dataSource.paginator = this.paginator;\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Building -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"classes.addBuilding\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Building -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"classes.updateBuilding\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!--  english name input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.en_name.invalid &&\r\n                        (formCtrls.en_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.en_name.errors?.required ||\r\n                          formCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.ar_name.invalid &&\r\n                        (formCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.ar_name.errors?.required ||\r\n                          formCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- floor count input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"classes.FloorCount\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"floorCount\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.floorCount.invalid &&\r\n                        (formCtrls?.floorCount.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.floorCount.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.floorCount.errors?.min\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"classes.floorNoMinErrorMsg\" | translate }}\r\n                        {{ formCtrls?.floorCount.errors?.min.min }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.floorCount.errors?.max\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"classes.floorNoMaxErrorMsg\" | translate }}\r\n                        {{ formCtrls?.floorCount.errors?.max.max }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- description input -->\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Description\" | translate }}\r\n                    </mat-label>\r\n                    <textarea matInput formControlName=\"description\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add Building -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n        <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n         <!-- edit Building -->\r\n\r\n         <button\r\n         mat-raised-button\r\n         class=\"btn btn-info bg-light-info\"\r\n         *ngIf=\"formCtrls?.Id.value\"\r\n         (click)=\"onSubmit()\"\r\n       >\r\n         {{ \"General.Update\" | translate }}\r\n       </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"classes.buildings\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let building\">\r\n                {{ building.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let building\">\r\n                {{ building.en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- floor count column -->\r\n            <ng-container matColumnDef=\"FloorCount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"classes.FloorCount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let building\">\r\n                {{ building.floorCount }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- description column -->\r\n            <ng-container matColumnDef=\"Description\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Description\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let building\">\r\n                {{ building.description }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let building\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditBuilding(building)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(building)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllBuildings($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of buildings\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  ClassRoomGetVM,\r\n  ClassRoomAddEditVM,\r\n  ClassRoomGetResponseVM,\r\n} from \"app/dashboard/models/setup/general-setup/classes/class-room\";\r\nimport { BuildingService } from \"app/dashboard/services/setup/general-setup/classes/building.service\";\r\nimport { ClassRoomService } from \"app/dashboard/services/setup/general-setup/classes/class-room.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport {\r\n  BuildingGetDropDownVM,\r\n  BuildingGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/classes/building\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-class-rooms\",\r\n  templateUrl: \"./class-rooms.component.html\",\r\n  styleUrls: [\"./class-rooms.component.scss\"],\r\n})\r\nexport class ClassRoomsComponent implements OnInit, AfterViewInit {\r\n  ClassRooms: ClassRoomGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n  buildings: BuildingGetDropDownVM[] = [];\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"RoomCode\",\r\n    \"Building\",\r\n    \"MaxStudentsNo\",\r\n    \"FloorNumber\",\r\n    \"Description\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<ClassRoomGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private ClassRoomServ: ClassRoomService,\r\n    private BuildingServ: BuildingService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllClassRooms(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      roomCode: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      buildingId: [\"\", [Validators.required]],\r\n      maxStudentNo: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          /* Validators.min(1), Validators.max(100) */ CustomeValidator.minusNum,\r\n        ],\r\n      ],\r\n      floorNo: [\r\n        \"\",\r\n        [Validators.required, Validators.min(1), Validators.max(100)],\r\n      ],\r\n      description: [\"\"],\r\n    });\r\n\r\n    // get buildings\r\n    this.getAllBuildings();\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      // custom sort\r\n      this.dataSource.sortingDataAccessor = (item, property) => {\r\n        switch (property) {\r\n          case \"Building\":\r\n            return this.currentLang == \"ar\"\r\n              ? item.building_ar_name\r\n              : item.building_en_name\r\n          default:\r\n            return item[property];\r\n        }\r\n      };\r\n      this.dataSource.sort = this.sort;\r\n\r\n      // custom filter\r\n      this.dataSource.filterPredicate = (data: ClassRoomGetVM, filter) => {\r\n        return this.currentLang == \"ar\"\r\n          ? data.building_ar_name.toLocaleLowerCase().indexOf(filter) != -1\r\n          : data.building_en_name.toLocaleLowerCase().indexOf(filter) != -1;\r\n      };\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllClassRooms(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  // get buildings >> dropDown\r\n  getAllBuildings() {\r\n    this.BuildingServ.getAllBuildingsDropDown(this.EduCompId).subscribe(\r\n      (res) => {\r\n        if (res) {this.buildings = res;console.log(res)}\r\n      }\r\n    );\r\n  }\r\n\r\n  // to change max no. of floors in each building\r\n  onSelectBuilding() {\r\n    let id = this.formCtrls?.BuildingId.value;\r\n    if (id) {\r\n      let maxNoFloor = this.buildings.find((b) => b.Id == id).floorCount;\r\n      this.formCtrls?.FloorNumber.setValidators([\r\n        Validators.required,\r\n        Validators.min(1),\r\n        Validators.max(maxNoFloor),\r\n      ]);\r\n    } else {\r\n      this.formCtrls?.floorNo.setValidators([\r\n        Validators.required,\r\n        Validators.min(1),\r\n        Validators.max(100),\r\n      ]);\r\n    }\r\n    this.formCtrls?.floorNo.updateValueAndValidity();\r\n  }\r\n\r\n  // get all classRooms\r\n  getAllClassRooms(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.ClassRoomServ.getAllClassRooms(page, this.EduCompId).subscribe(\r\n      (res:ClassRoomGetResponseVM) => {\r\n        if (res) {\r\n\r\n          this.dataSource = new MatTableDataSource(res.classRoomList);\r\n          this.itemsCounts = res.countItems;\r\n          console.log(\"ClassRooms: >> \", res);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let classRoom = {} as ClassRoomAddEditVM;\r\n      classRoom.id= this.formCtrls.id?.value;\r\n      classRoom.eduCompId = this.EduCompId;\r\n      classRoom.roomCode = this.formCtrls.roomCode?.value;\r\n      classRoom.buildingId = this.formCtrls.buildingId?.value;\r\n      classRoom.maxStudentNo = this.formCtrls.maxStudentNo?.value;\r\n      classRoom.floorNo = this.formCtrls.floorNo?.value;\r\n      classRoom.description = this.formCtrls.description?.value;\r\n      console.log(\"classRoom\", classRoom);\r\n      this.ClassRoomServ.addUpdateClassRoom(classRoom).subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.spinner.show();\r\n\r\n          if (classRoom.id==0) {\r\n            this.dataSource.data.unshift(res.class_room);\r\n            this.itemsCounts++;\r\n            this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n          }else{\r\n            let i = this.dataSource.data.findIndex(\r\n              (e) => e.id == classRoom.id\r\n            );\r\n            this.dataSource.data[i] = res.class_room;\r\n\r\n            this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n          }\r\n          this.dataSource.paginator = this.paginator;\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add classRoom\r\n\r\n  // get form values to update\r\n  toEditClassRoom(classRoom: ClassRoomGetVM) {\r\n    this.myForm.patchValue(classRoom);\r\n    this.formCtrls.buildingId?.setValue(classRoom.buildingId);\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(classRoom: ClassRoomGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: classRoom.roomCode,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteClassRoom(classRoom);\r\n      });\r\n  }\r\n\r\n  // delete classRoom\r\n  deleteClassRoom(classRoom: ClassRoomGetVM) {\r\n    this.spinner.show();\r\n    this.ClassRoomServ.deleteClassRoom(classRoom.id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == classRoom);\r\n        this.dataSource.data.splice(i, 1);\r\n        this.dataSource.paginator = this.paginator;\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add ClassRoom -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.id.value\">\r\n        {{ \"classes.addClassRoom\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit ClassRoom -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value\">\r\n        {{ \"classes.updateClassRoom\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- room code input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"classes.RoomCode\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"roomCode\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.roomCode.invalid &&\r\n                        (formCtrls?.roomCode.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.roomCode.errors?.required ||\r\n                          formCtrls?.roomCode.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- building input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"classes.building\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"buildingId\"\r\n                      (selectionChange)=\"onSelectBuilding()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let building of buildings\"\r\n                        [value]=\"building.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? building.ar_name\r\n                            : building.en_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.buildingId.invalid &&\r\n                        (formCtrls?.buildingId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.buildingId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- max students No. input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"classes.MaxStudentsNo\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"maxStudentNo\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.maxStudentNo.invalid &&\r\n                        (formCtrls?.maxStudentNo.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.maxStudentNo.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.maxStudentNo.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                      <!-- <span *ngIf=\"formCtrls?.MaxStudentsNo.errors?.min\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"classes.studentNoMinErrorMsg\" | translate }}\r\n                        {{ formCtrls?.MaxStudentsNo.errors?.min.min }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.MaxStudentsNo.errors?.max\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"classes.studentNoMaxErrorMsg\" | translate }}\r\n                        {{ formCtrls?.MaxStudentsNo.errors?.max.max }}\r\n                      </span> -->\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- floor number input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"classes.FloorNumber\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"floorNo\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.floorNo.invalid &&\r\n                        (formCtrls?.floorNo.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.floorNo.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.floorNo.errors?.min\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"classes.floorNoMinErrorMsg\" | translate }}\r\n                        {{ formCtrls?.floorNo.errors?.min.min }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.floorNo.errors?.max\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"classes.floorBuildingNoMaxErrorMsg\" | translate }}\r\n                        {{ formCtrls?.floorNo.errors?.max.max }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- description input -->\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Description\" | translate }}\r\n                    </mat-label>\r\n                    <textarea matInput formControlName=\"description\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add Building -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"!formCtrls?.id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n        <!-- edit Building -->\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"formCtrls?.id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          *ngIf=\"formCtrls?.id.value\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"classes.classRooms\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- room code column -->\r\n            <ng-container matColumnDef=\"RoomCode\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"classes.RoomCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let classRoom\">\r\n                {{ classRoom.roomCode }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- building column -->\r\n            <ng-container matColumnDef=\"Building\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"classes.building\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let classRoom\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? classRoom.building_ar_name\r\n                    : classRoom.building_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- max students No. column -->\r\n            <ng-container matColumnDef=\"MaxStudentsNo\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"classes.MaxStudentsNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let classRoom\">\r\n                {{ classRoom.maxStudentNo }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- floor number column -->\r\n            <ng-container matColumnDef=\"FloorNumber\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"classes.FloorNumber\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let classRoom\">\r\n                {{ classRoom.floorNo }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- description column -->\r\n            <ng-container matColumnDef=\"Description\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Description\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let classRoom\">\r\n                {{ classRoom.description }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let classRoom\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditClassRoom(classRoom)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(classRoom)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <!-- <a\r\n                    *ngIf=\"fun.functionName === 'Students'\"\r\n                    routerLink=\"../add-students/{{ classRoom.id }}\"\r\n                    [queryParams]=\"{\r\n                      functionId: functionId\r\n                    }\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"{{ 'StudentSetup.addStudents' | translate }}\"\r\n                  >\r\n                    <i class=\"fa fa-users font-medium-3 mr-2\"></i>\r\n                  </a> -->\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"7\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllClassRooms($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of classRooms\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { EducationalGroupService } from \"app/dashboard/services/setup/general-setup/educational-group.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IBodyEductionalGroupVM,\r\n  IEductionalGroupVM,\r\n  IEduGroupList,\r\n} from \"app/dashboard/models/setup/general-setup/educational-group\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-educational-group\",\r\n  templateUrl: \"./educational-group.component.html\",\r\n  styleUrls: [\"./educational-group.component.scss\"],\r\n})\r\nexport class EducationalGroupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  curLang: string;\r\n\r\n  displayColumns: string[] = [\"#\", \"ar_name\", \"en_name\", \"option\"];\r\n  dataSource: MatTableDataSource<IEductionalGroupVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private EduGroupService: EducationalGroupService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnEduGroup(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnEduGroup(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editEduGroup(eduGroup: IEductionalGroupVM) {\r\n    this.myForm.patchValue(eduGroup);\r\n    this.FormCtrls.id.setValue(eduGroup.eduGroup_id);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All Edu Groups\r\n  returnEduGroup(page: number) {\r\n    this.EduGroupService.getEducationalGroup(page).subscribe(\r\n      (res: IEduGroupList) => {\r\n        if (res) {\r\n          console.log(res);\r\n          this.dataSource = new MatTableDataSource(res.eduGroup_list);\r\n          this.itemsCounts = res.countItems;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let eduGroup: IBodyEductionalGroupVM = {\r\n      id: this.FormCtrls.id.value,\r\n      eduCompId: this.EduCompId,\r\n      ar_name: this.FormCtrls.ar_name.value,\r\n      en_name: this.FormCtrls.en_name.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.EduGroupService.addupdateEduGroup(eduGroup).subscribe((res: any) => {\r\n        if (res) {\r\n          res.educationGroup.eduGroup_id = res.educationGroup.id;\r\n          if (eduGroup.id == 0) {\r\n            this.dataSource.data.unshift(res.educationGroup);\r\n            this.itemsCounts++;\r\n            this.dataSource.sort = this.sort;\r\n          } else {\r\n            let index = this.dataSource.data.findIndex(\r\n              (e) => e.eduGroup_id == res.educationGroup.eduGroup_id\r\n            );\r\n            this.dataSource.data[index] = res.educationGroup;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n          this.toastr.success(\r\n            eduGroup.id == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(EduGroup: IEductionalGroupVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? EduGroup.ar_name : EduGroup.en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteEduGroup(EduGroup);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Edu Group\r\n  deleteEduGroup(EduGroup: IEductionalGroupVM) {\r\n    console.log(EduGroup);\r\n    this.EduGroupService.deleteEducationalGroup(EduGroup.eduGroup_id).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == EduGroup);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"GeneralSetup.AddEducationGroup\"\r\n            : \"GeneralSetup.EditEducationGroup\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.required ||\r\n                          FormCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.en_name.invalid &&\r\n                        (FormCtrls.en_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.en_name.errors?.required ||\r\n                          FormCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-raised-button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n          {{\r\n            (this.FormCtrls.id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"this.FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.EducationGroup\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editEduGroup(ele)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnEduGroup($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AddStudentsToClassroomComponent } from \"./classes/add-students-to-classroom/add-students-to-classroom.component\";\r\nimport { StagesComponent } from \"./stages/stages.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { EducationalGroupComponent } from \"./educational-group/educational-group.component\";\r\nimport { SchoolTypeComponent } from \"./School/school-type/school-type.component\";\r\nimport { SchoolsComponent } from \"./School/schools/schools.component\";\r\nimport { SchoolHierarchyComponent } from \"./School/school-hierarchy/school-hierarchy.component\";\r\nimport { VehiclesComponent } from \"./vehicles/vehicles.component\";\r\nimport { BusLineComponent } from \"./bus/bus-line/bus-line.component\";\r\nimport { BusLineDetailComponent } from \"./bus/bus-line-detail/bus-line-detail.component\";\r\n\r\nimport { CitiesComponent } from \"./location/cities/cities.component\";\r\nimport { AreasComponent } from \"./location/areas/areas.component\";\r\nimport { StreetsComponent } from \"./location/streets/streets.component\";\r\nimport { StationsComponent } from \"./location/stations/stations.component\";\r\nimport { GovernoratesComponent } from \"./location/governorates/governorates.component\";\r\nimport { BuildingsComponent } from \"app/dashboard/pages/setup/general-setup/classes/buildings/buildings.component\";\r\nimport { ClassRoomsComponent } from \"app/dashboard/pages/setup/general-setup/classes/class-rooms/class-rooms.component\";\r\nimport { VaccinationsComponent } from \"./vaccinations/vaccinations.component\";\r\nimport { AttachTypeComponent } from \"./attach-type/attach-type.component\";\r\nimport { ChronicDiseasesComponent } from \"./chronic-diseases/chronic-diseases.component\";\r\nimport { AppreciationExpressionsComponent } from \"./appreciation-expressions/appreciation-expressions.component\";\r\nimport { AttachTypeUserTypesComponent } from \"./attach-type-user-types/attach-type-user-types.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"stages\",\r\n    component: StagesComponent,\r\n  },\r\n  {\r\n    path: \"educational-group\",\r\n    component: EducationalGroupComponent,\r\n  },\r\n  {\r\n    path: \"school-type\",\r\n    component: SchoolTypeComponent,\r\n  },\r\n  {\r\n    path: \"schools\",\r\n    component: SchoolsComponent,\r\n  },\r\n  {\r\n    path: \"school-hierarchy/:id\",\r\n    component: SchoolHierarchyComponent,\r\n  },\r\n  {\r\n    path: \"vehicles\",\r\n    component: VehiclesComponent,\r\n  },\r\n  {\r\n    path: \"bus-line\",\r\n    component: BusLineComponent,\r\n  },\r\n  {\r\n    path: \"bus-line-details/:id\",\r\n    component: BusLineDetailComponent,\r\n  },\r\n\r\n  {\r\n    path: \"location\",\r\n    // component: null,\r\n    children: [\r\n      {\r\n        path: \"governorates\",\r\n        component: GovernoratesComponent,\r\n      },\r\n      {\r\n        path: \"cities\",\r\n        component: CitiesComponent,\r\n      },\r\n      {\r\n        path: \"areas\",\r\n        component: AreasComponent,\r\n      },\r\n      {\r\n        path: \"streets\",\r\n        component: StreetsComponent,\r\n      },\r\n      {\r\n        path: \"stations\",\r\n        component: StationsComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"classes\",\r\n    // component: null,\r\n    children: [\r\n      {\r\n        path: \"buildings\",\r\n        component: BuildingsComponent,\r\n      },\r\n      {\r\n        path: \"classrooms\",\r\n        component: ClassRoomsComponent,\r\n      },\r\n      {\r\n        path: \"add-students/:classId\",\r\n        component: AddStudentsToClassroomComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"vaccination\",\r\n    component: VaccinationsComponent,\r\n  },\r\n  {\r\n    path: \"attach-type\",\r\n    component: AttachTypeComponent,\r\n  },\r\n  {\r\n    path: \"attach-user-types/:attachId\",\r\n    component: AttachTypeUserTypesComponent,\r\n  },\r\n  {\r\n    path: \"chronic-disease\",\r\n    component: ChronicDiseasesComponent,\r\n  },\r\n  {\r\n    path: \"appreciation-expressions\",\r\n    component: AppreciationExpressionsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GeneralSetupRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { GeneralSetupRoutingModule } from \"./general-setup-routing.module\";\r\nimport { StagesComponent } from \"./stages/stages.component\";\r\nimport { EducationalGroupComponent } from \"./educational-group/educational-group.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { SchoolTypeComponent } from \"./School/school-type/school-type.component\";\r\nimport { SchoolsComponent } from \"./School/schools/schools.component\";\r\nimport { SchoolHierarchyComponent } from \"./School/school-hierarchy/school-hierarchy.component\";\r\nimport { VehiclesComponent } from \"./vehicles/vehicles.component\";\r\nimport { BusLineComponent } from \"./bus/bus-line/bus-line.component\";\r\nimport { BusLineDetailComponent } from \"./bus/bus-line-detail/bus-line-detail.component\";\r\n\r\nimport { GovernoratesComponent } from \"./location/governorates/governorates.component\";\r\nimport { CitiesComponent } from \"./location/cities/cities.component\";\r\nimport { AreasComponent } from \"./location/areas/areas.component\";\r\nimport { StreetsComponent } from \"./location/streets/streets.component\";\r\nimport { StationsComponent } from \"./location/stations/stations.component\";\r\nimport { ClassRoomsComponent } from \"./classes/class-rooms/class-rooms.component\";\r\nimport { BuildingsComponent } from \"./classes/buildings/buildings.component\";\r\nimport { ChronicDiseasesComponent } from \"./chronic-diseases/chronic-diseases.component\";\r\nimport { VaccinationsComponent } from \"./vaccinations/vaccinations.component\";\r\nimport { AttachTypeComponent } from \"./attach-type/attach-type.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { AppreciationExpressionsComponent } from \"./appreciation-expressions/appreciation-expressions.component\";\r\nimport { AddStudentsToClassroomComponent } from './classes/add-students-to-classroom/add-students-to-classroom.component';\r\nimport { AttachTypeUserTypesComponent } from './attach-type-user-types/attach-type-user-types.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EducationalGroupComponent,\r\n    SchoolTypeComponent,\r\n    SchoolsComponent,\r\n    SchoolHierarchyComponent,\r\n    VehiclesComponent,\r\n    BusLineComponent,\r\n    BusLineDetailComponent,\r\n    StagesComponent,\r\n    GovernoratesComponent,\r\n    CitiesComponent,\r\n    AreasComponent,\r\n    StreetsComponent,\r\n    StationsComponent,\r\n    ClassRoomsComponent,\r\n    BuildingsComponent,\r\n    ChronicDiseasesComponent,\r\n    VaccinationsComponent,\r\n    AttachTypeComponent,\r\n    AppreciationExpressionsComponent,\r\n    AddStudentsToClassroomComponent,\r\n    AttachTypeUserTypesComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    GeneralSetupRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class GeneralSetupModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  AreaGetVM,\r\n  AreaAddEditVM,\r\n} from \"app/dashboard/models/setup/general-setup/location/area\";\r\nimport { AreaService } from \"app/dashboard/services/setup/general-setup/location/area.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-areas\",\r\n  templateUrl: \"./areas.component.html\",\r\n  styleUrls: [\"./areas.component.scss\"],\r\n})\r\nexport class AreasComponent implements OnInit {\r\n  Areas: AreaGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  // curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"en_name\",\r\n    \"Governorate\",\r\n    \"City\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<AreaGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private AreaServ: AreaService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      govId: [\"\", [Validators.required]],\r\n      cityId: [\r\n        {\r\n          value: [],\r\n          disabled: true,\r\n        },\r\n        [Validators.required],\r\n      ],\r\n    });\r\n\r\n    this.getAllAreas(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllAreas(1);\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Governorate\":\r\n          return this.currentLang == \"ar\" ? item.gov_ar_name : item.gov_en_name;\r\n        case \"City\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.city_ar_name\r\n            : item.city_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all areas\r\n  getAllAreas(page: number) {\r\n    // this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.AreaServ.getAllAreas(page).subscribe((res) => {\r\n      if (res) {\r\n        this.Areas = res.AreaList;\r\n        this.dataSource = new MatTableDataSource(this.Areas);\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditArea(area: AreaGetVM) {\r\n    this.myForm.patchValue(area);\r\n    this.formCtrls.id?.setValue(area.areaId);\r\n    this.formCtrls.cityId?.setValue(area.cityId);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let area: AreaAddEditVM = {\r\n        // eduCompId: this.EduCompId,\r\n        id: this.formCtrls.id?.value,\r\n        ar_name: this.formCtrls.ar_name?.value,\r\n        en_name: this.formCtrls.en_name?.value,\r\n        cityId: this.formCtrls.cityId?.value,\r\n      };\r\n      console.log(\"area\", area);\r\n\r\n      this.spinner.show();\r\n      this.AreaServ.addEditArea(area).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          // let returnObject = res.Area;\r\n          // let returnData: AreaGetVM = {\r\n          //   areaId: returnObject.id,\r\n          //   ar_name: returnObject.ar_name,\r\n          //   en_name: returnObject.en_name,\r\n          //   cityId: returnObject.cityId,\r\n          //   city_ar_name: returnObject.city_ar_name,\r\n          //   city_en_name: returnObject.city_en_name,\r\n          //   govId: returnObject.govId,\r\n          //   gov_ar_name: returnObject.gov_ar_name,\r\n          //   gov_en_name: returnObject.gov_en_name,\r\n          // };\r\n          res.Area.areaId = res.Area.id;\r\n\r\n          area.id == 0 ? this.addArea(res.Area) : this.updateArea(res.Area);\r\n          this.dataSource.sort = this.sort;\r\n          // this.clearForm();\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add area\r\n  addArea(res: AreaGetVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n    this.formCtrls.ar_name.reset();\r\n    this.formCtrls.en_name.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  // update area\r\n  updateArea(res: AreaGetVM) {\r\n    let i = this.dataSource.data.findIndex((e) => e.areaId == res.areaId);\r\n    this.dataSource.data[i] = res;\r\n    this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n\r\n    this.clearForm();\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(area: AreaGetVM): void {\r\n    let Name = this.currentLang == \"ar\" ? area.ar_name : area.en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteArea(area);\r\n      });\r\n  }\r\n\r\n  // delete area\r\n  deleteArea(area: AreaGetVM) {\r\n    this.spinner.show();\r\n    this.AreaServ.deleteArea(area.areaId).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == area);\r\n        this.dataSource.data.splice(i, 1);\r\n        // this.itemsCounts--;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        if (area.areaId == this.formCtrls.id.value) this.clearForm();\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Area -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value == 0\">\r\n        {{ \"location.addArea\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Area -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value > 0\">\r\n        {{ \"location.updateArea\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.ar_name.invalid &&\r\n                        (formCtrls?.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.ar_name.errors?.required ||\r\n                          formCtrls?.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.en_name.invalid &&\r\n                        (formCtrls?.en_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.en_name.errors?.required ||\r\n                          formCtrls?.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- governorate input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-governorate-dropdown\r\n                    [control]=\"formCtrls.govId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-governorate-dropdown>\r\n                </div>\r\n\r\n                <!-- city input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-city-by-governrate-dropdown\r\n                    [cityControl]=\"formCtrls.cityId\"\r\n                    [goverControl]=\"formCtrls.govId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-city-by-governrate-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add - edit Area -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset -->\r\n        <!-- *ngIf=\"formCtrls.id.value > 0\" -->\r\n        <button mat-raised-button class=\"btn btn-warning\" (click)=\"clearForm()\">\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"location.areas\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let area\">\r\n                {{ area.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let area\">\r\n                {{ area.en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- governorate column -->\r\n            <ng-container matColumnDef=\"Governorate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.governorate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let area\">\r\n                {{\r\n                  currentLang == \"ar\" ? area?.gov_ar_name : area?.gov_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- city column -->\r\n            <ng-container matColumnDef=\"City\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.city\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let area\">\r\n                {{\r\n                  currentLang == \"ar\" ? area?.city_ar_name : area?.city_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let area\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditArea(area)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(area)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllAreas($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of areas\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  CityGetVM,\r\n  CityAddEditVM,\r\n} from \"app/dashboard/models/setup/general-setup/location/city\";\r\nimport { CityService } from \"app/dashboard/services/setup/general-setup/location/city.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-cities\",\r\n  templateUrl: \"./cities.component.html\",\r\n  styleUrls: [\"./cities.component.scss\"],\r\n})\r\nexport class CitiesComponent implements OnInit {\r\n  Cities: CityGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  // curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"en_name\",\r\n    \"Governorate\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<CityGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private CityServ: CityService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      govId: [\"\", [Validators.required]],\r\n    });\r\n\r\n    this.getAllCities(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllCities(1);\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Governorate\":\r\n          return this.currentLang == \"ar\" ? item.gov_ar_name : item.gov_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all cities\r\n  getAllCities(page: number) {\r\n    // this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.CityServ.getAllCities(page).subscribe((res) => {\r\n      if (res) {\r\n        this.Cities = res.CitiesList;\r\n        this.dataSource = new MatTableDataSource(this.Cities);\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditCity(city: CityGetVM) {\r\n    this.myForm.patchValue(city);\r\n    this.formCtrls.govId?.setValue(city.gov_id);\r\n    this.formCtrls.id?.setValue(city.City_id);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let city: CityAddEditVM = {\r\n        // eduCompId: this.EduCompId,\r\n        id: this.formCtrls.id.value,\r\n        ar_name: this.formCtrls.ar_name?.value,\r\n        en_name: this.formCtrls.en_name?.value,\r\n        govId: this.formCtrls.govId?.value,\r\n      };\r\n      console.log(\"city\", city);\r\n\r\n      this.CityServ.addEditCity(city).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let returnObject = res.City;\r\n          let returnData: CityGetVM = {\r\n            City_id: returnObject.id,\r\n            ar_name: returnObject.ar_name,\r\n            en_name: returnObject.en_name,\r\n            gov_id: returnObject.govId,\r\n            gov_ar_name: returnObject.gov_ar_name,\r\n            gov_en_name: returnObject.gov_en_name,\r\n          };\r\n\r\n          city.id == 0 ? this.addCity(returnData) : this.updateCity(returnData);\r\n          this.dataSource.sort = this.sort;\r\n          // this.clearForm();\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add city\r\n  addCity(res: CityGetVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n    this.formCtrls.ar_name.reset();\r\n    this.formCtrls.en_name.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  // update city\r\n  updateCity(res: CityGetVM) {\r\n    let i = this.dataSource.data.findIndex((e) => e.City_id == res.City_id);\r\n    this.dataSource.data[i] = res;\r\n    this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n\r\n    this.clearForm();\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(city: CityGetVM): void {\r\n    let cityName = this.currentLang == \"ar\" ? city.ar_name : city.en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: cityName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteCity(city);\r\n      });\r\n  }\r\n\r\n  // delete city\r\n  deleteCity(city: CityGetVM) {\r\n    this.spinner.show();\r\n    this.CityServ.deleteCity(city.City_id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == city);\r\n        this.dataSource.data.splice(i, 1);\r\n        // this.itemsCounts--;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        if (city.City_id == this.formCtrls.id.value) this.clearForm();\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add City -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value == 0\">\r\n        {{ \"location.addCity\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit City -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value > 0\">\r\n        {{ \"location.updateCity\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.ar_name.invalid &&\r\n                        (formCtrls?.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.ar_name.errors?.required ||\r\n                          formCtrls?.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.en_name.invalid &&\r\n                        (formCtrls?.en_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.en_name.errors?.required ||\r\n                          formCtrls?.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- governorate input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-governorate-dropdown\r\n                    [control]=\"formCtrls.govId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-governorate-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add - edit City -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset -->\r\n        <!-- *ngIf=\"formCtrls.id.value > 0\" -->\r\n        <button mat-raised-button class=\"btn btn-warning\" (click)=\"clearForm()\">\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"location.cities\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let city\">\r\n                {{ city.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let city\">\r\n                {{ city.en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- governorate column -->\r\n            <ng-container matColumnDef=\"Governorate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.governorate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let city\">\r\n                {{\r\n                  currentLang == \"ar\" ? city?.gov_ar_name : city?.gov_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let city\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditCity(city)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(city)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllCities($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of cities\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  GovernorateAddEditVM,\r\n  GovernorateGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/location/governorate\";\r\nimport { GovernorateService } from \"app/dashboard/services/setup/general-setup/location/governorate.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-governorates\",\r\n  templateUrl: \"./governorates.component.html\",\r\n  styleUrls: [\"./governorates.component.scss\"],\r\n})\r\nexport class GovernoratesComponent implements OnInit {\r\n  Governorates: GovernorateGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  // curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"Ar_Name\", \"En_Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<GovernorateGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private GovernorateServ: GovernorateService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllGovernorates(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllGovernorates(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all governorates\r\n  getAllGovernorates(page: number) {\r\n    // this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.GovernorateServ.getAllGovernorates(page).subscribe((res) => {\r\n      if (res) {\r\n        this.Governorates = res.governorateList;\r\n        this.dataSource = new MatTableDataSource(this.Governorates);\r\n        this.itemsCounts = res.countItems;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditGovernorate(governorate: GovernorateGetVM) {\r\n    // this.myForm.patchValue(governorate);\r\n    this.formCtrls.id.setValue(governorate.Id);\r\n    this.formCtrls.ar_name.setValue(governorate.Ar_Name);\r\n    this.formCtrls.en_name.setValue(governorate.En_Name);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let governorate: GovernorateAddEditVM = {\r\n        // eduCompId : this.EduCompId,\r\n        id: this.formCtrls.id.value,\r\n        ar_name: this.formCtrls.ar_name?.value,\r\n        en_name: this.formCtrls.en_name?.value,\r\n      };\r\n      console.log(\"governorate\", governorate);\r\n\r\n      this.spinner.show();\r\n      this.GovernorateServ.addEditGovernorate(governorate).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n            let returnObject = res.Governorate;\r\n            let returnData: GovernorateGetVM = {\r\n              Id: returnObject.id,\r\n              Ar_Name: returnObject.ar_name,\r\n              En_Name: returnObject.en_name,\r\n            };\r\n\r\n            governorate.id == 0\r\n              ? this.addGovernorate(returnData)\r\n              : this.updateGovernorate(returnData);\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n          } else this.ToastrMsg.error(res?.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add governorate\r\n  addGovernorate(res: GovernorateGetVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // update governorate\r\n  updateGovernorate(res: GovernorateGetVM) {\r\n    let i = this.dataSource.data.findIndex((e) => e.Id == res.Id);\r\n    this.dataSource.data[i] = res;\r\n    this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(governorate: GovernorateGetVM): void {\r\n    let governorateName =\r\n      this.currentLang == \"ar\" ? governorate.Ar_Name : governorate.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: governorateName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteGovernorate(governorate);\r\n      });\r\n  }\r\n\r\n  // delete governorate\r\n  deleteGovernorate(governorate: GovernorateGetVM) {\r\n    this.spinner.show();\r\n    this.GovernorateServ.deleteGovernorate(governorate.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == governorate);\r\n          this.dataSource.data.splice(i, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (governorate.Id == this.formCtrls.id.value) this.clearForm();\r\n\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Governorate -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.id.value\">\r\n        {{ \"location.addGovernorate\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Governorate -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value\">\r\n        {{ \"location.updateGovernorate\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.ar_name.invalid &&\r\n                        (formCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.ar_name.errors?.required ||\r\n                          formCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.en_name.invalid &&\r\n                        (formCtrls.en_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.en_name.errors?.required ||\r\n                          formCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add - edit Governorate -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset -->\r\n        <button\r\n          *ngIf=\"formCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"location.governorates\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let governorate\">\r\n                {{ governorate.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let governorate\">\r\n                {{ governorate.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let governorate\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditGovernorate(governorate)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(governorate)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllGovernorates($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of governorates\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  StationGetVM,\r\n  StationAddEditVM,\r\n} from \"app/dashboard/models/setup/general-setup/location/station\";\r\nimport { StreetGetVM } from \"app/dashboard/models/setup/general-setup/location/street\";\r\nimport { StationService } from \"app/dashboard/services/setup/general-setup/location/station.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { StreetService } from \"app/dashboard/services/setup/general-setup/location/street.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-stations\",\r\n  templateUrl: \"./stations.component.html\",\r\n  styleUrls: [\"./stations.component.scss\"],\r\n})\r\nexport class StationsComponent implements OnInit {\r\n  Stations: StationGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  // curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n  streets: StreetGetVM[] = [];\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"en_name\",\r\n    \"Street\",\r\n    \"Longitude\",\r\n    \"Latitude\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<StationGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private StationServ: StationService,\r\n    private StreetServ: StreetService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      streetId: [\"\", [Validators.required]],\r\n      Longitude: [\r\n        \"\",\r\n        [Validators.required, Validators.min(-180), Validators.max(180)],\r\n      ],\r\n      Latitude: [\r\n        \"\",\r\n        [Validators.required, Validators.min(-90), Validators.max(90)],\r\n      ],\r\n    });\r\n\r\n    this.getAllStations(1);\r\n    this.getAllStreets();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStations(1);\r\n      this.getAllStreets();\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Street\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.street_ar_name\r\n            : item.street_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get governorates >> dropDown\r\n  getAllStreets() {\r\n    this.spinner.show();\r\n    this.StreetServ.getAllStreetsDropDown().subscribe((res) => {\r\n      if (res) this.streets = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get all stations\r\n  getAllStations(page: number) {\r\n    // this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.StationServ.getAllStations(page).subscribe((res) => {\r\n      if (res) {\r\n        this.Stations = res.stationList;\r\n        this.dataSource = new MatTableDataSource(this.Stations);\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditStation(station: StationGetVM) {\r\n    this.myForm.patchValue(station);\r\n    this.formCtrls.id?.setValue(station.stationId);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let station: StationAddEditVM = {\r\n        eduCompId: this.EduCompId,\r\n        id: this.formCtrls.id?.value,\r\n        ar_name: this.formCtrls.ar_name?.value,\r\n        en_name: this.formCtrls.en_name?.value,\r\n        streetId: this.formCtrls.streetId?.value,\r\n        Longitude: this.formCtrls.Longitude?.value,\r\n        Latitude: this.formCtrls.Latitude?.value,\r\n      };\r\n      // console.log(\"station\", station);\r\n\r\n      this.StationServ.addEditStation(station).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          // let returnObject = res.Station;\r\n          // let returnData: StationGetVM = {\r\n          //   stationId: returnObject.stationId,\r\n          //   ar_name: returnObject.ar_name,\r\n          //   en_name: returnObject.en_name,\r\n          //   streetId: returnObject.streetId,\r\n          //   street_ar_name: returnObject.street_ar_name,\r\n          //   street_en_name: returnObject.street_en_name,\r\n          //   Latitude: returnObject.Latitude,\r\n          //   Longitude: returnObject.Longitude,\r\n          // };\r\n\r\n          station.id == 0\r\n            ? this.addStation(res.Station)\r\n            : this.updateStation(res.Station);\r\n          this.dataSource.sort = this.sort;\r\n          this.clearForm();\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add station\r\n  addStation(res: StationGetVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // update station\r\n  updateStation(res: StationGetVM) {\r\n    let i = this.dataSource.data.findIndex((e) => e.stationId == res.stationId);\r\n    this.dataSource.data[i] = res;\r\n    this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(station: StationGetVM): void {\r\n    let name = this.currentLang == \"ar\" ? station.ar_name : station.en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStation(station);\r\n      });\r\n  }\r\n\r\n  // delete station\r\n  deleteStation(station: StationGetVM) {\r\n    this.spinner.show();\r\n    this.StationServ.deleteStation(station.stationId).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == station);\r\n        this.dataSource.data.splice(i, 1);\r\n        // this.itemsCounts--;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        if (station.stationId == this.formCtrls.id.value) this.clearForm();\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Station -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value == 0\">\r\n        {{ \"location.addStation\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Station -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value > 0\">\r\n        {{ \"location.updateStation\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\">\r\n                    <!-- arabic name input -->\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.arName\" | translate }}\r\n                        </mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            formCtrls?.ar_name.invalid &&\r\n                            (formCtrls?.ar_name.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              formCtrls?.ar_name.errors?.required ||\r\n                              formCtrls?.ar_name.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            <i class=\"ft-alert-circle align-middle\"></i>\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- english name input -->\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.enName\" | translate }}\r\n                        </mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            formCtrls?.en_name.invalid &&\r\n                            (formCtrls?.en_name.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              formCtrls?.en_name.errors?.required ||\r\n                              formCtrls?.en_name.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            <i class=\"ft-alert-circle align-middle\"></i>\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- street input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"location.street\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"streetId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let street of streets\"\r\n                        [value]=\"street.street_id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\" ? street.ar_name : street.en_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.streetId.invalid &&\r\n                        (formCtrls?.streetId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.streetId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Longitude input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"location.Longitude\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Longitude\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Longitude.invalid &&\r\n                        (formCtrls?.Longitude.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.Longitude.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.Longitude.errors?.min ||\r\n                          formCtrls?.Longitude.errors?.max\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"location.LongitudeErrorMsg\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Latitude input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"location.Latitude\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Latitude\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Latitude.invalid &&\r\n                        (formCtrls?.Latitude.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.Latitude.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.Latitude.errors?.min ||\r\n                          formCtrls?.Latitude.errors?.max\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"location.LatitudeErrorMsg\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add - edit Station -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset -->\r\n        <button\r\n          mat-raised-button\r\n          *ngIf=\"formCtrls.id.value > 0\"\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"location.stations\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let station\">\r\n                {{ station.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let station\">\r\n                {{ station.en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- street column -->\r\n            <ng-container matColumnDef=\"Street\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.street\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let station\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? station?.street_ar_name\r\n                    : station?.street_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Longitude column -->\r\n            <ng-container matColumnDef=\"Longitude\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.Longitude\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let station\">\r\n                {{ station?.Longitude }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Latitude column -->\r\n            <ng-container matColumnDef=\"Latitude\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.Latitude\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let station\">\r\n                {{ station?.Latitude }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let station\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditStation(station)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(station)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"7\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStations($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of stations\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  StreetGetVM,\r\n  StreetAddEditVM,\r\n} from \"app/dashboard/models/setup/general-setup/location/street\";\r\nimport { AreaGetVM } from \"app/dashboard/models/setup/general-setup/location/area\";\r\nimport { CityGetVM } from \"app/dashboard/models/setup/general-setup/location/city\";\r\nimport { StreetService } from \"app/dashboard/services/setup/general-setup/location/street.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GovernorateGetVM } from \"app/dashboard/models/setup/general-setup/location/governorate\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-streets\",\r\n  templateUrl: \"./streets.component.html\",\r\n  styleUrls: [\"./streets.component.scss\"],\r\n})\r\nexport class StreetsComponent implements OnInit {\r\n  Streets: StreetGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  // curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"en_name\",\r\n    \"Governorate\",\r\n    \"City\",\r\n    \"Area\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<StreetGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private StreetServ: StreetService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      govId: [\"\", [Validators.required]],\r\n      cityId: [\r\n        {\r\n          value: [],\r\n          disabled: true,\r\n        },\r\n        [Validators.required],\r\n      ],\r\n      areaId: [\r\n        {\r\n          value: [],\r\n          disabled: true,\r\n        },\r\n        [Validators.required],\r\n      ],\r\n    });\r\n\r\n    this.getAllStreets(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStreets(1);\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Governorate\":\r\n          return this.currentLang == \"ar\" ? item.gov_ar_name : item.gov_en_name;\r\n        case \"City\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.city_ar_name\r\n            : item.city_en_name;\r\n        case \"Area\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.area_ar_name\r\n            : item.area_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all streets\r\n  getAllStreets(page: number) {\r\n    // this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.StreetServ.getAllStreets(page).subscribe((res) => {\r\n      if (res) {\r\n        this.Streets = res.StreetList;\r\n        this.dataSource = new MatTableDataSource(this.Streets);\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditStreet(street: StreetGetVM) {\r\n    this.myForm.patchValue(street);\r\n    this.formCtrls.cityId?.setValue(street.cityId);\r\n    this.formCtrls.areaId?.setValue(street.areaId);\r\n    this.formCtrls.id?.setValue(street.street_id);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let street: StreetAddEditVM = {\r\n        eduCompId: this.EduCompId,\r\n        id: this.formCtrls.id?.value,\r\n        ar_name: this.formCtrls.ar_name?.value,\r\n        en_name: this.formCtrls.en_name?.value,\r\n        areaId: this.formCtrls.areaId?.value,\r\n      };\r\n      console.log(\"street\", street);\r\n\r\n      this.spinner.show();\r\n      this.StreetServ.addEditStreet(street).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          // let returnObject = res.Area;\r\n          // let returnData: StreetGetVM = {\r\n          //   street_id: returnObject.id,\r\n          //   ar_name: returnObject.ar_name,\r\n          //   en_name: returnObject.en_name,\r\n          //   cityId: returnObject.cityId,\r\n          //   city_ar_name: returnObject.city_ar_name,\r\n          //   city_en_name: returnObject.city_en_name,\r\n          //   govId: returnObject.govId,\r\n          //   gov_ar_name: returnObject.gov_ar_name,\r\n          //   gov_en_name: returnObject.gov_en_name,\r\n          //   areaId: returnObject.areaId,\r\n          //   area_ar_name: returnObject.area_ar_name,\r\n          //   area_en_name: returnObject.area_en_name,\r\n          // };\r\n          res.Area.street_id = res.Area.id;\r\n\r\n          street.id == 0\r\n            ? this.addStreet(res.Area)\r\n            : this.updateStreet(res.Area);\r\n          this.dataSource.sort = this.sort;\r\n          // this.clearForm();\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add street\r\n  addStreet(res: StreetGetVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n    this.formCtrls.ar_name.reset();\r\n    this.formCtrls.en_name.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  // update street\r\n  updateStreet(res: StreetGetVM) {\r\n    let i = this.dataSource.data.findIndex((e) => e.street_id == res.street_id);\r\n    this.dataSource.data[i] = res;\r\n    this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n\r\n    this.clearForm();\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(street: StreetGetVM): void {\r\n    let Name = this.currentLang == \"ar\" ? street.ar_name : street.en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStreet(street);\r\n      });\r\n  }\r\n\r\n  // delete street\r\n  deleteStreet(street: StreetGetVM) {\r\n    this.spinner.show();\r\n    this.StreetServ.deleteStreet(street.street_id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == street);\r\n        this.dataSource.data.splice(i, 1);\r\n        // this.itemsCounts--;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        if (street.street_id == this.formCtrls.id.value) this.clearForm();\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Street -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value == 0\">\r\n        {{ \"location.addStreet\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Street -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value > 0\">\r\n        {{ \"location.updateStreet\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\">\r\n                    <!-- arabic name input -->\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.arName\" | translate }}\r\n                        </mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            formCtrls?.ar_name.invalid &&\r\n                            (formCtrls?.ar_name.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              formCtrls?.ar_name.errors?.required ||\r\n                              formCtrls?.ar_name.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            <i class=\"ft-alert-circle align-middle\"></i>\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- english name input -->\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.enName\" | translate }}\r\n                        </mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            formCtrls?.en_name.invalid &&\r\n                            (formCtrls?.en_name.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              formCtrls?.en_name.errors?.required ||\r\n                              formCtrls?.en_name.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            <i class=\"ft-alert-circle align-middle\"></i>\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- governorate input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-governorate-dropdown\r\n                    [control]=\"formCtrls.govId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-governorate-dropdown>\r\n                </div>\r\n\r\n                <!-- city input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-city-by-governrate-dropdown\r\n                    [cityControl]=\"formCtrls.cityId\"\r\n                    [goverControl]=\"formCtrls.govId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-city-by-governrate-dropdown>\r\n                </div>\r\n\r\n                <!-- area input -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-area-by-city-dropdown\r\n                    [areaControl]=\"formCtrls.areaId\"\r\n                    [cityControl]=\"formCtrls.cityId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-area-by-city-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add - edit Street -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset -->\r\n        <!-- *ngIf=\"formCtrls.id.value > 0\" -->\r\n        <button mat-raised-button class=\"btn btn-warning\" (click)=\"clearForm()\">\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"location.streets\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let street\">\r\n                {{ street.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let street\">\r\n                {{ street.en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- governorate column -->\r\n            <ng-container matColumnDef=\"Governorate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.governorate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let street\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? street?.gov_ar_name\r\n                    : street?.gov_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- city column -->\r\n            <ng-container matColumnDef=\"City\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.city\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let street\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? street?.city_ar_name\r\n                    : street?.city_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- area column -->\r\n            <ng-container matColumnDef=\"Area\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"location.area\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let street\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? street?.area_ar_name\r\n                    : street?.area_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let street\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditStreet(street)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(street)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"7\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStreets($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of streets\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStageBodyVM,\r\n  IStageList,\r\n  IStageVM,\r\n} from \"app/dashboard/models/setup/general-setup/stage\";\r\nimport { StagesService } from \"app/dashboard/services/setup/general-setup/stages.service\";\r\nimport { ICountryVM } from \"app/dashboard/models/setup/general-setup/country\";\r\nimport { CountryService } from \"app/dashboard/services/setup/general-setup/country.service\";\r\n@Component({\r\n  selector: \"app-stages\",\r\n  templateUrl: \"./stages.component.html\",\r\n  styleUrls: [\"./stages.component.scss\"],\r\n})\r\nexport class StagesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  eduCompId: number;\r\n  curPage: number = 1;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  //rowFunctions = [{ functionName: \"Update\" }, { functionName: \"Delete\" }];\r\n  countries: ICountryVM[];\r\n  curLang: string;\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"en_name\",\r\n    // \"country\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IStageVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private stageService: StagesService,\r\n    private countryService: CountryService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.eduCompId = Number(authService.getEduCompId());\r\n    // this.countryService\r\n    //   .getAllCountries()\r\n    //   .subscribe((response: ICountryVM[]) => {\r\n    //     if (response) {\r\n    //       this.countries = response;\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: 0,\r\n      //countryId: [null, Validators.required],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnAllStage(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.eduCompId = e.EduCompId;\r\n      this.returnAllStage(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All Stages\r\n  returnAllStage(page: number) {\r\n    this.curPage = page;\r\n    this.stageService.getAllStages(page).subscribe((res: IStageList) => {\r\n      if (res) {\r\n        this.dataSource = new MatTableDataSource(res.stage1List);\r\n        this.itemsCounts = res.countItems;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let stage: IStageBodyVM = {\r\n      id: this.FormCtrls.id.value,\r\n      // countryId: this.FormCtrls.countryId.value,\r\n      eduCompId: this.eduCompId,\r\n      ar_name: this.FormCtrls.ar_name.value,\r\n      en_name: this.FormCtrls.en_name.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.stageService.addUpdateStage(stage).subscribe((res: any) => {\r\n        if (res) {\r\n          if (stage.id == 0) {\r\n            this.dataSource.data.unshift(res.school_type);\r\n            this.itemsCounts++;\r\n            this.dataSource.sort = this.sort;\r\n          } else {\r\n            let index = this.dataSource.data.findIndex(\r\n              (e) => e.stage_id == res.school_type.stage_id\r\n            );\r\n            this.dataSource.data[index] = res.school_type;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n          // this.returnAllStage(1);\r\n          this.toastr.success(\r\n            stage.id == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n          this.clearForm();\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  editStage(stage: IStageVM) {\r\n    this.myForm.patchValue(stage);\r\n    this.FormCtrls.id.setValue(stage.stage_id);\r\n  }\r\n\r\n  openDeleateDialog(StageData: IStageVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? StageData.ar_name : StageData.en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStage(StageData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Stage\r\n  deleteStage(StageData: IStageVM) {\r\n    this.stageService.deleteStage(StageData.stage_id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        // let index = this.dataSource.data.findIndex((e) => e == StageData);\r\n        // this.dataSource.data.splice(index, 1);\r\n        // this.itemsCounts--;\r\n        // this.dataSource.sort = this.sort;\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n\r\n        this.returnAllStage(1);\r\n        this.dataSource.paginator = this.paginator;\r\n\r\n        if (StageData.stage_id == this.FormCtrls.id.value) this.clearForm();\r\n      } else {\r\n        this.toastr.error(\"General.TosterErrorMessage\");\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"GeneralSetup.AddStage\"\r\n            : \"GeneralSetup.EditStage\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.required ||\r\n                          FormCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.en_name.invalid &&\r\n                        (FormCtrls.en_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.en_name.errors?.required ||\r\n                          FormCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Country\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"countryId\">\r\n                      <mat-option [value]=\"null\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of countries\"\r\n                        [value]=\"ele.country_id\"\r\n                      >\r\n                        {{ ele.country_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.countryId.invalid &&\r\n                        (FormCtrls.countryId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.countryId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i *ngIf=\"this.FormCtrls.id.value == 0\" class=\"fa fa-plus\"></i>\r\n          {{\r\n            (this.FormCtrls.id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"this.FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.AllStages\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- country Column -->\r\n            <ng-container matColumnDef=\"country\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Country\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.countryArName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editStage(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Update' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllStage($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  VaccinationAddEditVM,\r\n  VaccinationGetResponseVM,\r\n  VaccinationGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/vaccination\";\r\nimport { VaccinationService } from \"app/dashboard/services/setup/general-setup/vaccination.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-vaccinations\",\r\n  templateUrl: \"./vaccinations.component.html\",\r\n  styleUrls: [\"./vaccinations.component.scss\"],\r\n})\r\nexport class VaccinationsComponent implements OnInit {\r\n  Vaccinations: VaccinationGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"En_Name\", \"Ar_Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<VaccinationGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private VaccinationServ: VaccinationService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllVaccinations(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    // test data\r\n    this.dataSource = new MatTableDataSource(this.Vaccinations);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllVaccinations(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  // get all vaccinations\r\n  getAllVaccinations(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.VaccinationServ.getAllVaccinations(page, this.EduCompId).subscribe(\r\n      (res:VaccinationGetResponseVM) => {\r\n        if (res) {\r\n          this.Vaccinations = res.vacinationList;\r\n          this.dataSource = new MatTableDataSource(this.Vaccinations);\r\n          this.itemsCounts = res.countItems;\r\n          console.log(\"Vaccinations: >> \", res);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let vaccination = {} as VaccinationAddEditVM;\r\n      vaccination.Id=this.formCtrls.Id.value;\r\n      vaccination.EduCompId = this.EduCompId;\r\n      vaccination.Ar_Name = this.formCtrls.Ar_Name?.value;\r\n      vaccination.En_Name = this.formCtrls.En_Name?.value;\r\n      console.log(\"vaccination\", vaccination);\r\n\r\n      this.VaccinationServ.addEditVaccination(vaccination).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            this.spinner.show();\r\n\r\n            if(vaccination.Id == 0){\r\n              this.dataSource.data.unshift(res.Vacination);\r\n              this.itemsCounts++;\r\n              this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n            }else{\r\n              let i = this.dataSource.data.findIndex(\r\n                (e) => e.Id == this.formCtrls.Id.value\r\n              );\r\n\r\n              this.dataSource.data[i] = res.Vacination;\r\n\r\n              this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n            this.clearForm();\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // get form values to update\r\n  toEditVaccination(vaccination: VaccinationGetVM) {\r\n    this.myForm.patchValue(vaccination);\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(vaccination: VaccinationGetVM): void {\r\n    let vaccinationName =\r\n      this.currentLang == \"ar\" ? vaccination.Ar_Name : vaccination.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: vaccinationName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteVaccination(vaccination);\r\n      });\r\n  }\r\n\r\n  // delete vaccination\r\n  deleteVaccination(vaccination: VaccinationGetVM) {\r\n    this.spinner.show();\r\n    this.VaccinationServ.deleteVaccination(vaccination.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == vaccination);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Vaccination -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"GeneralSetup.addVaccination\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Vaccination -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"GeneralSetup.updateVaccination\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.En_Name.invalid &&\r\n                        (formCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.En_Name.errors?.required ||\r\n                          formCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Ar_Name.invalid &&\r\n                        (formCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Ar_Name.errors?.required ||\r\n                          formCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add vaccinations -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n        <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n         <!-- edit vaccinations -->\r\n\r\n         <button\r\n         mat-raised-button\r\n         class=\"btn btn-info bg-light-info\"\r\n         *ngIf=\"formCtrls?.Id.value\"\r\n         (click)=\"onSubmit()\"\r\n       >\r\n         {{ \"General.Update\" | translate }}\r\n       </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.vaccinations\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let vaccination\">\r\n                {{ vaccination.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let vaccination\">\r\n                {{ vaccination.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let vaccination\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditVaccination(vaccination)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(vaccination)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllVaccinations($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of vaccinations\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\nimport { VehiclesService } from \"app/dashboard/services/setup/general-setup/vehicles.service\";\r\nimport {\r\n  IVehicle,\r\n  IVehicleList,\r\n} from \"app/dashboard/models/setup/general-setup/vehicles \";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-vehicles\",\r\n  templateUrl: \"./vehicles.component.html\",\r\n  styleUrls: [\"./vehicles.component.scss\"],\r\n})\r\nexport class VehiclesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  EduCompId: number;\r\n  functionId: number;\r\n rowFunctions: IRowFunctionVM[];\r\n\r\n\r\n  curLang: string;\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"chassisNo\",\r\n    \"vehiclePlate\",\r\n    \"chairNo\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IVehicle>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private vehiclesService: VehiclesService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ChassisNo: [\"\", Validators.required],\r\n      VehiclePlate: [\"\", Validators.required],\r\n      ChairsNo: [\"\", Validators.required],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.returnAllVehicles(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllVehicles(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editVehicle(vehicleData: IVehicle) {\r\n    this.myForm.patchValue(vehicleData);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n  }\r\n\r\n  // Start: Return All Vehicles\r\n  returnAllVehicles(page: number) {\r\n    this.vehiclesService\r\n      .getAllVehicles(page, this.EduCompId)\r\n      .subscribe((res: IVehicleList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.vehicleList);\r\n          console.log(\"mmmm\", res.vehicleList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let vehiclesData: IVehicle = {\r\n      id: this.FormCtrls.id.value,\r\n      ChassisNo: this.FormCtrls.ChassisNo.value,\r\n      VehiclePlate: this.FormCtrls.VehiclePlate.value,\r\n      ChairsNo: this.FormCtrls.ChairsNo.value,\r\n      eduCompId: this.EduCompId,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.vehiclesService\r\n        .addEditVehicle(vehiclesData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.spinner.show();\r\n\r\n            if (vehiclesData.id == 0) {\r\n              this.dataSource.data.unshift(res.vehicle);\r\n              this.itemsCounts++;\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex(\r\n                (e) => e.id == vehiclesData.id\r\n              );\r\n              this.dataSource.data[i] = res.vehicle;\r\n\r\n              this.toastr.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            console.log(\"ll\",vehiclesData);\r\n\r\n            this.dataSource.paginator = this.paginator;\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(vehicleData: IVehicle): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: vehicleData.ChairsNo,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteVehicle(vehicleData);\r\n      });\r\n  }\r\n  // Start:Delete Vehicle\r\n  deleteVehicle(vehicleData: IVehicle) {\r\n    this.vehiclesService.deleteVehicle(vehicleData.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let index = this.dataSource.data.findIndex((e) => e == vehicleData);\r\n        this.dataSource.data.splice(index, 1);\r\n        this.dataSource.paginator = this.paginator;\r\n\r\n        this.toastr.success(\"General.TosterDelateMessage\");\r\n      } else {\r\n        this.toastr.error(\"General.TosterErrorMessage\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value  == 0\r\n            ? \"GeneralSetup.AddVehicle\"\r\n            : \"GeneralSetup.EditVehicle\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ChassisNo\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ChassisNo\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ChassisNo.invalid &&\r\n                        (FormCtrls.ChassisNo.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ChassisNo.errors?.required ||\r\n                          FormCtrls.ChassisNo.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.VehiclePlate\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"VehiclePlate\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.VehiclePlate.invalid &&\r\n                        (FormCtrls.VehiclePlate.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.VehiclePlate.errors?.required ||\r\n                          FormCtrls.VehiclePlate.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ChairsNo\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ChairsNo\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ChairsNo.invalid &&\r\n                        (FormCtrls.ChairsNo.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ChairsNo.errors?.required ||\r\n                          FormCtrls.ChairsNo.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button *ngIf=\"FormCtrls.id.value ==0\"\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n        <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button  *ngIf=\"FormCtrls.id.value > 0\"\r\n\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.Vehicles\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- chassisNo Column -->\r\n            <ng-container matColumnDef=\"chassisNo\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ChassisNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ChassisNo }}</td>\r\n            </ng-container>\r\n\r\n            <!-- vehiclePlate Column -->\r\n            <ng-container matColumnDef=\"vehiclePlate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.VehiclePlate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.VehiclePlate }}</td>\r\n            </ng-container>\r\n            <!-- chairNo Column -->\r\n            <ng-container matColumnDef=\"chairNo\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ChairsNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ChairsNo }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editVehicle(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllVehicles($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport {\r\n  IAddEditDepartment,\r\n  IDepartment,\r\n  IDepartmentList,\r\n} from \"app/dashboard/models/setup/educational-setup/department\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DepartmentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All Departments\r\n  getDepartment(page: number) {\r\n    return this.http.get<IDepartmentList>(\r\n      `${environment.baseUrl}Department/getDepartmentByPage/${page}`\r\n    );\r\n  }\r\n\r\n  getDepartmentDropdown() {\r\n    return this.http.get<IDepartment[]>(\r\n      `${environment.baseUrl}Department/getAllDepartment`\r\n    );\r\n  }\r\n\r\n  //Add - edit New Department\r\n  addEditDepartment(data: IAddEditDepartment) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Department/addEditDepartment`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Department\r\n  deleteDepartment(DepartmentId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Department/deleteDepartment/${DepartmentId}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditBusLineDetails } from \"app/dashboard/models/setup/general-setup/bus-line-details\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusLineDetailsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  // Return All Bus Lines Details\r\n  getBusLineDetails(page: number,EduCompId:number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}BusLineDetails/getBusLineDetailsByEduCompId/${EduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add && Edit New Bus Line Detail\r\n  addEditBusLineDetail(data: IAddEditBusLineDetails) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}BusLineDetails/addEditBusLineDetails`,\r\n      data\r\n    );\r\n  }\r\n\r\n\r\n  //Delete Bus Line Detail\r\n  deleteBusLineDetail(BusLineId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}BusLineDetails/deleteBusLineDetails/${BusLineId}`\r\n    );\r\n  }}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  BuildingAddEditVM,\r\n  BuildingGetResponseVM,\r\n  BuildingGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/classes/building\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BuildingService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All Buildings by page\r\n  getAllBuildings(page: number,eduCompId:number): Observable<BuildingGetResponseVM> {\r\n    return this.http.get<BuildingGetResponseVM>(\r\n      `${environment.baseUrl}Building/getEduBuildingByEduCompId/${eduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  // Return All Buildings > dropDown list\r\n  getAllBuildingsDropDown(eduCompId:number) {\r\n    return this.http.get<BuildingGetVM[]>(\r\n      `${environment.baseUrl}Building/getAllBuilding/${eduCompId}`\r\n    );\r\n  }\r\n\r\n  //Add and Edit  Building\r\n  addEditBuilding(data: BuildingAddEditVM) {\r\n    return this.http.post(`${environment.baseUrl}Building/addEditBuilding`, data);\r\n  }\r\n\r\n\r\n\r\n  //Delete Building\r\n  deleteBuilding(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Building/deleteBuilding//${id}`\r\n    );\r\n  }\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport { ICountryVM } from \"app/dashboard/models/setup/general-setup/country\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CountryService {\r\n  constructor(private http: HttpClient) {}\r\n  getAllCountries(): Observable<ICountryVM[]> {\r\n    return this.http.get<ICountryVM[]>(\r\n      `${environment.baseUrl}country/return-countries`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IBodyEductionalGroupVM } from \"app/dashboard/models/setup/general-setup/educational-group\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EducationalGroupService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEducationalGroup(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}EducationGroup/getEduGroupByPage/${page}`\r\n    );\r\n  }\r\n\r\n  getEducationalGroupDropdown() {\r\n    return this.http.get(`${environment.baseUrl}EducationGroup/getAllEduGroup`);\r\n  }\r\n\r\n  addupdateEduGroup(data: IBodyEductionalGroupVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}EducationGroup/addEditEduGroup`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteEducationalGroup(EduGroupId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}EducationGroup/deleteEduGroup/${EduGroupId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  StreetAddEditVM,\r\n  StreetGetVM,\r\n  StreetGetResponseVM,\r\n} from \"app/dashboard/models/setup/general-setup/location/street\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StreetService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All  Streets by page\r\n  getAllStreets(page: number) {\r\n    return this.http.get<StreetGetResponseVM>(\r\n      `${environment.baseUrl}street/getStreetByPage/${page}`\r\n    );\r\n  }\r\n\r\n  // Return All Streets > dropDown list\r\n  getAllStreetsDropDown() {\r\n    return this.http.get<StreetGetVM[]>(\r\n      `${environment.baseUrl}street/getAllStreets`\r\n    );\r\n  }\r\n\r\n  // // Return All Streets > dropDown list\r\n  // getAllStreetsByAreaId() {\r\n  //   return this.http.get<StreetGetVM[]>(\r\n  //     `${environment.baseUrl}street/getAllStreetByAreaId`\r\n  //   );\r\n  // }\r\n\r\n  //Add New Street\r\n  addEditStreet(data: StreetAddEditVM) {\r\n    return this.http.post(`${environment.baseUrl}street/addEditStreet`, data);\r\n  }\r\n\r\n  //Delete Street\r\n  deleteStreet(id: number) {\r\n    return this.http.delete(`${environment.baseUrl}street/deleteStreet/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditHierarchy } from \"app/dashboard/models/setup/general-setup/school-hierarchy\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SchoolHierarchyService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  // Return All School Hierarchy\r\n  getAllSchoolHierarchys(page: number,eduCompId:number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}School_Hierarchy/getSchool_HierarchyByEduCompIdByPage/${eduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add School Hierarchy\r\n  addEditSchoolHierarchy(data: IAddEditHierarchy) {\r\n    return this.http.post(`${environment.baseUrl}School_Hierarchy/addEditSchool_Hierarchy`, data);\r\n  }\r\n\r\n\r\n  //Delete School Hierarchy\r\n  deleteSchoolHierarchy(schoolHierarchyId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}School_Hierarchy/deleteSchool_Hierarchy/${schoolHierarchyId}`\r\n    );\r\n  }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { ISchoolTypeBodyVM } from \"app/dashboard/models/setup/general-setup/school-type\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class SchoolTypeService {\r\n  constructor(private http: HttpClient) {}\r\n  getAllSchoolTypes(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}SchoolType/getSchoolTypeByPage/${page}`\r\n    );\r\n  }\r\n\r\n  getSchoolTypesDropdown() {\r\n    return this.http.get(`${environment.baseUrl}SchoolType/getSchoolType`);\r\n  }\r\n\r\n  addSchoolType(data: ISchoolTypeBodyVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}SchoolType/addEditSchoolType`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteSchoolType(schoolTypeId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}SchoolType/deleteSchoolType/${schoolTypeId}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditSchool } from \"app/dashboard/models/setup/general-setup/school\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SchoolsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n   // Return All Schools\r\n   getAllSchools(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}School/getSchoolByPage/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add && Edit New School\r\n  addEditSchool(data: IAddEditSchool) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}School/addEditSchool`,\r\n      data\r\n    );\r\n  }\r\n\r\n\r\n  //Delete School\r\n  deleteSchool(SchoolId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}School/deleteSchool/${SchoolId}`\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IVehicle } from \"app/dashboard/models/setup/general-setup/vehicles \";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VehiclesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n    // Return All Vehicles\r\n    getAllVehicles(page: number,EduCompId:number) {\r\n      return this.http.get(\r\n        `${environment.baseUrl}Vehicle/getVehicleByPage/${page}`\r\n      );\r\n    }\r\n        // Return All Vehicles dropdown\r\n        getAllVehiclesDropdown(EduCompId:number) {\r\n          return this.http.get(\r\n            `${environment.baseUrl}Vehicle/getAllVehicle`\r\n          );\r\n        }\r\n\r\n\r\n\r\n    //Add && Or New Vehicle\r\n    addEditVehicle(data: IVehicle) {\r\n      return this.http.post(`${environment.baseUrl}Vehicle/addEditVehicle`, data);\r\n    }\r\n\r\n\r\n    //Delete Vehicle\r\n    deleteVehicle(VehicleId: number) {\r\n      return this.http.delete(\r\n        `${environment.baseUrl}Vehicle/deleteVehicle/${VehicleId}`\r\n      );\r\n    }\r\n  }\r\n\r\n"],"names":["Validators","MatSort","MatPaginator","MatTableDataSource","DeleteDialogComponent","i0","ctx_r36","ctx_r39","SchoolHierarchyComponent","spinner","toastr","dialog","translate","route","authService","fb","schoolHierarchyService","educationYearService","departmentService","queryParamMap","subscribe","params","functionId","Number","get","getUserRowFunctions","res","length","rowFunctions","EduCompId","getEduCompId","myForm","group","id","EduYearId","required","deptId","groupId","onLangChange","lang","curLang","returnSchoolHierarchy","getAllDepartments","getAllEducationalYear","getAllGroups","dataSource","paginator","sort","e","controls","SchoolHierarchyData","patchValue","event","filterValue","target","value","filter","trim","toLowerCase","FormCtrls","setValue","submitted","getDepartmentDropdown","departmentList","getEducationalYearDropdown","educationalYearList","eduYearList","page","getAllSchoolHierarchys","SchoolHierarchyList","itemsCounts","itemCount","Id","eduYearID","groupID","eduDepartmentID","valid","addEditSchoolHierarchy","returnValue","show","data","unshift","school","success","i","findIndex","clearForm","hide","error","open","msg","group_ar_name","afterClosed","confirm","deleteschoolHierarchy","deleteSchoolHierarchy","index","splice","selectors","viewQuery","ctx","CustomeValidator","ctx_r17","ctx_r27","ctx_r30","SchoolTypeComponent","SchoolTypeService","ar_name","whiteSpace","en_name","returnAllSchoolTypes","getAllSchoolTypes","console","log","schoolType_list","countItems","stage","eduCompId","addSchoolType","returnData","school_type","Ar_Name","En_Name","SchoolDataType","deleteSchoolType","SchoolData","reset","ctx_r45","ctx_r48","ctx_r50","ctx_r66","ctx_r69","SchoolsComponent","eduGroupService","schoolService","eduGroup_id","Address","Email","email","Mobile","pattern","minLength","startsWith","Telephone","returnSchools","getAllEduGroup","EduGroupId","schoolData","getEducationalGroup","educationGroupLIst","eduGroup_list","getAllSchools","schoolList","addEditSchool","deleteSchool","ctx_r20","ctx_r31","ctx_r34","AppreciationExpressionsComponent","appreciationsService","functionName","ToTeacher","gatExpressions","appreciationExpression","itemsCount","expression","addUpdateExpression","_a","expressio","deleteExpression","ctx_r6","AttachTypeUserTypesComponent","GeneralServ","AttachTypeServ","ToastrMsg","authserv","paramMap","attachTypeId","getAllUserTypesByAttachId","attachUserTypeList","IsAdd","userTypesCtrls","map","usertype","userTypeId","currentLang","userTypeIds","getAllUserTypes","UserTypeList","userTypes","attach_type_id","adduserTypes","updateuserTypes","addUserTypes","attachUserType","returnString","isDelete","EditUserTypes","attach_userType","text","deleteuserTypes","decls","vars","consts","template","ctx_r21","ctx_r23","ctx_r25","AttachTypeComponent","getAllAttachTypes","firstPage","formCtrls","curPage","AttachTypes","attachTypeList","attachType","_b","_c","addEditAttachType","attach_type","attachTypeName","deleteAttachType","ctx_r35","ctx_r38","ctx_r40","ctx_r53","ctx_r56","BusLineDetailComponent","busLineDetailsService","streetService","stationService","param","busLineId","busTime","streetId","stationId","disabled","stationOrder","bigZero","notes","returnAllBusLineDetails","getAllStreets","BusLineData","getAllStation","getAllStreetsDropDown","streetList","getAllStationsByStreetId","stationList","enable","disable","getBusLineDetails","busLineDetailsList","busLineDetailData","addEditBusLineDetail","BusLine_Details","BusLineDetailData","street_ar_name","deleteBusLineDetail","ctx_r41","ctx_r57","ctx_r60","BusLineComponent","busLineService","vehiclesService","governorateId","cityId","areaId","vehicleId","driver_name","returnAllBusLines","getAllVehicles","govId","getAllVehiclesDropdown","vehicleList","getBusLines","BusLine_list","busLineData","addEditBusLine","BusLine","deleteBusLine","ChronicDiseasesComponent","ChronicDiseaseServ","getAllChronicDiseases","ChronicDiseases","ChronicDiseaseList","chronicDisease","addEditChronicDisease","chronic_deisease","chronicDiseaseName","deleteChronicDisease","AddStudentsToClassroomComponent","StudentServ","EducationYearServ","ClassRoomServ","eduYear","currentEduYear","studentIds","classroomId","getEduYearWithCurrentClassroomId","getAllStudentsInEduYear","getAllStudentsInClassRoom","eduYearId","StudentsList","GetAllStudentsByEduYear","std","GetAllStudentsByClassroomIdByPage","StudentsInClassroom","classRoomList","students","assignStudentsToClassRoom","student","student_name","deleteStudent","deleteStudentFromClassRoom","ctx_r29","ctx_r33","BuildingsComponent","BuildingServ","getAllBuildings","floorCount","min","max","description","buildingList","building","_d","_e","addEditBuilding","buildingName","deleteBuilding","ClassRoomsComponent","getAllClassRooms","roomCode","buildingId","maxStudentNo","minusNum","floorNo","sortingDataAccessor","item","property","building_ar_name","building_en_name","filterPredicate","toLocaleLowerCase","indexOf","getAllBuildingsDropDown","buildings","BuildingId","maxNoFloor","find","b","FloorNumber","setValidators","updateValueAndValidity","classRoom","_f","addUpdateClassRoom","class_room","deleteClassRoom","EducationalGroupComponent","EduGroupService","returnEduGroup","eduGroup","addupdateEduGroup","educationGroup","EduGroup","deleteEduGroup","deleteEducationalGroup","StagesComponent","RouterModule","VehiclesComponent","CitiesComponent","AreasComponent","StreetsComponent","StationsComponent","GovernoratesComponent","VaccinationsComponent","routes","path","component","children","GeneralSetupRoutingModule","forChild","imports","exports","CommonModule","NgxSpinnerModule","MaterialModule","ReactiveFormsModule","SharedModule","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","GeneralSetupModule","provide","useClass","useValue","declarations","AreaServ","getAllAreas","startSortingTable","gov_ar_name","gov_en_name","city_ar_name","city_en_name","Areas","AreaList","area","addEditArea","Area","addArea","updateArea","Name","deleteArea","CityServ","getAllCities","Cities","CitiesList","city","gov_id","City_id","addEditCity","returnObject","City","addCity","updateCity","cityName","deleteCity","GovernorateServ","getAllGovernorates","Governorates","governorateList","governorate","addEditGovernorate","Governorate","addGovernorate","updateGovernorate","governorateName","deleteGovernorate","ctx_r49","ctx_r52","StationServ","StreetServ","Longitude","Latitude","getAllStations","street_en_name","streets","Stations","station","addEditStation","addStation","Station","updateStation","name","deleteStation","area_ar_name","area_en_name","Streets","StreetList","street","street_id","addEditStreet","addStreet","updateStreet","deleteStreet","stageService","countryService","returnAllStage","getAllStages","stage1List","addUpdateStage","stage_id","StageData","deleteStage","VaccinationServ","getAllVaccinations","Vaccinations","vacinationList","vaccination","addEditVaccination","Vacination","vaccinationName","deleteVaccination","ctx_r24","ctx_r43","ChassisNo","VehiclePlate","ChairsNo","returnAllVehicles","vehicleData","vehiclesData","addEditVehicle","vehicle","deleteVehicle","environment","DepartmentService","http","baseUrl","post","DepartmentId","delete","factory","providedIn","BusLineDetailsService","BusLineId","BuildingService","CountryService","EducationalGroupService","StreetService","SchoolHierarchyService","schoolHierarchyId","schoolTypeId","SchoolsService","SchoolId","VehiclesService","VehicleId"],"sourceRoot":"webpack:///"}