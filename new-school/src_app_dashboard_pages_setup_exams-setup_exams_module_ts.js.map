{"version":3,"file":"src_app_dashboard_pages_setup_exams-setup_exams_module_ts.js","mappings":"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AK;AACL;AACA;AACO;AACP,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA;AACO;AACP;AACA;AACA;AACA,iBAAiB,oCAAoC;AACrD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACO;AACP,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACO;AACP,kDAAkD,QAAQ;AAC1D,yCAAyC,QAAQ;AACjD,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACO;AACP,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA,iBAAiB,uFAAuF,cAAc;AACtH,uBAAuB,gCAAgC,qCAAqC,2CAA2C;AACvI,4BAA4B,MAAM,iBAAiB,YAAY;AAC/D,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACO;AACP;AACA,iBAAiB,6CAA6C,UAAU,sDAAsD,cAAc;AAC5I,0BAA0B,6BAA6B,oBAAoB,gDAAgD,kBAAkB;AAC7I;AACA;AACO;AACP;AACA;AACA,2GAA2G,uFAAuF,cAAc;AAChN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","sources":["./src/app/dashboard/pages/setup/exams-setup/exam-correction/correction-dialog/correction-dialog.component.ts","./src/app/dashboard/pages/setup/exams-setup/exam-correction/correction-dialog/correction-dialog.component.html","./src/app/dashboard/pages/setup/exams-setup/exam-correction/correction-index/correction-index.component.ts","./src/app/dashboard/pages/setup/exams-setup/exam-correction/correction-index/correction-index.component.html","./src/app/dashboard/pages/setup/exams-setup/exams-routing.module.ts","./src/app/dashboard/pages/setup/exams-setup/exams-whatsapp/exams-whatsapp.component.ts","./src/app/dashboard/pages/setup/exams-setup/exams-whatsapp/exams-whatsapp.component.html","./src/app/dashboard/pages/setup/exams-setup/exams.module.ts","./src/app/dashboard/pages/setup/exams-setup/exams/add-exam/add-exam.component.ts","./src/app/dashboard/pages/setup/exams-setup/exams/add-exam/add-exam.component.html","./src/app/dashboard/pages/setup/exams-setup/exams/add-sub-question/add-sub-question.component.ts","./src/app/dashboard/pages/setup/exams-setup/exams/add-sub-question/add-sub-question.component.html","./src/app/dashboard/pages/setup/exams-setup/exams/exam-preview/exam-preview.component.html","./src/app/dashboard/pages/setup/exams-setup/exams/exam-preview/exam-preview.component.ts","./src/app/dashboard/pages/setup/exams-setup/exams/exams-custome-points/exams-custome-points.component.ts","./src/app/dashboard/pages/setup/exams-setup/exams/exams-custome-points/exams-custome-points.component.html","./src/app/dashboard/pages/setup/exams-setup/exams/exams-index/exams-index.component.ts","./src/app/dashboard/pages/setup/exams-setup/exams/exams-index/exams-index.component.html","./src/app/dashboard/pages/setup/exams-setup/questions-banck/add-question/add-question.component.ts","./src/app/dashboard/pages/setup/exams-setup/questions-banck/add-question/add-question.component.html","./src/app/dashboard/pages/setup/exams-setup/questions-banck/questions-index/questions-index.component.ts","./src/app/dashboard/pages/setup/exams-setup/questions-banck/questions-index/questions-index.component.html","./src/app/dashboard/pages/setup/exams-setup/templates/add-template/add-template.component.ts","./src/app/dashboard/pages/setup/exams-setup/templates/add-template/add-template.component.html","./src/app/dashboard/pages/setup/exams-setup/templates/template-details/template-details.component.ts","./src/app/dashboard/pages/setup/exams-setup/templates/template-details/template-details.component.html","./src/app/dashboard/pages/setup/exams-setup/templates/templates-custome-points/templates-custome-points.component.ts","./src/app/dashboard/pages/setup/exams-setup/templates/templates-custome-points/templates-custome-points.component.html","./src/app/dashboard/pages/setup/exams-setup/templates/templates-index/templates-index.component.ts","./src/app/dashboard/pages/setup/exams-setup/templates/templates-index/templates-index.component.html","./src/app/dashboard/pages/setup/exams-setup/upload-exam-student-grades/upload-exam-student-grades.component.html","./src/app/dashboard/pages/setup/exams-setup/upload-exam-student-grades/upload-exam-student-grades.component.ts","./src/app/dashboard/services/setup/exams-setup/exams.service.ts","./src/app/dashboard/services/setup/exams-setup/templates.service.ts","./src/app/dashboard/services/setup/points-setup/points.service.ts","./src/app/dashboard/services/setup/whatsapp-setup/whatsApp-setup.service.ts","./node_modules/ngx-quill/node_modules/tslib/tslib.es6.js","./node_modules/ngx-quill/fesm2015/ngx-quill.mjs"],"sourcesContent":["import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n  import {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\n import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\n\r\n@Component({\r\n  selector: \"app-correction-dialog\",\r\n  templateUrl: \"./correction-dialog.component.html\",\r\n  styleUrls: [\"./correction-dialog.component.css\"],\r\n})\r\nexport class CorrectionDialogComponent implements OnInit {\r\n  downloadUrl: string;\r\n  fileName: string;\r\n  EduCompId: any;\r\n  functionId: number;\r\n  submitted: false;\r\n  myForm!: FormGroup;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private router: Router,\r\n    private msg: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    // private toastr: ToastrService,\r\n    private examService: ExamsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog // private downloads: DownloadService\r\n  ) {}\r\n\r\n  get questionNameCtrl() {\r\n    return this.myForm.get(\"questionName\");\r\n  }\r\n  get questionAnswerCtrl() {\r\n    return this.myForm.get(\"studentAnswer\");\r\n  }\r\n  get perfectAnswerCtrl() {\r\n    return this.myForm.get(\"perfectAnswer\");\r\n  }\r\n  get markCtrl() {\r\n    return this.myForm.get(\"mark\");\r\n  }\r\n  get teacherCommentCtrl() {\r\n    return this.myForm.get(\"teacherComment\");\r\n  }\r\n  get questionIdCtrl() {\r\n    return this.myForm.get(\"questionId\");\r\n  }\r\n  get examStudentIdCtrl() {\r\n    return this.myForm.get(\"examStudentId\");\r\n  }\r\n  get teacherUserIdCtrl() {\r\n    return this.myForm.get(\"teacherUserId\");\r\n  }\r\n  get questionMarkCtrl() {\r\n    return this.myForm.get(\"questionMark\");\r\n  }\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"data\", this.data);\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      questionName: [\"\"],\r\n      studentAnswer: [\"\"],\r\n      questionId: [],\r\n      examStudentId: [],\r\n      teacherComment: [\"\", Validators.required],\r\n      teacherUserId: [],\r\n      questionMark: [],\r\n      //  perfectAnswer: [\"\"],\r\n      mark: [, Validators.required],\r\n    });\r\n\r\n    // this.downloadUrl = this.data.msg.perfectAnswerAttach;\r\n    this.fileName = this.downloadUrl.substring(18);\r\n    console.log(\"attach file\", this.fileName);\r\n    console.log(\"attach download\", this.downloadUrl);\r\n    this.questionNameCtrl.setValue(this.data.msg.questionName);\r\n    this.questionNameCtrl.disable();\r\n    this.questionIdCtrl.setValue(this.data.msg.questionId);\r\n    this.examStudentIdCtrl.setValue(this.data.msg.examStudentId);\r\n    this.teacherUserIdCtrl.setValue(this.data.msg.teacherUserId);\r\n    this.questionMarkCtrl.setValue(this.data.msg.questionMark);\r\n    this.FormCtrl.studentAnswer.setValue(this.data.msg.studentAnswer);\r\n    // this.FormCtrl.perfectAnswer.setValue(this.data.msg.prefectAnswer);\r\n  }\r\n\r\n  //   DownloadAttach(): void {\r\n  //     // this.downloads\r\n  //     //   .download(this.downloadUrl)\r\n  //     //   .subscribe(blob => {\r\n  //     //     const a = document.createElement('a')\r\n  //     //     const objectUrl = URL.createObjectURL(blob)\r\n  //     //     a.href = objectUrl\r\n  //     //     a.download = 'archive.zip';\r\n  //     //     a.click();\r\n  //     //     URL.revokeObjectURL(objectUrl);\r\n  //     //   })\r\n  //     console.log(\"id\",this.data.msg.perfectAnswerAttach);\r\n  //   }\r\n\r\n  // //   DownloadAttach()\r\n  // //   {\r\n  // // console.log(\"id\",this.data.msg.perfectAnswerAttach);\r\n  // //   }\r\n\r\n  CorrectQuestion() {\r\n    let valid = this.myForm.valid;\r\n    if (valid) {\r\n      console.log(\"my form\", this.myForm.value);\r\n\r\n      if (this.markCtrl.value > this.questionMarkCtrl.value) {\r\n        this.msg.error(\"يجب ادخال قيمة النتيجة أقل من القيمة النهائية\");\r\n        return;\r\n      } else {\r\n        this.spinner.show();\r\n        // console.log(\"form data\", this.myForm.value);\r\n        this.examService\r\n          .submitCorrection(this.myForm.value)\r\n          .subscribe((res: any) => {\r\n            if (res.returnValue == 1) {\r\n              this.msg.success(\"تم تصحيح السؤال\");\r\n              this.dialog.closeAll();\r\n            } else this.msg.error(res.returnString);\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span> {{ \"labels.Correct\" | translate }} </span>\r\n        <a\r\n          mat-raised-button\r\n          [mat-dialog-close]=\"false\"\r\n          class=\"btn btn-danger float-right\"\r\n        >\r\n          {{ \"General.Close\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label\r\n                      >{{ \"labels.َQuestionContent\" | translate }}\r\n                    </mat-label>\r\n\r\n                    <textarea\r\n                      matInput\r\n                      cols=\"20\"\r\n                      formControlName=\"questionName\"\r\n                      readonly\r\n                    >\r\n                    </textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-12 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.StudentAnswer\" | translate\r\n                    }}</mat-label>\r\n\r\n                    <textarea\r\n                      matInput\r\n                      cols=\"20\"\r\n                      formControlName=\"studentAnswer\"\r\n                      readonly\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-12 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [src]=\"data.imageAttatch\"\r\n                      alt=\"Question Image\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-12 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.perfectAnswer\" | translate\r\n                    }}</mat-label>\r\n                    <textarea\r\n                      matInput\r\n                      cols=\"20\"\r\n                      formControlName=\"perfectAnswer\"\r\n                      readonly\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-12 col-12\">\r\n                  <a [href]=\"this.downloadUrl\" [download]=\"this.fileName\">\r\n                    {{ \"labels.perfectAnswerAttach\" | translate }}\r\n                  </a>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.TeacherComment\" | translate\r\n                    }}</mat-label>\r\n                    <input matInput formControlName=\"teacherComment\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        teacherCommentCtrl?.invalid &&\r\n                        (teacherCommentCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"teacherCommentCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"teacherCommentCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Mark\" | translate }}</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"mark\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        markCtrl?.invalid && (markCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"markCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"markCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"CorrectQuestion()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n import { NgxSpinnerService } from \"ngx-spinner\";\r\n import { CorrectionDialogComponent } from \"../correction-dialog/correction-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ICorrectionQuestionViewModel } from \"app/dashboard/models/setup/exams-setup/exam\";\r\nimport { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\n@Component({\r\n  selector: \"app-correction-index\",\r\n  templateUrl: \"./correction-index.component.html\",\r\n  styleUrls: [\"./correction-index.component.css\"],\r\n})\r\nexport class CorrectionIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  EduCompId: any;\r\n  itemsCount: any;\r\n\r\n  correction: ICorrectionQuestionViewModel[] = [];\r\n  displayedColumns: string[] = [\r\n    \"examName\",\r\n    \"questionName\",\r\n    \"teacherName\",\r\n    \"actions\",\r\n  ];\r\n  rowFunctions: IRowFunctionVM[];\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n  get CorrectedQuestionsIdCtrl() {\r\n    return this.myForm.get(\"CorrectedQuestions\");\r\n  }\r\n  dataSource: MatTableDataSource<IRowFunctionVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private examService: ExamsService,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      page: [\"\"],\r\n      EduCompId: [this.EduCompId],\r\n      CorrectedQuestions: [1],\r\n    });\r\n    //this.openCorrectDialog();\r\n    this.getAllQuestions(1, 1);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllQuestions(p: number, CorrectedQuestions: number) {\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    // this.myForm.controls[\"CorrectedQuestions\"].value;\r\n    this.spinner.show();\r\n    this.examService\r\n      .getQuestionByCorrectionType(p, CorrectedQuestions)\r\n      .subscribe((response: any) => {\r\n        if (response) {\r\n          console.log(\"quesions not corrected: \", response.examsList);\r\n          this.correction = response.examsList.examQuestions;\r\n          console.log(\"correct list\", this.correction);\r\n          this.dataSource = new MatTableDataSource(response.examsList);\r\n          this.itemsCount = response.itemsCount;\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  openCorrectDialog(item: any): void {\r\n    this.dialog\r\n      .open(CorrectionDialogComponent, {\r\n        data: {\r\n          msg: item,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) console.log(\"dialog\");\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.ExamsCorrection\" | translate }}\r\n\r\n        <a mat-raised-button class=\"btn btn-info float-right\">\r\n          <i class=\"fa fa-search\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-12\">\r\n                  <mat-radio-group\r\n                    formControlName=\"CorrectedQuestions\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"0\"\r\n                        (change)=\"getAllQuestions(1, 0)\"\r\n                      >\r\n                        {{ \"labels.CorrectedQuestions\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"1\"\r\n                        (change)=\"getAllQuestions(1, 1)\"\r\n                      >\r\n                        {{ \"labels.UnCorrectedQuestions\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.ExamsCorrection\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"examName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ExamNm\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.examName }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"questionName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.َQuestionContent\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.questionName }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"teacherName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.teacherName }}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let question\">\r\n                <button\r\n                  (click)=\"openCorrectDialog(question)\"\r\n                  mat-mini-fab\r\n                  color=\"warn\"\r\n                >\r\n                  <mat-icon>done</mat-icon>\r\n                </button>\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"\r\n              getAllQuestions(\r\n                $event.pageIndex + 1,\r\n                CorrectedQuestionsIdCtrl.value\r\n              )\r\n            \"\r\n            [length]=\"0\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { TemplatesCustomePointsComponent } from \"./templates/templates-custome-points/templates-custome-points.component\";\r\nimport { AddTemplateComponent } from \"./templates/add-template/add-template.component\";\r\nimport { AddQuestionComponent } from \"./questions-banck/add-question/add-question.component\";\r\nimport { QuestionsIndexComponent } from \"./questions-banck/questions-index/questions-index.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { IsAdminGuard } from \"app/shared/services/auth/Guards/roles/is-admin.guard\";\r\nimport { AddExamComponent } from \"./exams/add-exam/add-exam.component\";\r\nimport { ExamsIndexComponent } from \"./exams/exams-index/exams-index.component\";\r\nimport { TemplatesIndexComponent } from \"./templates/templates-index/templates-index.component\";\r\nimport { CorrectionIndexComponent } from \"./exam-correction/correction-index/correction-index.component\";\r\nimport { ExamPreviewComponent } from \"./exams/exam-preview/exam-preview.component\";\r\nimport { ExamsCustomePointsComponent } from \"./exams/exams-custome-points/exams-custome-points.component\";\r\nimport { UploadExamStudentGradesComponent } from \"./upload-exam-student-grades/upload-exam-student-grades.component\";\r\nimport { ExamsWhatsappComponent } from \"./exams-whatsapp/exams-whatsapp.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"exam\",\r\n    pathMatch: \"full\",\r\n  },\r\n\r\n  {\r\n    path: \"exam-preview/:examId\",\r\n    component: ExamPreviewComponent,\r\n  },\r\n  {\r\n    path: \"exam-whatsapp-msgs/:examId\",\r\n    component: ExamsWhatsappComponent,\r\n  },\r\n\r\n  {\r\n    path: \"exam\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: ExamsIndexComponent,\r\n      },\r\n\r\n      {\r\n        path: \"add-exam\",\r\n        component: AddExamComponent,\r\n      },\r\n      {\r\n        path: \"exam-points/:examId\",\r\n        component: ExamsCustomePointsComponent,\r\n      },\r\n      {\r\n        path: \"upload-exam-student-grades/:examId\",\r\n        component: UploadExamStudentGradesComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"question-bank\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: QuestionsIndexComponent,\r\n      },\r\n      {\r\n        path: \"add-question\",\r\n        component: AddQuestionComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"templates\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n      { path: \"index\", component: TemplatesIndexComponent },\r\n      { path: \"add-template\", component: AddTemplateComponent },\r\n      {\r\n        path: \"template-points/:templateId\",\r\n        component: TemplatesCustomePointsComponent,\r\n      },\r\n      {\r\n        path: \"upload-exam-student-grades/:templateId\",\r\n        component: UploadExamStudentGradesComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"exam-correction\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n      { path: \"index\", component: CorrectionIndexComponent },\r\n      // { path: \"add-template\", component: AddTemplateComponent },\r\n    ],\r\n  },\r\n  // { path: \"templates-index\", component: TemplatesIndexComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ExamsRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IAvailableWhatsAppMsgVM,\r\n  IGetExamWhatssAppMsgVM,\r\n  IPostExamWhatssAppMsgVM,\r\n} from \"app/dashboard/models/setup/whatsapp-setup/whatsAppSetupVM\";\r\nimport { WhatsAppSetupService } from \"app/dashboard/services/setup/whatsapp-setup/whatsApp-setup.service\";\r\n\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-exams-whatsapp\",\r\n  templateUrl: \"./exams-whatsapp.component.html\",\r\n  styleUrls: [\"./exams-whatsapp.component.scss\"],\r\n})\r\nexport class ExamsWhatsappComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  Submitted = false;\r\n  IsTemplate: any;\r\n  availableWhatsAppMsg: IAvailableWhatsAppMsgVM[] = [];\r\n  examId: number;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  displayedColumns: string[] = [\r\n    \"msgTitle\",\r\n    \"FromGrade\",\r\n    \"ToGrade\",\r\n    \"msgBody\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IGetExamWhatssAppMsgVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private whatsAppService: WhatsAppSetupService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.examId = Number(params.get(\"examId\"));\r\n    });\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.IsTemplate = params.get(\"IsTemplate\");\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      whats_app_msg_id: [\"\", [Validators.required]],\r\n      FromGrade: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      ToGrade: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.getAvailableWhatsAppMsgToExam();\r\n    this.getExamWhatsAppMsgs();\r\n  }\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAvailableWhatsAppMsgToExam() {\r\n    this.spinner.show();\r\n    this.whatsAppService\r\n      .getAvailableWhatsAppMsgToExam<IAvailableWhatsAppMsgVM[]>(\r\n        this.EduCompId,\r\n        this.examId\r\n      )\r\n      .subscribe((res) => {\r\n        this.availableWhatsAppMsg = res;\r\n        // console.log(\"AvailableWhatsAppMsg\", res);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getExamWhatsAppMsgs() {\r\n    this.spinner.show();\r\n    this.whatsAppService\r\n      .getExamWhatsAppMsgs<IGetExamWhatssAppMsgVM[]>(this.examId)\r\n      .subscribe((res) => {\r\n        this.dataSource = new MatTableDataSource(res);\r\n        console.log(\"getExamWhatsAppMsgs\", res);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  addEditWhatAppMsg() {\r\n    this.Submitted = true;\r\n    let body = {} as IPostExamWhatssAppMsgVM;\r\n    body.Id = this.FormCtrls.Id?.value;\r\n    body.whats_app_msg_id = this.FormCtrls.whats_app_msg_id?.value;\r\n    body.exam_id = this.examId;\r\n    body.FromGrade = this.FormCtrls.FromGrade?.value;\r\n    body.ToGrade = this.FormCtrls.ToGrade?.value;\r\n    body.IsTemplate = this.IsTemplate;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.whatsAppService\r\n        .addEditExamWhatssAppMsg(body)\r\n        .subscribe((res: any) => {\r\n          this.Submitted = false;\r\n          if (res.returnString == \"Success\") {\r\n            this.getAvailableWhatsAppMsgToExam();\r\n            this.getExamWhatsAppMsgs();\r\n            body.Id == null\r\n              ? this.msg.success(\"whatsApp.ExamMsgAdded\") //add\r\n              : this.msg.success(\"whatsApp.ExamMsgUpdated\"); //update\r\n            this.myForm.reset();\r\n            this.FormCtrls.whats_app_msg_id.enable();\r\n          } else this.msg.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.msg.warning(\"General.FormNotValid\");\r\n  }\r\n\r\n  getMsgToEdit(whatsAppMsg: IGetExamWhatssAppMsgVM) {\r\n    this.myForm.patchValue(whatsAppMsg);\r\n    this.FormCtrls.whats_app_msg_id.setValue(whatsAppMsg.whatsAppMsgId);\r\n    this.FormCtrls.whats_app_msg_id.disable();\r\n    this.FormCtrls.FromGrade.setValue(whatsAppMsg.fromGrade);\r\n    this.FormCtrls.ToGrade.setValue(whatsAppMsg.toGrade);\r\n    console.log(whatsAppMsg);\r\n  }\r\n\r\n  openDeleateDialog(whatsAppMsg: IGetExamWhatssAppMsgVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: whatsAppMsg.msgTitle,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeWhatsApp(whatsAppMsg);\r\n      });\r\n  }\r\n\r\n  removeWhatsApp(whatsAppMsg: IGetExamWhatssAppMsgVM) {\r\n    this.whatsAppService\r\n      .deleteExamWhatsAppMsgById(whatsAppMsg.Id)\r\n      .subscribe((response: any) => {\r\n        if (response.returnValue == 1) {\r\n          //  console.log('deleted: ', response);\r\n          let deletedIndex = this.dataSource.data.findIndex(\r\n            (e) => e.Id == whatsAppMsg.Id\r\n          );\r\n          this.dataSource.data.splice(deletedIndex, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.getAvailableWhatsAppMsgToExam();\r\n          this.msg.success(\"whatsApp.MsgDeleted\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"whatsApp.whatsAppSettings\" | translate }}\r\n        <!-- Back to exams -->\r\n        <a\r\n          *ngIf=\"!IsTemplate\"\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/exams-setup/exam/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n\r\n        <!-- Back to templates -->\r\n        <a\r\n          *ngIf=\"IsTemplate\"\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/exams-setup/templates/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <!-- whatsApp msgId -->\r\n            <div class=\"col-lg-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"whatsApp.Messages\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"whats_app_msg_id\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let msg of availableWhatsAppMsg\"\r\n                    [value]=\"msg.msgId\"\r\n                  >\r\n                    <span [innerHTML]=\"msg.msgTitle\"></span>\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.whats_app_msg_id.invalid &&\r\n                    (FormCtrls.whats_app_msg_id.touched || Submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.whats_app_msg_id.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!--  From Grade    -->\r\n            <div class=\"col-lg-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"whatsApp.FromGrade\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"FromGrade\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FromGrade.invalid &&\r\n                    (FormCtrls.FromGrade.touched || Submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FromGrade.errors?.required ||\r\n                      FormCtrls.FromGrade.errors?.minusNum\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!-- To Grade  -->\r\n            <div class=\"col-lg-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"whatsApp.ToGrade\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"ToGrade\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.ToGrade.invalid &&\r\n                    (FormCtrls.ToGrade.touched || Submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.ToGrade.errors?.required ||\r\n                      FormCtrls.ToGrade.errors?.minusNum\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <mat-card-actions align=\"end\">\r\n            <button\r\n              (click)=\"addEditWhatAppMsg()\"\r\n              mat-raised-button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n            >\r\n              {{ \"General.Add\" | translate }}\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n\r\n        <!-- Start Exams points Table -->\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"whatsApp.WhatAppMsgs\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- msg Title -->\r\n            <ng-container matColumnDef=\"msgTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"whatsApp.Title\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.msgTitle }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- msg Body -->\r\n            <ng-container matColumnDef=\"msgBody\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"whatsApp.Body\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"msgBody\">\r\n                <span\r\n                  [innerHTML]=\"ele.msgBody\"\r\n                  [title]=\"ele.msgBody\"\r\n                  data-toggle=\"popover\"\r\n                  data-content=\"{{ ele.msgBody }}\"\r\n                  data-trigger=\"hover\"\r\n                  data-original-title=\"Hover Triggered\"\r\n                  class=\"msgBody contetnt\"\r\n                ></span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- msg FromGrade -->\r\n            <ng-container matColumnDef=\"FromGrade\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"whatsApp.FromGrade\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span [innerHTML]=\"ele.fromGrade\"></span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- msg ToGrade -->\r\n            <ng-container matColumnDef=\"ToGrade\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"whatsApp.ToGrade\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span [innerHTML]=\"ele.toGrade\"></span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <!-- <ng-container *ngFor=\"let fun of rowFunctions\"> -->\r\n                <!--   *ngIf=\"fun.functionName === 'Edit'\" -->\r\n                <!-- <a\r\n                  matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  mat-mini-fab\r\n                  color=\"primary\"\r\n                  class=\"mr-2\"\r\n                  (click)=\"getMsgToEdit(ele)\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </a> -->\r\n\r\n                <!--*ngIf=\"fun.functionName === 'Delete'\" -->\r\n                <button\r\n                  mat-mini-fab\r\n                  color=\"warn\"\r\n                  matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  class=\"mr-2\"\r\n                  (click)=\"openDeleateDialog(ele)\"\r\n                >\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n                <!-- </ng-container> -->\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10]\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ExamsRoutingModule } from \"./exams-routing.module\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { AddExamComponent } from \"./exams/add-exam/add-exam.component\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { QuestionsIndexComponent } from \"./questions-banck/questions-index/questions-index.component\";\r\nimport { AddQuestionComponent } from \"./questions-banck/add-question/add-question.component\";\r\nimport { ExamsIndexComponent } from \"./exams/exams-index/exams-index.component\";\r\nimport { AddSubQuestionComponent } from \"./exams/add-sub-question/add-sub-question.component\";\r\nimport { TemplatesIndexComponent } from \"./templates/templates-index/templates-index.component\";\r\nimport { AddTemplateComponent } from \"./templates/add-template/add-template.component\";\r\nimport { CorrectionIndexComponent } from \"./exam-correction/correction-index/correction-index.component\";\r\nimport { CorrectionDialogComponent } from \"./exam-correction/correction-dialog/correction-dialog.component\";\r\nimport { ExamPreviewComponent } from \"./exams/exam-preview/exam-preview.component\";\r\nimport { ExamsCustomePointsComponent } from \"./exams/exams-custome-points/exams-custome-points.component\";\r\nimport { TemplatesCustomePointsComponent } from \"./templates/templates-custome-points/templates-custome-points.component\";\r\nimport { UploadExamStudentGradesComponent } from \"./upload-exam-student-grades/upload-exam-student-grades.component\";\r\nimport { QuillModule } from \"ngx-quill\";\r\nimport { ExamsWhatsappComponent } from './exams-whatsapp/exams-whatsapp.component';\r\nimport { TemplateDetailsComponent } from './templates/template-details/template-details.component';\r\n//import { QuillConfigModule } from 'ngx-quill/config';\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExamsIndexComponent,\r\n    AddExamComponent,\r\n    AddSubQuestionComponent,\r\n    QuestionsIndexComponent,\r\n    AddQuestionComponent,\r\n    TemplatesIndexComponent,\r\n    AddTemplateComponent,\r\n    CorrectionIndexComponent,\r\n    CorrectionDialogComponent,\r\n    ExamPreviewComponent,\r\n    ExamsCustomePointsComponent,\r\n    TemplatesCustomePointsComponent,\r\n    UploadExamStudentGradesComponent,\r\n    ExamsWhatsappComponent,\r\n    TemplateDetailsComponent,\r\n  ],\r\n  imports: [\r\n    ExamsRoutingModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    NgxPaginationModule,\r\n    QuillModule.forRoot({\r\n      modules: {\r\n        syntax: true,\r\n        // toolbar: [\r\n        //   [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n        //   [\"blockquote\", \"code-block\"],\r\n\r\n        //   [{ header: 1 }, { header: 2 }], // custom button values\r\n        //   [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        //   [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n        //   [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n        //   [{ direction: \"rtl\" }], // text direction\r\n\r\n        //   [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n        //   [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n        //   [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n        //   [{ font: [] }],\r\n        //   [{ align: [] }],\r\n\r\n        //   [\"clean\"], // remove formatting button\r\n\r\n        //   //   [\"link\", \"image\", \"video\"], // link and image, video\r\n        // ],\r\n      },\r\n    }),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class ExamsModule {}\r\n","import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\nimport { DatePipe, Location } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { forkJoin, Observable } from \"rxjs\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { AddSubQuestionComponent } from \"../add-sub-question/add-sub-question.component\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport {\r\n  IExamResponseInDetails,\r\n  IAddEditExamModel,\r\n  IAddEditExamHeaderModel,\r\n} from \"app/dashboard/models/setup/exams-setup/addEditExam\";\r\nimport {\r\n  IExamGroupHeaderModel,\r\n  IExamModel,\r\n  IAddExamGroupHeaderModel,\r\n  IEditExamGroupHeaderModel,\r\n} from \"app/dashboard/models/setup/exams-setup/AddExamGroupHeader\";\r\nimport {\r\n  ICountrieDropModel,\r\n  IStageDropModel,\r\n  IEducationYearDropModel,\r\n  ISubjectDropModel,\r\n  IExamTypeModel,\r\n  IUnitModel,\r\n  ILessionModel,\r\n  IDiscountTypeModel,\r\n} from \"app/dashboard/models/setup/exams-setup/exam\";\r\nimport { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-exam\",\r\n  templateUrl: \"./add-exam.component.html\",\r\n  styleUrls: [\"./add-exam.component.scss\"],\r\n})\r\nexport class AddExamComponent implements OnInit {\r\n  functionId: number;\r\n  //  rowFunctions: IRowFunctionVM[];\r\n  rowFunctions = [\r\n    { functionName: \"EditGroup\" },\r\n    { functionName: \"DeleteGroup\" },\r\n    { functionName: \"addSubQuestion\" },\r\n  ];\r\n  EduCompId: any;\r\n  branchId: any;\r\n  countries: ICountrieDropModel[] = [];\r\n  stages: IStageDropModel[] = [];\r\n  educationYears: IEducationYearDropModel[] = [];\r\n  subjects: ISubjectDropModel[] = [];\r\n  teachers: teacherByEduCompId[];\r\n  examTypes: IExamTypeModel[] = [];\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n  discountTypes: IDiscountTypeModel[] = [];\r\n\r\n  examGroups: any[] = [];\r\n  examHeaders: any[] = [];\r\n  filteredExamGroups: Observable<any[]>;\r\n  filteredExamHeaders: Observable<any[]>;\r\n\r\n  GroupsHeadersList: IExamGroupHeaderModel[] = [];\r\n\r\n  examGroupHeaderIdToEdit: number = 0;\r\n  exam_ar_name: string;\r\n  myForm: FormGroup;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"questionNumber\",\r\n    \"questionType\",\r\n    \"question_title\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IExamGroupHeaderModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  GroupHeadersForm!: FormGroup;\r\n  submitted = false;\r\n  itemsCount: any;\r\n  GroupHeadsubmitted = false;\r\n  examId: number = 0;\r\n  editGroupHeaderMode: boolean = false;\r\n  isRepeatableExam: boolean = false;\r\n  isSendWhats: boolean = false;\r\n  examGroupHeaderId: any = 0;\r\n  get countryIdCtrl() {\r\n    return this.myForm.get(\"countryId\");\r\n  }\r\n  get stageIdCtrl() {\r\n    return this.myForm.get(\"stageId\");\r\n  }\r\n  get educationYearIdCtrl() {\r\n    return this.myForm.get(\"educationYearId\");\r\n  }\r\n  get subjectIdCtrl() {\r\n    return this.myForm.get(\"subjectId\");\r\n  }\r\n  get teacherUserIdCtrl() {\r\n    return this.myForm.get(\"teacherUserId\");\r\n  }\r\n  get examTypeIdCtrl() {\r\n    return this.myForm.get(\"examTypeId\");\r\n  }\r\n  get unitIdCtrl() {\r\n    return this.myForm.get(\"unitId\");\r\n  }\r\n  get lessionIdCtrl() {\r\n    return this.myForm.get(\"lessionId\");\r\n  }\r\n  get examNameCtrl() {\r\n    return this.myForm.get(\"examName\");\r\n  }\r\n  get examHoursCtrl() {\r\n    return this.myForm.get(\"examHours\");\r\n  }\r\n  get examMinutesCtrl() {\r\n    return this.myForm.get(\"examMinutes\");\r\n  }\r\n  get examPriceCtrl() {\r\n    return this.myForm.get(\"examPrice\");\r\n  }\r\n  get discountCtrl() {\r\n    return this.myForm.get(\"discount\");\r\n  }\r\n  get discountTypeCtrl() {\r\n    return this.myForm.get(\"discountType\");\r\n  }\r\n  get fromDateCtrl() {\r\n    return this.myForm.get(\"fromDate\");\r\n  }\r\n  get toDateCtrl() {\r\n    return this.myForm.get(\"toDate\");\r\n  }\r\n  get formHourCtrl() {\r\n    return this.myForm.get(\"formHour\");\r\n  }\r\n  get toHoursCtrl() {\r\n    return this.myForm.get(\"toHours\");\r\n  }\r\n  get resualtDateCtrl() {\r\n    return this.myForm.get(\"resualtDate\");\r\n  }\r\n  get resualtTimeCtrl() {\r\n    return this.myForm.get(\"resualtTime\");\r\n  }\r\n  get canSellIndividuallyCtrl() {\r\n    return this.myForm.get(\"canSellIndividually\");\r\n  }\r\n  get isRepeatableCtrl() {\r\n    return this.myForm.get(\"isRepeatable\");\r\n  }\r\n  get repeatNumbersCtrl() {\r\n    return this.myForm.get(\"repeatNumbers\");\r\n  }\r\n  get repeatingPriceCtrl() {\r\n    return this.myForm.get(\"repeatingPrice\");\r\n  }\r\n  get hasCustomDiscountCtrl() {\r\n    return this.myForm.get(\"hasCustomDiscount\");\r\n  }\r\n  get sendWhatsAppMsgCtrl() {\r\n    return this.myForm.get(\"sendWhatsAppMsg\");\r\n  }\r\n  get examGroupCtrl() {\r\n    return this.GroupHeadersForm.get(\"examGroup\");\r\n  }\r\n  get examHeaderCtrl() {\r\n    return this.GroupHeadersForm.get(\"examHeader\");\r\n  }\r\n  get examContentCtrl() {\r\n    return this.GroupHeadersForm.get(\"examContent\");\r\n  }\r\n  get isPublishCtrl() {\r\n    return this.myForm.get(\"isPublish\");\r\n  }\r\n\r\n  constructor(\r\n    public location: Location,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private examService: ExamsService,\r\n    // private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private msg: MessagesService,\r\n    private generalService: GeneralService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.examId = Number(params.get(\"examId\"));\r\n      if (this.examId > 0) {\r\n        this.getExamById();\r\n        this.getAllGroupHeaderByExamId();\r\n      }\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      countryId: [\"\"],\r\n      stageId: [\"\"],\r\n      educationYearId: [\"\"],\r\n      subjectId: [\"\", [Validators.required]],\r\n      teacherUserId: [\"\", [Validators.required]],\r\n      examTypeId: [\"\", [Validators.required]],\r\n      unitId: [\"\"],\r\n      lessionId: [\"\"],\r\n      examName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      examHours: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      examMinutes: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      examPrice: [0, [Validators.required, CustomeValidator.minusNum]],\r\n      discount: [\"\"],\r\n      discountType: [\"\"],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n      formHour: [\"\"],\r\n      toHours: [\"\"],\r\n      resualtDate: [\"\"],\r\n      resualtTime: [\"\"],\r\n      canSellIndividually: [true, Validators.required],\r\n      isRepeatable: [false, Validators.required],\r\n      repeatNumbers: [\"\"],\r\n      repeatingPrice: [0],\r\n      hasCustomDiscount: [false, Validators.required],\r\n      sendWhatsAppMsg: [false, Validators.required],\r\n      isPublish: [0],\r\n    });\r\n\r\n    this.GroupHeadersForm = this.fb.group({\r\n      examGroup: [\"\", Validators.required],\r\n      examHeader: [\"\", Validators.required],\r\n      examContent: [\"\"],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    // this.stageIdCtrl?.disable();\r\n    // this.educationYearIdCtrl?.disable();\r\n    // this.subjectIdCtrl?.disable();\r\n    // this.teacherUserIdCtrl?.disable();\r\n    // this.unitIdCtrl?.disable();\r\n    // this.lessionIdCtrl?.disable();\r\n\r\n    this.getAllExamTypes();\r\n    this.getAllQuestionGroups();\r\n    this.getAllQuestionHeaders();\r\n\r\n    this.examTypeValidator();\r\n    this.RepeatableValidator();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.examId > 0) this.getExamById();\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  // filter question group\r\n  private filter_question_group(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examGroups.filter((option) =>\r\n      option.question_group_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  // filter question header\r\n  private filter_question_header(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examHeaders.filter((option) =>\r\n      option.question_head_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  getExamById() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getExamById<IExamResponseInDetails>(this.examId)\r\n      .subscribe((response) => {\r\n        // console.log(\"getExamById\", response);\r\n        if (response) {\r\n          this.stageIdCtrl?.enable();\r\n          this.educationYearIdCtrl?.enable();\r\n          this.subjectIdCtrl?.enable();\r\n          this.teacherUserIdCtrl?.enable();\r\n          this.unitIdCtrl?.enable();\r\n          this.lessionIdCtrl?.enable();\r\n          this.toHoursCtrl?.setValue(response?.toHour);\r\n          this.isPublishCtrl?.setValue(response?.isPublish);\r\n          this.discountCtrl?.setValue(response?.Discount);\r\n          this.examNameCtrl?.setValue(response?.exam_ar_name);\r\n          this.exam_ar_name = response?.exam_ar_name;\r\n          this.formHourCtrl?.setValue(response?.fromHour);\r\n          this.examPriceCtrl?.setValue(response?.price);\r\n          this.resualtTimeCtrl?.setValue(response?.ResultTime);\r\n          this.discountTypeCtrl?.setValue(response?.DiscountType);\r\n          this.isRepeatableCtrl?.setValue(response?.repeatableExam);\r\n          this.isRepeatableExam = response?.repeatableExam;\r\n          this.repeatNumbersCtrl?.setValue(response?.repeatableExam_Count);\r\n          this.sendWhatsAppMsgCtrl?.setValue(response?.SendWhatsApp);\r\n          this.isSendWhats = response?.SendWhatsApp;\r\n          this.hasCustomDiscountCtrl?.setValue(response?.Discount > 0);\r\n          this.canSellIndividuallyCtrl?.setValue(\r\n            response?.Individually_Purchased\r\n          );\r\n          this.countryIdCtrl?.setValue(response.countryId);\r\n          // this.examTypeIdCtrl?.setValue(response.examTypeId);\r\n          this.repeatingPriceCtrl?.setValue(response.StudentRepeatExamCost);\r\n\r\n          let exam_minute = response.exam_period_minute % 60;\r\n          let exam_hour = (response.exam_period_minute - exam_minute) / 60;\r\n          this.examMinutesCtrl?.setValue(exam_minute);\r\n          this.examHoursCtrl?.setValue(exam_hour);\r\n\r\n          if (response.Lesson_ID != null) this.examTypeIdCtrl?.setValue(1);\r\n          if (response?.Unit_ID != null && response.Lesson_ID == null)\r\n            this.examTypeIdCtrl?.setValue(2);\r\n\r\n          if (\r\n            response?.Subject_ID != null &&\r\n            response?.Unit_ID == null &&\r\n            response.Lesson_ID == null\r\n          )\r\n            this.examTypeIdCtrl?.setValue(3);\r\n\r\n          if (\r\n            response?.Subject_ID == null &&\r\n            response?.Unit_ID == null &&\r\n            response.Lesson_ID == null &&\r\n            response.quiz == 1\r\n          )\r\n            this.examTypeIdCtrl?.setValue(4);\r\n\r\n          this.fromDateCtrl?.setValue(response.Avilable_Date_From);\r\n          this.toDateCtrl?.setValue(response.Avilable_Date_To);\r\n          this.resualtDateCtrl?.setValue(response.ResultDate);\r\n          this.countryIdCtrl?.setValue(1);\r\n          this.stageIdCtrl?.setValue(response.stageId);\r\n          this.educationYearIdCtrl?.setValue(response.eduYearId);\r\n          this.subjectIdCtrl?.setValue(response?.main_subject_id);\r\n          this.teacherUserIdCtrl?.setValue(response?.teacherUserId);\r\n          this.unitIdCtrl?.setValue(response?.Unit_ID);\r\n          this.lessionIdCtrl?.setValue(response?.Lesson_ID);\r\n          this.stageIdCtrl?.setValue(response.stageId);\r\n          this.educationYearIdCtrl?.setValue(response.eduYearId);\r\n          this.teacherUserIdCtrl?.setValue(response?.teacherUserId);\r\n          this.unitIdCtrl?.setValue(response?.Unit_ID);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllGroupHeaderByExamId() {\r\n    this.examService\r\n      .getAllGroupHeaderByExamId<IExamGroupHeaderModel>(this.examId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"groupsHeadersLit : \", response);\r\n          this.GroupsHeadersList = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.itemsCount = response.length;\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllQuestionGroups() {\r\n    this.examService.getAllQuestionGroups<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examGroups = response;\r\n        //  console.log(\"examGroups\", this.examGroups);\r\n        this.filteredExamGroups = this.examGroupCtrl.valueChanges.pipe(\r\n          startWith(\"\"),\r\n          map((value: any) => this.filter_question_group(value || \"\"))\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllQuestionHeaders() {\r\n    this.examService.getAllQuestionHeaders<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examHeaders = response;\r\n        this.filteredExamHeaders = this.examHeaderCtrl.valueChanges.pipe(\r\n          startWith(\"\"),\r\n          map((value: any) => this.filter_question_header(value || \"\"))\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    // todo .. check for mandatory firlds\r\n\r\n    let exam: IAddEditExamModel = {\r\n      id: this.examId,\r\n      Avilable_Date_From: this.datePipe.transform(this.fromDateCtrl.value),\r\n      Avilable_Date_To: this.datePipe.transform(this.toDateCtrl.value),\r\n      CustomDiscountApplied: this.hasCustomDiscountCtrl?.value,\r\n      Discount: this.discountCtrl?.value,\r\n      DiscountType: this.discountTypeCtrl?.value,\r\n      EduCompId: this.EduCompId,\r\n      Individually_Purchased: this.canSellIndividuallyCtrl?.value,\r\n      ResultDate: this.datePipe.transform(this.resualtDateCtrl.value),\r\n      ResultTime: this.resualtTimeCtrl?.value,\r\n      SendWhatsApp: this.sendWhatsAppMsgCtrl?.value,\r\n      StudentRepeatExamCost: this.repeatingPriceCtrl?.value,\r\n      exam_ar_name: this.examNameCtrl?.value,\r\n      fromHour: this.formHourCtrl?.value,\r\n      lesson_ID: this.lessionIdCtrl?.value,\r\n      price: this.examPriceCtrl?.value,\r\n      repeatableExam: this.isRepeatableCtrl?.value,\r\n      repeatableExam_Count: this.repeatNumbersCtrl?.value,\r\n      subject_ID: this.subjectIdCtrl?.value,\r\n      teacherUserId: this.teacherUserIdCtrl?.value,\r\n      teacher_subject_id: this.subjectIdCtrl?.value,\r\n      toHour: this.toHoursCtrl?.value,\r\n      unit_ID: this.unitIdCtrl?.value,\r\n      exam_hour: this.examHoursCtrl?.value,\r\n      exam_minute: this.examMinutesCtrl?.value,\r\n      isPublish: this.isPublishCtrl?.value,\r\n    };\r\n\r\n    let toAddEdit: IAddEditExamHeaderModel = {\r\n      exam_hour: this.examHoursCtrl?.value,\r\n      exam_minute: this.examMinutesCtrl?.value,\r\n      exam_type_id: this.examTypeIdCtrl?.value,\r\n      exam: exam,\r\n    };\r\n\r\n    // console.log(\"toAdd \", toAddEdit);\r\n\r\n    // if exam id = 0 the end point will add >> if the exam id > 0 the end point will edit\r\n    this.addExam(toAddEdit);\r\n  }\r\n\r\n  addExam(toAddEdit: IAddEditExamHeaderModel) {\r\n    let validGroupHeadersForm = this.GroupHeadersForm.valid;\r\n    this.submitted = true;\r\n    if (this.examId == 0 && !validGroupHeadersForm) {\r\n      this.GroupHeadsubmitted = true;\r\n    } else {\r\n      if (\r\n        this.hasCustomDiscountCtrl?.value == true &&\r\n        this.repeatNumbersCtrl.value <= 0\r\n      ) {\r\n        this.msg.warning(\"يجب ادخال عدد مرات التكرار\");\r\n        return;\r\n      }\r\n\r\n      if (\r\n        this.hasCustomDiscountCtrl?.value == true &&\r\n        this.repeatingPriceCtrl.value < 0\r\n      ) {\r\n        this.msg.warning(\"يجب ادخال سعر تجديد الامتحان \");\r\n        return;\r\n      }\r\n      if (this.myForm.valid) {\r\n        this.spinner.show();\r\n        this.examService\r\n          .addExam<IAddEditExamHeaderModel, any>(toAddEdit)\r\n          .subscribe((response) => {\r\n            //  console.log('addExam', response);\r\n            if (response.returnValue == 200 && response.examId > 0) {\r\n              //  console.log(\"addExam\", response);\r\n              this.examId = response.examId;\r\n              this.router.navigate([], {\r\n                queryParams: {\r\n                  examId: response.examId,\r\n                },\r\n                queryParamsHandling: \"merge\",\r\n              });\r\n              this.onAddExamGroupHeader();\r\n              this.examId == 0\r\n                ? this.msg.success(\"General.AddSuccessfully\")\r\n                : this.msg.success(\"General.UpdateSuccessfully\");\r\n\r\n              this.submitted = false;\r\n            }\r\n            this.spinner.hide();\r\n          });\r\n      } else this.msg.error(\"General.FormNotValid\");\r\n    }\r\n  }\r\n\r\n  onAddExamGroupHeader() {\r\n    // let sameGroupWithSameHeader = this.GroupsHeadersList.find(\r\n    //   (gh) =>\r\n    //     gh.group_name == this.examGroupCtrl?.value &&\r\n    //     gh.head_name == this.examHeaderCtrl?.value\r\n    // );\r\n    let sameGroupWithSameHeader = this.dataSource?.data?.find(\r\n      (gh) =>\r\n        gh.group_name == this.examGroupCtrl?.value &&\r\n        gh.head_name == this.examHeaderCtrl?.value\r\n    );\r\n\r\n    if (sameGroupWithSameHeader) {\r\n      this.msg.info(\"Cannot add the same header with same group\");\r\n      return;\r\n    }\r\n\r\n    let tempExam: IExamModel = {\r\n      id: this.examId,\r\n    };\r\n\r\n    let ToAddExamGroupHeader: IAddExamGroupHeaderModel = {\r\n      exam_question_group_text: this.examGroupCtrl?.value,\r\n      exam_question_head_title: this.examContentCtrl?.value,\r\n      exam_question_head_text: this.examHeaderCtrl?.value,\r\n      exam: tempExam,\r\n    };\r\n\r\n    if (this.GroupHeadersForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addExamGroupHeader<IAddExamGroupHeaderModel, any>(ToAddExamGroupHeader)\r\n        .subscribe((headerResponse) => {\r\n          if (headerResponse) {\r\n            //  console.log('addExamGroupHeader', headerResponse);\r\n            this.getAllGroupHeaderByExamId();\r\n            this.msg.success(\"General.AddSuccessfully\");\r\n            let tempExcamGroupHeader = {\r\n              Id: headerResponse.exam_question_head_id,\r\n              group_name: this.examGroupCtrl?.value,\r\n              head_name: this.examHeaderCtrl?.value,\r\n              question_title: this.examContentCtrl?.value,\r\n            };\r\n\r\n            //   this.GroupsHeadersList.push(tempExcamGroupHeader);\r\n\r\n            // console.log(\"this.GroupsHeadersList\", this.GroupsHeadersList);\r\n\r\n            this.examContentCtrl?.setValue(null);\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else {\r\n      if (this.examId == 0) this.msg.error(\"General.FormNotValid\");\r\n    }\r\n  }\r\n\r\n  getExamHeadById(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.editGroupHeaderMode = true;\r\n    this.examGroupHeaderIdToEdit = examGroupHeader.id;\r\n    this.examGroupCtrl?.setValue(examGroupHeader?.questionNumber);\r\n    this.examContentCtrl?.setValue(examGroupHeader?.question_title);\r\n    this.examHeaderCtrl?.setValue(examGroupHeader?.questionType);\r\n  }\r\n\r\n  editExamGroupHead() {\r\n    let toEdit: IEditExamGroupHeaderModel = {\r\n      exam_question_head_id: this.examGroupHeaderIdToEdit,\r\n      group: this.examGroupCtrl?.value,\r\n      head: this.examHeaderCtrl?.value,\r\n      title: this.examContentCtrl?.value,\r\n    };\r\n\r\n    // console.log('toEdit', toEdit);\r\n    this.spinner.show();\r\n    this.examService\r\n      .editExamGroupHeader<IEditExamGroupHeaderModel, any>(toEdit)\r\n      .subscribe((editResponse) => {\r\n        if (editResponse) {\r\n          //   console.log('editResponse', editResponse);\r\n\r\n          let toReplace = this.dataSource.data.find(\r\n            (gh) => gh.id == this.examGroupHeaderIdToEdit\r\n          );\r\n\r\n          if (toReplace) {\r\n            toReplace.questionNumber = toEdit.group;\r\n            toReplace.questionType = toEdit.head;\r\n            toReplace.question_title = this.examContentCtrl?.value;\r\n          }\r\n\r\n          this.editGroupHeaderMode = false;\r\n          this.examContentCtrl?.setValue(null);\r\n          this.msg.success(\"General.UpdateSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamGroupHead(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.spinner.show();\r\n    this.examService\r\n      .deleteExamGroupHeader(examGroupHeader.id)\r\n      .subscribe((deleteResponse: any) => {\r\n        // console.log('deleteResponse', deleteResponse);\r\n        if (deleteResponse.returnValue == 200) {\r\n          let todeleteIndex = this.dataSource.data.findIndex(\r\n            (gh) => gh == examGroupHeader\r\n          );\r\n\r\n          this.dataSource.data.splice(todeleteIndex, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"تم الحذف\");\r\n        } else this.msg.error(deleteResponse.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(examGroupHeader: IExamGroupHeaderModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: examGroupHeader.questionNumber,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeExamGroupHead(examGroupHeader);\r\n      });\r\n  }\r\n\r\n  addSubQuestionDialog(groupHeader: IExamGroupHeaderModel): void {\r\n    this.dialog\r\n      .open(AddSubQuestionComponent, {\r\n        data: {\r\n          examId: this.examId,\r\n          examGroupHeaderId: groupHeader.id,\r\n          subjectId: this.subjectIdCtrl.value,\r\n        },\r\n        minHeight: \"96vh\",\r\n        minWidth: \"70vw\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) {\r\n        }\r\n      });\r\n  }\r\n\r\n  addSubQuestion(examGroupHeaderId: number) {\r\n    this.examGroupHeaderId = examGroupHeaderId;\r\n    let obj: any = {\r\n      examGroupHeaderId: examGroupHeaderId,\r\n      subjectId: this.subjectIdCtrl?.value,\r\n      unitId: this.unitIdCtrl?.value,\r\n      lessonId: this.lessionIdCtrl?.value,\r\n    };\r\n  }\r\n\r\n  getAllExamTypes() {\r\n    this.examService\r\n      .getAllExamType<IExamTypeModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.examTypes = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectExamType() {\r\n    //  console.log('exam type: ', this.examTypeIdCtrl?.value);\r\n\r\n    if (this.examTypeIdCtrl?.value == 1) {\r\n      this.unitIdCtrl?.enable();\r\n      this.lessionIdCtrl?.enable();\r\n    } else if (this.examTypeIdCtrl?.value == 2) {\r\n      this.unitIdCtrl?.enable();\r\n      this.lessionIdCtrl?.disable();\r\n    } else {\r\n      this.unitIdCtrl?.disable();\r\n      this.lessionIdCtrl?.disable();\r\n    }\r\n  }\r\n\r\n  examTypeValidator() {\r\n    let examTypeId = this.examTypeIdCtrl?.value;\r\n    if (examTypeId == 1) {\r\n      this.unitIdCtrl?.setValidators([Validators.required]);\r\n      this.lessionIdCtrl?.setValidators([Validators.required]);\r\n    } else if (examTypeId == 2) {\r\n      this.unitIdCtrl?.setValidators([Validators.required]);\r\n      this.lessionIdCtrl?.clearValidators();\r\n      this.lessionIdCtrl?.reset();\r\n    } else {\r\n      this.unitIdCtrl?.clearValidators();\r\n      this.unitIdCtrl?.reset();\r\n      this.lessionIdCtrl?.clearValidators();\r\n      this.lessionIdCtrl?.reset();\r\n    }\r\n    this.unitIdCtrl?.updateValueAndValidity();\r\n    this.lessionIdCtrl?.updateValueAndValidity();\r\n  }\r\n\r\n  RepeatableValidator() {\r\n    let CustomDiscount = this.hasCustomDiscountCtrl?.value;\r\n    if (CustomDiscount == true) {\r\n      this.repeatNumbersCtrl?.setValidators([Validators.required]);\r\n      this.repeatingPriceCtrl?.setValidators([Validators.required]);\r\n    } else if (CustomDiscount == false) {\r\n      this.repeatNumbersCtrl?.clearValidators();\r\n      this.repeatingPriceCtrl?.clearValidators();\r\n      this.repeatNumbersCtrl?.reset();\r\n      this.repeatingPriceCtrl?.reset();\r\n    }\r\n    this.repeatNumbersCtrl?.updateValueAndValidity();\r\n    this.repeatingPriceCtrl?.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- Add Exam -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"examId == 0\"> {{ \"Navbar.newexam\" | translate }} </span>\r\n        <span *ngIf=\"examId > 0\">\r\n          {{ \"labels.EditExam\" | translate }} - {{ exam_ar_name }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n\r\n                <!-- Stages Dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-educational-stage-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"stageIdCtrl\"\r\n                  >\r\n                  </app-educational-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Years dropdown-->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <educational-year-by-stage-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"educationYearIdCtrl\"\r\n                    [stageControl]=\"stageIdCtrl\"\r\n                  >\r\n                  </educational-year-by-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Cources [subjects] dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <cources-by-year-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"subjectIdCtrl\"\r\n                    [yearControl]=\"educationYearIdCtrl\"\r\n                  >\r\n                  </cources-by-year-dropdown>\r\n                </div>\r\n\r\n                <!-- Exam Type dropdown -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Material.ExamType\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"\r\n                        onSelectExamType(); examTypeValidator()\r\n                      \"\r\n                      formControlName=\"examTypeId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"Material.ExamType\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let type of examTypes\"\r\n                        [value]=\"type.exam_type_id\"\r\n                      >\r\n                        {{ type.exam_ar_type_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examTypeIdCtrl?.invalid &&\r\n                        (examTypeIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examTypeIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Units dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <units-by-course-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"unitIdCtrl\"\r\n                    [courceControl]=\"subjectIdCtrl\"\r\n                  >\r\n                  </units-by-course-dropdown>\r\n                </div>\r\n\r\n                <!-- Lesson dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <lessons-by-unit-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"lessionIdCtrl\"\r\n                    [unitControl]=\"unitIdCtrl\"\r\n                  >\r\n                  </lessons-by-unit-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamNm\" | translate }}</mat-label>\r\n                    <input matInput formControlName=\"examName\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        lessionIdCtrl?.invalid &&\r\n                        (lessionIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examNameCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"examNameCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamHours\" | translate }}</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"examHours\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examHoursCtrl?.invalid &&\r\n                        (examHoursCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examHoursCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamMinute\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"examMinutes\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examMinutesCtrl?.invalid &&\r\n                        (examMinutesCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examMinutesCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamPrice\" | translate }} </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"examPrice\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examPriceCtrl?.invalid &&\r\n                        (examPriceCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examPriceCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Discount\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"discount\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.DiscountType\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"discountType\">\r\n                      <mat-option value=\"\"\r\n                        >{{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option value=\"1\">عام</mat-option>\r\n                      <mat-option value=\"2\">خاص</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.FromTime\" | translate }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"formHour\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ToTime\" | translate }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"toHours\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- resualtDate -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ExamResultDate\" | translate }}</mat-label\r\n                    >\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"resualtDate\"\r\n                      formControlName=\"resualtDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"resualtDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #resualtDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.examResultTime\" | translate\r\n                    }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"resualtTime\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- can Sell Individually -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.SellExamOnly\" | translate }}\r\n                  </mat-label>\r\n                  <mat-radio-group\r\n                    formControlName=\"canSellIndividually\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- isRepeatable -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.RepeatedExam\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group formControlName=\"isRepeatable\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        (change)=\"RepeatableValidator()\"\r\n                      >\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        (change)=\"RepeatableValidator()\"\r\n                      >\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- send WhatsApp Msg -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group\r\n                    formControlName=\"sendWhatsAppMsg\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- Custom Discount -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.CustomDiscount\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group\r\n                    formControlName=\"hasCustomDiscount\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"isRepeatableCtrl?.value == true\">\r\n                  <div class=\"col-md-6 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"labels.repeatNumbers\" | translate\r\n                      }}</mat-label>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        formControlName=\"repeatNumbers\"\r\n                      />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          repeatNumbersCtrl?.invalid &&\r\n                          (repeatNumbersCtrl?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"repeatNumbersCtrl?.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span *ngIf=\"repeatNumbersCtrl?.errors?.bigZero\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"labels.repeatingPrice\" | translate\r\n                      }}</mat-label>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        formControlName=\"repeatingPrice\"\r\n                      />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          repeatingPriceCtrl?.invalid &&\r\n                          (repeatingPriceCtrl?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"repeatingPriceCtrl?.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span *ngIf=\"repeatingPriceCtrl?.errors?.minusNum\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" *ngIf=\"examId > 0\">\r\n        <button\r\n          *ngIf=\"examId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- START: ADD/EDIT EXAM GROUP AND HEADER -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.addGxamGroups\" | translate }}</mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"GroupHeadersForm\" class=\"form-horizontal\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.َQuestionNumber\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examGroup\"\r\n                  [matAutocomplete]=\"autoExamGroup\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamGroup=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamGroups | async\"\r\n                    [value]=\"val.question_group_ar_name\"\r\n                  >\r\n                    {{ val.question_group_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    examGroupCtrl?.invalid &&\r\n                    (examGroupCtrl?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"examGroupCtrl?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.QuestionHeader\" | translate }}</mat-label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examHeader\"\r\n                  [matAutocomplete]=\"autoExamHeader\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamHeader=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamHeaders | async\"\r\n                    [value]=\"val.question_head_ar_name\"\r\n                  >\r\n                    {{ val.question_head_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    examHeaderCtrl?.invalid &&\r\n                    (examHeaderCtrl?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"examHeaderCtrl?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{\r\n                  \"labels.َQuestionContent\" | translate\r\n                }}</mat-label>\r\n                <textarea\r\n                  matInput\r\n                  formControlName=\"examContent\"\r\n                  cols=\"20\"\r\n                ></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"examId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"GroupsHeadersList.length > 0 && !editGroupHeaderMode\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onAddExamGroupHeader()\"\r\n        >\r\n          {{ \"labels.AddQuestion\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"editGroupHeaderMode\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"editExamGroupHead()\"\r\n        >\r\n          {{ \"labels.UpdateQuestion\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"GroupsHeadersList.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.QuestionsGroup\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"mat-elevation-z8 f-w\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <!-- # Column -->\r\n                <ng-container matColumnDef=\"#\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n                  <td mat-cell *matCellDef=\"let i = index\">\r\n                    {{ i + 1 }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- questionNumber Column -->\r\n                <ng-container matColumnDef=\"questionNumber\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionNumber\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionNumber }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- questionType Column -->\r\n                <ng-container matColumnDef=\"questionType\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.QuestionHeader\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionType }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- question_title Column -->\r\n                <ng-container matColumnDef=\"question_title\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionContent\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.question_title }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- actions Column -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    actions\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let groupHeader\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'EditGroup'\"\r\n                        (click)=\"getExamHeadById(groupHeader)\"\r\n                        class=\"success p-0\"\r\n                        matTooltip=\"Edit Group\"\r\n                      >\r\n                        <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'DeleteGroup'\"\r\n                        (click)=\"openDeleateDialog(groupHeader)\"\r\n                        class=\"danger p-0\"\r\n                        matTooltip=\"Delete Group\"\r\n                      >\r\n                        <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'addSubQuestion'\"\r\n                        (click)=\"addSubQuestionDialog(groupHeader)\"\r\n                        class=\"info p-0\"\r\n                        matTooltip=\"Add sub question\"\r\n                      >\r\n                        <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                  mat-row\r\n                  *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                  <td class=\"mat-cell\" colspan=\"4\">\r\n                    No data matching the filter \"{{ input.value }}\"\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n\r\n              <mat-paginator\r\n                [pageSizeOptions]=\"[10]\"\r\n                showFirstLastButtons\r\n                aria-label=\"Select page of users\"\r\n              >\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {\r\n  examQuestionImage,\r\n  IAddEditQuestionMcqModel,\r\n  IAddEditQuestionTextModel,\r\n  IAddedTextExamResponse,\r\n  IMcqChoices,\r\n  IQuestionDetailsForEditModel,\r\n  IQuestionForGridModel,\r\n} from \"app/dashboard/models/setup/exams-setup/AddEditQuestionModel\";\r\nimport { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IfileVM } from \"app/shared/models/general/general\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-sub-question\",\r\n  templateUrl: \"./add-sub-question.component.html\",\r\n  styleUrls: [\"./add-sub-question.component.scss\"],\r\n})\r\nexport class AddSubQuestionComponent implements OnInit {\r\n  examId: number;\r\n  examGroupHeaderId: number;\r\n  subjectId: number;\r\n  // @Input(\"examId\") examId: any;\r\n  // @Input(\"examGroupHeaderId\") examGroupHeaderId: any = 0;\r\n  // @Input(\"subjectId\") subjectId: any = 0;\r\n  unitId: number = 0;\r\n  lessonId: number = 0;\r\n  questionsInGrid: IQuestionForGridModel[] = [];\r\n\r\n  questionId: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  educationCompanyId: any;\r\n  oneIsCorrect: boolean = false;\r\n  twoIsCorrect: boolean = false;\r\n  threeIsCorrect: boolean = false;\r\n  fourIsCorrect: boolean = false;\r\n  questionFile: any = null;\r\n  answerOneFile: any = null;\r\n  answerTwoFile: any = null;\r\n  answerThreeFile: any = null;\r\n  answerFourFile: any = null;\r\n  perfectAnswerAttach_preview: any = null;\r\n\r\n  get mainQuestionCtrl() {\r\n    return this.myForm.get(\"mainQuestion\");\r\n  }\r\n\r\n  get questionTypeIdCtrl() {\r\n    return this.myForm.get(\"questionTypeId\");\r\n  }\r\n\r\n  get questionImageCtrl() {\r\n    return this.myForm.get(\"questionImage\");\r\n  }\r\n\r\n  get questionTextCtrl() {\r\n    return this.myForm.get(\"exam_question_text\");\r\n  }\r\n\r\n  get questionPerfectAnswerCtrl() {\r\n    return this.myForm.get(\"questionPerfectAnswer\");\r\n  }\r\n\r\n  get perfect_answer_attachCtrl() {\r\n    return this.myForm.get(\"perfect_answer_attach\");\r\n  }\r\n\r\n  get questionMarkCtrl() {\r\n    return this.myForm.get(\"questionMark\");\r\n  }\r\n\r\n  get answerOneIdCtrl() {\r\n    return this.myForm.get(\"answerOneId\");\r\n  }\r\n\r\n  get answerOneCtrl() {\r\n    return this.myForm.get(\"answerOne\");\r\n  }\r\n\r\n  get answerOneIsCorrectCtrl() {\r\n    return this.myForm.get(\"answerOneIsCorrect\");\r\n  }\r\n\r\n  get answerOneImageCtrl() {\r\n    return this.myForm.get(\"answerOneImage\");\r\n  }\r\n\r\n  get answerTwoIdCtrl() {\r\n    return this.myForm.get(\"answerTwoId\");\r\n  }\r\n\r\n  get answerTwoCtrl() {\r\n    return this.myForm.get(\"answerTwo\");\r\n  }\r\n\r\n  get answerTwoIsCorrectCtrl() {\r\n    return this.myForm.get(\"answerTwoIsCorrect\");\r\n  }\r\n\r\n  get answerTwoImageCtrl() {\r\n    return this.myForm.get(\"answerTwoImage\");\r\n  }\r\n\r\n  get answerThreeIdCtrl() {\r\n    return this.myForm.get(\"answerThreeId\");\r\n  }\r\n\r\n  get answerThreeCtrl() {\r\n    return this.myForm.get(\"answerThree\");\r\n  }\r\n\r\n  get answerThreeIsCorrectCtrl() {\r\n    return this.myForm.get(\"answerThreeIsCorrect\");\r\n  }\r\n\r\n  get answerThreeImageCtrl() {\r\n    return this.myForm.get(\"answerThreeImage\");\r\n  }\r\n\r\n  get answerFourIdCtrl() {\r\n    return this.myForm.get(\"answerFourId\");\r\n  }\r\n\r\n  get answerFourCtrl() {\r\n    return this.myForm.get(\"answerFour\");\r\n  }\r\n\r\n  get answerFourIsCorrectCtrl() {\r\n    return this.myForm.get(\"answerFourIsCorrect\");\r\n  }\r\n\r\n  get answerFourImageCtrl() {\r\n    return this.myForm.get(\"answerFourImage\");\r\n  }\r\n\r\n  get answerOneRemove_imageCtrl() {\r\n    return this.myForm.get(\"answerOneRemove_image\");\r\n  }\r\n\r\n  get answerTwoRemove_imageCtrl() {\r\n    return this.myForm.get(\"answerTwoRemove_image\");\r\n  }\r\n\r\n  get answerThreeRemove_imageCtrl() {\r\n    return this.myForm.get(\"answerThreeRemove_image\");\r\n  }\r\n\r\n  get answerFourRemove_imageCtrl() {\r\n    return this.myForm.get(\"answerFourRemove_image\");\r\n  }\r\n\r\n  get questionImageRemove_imageCtrl() {\r\n    return this.myForm.get(\"remove_image\");\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private examService: ExamsService,\r\n    public authserv: AuthService,\r\n    public toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private uploadFileService: UploadFileService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.examId = data.examId;\r\n    this.examGroupHeaderId = data.examGroupHeaderId;\r\n    this.subjectId = data.subjectId;\r\n    if (this.examGroupHeaderId != 0) this.getAllQuestionsByHeadId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      mainQuestion: [\"\"],\r\n      questionTypeId: [\"\", Validators.required],\r\n      questionImage: [\"\"],\r\n      remove_image: [false],\r\n      // unitId: [\"\"],\r\n      // lessionId: [\"\"],\r\n      exam_question_text: [\"\"],\r\n      questionPerfectAnswer: [\"\"],\r\n      perfect_answer_attach: [\"\"],\r\n      questionMark: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      answerOneId: [\"\"],\r\n      answerOne: [\"\"],\r\n      answerOneIsCorrect: [],\r\n      answerOneImage: [\"\"],\r\n      answerTwoId: [\"\"],\r\n      answerTwo: [\"\"],\r\n      answerTwoIsCorrect: [],\r\n      answerTwoImage: [\"\"],\r\n      answerThreeId: [\"\"],\r\n      answerThree: [\"\"],\r\n      answerThreeIsCorrect: [],\r\n      answerThreeImage: [\"\"],\r\n      answerFourId: [\"\"],\r\n      answerFour: [\"\"],\r\n      answerFourIsCorrect: [],\r\n      answerFourImage: [\"\"],\r\n      answerOneRemove_image: [false],\r\n      answerTwoRemove_image: [false],\r\n      answerThreeRemove_image: [false],\r\n      answerFourRemove_image: [false],\r\n    });\r\n    //remove_image: d.remove_image,\r\n    this.educationCompanyId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  //get all question for this header\r\n  getAllQuestionsByHeadId() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getAllQuestionsByHeadId<IQuestionForGridModel[]>(this.examGroupHeaderId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"getAllQuestionsByHeadId\", response);\r\n          this.questionsInGrid = [];\r\n          this.questionsInGrid = response;\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // مقالي\r\n    if (this.questionTypeIdCtrl?.value == 1) {\r\n      let image: examQuestionImage = this.questionFile || null;\r\n      let questionImagePath = this.questionImageCtrl;\r\n      let toAddEdit: IAddEditQuestionTextModel = {\r\n        exam_question_main_question: this.mainQuestionCtrl?.value,\r\n        exam_question_mark: this.questionMarkCtrl?.value,\r\n        exam_question_perfect_answer: this.questionPerfectAnswerCtrl?.value,\r\n        perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n        exam_question_text: this.questionTextCtrl?.value,\r\n        exam_question_type_id: this.questionTypeIdCtrl?.value,\r\n        exam_selected_question_head_id: this.examGroupHeaderId,\r\n        exam_selected_subject_id: this.subjectId,\r\n        exam_question_image: image,\r\n        remove_image: this.questionImageRemove_imageCtrl?.value,\r\n        exam_question_id: this.questionId,\r\n      };\r\n      //   console.log(\"toAddEdit_Text_question=> \", toAddEdit);\r\n      if (\r\n        !this.questionTextCtrl?.value &&\r\n        image == null &&\r\n        questionImagePath == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال او اختيار صوره السؤال\");\r\n        return;\r\n      } else {\r\n        if (this.questionId > 0) {\r\n          this.editTextQuestion(toAddEdit);\r\n        } else {\r\n          this.addTextQuestion(toAddEdit);\r\n        }\r\n      }\r\n    }\r\n\r\n    // MCQ\r\n    if (this.questionTypeIdCtrl?.value == 2) {\r\n      let image: examQuestionImage = this.questionFile || null;\r\n      let questionImagePath = this.questionImageCtrl;\r\n\r\n      let imageOne: examQuestionImage = this.answerOneFile || null;\r\n      let choice1: IMcqChoices = {\r\n        choice_id: this.answerOneIdCtrl?.value ?? 0,\r\n        choice_text: this.answerOneCtrl?.value,\r\n        is_correct: this.answerOneIsCorrectCtrl.value === 0 ? true : false,\r\n        choice_image: imageOne,\r\n        remove_image: this.answerOneRemove_imageCtrl?.value,\r\n        path: this.answerOneImageCtrl?.value,\r\n      };\r\n\r\n      let imageTwo: examQuestionImage = this.answerTwoFile || null;\r\n      let choice2: IMcqChoices = {\r\n        choice_id: this.answerTwoIdCtrl?.value ?? 0,\r\n        choice_text: this.answerTwoCtrl?.value,\r\n        is_correct: this.answerTwoIsCorrectCtrl?.value ? true : false,\r\n        choice_image: imageTwo,\r\n        remove_image: this.answerTwoRemove_imageCtrl?.value,\r\n        path: this.answerTwoImageCtrl?.value,\r\n      };\r\n\r\n      let imageThree: examQuestionImage = this.answerThreeFile || null;\r\n      let choice3: IMcqChoices = {\r\n        choice_id: this.answerThreeIdCtrl?.value ?? 0,\r\n        choice_text: this.answerThreeCtrl?.value,\r\n        is_correct: this.answerThreeIsCorrectCtrl?.value ? true : false,\r\n        choice_image: imageThree,\r\n        remove_image: this.answerThreeRemove_imageCtrl?.value,\r\n        path: this.answerThreeImageCtrl?.value,\r\n      };\r\n\r\n      let imageFour: examQuestionImage = this.answerFourFile || null;\r\n      let choice4: IMcqChoices = {\r\n        choice_id: this.answerFourIdCtrl?.value ?? 0,\r\n        choice_text: this.answerFourCtrl?.value,\r\n        is_correct: this.answerFourIsCorrectCtrl?.value ? true : false,\r\n        choice_image: imageFour,\r\n        remove_image: this.answerFourRemove_imageCtrl?.value,\r\n        path: this.answerFourImageCtrl?.value,\r\n      };\r\n\r\n      let toAddEdit: IAddEditQuestionMcqModel = {\r\n        exam_question_main_question: this.mainQuestionCtrl?.value,\r\n        exam_question_mark: this.questionMarkCtrl?.value,\r\n        exam_question_perfect_answer: this.questionPerfectAnswerCtrl?.value,\r\n        perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n        exam_question_text: this.questionTextCtrl?.value,\r\n        exam_question_type_id: this.questionTypeIdCtrl?.value,\r\n        exam_selected_question_head_id: this.examGroupHeaderId,\r\n        exam_selected_subject_id: this.subjectId,\r\n        exam_question_image: image,\r\n        remove_image: this.questionImageRemove_imageCtrl?.value,\r\n        exam_question_id: this.questionId,\r\n        mcq_choices: [choice1, choice2, choice3, choice4],\r\n      };\r\n\r\n      console.log(\"toAddEdit_mcq_question=> \", toAddEdit);\r\n      // if no question Text or img\r\n      if (\r\n        !this.questionTextCtrl?.value &&\r\n        image == null &&\r\n        questionImagePath == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال او اختيار صوره السؤال\");\r\n        return;\r\n      }\r\n\r\n      // if no correct answer\r\n      if (\r\n        !choice1.is_correct &&\r\n        !choice2.is_correct &&\r\n        !choice3.is_correct &&\r\n        !choice4.is_correct\r\n      ) {\r\n        this.toastr.warning(\"يجب اختيار الإجابة الصحيحة\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 1 no text or img\r\n      if (\r\n        choice1.choice_text === \"\" &&\r\n        choice1.choice_image === null &&\r\n        choice1.path == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال الأول او اختيار صورة \");\r\n        return;\r\n      }\r\n\r\n      // if mcq 2 no text or img\r\n      if (\r\n        choice2.choice_text === \"\" &&\r\n        choice2.choice_image === null &&\r\n        choice2.path == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال الثاني او اختيار صورة \");\r\n        return;\r\n      }\r\n\r\n      // if mcq 3 no text or img\r\n      if (\r\n        choice3.choice_text === \"\" &&\r\n        choice3.choice_image === null &&\r\n        choice3.path == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال الثالث او اختيار صورة \");\r\n        return;\r\n      }\r\n\r\n      // if mcq 4 no text or img\r\n      if (\r\n        choice4.choice_text === \"\" &&\r\n        choice4.choice_image === null &&\r\n        choice4.path == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال الرابع او اختيار صورة \");\r\n        return;\r\n      } else {\r\n        if (this.questionId > 0) {\r\n          this.editMcqQuestion(toAddEdit);\r\n        } else {\r\n          this.addMcqQuestion(toAddEdit);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n    //  console.log('on add ', toAddEdit);\r\n    this.spinner.show();\r\n    this.examService\r\n      .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n      .subscribe((response: any) => {\r\n        // console.log('respooooooonse', response);\r\n\r\n        if (response.returnValue == 200) {\r\n          this.getAllQuestionsByHeadId();\r\n\r\n          this.mainQuestionCtrl?.setValue(null);\r\n          this.questionMarkCtrl?.setValue(null);\r\n          this.questionTypeIdCtrl?.setValue(null);\r\n          this.questionImageCtrl?.setValue(null);\r\n          this.questionTextCtrl?.setValue(null);\r\n          this.questionPerfectAnswerCtrl?.setValue(null);\r\n          this.perfect_answer_attachCtrl?.setValue(null);\r\n          //  this.unitIdCtrl?.setValue(null);\r\n          // this.lessonIdCtrl?.setValue(null);\r\n\r\n          this.myForm.reset();\r\n          this.resetFileInputs();\r\n        } else {\r\n          this.toastr.error(response.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n    //  console.log('tooEdiiiiiiit', toAddEdit);\r\n    this.spinner.show();\r\n    this.examService\r\n      .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n      .subscribe((response) => {\r\n        //  console.log('ediiiiiitResponse', response);\r\n        if (response) {\r\n          let toEdit = this.questionsInGrid.find(\r\n            (q) => q.Id == this.questionId\r\n          );\r\n\r\n          if (toEdit) {\r\n            toEdit.Text = this.questionTextCtrl?.value;\r\n            toEdit.QuestionTypeAr = \"مقال\";\r\n            toEdit.Image = this.questionImageCtrl?.value;\r\n          }\r\n\r\n          this.mainQuestionCtrl?.setValue(null);\r\n          this.questionMarkCtrl?.setValue(null);\r\n          this.questionTypeIdCtrl?.setValue(null);\r\n          this.questionImageCtrl?.setValue(null);\r\n          this.questionTextCtrl?.setValue(null);\r\n          this.questionPerfectAnswerCtrl?.setValue(null);\r\n          this.perfect_answer_attachCtrl?.setValue(null);\r\n\r\n          //   this.unitIdCtrl?.setValue(null);\r\n          // this.lessonIdCtrl?.setValue(null);\r\n\r\n          this.myForm.reset();\r\n          this.resetFileInputs();\r\n          this.questionId = 0; // return to add mode\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  addMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    // console.log('on add ', toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n        .subscribe((response: any) => {\r\n          // console.log('respooooooonse', response);\r\n\r\n          if (response.returnValue == 200) {\r\n            this.getAllQuestionsByHeadId();\r\n\r\n            this.mainQuestionCtrl?.setValue(null);\r\n            this.questionMarkCtrl?.setValue(null);\r\n            this.questionTypeIdCtrl?.setValue(null);\r\n            this.questionImageCtrl?.setValue(null);\r\n            this.questionTextCtrl?.setValue(null);\r\n            this.questionPerfectAnswerCtrl?.setValue(null);\r\n            this.perfect_answer_attachCtrl?.setValue(null);\r\n            this.myForm.reset();\r\n            this.resetFileInputs();\r\n            this.submitted = false;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            this.toastr.error(response.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  editMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    //  console.log(\"editMcqQuestion\", toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n        .subscribe((response) => {\r\n          //  console.log(\"editMcqQuestion\", response);\r\n          if (response) {\r\n            this.getAllQuestionsByHeadId();\r\n            this.mainQuestionCtrl?.setValue(null);\r\n            this.questionMarkCtrl?.setValue(null);\r\n            this.questionTypeIdCtrl?.setValue(null);\r\n            this.questionImageCtrl?.setValue(null);\r\n            this.questionTextCtrl?.setValue(null);\r\n            this.questionPerfectAnswerCtrl?.setValue(null);\r\n            this.perfect_answer_attachCtrl?.setValue(null);\r\n            this.myForm.reset();\r\n            this.resetFileInputs();\r\n            this.submitted = false;\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.questionId = 0; // return to add mode\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getQuestionForEditByID(questionId: number) {\r\n    //  console.log('questionIddddddddddddddd', questionId);\r\n    this.spinner.show();\r\n    this.examService\r\n      .getQuestionForEditByID<IQuestionDetailsForEditModel>(questionId)\r\n      .subscribe((response) => {\r\n        console.log(\"getQuestionForEditByID\", response);\r\n        if (response) {\r\n          this.mainQuestionCtrl?.setValue(response.main_question);\r\n          this.questionMarkCtrl?.setValue(response.mark);\r\n          this.questionTextCtrl?.setValue(response.question_text);\r\n          this.questionImageCtrl?.setValue(\r\n            response?.attach_path != null\r\n              ? \"mozakretyapi\" + response?.attach_path\r\n              : null\r\n          );\r\n          // this.questionFile.FileAsBase64 = response.attach_path;\r\n          this.questionTypeIdCtrl?.setValue(response.question_type_id);\r\n          this.questionId = questionId;\r\n\r\n          this.questionPerfectAnswerCtrl?.setValue(response.perfect_answer);\r\n          this.perfect_answer_attachCtrl?.setValue(\r\n            `mozakretyapi${response?.prefect_answer_attach_path}`\r\n          );\r\n\r\n          if (response.question_type_id == 2) {\r\n            this.answerOneIdCtrl?.setValue(response.MCQ_Choices[0]?.Id);\r\n            this.answerOneCtrl?.setValue(response.MCQ_Choices[0]?.Text);\r\n            this.answerOneImageCtrl?.setValue(\r\n              response?.MCQ_Choices[0]?.Image != null\r\n                ? \"mozakretyapi\" + response?.MCQ_Choices[0]?.Image\r\n                : null\r\n            );\r\n            // this.answerOneImageCtrl?.setValue(response.MCQ_Choices[0].Image);\r\n            //  this.answerOneFile.FileAsBase64 = response.MCQ_Choices[0].Image;\r\n            this.answerOneIsCorrectCtrl?.setValue(\r\n              response.MCQ_Choices[0]?.Is_Correct\r\n            );\r\n            this.oneIsCorrect = response.MCQ_Choices[0]?.Is_Correct;\r\n\r\n            this.answerTwoIdCtrl?.setValue(response.MCQ_Choices[1]?.Id);\r\n            this.answerTwoCtrl?.setValue(response.MCQ_Choices[1]?.Text);\r\n            this.answerTwoImageCtrl?.setValue(\r\n              response?.MCQ_Choices[1]?.Image != null\r\n                ? \"mozakretyapi\" + response?.MCQ_Choices[1]?.Image\r\n                : null\r\n            );\r\n            //  this.answerTwoImageCtrl?.setValue(response.MCQ_Choices[1].Image);\r\n            // this.answerTwoFile.FileAsBase64 = response.MCQ_Choices[1].Image;\r\n            this.answerTwoIsCorrectCtrl?.setValue(\r\n              response.MCQ_Choices[1]?.Is_Correct\r\n            );\r\n            this.twoIsCorrect = response.MCQ_Choices[1]?.Is_Correct;\r\n\r\n            this.answerThreeIdCtrl?.setValue(response.MCQ_Choices[2]?.Id);\r\n            this.answerThreeCtrl?.setValue(response.MCQ_Choices[2]?.Text);\r\n            this.answerThreeImageCtrl?.setValue(\r\n              response?.MCQ_Choices[2]?.Image != null\r\n                ? \"mozakretyapi\" + response?.MCQ_Choices[2]?.Image\r\n                : null\r\n            );\r\n            // this.answerThreeImageCtrl?.setValue(response.MCQ_Choices[2].Image);\r\n            //  this.answerThreeFile.FileAsBase64 = response.MCQ_Choices[2].Image;\r\n            this.answerThreeIsCorrectCtrl?.setValue(\r\n              response.MCQ_Choices[2]?.Is_Correct\r\n            );\r\n            this.threeIsCorrect = response.MCQ_Choices[2]?.Is_Correct;\r\n\r\n            this.answerFourIdCtrl?.setValue(response.MCQ_Choices[3]?.Id);\r\n            this.answerFourCtrl?.setValue(response.MCQ_Choices[3]?.Text);\r\n            this.answerFourImageCtrl?.setValue(\r\n              response?.MCQ_Choices[3]?.Image != null\r\n                ? \"mozakretyapi\" + response?.MCQ_Choices[3]?.Image\r\n                : null\r\n            );\r\n            //  this.answerFourImageCtrl?.setValue(response.MCQ_Choices[3].Image);\r\n            //  this.answerFourFile.FileAsBase64 = response.MCQ_Choices[3].Image;\r\n            this.answerFourIsCorrectCtrl?.setValue(\r\n              response.MCQ_Choices[3]?.Is_Correct\r\n            );\r\n            this.fourIsCorrect = response.MCQ_Choices[3]?.Is_Correct;\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamQuestion(questionId: number) {\r\n    let confirmed = confirm(\"هل انت متأكد من الحذف\");\r\n    // console.log('questionId', questionId);\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .deleteExamQuestion<any>(questionId)\r\n        .subscribe((response) => {\r\n          // console.log('deleteResponse', response);\r\n          if (response.returnString === \"Done\") {\r\n            let toDeleteIndex = this.questionsInGrid.findIndex(\r\n              (q) => q.Id == questionId\r\n            );\r\n            this.questionsInGrid.splice(toDeleteIndex, 1);\r\n          } else this.toastr.info(response.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  importFile(event) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        this.questionImageCtrl.setValue(file.FileAsBase64);\r\n        this.questionFile = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importOneFile(event) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        this.answerOneImageCtrl.setValue(file.FileAsBase64);\r\n        this.answerOneFile = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importTwoFile(event) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        this.answerTwoImageCtrl.setValue(file.FileAsBase64);\r\n        this.answerTwoFile = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importThreeFile(event) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        this.answerThreeImageCtrl.setValue(file.FileAsBase64);\r\n        this.answerThreeFile = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importFourFile(event) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        this.answerFourImageCtrl.setValue(file.FileAsBase64);\r\n        this.answerFourFile = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  perfectAnswerAttach(event) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        this.perfect_answer_attachCtrl.setValue(file.FileAsBase64);\r\n        this.perfectAnswerAttach_preview = file;\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  onSelectCorrect(answerNumber: number) {\r\n    console.log(\"answer is Correct\", answerNumber);\r\n    if (answerNumber === 0) {\r\n      this.answerOneIsCorrectCtrl?.setValue(0);\r\n      this.answerTwoIsCorrectCtrl?.setValue(null);\r\n      this.answerThreeIsCorrectCtrl?.setValue(null);\r\n      this.answerFourIsCorrectCtrl?.setValue(null);\r\n    }\r\n    if (answerNumber === 1) {\r\n      this.answerOneIsCorrectCtrl?.setValue(null);\r\n      this.answerTwoIsCorrectCtrl?.setValue(1);\r\n      this.answerThreeIsCorrectCtrl?.setValue(null);\r\n      this.answerFourIsCorrectCtrl?.setValue(null);\r\n    }\r\n    if (answerNumber === 2) {\r\n      this.answerOneIsCorrectCtrl?.setValue(null);\r\n      this.answerTwoIsCorrectCtrl?.setValue(null);\r\n      this.answerThreeIsCorrectCtrl?.setValue(2);\r\n      this.answerFourIsCorrectCtrl?.setValue(null);\r\n    }\r\n    if (answerNumber === 3) {\r\n      this.answerOneIsCorrectCtrl?.setValue(null);\r\n      this.answerTwoIsCorrectCtrl?.setValue(null);\r\n      this.answerThreeIsCorrectCtrl?.setValue(null);\r\n      this.answerFourIsCorrectCtrl?.setValue(3);\r\n    }\r\n  }\r\n\r\n  resetFileInputs() {\r\n    const FileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n    FileInputs.forEach((input: any) => {\r\n      input.value = null;\r\n    });\r\n    this.questionFile = null;\r\n    this.answerOneFile = null;\r\n    this.answerTwoFile = null;\r\n    this.answerThreeFile = null;\r\n    this.answerFourFile = null;\r\n  }\r\n}\r\n","<!-- <div>\r\n  <div class=\"btn btn-default\" (click)=\"onCancel()\">اغلاق</div>\r\n</div> -->\r\n<h1 mat-dialog-title>{{ \"labels.addSubQuestion\" | translate }}</h1>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>{{ \"labels.mainQuestion\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"mainQuestion\" />\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              mainQuestionCtrl.invalid &&\r\n              (mainQuestionCtrl.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                mainQuestionCtrl?.errors?.required ||\r\n                mainQuestionCtrl?.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.QuestionType\" | translate }}\r\n          </mat-label>\r\n          <mat-select\r\n            formControlName=\"questionTypeId\"\r\n           >\r\n            <mat-option>\r\n              {{ \"General.Choose\" | translate }}\r\n            </mat-option>\r\n\r\n            <mat-option [value]=\"1\">\r\n              {{ \"labels.Article\" | translate }}\r\n            </mat-option>\r\n\r\n            <mat-option [value]=\"2\">\r\n              {{ \"labels.Mcq\" | translate }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              questionTypeIdCtrl?.invalid &&\r\n              (questionTypeIdCtrl?.touched || submitted)\r\n            \"\r\n          >\r\n            <span *ngIf=\"questionTypeIdCtrl?.errors?.required\">\r\n              {{ \"labels.MustChoosevalue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.QuestionMark\" | translate }}\r\n          </mat-label>\r\n          <input matInput type=\"number\" formControlName=\"questionMark\" />\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              questionMarkCtrl.invalid &&\r\n              (questionMarkCtrl.touched || submitted)\r\n            \"\r\n          >\r\n            <span *ngIf=\"questionMarkCtrl.errors?.required\">\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n            <span *ngIf=\"questionMarkCtrl.errors?.bigZero\">\r\n              {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- question text -->\r\n      <div class=\"col-md-8 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>{{ \"labels.question_ar_text\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"exam_question_text\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- question text Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>{{ \"labels.question_ar_text\" | translate }} </mat-label>\r\n        <quill-editor\r\n          formControlName=\"exam_question_text\"\r\n          [placeholder]=\"'labels.question_ar_text' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <div class=\"col-12\">\r\n        <!-- Question Picture -->\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.QuestionImage\" | translate }}\r\n            </mat-label>\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              name=\"questionImage\"\r\n              accept=\"image/*\"\r\n              (change)=\"importFile($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-md-8 col-12\">\r\n            <div class=\"question-img\">\r\n              <mat-checkbox\r\n                *ngIf=\"questionImageCtrl.value\"\r\n                formControlName=\"remove_image\"\r\n                [value]=\"true\"\r\n                class=\"remove_image\"\r\n              >\r\n                Remove Image\r\n              </mat-checkbox>\r\n              <img class=\"img-fluid\" [src]=\"questionImageCtrl?.value\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Perfect Answer  -->\r\n      <!--  *ngIf=\"questionTypeIdCtrl?.value == 1\" -->\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.perfect_answer\" | translate }}\r\n          </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"questionPerfectAnswer\" />\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              questionPerfectAnswerCtrl.invalid &&\r\n              (questionPerfectAnswerCtrl.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                questionPerfectAnswerCtrl?.errors?.required ||\r\n                questionPerfectAnswerCtrl?.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!--  perfect Answer Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>\r\n          {{ \"labels.perfect_answer\" | translate }}\r\n        </mat-label>\r\n        <quill-editor\r\n          formControlName=\"questionPerfectAnswer\"\r\n          [placeholder]=\"'labels.perfect_answer' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <!-- perfect answer attach-->\r\n      <div class=\"col-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.perfectAnswerAttach\" | translate }}\r\n            </mat-label>\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              accept=\"xlsx,.xls,image/*,audio/*,.pdf\"\r\n              (change)=\"perfectAnswerAttach($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-md-8 col-12\">\r\n            <div class=\"question-img\">\r\n              <iframe\r\n                [src]=\"perfect_answer_attachCtrl.value | safe\"\r\n                width=\"100%\"\r\n                class=\"border-0 img-fluid\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <hr />\r\n\r\n    <ng-container *ngIf=\"questionTypeIdCtrl?.value == 2\" class=\"row\">\r\n      <!-- answer one -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerOneIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"0\"\r\n            [checked]=\"oneIsCorrect\"\r\n            (click)=\"onSelectCorrect(0)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (1)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.AnswerText\" | translate }} (1)\r\n                </mat-label>\r\n\r\n                <input matInput type=\"text\" formControlName=\"answerOne\" />\r\n              </mat-form-field>\r\n\r\n              <!-- answer  one Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (1) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerOne\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (1)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerOneImage\"\r\n                    (change)=\"importOneFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <mat-checkbox\r\n                    *ngIf=\"answerOneImageCtrl.value\"\r\n                    formControlName=\"answerOneRemove_image\"\r\n                    [value]=\"true\"\r\n                    class=\"remove_image\"\r\n                  >\r\n                    Remove Image\r\n                  </mat-checkbox>\r\n                  <div class=\"question-img\">\r\n                    <img class=\"img-fluid\" [src]=\"answerOneImageCtrl.value\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Two -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerTwoIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"1\"\r\n            [checked]=\"twoIsCorrect\"\r\n            (click)=\"onSelectCorrect(1)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (2)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.AnswerText\" | translate }} (2)\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"answerTwo\" />\r\n              </mat-form-field>\r\n\r\n              <!-- answer two Editor-->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (2) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerTwo\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (2)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerTwoImage\"\r\n                    (change)=\"importTwoFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"answerTwoImageCtrl.value\"\r\n                      formControlName=\"answerTwoRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n                    <img class=\"img-fluid\" [src]=\"answerTwoImageCtrl.value\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Three -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerThreeIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"2\"\r\n            [checked]=\"threeIsCorrect\"\r\n            (click)=\"onSelectCorrect(2)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (3)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.AnswerText\" | translate }} (3)\r\n                </mat-label>\r\n\r\n                <input matInput type=\"text\" formControlName=\"answerThree\" />\r\n              </mat-form-field>\r\n\r\n              <!-- answer three  Editor-->\r\n              <!--\r\n              <mat-label> {{ \"labels.AnswerText\" | translate }} (3) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerThree\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (3)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerThreeImage\"\r\n                    (change)=\"importThreeFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"answerThreeImageCtrl.value\"\r\n                      formControlName=\"answerThreeRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n\r\n                    <img class=\"img-fluid\" [src]=\"answerThreeImageCtrl.value\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Four -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerFourIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"3\"\r\n            [checked]=\"fourIsCorrect\"\r\n            (click)=\"onSelectCorrect(3)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (4)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.AnswerText\" | translate }} (4)\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"answerFour\" />\r\n              </mat-form-field>\r\n\r\n              <!-- answer four Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (4) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerFour\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (4)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerFourImage\"\r\n                    (change)=\"importFourFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"answerFourImageCtrl.value\"\r\n                      formControlName=\"answerFourRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n                    <img class=\"img-fluid\" [src]=\"answerFourImageCtrl.value\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </ng-container>\r\n\r\n    <mat-card-actions class=\"col-12\">\r\n      <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"questionId == 0\"\r\n      >\r\n        {{ \"General.Add\" | translate }}\r\n      </button>\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"onSubmit()\"\r\n        id=\"editQuestionButton\"\r\n        class=\"btn btn-primary\"\r\n        *ngIf=\"questionId > 0\"\r\n      >\r\n        {{ \"General.Update\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n\r\n    <div class=\"col-md-12\">\r\n      <div class=\"full-wid-table\" style=\"overflow: hidden !important\">\r\n        <table\r\n          class=\"table table-striped table-hover table-full-width rtl\"\r\n          id=\"sotbmod\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>{{ \"labels.question_ar_text\" | translate }}</th>\r\n              <!-- <th>{{ \"labels.QuestionImage\" | translate }}</th> -->\r\n              <th>{{ \"labels.QuestionType\" | translate }}</th>\r\n              <th>­</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"addedExamQuestionsHolder\">\r\n            <tr id=\"ExamQuestion-2626853\" *ngFor=\"let ques of questionsInGrid\">\r\n              <td>{{ ques.Id }}</td>\r\n              <td>{{ ques.Text }}</td>\r\n              <!-- <td>\r\n                <a\r\n                  *ngIf=\"ques.Image != null || ques.Image != ''; else noImg\"\r\n                  [href]=\"ques.Image\"\r\n                  target=\"_blank\"\r\n                >\r\n                  عرض\r\n                </a>\r\n                <span #noImg>لايوجد صورة</span>\r\n              </td> -->\r\n              <td>{{ ques.QuestionTypeAr }}</td>\r\n              <td>\r\n                <button\r\n                  (click)=\"getQuestionForEditByID(ques.Id)\"\r\n                  mat-mini-fab\r\n                  color=\"primary\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n\r\n                <button\r\n                  (click)=\"removeExamQuestion(ques.Id)\"\r\n                  mat-mini-fab\r\n                  color=\"warn\"\r\n                >\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button class=\"btn-danger\" mat-raised-button mat-dialog-close>Close</button>\r\n</div>\r\n<ngx-spinner></ngx-spinner>\r\n","<ng-container *ngIf=\"ExamGroups\">\r\n  <div class=\"row exam-container\">\r\n    <!-- Right Col  Exam Option-->\r\n    <div class=\"col-md-3 col-12\">\r\n      <div class=\"row\">\r\n        <!-- Exam Name -->\r\n        <div class=\"col-12\">\r\n          <div class=\"alert bg-light-primary mb-2\" role=\"alert\">\r\n            <span class=\"badge bg-primary mb-1 mr-2\">\r\n              {{ ExamName }}\r\n            </span>\r\n\r\n            <span class=\"badge bg-primary mb-1 mr-2\">\r\n              {{ TeacherName }}\r\n            </span>\r\n\r\n            <span class=\"badge bg-primary mb-1 mr-2\">\r\n              {{ SubjectName }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- If Exam not Solved -->\r\n        <ng-container *ngIf=\"!isSolved\">\r\n          <!-- exam Total Mark  -->\r\n          <div class=\"col-12\">\r\n            <mat-card class=\"card card-inverse bg-info\">\r\n              <mat-card-content>\r\n                <div class=\"media\">\r\n                  <div class=\"media-body text-left\">\r\n                    <h4 class=\"card-text\">\r\n                      {{ \"labels.TotalMark\" | translate }}\r\n                    </h4>\r\n                    <h5>{{ examTotalMark }}</h5>\r\n                  </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n        </ng-container>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Left Col - Exam Content -->\r\n    <div class=\"col-md-9 col-12\">\r\n      <mat-card>\r\n        <mat-card-title>\r\n          <!-- <span *ngIf=\"!isSolved\">\r\n            {{ \"labels.StudentExamMsg\" | translate }}\r\n          </span>\r\n          <span *ngIf=\"isSolved\">\r\n            {{ \"labels.ExamSolved\" | translate }}\r\n          </span> -->\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <!-- Tab panes -->\r\n          <mat-tab-group>\r\n            <mat-tab label=\"{{ group.GroupName }}\" *ngFor=\"let group of ExamGroups\" class=\"group-{{ group.GroupId }}\">\r\n              <mat-card *ngFor=\"let head of group.Heads\">\r\n                <mat-card-title> {{ head.HeadName }}</mat-card-title>\r\n                <mat-card-content>\r\n                  <form *ngFor=\"let Question of head?.Questions; let i = index\">\r\n                    <p>\r\n                      {{ i + 1 }}) {{ Question.QuestionDetails?.questionText }}\r\n                    </p>\r\n\r\n                    <img class=\"examimage\" *ngIf=\"Question.QuestionDetails?.questionAttach\" src=\"/mozakretyapi{{\r\n                        Question.QuestionDetails?.questionAttach | sliceExamPic\r\n                      }}\" />\r\n\r\n\r\n                    <div class=\"row\">\r\n                      <mat-radio-group class=\"exam-radio-group\" #choice\r\n                        id=\"question-{{ Question.QuestionDetails?.questionId }}\">\r\n                        <div class=\"col-12\" *ngFor=\"let mcq of Question.MCQ\">\r\n                          <mat-radio-button [value]=\"mcq.Id\" [disabled]=\"true\">\r\n                            <span>\r\n                              {{ mcq.MCQText }}\r\n                              <img class=\"examimage\" *ngIf=\"mcq.MCQAttach\" src=\"/mozakretyapi{{\r\n                                mcq.MCQAttach | sliceExamPic\r\n                              }}\" />\r\n                            </span>\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div>\r\n                    <mat-card-actions>\r\n                      <!-- <button *ngIf=\"\r\n                          (!isSolved &&\r\n                            Question.QuestionDetails.StudentChoice == null) ||\r\n                          (!isSolved &&\r\n                            Question.QuestionDetails.StudentChoice != null &&\r\n                            Question.QuestionDetails.StudentChoice.RESULT ==\r\n                              'F')\r\n                        \" id=\"btn-{{ Question.QuestionDetails.questionId }}\" [disabled]=\"\r\n                          !isSolved &&\r\n                          Question.QuestionDetails.StudentChoice != null &&\r\n                          Question.QuestionDetails.StudentChoice.RESULT == 'T'\r\n                        \" class=\"btn btn-primary\" type=\"button\" id=\"btn-{{ Question.QuestionDetails.questionId }}\"\r\n                        (click)=\"\r\n                          SingleQuestionForm(\r\n                            Question.QuestionDetails?.questionId\r\n                          )\r\n                        \">\r\n                        {{ \"General.SaveQuestion\" | translate }}\r\n                      </button> -->\r\n                    </mat-card-actions>\r\n                    <!-- <span *ngIf=\"\r\n                        (!isSolved &&\r\n                          Question.QuestionDetails.StudentChoice == null) ||\r\n                        (!isSolved &&\r\n                          Question.QuestionDetails.StudentChoice != null &&\r\n                          Question.QuestionDetails.StudentChoice.RESULT == 'F')\r\n                      \" class=\"danger\" id=\"alert-{{ Question.QuestionDetails.questionId }}\">\r\n                      {{ \"labels.ansWillNotSave\" | translate }}\r\n                    </span> -->\r\n                    <!--\r\n                    <span *ngIf=\"\r\n                        !isSolved &&\r\n                        Question.QuestionDetails.StudentChoice != null &&\r\n                        Question.QuestionDetails.StudentChoice.RESULT == 'T'\r\n                      \" class=\"success\">\r\n                      تم حفظ الإجابة من قبل\r\n                    </span>\r\n                    <span *ngIf=\"\r\n                        (!isSolved &&\r\n                          Question.QuestionDetails.StudentChoice == null) ||\r\n                        (!isSolved &&\r\n                          Question.QuestionDetails.StudentChoice != null &&\r\n                          Question.QuestionDetails.StudentChoice.RESULT == 'F')\r\n                      \" id=\"stu-cho-{{ Question.QuestionDetails.questionId }}\" class=\"warning\">\r\n                    </span> -->\r\n                    <hr />\r\n                  </form>\r\n                </mat-card-content>\r\n              </mat-card>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </mat-card-content>\r\n        <mat-card-actions align=\"end\">\r\n          <!-- <button (click)=\"SubmitExam()\" id=\"btnSubmit\" type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!solvidResults\">\r\n            {{ \"General.SubmitAnswer\" | translate }}\r\n          </button> -->\r\n\r\n          <!-- <button *ngIf=\"isSolved\" class=\"btn btn-warning\" routerLink=\"/home\">\r\n            {{ \"General.BackToHome\" | translate }}\r\n          </button> -->\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<!-- Exam Not Avaliable Section -->\r\n<!-- <section *ngIf=\"!IsAvaliable\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 text-center\">\r\n      <img src=\"assets/img/gallery/lock.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\" />\r\n      <h1 class=\"mt-4\">\r\n        {{ \"labels.ExamNotAvaliable\" | translate }}\r\n      </h1>\r\n      <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">\r\n        {{ \"General.BackToHome\" | translate }}</a>\r\n    </div>\r\n  </div>\r\n</section> -->\r\n\r\n<!-- Exam Results not Avaliable Section -->\r\n<!-- <section *ngIf=\"!IsResultAvalable && isSolved\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 text-center\">\r\n      <img src=\"assets/img/gallery/maintenance.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\" />\r\n      <h1 class=\"mt-4\">\r\n        {{ \"labels.ExamResultNotAvaliable\" | translate }}\r\n      </h1>\r\n      <div class=\"w-75 error-text mx-auto mt-4\">\r\n        <p>\r\n          {{ \"labels.ExamResultDate\" | translate }}: {{ examResultDate | date }}\r\n          <br />\r\n          {{ \"labels.examResultTime\" | translate }}:\r\n          {{ examResultTime }}\r\n          <br />\r\n          {{ \"labels.StudentMark\" | translate }} : {{ studentMark }} /\r\n          {{ examTotalMark }}\r\n          <br />\r\n          {{ \"labels.StudentAnswerPeriod\" | translate }} : {{ examDuration }}\r\n        </p>\r\n      </div>\r\n      <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\r\n    </div>\r\n  </div>\r\n</section> -->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IExamGroupsVM } from \"app/dashboard/models/setup/exams-setup/exam\";\r\nimport { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { timer } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-exam-preview\",\r\n  templateUrl: \"./exam-preview.component.html\",\r\n  styleUrls: [\"./exam-preview.component.scss\"],\r\n})\r\nexport class ExamPreviewComponent implements OnInit {\r\n  //Exams Lists\r\n  ExamDetails: any = [];\r\n  ExamGroups: IExamGroupsVM[] = null;\r\n  solvedQuestionNumberArr: any = []; // previously Solved Question\r\n  AnswerdQuestionsNumber: any = []; // Current Answerd Question\r\n  questionNumber: any; // Number Of Question In Exam\r\n  studentUserId: any;\r\n  examId: any;\r\n  ExamName: any;\r\n  TeacherName: any;\r\n  SubjectName: any;\r\n  examTotalMark: any;\r\n  student_grade: any;\r\n  IsAvaliable: any = true;\r\n  solvedExamStudent_ID: any;\r\n  ExamStarTime: any;\r\n  exam_period_minute?: any = 0;\r\n  isSolviedResultsOff: any;\r\n\r\n  // Solved Exam\r\n  isSolved: any = false;\r\n  IsResultAvalable: any;\r\n  showResult: any;\r\n  studentMark: any;\r\n  PointsGained: any;\r\n  examResultTime: any;\r\n  examResultDate: any;\r\n  examDuration: any;\r\n\r\n  // Repeate Exam\r\n  repeatable: any;\r\n  repeatableExam_Count: any;\r\n\r\n  // Returned Res from submit exam\r\n  solvidResults: any;\r\n\r\n  constructor(\r\n    //  private studentServ: StudentService,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    public dialog: MatDialog,\r\n    public examsService: ExamsService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.examId = params.get(\"examId\");\r\n      console.log(\"this.examId\", this.examId);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnStudentExam(this.examId);\r\n  }\r\n\r\n  returnStudentExam(examId: any) {\r\n    this.spinner.show();\r\n    this.examsService.getExamPreview(examId).subscribe((res: any) => {\r\n      console.log(\"exam: \", res);\r\n\r\n      if (res.returnValue === -5) {\r\n        this.spinner.hide();\r\n        // this.toastr.warning(\"تم حل الامتحان مسبقاً\");\r\n        return;\r\n      }\r\n      if (res.returnValue === 505) {\r\n        this.toastr.warning(\"يجب شراء المحاضرة اولا\");\r\n        this.router.navigateByUrl(\"/home\");\r\n        this.spinner.hide();\r\n        return;\r\n      } else if (res.returnValue === 200) {\r\n        this.isSolved = false;\r\n        this.ExamGroups = res.exam.groups;\r\n        this.ExamName = res.exam.details.exam_ar_name;\r\n        this.IsAvaliable = res.mv.IsAvailable;\r\n        this.TeacherName = res.teacherName;\r\n        this.SubjectName = res.mv.subject.subject_ar_name;\r\n        this.studentUserId = res.mv.exam_student.studentUserId;\r\n        this.examTotalMark = res.mv.examTotalMark;\r\n        this.exam_period_minute = res.exam.details.exam_period_minute;\r\n        this.solvedExamStudent_ID = res.mv.solvedExamStudent_ID;\r\n        this.student_grade = res.mv.exam_student.student_grade;\r\n        // this.questionNumber = res.exam.groups[0].Heads[0].Questions.length;\r\n\r\n        let GL = res.exam.groups.length, // length of Groups\r\n          num = 0;\r\n        for (let k = 0; k < GL; k++) {\r\n          let HL = res.exam.groups[k].Heads.length; // length of Heads\r\n          if (HL != 0) {\r\n            for (let m = 0; m < HL; m++) {\r\n              let QL = res.exam.groups[k].Heads[m].Questions.length; //Length of Questions\r\n              num = num + QL;\r\n            }\r\n          }\r\n          this.questionNumber = num;\r\n        }\r\n\r\n        // get Exam  Start Time\r\n        let currentTime = new Date();\r\n        let hh = currentTime.getHours();\r\n        let mm = currentTime.getMinutes();\r\n        let ss = currentTime.getSeconds();\r\n        this.ExamStarTime = hh + \":\" + mm + \":\" + ss;\r\n\r\n        // If Repeated Exam get number of solved questions\r\n        let j = res.exam.groups[0].Heads[0].Questions.length,\r\n          i;\r\n        for (i = 0; i <= j; i++) {\r\n          if (\r\n            res.exam.groups[0].Heads[0].Questions[i] &&\r\n            res.exam.groups[0].Heads[0].Questions[i].QuestionDetails &&\r\n            res.exam.groups[0].Heads[0].Questions[i].QuestionDetails\r\n              .StudentChoice\r\n          ) {\r\n            if (\r\n              res.exam.groups[0].Heads[0].Questions[i].QuestionDetails\r\n                .StudentChoice.RESULT == \"T\"\r\n            ) {\r\n              // console.log(i)\r\n              this.solvedQuestionNumberArr.push({ id: i });\r\n            }\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { PointsService } from \"app/dashboard/services/setup/points-setup/points.service\";\r\nimport {\r\n  IAddExamCustomePointsVM,\r\n  IExamPointVM,\r\n} from \"app/dashboard/models/setup/points-setup/point\";\r\n\r\n@Component({\r\n  selector: \"app-exams-custome-points\",\r\n  templateUrl: \"./exams-custome-points.component.html\",\r\n  styleUrls: [\"./exams-custome-points.component.scss\"],\r\n})\r\nexport class ExamsCustomePointsComponent implements OnInit {\r\n  Points: IExamPointVM[];\r\n  myForm!: FormGroup;\r\n  Submitted = false;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  ItemsCount?: number;\r\n  examId: number;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authserv: AuthService,\r\n    private route: ActivatedRoute,\r\n    private PointsService: PointsService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.examId = Number(params.get(\"examId\"));\r\n    });\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getExamCustomPoints(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      ByQuestion: [false, [Validators.required]],\r\n      from: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      to: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      value: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.ByQuestionValidators(false);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  addExamCustomPoint() {\r\n    this.Submitted = true;\r\n\r\n    let data: IAddExamCustomePointsVM = {\r\n      itemId: this.examId,\r\n      ByQuestion: this.FormCtrls?.ByQuestion.value,\r\n      from: this.FormCtrls?.from.value,\r\n      to: this.FormCtrls?.to.value,\r\n      value: this.FormCtrls?.value.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.PointsService.addExamCustomPoint(data).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.getExamCustomPoints(1);\r\n          this.toastr.success(\"تم إاضافة النقاط\");\r\n          this.Submitted = false;\r\n          this.myForm.reset();\r\n          this.FormCtrls?.ByQuestion.setValue(false);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getExamCustomPoints(p: Number) {\r\n    this.spinner.show();\r\n    this.PointsService.getExamCustomPoints<IExamPointVM>(\r\n      p,\r\n      this.examId\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.ItemsCount = res.itemsCount;\r\n        this.Points = res.points;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  deleteExamCustomPoint(point: IExamPointVM) {\r\n    this.spinner.show();\r\n    this.PointsService.deleteExamCustomPoint(point.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.Points.findIndex((e) => e == point);\r\n        this.Points.splice(i, 1);\r\n        this.toastr.success(\"تم الحذف\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  openDeleateExamPointDialog(point: IExamPointVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${point.Value}: points`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteExamCustomPoint(point);\r\n      });\r\n  }\r\n\r\n  track(index: number, point: IExamPointVM): number {\r\n    return point.Id;\r\n  }\r\n\r\n  ByQuestionValidators(ByQuestion: boolean) {\r\n    if (ByQuestion == true) {\r\n      this.FormCtrls.from.reset();\r\n      this.FormCtrls.from.clearValidators();\r\n      this.FormCtrls.to.reset();\r\n      this.FormCtrls.to.clearValidators();\r\n    } else {\r\n      this.FormCtrls.from.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.FormCtrls.to.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.bigZero,\r\n      ]);\r\n    }\r\n    this.FormCtrls.from.updateValueAndValidity();\r\n    this.FormCtrls.to.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.ExamPoints\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/exams-setup/exam/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <!--  ByQuestion    -->\r\n            <!-- <div class=\"col-12\">\r\n              <mat-label>\r\n                {{ \"labels.ByQuestionLabel\" | translate }}\r\n              </mat-label>\r\n              <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-radio-button\r\n                    [value]=\"true\"\r\n                    (click)=\"ByQuestionValidators(true)\"\r\n                  >\r\n                    {{ \"labels.ByQuestion\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <mat-radio-button\r\n                    [value]=\"false\"\r\n                    (click)=\"ByQuestionValidators(false)\"\r\n                  >\r\n                    {{ \"labels.ByExam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n            <ng-container *ngIf=\"FormCtrls.ByQuestion.value === false\">\r\n              <!--  from    -->\r\n              <div class=\"col-lg-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.From\" | translate }}\r\n                  </mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"from\" />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      FormCtrls.from.invalid &&\r\n                      (FormCtrls.from.touched || Submitted)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.from.errors?.required ||\r\n                        FormCtrls.from.errors?.minusNum\r\n                      \"\r\n                    >\r\n                      You must enter a value.\r\n                    </span>\r\n                  </mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <!-- to  -->\r\n              <div class=\"col-lg-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.To\" | translate }}\r\n                  </mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"to\" />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      FormCtrls.to.invalid &&\r\n                      (FormCtrls.to.touched || Submitted)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.to.errors?.required ||\r\n                        FormCtrls.to.errors?.minusNum\r\n                      \"\r\n                    >\r\n                      You must enter a value.\r\n                    </span>\r\n                  </mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <!-- value ==> points Number  -->\r\n            <div class=\"col-lg-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.pointsNumber\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"value\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.value.invalid &&\r\n                    (FormCtrls.value.touched || Submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.value.errors?.required ||\r\n                      FormCtrls.value.errors?.minusNum\r\n                    \"\r\n                  >\r\n                    You must enter a value.\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <mat-card-actions align=\"end\">\r\n            <button\r\n              mat-raised-button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              (click)=\"addExamCustomPoint()\"\r\n            >\r\n              {{ \"General.Add\" | translate }}\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n\r\n        <!-- Start Exams points Table -->\r\n        <ng-container>\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  {{ \"labels.ByQuestion\" | translate }}\r\n                </th>\r\n                <th>\r\n                  {{ \"labels.From\" | translate }}\r\n                </th>\r\n\r\n                <th>\r\n                  {{ \"labels.To\" | translate }}\r\n                </th>\r\n\r\n                <th>\r\n                  {{ \"labels.pointsNumber\" | translate }}\r\n                </th>\r\n\r\n                <th>actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"\r\n                  let point of Points\r\n                    | paginate\r\n                      : {\r\n                          itemsPerPage: 5,\r\n                          currentPage: p,\r\n                          totalItems: ItemsCount\r\n                        };\r\n                  let i = index;\r\n                  trackBy: track\r\n                \"\r\n              >\r\n                <td *ngIf=\"point.ByQuestion\">\r\n                  {{ \"labels.ByQuestion\" | translate }}\r\n                </td>\r\n                <td *ngIf=\"!point.ByQuestion\">\r\n                  {{ \"labels.ByExam\" | translate }}\r\n                </td>\r\n                <td>{{ point.FromValue }}</td>\r\n                <td>{{ point.ToValue }}</td>\r\n                <td>{{ point.Value }}</td>\r\n                <td>\r\n                  <button\r\n                    (click)=\"openDeleateExamPointDialog(point)\"\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <!-- Start  Pagination -->\r\n            <pagination-controls\r\n              *ngIf=\"Points?.length > 5\"\r\n              dir=\"ltr\"\r\n              [maxSize]=\"maxSize\"\r\n              (pageChange)=\"p = $event; getExamCustomPoints($event)\"\r\n              previousLabel=\"\"\r\n              nextLabel=\"\"\r\n            >\r\n            </pagination-controls>\r\n          </table>\r\n        </ng-container>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport {\r\n  ICountrieDropModel,\r\n  IStageDropModel,\r\n  IEducationYearDropModel,\r\n  ISubjectDropModel,\r\n  IExamViewModel,\r\n} from \"app/dashboard/models/setup/exams-setup/exam\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\n\r\n@Component({\r\n  selector: \"app-exams-index\",\r\n  templateUrl: \"./exams-index.component.html\",\r\n  styleUrls: [\"./exams-index.component.scss\"],\r\n})\r\nexport class ExamsIndexComponent implements OnInit {\r\n  totalItems: any;\r\n  EduCompId: any;\r\n  branchId: any;\r\n  //exams: IExamViewModel[] = [];\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"subject\",\r\n    \"year\",\r\n    \"teacher\",\r\n    \"publish\",\r\n    \"actions\",\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<IExamViewModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  //rowFunctions: IRowFunctionVM[];\r\n  rowFunctions = [\r\n    { functionName: \"Publish\" },\r\n    { functionName: \"Edit\" },\r\n    { functionName: \"Show\" },\r\n    { functionName: \"whatsApp\" },\r\n    { functionName: \"Points\" },\r\n    { functionName: \"Grades\" },\r\n    { functionName: \"Delete\" },\r\n  ];\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private examService: ExamsService,\r\n    private msg: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.myForm = this.fb.group({\r\n      countryId: [\"\"],\r\n      stageId: [\"\"],\r\n      educationYearId: [\"\"],\r\n      subjectId: [\"0\"],\r\n      teacherUserId: [\"0\"],\r\n      page: [\"\"],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n   // this.getAllExams(1);\r\n  }\r\n\r\n  get stageIdCtrl() {\r\n    return this.myForm.get(\"stageId\");\r\n  }\r\n\r\n  get educationYearIdCtrl() {\r\n    return this.myForm.get(\"educationYearId\");\r\n  }\r\n\r\n  get subjectIdCtrl() {\r\n    return this.myForm.get(\"subjectId\");\r\n  }\r\n\r\n  get teacherUserIdCtrl() {\r\n    return this.myForm.get(\"teacherUserId\");\r\n  }\r\n\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllExams(1);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllExams(p: number) {\r\n    this.page?.setValue(p);\r\n    this.myForm.controls[\"EduCompId\"].setValue(this.EduCompId);\r\n    let data = {\r\n      subjectId: this.subjectIdCtrl?.value,\r\n      teacherUserId: this.teacherUserIdCtrl?.value,\r\n      page: p,\r\n      EduCompId: this.EduCompId,\r\n    };\r\n    // console.log(data);\r\n    this.spinner.show();\r\n    this.examService.getAllNormalExams(data).subscribe((response: any) => {\r\n      if (response) {\r\n        //  console.log('EXAMS: ', response);\r\n        this.dataSource = new MatTableDataSource(response.examList.reverse());\r\n        // this.exams = response.examList;\r\n        this.totalItems = response.totalCount;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  removeExam(exam: IExamViewModel) {\r\n    this.examService.deleteExam<any>(exam.Id).subscribe((response) => {\r\n      if (response.data == 1) {\r\n        let deletedIndex = this.dataSource.data.findIndex((e) => e === exam);\r\n        this.dataSource.data.splice(deletedIndex, 1);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.msg.success(\"تم حذف الإمتحان\");\r\n      } else this.msg.warning(response.returnString);\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(exam: IExamViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: exam.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeExam(exam);\r\n      });\r\n  }\r\n\r\n  onPublishExam(exam: IExamViewModel) {\r\n    this.examService.publishExam<any>(exam.Id).subscribe((response) => {\r\n      if (response) {\r\n        //  console.log('published: ', response);\r\n        for (const obj of this.dataSource.data) {\r\n          if (obj.Id === exam.Id) {\r\n            obj.IsPublish = !obj.IsPublish;\r\n            break;\r\n          }\r\n        }\r\n        this.msg.success(\"Done\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../add-exam\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllExams(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- Stages Dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-educational-stage-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"stageIdCtrl\"\r\n                  >\r\n                  </app-educational-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Years dropdown-->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <educational-year-by-stage-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"educationYearIdCtrl\"\r\n                    [stageControl]=\"stageIdCtrl\"\r\n                  >\r\n                  </educational-year-by-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Cources [subjects] dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <cources-by-year-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"subjectIdCtrl\"\r\n                    [yearControl]=\"educationYearIdCtrl\"\r\n                  >\r\n                  </cources-by-year-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Exams\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- subject Column -->\r\n            <ng-container matColumnDef=\"subject\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Subject\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Subject }}</td>\r\n            </ng-container>\r\n\r\n            <!-- year Column -->\r\n            <ng-container matColumnDef=\"year\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Year\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Year }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- teacher Column -->\r\n            <ng-container matColumnDef=\"teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Teacher }}</td>\r\n            </ng-container>\r\n\r\n            <!-- publish Column -->\r\n            <ng-container matColumnDef=\"publish\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ThePublish\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let exam\">\r\n                <span *ngIf=\"exam?.IsPublish\">\r\n                  {{ \"labels.Published\" | translate }}\r\n                  <i class=\"fa fa-check-circle success ml-1\" aria-hidden=\"true\">\r\n                  </i>\r\n                </span>\r\n                <span *ngIf=\"!exam?.IsPublish\">\r\n                  {{ \"labels.UnPublished\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let exam\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-primary\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'publish'\"\r\n                        (click)=\"onPublishExam(exam)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <span *ngIf=\"!exam.IsPublish\">\r\n                          <i class=\"ft-upload font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Publish\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"exam.IsPublish\">\r\n                          <i class=\"ft-download font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Unpublish\" | translate }}\r\n                        </span>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"../add-exam\"\r\n                        [queryParams]=\"{\r\n                          examId: exam.Id,\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(exam)\"\r\n                      >\r\n                        <i class=\"fa fa-times font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Show'\"\r\n                        ngbDropdownItem\r\n                        target=\"_blank\"\r\n                        routerLink=\"/dashboard/exams-setup/exam-preview/{{\r\n                          exam.Id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-video-camera font-medium-3 mr-2\"> </i>\r\n                        {{ \"General.ExamPreview\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'whatsApp'\"\r\n                        ngbDropdownItem\r\n                        target=\"_blank\"\r\n                        routerLink=\"/dashboard/exams-setup/exam-whatsapp-msgs/{{\r\n                          exam.Id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId,\r\n                          IsTemplate: false\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-whatsapp font-medium-3 mr-2\"> </i>\r\n                        {{ \"whatsApp.whatsAppSettings\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Points'\"\r\n                        routerLink=\"../exam-points/{{ exam.Id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                        ><i class=\"fa fa-gift font-medium-3 mr-2\"></i>النقاط</a\r\n                      >\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Grades'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/exams-setup/exam/upload-exam-student-grades/{{\r\n                          exam.Id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-upload font-medium-3 mr-2\"></i>\r\n                        {{ \"Exam.StudentGradesUploadExam\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n              [class.bg-light-info]=\"!row?.IsPublish\"\r\n            ></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllExams($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  GeneralDropdownVM,\r\n  IfileVM,\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { IMcqChoiceVM } from \"app/dashboard/models/setup/exams-setup/exams\";\r\nimport { IQBPreviousSearchVM } from \"app/dashboard/models/setup/exams-setup/questionsBank\";\r\nimport { CourceStructureService } from \"app/dashboard/services/setup/educational-setup/cource-structure.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-question\",\r\n  templateUrl: \"./add-question.component.html\",\r\n  styleUrls: [\"./add-question.component.scss\"],\r\n})\r\nexport class AddQuestionComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  questionID: any = null;\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  //Images\r\n  QuestionAttachPath: any = null;\r\n  perfectAnswerAttach_preview: any = null;\r\n\r\n  questionsInputs: IMcqChoiceVM[] = [\r\n    {\r\n      choice_id: 0,\r\n      choice_text: null,\r\n      thumbnailPic: null,\r\n      ChoiceAttachPath: null,\r\n      //  IsCorrect: false,\r\n      remove_image: false,\r\n    },\r\n    {\r\n      choice_id: 1,\r\n      choice_text: null,\r\n      thumbnailPic: null,\r\n      ChoiceAttachPath: null,\r\n      // IsCorrect: false,\r\n      remove_image: false,\r\n    },\r\n    {\r\n      choice_id: 2,\r\n      choice_text: null,\r\n      thumbnailPic: null,\r\n      ChoiceAttachPath: null,\r\n      // IsCorrect: false,\r\n      remove_image: false,\r\n    },\r\n    {\r\n      choice_id: 3,\r\n      choice_text: null,\r\n      thumbnailPic: null,\r\n      ChoiceAttachPath: null,\r\n      // IsCorrect: false,\r\n      remove_image: false,\r\n    },\r\n  ];\r\n\r\n  get choices() {\r\n    return this.myForm.get(\"choices\") as FormArray;\r\n  }\r\n\r\n  get QuestionId() {\r\n    return this.myForm.get(\"questionBank.question.id\");\r\n  }\r\n\r\n  get question_type_id() {\r\n    return this.myForm.get(\"questionBank.question.question_type_id\");\r\n  }\r\n\r\n  get teacherUserId() {\r\n    return this.myForm.get(\"questionBank.question.teacherUserId\");\r\n  }\r\n\r\n  get picked_choice_index() {\r\n    return this.myForm.get(\"picked_choice_index\");\r\n  }\r\n\r\n  get QuestionBankId() {\r\n    return this.myForm.get(\"questionBank.Id\");\r\n  }\r\n\r\n  get main_subject_id() {\r\n    return this.myForm.get(\"questionBank.main_subject_id\");\r\n  }\r\n\r\n  get question_id() {\r\n    return this.myForm.get(\"questionBank.question_id\");\r\n  }\r\n\r\n  get Id() {\r\n    return this.myForm.get(\"questionBank.Id\");\r\n  }\r\n\r\n  get unitId() {\r\n    return this.myForm.get(\"questionBank.unitId\");\r\n  }\r\n\r\n  get lessonId() {\r\n    return this.myForm.get(\"questionBank.lessonId\");\r\n  }\r\n\r\n  get topicId() {\r\n    return this.myForm.get(\"questionBank.topicId\");\r\n  }\r\n\r\n  get difficulty_level() {\r\n    return this.myForm.get(\"questionBank.difficulty_level\");\r\n  }\r\n\r\n  get question_ar_text() {\r\n    return this.myForm.get(\"questionBank.question.question_ar_text\");\r\n  }\r\n\r\n  get perfect_answer() {\r\n    return this.myForm.get(\"questionBank.question.perfect_answer\");\r\n  }\r\n\r\n  get prefectAnswerAttach() {\r\n    return this.myForm.get(\"questionBank.question.prefectAnswerAttach\");\r\n  }\r\n\r\n  get mark() {\r\n    return this.myForm.get(\"questionBank.mark\");\r\n  }\r\n\r\n  get remove_image() {\r\n    return this.myForm.get(\"questionBank.question.remove_image\");\r\n  }\r\n\r\n  get thumbnailPic() {\r\n    return this.myForm.get(\"questionBank.question.thumbnailPic\");\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n  previousSearch: IQBPreviousSearchVM;\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private authService: AuthService,\r\n    private examsService: ExamsService,\r\n    private datePipe: DatePipe,\r\n    private uploadFileService: UploadFileService\r\n  ) {\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.questionID = params.get(\"questionId\");\r\n      this.previousSearch =\r\n        this.router.getCurrentNavigation().extras.state?.previousSearch;\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n\r\n      if (this.questionID) {\r\n        this.getQuestionByID(this.questionID);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authService.getEduCompId();\r\n    this.branchId = this.authService.getBranchId();\r\n\r\n    this.myForm = this.fb.group({\r\n      questionBank: this.fb.group({\r\n        Id: 0,\r\n        main_subject_id: [\"\", Validators.required],\r\n        unitId: [\"\"],\r\n        lessonId: [\"\"],\r\n        topicId: [\"\"],\r\n        mark: [, [Validators.required, CustomeValidator.minusNum]],\r\n        difficulty_level: [\"1\", [Validators.required]],\r\n        question_id: [0],\r\n\r\n        question: this.fb.group({\r\n          id: [0, [Validators.required]],\r\n          question_type_id: [\"\", Validators.required],\r\n          // teacherUserId: [\"\"],\r\n          question_ar_text: [null],\r\n          perfect_answer: [\"\"],\r\n          prefectAnswerAttach: [null],\r\n          remove_image: [false],\r\n          thumbnailPic: [null],\r\n        }),\r\n      }),\r\n      picked_choice_index: [-1],\r\n      choices: this.fb.array([]),\r\n    });\r\n\r\n    this.changeQuestionType();\r\n    this.setDefaultChoises();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  private setDefaultChoises() {\r\n    this.questionsInputs.map((d) =>\r\n      this.choices.push(\r\n        this.fb.group({\r\n          choice_id: d.choice_id,\r\n          choice_text: d.choice_text,\r\n          thumbnailPic: d.thumbnailPic,\r\n          remove_image: d.remove_image,\r\n          //IsCorrect: d.IsCorrect,\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getQuestionByID(id: any) {\r\n    this.spinner.show();\r\n    this.examsService.getQuestionByID(id).subscribe((res: any) => {\r\n      if (res.QuestionId != null) {\r\n        this.QuestionBankId?.setValue(res.QuestionBankId);\r\n        this.QuestionId?.setValue(res.QuestionId);\r\n        this.question_id?.setValue(res.QuestionId);\r\n        this.main_subject_id?.setValue(res.SubjectId);\r\n        this.question_type_id?.setValue(res.QuestionTypeId);\r\n        //  this.teacherUserId?.setValue(res.TeacherUserId);\r\n        this.unitId?.setValue(res.UnitId);\r\n        this.lessonId?.setValue(res.LessonId);\r\n        this.topicId?.setValue(res.TopicId);\r\n        this.difficulty_level?.setValue(res.DifficultyLevel);\r\n        this.question_ar_text?.setValue(res.QuestionTextAr);\r\n        this.perfect_answer?.setValue(res.PerfectAnswer);\r\n        this.prefectAnswerAttach?.setValue(\r\n          `mozakretyapi${res?.PrefectAnswerAttachPath}`\r\n        );\r\n        this.perfectAnswerAttach_preview = `mozakretyapi${res?.PrefectAnswerAttachPath}`;\r\n\r\n        this.mark?.setValue(res.Mark);\r\n        this.thumbnailPic?.setValue(res.QuestionAttachId);\r\n\r\n        this.QuestionAttachPath =\r\n          res.QuestionAttachPath != null\r\n            ? \"mozakretyapi\" + res.QuestionAttachPath\r\n            : null;\r\n\r\n        if (res.Choices.length != 0) {\r\n          let d = res.Choices;\r\n          this.choices.clear();\r\n          this.questionsInputs = res.Choices;\r\n          this.questionsInputs.map((d: any) =>\r\n            this.choices.push(\r\n              this.fb.group({\r\n                choice_id: d.ChoiceId,\r\n                choice_text: d.ChoiceText,\r\n                thumbnailPic: d.thumbnailPic,\r\n                ChoiceAttachPath:\r\n                  d.ChoiceAttachPath != null\r\n                    ? \"mozakretyapi\" + d.ChoiceAttachPath\r\n                    : null,\r\n                //  IsCorrect: d.IsCorrect,\r\n                remove_image: d.remove_image || false,\r\n              })\r\n            )\r\n          );\r\n          // console.log(\"this.questionsInputs\", this.questionsInputs);\r\n          // console.log(\"this.Choices\", this.choices.value);\r\n\r\n          for (let obj of res.Choices) {\r\n            if (obj.IsCorrect == true) {\r\n              let i = res.Choices.findIndex(\r\n                (item: any) => item.IsCorrect === true\r\n              );\r\n              this.picked_choice_index?.setValue(i);\r\n            }\r\n          }\r\n        } else {\r\n          this.setDefaultChoises();\r\n        }\r\n      }\r\n\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  addUpdateQuestion() {\r\n    this.submitted = true;\r\n\r\n    //If MCQ Validation\r\n    if (\r\n      this.question_type_id?.value == 2 ||\r\n      this.question_type_id?.value == 3\r\n    ) {\r\n      if (\r\n        this.question_ar_text.value == null &&\r\n        this.thumbnailPic.value == null\r\n      ) {\r\n        this.toastr.warning(\"Must Enter question text or picture\");\r\n        return;\r\n      }\r\n\r\n      //answer 1\r\n      if (\r\n        this.choices.value[0].thumbnailPic == null &&\r\n        this.choices.value[0].choice_text == null\r\n      ) {\r\n        this.toastr.warning(\"Must Enter answer 1 text or picture\");\r\n        return;\r\n      }\r\n\r\n      //answer 2\r\n      else if (\r\n        this.choices.value[1].thumbnailPic == null &&\r\n        this.choices.value[1].choice_text == null\r\n      ) {\r\n        this.toastr.warning(\"Must Enter answer 2 text or picture\");\r\n        return;\r\n      }\r\n\r\n      //answer 3\r\n      else if (\r\n        this.choices.value[2].thumbnailPic == null &&\r\n        this.choices.value[2].choice_text == null\r\n      ) {\r\n        this.toastr.warning(\"Must Enter answer 3 text or picture\");\r\n        return;\r\n      }\r\n\r\n      //answer 4\r\n      else if (\r\n        this.choices.value[3].thumbnailPic == null &&\r\n        this.choices.value[3].choice_text == null\r\n      ) {\r\n        this.toastr.warning(\"Must Enter answer 4 text or picture\");\r\n        return;\r\n      }\r\n\r\n      //Correct answer\r\n      else if (this.picked_choice_index.value < 0) {\r\n        this.toastr.warning(\"Must Choose Correct answer \");\r\n        return;\r\n      } else {\r\n        //  console.log(\"Call API\");\r\n        this.spinner.show();\r\n        this.examsService\r\n          .addEditQuestion(this.EduCompId, this.myForm.value)\r\n          .subscribe((res: any) => {\r\n            if (res.questionId != null) {\r\n              if (this.Id.value == 0) {\r\n                this.picked_choice_index.setValue(-1);\r\n                this.question_ar_text.setValue(null);\r\n                this.thumbnailPic?.setValue(null);\r\n                this.QuestionAttachPath = null;\r\n                //  this.choices.clear();\r\n                //this.setDefaultChoises();\r\n                this.choices.value.forEach((e) => {\r\n                  e.thumbnailPic = null;\r\n                  e.ChoiceAttachPath = null;\r\n                });\r\n                //  console.log(\"choices\", this.choices);\r\n                this.toastr.success(\"General.AddSuccessfully\");\r\n              } else this.toastr.success(\"General.UpdateSuccessfully\");\r\n              this.question_id.setValue(res.questionId);\r\n              this.questionID = res.questionId;\r\n            }\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  setMainSubjectToForm(SubjectId: any) {\r\n    this.main_subject_id?.setValue(SubjectId);\r\n  }\r\n\r\n  //OnChange Question Type\r\n  changeQuestionType() {\r\n    this.question_type_id?.valueChanges.subscribe((data) => {\r\n      //  this.changeValidators();\r\n    });\r\n  }\r\n\r\n  //OnChange Question Type Change Validators\r\n  changeValidators() {\r\n    let question_type = this.question_type_id?.value;\r\n\r\n    if (question_type == 1) {\r\n      // this.myForm.controls['slectans'].clearValidators();\r\n      // this.perfect_answer.setValidators([\r\n      //   Validators.required,\r\n      //   CustomeValidator.whiteSpace,\r\n      // ]);\r\n    }\r\n\r\n    if (question_type == 2 || question_type == 3) {\r\n      this.perfect_answer.clearValidators();\r\n      this.perfect_answer.reset();\r\n      //  this.myForm.controls['slectans'].setValidators([]);\r\n    }\r\n\r\n    this.perfect_answer.updateValueAndValidity();\r\n    // this.myForm.controls['slectans'].updateValueAndValidity();\r\n  }\r\n\r\n  clearMainQuestionImg() {\r\n    this.thumbnailPic?.setValue(null);\r\n    this.QuestionAttachPath = null;\r\n  }\r\n\r\n  // Choose Question and answer Imgs\r\n  onChange(event, i: number) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        // if main question img\r\n        if (i == -1) {\r\n          this.thumbnailPic?.setValue(file);\r\n          this.QuestionAttachPath = file.FileAsBase64;\r\n        } else {\r\n          for (const obj of this.choices.value) {\r\n            let objIndex = this.choices.value.indexOf(obj);\r\n            if (objIndex === i) {\r\n              obj.thumbnailPic = file;\r\n              obj.ChoiceAttachPath = file.FileAsBase64;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  perfectAnswerAttach(event) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        this.prefectAnswerAttach.setValue(file);\r\n        this.perfectAnswerAttach_preview = file.FileAsBase64;\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"col-12\">\r\n  <div class=\"content-header\">\r\n    {{ \"Navbar.QuestionsBank\" | translate }}\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddQuestion\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          routerLink=\"../index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n          [state]=\"{\r\n            previousSearch: previousSearch\r\n          }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <ng-container formGroupName=\"questionBank\">\r\n                <div class=\"row\">\r\n                  <ng-container formGroupName=\"question\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.QuestionType\" | translate }}\r\n                        </mat-label>\r\n                        <mat-select\r\n                          formControlName=\"question_type_id\"\r\n                          (selectionChange)=\"changeQuestionType()\"\r\n                        >\r\n                          <mat-option>\r\n                            {{ \"General.Choose\" | translate }}\r\n                          </mat-option>\r\n\r\n                          <mat-option [value]=\"1\">\r\n                            {{ \"labels.Article\" | translate }}\r\n                          </mat-option>\r\n\r\n                          <mat-option [value]=\"2\">\r\n                            {{ \"labels.Mcq\" | translate }}\r\n                          </mat-option>\r\n\r\n                          <!--      <mat-option [value]=\"3\">\r\n                        {{ \"labels.questionChoose\" | translate }}\r\n                      </mat-option> -->\r\n                        </mat-select>\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            question_type_id?.invalid &&\r\n                            (question_type_id?.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span *ngIf=\"question_type_id?.errors?.required\">\r\n                            {{ \"labels.MustChoosevalue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </ng-container>\r\n\r\n                  <!-- cource dropdown -->\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <all-cources-dropdown\r\n                      [submitted]=\"false\"\r\n                      [control]=\"main_subject_id\"\r\n                    >\r\n                    </all-cources-dropdown>\r\n                  </div>\r\n\r\n                  <!-- Units dropdown -->\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <units-by-course-dropdown\r\n                      [submitted]=\"false\"\r\n                      [control]=\"unitId\"\r\n                      [courceControl]=\"main_subject_id\"\r\n                    >\r\n                    </units-by-course-dropdown>\r\n                  </div>\r\n\r\n                  <!-- Lesson dropdown -->\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <lessons-by-unit-dropdown\r\n                      [submitted]=\"false\"\r\n                      [control]=\"lessonId\"\r\n                      [unitControl]=\"unitId\"\r\n                    >\r\n                    </lessons-by-unit-dropdown>\r\n                  </div>\r\n\r\n                  <!-- Topic dropdown -->\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <topics-by-lesson-dropdown\r\n                      [submitted]=\"false\"\r\n                      [control]=\"topicId\"\r\n                      [lessonControl]=\"lessonId\"\r\n                    >\r\n                    </topics-by-lesson-dropdown>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Level\" | translate }}</mat-label>\r\n                      <mat-select formControlName=\"difficulty_level\">\r\n                        <mat-option>\r\n                          {{ \"General.Choose\" | translate }}\r\n                        </mat-option>\r\n                        <mat-option [value]=\"1\">سهل</mat-option>\r\n                        <mat-option [value]=\"5\">متوسط</mat-option>\r\n                        <mat-option [value]=\"10\">صعب</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>\r\n                        {{ \"labels.QuestionMark\" | translate }}\r\n                      </mat-label>\r\n                      <input matInput type=\"number\" formControlName=\"mark\" />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"mark.invalid && (mark.touched || submitted)\"\r\n                      >\r\n                        <span *ngIf=\"mark?.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span *ngIf=\"mark?.errors?.minusNum\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <!-- question text -->\r\n                  <ng-container formGroupName=\"question\">\r\n                    <div class=\"col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.question_ar_text\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"text\"\r\n                          formControlName=\"question_ar_text\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            question_ar_text.invalid &&\r\n                            (question_ar_text.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              question_ar_text?.errors?.required ||\r\n                              question_ar_text?.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- question text Editor -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label\r\n                        >{{ \"labels.question_ar_text\" | translate }}\r\n                      </mat-label>\r\n                      <quill-editor\r\n                        formControlName=\"question_ar_text\"\r\n                        [placeholder]=\"'labels.question_ar_text' | translate\"\r\n                      >\r\n                      </quill-editor>\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          question_ar_text.invalid &&\r\n                          (question_ar_text.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span\r\n                          *ngIf=\"\r\n                            question_ar_text?.errors?.required ||\r\n                            question_ar_text?.errors?.whiteSpace\r\n                          \"\r\n                        >\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </div> -->\r\n\r\n                    <!-- Question Picture -->\r\n                    <ng-container>\r\n                      <div class=\"col-md-4 col-12\">\r\n                        <mat-label>\r\n                          {{ \"labels.QuestionImage\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          class=\"form-control font-dro clearInputs\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          (change)=\"onChange($event, -1)\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"col-md-8 col-12\">\r\n                        <div class=\"question-img\">\r\n                          <mat-checkbox\r\n                            formControlName=\"remove_image\"\r\n                            [value]=\"true\"\r\n                            class=\"remove_image\"\r\n                          >\r\n                            Remove Image\r\n                          </mat-checkbox>\r\n\r\n                          <!-- <button\r\n                            *ngIf=\"QuestionAttachPath\"\r\n                            class=\"btn btn-danger\"\r\n                            (click)=\"clearMainQuestionImg()\"\r\n                          >\r\n                            Clear Image\r\n                          </button> -->\r\n                          <img class=\"img-fluid\" [src]=\"QuestionAttachPath\" />\r\n                        </div>\r\n                      </div>\r\n                    </ng-container>\r\n\r\n                    <!-- Perfect answer -->\r\n                    <!-- *ngIf=\"question_type_id.value == 1\" -->\r\n                    <div class=\"col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.perfect_answer\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"text\"\r\n                          formControlName=\"perfect_answer\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            perfect_answer.invalid &&\r\n                            (perfect_answer.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              perfect_answer?.errors?.required ||\r\n                              perfect_answer?.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- Perfect answer Editor -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.perfect_answer\" | translate }}\r\n                      </mat-label>\r\n                      <quill-editor\r\n                        formControlName=\"perfect_answer\"\r\n                        [placeholder]=\"'labels.perfect_answer' | translate\"\r\n                      >\r\n                      </quill-editor>\r\n                    </div> -->\r\n\r\n                    <!-- perfect answer attach-->\r\n                    <div class=\"col-12\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4 col-12\">\r\n                          <mat-label>\r\n                            {{ \"labels.perfectAnswerAttach\" | translate }}\r\n                          </mat-label>\r\n                          <input\r\n                            class=\"form-control font-dro clearInputs\"\r\n                            type=\"file\"\r\n                            accept=\"xlsx,.xls,image/*,audio/*,.pdf\"\r\n                            (change)=\"perfectAnswerAttach($event)\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div class=\"col-md-8 col-12\">\r\n                          <div class=\"question-img\">\r\n                            <iframe\r\n                              width=\"100%\"\r\n                              height=\"250\"\r\n                              class=\"border-0 img-fluid\"\r\n                              [src]=\"perfectAnswerAttach_preview | safe\"\r\n                            >\r\n                            </iframe>\r\n                            {{ perfectAnswerAttach_preview }}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-container>\r\n                </div>\r\n              </ng-container>\r\n              <hr />\r\n\r\n              <!-- If Question type multiple choice -->\r\n              <ng-container\r\n                *ngIf=\"\r\n                  question_type_id.value == 2 || question_type_id.value == 3\r\n                \"\r\n              >\r\n                <!-- MCQ -->\r\n                <!--  let question of choices.ccontrols; -->\r\n                <mat-card\r\n                  formArrayName=\"choices\"\r\n                  *ngFor=\"\r\n                    let question of choices.controls;\r\n                    let questionIndex = index\r\n                  \"\r\n                  class=\"card bg-light\"\r\n                >\r\n                  <mat-card-subtitle>\r\n                    {{ \"labels.AnswerNumber\" | translate }}({{\r\n                      questionIndex + 1\r\n                    }})\r\n                  </mat-card-subtitle>\r\n                  <mat-card-content [formGroupName]=\"questionIndex\">\r\n                    <div class=\"row\">\r\n                      <!-- <input type=\"hidden\" formControlName=\"id\" /> -->\r\n\r\n                      <!-- answer choice_text -->\r\n                      <div class=\"col-12\">\r\n                        <mat-form-field appearance=\"legacy\">\r\n                          <mat-label>\r\n                            {{ \"labels.AnswerText\" | translate }}({{\r\n                              questionIndex + 1\r\n                            }})\r\n                          </mat-label>\r\n                          <input\r\n                            matInput\r\n                            type=\"text\"\r\n                            formControlName=\"choice_text\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <!-- answer choice_text  editor-->\r\n                      <!--\r\n                      <div class=\"col-12\">\r\n                        <mat-label>\r\n                          {{ \"labels.AnswerText\" | translate }}\r\n                          ({{ questionIndex + 1 }})\r\n                        </mat-label>\r\n                        <quill-editor formControlName=\"choice_text\">\r\n                        </quill-editor>\r\n                      </div> -->\r\n\r\n                      <div class=\"col-12\">\r\n                        <!-- Question Pic -->\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4 col-12\">\r\n                            <mat-label>\r\n                              {{ \"labels.AnswerPic\" | translate }}\r\n                              ({{ questionIndex + 1 }})\r\n                            </mat-label>\r\n                            <input\r\n                              class=\"form-control font-dro clearInputs\"\r\n                              type=\"file\"\r\n                              accept=\"image/*\"\r\n                              (change)=\"onChange($event, questionIndex)\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div class=\"col-md-8 col-12\">\r\n                            <div class=\"question-img\">\r\n                              <!--   *ngIf=\"question.value?.ChoiceAttachPath !== null\" -->\r\n                              <mat-checkbox\r\n                                formControlName=\"remove_image\"\r\n                                [value]=\"true\"\r\n                                class=\"remove_image\"\r\n                              >\r\n                                Remove Image\r\n                              </mat-checkbox>\r\n                              <img\r\n                                class=\"img-fluid\"\r\n                                [src]=\"question.value?.ChoiceAttachPath\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n\r\n                <!-- Correct Choice -->\r\n                <mat-card class=\"bg-light-info\">\r\n                  <mat-card-title>\r\n                    {{ \"labels.ChooseCorrectAnswer\" | translate }}\r\n                  </mat-card-title>\r\n                  <mat-card-content>\r\n                    <mat-radio-group\r\n                      formControlName=\"picked_choice_index\"\r\n                      class=\"row\"\r\n                    >\r\n                      <div class=\"col-3\">\r\n                        <mat-radio-button [value]=\"0\">\r\n                          {{ \"labels.AnswerOne\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-3\">\r\n                        <mat-radio-button [value]=\"1\">\r\n                          {{ \"labels.AnswerTwo\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-3\">\r\n                        <mat-radio-button [value]=\"2\">\r\n                          {{ \"labels.AnswerThree\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-3\">\r\n                        <mat-radio-button [value]=\"3\">\r\n                          {{ \"labels.AnswerFour\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                    </mat-radio-group>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </ng-container>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"QuestionId.value == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"addUpdateQuestion()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"QuestionId.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"addUpdateQuestion()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\nimport {\r\n  IQuestionsBankVM,\r\n  IQBPreviousSearchVM,\r\n} from \"app/dashboard/models/setup/exams-setup/questionsBank\";\r\nimport { CourceStructureService } from \"app/dashboard/services/setup/educational-setup/cource-structure.service\";\r\nimport { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {\r\n  GeneralDropdownVM,\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-questions-index\",\r\n  templateUrl: \"./questions-index.component.html\",\r\n  styleUrls: [\"./questions-index.component.scss\"],\r\n})\r\nexport class QuestionsIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  itemsCount: number;\r\n  myForm: FormGroup;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n  Teachers: teacherByEduCompId[];\r\n  stages: GeneralDropdownVM[];\r\n  years: GeneralDropdownVM[];\r\n  subjects: GeneralDropdownVM[];\r\n  units: GeneralDropdownVM[];\r\n  lessons: GeneralDropdownVM[];\r\n  topics: GeneralDropdownVM[];\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"questionID\",\r\n    \"questionText\",\r\n    \"questionType\",\r\n    \"subjectName\",\r\n    \"unitName\",\r\n    \"lessonName\",\r\n    \"topicName\",\r\n    \"mark\",\r\n    \"levelName\",\r\n    \"actions\",\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<IQuestionsBankVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  previousSearch: IQBPreviousSearchVM;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private authService: AuthService,\r\n    private examService: ExamsService,\r\n    private GeneralService: GeneralService,\r\n    private courceStructureService: CourceStructureService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.previousSearch =\r\n        this.router.getCurrentNavigation().extras.state?.previousSearch;\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      teacherUserId: [\"\"],\r\n      stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n      topicId: [\"\"],\r\n      questionID: [\"\"],\r\n    });\r\n\r\n    this.myForm.patchValue(this.previousSearch);\r\n    this.EduCompId = this.authService.getEduCompId();\r\n    this.branchId = this.authService.getBranchId();\r\n    this.getQuestions(1);\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getQuestions(1);\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getQuestions(page: any) {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getQuestions(page, this.EduCompId, this.myForm.value)\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource(res.returnModel);\r\n        this.itemsCount = res.itemsCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  deleteQuestion(question: IQuestionsBankVM) {\r\n    this.spinner.show();\r\n    this.examService\r\n      .deleteQuestion(this.EduCompId, question.questionID)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e === question);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(question: IQuestionsBankVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${question.questionID} - ${question.questionTypeEnglishName}`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteQuestion(question);\r\n      });\r\n  }\r\n\r\n  resetManual() {\r\n    this.myForm.controls[\"teacherUserId\"].setValue(\"\");\r\n    this.myForm.controls[\"yearId\"].setValue(\"\");\r\n    this.myForm.controls[\"stageId\"].setValue(\"\");\r\n    this.myForm.controls[\"subjectId\"].setValue(\"\");\r\n    this.myForm.controls[\"unitId\"].setValue(\"\");\r\n    this.myForm.controls[\"lessonId\"].setValue(\"\");\r\n    this.myForm.controls[\"topicId\"].setValue(\"\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"col-12\">\r\n  <div class=\"content-header\">\r\n    {{ \"Navbar.QuestionsBank\" | translate }}\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.QuestionsSearch\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          routerLink=\"../add-question\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n          [state]=\"{\r\n            previousSearch: this.myForm.value\r\n          }\"\r\n        >\r\n          {{ \"labels.AddQuestion\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <!-- cource dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <all-cources-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"FormCtrl.subjectId\"\r\n                  >\r\n                  </all-cources-dropdown>\r\n                </div>\r\n\r\n                <!-- Units dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <units-by-course-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"FormCtrl.unitId\"\r\n                    [courceControl]=\"FormCtrl.subjectId\"\r\n                  >\r\n                  </units-by-course-dropdown>\r\n                </div>\r\n\r\n                <!-- Lesson dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <lessons-by-unit-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"FormCtrl.lessonId\"\r\n                    [unitControl]=\"FormCtrl.unitId\"\r\n                  >\r\n                  </lessons-by-unit-dropdown>\r\n                </div>\r\n\r\n                <!-- Topic dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <topics-by-lesson-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"FormCtrl.topicId\"\r\n                    [lessonControl]=\"FormCtrl.lessonId\"\r\n                  >\r\n                  </topics-by-lesson-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.QuestionID\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"questionID\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getQuestions(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Questions\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- questionID Column -->\r\n            <ng-container matColumnDef=\"questionID\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.questionID }}</td>\r\n            </ng-container>\r\n\r\n            <!-- questionText Column -->\r\n            <ng-container matColumnDef=\"questionText\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.question_ar_text\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.questionName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- questionType Column -->\r\n            <ng-container matColumnDef=\"questionType\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.QuestionType\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.questionTypeArabicName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- subjectName Column -->\r\n            <ng-container matColumnDef=\"subjectName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Subject\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.subjectName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- unitName Column -->\r\n            <ng-container matColumnDef=\"unitName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Unit\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.unitName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- lessonName Column -->\r\n            <ng-container matColumnDef=\"lessonName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Lesson\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.lessonName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- topicName Column -->\r\n            <ng-container matColumnDef=\"topicName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Topic\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.topicName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mark Column -->\r\n            <ng-container matColumnDef=\"mark\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.QuestionMark\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mark }}</td>\r\n            </ng-container>\r\n\r\n            <!-- levelName Column -->\r\n            <ng-container matColumnDef=\"levelName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Level\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.levelName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let question\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit\"\r\n                    routerLink=\"../add-question\"\r\n                    [queryParams]=\"{\r\n                      questionId: question.questionID,\r\n                      functionId: functionId\r\n                    }\"\r\n                    [state]=\"{\r\n                      previousSearch: this.myForm.value\r\n                    }\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(question)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getQuestions($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { TemplatesService } from \"app/dashboard/services/setup/exams-setup/templates.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport {\r\n  GeneralDropdownVM,\r\n  IRowFunctionVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {\r\n  IAddTemplateVM,\r\n  ITemlateVM,\r\n  TemplateDetailsVM,\r\n} from \"app/dashboard/models/setup/exams-setup/exams\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-template\",\r\n  templateUrl: \"./add-template.component.html\",\r\n  styleUrls: [\"./add-template.component.scss\"],\r\n})\r\nexport class AddTemplateComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  Presets: any = [];\r\n  unitsForDetails: GeneralDropdownVM[];\r\n  lessonsForDetails: GeneralDropdownVM[];\r\n  topicsForDetails: GeneralDropdownVM[];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  templateId: any = null;\r\n  templateName: string;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private toastr: MessagesService,\r\n    public spinner: NgxSpinnerService,\r\n    public authserv: AuthService,\r\n    private TemplatesService: TemplatesService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.templateId = params.get(\"templateId\");\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.templateId) {\r\n        this.getTemplateById();\r\n      }\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      EduCompId: [this.EduCompId],\r\n      Id: [this.templateId],\r\n      presetTemplateId: [\"\"],\r\n      teacherUserId: [\"\", Validators.required],\r\n      yearId: [\"\", Validators.required],\r\n      stageId: [\"\", Validators.required],\r\n      subjectId: [\"\", Validators.required],\r\n      UnitRevisionID: [\"\"],\r\n      LessonID: [\"\"],\r\n      topicId: [\"\"],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      price: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      exam_minute: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      exam_hour: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      priceDiscount: [\"\"],\r\n      Avilable_Date_From: [\"\"],\r\n      priceDiscountType: [0],\r\n      Avilable_Date_To: [\"\"],\r\n      fromHour: [\"\"],\r\n      toHour: [\"\"],\r\n      ResultDate: [\"\"],\r\n      ResultTime: [\"\"],\r\n      Individually_Purchased: [false],\r\n      repeatableExam: [false],\r\n      repeatableExam_Count: [false],\r\n      SendWhatsApp: [false],\r\n      CustomDiscountApplied: [false],\r\n      StudentRepeatExamCost: [\"\"],\r\n      Publish: [false],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n    this.getPresets();\r\n\r\n    this.FormCtrl.EduCompId.setValue(this.EduCompId);\r\n    this.repeatableExamValidators();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  addUpdateTemplate() {\r\n    this.submitted = true;\r\n\r\n    //this.datePipe.transform(this.resualtDateCtrl.value),\r\n    let obj: IAddTemplateVM = this.myForm.value;\r\n    obj.Avilable_Date_From = this.datePipe.transform(\r\n      this.FormCtrl.Avilable_Date_From.value\r\n    );\r\n    obj.Avilable_Date_To = this.datePipe.transform(\r\n      this.FormCtrl.Avilable_Date_To.value\r\n    );\r\n\r\n    obj.ResultDate = this.datePipe.transform(this.FormCtrl.ResultDate.value);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.TemplatesService.addUpdateTemplate({\r\n        presetTemplateId: obj.presetTemplateId,\r\n        template: obj,\r\n      }).subscribe((res: any) => {\r\n        if (res.returnValue) {\r\n          this.templateId = res.returnValue;\r\n          this.FormCtrl.Id.setValue(res.returnValue);\r\n          this.submitted = false;\r\n          // this.myForm.reset();\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          // } else {\r\n          //this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getTemplateById() {\r\n    this.spinner.show();\r\n    this.TemplatesService.getTemplateById<ITemlateVM[]>(\r\n      this.templateId\r\n    ).subscribe((res: any) => {\r\n      this.FormCtrl.teacherUserId.setValue(res.teacherUserId);\r\n      this.myForm.patchValue(res);\r\n      this.FormCtrl.stageId.setValue(res.stage_id);\r\n      this.FormCtrl.yearId.setValue(res.educational_year_id);\r\n      this.FormCtrl.subjectId.setValue(res.subjectId);\r\n      this.FormCtrl.UnitRevisionID.setValue(res.UnitRevisionID);\r\n      this.FormCtrl.LessonID.setValue(res.LessonID);\r\n      this.templateName = res.Name;\r\n      let exam_minute = res.exam_period_minute % 60;\r\n      let exam_hour = (res.exam_period_minute - exam_minute) / 60;\r\n      this.FormCtrl.exam_minute.setValue(exam_minute);\r\n      this.FormCtrl.exam_hour.setValue(exam_hour);\r\n      this.FormCtrl.fromHour.setValue(res.fromHour);\r\n      this.FormCtrl.toHour.setValue(res.toHour);\r\n      // this.GetUnitsForDetails();\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getPresets() {\r\n    this.spinner.show();\r\n    this.TemplatesService.getPresets(this.EduCompId).subscribe((res: any) => {\r\n      // console.log('getPresets', res);\r\n      this.Presets = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  resetManual() {\r\n    this.myForm.controls[\"teacherUserId\"].setValue(\"\");\r\n    this.myForm.controls[\"yearId\"].setValue(\"\");\r\n    this.myForm.controls[\"stageId\"].setValue(\"\");\r\n    this.myForm.controls[\"subjectId\"].setValue(\"\");\r\n    this.myForm.controls[\"UnitRevisionID\"].setValue(\"\");\r\n    this.myForm.controls[\"lessonId\"].setValue(\"\");\r\n    this.myForm.controls[\"topicId\"].setValue(\"\");\r\n  }\r\n\r\n  repeatableExamValidators() {\r\n    let repeatableExam = this.FormCtrl.repeatableExam.value;\r\n    if (repeatableExam == true) {\r\n      this.FormCtrl.repeatableExam_Count.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.FormCtrl.StudentRepeatExamCost.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n    } else {\r\n      this.FormCtrl.repeatableExam_Count.clearValidators();\r\n      this.FormCtrl.repeatableExam_Count.reset();\r\n      this.FormCtrl.StudentRepeatExamCost.clearValidators();\r\n      this.FormCtrl.StudentRepeatExamCost.reset();\r\n    }\r\n    this.FormCtrl.repeatableExam_Count.updateValueAndValidity();\r\n    this.FormCtrl.StudentRepeatExamCost.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- Template Details -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"this.FormCtrl.Id.value == null\">\r\n          {{ \"labels.AddTemplate\" | translate }}\r\n        </span>\r\n        <span *ngIf=\"this.FormCtrl.Id.value != null\">\r\n          {{ \"labels.UpdateTemplate\" | translate }} - {{ templateName }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- Preset -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>Preset</mat-label>\r\n                    <mat-select formControlName=\"presetTemplateId\">\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Preset of Presets\"\r\n                        [value]=\"Preset.Id\"\r\n                      >\r\n                        {{ Preset.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Cources [subjects] dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <all-cources-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.subjectId\"\r\n                  >\r\n                  </all-cources-dropdown>\r\n                </div>\r\n\r\n                <!-- Units dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <units-by-course-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.UnitRevisionID\"\r\n                    [courceControl]=\"myForm.controls.subjectId\"\r\n                  >\r\n                  </units-by-course-dropdown>\r\n                </div>\r\n\r\n                <!-- Lesson dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <lessons-by-unit-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.LessonID\"\r\n                    [unitControl]=\"myForm.controls.UnitRevisionID\"\r\n                  >\r\n                  </lessons-by-unit-dropdown>\r\n                </div>\r\n\r\n                <!-- Stage -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Navbar.EducationalStage\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"returnYears(FormCtrl.stageId?.value)\"\r\n                      formControlName=\"stageId\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of stages\"\r\n                        [value]=\"stage.Value\"\r\n                      >\r\n                        {{ stage.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.stageId?.invalid &&\r\n                        (FormCtrl.stageId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.stageId?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- Year -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.EducationalYear\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"\r\n                        returnTeacherSubjects(FormCtrl.yearId?.value)\r\n                      \"\r\n                      formControlName=\"yearId\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let year of years\"\r\n                        [value]=\"year.Value\"\r\n                      >\r\n                        {{ year.Text_Ar }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.yearId?.invalid &&\r\n                        (FormCtrl.yearId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.yearId.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- Subject -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Material.Subjects\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"subjectId\">\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let subject of subjects\"\r\n                        [value]=\"subject.Value\"\r\n                      >\r\n                        {{ subject.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.subjectId?.invalid &&\r\n                        (FormCtrl.subjectId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.subjectId?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- Unit -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"UnitRevisionID\">\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let unit of units\"\r\n                        [value]=\"unit.Value\"\r\n                      >\r\n                        {{ unit.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.UnitRevisionID?.invalid &&\r\n                        (FormCtrl.UnitRevisionID?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.UnitRevisionID?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- Lesson -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"LessonID\">\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let lesson of lessons\"\r\n                        [value]=\"lesson.Value\"\r\n                      >\r\n                        {{ lesson.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.LessonID?.invalid &&\r\n                        (FormCtrl.LessonID?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.LessonID?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- Template Name -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.TemplateName\" | translate\r\n                    }}</mat-label>\r\n                    <input matInput formControlName=\"Name\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.Name?.invalid &&\r\n                        (FormCtrl.Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.Name?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrl.Name?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Exam Hours -->\r\n                <div class=\"col-md-2 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamHours\" | translate }}</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"exam_hour\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.exam_hour?.invalid &&\r\n                        (FormCtrl.exam_hour?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.exam_hour?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrl.exam_hour?.errors?.minusNum\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Exam minute -->\r\n                <div class=\"col-md-2 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamMinute\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"exam_minute\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.exam_minute?.invalid &&\r\n                        (FormCtrl.exam_minute?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.exam_minute?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span *ngIf=\"FormCtrl.exam_minute?.errors?.minusNum\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Exam price -->\r\n                <div class=\"col-md-2 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamPrice\" | translate }} </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"price\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.price?.invalid &&\r\n                        (FormCtrl.price?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.price?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"price?.errors?.minusNum\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Discount -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Discount\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"priceDiscount\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Discount Type -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.DiscountType\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"priceDiscountType\">\r\n                      <mat-option value=\"\"\r\n                        >{{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option value=\"1\">عام</mat-option>\r\n                      <mat-option value=\"2\">خاص</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- From Date -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"Avilable_Date_From\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- to Date -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"Avilable_Date_To\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- From Time -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.FromTime\" | translate }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"fromHour\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- to Time -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ToTime\" | translate }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"toHour\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- resualt Date -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ExamResultDate\" | translate }}</mat-label\r\n                    >\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"resualtDate\"\r\n                      formControlName=\"ResultDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"resualtDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #resualtDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Result Time -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.examResultTime\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"ResultTime\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- can Sell Individually -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.SellExamOnly\" | translate }}\r\n                  </mat-label>\r\n                  <mat-radio-group\r\n                    formControlName=\"Individually_Purchased\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- is Repeatable -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.RepeatedExam\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group formControlName=\"repeatableExam\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        (change)=\"repeatableExamValidators()\"\r\n                      >\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        (change)=\"repeatableExamValidators()\"\r\n                      >\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- send WhatsApp Msg -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group formControlName=\"SendWhatsApp\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- Custom Discount -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.CustomDiscount\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group\r\n                    formControlName=\"CustomDiscountApplied\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"FormCtrl.repeatableExam?.value == true\">\r\n                  <!-- repeat Numbers -->\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"labels.repeatNumbers\" | translate\r\n                      }}</mat-label>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        formControlName=\"repeatableExam_Count\"\r\n                      />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          FormCtrl.repeatableExam_Count?.invalid &&\r\n                          (FormCtrl.repeatableExam_Count?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span\r\n                          *ngIf=\"\r\n                            FormCtrl.repeatableExam_Count?.errors?.required\r\n                          \"\r\n                        >\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span\r\n                          *ngIf=\"FormCtrl.repeatableExam_Count?.errors?.bigZero\"\r\n                        >\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <!-- repeating Price -->\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"labels.repeatingPrice\" | translate\r\n                      }}</mat-label>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        formControlName=\"StudentRepeatExamCost\"\r\n                      />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          FormCtrl.StudentRepeatExamCost?.invalid &&\r\n                          (FormCtrl.StudentRepeatExamCost?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span\r\n                          *ngIf=\"\r\n                            FormCtrl.StudentRepeatExamCost?.errors?.required\r\n                          \"\r\n                        >\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span\r\n                          *ngIf=\"\r\n                            FormCtrl.StudentRepeatExamCost?.errors?.minusNum\r\n                          \"\r\n                        >\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"this.FormCtrl.Id.value == null\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"addUpdateTemplate()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"this.FormCtrl.Id.value != null\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"addUpdateTemplate()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<app-template-details [templateId]=\"templateId\" [subjectId]=\"FormCtrl.subjectId\"> </app-template-details>\r\n","import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { TemplatesService } from \"app/dashboard/services/setup/exams-setup/templates.service\";\r\nimport { Input } from \"@angular/core\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { TemplateDetailsVM } from \"app/dashboard/models/setup/exams-setup/exams\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-template-details\",\r\n  templateUrl: \"./template-details.component.html\",\r\n  styleUrls: [\"./template-details.component.scss\"],\r\n})\r\nexport class TemplateDetailsComponent implements OnInit {\r\n  @Input() templateId: number;\r\n  @Input() subjectId: FormControl;\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  QuestionDetails: TemplateDetailsVM[] = [];\r\n\r\n  p: number = 1;\r\n  maxSize = 9;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    public spinner: NgxSpinnerService,\r\n    public authserv: AuthService,\r\n    private TemplatesService: TemplatesService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      templateId: [this.templateId, Validators.required],\r\n      questionsLevel: [\"\", Validators.required],\r\n      mark: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      questionsCount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      unitRevisionID: [\"\", Validators.required],\r\n      lessonID: [\"\", Validators.required],\r\n      TopicID: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    console.log(\"templateId\", this.templateId);\r\n\r\n    if (this.templateId > 0) this.getQuestionDetails();\r\n  }\r\n\r\n  get DetailsCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  addTemplateDetails() {\r\n    this.submitted = true;\r\n    let valid = this.myForm.valid;\r\n    // console.log(this.myForm.value);\r\n    if (valid) {\r\n      this.spinner.show();\r\n      this.TemplatesService.addTemplateDetails(this.myForm.value).subscribe(\r\n        (res: any) => {\r\n          //     console.log(\"addDetails\", res);\r\n          if (res.returnValue == 1) {\r\n            this.submitted = false;\r\n            // this.myForm.reset();\r\n            this.getQuestionDetails();\r\n            // this.DetailsCtrl.questionsCount.reset();\r\n            // this.DetailsCtrl.unitRevisionID.setValue(\"\");\r\n            // this.DetailsCtrl.lessonID.setValue(\"\");\r\n            // this.DetailsCtrl.TopicID.setValue(\"\");\r\n            // this.DetailsCtrl.mark.reset();\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            this.toastr.error(res.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getQuestionDetails() {\r\n    this.spinner.show();\r\n    this.TemplatesService.getQuestionDetails(this.templateId).subscribe(\r\n      (res: any) => {\r\n        // console.log(\"getDetails\", res);\r\n        this.QuestionDetails = res;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  DeleteDetails(question: TemplateDetailsVM) {\r\n    this.spinner.show();\r\n    this.TemplatesService.DeleteDetails(question.Id).subscribe((res: any) => {\r\n      //console.log('DeleteDetails', res);\r\n      if (res.Id == question.Id) {\r\n        let i = this.QuestionDetails.findIndex((e) => e == question);\r\n        this.QuestionDetails.splice(i, 1);\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(question: TemplateDetailsVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: \"\",\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.DeleteDetails(question);\r\n      });\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.Id;\r\n  }\r\n}\r\n","<!-- Question Details -->\r\n<!--  *ngIf=\"templateId > 0\" -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>\r\n          {{ \"labels.QuestionData\" | translate }}\r\n        </span>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- questions Count -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.questionsCount\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"questionsCount\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"rtl has-error pull-right\"\r\n                      *ngIf=\"\r\n                        DetailsCtrl.questionsCount.invalid &&\r\n                        (DetailsCtrl.questionsCount.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"DetailsCtrl.questionsCount.errors?.required\"\r\n                      >\r\n                        You must enter a value.\r\n                      </span>\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"DetailsCtrl.questionsCount.errors?.bigZero\"\r\n                      >\r\n                        You must enter a correct value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- questions Level -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Level\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"questionsLevel\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option [value]=\"1\">سهل</mat-option>\r\n                      <mat-option [value]=\"5\">متوسط</mat-option>\r\n                      <mat-option [value]=\"10\">صعب</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Question Mark -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.QuestionMark\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"mark\" />\r\n                    <mat-hint\r\n                      class=\"rtl has-error pull-right\"\r\n                      *ngIf=\"\r\n                        DetailsCtrl.mark.invalid &&\r\n                        (DetailsCtrl.mark.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"DetailsCtrl.mark.errors?.required\"\r\n                      >\r\n                        You must enter a value.\r\n                      </span>\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"DetailsCtrl.mark.errors?.minusNum\"\r\n                      >\r\n                        You must enter a correct value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Units dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <units-by-course-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.unitRevisionID\"\r\n                    [courceControl]=\"subjectId\"\r\n                  >\r\n                  </units-by-course-dropdown>\r\n                </div>\r\n\r\n                <!-- Lesson dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <lessons-by-unit-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.lessonID\"\r\n                    [unitControl]=\"myForm.controls.unitRevisionID\"\r\n                  >\r\n                  </lessons-by-unit-dropdown>\r\n                </div>\r\n\r\n                <!-- Topic dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <topics-by-lesson-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.TopicID\"\r\n                    [lessonControl]=\"myForm.controls.lessonID\"\r\n                  >\r\n                  </topics-by-lesson-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"templateId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"addTemplateDetails()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- Question List  -->\r\n<!--  *ngIf=\"templateId > 0\" -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>\r\n          {{ \"labels.Questions\" | translate }}\r\n        </span>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <table class=\"table table-striped table-hover table-full-width rtl\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>{{ \"labels.questionsCount\" | translate }}</th>\r\n                  <th>{{ \"labels.QuestionMark\" | translate }}</th>\r\n                  <th>{{ \"labels.Level\" | translate }}</th>\r\n                  <th>{{ \"labels.Subject\" | translate }}</th>\r\n                  <th>{{ \"labels.Unit\" | translate }}</th>\r\n                  <th>{{ \"labels.Lesson\" | translate }}</th>\r\n                  <th>{{ \"labels.Topic\" | translate }}</th>\r\n                  <th>­</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  *ngFor=\"\r\n                    let detail of QuestionDetails\r\n                      | paginate\r\n                        : {\r\n                            itemsPerPage: 5,\r\n                            currentPage: p,\r\n                            totalItems: QuestionDetails.length\r\n                          };\r\n                    let i = index;\r\n                    trackBy: track\r\n                  \"\r\n                >\r\n                  <td>{{ i + 1 }}</td>\r\n\r\n                  <td>{{ detail?.questionsCount }}</td>\r\n                  <td>{{ detail?.mark }}</td>\r\n                  <td *ngIf=\"detail?.questionsLevel == 1\">سهل</td>\r\n                  <td *ngIf=\"detail?.questionsLevel == 5\">متوسط</td>\r\n                  <td *ngIf=\"detail?.questionsLevel == 10\">صعب</td>\r\n                  <td>{{ detail?.SubjectName }}</td>\r\n                  <td>{{ detail?.UnitName }}</td>\r\n                  <td>{{ detail?.LessonName }}</td>\r\n                  <td>{{ detail?.TopicName }}</td>\r\n\r\n                  <td class=\"text-center\">\r\n                    <button\r\n                      (click)=\"openDeleateDialog(detail)\"\r\n                      mat-mini-fab\r\n                      color=\"warn\"\r\n                      matTooltip=\"delete questions\"\r\n                    >\r\n                      <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- Start Pagination -->\r\n            <div class=\"paginator-box\" *ngIf=\"QuestionDetails.length > 5\">\r\n              <pagination-controls\r\n                dir=\"ltr\"\r\n                [maxSize]=\"maxSize\"\r\n                (pageChange)=\"p = $event\"\r\n                previousLabel=\"\"\r\n                nextLabel=\"\"\r\n              >\r\n              </pagination-controls>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IExamPointVM, IAddExamCustomePointsVM } from \"app/dashboard/models/setup/points-setup/point\";\r\nimport { PointsService } from \"app/dashboard/services/setup/points-setup/points.service\";\r\n\r\n@Component({\r\n  selector: \"app-templates-custome-points\",\r\n  templateUrl: \"./templates-custome-points.component.html\",\r\n  styleUrls: [\"./templates-custome-points.component.scss\"],\r\n})\r\nexport class TemplatesCustomePointsComponent implements OnInit {\r\n  Points: IExamPointVM[];\r\n  myForm!: FormGroup;\r\n  Submitted = false;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  ItemsCount?: number;\r\n  templateId: number;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authserv: AuthService,\r\n    private route: ActivatedRoute,\r\n    private PointsService: PointsService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.templateId = Number(params.get(\"templateId\"));\r\n    });\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTemplateCustomPoints(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      ByQuestion: [false, [Validators.required]],\r\n      from: [\"\"],\r\n      to: [\"\"],\r\n      value: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.ByQuestionValidators(false);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  addTemplateCustomPoint() {\r\n    this.Submitted = true;\r\n\r\n    let data: IAddExamCustomePointsVM = {\r\n      itemId: this.templateId,\r\n      ByQuestion: this.FormCtrls?.ByQuestion.value,\r\n      from: this.FormCtrls?.from.value,\r\n      to: this.FormCtrls?.to.value,\r\n      value: this.FormCtrls?.value.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.PointsService.addTemplateCustomPoint(data).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.getTemplateCustomPoints(1);\r\n          this.toastr.success(\"تم إاضافة النقاط\");\r\n          this.Submitted = false;\r\n          this.myForm.reset();\r\n          this.FormCtrls?.ByQuestion.setValue(true);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getTemplateCustomPoints(p: Number) {\r\n    this.spinner.show();\r\n    this.PointsService.getTemplateCustomPoints<IExamPointVM>(\r\n      p,\r\n      this.templateId\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.ItemsCount = res.itemsCount;\r\n        this.Points = res.points;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  deleteExamCustomPoint(point: IExamPointVM) {\r\n    this.spinner.show();\r\n    this.PointsService.deleteExamCustomPoint(point.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.Points.findIndex((e) => e == point);\r\n        this.Points.splice(i, 1);\r\n        this.toastr.success(\"تم الحذف\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  openDeleateExamPointDialog(point: IExamPointVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${point.Value}: points`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteExamCustomPoint(point);\r\n      });\r\n  }\r\n\r\n  track(index: number, point: IExamPointVM): number {\r\n    return point.Id;\r\n  }\r\n\r\n  ByQuestionValidators(ByQuestion: boolean) {\r\n    if (ByQuestion == true) {\r\n      this.FormCtrls.from.reset();\r\n      this.FormCtrls.from.clearValidators();\r\n      this.FormCtrls.to.reset();\r\n      this.FormCtrls.to.clearValidators();\r\n    } else {\r\n      this.FormCtrls.from.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.FormCtrls.to.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.bigZero,\r\n      ]);\r\n    }\r\n    this.FormCtrls.from.updateValueAndValidity();\r\n    this.FormCtrls.to.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.TemplatePoints\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/exams-setup/templates/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <!--  ByQuestion    -->\r\n            <!-- <div class=\"col-12\">\r\n              <mat-label>\r\n                {{ \"labels.ByQuestionLabel\" | translate }}\r\n              </mat-label>\r\n              <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-radio-button\r\n                    [value]=\"true\"\r\n                    (click)=\"ByQuestionValidators(true)\"\r\n                  >\r\n                    {{ \"labels.ByQuestion\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <mat-radio-button\r\n                    [value]=\"false\"\r\n                    (click)=\"ByQuestionValidators(false)\"\r\n                  >\r\n                    {{ \"labels.ByExam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n            <ng-container *ngIf=\"FormCtrls.ByQuestion.value === false\">\r\n              <!--  from    -->\r\n              <div class=\"col-lg-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.From\" | translate }}\r\n                  </mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"from\" />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      FormCtrls.from.invalid &&\r\n                      (FormCtrls.from.touched || Submitted)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.from.errors?.required ||\r\n                        FormCtrls.from.errors?.minusNum\r\n                      \"\r\n                    >\r\n                      You must enter a value.\r\n                    </span>\r\n                  </mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <!-- to  -->\r\n              <div class=\"col-lg-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.To\" | translate }}\r\n                  </mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"to\" />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      FormCtrls.to.invalid &&\r\n                      (FormCtrls.to.touched || Submitted)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.to.errors?.required ||\r\n                        FormCtrls.to.errors?.minusNum\r\n                      \"\r\n                    >\r\n                      You must enter a value.\r\n                    </span>\r\n                  </mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <!-- value ==> points Number  -->\r\n            <div class=\"col-lg-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.pointsNumber\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"value\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.value.invalid &&\r\n                    (FormCtrls.value.touched || Submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.value.errors?.required ||\r\n                      FormCtrls.value.errors?.minusNum\r\n                    \"\r\n                  >\r\n                    You must enter a value.\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <mat-card-actions align=\"end\">\r\n            <button\r\n              mat-raised-button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              (click)=\"addTemplateCustomPoint()\"\r\n            >\r\n              {{ \"General.Add\" | translate }}\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n\r\n        <!-- Start Exams points Table -->\r\n        <ng-container>\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  {{ \"labels.ByQuestion\" | translate }}\r\n                </th>\r\n                <th>\r\n                  {{ \"labels.From\" | translate }}\r\n                </th>\r\n\r\n                <th>\r\n                  {{ \"labels.To\" | translate }}\r\n                </th>\r\n\r\n                <th>\r\n                  {{ \"labels.pointsNumber\" | translate }}\r\n                </th>\r\n\r\n                <th>actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"\r\n                  let point of Points\r\n                    | paginate\r\n                      : {\r\n                          itemsPerPage: 5,\r\n                          currentPage: p,\r\n                          totalItems: ItemsCount\r\n                        };\r\n                  let i = index;\r\n                  trackBy: track\r\n                \"\r\n              >\r\n                <td *ngIf=\"point.ByQuestion\">\r\n                  {{ \"labels.ByQuestion\" | translate }}\r\n                </td>\r\n                <td *ngIf=\"!point.ByQuestion\">\r\n                  {{ \"labels.ByExam\" | translate }}\r\n                </td>\r\n                <td>{{ point.FromValue }}</td>\r\n                <td>{{ point.ToValue }}</td>\r\n                <td>{{ point.Value }}</td>\r\n                <td>\r\n                  <button\r\n                    (click)=\"openDeleateExamPointDialog(point)\"\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <!-- Start  Pagination -->\r\n            <pagination-controls\r\n              *ngIf=\"Points?.length > 5\"\r\n              dir=\"ltr\"\r\n              [maxSize]=\"maxSize\"\r\n              (pageChange)=\"p = $event; getExamCustomPoints($event)\"\r\n              previousLabel=\"\"\r\n              nextLabel=\"\"\r\n            >\r\n            </pagination-controls>\r\n          </table>\r\n        </ng-container>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  GeneralDropdownVM,\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { ITemplateListVM } from \"app/dashboard/models/setup/exams-setup/exams\";\r\nimport { TemplatesService } from \"app/dashboard/services/setup/exams-setup/templates.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n@Component({\r\n  selector: \"app-templates-index\",\r\n  templateUrl: \"./templates-index.component.html\",\r\n  styleUrls: [\"./templates-index.component.css\"],\r\n})\r\nexport class TemplatesIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  itemsCount: any;\r\n  Templates: ITemplateListVM[] = [];\r\n  Teachers: teacherByEduCompId[] = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  subjects: GeneralDropdownVM[] = [];\r\n  units: any = [];\r\n  lessons: any = [];\r\n  topics: any = [];\r\n  EduCompId: any;\r\n  submitted = false;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions = [\r\n    { functionName: \"Publish\" },\r\n    { functionName: \"Edit\" },\r\n    { functionName: \"previewTemplate\" },\r\n    { functionName: \"whatsApp\" },\r\n    { functionName: \"Points\" },\r\n    { functionName: \"Grades\" },\r\n    { functionName: \"Delete\" },\r\n  ];\r\n  displayedColumns: string[] = [\r\n    \"Name\",\r\n    \"Teacher\",\r\n    \"Subject\",\r\n    \"Year\",\r\n    \"publish\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<ITemplateListVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private fb: FormBuilder,\r\n    private TemplatesService: TemplatesService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      yearId: [null],\r\n      stageId: [null],\r\n      subjectId: [],\r\n      unitId: [],\r\n      lessonId: [null],\r\n      topicId: [null],\r\n      page: [1],\r\n    });\r\n    this.getTemplates(1);\r\n\r\n    this.myForm.valueChanges.subscribe((val) => {\r\n      console.log(\"valueChanges\", val);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTemplates(1);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      //this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getTemplates(p: number) {\r\n    this.spinner.show();\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    this.TemplatesService.getTemplates(\r\n      this.EduCompId,\r\n      p,\r\n      this.myForm.value\r\n    ).subscribe((res: any) => {\r\n      //  console.log('getTemplates',res);\r\n      this.Templates = res.result;\r\n      this.dataSource = new MatTableDataSource(res.result);\r\n      this.itemsCount = res.TotalItemCount;\r\n      this.spinner.hide();\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  PublishDepublishTemplate(templateId: any) {\r\n    this.spinner.show();\r\n    this.TemplatesService.PublishDepublishTemplate(templateId).subscribe(\r\n      (res: any) => {\r\n        if (res.returnString == \"Done\") {\r\n          for (const obj of this.Templates) {\r\n            if (obj.Id === templateId) {\r\n              obj.isPublish = !obj.isPublish;\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  openDeleateDialog(template: ITemplateListVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: template.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteTemplate(template);\r\n      });\r\n  }\r\n\r\n  deleteTemplate(template: ITemplateListVM) {\r\n    this.TemplatesService.deleteTemplate(template.Id).subscribe((res: any) => {\r\n      let deletedIndex = this.Templates.findIndex((e) => e.Id == template.Id);\r\n      this.Templates.splice(deletedIndex, 1);\r\n      this.toastr.success(\"General.DeleteSuccessfully\");\r\n      this.getTemplates(1);\r\n    });\r\n  }\r\n\r\n  GenerateExamFromTemplate(templateId: any) {\r\n    this.spinner.show();\r\n    this.TemplatesService.GenerateExamFromTemplate(templateId).subscribe(\r\n      (res: any) => {\r\n        if ((res.returnValue = 200 && res.examId)) {\r\n          let url = `/dashboard/exams-setup/exam-preview/${res.examId}?templateId=${templateId}`;\r\n          window.open(url, \"_blank\");\r\n          // this.router\r\n          //   .navigate([`/dashboard/exams-setup/exam-preview/${res.examId}`], {\r\n          //     queryParams: { templateId: templateId },\r\n          //   })\r\n          //   .then((result) => {\r\n          //     window.open(url, \"_blank\");\r\n          //   });\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../add-template\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getTemplates(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n\r\n                <!-- Stages Dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-educational-stage-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.stageId\"\r\n                  >\r\n                  </app-educational-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Years dropdown-->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <educational-year-by-stage-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.yearId\"\r\n                    [stageControl]=\"myForm.controls.stageId\"\r\n                  >\r\n                  </educational-year-by-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Cources [subjects] dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <cources-by-year-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.subjectId\"\r\n                    [yearControl]=\"myForm.controls.yearId\"\r\n                  >\r\n                  </cources-by-year-dropdown>\r\n                </div>\r\n\r\n                <!-- Units dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <units-by-course-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.unitId\"\r\n                    [courceControl]=\"myForm.controls.subjectId\"\r\n                  >\r\n                  </units-by-course-dropdown>\r\n                </div>\r\n\r\n                <!-- Lesson dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <lessons-by-unit-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.lessonId\"\r\n                    [unitControl]=\"myForm.controls.unitId\"\r\n                  >\r\n                  </lessons-by-unit-dropdown>\r\n                </div>\r\n\r\n                <!-- Topic dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <topics-by-lesson-dropdown\r\n                    [submitted]=\"submitted\"\r\n                    [control]=\"myForm.controls.topicId\"\r\n                    [lessonControl]=\"myForm.controls.lessonId\"\r\n                  >\r\n                  </topics-by-lesson-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Templates\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Subject\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Materials\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Subject }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Year\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Year }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Teacher }}</td>\r\n            </ng-container>\r\n\r\n            <!-- publish Column -->\r\n            <ng-container matColumnDef=\"publish\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ThePublish\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span *ngIf=\"ele?.isPublish\">\r\n                  {{ \"labels.Published\" | translate }}\r\n                  <i class=\"fa fa-check-circle success ml-1\" aria-hidden=\"true\">\r\n                  </i>\r\n                </span>\r\n                <span *ngIf=\"!ele?.isPublish\">\r\n                  {{ \"labels.UnPublished\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n\r\n              <td mat-cell *matCellDef=\"let template\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-primary\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Publish'\"\r\n                        (click)=\"PublishDepublishTemplate(template.Id)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <span *ngIf=\"!template.isPublish\">\r\n                          <i class=\"ft-upload font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Publish\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"template.isPublish\">\r\n                          <i class=\"ft-download font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Unpublish\" | translate }}\r\n                        </span>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"../add-template\"\r\n                        [queryParams]=\"{\r\n                          templateId: template.Id,\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'previewTemplate'\"\r\n                        ngbDropdownItem\r\n                        (click)=\"GenerateExamFromTemplate(template.Id)\"\r\n                      >\r\n                        <i class=\"fa fa-video-camera mr-2\"> </i>\r\n                        {{ \"General.ExamPreview\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'whatsApp'\"\r\n                        ngbDropdownItem\r\n                        target=\"_blank\"\r\n                        routerLink=\"/dashboard/exams-setup/exam-whatsapp-msgs/{{\r\n                          template.Id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId,\r\n                          IsTemplate: true\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-whatsapp font-medium-3 mr-2\"> </i>\r\n                        {{ \"whatsApp.whatsAppSettings\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Points'\"\r\n                        routerLink=\"../template-points/{{ template.Id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                        ><i class=\"fa fa-gift font-medium-3 mr-2\"></i>النقاط</a\r\n                      >\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Grades'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/exams-setup/templates/upload-exam-student-grades/{{\r\n                          template.Id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-upload font-medium-3 mr-2\"></i>\r\n                        {{ \"Exam.StudentGradesUploadTemplate\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(template)\"\r\n                      >\r\n                        <i class=\"fa fa-times mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n              [class.bg-light-info]=\"!row?.isPublish\"\r\n            ></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getTemplates($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"examId > 0\">\r\n          {{ \"Exam.StudentGradesUploadExam\" | translate }} -\r\n          {{ Exam?.exam_ar_name }}\r\n        </span>\r\n\r\n        <span *ngIf=\"templateId > 0\">\r\n          {{ \"Exam.StudentGradesUploadTemplate\" | translate }} -\r\n          {{ template?.Name }}\r\n        </span>\r\n        <!-- Back to exams -->\r\n        <a\r\n          *ngIf=\"examId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/exams-setup/exam/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n\r\n        <!-- Back to templates -->\r\n        <a\r\n          *ngIf=\"templateId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/exams-setup/templates/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-6 col-12\">\r\n                  <mat-label> Excel Sheet</mat-label>\r\n                  <input\r\n                    (change)=\"onChange($event)\"\r\n                    #fileInput\r\n                    accept=\".xlsx,.xls\"\r\n                    type=\"file\"\r\n                    class=\"form-control\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-12\">\r\n                  <mat-label>{{ \"Exam.Grade\" | translate }}</mat-label>\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"number\"\r\n                    readonly\r\n                    [value]=\"\r\n                      examId > 0 ? Exam?.examGrade : template?.TemplateGrade\r\n                    \"\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <mat-card-actions align=\"end\">\r\n              <!-- Exam  -->\r\n              <button\r\n                *ngIf=\"examId > 0\"\r\n                mat-raised-button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"UploadExamStudentGrades()\"\r\n              >\r\n                {{ \"General.Upload\" | translate }}\r\n              </button>\r\n              <button\r\n                *ngIf=\"templateId > 0\"\r\n                mat-raised-button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"uploadTemplateStudentGrades()\"\r\n              >\r\n                {{ \"General.Upload\" | translate }}\r\n              </button>\r\n            </mat-card-actions>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <div class=\"row\" *ngIf=\"errors?.length > 0\">\r\n        <div class=\"col-12\">\r\n          <mat-card>\r\n            <mat-card-title>\r\n              {{ \"labels.StudentCodesFailureList\" | translate }}\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n              <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <ul class=\"list-group\">\r\n                    <li\r\n                      class=\"list-group-item disabled\"\r\n                      *ngFor=\"let err of errors\"\r\n                    >\r\n                      {{ err }}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { TranslateService } from \"@ngx-translate/core\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n import { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n import { ExamsService } from \"app/dashboard/services/setup/exams-setup/exams.service\";\r\nimport { TemplatesService } from \"app/dashboard/services/setup/exams-setup/templates.service\";\r\nimport { IExamVM, ITemlateVM } from \"app/dashboard/models/setup/exams-setup/exams\";\r\nimport { IUploadExamStudentGradeVM, IUploadTemplateStudentGradeVM } from \"app/dashboard/models/setup/exams-setup/exam\";\r\n// import { IWhatsAppResponse } from \"app/admin/models/whatsApp/whatsApp\";\r\n\r\n@Component({\r\n  selector: \"app-upload-exam-grades\",\r\n  templateUrl: \"./upload-exam-student-grades.component.html\",\r\n  styleUrls: [\"./upload-exam-student-grades.component.scss\"],\r\n})\r\nexport class UploadExamStudentGradesComponent implements OnInit {\r\n  Exam: IExamVM;\r\n  template: ITemlateVM;\r\n  errors: any[];\r\n  examId: number;\r\n  templateId: number;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  errorMsg = false;\r\n  file: any = null;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private ExamsService: ExamsService,\r\n    private TemplatesService: TemplatesService,\r\n    private AuthService: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.examId = Number(params.get(\"examId\"));\r\n      this.templateId = Number(params.get(\"templateId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    console.log(\"examId\", this.examId);\r\n    console.log(\"templateId\", this.templateId);\r\n    if (this.examId > 0) this.getExamById(this.examId);\r\n    if (this.templateId > 0) this.getTemplateById();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.AuthService.getEduCompId());\r\n  }\r\n\r\n  getExamById(examId: number) {\r\n    this.spinner.show();\r\n    this.ExamsService.getExamById(examId).subscribe((response: IExamVM) => {\r\n      //   console.log(\"getExamById: \", response);\r\n      if (response) {\r\n        this.Exam = response;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getTemplateById() {\r\n    this.spinner.show();\r\n    this.TemplatesService.getTemplateById<ITemlateVM[]>(\r\n      this.templateId\r\n    ).subscribe((res: any) => {\r\n      console.log(\"getTemplateById\", res);\r\n      this.template = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  UploadExamStudentGrades() {\r\n    let obj = {} as IUploadExamStudentGradeVM;\r\n    obj.examId = this.examId;\r\n    obj.file = this.file;\r\n    obj.examGrade = this.Exam.examGrade;\r\n    // console.log(\"obj: \", obj);\r\n    // console.log(\"this.myForm.value: \", this.myForm.value);\r\n\r\n    if (obj.file == null) {\r\n      this.translate.get(\"UploadStudentGrades.fileErr\").subscribe((msg) => {\r\n        this.toastr.warning(msg);\r\n      });\r\n      return;\r\n    } else if (obj.examId == null) {\r\n      this.translate.get(\"UploadStudentGrades.examIdErr\").subscribe((msg) => {\r\n        this.toastr.warning(msg);\r\n      });\r\n      return;\r\n    } else if (obj.examGrade == null) {\r\n      this.translate\r\n        .get(\"UploadStudentGrades.examGradeErr\")\r\n        .subscribe((msg) => {\r\n          this.toastr.warning(msg);\r\n        });\r\n      return;\r\n    } else {\r\n      this.spinner.show();\r\n      this.ExamsService.UploadExamStudentGrades(obj).subscribe((res: any) => {\r\n        if (res.isSendAllSuccess) {\r\n          this.toastr.success(\"تم رفع الدرجات\");\r\n        } else if (!res.isSendAllSuccess) {\r\n          this.toastr.error(\"لم يتم رفع جميع الدرجات\");\r\n          this.errors = res.errors;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  uploadTemplateStudentGrades() {\r\n    let obj = {} as IUploadTemplateStudentGradeVM;\r\n    obj.templateId = this.templateId;\r\n    obj.file = this.file;\r\n    obj.examGrade = this.template.TemplateGrade;\r\n    // console.log(\"obj: \", obj);\r\n    // console.log(\"this.myForm.value: \", this.myForm.value);\r\n    if (obj.file == null) {\r\n      this.translate.get(\"UploadStudentGrades.fileErr\").subscribe((msg) => {\r\n        this.toastr.warning(msg);\r\n      });\r\n      return;\r\n    } else if (obj.templateId == null) {\r\n      this.translate.get(\"UploadStudentGrades.examIdErr\").subscribe((msg) => {\r\n        this.toastr.warning(msg);\r\n      });\r\n      return;\r\n    } else if (obj.examGrade == null) {\r\n      this.translate\r\n        .get(\"UploadStudentGrades.examGradeErr\")\r\n        .subscribe((msg) => {\r\n          this.toastr.warning(msg);\r\n        });\r\n      return;\r\n    } else {\r\n      this.spinner.show();\r\n      this.TemplatesService.uploadTemplateStudentGrade(obj).subscribe(\r\n        (res: any) => {\r\n          if (res.isSendAllSuccess) {\r\n            this.toastr.success(\"تم رفع الدرجات\");\r\n          } else if (!res.isSendAllSuccess) {\r\n            this.toastr.error(\"لم يتم رفع جميع الدرجات\");\r\n            this.errors = res.errors;\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  //Attache File\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        //console.log(data);\r\n        this.file = data;\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n import { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ExamsService {\r\n   constructor(private http: HttpClient) {}\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}Admin/QuestionsBank/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  downloadQuestion(Id: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}Exam/downloadAttachPerfectAnswer}/${Id}`\r\n    );\r\n  }\r\n\r\n  getQuestions(page: any, EduCompId: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Admin/QuestionsBankTable/${page}/${EduCompId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  getQuestionByID(id: any) {\r\n    return this.http.get(`${environment.baseUrl}Admin/get-question-bank/${id}`);\r\n  }\r\n\r\n  addEditQuestion(eduCompID: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Admin/question-bank-add-edit/${eduCompID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  updateQuestion(Id: any, data: any) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}Admin/QuestionsBank/${Id}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteQuestion(eduCompID: any, id: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Admin/removeQuestionBank/${eduCompID}/${id}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  getSubjectsByTeacherId(teacherId: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Admin/get-lectures-by-teacher-query`,\r\n      teacherId\r\n    );\r\n  }\r\n\r\n  getAllNormalExams<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.baseUrl + \"exam/returnRecentlyAddedExams\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  publishExam<TV>(examId: number) {\r\n    return this.http.get<TV>(\r\n      `${environment.baseUrl}exam/publish-depublish-exam/${examId}`\r\n    );\r\n  }\r\n\r\n  deleteExam<TV>(id: number) {\r\n    return this.http.delete<TV>(`${environment.baseUrl}Admin/RemoveExam/${id}`);\r\n  }\r\n\r\n  getAllCountries<T>() {\r\n    return this.http.get<T>(environment.baseUrl + \"country/return-countries\");\r\n  }\r\n\r\n  getAllStages<T>(countryId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}stage/return-stages/${countryId}`\r\n    );\r\n  }\r\n\r\n  getAllEducationYears<T>(stageId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}year/return-years/${stageId}`\r\n    );\r\n  }\r\n\r\n  getAllSubjects<T>(educationYearId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}subject/return-subjects/${educationYearId}`\r\n    );\r\n  }\r\n\r\n  getAllTeachersBySublectId<T>(subjectId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}teacher/return-teachers/${subjectId}`\r\n    );\r\n  }\r\n\r\n  getAllUnitsBySublectId<T>(subjectId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}unit/return-units/${subjectId}`\r\n    );\r\n  }\r\n\r\n  getAllLessonsByUnitId<T>(unitId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}lesson/return-lesson/${unitId}`\r\n    );\r\n  }\r\n\r\n  getAllExamType<T>() {\r\n    return this.http.get<T>(environment.baseUrl + \"exam/return-exam-types\");\r\n  }\r\n\r\n  getExamById<T>(id: number) {\r\n    return this.http.get<T>(`${environment.baseUrl}exam/get-exam-by-id/${id}`);\r\n  }\r\n\r\n  getExamDetailsById<T>(examId: number) {\r\n    return this.http.get<T>(`${environment.baseUrl}Exam/Details/${examId}`);\r\n  }\r\n\r\n  addExam<T, TY>(data: T) {\r\n    return this.http.post<TY>(environment.baseUrl + \"exam/add-exam\", data);\r\n  }\r\n\r\n  getAllQuestionGroups<T>() {\r\n    return this.http.get<T[]>(\r\n      environment.baseUrl + \"exam/return-question-groups\"\r\n    );\r\n  }\r\n\r\n  getAllQuestionHeaders<T>() {\r\n    return this.http.get<T[]>(\r\n      environment.baseUrl + \"exam/return-question-heads\"\r\n    );\r\n  }\r\n\r\n  addExamGroupHeader<T, TY>(data: T) {\r\n    return this.http.post<TY>(\r\n      `${environment.baseUrl}exam/add-question-group-head`,\r\n      data\r\n    );\r\n  }\r\n\r\n  editExamGroupHeader<T, TY>(data: T) {\r\n    return this.http.post<TY>(\r\n      environment.baseUrl + \"exam/EditQuestionHead\",\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteExamGroupHeader(id: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}exam/delete-exam-head-by-id/${id}`\r\n    );\r\n  }\r\n\r\n  getAllGroupHeaderByExamId<T>(id: number) {\r\n    return this.http.get<T[]>(\r\n      `${environment.baseUrl}exam/GetQuestionHeadGroupByExamId/${id}`\r\n    );\r\n  }\r\n\r\n  getAllQuestionsByHeadId<T>(id: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}exam/GetExamQuestionsByQuestionHead/${id}`\r\n    );\r\n  }\r\n\r\n  addQuestion<T>(data: any) {\r\n    return this.http.post<T>(\r\n      environment.baseUrl + \"exam/add-exam-questions\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getQuestionForEditByID<T>(id: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}exam/return-question-details/${id}`\r\n    );\r\n  }\r\n\r\n  editQuestion<T>(data: any) {\r\n    return this.http.post<T>(\r\n      environment.baseUrl + \"exam/edit-exam-questions\",\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteExamQuestion<T>(id: number) {\r\n    return this.http.delete<T>(\r\n      `${environment.baseUrl}exam/RemoveExamQuestion/${id}`\r\n    );\r\n  }\r\n\r\n  getExamPoints(examId: any, page: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}exam/returnCustomPointExamByExamId/${examId}/${page}`\r\n    );\r\n  }\r\n\r\n  addExamPoint(body: any) {\r\n    return this.http.post(environment.baseUrl + \"exam/CustomExamPoint\", body);\r\n  }\r\n\r\n  deleteExamPoint(pointId: any) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}exam/DeleteCustomExamPoint/${pointId}`\r\n    );\r\n  }\r\n\r\n  UploadExamStudentGrades(data: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Exam/postStudentsExamsGrades`,\r\n      data\r\n    );\r\n  }\r\n\r\n  getQuestionByCorrectionType(page: any, correctionStatus: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}Exam/CorrectionIndexPaging/${page}/${correctionStatus}`\r\n    );\r\n  }\r\n\r\n  submitCorrection(body: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/Exam/submitQuestionCorrection`,\r\n      body\r\n    );\r\n  }\r\n\r\n  getExamPreview(examId: any) {\r\n    return this.http.get(environment.baseUrl + \"Exam/Details/\" + examId);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TemplatesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTemplates(eduCompID: any, page: number, body: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Admin/getTemplates/${eduCompID}/${page}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  getTemplateById<T>(templateId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}template/returnTemplateById/${templateId}`\r\n    );\r\n  }\r\n\r\n  deleteTemplate(id: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}template/deleteTemplateById/${id}`\r\n    );\r\n  }\r\n\r\n  PublishDepublishTemplate(id: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}template/PublishDepublishTemplate/${id}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  getPresets(eduCompId: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}template/returnPresetsByEduCompId/${eduCompId}`\r\n    );\r\n  }\r\n\r\n  addUpdateTemplate(data: any) {\r\n    return this.http.post(environment.baseUrl + \"template/addtemplate\", data);\r\n  }\r\n\r\n  addTemplateDetails(data: any) {\r\n    return this.http.post(environment.baseUrl + \"AJAX/addTemplateDetail\", data);\r\n  }\r\n\r\n  getQuestionDetails(templateId: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}AJAX/returnTemplateDetails/${templateId}`\r\n    );\r\n  }\r\n\r\n  DeleteDetails(id: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}template/deleteTemplateDetailById/${id}`\r\n    );\r\n  }\r\n\r\n  uploadTemplateStudentGrade(data: any) {\r\n    let URL = environment.baseUrl + \"Exam/postStudentsTemplatesGrades\";\r\n    return this.http.post(URL, data);\r\n  }\r\n\r\n  getTemplatePoints(templateId: any, page: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}template/returnCustomPointTemplateByTemplateId/${templateId}/${page}`\r\n    );\r\n  }\r\n\r\n  addTemplatePoint(body: any) {\r\n    return this.http.post(\r\n      environment.baseUrl + \"template/CustomTemplatePoint\",\r\n      body\r\n    );\r\n  }\r\n\r\n  deleteTemplatePoint(pointId: any) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}template/DeleteCustomTemplatePoint/${pointId}`\r\n    );\r\n  }\r\n\r\n  GenerateExamFromTemplate(templateId: any) {\r\n    return this.http.post(\r\n      environment.baseUrl + \"Exam/GenerateExamFromTemplate/\" + templateId,\r\n      null\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PointsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //  Points Setup\r\n\r\n  addPoints(educompId: number, data: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}SetupPoints/SetupPoints/${educompId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  getPoints<T>(teacherUserId: number, typeId: number, eduCompId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}SetupPoints/returnPointSystemByResourceId/${teacherUserId}/${typeId}/${eduCompId}`\r\n    );\r\n  }\r\n\r\n  deletePoint(pointId: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}SetupPoints/DeletePointSystemDetails/${pointId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  //######################################################################\r\n  // Custome\r\n  //######################################################################\r\n  // Lecture Custome\r\n\r\n  addLectureCustomPoint(data: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}SetupPoints/CustomMaterialPoint`,\r\n      data\r\n    );\r\n  }\r\n\r\n  getLectureCustomPoints<T>(page: any, materialId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}SetupPoints/returnCustomPointMaterialByMaterialId/${materialId}/${page}`\r\n    );\r\n  }\r\n\r\n  deleteLectureCustomPoint(pointId: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}SetupPoints/DeleteCustomMaterialPoint/${pointId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  //######################################################################\r\n  // Exam Custome\r\n  addExamCustomPoint(body: any) {\r\n    return this.http.post(\r\n      environment.baseUrl + \"SetupPoints/CustomExamPoint\",\r\n      body\r\n    );\r\n  }\r\n\r\n  getExamCustomPoints<T>(page: any, examId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}SetupPoints/returnCustomPointExamByExamId/${examId}/${page}`\r\n    );\r\n  }\r\n\r\n  deleteExamCustomPoint(pointId: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}SetupPoints/DeleteCustomExamPoint/${pointId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  //######################################################################\r\n  // Template Custome\r\n  addTemplateCustomPoint(body: any) {\r\n    return this.http.post(\r\n      environment.baseUrl + \"SetupPoints/CustomTemplatePoint\",\r\n      body\r\n    );\r\n  }\r\n\r\n  getTemplateCustomPoints<T>(page: any, templateId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}SetupPoints/returnCustomPointTemplateByTemplateId/${templateId}/${page}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class WhatsAppSetupService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  sendSingularWhatsAppMsg(data: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}whats-app/send-singular-message`,\r\n      data\r\n    );\r\n  }\r\n\r\n  sendWhatsAppMsg(data: any) {\r\n    return this.http.post(`${environment.baseUrl}whats-app/send-message`, data);\r\n  }\r\n\r\n  getAllWhatsAppMsg(body: any) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}whats-app/GetAllWhatsAppSetups`,\r\n      body\r\n    );\r\n  }\r\n\r\n  RemoveWhatsAppMsg(whatsAppId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}whats-app/delete-by-Id/${whatsAppId}`\r\n    );\r\n  }\r\n\r\n  addEditWhatAppMsg<T>(body: T) {\r\n    return this.http.post<T>(\r\n      `${environment.baseUrl}whats-app/addEditWhatAppMsg`,\r\n      body\r\n    );\r\n  }\r\n\r\n  GetAllWhatsAppVariables() {\r\n    return this.http.get(\r\n      `${environment.baseUrl}whats-app/GetAllWhatsAppVariables`\r\n    );\r\n  }\r\n\r\n  getWhatsMsgById(msgId: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}whats-app/GetWhatsMsgById/${msgId}`\r\n    );\r\n  }\r\n\r\n  getAvailableWhatsAppMsgToExam<T>(EduCompId: number, examId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}whats-app/GetAvailableWhatsAppMsgToExam/${EduCompId}/${examId}`\r\n    );\r\n  }\r\n\r\n  addEditExamWhatssAppMsg<T>(body: T) {\r\n    return this.http.post<T>(\r\n      `${environment.baseUrl}whats-app/addEditExamWhatsAppMsg`,\r\n      body\r\n    );\r\n  }\r\n\r\n  getExamWhatsAppMsgs<T>(examId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}whats-app/GetExamWhatsAppMsgs/${examId}`\r\n    );\r\n  }\r\n\r\n  deleteExamWhatsAppMsgById<T>(id: number) {\r\n    return this.http.delete<T>(\r\n      `${environment.baseUrl}whats-app/DeleteExamWhatsAppMsgById/${id}`\r\n    );\r\n  }\r\n}\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import * as i2 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n    providedIn: 'root',\n    factory: () => ({ modules: defaultModules })\n});\n\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.count = 0;\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        this.count++;\n        if (!this.Quill && this.count === 1) {\n            this.$importPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                // eslint-disable-next-line @typescript-eslint/dot-notation\n                this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n                const quillImport = yield import('quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n                // Only register custom options and modules once\n                (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach((customOption) => {\n                    const newCustomOption = this.Quill.import(customOption.import);\n                    newCustomOption.whitelist = customOption.whitelist;\n                    this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n                });\n                (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({ implementation, path }) => {\n                    this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n                });\n                resolve(this.Quill);\n            }));\n        }\n        return this.$importPromise;\n    }\n}\nQuillService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillService, deps: [{ token: i0.Injector }, { token: QUILL_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nQuillService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [QUILL_CONFIG_TOKEN]\n                    }] }];\n    } });\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.cd = cd;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.sanitize = false;\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.subscription = null;\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                if (this.sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n        this.document = injector.get(DOCUMENT);\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                var _a, _b, _c;\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = (_b = (_a = this.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;\n                    const input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');\n                    if (input === null || input === void 0 ? void 0 : input.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dispose();\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n}\nQuillEditorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillEditorBase, deps: [{ token: i0.Injector }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Directive });\nQuillEditorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: QuillEditorBase, inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", required: \"required\", formats: \"formats\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", customOptions: \"customOptions\", customModules: \"customModules\", trackChanges: \"trackChanges\", preserveWhitespace: \"preserveWhitespace\", classes: \"classes\", trimOnValidation: \"trimOnValidation\", linkPlaceholder: \"linkPlaceholder\", compareValues: \"compareValues\", filterNull: \"filterNull\", debounceTime: \"debounceTime\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillEditorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }];\n    }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], customToolbarPosition: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], trackChanges: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], classes: [{\n                type: Input\n            }], trimOnValidation: [{\n                type: Input\n            }], linkPlaceholder: [{\n                type: Input\n            }], compareValues: [{\n                type: Input\n            }], filterNull: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], defaultEmptyValue: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }], onEditorChanged: [{\n                type: Output\n            }], onContentChanged: [{\n                type: Output\n            }], onSelectionChanged: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], valueGetter: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input\n            }] } });\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillEditorComponent, deps: [{ token: i0.Injector }, { token: ElementRef }, { token: ChangeDetectorRef }, { token: DomSanitizer }, { token: PLATFORM_ID }, { token: Renderer2 }, { token: NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: QuillEditorComponent, selector: \"quill-editor\", providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        },\n        {\n            multi: true,\n            provide: NG_VALIDATORS,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`, isInline: true, styles: [\":host{display:inline-block}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        }\n                    ],\n                    selector: 'quill-editor',\n                    template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`,\n                    styles: [\n                        `\n    :host {\n      display: inline-block;\n    }\n    `\n                    ]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: i0.ElementRef, decorators: [{\n                        type: Inject,\n                        args: [ElementRef]\n                    }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                        type: Inject,\n                        args: [ChangeDetectorRef]\n                    }] }, { type: i1.DomSanitizer, decorators: [{\n                        type: Inject,\n                        args: [DomSanitizer]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i0.Renderer2, decorators: [{\n                        type: Inject,\n                        args: [Renderer2]\n                    }] }, { type: i0.NgZone, decorators: [{\n                        type: Inject,\n                        args: [NgZone]\n                    }] }, { type: QuillService, decorators: [{\n                        type: Inject,\n                        args: [QuillService]\n                    }] }];\n    } });\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.sanitize = false;\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillViewHTMLComponent, deps: [{ token: DomSanitizer }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewHTMLComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: QuillViewHTMLComponent, selector: \"quill-view-html\", inputs: { content: \"content\", theme: \"theme\", sanitize: \"sanitize\" }, usesOnChanges: true, ngImport: i0, template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillViewHTMLComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'quill-view-html',\n                    styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n                    template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.DomSanitizer, decorators: [{\n                        type: Inject,\n                        args: [DomSanitizer]\n                    }] }, { type: QuillService }];\n    }, propDecorators: { content: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }] } });\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.sanitize = false;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    if (this.sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n}\nQuillViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillViewComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: QuillViewComponent, selector: \"quill-view\", inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", sanitize: \"sanitize\", strict: \"strict\", content: \"content\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, usesOnChanges: true, ngImport: i0, template: `\n`, isInline: true, styles: [\".ql-container.ngx-quill-view{border:0}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillViewComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'quill-view',\n                    styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n                    template: `\n`\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }] } });\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuillModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillModule, declarations: [QuillEditorComponent,\n        QuillViewComponent,\n        QuillViewHTMLComponent], imports: [CommonModule], exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] });\nQuillModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        QuillEditorComponent,\n                        QuillViewComponent,\n                        QuillViewHTMLComponent\n                    ],\n                    exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                    imports: [CommonModule],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n"],"names":["Validators","MAT_DIALOG_DATA","i0","CorrectionDialogComponent","data","fb","route","authserv","router","msg","GeneralService","examService","spinner","dialog","myForm","get","controls","console","log","EduCompId","getEduCompId","group","questionName","studentAnswer","questionId","examStudentId","teacherComment","required","teacherUserId","questionMark","mark","fileName","downloadUrl","substring","questionNameCtrl","setValue","disable","questionIdCtrl","examStudentIdCtrl","teacherUserIdCtrl","questionMarkCtrl","FormCtrl","valid","value","markCtrl","error","show","submitCorrection","subscribe","res","returnValue","success","closeAll","returnString","hide","selectors","decls","vars","consts","template","ctx","MatPaginator","MatSort","MatTableDataSource","ctx_r16","CorrectionIndexComponent","queryParamMap","params","functionId","Number","getUserRowFunctions","rowFunctions","page","CorrectedQuestions","getAllQuestions","event","filterValue","target","dataSource","filter","trim","toLowerCase","p","_a","getQuestionByCorrectionType","response","examsList","correction","examQuestions","itemsCount","item","open","afterClosed","confirm","viewQuery","TemplatesCustomePointsComponent","AddTemplateComponent","AddQuestionComponent","QuestionsIndexComponent","RouterModule","AddExamComponent","ExamsIndexComponent","TemplatesIndexComponent","ExamPreviewComponent","ExamsCustomePointsComponent","UploadExamStudentGradesComponent","ExamsWhatsappComponent","routes","path","redirectTo","pathMatch","component","children","ExamsRoutingModule","forChild","imports","exports","DeleteDialogComponent","CustomeValidator","ele_r25","ctx_r29","authService","whatsAppService","paramMap","examId","IsTemplate","Id","whats_app_msg_id","FromGrade","minusNum","ToGrade","getAvailableWhatsAppMsgToExam","getExamWhatsAppMsgs","e","availableWhatsAppMsg","Submitted","body","FormCtrls","_b","exam_id","_c","_d","addEditExamWhatssAppMsg","reset","enable","warning","whatsAppMsg","patchValue","whatsAppMsgId","fromGrade","toGrade","msgTitle","removeWhatsApp","deleteExamWhatsAppMsgById","deletedIndex","findIndex","splice","paginator","sort","CommonModule","ReactiveFormsModule","SharedModule","MaterialModule","NgbModule","NgxSpinnerModule","NgxPaginationModule","AddSubQuestionComponent","QuillModule","TemplateDetailsComponent","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","ExamsModule","provide","useClass","useValue","forRoot","modules","syntax","declarations","i1","map","startWith","ctx_r37","ctx_r43","ctx_r45","ctx_r47","ctx_r72","ctx_r75","ctx_r78","location","generalService","datePipe","functionName","getExamById","getAllGroupHeaderByExamId","GroupHeadersForm","countryId","stageId","educationYearId","subjectId","examTypeId","unitId","lessionId","examName","whiteSpace","examHours","examMinutes","examPrice","discount","discountType","fromDate","toDate","formHour","toHours","resualtDate","resualtTime","canSellIndividually","isRepeatable","repeatNumbers","repeatingPrice","hasCustomDiscount","sendWhatsAppMsg","isPublish","examGroup","examHeader","examContent","branchId","getBranchId","getAllExamTypes","getAllQuestionGroups","getAllQuestionHeaders","examTypeValidator","RepeatableValidator","examGroups","option","question_group_ar_name","includes","examHeaders","question_head_ar_name","stageIdCtrl","educationYearIdCtrl","subjectIdCtrl","unitIdCtrl","_e","lessionIdCtrl","_f","toHoursCtrl","_g","toHour","isPublishCtrl","_h","discountCtrl","_j","Discount","examNameCtrl","_k","exam_ar_name","formHourCtrl","_l","fromHour","examPriceCtrl","_m","price","resualtTimeCtrl","_o","ResultTime","discountTypeCtrl","_p","DiscountType","isRepeatableCtrl","_q","repeatableExam","isRepeatableExam","repeatNumbersCtrl","_r","repeatableExam_Count","sendWhatsAppMsgCtrl","_s","SendWhatsApp","isSendWhats","hasCustomDiscountCtrl","_t","canSellIndividuallyCtrl","_u","Individually_Purchased","countryIdCtrl","_v","repeatingPriceCtrl","_w","StudentRepeatExamCost","exam_minute","exam_period_minute","exam_hour","examMinutesCtrl","_x","examHoursCtrl","_y","Lesson_ID","examTypeIdCtrl","_z","Unit_ID","_0","Subject_ID","_1","quiz","_2","fromDateCtrl","_3","Avilable_Date_From","toDateCtrl","_4","Avilable_Date_To","resualtDateCtrl","_5","ResultDate","_6","_7","_8","eduYearId","_9","main_subject_id","_10","_11","_12","_13","_14","_15","_16","GroupsHeadersList","length","filteredExamGroups","examGroupCtrl","valueChanges","pipe","filter_question_group","filteredExamHeaders","examHeaderCtrl","filter_question_header","exam","id","transform","CustomDiscountApplied","lesson_ID","subject_ID","teacher_subject_id","unit_ID","toAddEdit","exam_type_id","addExam","validGroupHeadersForm","submitted","GroupHeadsubmitted","navigate","queryParams","queryParamsHandling","onAddExamGroupHeader","sameGroupWithSameHeader","find","gh","group_name","head_name","info","tempExam","ToAddExamGroupHeader","exam_question_group_text","exam_question_head_title","examContentCtrl","exam_question_head_text","addExamGroupHeader","headerResponse","tempExcamGroupHeader","exam_question_head_id","question_title","examGroupHeader","editGroupHeaderMode","examGroupHeaderIdToEdit","questionNumber","questionType","toEdit","head","title","editExamGroupHeader","editResponse","toReplace","deleteExamGroupHeader","deleteResponse","todeleteIndex","removeExamGroupHead","groupHeader","examGroupHeaderId","minHeight","minWidth","obj","lessonId","getAllExamType","examTypes","setValidators","clearValidators","updateValueAndValidity","CustomDiscount","ctx_r18","ctx_r20","ctx_r21","ctx_r22","ctx_r23","ctx_r24","ctx_r25","ctx_r26","ctx_r5","ctx_r27","ctx_r32","ctx_r34","toastr","uploadFileService","getAllQuestionsByHeadId","mainQuestion","questionTypeId","questionImage","remove_image","exam_question_text","questionPerfectAnswer","perfect_answer_attach","bigZero","answerOneId","answerOne","answerOneIsCorrect","answerOneImage","answerTwoId","answerTwo","answerTwoIsCorrect","answerTwoImage","answerThreeId","answerThree","answerThreeIsCorrect","answerThreeImage","answerFourId","answerFour","answerFourIsCorrect","answerFourImage","answerOneRemove_image","answerTwoRemove_image","answerThreeRemove_image","answerFourRemove_image","educationCompanyId","questionsInGrid","questionTypeIdCtrl","image","questionFile","questionImagePath","questionImageCtrl","exam_question_main_question","mainQuestionCtrl","exam_question_mark","exam_question_perfect_answer","questionPerfectAnswerCtrl","perfectAnswerAttach_preview","questionTextCtrl","exam_question_type_id","exam_selected_question_head_id","exam_selected_subject_id","exam_question_image","questionImageRemove_imageCtrl","exam_question_id","editTextQuestion","addTextQuestion","imageOne","answerOneFile","choice1","choice_id","answerOneIdCtrl","choice_text","answerOneCtrl","is_correct","answerOneIsCorrectCtrl","choice_image","answerOneRemove_imageCtrl","answerOneImageCtrl","imageTwo","answerTwoFile","choice2","answerTwoIdCtrl","answerTwoCtrl","answerTwoIsCorrectCtrl","answerTwoRemove_imageCtrl","answerTwoImageCtrl","imageThree","answerThreeFile","choice3","answerThreeIdCtrl","answerThreeCtrl","answerThreeIsCorrectCtrl","answerThreeRemove_imageCtrl","answerThreeImageCtrl","imageFour","answerFourFile","choice4","answerFourIdCtrl","answerFourCtrl","answerFourIsCorrectCtrl","answerFourRemove_imageCtrl","answerFourImageCtrl","mcq_choices","editMcqQuestion","addMcqQuestion","addQuestion","perfect_answer_attachCtrl","resetFileInputs","editQuestion","q","Text","QuestionTypeAr","Image","getQuestionForEditByID","main_question","question_text","attach_path","question_type_id","perfect_answer","prefect_answer_attach_path","MCQ_Choices","Is_Correct","oneIsCorrect","twoIsCorrect","threeIsCorrect","_17","_18","_19","_20","_21","fourIsCorrect","_22","confirmed","deleteExamQuestion","toDeleteIndex","uploadFile","then","file","setTimeout","FileAsBase64","answerNumber","FileInputs","document","querySelectorAll","forEach","input","examsService","returnStudentExam","getExamPreview","navigateByUrl","isSolved","ExamGroups","groups","ExamName","details","IsAvaliable","mv","IsAvailable","TeacherName","teacherName","SubjectName","subject","subject_ar_name","studentUserId","exam_student","examTotalMark","solvedExamStudent_ID","student_grade","GL","num","k","HL","Heads","m","QL","Questions","currentTime","Date","hh","getHours","mm","getMinutes","ss","getSeconds","ExamStarTime","j","i","QuestionDetails","StudentChoice","RESULT","solvedQuestionNumberArr","push","ctx_r13","ctx_r15","PointsService","getExamCustomPoints","ByQuestion","from","to","ByQuestionValidators","itemId","addExamCustomPoint","ItemsCount","Points","points","point","deleteExamCustomPoint","Value","index","ctx_r38","getAllExams","getAllNormalExams","examList","reverse","totalItems","totalCount","deleteExam","Name","removeExam","publishExam","IsPublish","ctx_r17","ctx_r19","thumbnailPic","ChoiceAttachPath","questionID","previousSearch","getCurrentNavigation","extras","state","getQuestionByID","questionBank","topicId","difficulty_level","question_id","question","question_ar_text","prefectAnswerAttach","picked_choice_index","choices","array","changeQuestionType","setDefaultChoises","questionsInputs","d","QuestionId","QuestionBankId","SubjectId","QuestionTypeId","UnitId","LessonId","TopicId","DifficultyLevel","QuestionTextAr","PerfectAnswer","PrefectAnswerAttachPath","Mark","QuestionAttachId","QuestionAttachPath","Choices","clear","ChoiceId","ChoiceText","IsCorrect","addEditQuestion","question_type","objIndex","indexOf","ctx_r42","courceStructureService","yearId","getQuestions","returnModel","deleteQuestion","questionTypeEnglishName","ctx_r28","ctx_r30","TemplatesService","templateId","getTemplateById","presetTemplateId","UnitRevisionID","LessonID","priceDiscount","priceDiscountType","Publish","getPresets","repeatableExamValidators","addUpdateTemplate","stage_id","educational_year_id","templateName","Presets","ctx_r9","questionsLevel","questionsCount","unitRevisionID","lessonID","TopicID","getQuestionDetails","addTemplateDetails","DeleteDetails","el","inputs","features","getTemplateCustomPoints","addTemplateCustomPoint","ctx_r35","ctx_r40","ctx_r46","getTemplates","val","Templates","result","TotalItemCount","PublishDepublishTemplate","deleteTemplate","GenerateExamFromTemplate","url","window","ctx_r8","ctx_r10","ExamsService","AuthService","translate","Exam","examGrade","UploadExamStudentGrades","isSendAllSuccess","errors","TemplateGrade","uploadTemplateStudentGrade","files","name","fileSize","size","fileType","type","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","environment","http","baseUrl","post","eduCompID","put","teacherId","delete","pointId","correctionStatus","factory","providedIn","eduCompId","URL","educompId","typeId","materialId","WhatsAppSetupService","whatsAppId","msgId","i2","DOCUMENT","isPlatformServer","InjectionToken","Injectable","Optional","Inject","EventEmitter","SecurityContext","PLATFORM_ID","Directive","Input","Output","ElementRef","ChangeDetectorRef","Renderer2","NgZone","forwardRef","Component","ViewEncapsulation","NgModule","__awaiter","DomSanitizer","Subscription","fromEvent","debounceTime","NG_VALUE_ACCESSOR","NG_VALIDATORS","defaultModules","toolbar","header","list","script","indent","direction","color","background","font","align","getFormat","format","configFormat","passedFormat","QUILL_CONFIG_TOKEN","QuillService","injector","config","count","Quill","$importPromise","Promise","resolve","maybePatchedAddEventListener","addEventListener","quillImport","default","customOptions","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","customModules","implementation","ɵfac","Injector","ɵprov","args","undefined","decorators","QuillEditorBase","elementRef","cd","domSanitizer","platformId","renderer","zone","service","customToolbarPosition","sanitize","styles","strict","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","subscription","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","valueSetter","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","shouldTriggerOnModelTouched","onModelTouched","observers","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","current","old","getQuill","nativeElement","insertAdjacentHTML","toolbarElem","Object","assign","placeholder","keys","key","setStyle","classes","addClasses","bounds","debug","readOnly","hasOwnProperty","scrollingContainer","formats","runOutsideAngular","theme","linkPlaceholder","tooltip","root","dataset","link","setText","newValue","setContents","getModule","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","dispose","changes","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","classList","normalizeClassNames","c","addClass","removeClass","currentEditorValue","isDisabled","setAttribute","removeAttribute","fn","err","textLength","deltaOperations","ops","onlyEmptyOperation","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","add","textChange$","editorChange$","unsubscribe","split","reduce","prev","cur","trimmed","ɵdir","QuillEditorComponent","ɵcmp","multi","useExisting","encapsulation","None","providers","selector","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","NgClass","QuillViewComponent","ngModule","ɵmod","ɵinj"],"sourceRoot":"webpack:///"}