{"version":3,"file":"src_app_dashboard_pages_control_control_module_ts.js","mappings":"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","sources":["./src/app/dashboard/pages/control/Grading/attendance/attendance.component.ts","./src/app/dashboard/pages/control/Grading/attendance/attendance.component.html","./src/app/dashboard/pages/control/Grading/final-score/final-score.component.ts","./src/app/dashboard/pages/control/Grading/final-score/final-score.component.html","./src/app/dashboard/pages/control/Grading/grading-index/grading-index.component.html","./src/app/dashboard/pages/control/Grading/grading-index/grading-index.component.ts","./src/app/dashboard/pages/control/Grading/student-grades/student-grades.component.ts","./src/app/dashboard/pages/control/Grading/student-grades/student-grades.component.html","./src/app/dashboard/pages/control/Grading/year-performance-scores/year-performance-scores.component.ts","./src/app/dashboard/pages/control/Grading/year-performance-scores/year-performance-scores.component.html","./src/app/dashboard/pages/control/add-control-employee/add-control-employee.component.ts","./src/app/dashboard/pages/control/add-control-employee/add-control-employee.component.html","./src/app/dashboard/pages/control/control-employees/control-employees.component.ts","./src/app/dashboard/pages/control/control-employees/control-employees.component.html","./src/app/dashboard/pages/control/control-routing.module.ts","./src/app/dashboard/pages/control/control-student/control-student.component.ts","./src/app/dashboard/pages/control/control-student/control-student.component.html","./src/app/dashboard/pages/control/control.module.ts","./src/app/dashboard/services/control/Grading/attendance.service.ts","./src/app/dashboard/services/control/Grading/student-scores.service.ts","./src/app/dashboard/services/control/control-employee.service.ts","./src/app/dashboard/services/control/control-student.service.ts"],"sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IControlStudentVM } from \"app/dashboard/models/control/control-student\";\r\nimport {\r\n  IAddEditAttendanceVM,\r\n  IStudentAttendancedataVM,\r\n  IStudentAttendanceListVM,\r\n  IStudentAttendanceVM,\r\n} from \"app/dashboard/models/control/Grading/attendence\";\r\nimport { AttendanceService } from \"app/dashboard/services/control/Grading/attendance.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-attendance\",\r\n  templateUrl: \"./attendance.component.html\",\r\n  styleUrls: [\"./attendance.component.scss\"],\r\n})\r\nexport class AttendanceComponent implements OnInit {\r\n  @Input() controlId: number;\r\n  @Input() subjectId: number;\r\n  displayColumns: string[] = [\"#\", \"Name\", \"Security_Number\", \"Attendance\"];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  itemsCounts: number;\r\n  curLang: string;\r\n  constructor(\r\n    private attendanceService: AttendanceService,\r\n    private translate: TranslateService,\r\n    private toastr: MessagesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getStudentAtendance(1);\r\n  }\r\n\r\n  // Return All  Student\r\n  getStudentAtendance(page: number) {\r\n    this.attendanceService\r\n      .getStudentAttendence(this.controlId, this.subjectId, page)\r\n      .subscribe((res: IStudentAttendanceListVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.StudentAttendanceList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n  //change Attendance\r\n  changeAttendance(\r\n    $event,\r\n    StudentAttendence: IStudentAttendancedataVM,\r\n    index: number\r\n  ) {\r\n    StudentAttendence.isAttendence = $event.checked;\r\n    this.dataSource.data[index] = StudentAttendence;\r\n    console.log(index);\r\n  }\r\n\r\n  onSubmit() {\r\n    let studentAttendence = {} as IAddEditAttendanceVM;\r\n    studentAttendence.controlId = this.controlId;\r\n    studentAttendence.subjectId = this.subjectId;\r\n    studentAttendence.studentAttendance = this.dataSource.data;\r\n    this.attendanceService\r\n      .addEditStudentAttendence(studentAttendence)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.dataSource.data = res.studentList;\r\n          console.log(\"rr\",res.studentList);\r\n\r\n          console.log(this.dataSource.data);\r\n          if (studentAttendence.studentAttendance[0].id == 0)\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          else this.toastr.success(\"General.UpdateSuccessfully\");\r\n\r\n          this.attendanceService\r\n            .getStudentAttending(this.controlId, this.subjectId, 1)\r\n            .subscribe((res: IStudentAttendanceListVM) => {\r\n              if (res) {\r\n                this.attendanceService.students.next(res);\r\n              }\r\n            });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"alert bg-light-danger\" role=\"alert\" *ngIf=\"subjectId == 0\">\r\n  {{ \"Control.MustChooseSubjet\" | translate }}\r\n</div>\r\n<ng-container *ngIf=\"subjectId != 0\">\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. ium\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"Name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Name\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">{{ ele.student_name }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Security_Number Column -->\r\n      <ng-container matColumnDef=\"Security_Number\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.SecurityNumber\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.student_Security_Number }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Attendance Column -->\r\n      <ng-container matColumnDef=\"Attendance\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.Attendant\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele,let i = index\">\r\n          <mat-checkbox\r\n            [checked]=\"ele.isAttendence\"\r\n            (change)=\"changeAttendance($event, ele, i)\"\r\n          ></mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"8\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getStudentAtendance($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      [pageSize]=\"10\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of users\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n  <button\r\n    *ngIf=\"dataSource.data[0].id == 0\"\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info float-right\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    <i class=\"fa fa-plus\"></i>\r\n    {{ \"General.Add\" | translate }}\r\n  </button>\r\n  <button\r\n    *ngIf=\"dataSource.data[0].id > 0\"\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info float-right\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    {{ \"General.Update\" | translate }}\r\n  </button>\r\n</ng-container>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentAttendanceListVM,\r\n  IStudentAttendanceVM,\r\n} from \"app/dashboard/models/control/Grading/attendence\";\r\nimport { IAddEditStudentFinalScore } from \"app/dashboard/models/control/Grading/student-score\";\r\nimport { AttendanceService } from \"app/dashboard/services/control/Grading/attendance.service\";\r\nimport { StudentScoresService } from \"app/dashboard/services/control/Grading/student-scores.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n@Component({\r\n  selector: \"app-final-score\",\r\n  templateUrl: \"./final-score.component.html\",\r\n  styleUrls: [\"./final-score.component.scss\"],\r\n})\r\nexport class FinalScoreComponent implements OnInit {\r\n  @Input() controlId: number;\r\n  @Input() subjectId: number;\r\n  @Input() maxScore: number;\r\n\r\n  displayColumns: string[] = [\"#\", \"Security_Number\", \"Score\"];\r\n  dataSource: MatTableDataSource<IStudentAttendanceVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  Index: number;\r\n  checkScore: boolean = false;\r\n  itemsCounts: number;\r\n  curLang: string;\r\n  submitted: boolean = false;\r\n  constructor(\r\n    private attendanceService: AttendanceService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private studentScoresService: StudentScoresService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.attendanceService.students.subscribe((res) => {\r\n      this.dataSource = new MatTableDataSource(res.StudentAttendanceList);\r\n      this.itemsCounts = res.itemCount;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getStudentAtendaning(1);\r\n  }\r\n\r\n  // Return All  Student\r\n  getStudentAtendaning(page: number) {\r\n    this.attendanceService\r\n      .getStudentAttending(this.controlId, this.subjectId, page)\r\n      .subscribe((res: IStudentAttendanceListVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.StudentAttendanceList);\r\n          this.itemsCounts = res.itemCount;\r\n          this.dataSource.sort = this.sort;\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  //change final Score\r\n  changeFinalScore($event, StudentScore: IStudentAttendanceVM, index) {\r\n    StudentScore.finalScore = $event;\r\n    this.dataSource.data[index] = StudentScore;\r\n    let totalScore =\r\n      Number(this.dataSource.data[index].yearPerformanceScore) +\r\n      Number(this.dataSource.data[index].finalScore);\r\n\r\n    this.Index = index;\r\n    if (totalScore > this.maxScore) this.checkScore = true;\r\n    else this.checkScore = false;\r\n  }\r\n\r\n  onSubmit() {\r\n    let studentScores = {} as IAddEditStudentFinalScore;\r\n    studentScores.subjectId = this.subjectId;\r\n    studentScores.StudentScoresList = this.dataSource.data;\r\n    this.submitted = true;\r\n    this.spinner.show();\r\n    let checkNull = this.dataSource.data.filter(\r\n      (x) => x.finalScore == null||Number(x.finalScore )==0\r\n    );\r\n\r\n    if (this.checkScore == false && checkNull.length == 0) {\r\n      this.studentScoresService\r\n        .AddStudentFinalScore(studentScores)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.toastr.success(res.returnString);\r\n            this.submitted = false;\r\n            this.attendanceService\r\n            .getStudentAttending(this.controlId, this.subjectId, 1)\r\n            .subscribe((res: IStudentAttendanceListVM) => {\r\n              if (res) {\r\n                this.attendanceService.students.next(res);\r\n              }\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.toastr.error(\"Control.ValidData\");\r\n    }\r\n    this.spinner.hide();\r\n  }\r\n}\r\n","<div class=\"alert bg-light-danger\" role=\"alert\" *ngIf=\"subjectId == 0\">\r\n  {{ \"Control.MustChooseSubjet\" | translate }}\r\n</div>\r\n<ng-container *ngIf=\"subjectId != 0\">\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. ium\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Security_Number Column -->\r\n      <ng-container matColumnDef=\"Security_Number\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.SecurityNumber\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.student_Security_Number }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Score Column -->\r\n      <ng-container matColumnDef=\"Score\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.Score\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele; let i = index\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              type=\"number\"\r\n              value=\"{{ ele.finalScore }}\"\r\n              (keyup)=\"changeFinalScore($event.target.value, ele, i)\"\r\n            />\r\n          </mat-form-field>\r\n          <mat-hint>\r\n            <span *ngIf=\"checkScore && Index == i\" class=\"text-danger\">\r\n              <i class=\"ft-alert-circle align-middle\"></i>\r\n              {{ \"Control.CheckScore\" | translate }} {{ maxScore }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"(this.dataSource.data[i].finalScore == null||this.dataSource.data[i].finalScore=='') && submitted\"\r\n              class=\"text-danger\"\r\n            >\r\n              <i class=\"ft-alert-circle align-middle\"></i>\r\n              {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"8\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getStudentAtendaning($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      [pageSize]=\"10\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of users\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info float-right\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    {{ \"General.Save\" | translate }}\r\n  </button>\r\n</ng-container>\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Control.Grading\" | translate }}\r\n\r\n        <a\r\n\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-danger float-right\"\r\n          [routerLink]=\"['/dashboard/control/control-employee']\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n          routerLinkActive=\"router-link-active\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-md-3\">\r\n            <mat-card  class=\"p-1\">\r\n              <mat-card-title>\r\n                {{ \"Material.Subjects\" | translate }}\r\n              </mat-card-title>\r\n              <mat-card-content class=\"container-fluid\">\r\n                <a\r\n                  mat-raised-button\r\n                  *ngFor=\"let item of courseList; let i = index\"\r\n                  (click)=\"onClick(i)\"\r\n                  [style.background-color]=\"\r\n                    isClicked == true && buttonIndex == i\r\n                      ? '#2f8be6'\r\n                      : ' rgba(247, 244, 244, 0.968)'\r\n                  \"\r\n                  [style.color]=\"\r\n                    isClicked == true && buttonIndex == i ? 'white' : 'black'\r\n                  \"\r\n                >\r\n                  {{\r\n                    curLang == \"ar\"\r\n                      ? item.subject_ar_name\r\n                      : item.subject_en_name\r\n                  }}\r\n                </a>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-12 col-md-9\">\r\n            <mat-card   class=\"p-1\">\r\n              <mat-card-content>\r\n                <mat-tab-group>\r\n                  <mat-tab label=\"{{ 'labels.Attendance' | translate }}\"\r\n                    ><app-attendance\r\n                      [controlId]=\"controlId\"\r\n                      [subjectId]=\"subjectId\"\r\n                    ></app-attendance\r\n                  ></mat-tab>\r\n                  <mat-tab\r\n                    label=\"{{ 'Control.YearPerformanceScores' | translate }}\"\r\n                    ><app-year-performance-scores\r\n                      [controlId]=\"controlId\"\r\n                      [subjectId]=\"subjectId\"\r\n                      [maxScore]=\"maxScore\"\r\n                    ></app-year-performance-scores\r\n                  ></mat-tab>\r\n                  <mat-tab label=\"{{ 'Control.FinalScore' | translate }}\">\r\n                    <app-final-score\r\n                      [controlId]=\"controlId\"\r\n                      [subjectId]=\"subjectId\"\r\n                      [maxScore]=\"maxScore\"\r\n                    ></app-final-score>\r\n                  </mat-tab>\r\n                  <mat-tab label=\"{{ 'Control.StudentGrades' | translate }}\"\r\n                    ><app-student-grades\r\n                      [controlId]=\"controlId\"\r\n                      [subjectId]=\"subjectId\"\r\n                      [minScore]=\"minScore\"\r\n                    ></app-student-grades\r\n                  ></mat-tab>\r\n                </mat-tab-group>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { CourseGetVM } from \"app/dashboard/models/setup/educational-setup/course\";\r\nimport { CourseService } from \"app/dashboard/services/setup/educational-setup/course.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-grading-index\",\r\n  templateUrl: \"./grading-index.component.html\",\r\n  styleUrls: [\"./grading-index.component.scss\"],\r\n})\r\nexport class GradingIndexComponent implements OnInit {\r\n  functionId: number;\r\n  EduCompId: number;\r\n  controlId: number;\r\n  educationalYearId: number;\r\n  curLang: string;\r\n  courseList: CourseGetVM[];\r\n  rowFunctions: IRowFunctionVM[];\r\n  isClicked: boolean = false;\r\n  buttonIndex: number;\r\n  subjectId: number = 0;\r\n  maxScore: number;\r\n  minScore: number;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private courseService: CourseService,\r\n    private translate: TranslateService\r\n  ) {\r\n    route.queryParamMap.subscribe((param) => {\r\n      this.functionId = Number(param.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) this.rowFunctions = res;\r\n          });\r\n      }\r\n    });\r\n\r\n    route.paramMap.subscribe((params) => {\r\n      this.controlId = Number(params.get(\"controlId\"));\r\n      this.educationalYearId = Number(params.get(\"educationalyearId\"));\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.getAllCourses();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n  //to change subject id\r\n  onClick(index: number) {\r\n    this.isClicked = true;\r\n    this.buttonIndex = index;\r\n    this.subjectId = this.courseList[index].id;\r\n    this.maxScore = this.courseList[index].MaxScore;\r\n    this.minScore = this.courseList[index].MinScore;\r\n  }\r\n  //get all courses\r\n  getAllCourses() {\r\n    this.courseService\r\n      .getCoursesByYearDropDown(this.educationalYearId)\r\n      .subscribe((res) => {\r\n        if (res) this.courseList = res.subjectList;\r\n\r\n        console.log(\"courseList\", this.courseList);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentAttendanceListVM,\r\n  IStudentAttendanceVM,\r\n} from \"app/dashboard/models/control/Grading/attendence\";\r\nimport { AttendanceService } from \"app/dashboard/services/control/Grading/attendance.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-student-grades\",\r\n  templateUrl: \"./student-grades.component.html\",\r\n  styleUrls: [\"./student-grades.component.scss\"],\r\n})\r\nexport class StudentGradesComponent implements OnInit {\r\n  @Input() controlId: number;\r\n  @Input() subjectId: number;\r\n  @Input() minScore: number;\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"Name\",\r\n    \"Security_Number\",\r\n    \"yearPerformanceScore\",\r\n    \"finalScore\",\r\n    \"totalScore\",\r\n    \"Status\",\r\n  ];\r\n  curLang: string;\r\n  dataSource: MatTableDataSource<IStudentAttendanceVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  itemsCounts: number;\r\n  constructor(\r\n    private attendanceService: AttendanceService,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.attendanceService.students.subscribe((res) => {\r\n      this.dataSource = new MatTableDataSource(res.StudentAttendanceList);\r\n      this.itemsCounts = res.itemCount;\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getStudentAtendaning(1);\r\n  }\r\n  // Return All  Student\r\n  getStudentAtendaning(page: number) {\r\n    this.attendanceService\r\n      .getStudentAttending(this.controlId, this.subjectId, page)\r\n      .subscribe((res: IStudentAttendanceListVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.StudentAttendanceList);\r\n          this.itemsCounts = res.itemCount;\r\n          this.dataSource.sort = this.sort;\r\n\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"alert bg-light-danger\" role=\"alert\" *ngIf=\"subjectId == 0\">\r\n  {{ \"Control.MustChooseSubjet\" | translate }}\r\n</div>\r\n<ng-container *ngIf=\"subjectId != 0\">\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. ium\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n      </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"Name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Name\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.student_name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Security_Number Column -->\r\n      <ng-container matColumnDef=\"Security_Number\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.SecurityNumber\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.student_Security_Number }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- yearPerformanceScore Column -->\r\n      <ng-container matColumnDef=\"yearPerformanceScore\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.YearPerformanceScores\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.yearPerformanceScore }}\r\n        </td>\r\n      </ng-container>\r\n      <!-- finalScore Column -->\r\n      <ng-container matColumnDef=\"finalScore\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.FinalScore\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.finalScore }}\r\n        </td>\r\n      </ng-container>\r\n      <!-- totalScore Column -->\r\n      <ng-container matColumnDef=\"totalScore\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.TotalScore\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.totalScore }}\r\n        </td>\r\n      </ng-container>\r\n      <!-- Status Column -->\r\n      <ng-container matColumnDef=\"Status\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Status\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          <span *ngIf=\"ele.totalScore < minScore\" class=\"text-danger\">\r\n            {{ \"Control.Failed\" | translate }}\r\n          </span>\r\n          <span *ngIf=\"ele.totalScore > minScore\" class=\"text-success\">\r\n            {{ \"Control.Success\" | translate }}\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"8\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getStudentAtendaning($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      [pageSize]=\"10\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of users\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</ng-container>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentAttendanceListVM,\r\n  IStudentAttendanceVM,\r\n} from \"app/dashboard/models/control/Grading/attendence\";\r\nimport { AddEditStudentYearPerformanceScore } from \"app/dashboard/models/control/Grading/student-score\";\r\nimport { AttendanceService } from \"app/dashboard/services/control/Grading/attendance.service\";\r\nimport { StudentScoresService } from \"app/dashboard/services/control/Grading/student-scores.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-year-performance-scores\",\r\n  templateUrl: \"./year-performance-scores.component.html\",\r\n  styleUrls: [\"./year-performance-scores.component.scss\"],\r\n})\r\nexport class YearPerformanceScoresComponent implements OnInit {\r\n  @Input() controlId: number;\r\n  @Input() subjectId: number;\r\n  @Input() maxScore: number;\r\n  checkScore: boolean = false;\r\n  submitted: boolean = false;\r\n  displayColumns: string[] = [\"#\", \"Name\", \"Security_Number\", \"Score\"];\r\n  dataSource: MatTableDataSource<IStudentAttendanceVM>;\r\n  Index: number;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  itemsCounts: number;\r\n  curLang: string;\r\n  constructor(\r\n    private attendanceService: AttendanceService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private studentScoresService: StudentScoresService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.attendanceService.students.subscribe((res) => {\r\n      this.dataSource = new MatTableDataSource(res.StudentAttendanceList);\r\n      this.itemsCounts = res.itemCount;\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getStudentAtendaning(1);\r\n  }\r\n  // Return All  Student\r\n  getStudentAtendaning(page: number) {\r\n    this.attendanceService\r\n      .getStudentAttending(this.controlId, this.subjectId, page)\r\n      .subscribe((res: IStudentAttendanceListVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.StudentAttendanceList);\r\n          this.itemsCounts = res.itemCount;\r\n          this.dataSource.sort = this.sort;\r\n\r\n        }\r\n      });\r\n  }\r\n  //change YearPer formance Score\r\n  changeYearPerformanceScore(\r\n    $event,\r\n    StudentScore: IStudentAttendanceVM,\r\n    index\r\n  ) {\r\n    StudentScore.yearPerformanceScore = $event;\r\n    this.dataSource.data[index] = StudentScore;\r\n    this.Index = index;\r\n    let totalScore =\r\n      Number(this.dataSource.data[index].yearPerformanceScore) +\r\n      Number(this.dataSource.data[index].finalScore);\r\n\r\n    if (totalScore > this.maxScore) this.checkScore = true;\r\n    else this.checkScore = false;\r\n  }\r\n  onSubmit() {\r\n    let studentScores = {} as AddEditStudentYearPerformanceScore;\r\n    studentScores.subjectId = this.subjectId;\r\n    studentScores.StudentScoresList = this.dataSource.data;\r\n    this.submitted = true;\r\n    let checkNull = this.dataSource.data.filter(\r\n      (x) => x.yearPerformanceScore == null||Number(x.yearPerformanceScore )==0\r\n    );\r\n\r\n    this.spinner.show();\r\n\r\n    if (this.checkScore == false && checkNull.length == 0) {\r\n      console.log(studentScores);\r\n      this.studentScoresService\r\n        .AddStudentYearPerformanceScore(studentScores)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.toastr.success(res.returnString);\r\n            this.attendanceService\r\n            .getStudentAttending(this.controlId, this.subjectId, 1)\r\n            .subscribe((res: IStudentAttendanceListVM) => {\r\n              if (res) {\r\n                this.attendanceService.students.next(res);\r\n              }\r\n            });\r\n            this.submitted = false;\r\n          }\r\n        });\r\n    } else {\r\n      this.toastr.error(\"Control.ValidData\");\r\n    }\r\n    this.spinner.hide();\r\n  }\r\n}\r\n","<div class=\"alert bg-light-danger\" role=\"alert\" *ngIf=\"subjectId == 0\">\r\n  {{ \"Control.MustChooseSubjet\" | translate }}\r\n</div>\r\n<ng-container *ngIf=\"subjectId != 0\">\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. ium\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"Name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Name\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">{{ ele.student_name }}</td>\r\n      </ng-container>\r\n      <!-- Security_Number Column -->\r\n      <ng-container matColumnDef=\"Security_Number\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.SecurityNumber\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.student_Security_Number }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Score Column -->\r\n      <ng-container matColumnDef=\"Score\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Control.Score\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele; let i = index\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              type=\"number\"\r\n              value=\"{{ ele.yearPerformanceScore }}\"\r\n              (keyup)=\"changeYearPerformanceScore($event.target.value, ele, i)\"\r\n            />\r\n          </mat-form-field>\r\n          <mat-hint>\r\n            <span *ngIf=\"checkScore && Index == i\" class=\"text-danger\">\r\n              <i class=\"ft-alert-circle align-middle\"></i>\r\n              {{ \"Control.CheckScore\" | translate }} {{maxScore}}\r\n            </span>\r\n            <span\r\n\r\n            *ngIf=\"(this.dataSource.data[i].yearPerformanceScore == null ||this.dataSource.data[i].yearPerformanceScore == '')&& submitted\"\r\n\r\n              class=\"text-danger\"\r\n            >\r\n              <i class=\"ft-alert-circle align-middle\"></i>\r\n              {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"8\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getStudentAtendaning($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      [pageSize]=\"10\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of users\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info float-right\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    {{ \"General.Save\" | translate }}\r\n  </button>\r\n\r\n</ng-container>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IAddEmployeeControlVM,\r\n  IEmployeeControlVM,\r\n  IEmployeesVM,\r\n} from \"app/dashboard/models/control/control-employee\";\r\nimport { IEmployeeVM } from \"app/dashboard/models/employees/employee\";\r\nimport { ControlEmployeeService } from \"app/dashboard/services/control/control-employee.service\";\r\nimport { EmployeeService } from \"app/dashboard/services/employees/employee.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-add-control-employee\",\r\n  templateUrl: \"./add-control-employee.component.html\",\r\n  styleUrls: [\"./add-control-employee.component.scss\"],\r\n})\r\nexport class AddControlEmployeeComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  ControlId: number = 0;\r\n  employeeList: IEmployeeVM[];\r\n  filterEmployeeList: Observable<IEmployeeVM[]>;\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\"#\", \"ar_name\", \"en_name\", \"isManeger\", \"action\"];\r\n  dataSource: MatTableDataSource<IEmployeesVM>;\r\n  controlDataList: IEmployeesVM[];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private controlEmployeeService: ControlEmployeeService,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    route.paramMap.subscribe((params) => {\r\n      this.ControlId = Number(params.get(\"controlId\"));\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      employeeId: [\"\", [Validators.required]],\r\n      termId: [\"\", Validators.required],\r\n      AcademicEduYearId: [\"\", Validators.required],\r\n      educationalYearId: [\"\", Validators.required],\r\n      IsManeger: [\"\", Validators.required],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.getAllEmployee();\r\n    if (this.ControlId > 0) this.returnControlById();\r\n    else this.dataSource = new MatTableDataSource(this.controlDataList);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnControlById();\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.ControlId = 0;\r\n    this.submitted = false;\r\n    this.dataSource = new MatTableDataSource(null);\r\n  }\r\n  // filter employee\r\n  private filter_employee(value: string): IEmployeeVM[] {\r\n    const filterValue = this.curLang == \"en\" ? value.toLowerCase() : value;\r\n    return this.employeeList.filter((option) => {\r\n    //  if (this.curLang == \"en\")\r\n        option.en_name.toLowerCase().includes(filterValue);\r\n      //else option.ar_name.includes(filterValue);\r\n    });\r\n  }\r\n\r\n  // Return All  Employees\r\n  getAllEmployee() {\r\n    this.employeeService\r\n      .getEmployeeEmployeesDropDown()\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.employeeList = res;\r\n          console.log(\"employee\", this.employeeList);\r\n          this.filterEmployeeList = this.FormCtrls.employeeId.valueChanges.pipe(\r\n            startWith(\"\"),\r\n            map((value: any) => this.filter_employee(value || \"\"))\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  // Return All Control by Id\r\n  returnControlById() {\r\n    this.controlEmployeeService\r\n      .getControlById(this.ControlId)\r\n      .subscribe((res: IEmployeeControlVM) => {\r\n        if (res) {\r\n          this.controlDataList = res.employees;\r\n          this.dataSource = new MatTableDataSource(this.controlDataList);\r\n          this.myForm.patchValue(res);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let data = {} as IAddEmployeeControlVM;\r\n    data.id = this.ControlId;\r\n    data.employeeId = this.FormCtrls.employeeId.value;\r\n    data.termId = this.FormCtrls.termId.value;\r\n    data.AcademicEduYearId = this.FormCtrls.AcademicEduYearId.value;\r\n    data.educationalYearId = this.FormCtrls.educationalYearId.value;\r\n    data.IsManeger = this.FormCtrls.IsManeger.value;\r\n    data.EduCompId = this.EduCompId;\r\n    console.log(\"id\", data.id);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.controlEmployeeService.addControl(data).subscribe((res: any) => {\r\n        console.log(\"returnValue\", res.returnValue);\r\n        console.log(\"returnValue\", res.controlEmployee);\r\n\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          this.dataSource?.data.unshift(res.controlEmployee);\r\n          this.ControlId = res.controlEmployee.ControlId;\r\n          console.log(\"ControlId\", this.ControlId);\r\n\r\n          this.itemsCounts++;\r\n          this.FormCtrls.employeeId.setValue(null);\r\n          this.FormCtrls.IsManeger.setValue(null);\r\n          this.dataSource.sort = this.sort;\r\n        } else this.toastr.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleteDialog(Data: IEmployeesVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? Data.ar_name : Data.en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteEmployee(Data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Employee From Control\r\n  deleteEmployee(Data: IEmployeesVM) {\r\n    this.controlEmployeeService\r\n      .deleteEmployeeFromControl(Data.EmployeeId, this.ControlId)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == Data);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (Data == this.FormCtrls.id.value) this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Control.AddControl\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-danger float-right\"\r\n          [routerLink]=\"['/dashboard/control/control-employee']\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n          routerLinkActive=\"router-link-active\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Educational Year -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-educational-year-dropdown\r\n                    [control]=\"FormCtrls.educationalYearId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-educational-year-dropdown>\r\n                </div>\r\n                <!-- academicYear -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-academic-year-dropdown\r\n                    [control]=\"FormCtrls.AcademicEduYearId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-academic-year-dropdown>\r\n                </div>\r\n\r\n                <!-- term -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-term-by-academic-year\r\n                    [control]=\"FormCtrls.termId\"\r\n                    [submitted]=\"submitted\"\r\n                    [academicEduYearlId]=\"FormCtrls.AcademicEduYearId\"\r\n                  >\r\n                  </app-term-by-academic-year>\r\n                </div>\r\n                <!-- employees -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.EmployeeName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"employeeId\">\r\n                      <mat-option [value]=\"null\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of employeeList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{\r\n                          curLang == \"ar\"\r\n                            ? ele.ar_name ?? ele.en_name\r\n                            : ele.en_name ?? ele.ar_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.employeeId.invalid &&\r\n                        (FormCtrls.employeeId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.employeeId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <!-- <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.EmployeeName\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      type=\"text\"\r\n                      matInput\r\n                      formControlName=\"employeeId\"\r\n                      [matAutocomplete]=\"autoEmployeeGroup\"\r\n                    />\r\n                    <mat-autocomplete #autoEmployeeGroup=\"matAutocomplete\">\r\n                      <mat-option\r\n\r\n                        *ngFor=\"let val of filterEmployeeList | async\"\r\n                        [value]=\"val.ar_name\"\r\n                      >\r\n                        {{\r\n                          curLang == \"ar\"\r\n                            ? ele.ar_name ?? ele.en_name\r\n                            : ele.en_name ?? ele.ar_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-autocomplete>\r\n\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.employeeId.invalid &&\r\n                        (FormCtrls.employeeId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.employeeId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field> -->\r\n                </div>\r\n\r\n                <!-- is Manger -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <!-- <mat-label>\r\n                    {{ \"Control.IsManeger\" | translate }}\r\n                  </mat-label> -->\r\n                  <mat-radio-group formControlName=\"IsManeger\">\r\n                    <mat-radio-button [value]=\"true\">\r\n                      {{ \"Control.Maneger\" | translate }}\r\n                    </mat-radio-button>\r\n                    <mat-radio-button [value]=\"false\">\r\n                      {{ \"Control.Member\" | translate }}\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n\r\n                  <mat-hint\r\n                    *ngIf=\"\r\n                      FormCtrls.IsManeger.invalid &&\r\n                      (FormCtrls.IsManeger.touched || submitted)\r\n                    \"\r\n                    class=\"text-danger error mt-0\"\r\n                  >\r\n                    <span *ngIf=\"FormCtrls.IsManeger.errors?.required\">\r\n                      <i class=\"ft-alert-circle align-middle\"></i>\r\n                      {{ \"labels.MustChoosevalue\" | translate }}\r\n                    </span>\r\n                  </mat-hint>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n        <i *ngIf=\"ControlId==0\"class=\"fa fa-plus\"></i>\r\n        {{(ControlId==0? \"General.Add\":  \"General.Update\")| translate }}\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          *ngIf=\"ControlId > 0\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Employees.Employees\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- ar_name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- en_name Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- isManeger Column -->\r\n            <ng-container matColumnDef=\"isManeger\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Control.IsManager\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  (ele.IsManeger == true ? \"Control.Maneger\" : \"Control.Member\")\r\n                    | translate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"text-center actions\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-4\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"8\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IControlVM } from \"app/dashboard/models/control/control-employee\";\r\nimport { ControlEmployeeService } from \"app/dashboard/services/control/control-employee.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-control-employees\",\r\n  templateUrl: \"./control-employees.component.html\",\r\n  styleUrls: [\"./control-employees.component.scss\"],\r\n})\r\nexport class ControlEmployeesComponent implements OnInit {\r\n  EduCompId: number;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"AcademicYear\",\r\n    \"EducationalYear\",\r\n    \"Term\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IControlVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    public authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private controlEmployeeService: ControlEmployeeService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllContorl();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  getAllContorl() {\r\n    this.controlEmployeeService\r\n      .getAllControls()\r\n      .subscribe((res: IControlVM[]) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res);\r\n          console.log(\"res\",res)\r\n        }\r\n      });\r\n  }\r\n  openDeleateDialog(Data: IControlVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: Data.AcademicEducationalYear_From_Date && Data.AcademicEducationalYear_To_Date,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteControl(Data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete  Control\r\n  deleteControl(Data: IControlVM) {\r\n    this.controlEmployeeService\r\n      .deleteControl(Data.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == Data);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.sort = this.sort;\r\n\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Control.controlEmployee\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          [routerLink]=\"['/dashboard/control/add-employee/0']\"\r\n          routerLinkActive=\"router-link-active\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"Control.AddControl\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- AcademicYear Column -->\r\n            <ng-container matColumnDef=\"AcademicYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.AcademicYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  ele.AcademicEducationalYear_From_Date | date : \"dd-MM-yyyy\"\r\n                }}/{{\r\n                  ele.AcademicEducationalYear_To_Date | date : \"dd-MM-yyyy\"\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- EducationalYear Column -->\r\n            <ng-container matColumnDef=\"EducationalYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\"\r\n                    ? ele.EducationalYear_Ar_Name ?? ele.EducationalYear_En_Name\r\n                    : ele.EducationalYear_En_Name ?? ele.EducationalYear_Ar_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Term Column -->\r\n            <ng-container matColumnDef=\"Term\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.Term\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\"\r\n                    ? ele.Term_Ar_Name ?? ele.Term_En_Name\r\n                    : ele.Term_En_Name ?? ele.Term_Ar_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'StudentPassword'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/control/student-numbers/{{\r\n                          ele.id\r\n                        }}\"\r\n                        [queryParams]=\"{ functionId: functionId }\"\r\n                      >\r\n                        <i class=\"fa fa-plus-square-o mr-2\"></i>\r\n                        {{\r\n                          \"General.StudentSecurityAndSeatingNumbers\" | translate\r\n                        }}\r\n                      </a>\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Grading'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/control/grading/{{ ele.id }}/{{ele.EducationalYearId}}\"\r\n                        [queryParams]=\"{ functionId: functionId }\"\r\n                      >\r\n                        <i class=\"fa fa-search mr-2\"></i>\r\n                        {{ \"Control.Grading\" | translate }}\r\n                      </a>\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/control/add-employee/{{\r\n                          ele.id\r\n                        }}\"\r\n                        [queryParams]=\"{ functionId: functionId }\"\r\n                      >\r\n                        <i class=\"ft-edit-2 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-trash mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"8\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddControlEmployeeComponent } from './add-control-employee/add-control-employee.component';\r\nimport { ControlEmployeesComponent } from './control-employees/control-employees.component';\r\nimport { ControlStudentComponent } from './control-student/control-student.component';\r\nimport { GradingIndexComponent } from './Grading/grading-index/grading-index.component';\r\n\r\nconst routes: Routes = [\r\n  {path:\"control-employee\",component:ControlEmployeesComponent},\r\n  {path:\"add-employee/:controlId\",component:AddControlEmployeeComponent},\r\n  {path:\"student-numbers/:controlId\",component:ControlStudentComponent},\r\n  {path:\"grading/:controlId/:educationalyearId\",component:GradingIndexComponent}\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ControlRoutingModule {\r\n\r\n }\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { ControlStudentService } from \"app/dashboard/services/control/control-student.service\";\r\nimport {\r\n  IAddStudentVM,\r\n  IControlStudentVMListVM,\r\n} from \"app/dashboard/models/control/control-student\";\r\nimport { startWith } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-control-student\",\r\n  templateUrl: \"./control-student.component.html\",\r\n  styleUrls: [\"./control-student.component.scss\"],\r\n})\r\nexport class ControlStudentComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  ControlId: number = 0;\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\"#\", \"Name\", \"SetNumber\", \"SecurityNumber\"];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private controlStudentService: ControlStudentService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    route.paramMap.subscribe((params) => {\r\n      this.ControlId = Number(params.get(\"controlId\"));\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      seatingNumberStartWith: [\r\n        \"\",\r\n        [Validators.required, CustomeValidator.bigZero],\r\n      ],\r\n      numberOfSecurityNumber: [\r\n        \"\",\r\n        [Validators.required, CustomeValidator.bigZero],\r\n      ],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.getAllStudentByControleId(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudentByControleId(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  // Return All  Student\r\n  getAllStudentByControleId(page: number) {\r\n    this.controlStudentService\r\n      .getAllStudentByControlId(this.ControlId, page)\r\n      .subscribe((res: IControlStudentVMListVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.ControlstudentList);\r\n          this.itemsCounts = res.itemCount;\r\n\r\n          if (res.itemCount != 0) {\r\n            this.FormCtrls.id.setValue(this.ControlId);\r\n\r\n            this.FormCtrls.seatingNumberStartWith.setValue(\r\n              res.ControlstudentList[0].seatingNumberStartWith\r\n            );\r\n            this.FormCtrls.numberOfSecurityNumber.setValue(\r\n              res.ControlstudentList[0].numberOfSecurityNumber\r\n            );\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let data = {} as IAddStudentVM;\r\n    data.controlId = this.ControlId;\r\n    data.numberOfSecurityNumber = this.FormCtrls.numberOfSecurityNumber?.value;\r\n    data.seatingNumberStartWith = this.FormCtrls.seatingNumberStartWith?.value;\r\n\r\n    console.log(\"ddd\", data);\r\n    console.log(\"form\", this.myForm.controls);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.controlStudentService\r\n        .addStudentPasswordAndNumber(data)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            if (this.FormCtrls.id.value == 0)\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            else this.toastr.success(\"General.UpdateSuccessfully\");\r\n\r\n            this.dataSource = new MatTableDataSource(res.studentList);\r\n            this.FormCtrls.id.setValue(this.ControlId);\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.id.value == 0\r\n            ? \"Control.AddSeatingAndSecurityNumber\"\r\n            : \"Control.UpdateSeatingAndSecurityNumber\"\r\n          ) | translate\r\n        }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-danger float-right\"\r\n          [routerLink]=\"['/dashboard/control/control-employee']\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n          routerLinkActive=\"router-link-active\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-card>\r\n                    <mat-card-title>\r\n                      {{ \"Control.SetNumbers\" | translate }}\r\n                    </mat-card-title>\r\n                    <mat-card-content class=\"container-fluid\">\r\n                      <div class=\"row\">\r\n                        <!-- strat with -->\r\n                        <div class=\"col-12\">\r\n                          <mat-form-field appearance=\"legacy\">\r\n                            <mat-label>\r\n                              {{ \"Control.StartWith\" | translate }}\r\n                            </mat-label>\r\n                            <input\r\n                              matInput\r\n                              type=\"number\"\r\n                              formControlName=\"seatingNumberStartWith\"\r\n                            />\r\n\r\n                            <mat-hint\r\n                              *ngIf=\"\r\n                                FormCtrls.seatingNumberStartWith.invalid &&\r\n                                (FormCtrls.seatingNumberStartWith.touched ||\r\n                                  submitted)\r\n                              \"\r\n                              class=\"text-danger\"\r\n                            >\r\n                              <span\r\n                                *ngIf=\"\r\n                                  FormCtrls.seatingNumberStartWith.errors\r\n                                    ?.required\r\n                                \"\r\n                              >\r\n                                <i class=\"ft-alert-circle align-middle\"></i>\r\n                                {{ \"labels.mustEnterValue\" | translate }}\r\n                              </span>\r\n                              <span\r\n                                *ngIf=\"\r\n                                  FormCtrls.seatingNumberStartWith.errors\r\n                                    ?.bigZero\r\n                                \"\r\n                              >\r\n                                <i class=\"ft-alert-circle align-middle\"></i>\r\n                                {{ \"labels.bigZero\" | translate }}\r\n                              </span>\r\n                            </mat-hint>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </mat-card-content>\r\n                  </mat-card>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <mat-card>\r\n                    <mat-card-title>\r\n                      {{ \"Control.SecurityNumbers\" | translate }}\r\n                    </mat-card-title>\r\n                    <mat-card-content class=\"container-fluid\">\r\n                      <div class=\"row\">\r\n                        <!-- CountNumber -->\r\n                        <div class=\"col-12\">\r\n                          <mat-form-field appearance=\"legacy\">\r\n                            <mat-label>\r\n                              {{ \"Control.NumberCount\" | translate }}\r\n                            </mat-label>\r\n                            <input\r\n                              matInput\r\n                              type=\"number\"\r\n                              formControlName=\"numberOfSecurityNumber\"\r\n                            />\r\n\r\n                            <mat-hint\r\n                              *ngIf=\"\r\n                                FormCtrls.numberOfSecurityNumber.invalid &&\r\n                                (FormCtrls.numberOfSecurityNumber.touched ||\r\n                                  submitted)\r\n                              \"\r\n                              class=\"text-danger\"\r\n                            >\r\n                              <span\r\n                                *ngIf=\"\r\n                                  FormCtrls.numberOfSecurityNumber.errors\r\n                                    ?.required\r\n                                \"\r\n                              >\r\n                                <i class=\"ft-alert-circle align-middle\"></i>\r\n                                {{ \"labels.mustEnterValue\" | translate }}\r\n                              </span>\r\n                              <span\r\n                                *ngIf=\"\r\n                                  FormCtrls.numberOfSecurityNumber.errors\r\n                                    ?.bigZero\r\n                                \"\r\n                              >\r\n                                <i class=\"ft-alert-circle align-middle\"></i>\r\n                                {{ \"labels.bigZero\" | translate }}\r\n                              </span>\r\n                            </mat-hint>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </mat-card-content>\r\n                  </mat-card>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"this.FormCtrls.id.value == 0\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          *ngIf=\"this.FormCtrls.id.value != 0\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          *ngIf=\"this.FormCtrls.id.value != 0\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Students\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.student_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- number Column -->\r\n            <ng-container matColumnDef=\"SetNumber\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Control.SetNumber\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.SeatingNumber }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- SecurityNumber Column -->\r\n            <ng-container matColumnDef=\"SecurityNumber\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Control.SecurityNumber\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.SecurityNumber }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"8\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStudentByControleId($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ControlEmployeesComponent } from \"./control-employees/control-employees.component\";\r\nimport { AddControlEmployeeComponent } from \"./add-control-employee/add-control-employee.component\";\r\nimport { ControlRoutingModule } from \"./control-routing.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ControlStudentComponent } from \"./control-student/control-student.component\";\r\nimport { GradingIndexComponent } from \"./Grading/grading-index/grading-index.component\";\r\nimport { StudentGradesComponent } from \"./Grading/student-grades/student-grades.component\";\r\nimport { AttendanceComponent } from \"./Grading/attendance/attendance.component\";\r\nimport { YearPerformanceScoresComponent } from './Grading/year-performance-scores/year-performance-scores.component';\r\nimport { FinalScoreComponent } from './Grading/final-score/final-score.component';\r\n@NgModule({\r\n  declarations: [\r\n    ControlEmployeesComponent,\r\n    AddControlEmployeeComponent,\r\n    ControlStudentComponent,\r\n    GradingIndexComponent,\r\n    StudentGradesComponent,\r\n    AttendanceComponent,\r\n    YearPerformanceScoresComponent,\r\n    FinalScoreComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ControlRoutingModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n  ],\r\n})\r\nexport class ControlModule {}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IAddEditAttendanceVM,\r\n  IStudentAttendanceListVM,\r\n} from \"app/dashboard/models/control/Grading/attendence\";\r\nimport { environment } from \"environments/environment\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AttendanceService {\r\n  students = new BehaviorSubject<any>([]);\r\n\r\n  constructor(private http: HttpClient) {}\r\n  // return all get All Student Attendence\r\n  getStudentAttendence(controlId: number, subjectId: number, page: number) {\r\n    return this.http.get<IStudentAttendanceListVM>(\r\n      `${environment.baseUrl}control/getStudentAttendence/${controlId}/${subjectId}/${page}`\r\n    );\r\n  }\r\n\r\n  // add edit student Attendence\r\n\r\n  addEditStudentAttendence(data: IAddEditAttendanceVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}control/addEditStudentAttendance`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // return all get All Student Attending\r\n  getStudentAttending(controlId: number, subjectId: number, page: number) {\r\n    return this.http.get<IStudentAttendanceListVM>(\r\n      `${environment.baseUrl}control/getStudentAttending/${controlId}/${subjectId}/${page}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AddEditStudentYearPerformanceScore, IAddEditStudentFinalScore } from \"app/dashboard/models/control/Grading/student-score\";\r\n\r\nimport { environment } from \"environments/environment\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StudentScoresService {\r\n  constructor(private http: HttpClient) {}\r\n  // add student year performance score\r\n  AddStudentYearPerformanceScore(data:AddEditStudentYearPerformanceScore) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}control/AddEditStudentYearPerformanceScore`,\r\n      data\r\n    );\r\n  }\r\n  // add student final score\r\n  AddStudentFinalScore(data:IAddEditStudentFinalScore) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}control/AddEditStudentFinalScore`,\r\n      data\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IAddEmployeeControlVM, IControlVM, IEmployeeControlVM } from \"app/dashboard/models/control/control-employee\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ControlEmployeeService {\r\n  constructor(private http: HttpClient) {}\r\n  // return all controls\r\n  getAllControls() {\r\n    return this.http.get<IControlVM[]>(\r\n      `${environment.baseUrl}control/getAllControls`\r\n    );\r\n  }\r\n  // return all control id\r\n  getControlById(id: number) {\r\n    return this.http.get<IEmployeeControlVM>(\r\n      `${environment.baseUrl}control/getControlById/${id}`\r\n    );\r\n  }\r\n\r\n  // add   control\r\n  addControl(data: IAddEmployeeControlVM) {\r\n    return this.http.post<IControlVM>(\r\n      `${environment.baseUrl}control/addControl`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // delete  employee from control\r\n  deleteEmployeeFromControl(EmployeeId: number,ControlId:number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}control/deleteEmployeeFromControl/${EmployeeId}/${ControlId}`\r\n    );\r\n  }\r\n\r\n    // delete control\r\n    deleteControl(ControlId:number) {\r\n      return this.http.delete(\r\n        `${environment.baseUrl}control/deleteControl/${ControlId}`\r\n      );\r\n    }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IAddStudentVM,\r\n  IControlStudentVM,\r\n  IControlStudentVMListVM,\r\n} from \"app/dashboard/models/control/control-student\";\r\nimport { environment } from \"environments/environment\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ControlStudentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // return all get All Student By Control Id using page\r\n  getAllStudentByControlId(id: number, page: number) {\r\n    return this.http.get<IControlStudentVMListVM>(\r\n      `${environment.baseUrl}control/getAllStudentByControlId/${id}/${page}`\r\n    );\r\n  }\r\n\r\n  // return all get All Student By Control Id\r\n  getStudentsByControlId(id: number) {\r\n    return this.http.get<IControlStudentVM[]>(\r\n      `${environment.baseUrl}control/getAllStudentByControlId/${id}`\r\n    );\r\n  }\r\n\r\n  // add student password and number\r\n  addStudentPasswordAndNumber(data: IAddStudentVM) {\r\n    return this.http.post<IAddStudentVM>(\r\n      `${environment.baseUrl}control/addEditControlStudent`,\r\n      data\r\n    );\r\n  }\r\n}\r\n"],"names":["MatPaginator","MatSort","MatTableDataSource","i0","ctx_r21","ctx_r24","ctx_r26","ctx_r28","ctx_r30","ctx_r1","AttendanceComponent","attendanceService","translate","toastr","onLangChange","subscribe","lang","curLang","dataSource","paginator","sort","changes","getStudentAtendance","page","getStudentAttendence","controlId","subjectId","res","StudentAttendanceList","itemsCounts","itemCount","$event","StudentAttendence","index","isAttendence","checked","data","console","log","studentAttendence","studentAttendance","addEditStudentAttendence","returnValue","studentList","id","success","getStudentAttending","students","next","selectors","viewQuery","ctx_r18","ctx_r23","FinalScoreComponent","spinner","studentScoresService","getStudentAtendaning","StudentScore","finalScore","totalScore","Number","yearPerformanceScore","Index","maxScore","checkScore","studentScores","StudentScoresList","submitted","show","checkNull","filter","x","length","AddStudentFinalScore","returnString","error","hide","ctx_r3","ctx_r0","GradingIndexComponent","route","authService","courseService","queryParamMap","param","functionId","get","getUserRowFunctions","rowFunctions","paramMap","params","educationalYearId","EduCompId","getEduCompId","getAllCourses","e","isClicked","buttonIndex","courseList","MaxScore","minScore","MinScore","getCoursesByYearDropDown","subjectList","decls","vars","consts","template","ctx","ctx_r32","StudentGradesComponent","ctx_r27","YearPerformanceScoresComponent","AddStudentYearPerformanceScore","Validators","DeleteDialogComponent","map","startWith","ctx_r22","AddControlEmployeeComponent","dialog","fb","controlEmployeeService","employeeService","ControlId","myForm","group","employeeId","required","termId","AcademicEduYearId","IsManeger","getAllEmployee","returnControlById","controlDataList","controls","event","filterValue","target","value","trim","toLowerCase","reset","employeeList","option","en_name","includes","getEmployeeEmployeesDropDown","filterEmployeeList","FormCtrls","valueChanges","pipe","filter_employee","getControlById","employees","patchValue","valid","addControl","controlEmployee","_a","unshift","setValue","Data","open","msg","ar_name","afterClosed","confirm","deleteEmployee","deleteEmployeeFromControl","EmployeeId","findIndex","splice","clearForm","ControlEmployeesComponent","getAllContorl","getAllControls","AcademicEducationalYear_From_Date","AcademicEducationalYear_To_Date","deleteControl","RouterModule","ControlStudentComponent","routes","path","component","ControlRoutingModule","forChild","imports","exports","CustomeValidator","ctx_r25","controlStudentService","seatingNumberStartWith","bigZero","numberOfSecurityNumber","getAllStudentByControleId","getAllStudentByControlId","ControlstudentList","_b","addStudentPasswordAndNumber","CommonModule","SharedModule","NgxSpinnerModule","MaterialModule","ReactiveFormsModule","ControlModule","declarations","environment","BehaviorSubject","AttendanceService","http","baseUrl","post","factory","providedIn","StudentScoresService","ControlEmployeeService","delete","ControlStudentService"],"sourceRoot":"webpack:///"}