{"version":3,"file":"src_app_dashboard_pages_Financial_financial_module_ts.js","mappings":"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","sources":["./src/app/dashboard/pages/Financial/deduction-reasons/deduction-reasons.component.ts","./src/app/dashboard/pages/Financial/deduction-reasons/deduction-reasons.component.html","./src/app/dashboard/pages/Financial/discount-type/discount-type.component.ts","./src/app/dashboard/pages/Financial/discount-type/discount-type.component.html","./src/app/dashboard/pages/Financial/employee-payroll/employee-payroll.component.ts","./src/app/dashboard/pages/Financial/employee-payroll/employee-payroll.component.html","./src/app/dashboard/pages/Financial/employee-penality/employee-penality.component.ts","./src/app/dashboard/pages/Financial/employee-penality/employee-penality.component.html","./src/app/dashboard/pages/Financial/financial-routing.module.ts","./src/app/dashboard/pages/Financial/financial-transactions/financial-transactions.component.ts","./src/app/dashboard/pages/Financial/financial-transactions/financial-transactions.component.html","./src/app/dashboard/pages/Financial/financial.module.ts","./src/app/dashboard/pages/Financial/payment-statement/payment-statement.component.ts","./src/app/dashboard/pages/Financial/payment-statement/payment-statement.component.html","./src/app/dashboard/pages/Financial/payroll-setup/payroll-setup.component.ts","./src/app/dashboard/pages/Financial/payroll-setup/payroll-setup.component.html","./src/app/dashboard/pages/Financial/receipt-statement/receipt-statement.component.ts","./src/app/dashboard/pages/Financial/receipt-statement/receipt-statement.component.html","./src/app/dashboard/pages/Financial/student-expense/all-expenses/all-expenses.component.ts","./src/app/dashboard/pages/Financial/student-expense/all-expenses/all-expenses.component.html","./src/app/dashboard/pages/Financial/student-expense/student-expense-index/student-expense.component.html","./src/app/dashboard/pages/Financial/student-expense/student-expense-index/student-expense.component.ts","./src/app/dashboard/pages/Financial/student-expense/student-instalments/student-instalments.component.ts","./src/app/dashboard/pages/Financial/student-expense/student-instalments/student-instalments.component.html","./src/app/dashboard/services/Financial/deductionReasons.service.ts","./src/app/dashboard/services/Financial/employee-Penality.service.ts","./src/app/dashboard/services/Financial/employee-payroll.service.ts","./src/app/dashboard/services/Financial/financial-transactions.service.ts","./src/app/dashboard/services/Financial/payment-statement.service.ts","./src/app/dashboard/services/Financial/payroll-setup.service.ts","./src/app/dashboard/services/Financial/receipt-statement.service.ts","./src/app/dashboard/services/Financial/student-expense.service.ts"],"sourcesContent":["import { MatDialog } from \"@angular/material/dialog\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { DeductionReasonsService } from \"app/dashboard/services/Financial/deductionReasons.service\";\r\nimport { IDeductionReasonsVM } from \"app/dashboard/models/financial/deduction-reasons\";\r\n\r\n@Component({\r\n  selector: \"app-deduction-reasons\",\r\n  templateUrl: \"./deduction-reasons.component.html\",\r\n  styleUrls: [\"./deduction-reasons.component.scss\"],\r\n})\r\nexport class DeductionReasonsComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemCount: number;\r\n  countItems: number;\r\n  displayedColumns: string[] = [\"#\", \"enName\", \"arName\", \"action\"];\r\n  dataSource: MatTableDataSource<IDeductionReasonsVM>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private toastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private deductionReasonsService: DeductionReasonsService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllDeductionReasons();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllDeductionReasons();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  EditDeductionReason(DeductionReason: IDeductionReasonsVM) {\r\n    this.myForm.patchValue(DeductionReason);\r\n    console.log(DeductionReason.Id);\r\n\r\n  }\r\n  getAllDeductionReasons() {\r\n    this.spinner.show();\r\n    this.deductionReasonsService\r\n      .getDeductionReasons(this.EduCompId)\r\n      .subscribe((res: IDeductionReasonsVM[]) => {\r\n        console.log(\"all\",res)\r\n        this.dataSource = new MatTableDataSource(res);\r\n        this.countItems=res.length;\r\n        console.log(\"len\",res.length)\r\n\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let body = {} as IDeductionReasonsVM;\r\n    body.EduCompId = this.EduCompId;\r\n    body.Id = this.FormCtrl.Id?.value;\r\n    body.Ar_Name = this.FormCtrl.Ar_Name?.value;\r\n    body.En_Name = this.FormCtrl.En_Name?.value;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n\r\n      this.deductionReasonsService\r\n        .addEditDeductionReason(body)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            if (body.Id == 0) {\r\n              console.log(res);\r\n              this.dataSource.data.unshift(res.deductionReason);\r\n              this.itemCount++;\r\n              this.toastrMsg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              console.log(res);\r\n\r\n              let i = this.dataSource.data.findIndex((e) => e.Id == body.Id);\r\n              this.dataSource.data[i] = res.deductionReason;\r\n\r\n              this.toastrMsg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.dataSource.paginator = this.paginator;\r\n\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrl.Id.setValue(0);\r\n  }\r\n  openDeleateDialog(DeductionReason: IDeductionReasonsVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? DeductionReason.Ar_Name\r\n              : DeductionReason.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteDeductionReason(DeductionReason);\r\n      });\r\n  }\r\n\r\n  deleteDeductionReason(data: IDeductionReasonsVM) {\r\n    this.spinner.show();\r\n    this.deductionReasonsService\r\n      .deleteDeductionReasons(data.Id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastrMsg.success(\"General.DeleteSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title *ngIf=\"FormCtrl.Id.value == 0\">\r\n        {{ \"Financial.AddDeductionReason\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"FormCtrl.Id.value > 0\">\r\n        {{ \"Financial.UpdateDeductionReason\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <!-- english name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.enName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.En_Name?.invalid &&\r\n                        (FormCtrl.En_Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.En_Name?.errors?.required ||\r\n                          FormCtrl.En_Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- arabic name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.arName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.Ar_Name?.invalid &&\r\n                        (FormCtrl.Ar_Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrl.Ar_Name?.errors?.required ||\r\n                          FormCtrl.Ar_Name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n          *ngIf=\"FormCtrl.Id.value == 0\"\r\n\r\n        >\r\n        <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button  *ngIf=\"FormCtrl.Id.value > 0\"\r\n\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrl.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.DeductionReasons\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- id Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english Name Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic Name Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"EditDeductionReason(ele)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n            <!-- <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr> -->\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!-- <mat-paginator\r\n            [length]=\"10\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          ></mat-paginator> -->\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport {\r\n  IDiscountType,\r\n  IDiscountTypeList,\r\n} from \"app/dashboard/models/financial/discount-type\";\r\nimport { DiscountTypeService } from \"app/dashboard/services/Financial/discount-type.service\";\r\n@Component({\r\n  selector: \"app-discount-type\",\r\n  templateUrl: \"./discount-type.component.html\",\r\n  styleUrls: [\"./discount-type.component.scss\"],\r\n})\r\nexport class DiscountTypeComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"en_name\",\r\n    \"Value\",\r\n    \"IsPercentage\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IDiscountType>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private discountTypeService: DiscountTypeService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnAllDiscountTypes(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Value: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      IsPercentage: [true, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllDiscountTypes(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editDiscountType(Data: IDiscountType) {\r\n    this.myForm.patchValue(Data);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  clearForm() {\r\n    this.submitted = false;\r\n    this.myForm.reset();\r\n    this.FormCtrls.Id.setValue(0);\r\n  }\r\n\r\n  // Start: Return All DiscountTypes\r\n  returnAllDiscountTypes(page: number) {\r\n    this.discountTypeService\r\n      .getDiscountTypes(page, this.EduCompId)\r\n      .subscribe((res: IDiscountTypeList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.DiscountTypeList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let data = {} as IDiscountType;\r\n    data.Id = this.FormCtrls.Id.value;\r\n    data.Value = this.FormCtrls.Value.value;\r\n    data.ar_name = this.FormCtrls.ar_name.value;\r\n    data.en_name = this.FormCtrls.en_name.value;\r\n    data.EduCompId = this.EduCompId;\r\n    data.IsPercentage = this.FormCtrls.IsPercentage.value;\r\n\r\n    if (this.myForm.valid) {\r\n      console.log(data);\r\n\r\n      this.discountTypeService\r\n        .addEditDiscountType(data)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.spinner.show();\r\n            if (data.Id == 0) {\r\n              this.dataSource.data.unshift(res.discountType);\r\n              this.itemsCounts++;\r\n\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              let i = this.dataSource.data.findIndex((e) => e.Id == data.Id);\r\n\r\n              this.dataSource.data[i] = res.discountType;\r\n              this.toastr.success(\"General.UpdateSuccessfully\");\r\n            }\r\n\r\n            this.dataSource.paginator = this.paginator;\r\n            this.clearForm();\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(data: IDiscountType): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? data.ar_name : data.en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteDiscountType(data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Discount Type\r\n  deleteDiscountType(data: IDiscountType) {\r\n    this.discountTypeService\r\n      .deleteDiscountType(data.Id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.Id.value == 0\r\n            ? \"Financial.AddDiscountTypes\"\r\n            : \"Financial.EditDiscountTypes\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.required ||\r\n                          FormCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.en_name.invalid &&\r\n                        (FormCtrls.en_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.en_name.errors?.required ||\r\n                          FormCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"Financial.value\" | translate }} </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Value\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.Value.invalid &&\r\n                        (FormCtrls.Value.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <!-- <span *ngIf=\"FormCtrls.Value.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span> -->\r\n                      <span *ngIf=\"FormCtrls.Value.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n\r\n                  <mat-radio-group formControlName=\"IsPercentage\" class=\"row\">\r\n                    <mat-label> {{ \"labels.IsPercentage\" | translate }} </mat-label>\r\n\r\n                    <div class=\"col-2\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        [checked]=\"this.FormCtrls.IsPercentage?.value == true\"\r\n                        >{{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-2\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        [checked]=\"this.FormCtrls.IsPercentage?.value == false\"\r\n                      >\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.Id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls?.Id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.DiscountTypes\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.en_name }}</td>\r\n            </ng-container>\r\n            <!-- Value Column -->\r\n            <ng-container matColumnDef=\"Value\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.value\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Value }}</td>\r\n            </ng-container>\r\n\r\n            <!-- IsPercentage Column -->\r\n            <ng-container matColumnDef=\"IsPercentage\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.IsPercentage\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.IsPercentage }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editDiscountType(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllDiscountTypes($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ISalaryItem } from \"app/dashboard/models/setup/financial-setup/salary-item\";\r\nimport { IAddEditEmployeePayroll, IEmployeePayroll, IEmployeePayrollList } from \"app/dashboard/models/financial/employee-payroll\";\r\nimport { EmployeePayrollService } from \"app/dashboard/services/Financial/employee-payroll.service\";\r\nimport { SalaryItemService } from \"app/dashboard/services/setup/financial-setup/salary-item.service\";\r\n@Component({\r\n  selector: \"app-employee-payroll\",\r\n  templateUrl: \"./employee-payroll.component.html\",\r\n  styleUrls: [\"./employee-payroll.component.scss\"],\r\n})\r\nexport class EmployeePayrollComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  employeeList: any;\r\n  salaryItemList: ISalaryItem[];\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"Employee_Name\",\r\n    \"Salary_Item\",\r\n    \"Value\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmployeePayroll>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private employeePayrollService: EmployeePayrollService,\r\n    private salaryItemService: SalaryItemService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnAllEmployeePayrolls(1);\r\n    this.getAllEmployees();\r\n    this.getAllSalaryItems();\r\n    this.myForm = this.fb.group({\r\n      ID: [0],\r\n      EmployeeID: [\"\", Validators.required],\r\n      SalaryItemID: [\"\", Validators.required],\r\n      Value: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllEmployeePayrolls(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editEmployeePayroll(Data: IEmployeePayroll) {\r\n    this.myForm.patchValue(Data);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All Sallary Items\r\n  getAllSalaryItems() {\r\n    this.salaryItemService.getSalaryItemsDropdownMenu(this.EduCompId)\r\n      .subscribe((res: ISalaryItem[]) => {\r\n        if (res) this.salaryItemList = res;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Employees\r\n  getAllEmployees() {\r\n\r\n  }\r\n\r\n  // Start: Return All Employee Payrolls\r\n  returnAllEmployeePayrolls(page: number) {\r\n    this.employeePayrollService\r\n      .getEmployeePayrolls(page)\r\n      .subscribe((res: IEmployeePayrollList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.EmployeePayrollList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let data: IAddEditEmployeePayroll = {\r\n      ID: this.FormCtrls.id.value,\r\n      EmployeeID: this.FormCtrls.EmployeeID.value,\r\n      SalaryItemID: this.FormCtrls.SalaryItemID.value,\r\n      Value: this.FormCtrls.Value.value,\r\n\r\n    };\r\n    if (this.myForm.valid) {\r\n      data.ID == 0\r\n        ? this.addEmployeePayroll(data)\r\n        : this.updateEmployeePayroll(data);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Start: Add Employee Payroll\r\n  addEmployeePayroll(data: IAddEditEmployeePayroll) {\r\n    this.employeePayrollService\r\n      .addEmployeePayroll(data)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          this.dataSource.data.push(res);\r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Start: Update Employee Payroll\r\n  updateEmployeePayroll(data: IAddEditEmployeePayroll) {\r\n    this.employeePayrollService\r\n      .updateEmployeePayroll(data)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          let i = this.dataSource.data.findIndex((e) => e.ID == data.ID);\r\n          this.dataSource.data[i] = res;\r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.FormCtrls.ID.setValue(0);\r\n          this.toastr.success(\"General.UpdateSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(data: IEmployeePayroll): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: data.ID,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteEmployeePayroll(data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Employee Payroll\r\n  deleteEmployeePayroll(data: IEmployeePayroll) {\r\n    this.employeePayrollService\r\n      .deleteEmployeePayroll(data.ID)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(index);\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.ID.value == 0\r\n            ? \"Financial.AddEmployeePayroll\"\r\n            : \"Financial.EditEmployeePayroll\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.EmployeeName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"EmployeeID\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of employeeList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.EmployeeID.invalid &&\r\n                        (FormCtrls.EmployeeID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.EmployeeID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.SalaryItem\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"SalaryItemID\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of salaryItemList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.SalaryItemID.invalid &&\r\n                        (FormCtrls.SalaryItemID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.SalaryItemID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.value\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Value\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Value.invalid &&\r\n                        (FormCtrls.Value.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <!-- <span *ngIf=\"FormCtrls.Value.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span> -->\r\n                      <span *ngIf=\"FormCtrls.Value.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{\r\n            (this.FormCtrls.ID.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.EmployeePayroll\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n\r\n            <!-- Employee_Name Column -->\r\n            <ng-container matColumnDef=\"Employee_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.EmployeeName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Employee_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Salary_Item Column -->\r\n            <ng-container matColumnDef=\"Salary_Item\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.SalaryItem\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Salary_Item }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- Value Column -->\r\n            <ng-container matColumnDef=\"Value\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.value\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Value }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editEmployeePayroll(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllEmployeePayrolls($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport {\r\n  IAddEditEmployeePenality,\r\n  IEmployeePenality,\r\n  IEmployeePenalityList,\r\n} from \"app/dashboard/models/financial/employee-Penality\";\r\nimport { EmployeePenalityService } from \"app/dashboard/services/Financial/employee-Penality.service\";\r\n@Component({\r\n  selector: \"app-employee-penality\",\r\n  templateUrl: \"./employee-penality.component.html\",\r\n  styleUrls: [\"./employee-penality.component.scss\"],\r\n})\r\nexport class EmployeePenalityComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  employeeList: any;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"Employee_Name\",\r\n    \"Discreption\",\r\n    \"Value\",\r\n    \"PenalityDate\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmployeePenality>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private employeePenalityService: EmployeePenalityService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnAllEmployeePenalitys(1);\r\n    this.getAllEmployees();\r\n    this.myForm = this.fb.group({\r\n      ID: [0],\r\n      PenalityDate: [\"\", Validators.required],\r\n      EmployeeID: [\"\", Validators.required],\r\n      Discreption: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      Value: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllEmployeePenalitys(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editEmployeePenality(Data: IEmployeePenality) {\r\n    this.myForm.patchValue(Data);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All Employees\r\n  getAllEmployees() {}\r\n\r\n  // Start: Return All Employee Penalitys\r\n  returnAllEmployeePenalitys(page: number) {\r\n    this.employeePenalityService\r\n      .getEmployeePenalitys(page)\r\n      .subscribe((res: IEmployeePenalityList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.EmployeePenalityList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let data: IAddEditEmployeePenality = {\r\n      ID: this.FormCtrls.id.value,\r\n      EmployeeID: this.FormCtrls.EmployeeID.value,\r\n      Value: this.FormCtrls.Value.value,\r\n      Discreption: this.FormCtrls.Discreption.value,\r\n      PenalityDate: this.FormCtrls.PenalityDate.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      data.ID == 0\r\n        ? this.addEmployeePenality(data)\r\n        : this.updateEmployeePenality(data);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Start: Add Employee Penality\r\n  addEmployeePenality(data: IAddEditEmployeePenality) {\r\n    this.employeePenalityService\r\n      .addEmployeePenality(data)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          this.dataSource.data.push(res);\r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Start: Update Employee Penality\r\n  updateEmployeePenality(data: IAddEditEmployeePenality) {\r\n    this.employeePenalityService\r\n      .updateEmployeePenality(data)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          let i = this.dataSource.data.findIndex((e) => e.ID == data.ID);\r\n          this.dataSource.data[i] = res;\r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.FormCtrls.ID.setValue(0);\r\n          this.toastr.success(\"General.UpdateSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(data: IEmployeePenality): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: data.ID,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteEmployeePenality(data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Employee Penality\r\n  deleteEmployeePenality(data: IEmployeePenality) {\r\n    this.employeePenalityService\r\n      .deleteEmployeePenality(data.ID)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(index);\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.ID.value == 0\r\n            ? \"Financial.AddEmployeePenality\"\r\n            : \"Financial.EditEmployeePenality\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.EmployeeName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"EmployeeID\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of employeeList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.EmployeeID.invalid &&\r\n                        (FormCtrls.EmployeeID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.EmployeeID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Financial.PenalityDate\" | translate\r\n                    }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"PenalityDate\"\r\n                      formControlName=\"PenalityDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"PenalityDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #PenalityDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.PenalityDate.invalid &&\r\n                        (FormCtrls.PenalityDate.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.PenalityDate.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.value\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Value\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Value.invalid &&\r\n                        (FormCtrls.Value.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <!-- <span *ngIf=\"FormCtrls.Value.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span> -->\r\n                      <span *ngIf=\"FormCtrls.Value.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.Discreption\" | translate }}\r\n                    </mat-label>\r\n                    <textarea matInput  formControlName=\"Discreption\"></textarea>\r\n\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.Discreption.invalid &&\r\n                        (FormCtrls.Discreption.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.Discreption.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{\r\n            (this.FormCtrls.ID.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.EmployeePenality\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Employee_Name Column -->\r\n            <ng-container matColumnDef=\"Employee_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.EmployeeName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Employee_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Discreption Column -->\r\n            <ng-container matColumnDef=\"Discreption\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.Discreption\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Discreption }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- Value Column -->\r\n            <ng-container matColumnDef=\"Value\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.value\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Value }}</td>\r\n            </ng-container>\r\n            <!-- PenalityDate Column -->\r\n            <ng-container matColumnDef=\"PenalityDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.PenalityDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.PenalityDate }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editEmployeePenality(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllEmployeePenalitys($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DeductionReasonsComponent } from \"./deduction-reasons/deduction-reasons.component\";\r\nimport { DiscountTypeComponent } from \"./discount-type/discount-type.component\";\r\nimport { EmployeePayrollComponent } from \"./employee-payroll/employee-payroll.component\";\r\nimport { EmployeePenalityComponent } from \"./employee-penality/employee-penality.component\";\r\nimport { FinancialTransactionsComponent } from \"./financial-transactions/financial-transactions.component\";\r\nimport { PaymentStatementComponent } from \"./payment-statement/payment-statement.component\";\r\nimport { PayrollSetupComponent } from \"./payroll-setup/payroll-setup.component\";\r\nimport { ReceiptStatementComponent } from \"./receipt-statement/receipt-statement.component\";\r\nimport { StudentExpenseComponent } from \"./student-expense/student-expense-index/student-expense.component\";\r\n\r\nconst routes: Routes = [\r\n  // { path: \"financial-transaction\", component: FinancialTransactionsComponent },\r\n  { path: \"discount-type\", component: DiscountTypeComponent },\r\n  { path: \"student-expense\", component: StudentExpenseComponent },\r\n  { path: \"payment-statement\", component: PaymentStatementComponent },\r\n  { path: \"receipt-statement\", component: ReceiptStatementComponent },\r\n  { path: \"employee-payroll\", component: EmployeePayrollComponent },\r\n  { path: \"employee-penality\", component: EmployeePenalityComponent },\r\n  { path: \"payroll-setup\", component: PayrollSetupComponent },\r\n  { path: \"deduction-reasons\", component: DeductionReasonsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FinancialRoutingModule {}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IAddEditStudentPayment,\r\n  IStudentPayment,\r\n  IStudentPaymentList,\r\n} from \"app/dashboard/models/financial/financial-transaction\";\r\nimport { FinancialTransactionsService } from \"app/dashboard/services/Financial/financial-transactions.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { PaymentMethodService } from \"app/dashboard/services/setup/financial-setup/payment-method.service\";\r\nimport { IPaymentMethodsVM } from \"app/dashboard/models/setup/financial-setup/payment-methods\";\r\nimport { StudentExpenseService } from \"app/dashboard/services/Financial/student-expense.service\";\r\nimport {\r\n  IStudentAmountCardVM,\r\n  IStudentInstallmentVM,\r\n} from \"app/dashboard/models/financial/student-expense\";\r\n\r\n@Component({\r\n  selector: \"app-financial-transactions\",\r\n  templateUrl: \"./financial-transactions.component.html\",\r\n  styleUrls: [\"./financial-transactions.component.scss\"],\r\n})\r\nexport class FinancialTransactionsComponent implements OnInit {\r\n  @Input(\"studentId\") studentId: number = 0;\r\n  @Output(\"ChangePaidUnpaidAmount\") ChangePaidUnpaidAmount =\r\n    new EventEmitter<IStudentAmountCardVM>();\r\n\r\n  paymentMethodList: IPaymentMethodsVM[];\r\n  InstallmentList: IStudentInstallmentVM[];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  todayDate: Date = new Date();\r\n\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"InstallmentAmount\",\r\n    \"PaymentMethod\",\r\n    \"PaymentDate\",\r\n    \"DocNom\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IStudentPayment>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private StudentPaymentServ: FinancialTransactionsService,\r\n    private paymentMethodService: PaymentMethodService,\r\n    private StudentExpenseServ: StudentExpenseService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudentPayments(1);\r\n    this.getAllPaymentMethods();\r\n    this.getAllStudentInstallments();\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      studentInstallmentId: [\"\", [Validators.required]],\r\n      PaymentDate: [\"\", [Validators.required]],\r\n      PaymentMethodId: [\"\", Validators.required],\r\n      DocNom: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          /* CustomeValidator.whiteSpace */ CustomeValidator.bigZero,\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentPayments(1);\r\n      this.getAllPaymentMethods();\r\n      this.getAllStudentInstallments();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.studentId) {\r\n      this.getStudentPayments(1);\r\n      // this.getAllPaymentMethods();\r\n      this.getAllStudentInstallments();\r\n    }\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"PaymentMethod\":\r\n          return this.curLang == \"ar\"\r\n            ? item.PaymentMethodId_ArName ?? item.PaymentMethodId_ENName\r\n            : item.PaymentMethodId_ENName ?? item.PaymentMethodId_ArName;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // change paid, unpaid amount in card data (parent component)\r\n  ChangeAmounts(totalAmount: IStudentAmountCardVM) {\r\n    this.ChangePaidUnpaidAmount.emit(totalAmount);\r\n  }\r\n\r\n  // get All payment methods\r\n  getAllPaymentMethods() {\r\n    this.paymentMethodService\r\n      .getAllPaymentMethodsDropdown(this.EduCompId)\r\n      .subscribe((res: IPaymentMethodsVM[]) => {\r\n        if (res) this.paymentMethodList = res;\r\n      });\r\n  }\r\n\r\n  // get All Student Installments\r\n  getAllStudentInstallments() {\r\n    this.StudentExpenseServ.getAllStudentInstallmentsDropDown(\r\n      this.studentId\r\n    ).subscribe((res) => {\r\n      if (res) this.InstallmentList = res;\r\n    });\r\n  }\r\n\r\n  // get All Student Payments\r\n  getStudentPayments(page: number) {\r\n    this.spinner.show();\r\n    this.StudentPaymentServ.getStudentPaymentsByStudentId(\r\n      this.studentId,\r\n      page\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.dataSource = new MatTableDataSource(\r\n          res.StudentInstallmentPaymentList\r\n        );\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  editStudentPayment(Payment: IStudentPayment) {\r\n    this.myForm.patchValue(Payment);\r\n    this.FormCtrls.studentInstallmentId.setValue(Payment.StudentInstallmentId);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let data: IAddEditStudentPayment = {\r\n        id: this.FormCtrls.id.value,\r\n        studentInstallmentId: this.FormCtrls.studentInstallmentId.value,\r\n        PaymentDate: this.datePipe.transform(this.FormCtrls.PaymentDate.value),\r\n        PaymentMethodId: this.FormCtrls.PaymentMethodId.value,\r\n        DocNom: this.FormCtrls.DocNom.value,\r\n      };\r\n      // console.log(data);\r\n\r\n      this.spinner.show();\r\n      this.StudentPaymentServ.addEditStudentPayment(data).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n            // let returnObject = res.student_installment_payment;\r\n            data.id == 0\r\n              ? this.addStudentPayment(res.student_installment_payment)\r\n              : this.updateStudentPayment(res.student_installment_payment);\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n            this.ChangeAmounts(res.Amount);\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Add Financial Transaction\r\n  addStudentPayment(data: IStudentPayment) {\r\n    this.dataSource.data.unshift(data);\r\n    this.itemsCounts++;\r\n    this.toastr.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // Update Financial Transaction\r\n  updateStudentPayment(data: IStudentPayment) {\r\n    let i = this.dataSource.data.findIndex((e) => e.id == data.id);\r\n    this.dataSource.data[i] = data;\r\n    this.toastr.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  openDeleateDialog(data: IStudentPayment): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${data.InstallmentAmount} - ${this.datePipe.transform(\r\n            data.InstallmentDate,\r\n            \"mediumDate\"\r\n          )}`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStudentPayment(data);\r\n      });\r\n  }\r\n\r\n  // Delete Financial Transaction\r\n  deleteStudentPayment(data: IStudentPayment) {\r\n    this.StudentPaymentServ.deleteStudentPayments(data.id).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(index, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (data.id == this.FormCtrls.id.value) this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n<mat-card-title>\r\n  {{\r\n    (FormCtrls.id.value == 0\r\n      ? \"Financial.AddStudentPayment\"\r\n      : \"Financial.UpdateStudentPayment\"\r\n    ) | translate\r\n  }}\r\n</mat-card-title>\r\n<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"Financial.Installment\" | translate }}\r\n              </mat-label>\r\n              <mat-select formControlName=\"studentInstallmentId\">\r\n                <mat-option>\r\n                  {{ \"General.Choose\" | translate }}\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let ele of InstallmentList\"\r\n                  [value]=\"ele.id\"\r\n                >\r\n                  {{ ele.Amount }} - {{ ele.Date | date : \"dd/MM/yyyy\" }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrls.studentInstallmentId.invalid &&\r\n                  (FormCtrls.studentInstallmentId.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrls.studentInstallmentId.errors?.required\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Financial.PaymentDate\" | translate }}</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"PaymentDate\"\r\n                formControlName=\"PaymentDate\"\r\n                [max]=\"todayDate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"PaymentDate\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #PaymentDate></mat-datepicker>\r\n              <mat-hint\r\n                *ngIf=\"\r\n                  FormCtrls.PaymentDate.invalid &&\r\n                  (FormCtrls.PaymentDate.touched || submitted)\r\n                \"\r\n                class=\"text-danger\"\r\n              >\r\n                <span *ngIf=\"FormCtrls.PaymentDate.errors?.required\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"Financial.paymentMethods\" | translate }}\r\n              </mat-label>\r\n              <mat-select formControlName=\"PaymentMethodId\">\r\n                <mat-option>\r\n                  {{ \"General.Choose\" | translate }}\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let ele of paymentMethodList\"\r\n                  [value]=\"ele.Id\"\r\n                >\r\n                  {{ curLang == \"ar\" ? ele.Ar_Name : ele.En_Name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                *ngIf=\"\r\n                  FormCtrls.PaymentMethodId.invalid &&\r\n                  (FormCtrls.PaymentMethodId.touched || submitted)\r\n                \"\r\n                class=\"text-danger\"\r\n              >\r\n                <span *ngIf=\"FormCtrls.PaymentMethodId.errors?.required\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"Financial.DocNo\" | translate }}\r\n              </mat-label>\r\n              <input matInput type=\"number\" formControlName=\"DocNom\" />\r\n              <mat-hint\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrls.DocNom.invalid &&\r\n                  (FormCtrls.DocNom.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrls.DocNom.errors?.required\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n                <span *ngIf=\"FormCtrls.DocNom.errors?.bigZero\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.bigZero\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n<mat-card-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.id?.value == 0\"></i>\r\n    {{\r\n      (FormCtrls.id.value == 0 ? \"General.Add\" : \"General.Update\") | translate\r\n    }}\r\n  </button>\r\n\r\n  <!-- reset -->\r\n  <button\r\n    *ngIf=\"FormCtrls.id.value > 0\"\r\n    mat-raised-button\r\n    class=\"btn btn-warning\"\r\n    (click)=\"clearForm()\"\r\n  >\r\n    {{ \"General.Reset\" | translate }}\r\n  </button>\r\n</mat-card-actions>\r\n\r\n<hr class=\"mt-1 mb-2\" />\r\n\r\n<mat-card-title> {{ \"Financial.StudentPayments\" | translate }}</mat-card-title>\r\n<mat-card-content>\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. ium\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n      </ng-container>\r\n\r\n      <!-- studentInstallmentId Column -->\r\n      <ng-container matColumnDef=\"InstallmentAmount\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Financial.Installment\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.InstallmentAmount }} -\r\n          {{ ele.InstallmentDate | date : \"dd/MM/yyyy\" }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- PaymentMethod Column -->\r\n      <ng-container matColumnDef=\"PaymentMethod\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Financial.paymentMethods\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{\r\n            curLang == \"ar\"\r\n              ? ele.PaymentMethodId_ArName\r\n              : ele.PaymentMethodId_ENName\r\n          }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- PaymentDate Column -->\r\n      <ng-container matColumnDef=\"PaymentDate\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Financial.PaymentDate\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.PaymentDate | date : \"dd-MM-yyyy\" }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- DocNom Column -->\r\n      <ng-container matColumnDef=\"DocNom\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Financial.DocNo\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">{{ ele.DocNom }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Option Column -->\r\n      <ng-container matColumnDef=\"option\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let ele\" class=\"text-center px-3 actions\">\r\n          <ng-container *ngFor=\"let fun of rowFunctions\">\r\n            <a\r\n              *ngIf=\"fun.functionName === 'Update'\"\r\n              (click)=\"editStudentPayment(ele)\"\r\n              class=\"success p-0\"\r\n              matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n            >\r\n              <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n            </a>\r\n\r\n            <a\r\n              *ngIf=\"fun.functionName === 'Delete'\"\r\n              (click)=\"openDeleateDialog(ele)\"\r\n              class=\"danger p-0\"\r\n              matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n            >\r\n              <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n            </a>\r\n          </ng-container>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"6\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getStudentPayments($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      [pageSize]=\"10\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of expenses\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</mat-card-content>\r\n<!-- </mat-card>\r\n  </div>\r\n</div> -->\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { FinancialRoutingModule } from \"./financial-routing.module\";\r\nimport { FinancialTransactionsComponent } from \"./financial-transactions/financial-transactions.component\";\r\nimport { DiscountTypeComponent } from \"./discount-type/discount-type.component\";\r\n\r\nimport { EmployeePayrollComponent } from './employee-payroll/employee-payroll.component';\r\nimport { EmployeePenalityComponent } from './employee-penality/employee-penality.component';\r\nimport { StudentExpenseComponent } from \"./student-expense/student-expense-index/student-expense.component\";\r\nimport { PaymentStatementComponent } from \"./payment-statement/payment-statement.component\";\r\nimport { ReceiptStatementComponent } from \"./receipt-statement/receipt-statement.component\";\r\nimport { PayrollSetupComponent } from './payroll-setup/payroll-setup.component';\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { StudentInstalmentsComponent } from './student-expense/student-instalments/student-instalments.component';\r\nimport { AllExpensesComponent } from './student-expense/all-expenses/all-expenses.component';\r\nimport { DeductionReasonsComponent } from \"./deduction-reasons/deduction-reasons.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FinancialTransactionsComponent,\r\n    DiscountTypeComponent,\r\n   EmployeePayrollComponent,\r\n    EmployeePenalityComponent,\r\n    StudentExpenseComponent,\r\n    PaymentStatementComponent,\r\n    ReceiptStatementComponent,\r\n    PayrollSetupComponent,\r\n    StudentInstalmentsComponent,\r\n    AllExpensesComponent,\r\n    DeductionReasonsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    FinancialRoutingModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class FinancialModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { PaymentMethodService } from \"app/dashboard/services/setup/financial-setup/payment-method.service\";\r\nimport { IPaymentMethodsVM } from \"app/dashboard/models/setup/financial-setup/payment-methods\";\r\nimport { IExternalOrganiztion } from \"app/dashboard/models/setup/financial-setup/suppliers-and-customers\";\r\nimport {\r\n  IAddEditPaymentStatement,\r\n  IPaymentStatement,\r\n  IPaymentStatementList,\r\n} from \"app/dashboard/models/financial/payment-statement\";\r\nimport { PaymentStatementService } from \"app/dashboard/services/Financial/payment-statement.service\";\r\nimport { SuppliersAndCustomersService } from \"app/dashboard/services/setup/financial-setup/suppliers-and-customers.service\";\r\n@Component({\r\n  selector: \"app-payment-statement\",\r\n  templateUrl: \"./payment-statement.component.html\",\r\n  styleUrls: [\"./payment-statement.component.scss\"],\r\n})\r\nexport class PaymentStatementComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  paymentMethodList: IPaymentMethodsVM[];\r\n  SupplierList: IExternalOrganiztion[];\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"Name\",\r\n    \"Date\",\r\n    \"Amount\",\r\n    \"Supplier_Name\",\r\n    \"DocumentNumber\",\r\n    \"Payment_Method_Ar_Name\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IPaymentStatement>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private paymentStatementService: PaymentStatementService,\r\n    private paymentMethodService: PaymentMethodService,\r\n    private suppliersAndCustomersService: SuppliersAndCustomersService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnAllPaymentStatements(1);\r\n    this.getAllExternalOrganization();\r\n    this.getAllPaymentMethods();\r\n    this.myForm = this.fb.group({\r\n      ID: [0],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Date: [\"\", [Validators.required]],\r\n      Amount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      PaymentMethodID: [\"\", Validators.required],\r\n      SupplierID: [\"\", Validators.required],\r\n      DocumentNumber: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllPaymentStatements(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editPaymentStatements(Data: IPaymentStatement) {\r\n    this.myForm.patchValue(Data);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All payment methods\r\n  getAllPaymentMethods() {\r\n    this.paymentMethodService\r\n      .getAllPaymentMethodsDropdown(this.EduCompId)\r\n      .subscribe((res: IPaymentMethodsVM[]) => {\r\n        if (res) this.paymentMethodList = res;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Organization\r\n  getAllExternalOrganization() {\r\n    this.suppliersAndCustomersService\r\n      .getExternalOrgnizationsDropDown(this.EduCompId)\r\n      .subscribe((res) => {\r\n        if (res) this.SupplierList = res.ExternalOrgList;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Payment Statements\r\n  returnAllPaymentStatements(page: number) {\r\n    this.paymentStatementService\r\n      .getPaymentStatements(page)\r\n      .subscribe((res: IPaymentStatementList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.PaymentStatementList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let data: IAddEditPaymentStatement = {\r\n      ID: this.FormCtrls.ID.value,\r\n      Name: this.FormCtrls.Name.value,\r\n      Date: this.FormCtrls.Date.value,\r\n      Amount: this.FormCtrls.Amount.value,\r\n      PaymentMethodID: this.FormCtrls.PaymentMethodID.value,\r\n      SupplierID: this.FormCtrls.SupplierID.value,\r\n      DocumentNumber: this.FormCtrls.DocumentNumber.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      data.ID == 0\r\n        ? this.addPaymentStatement(data)\r\n        : this.updatePaymentStatement(data);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Start: Add Payment Statement\r\n  addPaymentStatement(data: IAddEditPaymentStatement) {\r\n    this.paymentStatementService\r\n      .addPaymentStatement(data)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          this.dataSource.data.push(res);\r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Start: Update Payment Statement\r\n  updatePaymentStatement(data: IAddEditPaymentStatement) {\r\n    this.paymentStatementService\r\n      .updatePaymentStatement(data)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          let i = this.dataSource.data.findIndex((e) => e.ID == data.ID);\r\n          this.dataSource.data[i] = res;\r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.FormCtrls.ID.setValue(0);\r\n          this.toastr.success(\"General.UpdateSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(data: IPaymentStatement): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: data.ID,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletePaymentStatement(data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Payment Statement\r\n  deletePaymentStatement(data: IPaymentStatement) {\r\n    this.paymentStatementService\r\n      .deletePaymentStatement(data.ID)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(index);\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.ID.value == 0\r\n            ? \"Financial.AddPaymentStatement\"\r\n            : \"Financial.EditPaymentStatement\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.ItemName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Name.invalid &&\r\n                        (FormCtrls.Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Name.errors?.required ||\r\n                          FormCtrls.Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Date\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"Date\"\r\n                      formControlName=\"Date\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"Date\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #Date></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.Date.invalid &&\r\n                        (FormCtrls.Date.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.Date.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.paymentMethods\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"PaymentMethodID\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of paymentMethodList\"\r\n                        [value]=\"ele.Id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.Ar_Name : ele.En_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.PaymentMethodID.invalid &&\r\n                        (FormCtrls.PaymentMethodID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.PaymentMethodID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.SupplierName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"SupplierID\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of SupplierList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.Ar_Name : ele.En_Name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.SupplierID.invalid &&\r\n                        (FormCtrls.SupplierID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.SupplierID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Balance.Amount\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Amount\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Amount.invalid &&\r\n                        (FormCtrls.Amount.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <!-- <span *ngIf=\"FormCtrls.Amount.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span> -->\r\n                      <span *ngIf=\"FormCtrls.Amount.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.DocNo\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"DocumentNumber\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.DocumentNumber.invalid &&\r\n                        (FormCtrls.DocumentNumber.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <!-- <span *ngIf=\"FormCtrls.DocumentNumber.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span> -->\r\n                      <span *ngIf=\"FormCtrls.DocumentNumber.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{\r\n            (this.FormCtrls.ID.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.PaymentStatement\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.ItemName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n            <!-- Date Column -->\r\n            <ng-container matColumnDef=\"Date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Date }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Amount Column -->\r\n            <ng-container matColumnDef=\"Amount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Amount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Amount }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Supplier_Name Column -->\r\n            <ng-container matColumnDef=\"Supplier_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.SupplierName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Supplier_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Payment_Method_Ar_Name Column -->\r\n            <ng-container matColumnDef=\"Payment_Method_Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Balance.PaymentMethod\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Payment_Method_Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- DocumentNumber Column -->\r\n            <ng-container matColumnDef=\"DocumentNumber\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.DocNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.DocumentNumber }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editPaymentStatements(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllPaymentStatements($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { PayrollSetupService } from \"app/dashboard/services/Financial/payroll-setup.service\";\r\nimport {\r\n  IAddEditPayrollSetup,\r\n  IPayrollSetup,\r\n  IPayrollSetupList,\r\n} from \"app/dashboard/models/financial/payroll-setup\";\r\n@Component({\r\n  selector: \"app-payroll-setup\",\r\n  templateUrl: \"./payroll-setup.component.html\",\r\n  styleUrls: [\"./payroll-setup.component.scss\"],\r\n})\r\nexport class PayrollSetupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"EmployeeName\",\r\n    \"TotalSalary\",\r\n    \"Salary_Item\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IPayrollSetup>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private payrollSetupService: PayrollSetupService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnAllPayrollSetups(1);\r\n    this.myForm = this.fb.group({\r\n      ID: [0],\r\n      Month: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllPayrollSetups(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editPayrollSetup(Data: IPayrollSetup) {\r\n    this.myForm.patchValue(Data);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All Payroll Setups\r\n  returnAllPayrollSetups(page: number) {\r\n    this.payrollSetupService\r\n      .getPayrollSetups(page)\r\n      .subscribe((res: IPayrollSetupList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.PayrollSetupList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let data: IAddEditPayrollSetup = {\r\n      ID: this.FormCtrls.ID.value,\r\n      Month: this.FormCtrls.Month.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      data.ID == 0 ? this.addPayrollSetup(data) : this.updatePayrollSetup(data);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Start: Add Payroll Setup\r\n  addPayrollSetup(data: IAddEditPayrollSetup) {\r\n    this.payrollSetupService.addPayrollSetup(data).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.spinner.show();\r\n        this.dataSource.data.push(res);\r\n        this.submitted = true;\r\n        this.myForm.reset();\r\n        this.toastr.success(\"General.AddSuccessfully\");\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Start: Update Payroll Setup\r\n  updatePayrollSetup(data: IAddEditPayrollSetup) {\r\n    this.payrollSetupService.updatePayrollSetup(data).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.spinner.show();\r\n        let i = this.dataSource.data.findIndex((e) => e.ID == data.ID);\r\n        this.dataSource.data[i] = res;\r\n        this.submitted = true;\r\n        this.myForm.reset();\r\n        this.FormCtrls.ID.setValue(0);\r\n        this.toastr.success(\"General.UpdateSuccessfully\");\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(data: IPayrollSetup): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: data.ID,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletePayrollSetup(data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Payroll Setup\r\n  deletePayrollSetup(data: IPayrollSetup) {\r\n    this.payrollSetupService\r\n      .deletePayrollSetup(data.ID)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(index);\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.ID.value == 0\r\n            ? \"Financial.AddPayroll\"\r\n            : \"Financial.EditPayroll\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.Month\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"Month\"\r\n                      type=\"month\"\r\n                    />\r\n\r\n                    <!-- <input matInput [matDatepicker]=\"picker\" >\r\n                    <mat-datepicker-toggle matSuffix  [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker> -->\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.Month.invalid &&\r\n                        (FormCtrls.Month.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.EmployeeID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{\r\n            (this.FormCtrls.ID.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.Payroll\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- EmployeeName Column -->\r\n            <ng-container matColumnDef=\"EmployeeName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.EmployeeName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.EmployeeName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Salary_Item Column -->\r\n            <ng-container matColumnDef=\"Salary_Item\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.SalaryItem\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Salary_Item }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- TotalSalary Column -->\r\n            <ng-container matColumnDef=\"TotalSalary\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.TotalSalary\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.TotalSalary }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editPayrollSetup(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllPayrollSetups($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { PaymentMethodService } from \"app/dashboard/services/setup/financial-setup/payment-method.service\";\r\nimport { IPaymentMethodsVM } from \"app/dashboard/models/setup/financial-setup/payment-methods\";\r\nimport { IExternalOrganiztion } from \"app/dashboard/models/setup/financial-setup/suppliers-and-customers\";\r\nimport { SuppliersAndCustomersService } from \"app/dashboard/services/setup/financial-setup/suppliers-and-customers.service\";\r\nimport {\r\n  IAddEditReceiptStatement,\r\n  IReceiptStatement,\r\n  IReceiptStatementList,\r\n} from \"app/dashboard/models/financial/receipt-statement\";\r\nimport { ReceiptStatementService } from \"app/dashboard/services/Financial/receipt-statement.service\";\r\n@Component({\r\n  selector: \"app-receipt-statement\",\r\n  templateUrl: \"./receipt-statement.component.html\",\r\n  styleUrls: [\"./receipt-statement.component.scss\"],\r\n})\r\nexport class ReceiptStatementComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  paymentMethodList: IPaymentMethodsVM[];\r\n  CustomerList: IExternalOrganiztion[];\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"Name\",\r\n    \"Date\",\r\n    \"Amount\",\r\n    \"Customer_Name\",\r\n    \"DocumentNumber\",\r\n    \"Payment_Method_Ar_Name\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IReceiptStatement>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private receiptStatementService: ReceiptStatementService,\r\n    private paymentMethodService: PaymentMethodService,\r\n    private suppliersAndCustomersService: SuppliersAndCustomersService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnAllReceiptStatements(1);\r\n    this.getAllExternalOrganization();\r\n    this.getAllPaymentMethods();\r\n    this.myForm = this.fb.group({\r\n      ID: [0],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Date: [\"\", [Validators.required]],\r\n      Amount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      PaymentMethodID: [\"\", Validators.required],\r\n      CustomerID: [\"\", Validators.required],\r\n      DocumentNumber: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllReceiptStatements(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editReceiptStatement(Data: IReceiptStatement) {\r\n    this.myForm.patchValue(Data);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Start: Return All payment methods\r\n  getAllPaymentMethods() {\r\n    this.paymentMethodService\r\n      .getAllPaymentMethodsDropdown(this.EduCompId)\r\n      .subscribe((res: IPaymentMethodsVM[]) => {\r\n        if (res) this.paymentMethodList = res;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Organization\r\n  getAllExternalOrganization() {\r\n    this.suppliersAndCustomersService\r\n      .getExternalOrgnizationsDropDown(this.EduCompId)\r\n      .subscribe((res) => {\r\n        if (res) this.CustomerList = res.ExternalOrgList;\r\n      });\r\n  }\r\n\r\n  // Start: Return All Receipt Statements\r\n  returnAllReceiptStatements(page: number) {\r\n    this.receiptStatementService\r\n      .getReceiptStatements(page)\r\n      .subscribe((res: IReceiptStatementList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.ReceiptStatementList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let data: IAddEditReceiptStatement = {\r\n      ID: this.FormCtrls.ID.value,\r\n      Name: this.FormCtrls.Name.value,\r\n      Date: this.FormCtrls.Date.value,\r\n      Amount: this.FormCtrls.Amount.value,\r\n      PaymentMethodID: this.FormCtrls.PaymentMethodID.value,\r\n      CustomerID: this.FormCtrls.CustomerID.value,\r\n      DocumentNumber: this.FormCtrls.DocumentNumber.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      data.ID == 0\r\n        ? this.addReceiptStatement(data)\r\n        : this.updateReceiptStatement(data);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Start: Add Receipt Statement\r\n  addReceiptStatement(data: IAddEditReceiptStatement) {\r\n    this.receiptStatementService\r\n      .addReceiptStatement(data)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          this.dataSource.data.push(res);\r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Start: Update Receipt Statement\r\n  updateReceiptStatement(data: IAddEditReceiptStatement) {\r\n    this.receiptStatementService\r\n      .updateReceiptStatement(data)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.spinner.show();\r\n          let i = this.dataSource.data.findIndex((e) => e.ID == data.ID);\r\n          this.dataSource.data[i] = res;\r\n          this.submitted = true;\r\n          this.myForm.reset();\r\n          this.FormCtrls.ID.setValue(0);\r\n          this.toastr.success(\"General.UpdateSuccessfully\");\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(data: IReceiptStatement): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: data.ID,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteReceiptStatement(data);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Receipt Statement\r\n  deleteReceiptStatement(data: IReceiptStatement) {\r\n    this.receiptStatementService\r\n      .deleteReceiptStatement(data.ID)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == data);\r\n          this.dataSource.data.splice(index);\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (this.FormCtrls.ID.value == 0\r\n            ? \"Financial.AddReceiptStatement\"\r\n            : \"Financial.EditReceiptStatement\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.ItemName\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Name.invalid &&\r\n                        (FormCtrls.Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.Name.errors?.required ||\r\n                          FormCtrls.Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Date\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"Date\"\r\n                      formControlName=\"Date\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"Date\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #Date></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.Date.invalid &&\r\n                        (FormCtrls.Date.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.Date.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.paymentMethods\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"PaymentMethodID\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of paymentMethodList\"\r\n                        [value]=\"ele.Id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.Ar_Name : ele.En_Name }}\r\n                        <!-- change with translate -->\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.PaymentMethodID.invalid &&\r\n                        (FormCtrls.PaymentMethodID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.PaymentMethodID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.CustomerName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"CustomerID\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of CustomerList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.Ar_Name : ele.En_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.CustomerID.invalid &&\r\n                        (FormCtrls.CustomerID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.CustomerID.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Balance.Amount\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"Amount\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.Amount.invalid &&\r\n                        (FormCtrls.Amount.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <!-- <span *ngIf=\"FormCtrls.Amount.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span> -->\r\n                      <span *ngIf=\"FormCtrls.Amount.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Financial.DocNo\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"DocumentNumber\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.DocumentNumber.invalid &&\r\n                        (FormCtrls.DocumentNumber.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <!-- <span *ngIf=\"FormCtrls.DocumentNumber.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span> -->\r\n                      <span *ngIf=\"FormCtrls.DocumentNumber.errors?.bigZero\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.bigZero\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{\r\n            (this.FormCtrls.ID.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Financial.ReceiptStatement\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.ItemName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n            <!-- Date Column -->\r\n            <ng-container matColumnDef=\"Date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Date }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Amount Column -->\r\n            <ng-container matColumnDef=\"Amount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Amount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Amount }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Customer_Name Column -->\r\n            <ng-container matColumnDef=\"Customer_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.CustomerName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Customer_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Payment_Method_Ar_Name Column -->\r\n            <ng-container matColumnDef=\"Payment_Method_Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Balance.PaymentMethod\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.Payment_Method_Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n            <!-- DocumentNumber Column -->\r\n            <ng-container matColumnDef=\"DocumentNumber\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Financial.DocNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.DocumentNumber }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editReceiptStatement(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit EduGroup\r\n                    \"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete EduGroup\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllReceiptStatements($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport {\r\n  IStudentExpenseAddEditVM,\r\n  IStudentExpenseVM,\r\n  IStudentDiscountAddEditVM,\r\n  IStudentExpensechosenVM,\r\n  IStudentDiscountTypeDropDown,\r\n} from \"app/dashboard/models/financial/student-expense\";\r\nimport { DiscountTypeService } from \"app/dashboard/services/Financial/discount-type.service\";\r\nimport { StudentExpenseService } from \"app/dashboard/services/Financial/student-expense.service\";\r\n\r\n@Component({\r\n  selector: \"app-all-expenses\",\r\n  templateUrl: \"./all-expenses.component.html\",\r\n  styleUrls: [\"./all-expenses.component.scss\"],\r\n})\r\nexport class AllExpensesComponent implements OnInit {\r\n  @Input(\"studentId\") studentId: number = 0;\r\n  @Output(\"ChangeTotalAmount\") ChangeTotalAmount = new EventEmitter<number>();\r\n\r\n  DiscountTypes: IStudentDiscountTypeDropDown[] = [];\r\n  myForm: FormGroup;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  firstTimeToAddDiscount: boolean = true;\r\n  firstTimeToAddOptionalExpenses: boolean = true;\r\n\r\n  totalAmount: number = 0;\r\n  totalAfterDiscount: number = 0;\r\n\r\n  // table\r\n  displayedColumnsMandatory: string[] = [\"#\", \"Type\", \"Amount\"];\r\n  displayedColumnsOptional: string[] = [\"#\", \"Type\", \"Amount\", \"selected\"];\r\n\r\n  dataSourceMandatory: MatTableDataSource<IStudentExpenseVM>;\r\n  dataSourceOptional: MatTableDataSource<IStudentExpenseVM>;\r\n\r\n  @ViewChild(\"SortM\") sortMandatory = new MatSort();\r\n  @ViewChild(\"SortO\") sortOptional = new MatSort();\r\n\r\n  constructor(\r\n    private StudentExpenseServ: StudentExpenseService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private DiscountTypeServ: DiscountTypeService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      Discount_Ids: [\"\"],\r\n    });\r\n\r\n    this.getOriginExpensesLists();\r\n    this.getAllDiscountTypes();\r\n    this.getAllStudentDiscounts();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSourceMandatory && this.dataSourceOptional) {\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getOriginExpensesLists();\r\n      this.getAllDiscountTypes();\r\n      this.getAllStudentDiscounts();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.studentId) {\r\n      this.getOriginExpensesLists();\r\n      // this.getAllDiscountTypes();\r\n      this.getAllStudentDiscounts();\r\n    }\r\n  }\r\n\r\n  // custom sort\r\n  startSortingTable() {\r\n    this.dataSourceMandatory.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Type\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.expenseElement_Ar_Name\r\n            : item.expenseElement_En_Name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSourceMandatory.sort = this.sortMandatory;\r\n\r\n    this.dataSourceOptional.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Type\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.expenseElement_Ar_Name\r\n            : item.expenseElement_En_Name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSourceOptional.sort = this.sortOptional;\r\n  }\r\n\r\n  // change total amount in card data (parent component)\r\n  ChangeTotal(totalAmount: number) {\r\n    this.ChangeTotalAmount.emit(totalAmount);\r\n  }\r\n\r\n  applyFilterMandatory(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceMandatory.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  applyFilterOptional(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceOptional.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllDiscountTypes() {\r\n    this.spinner.show();\r\n    this.DiscountTypeServ.getDiscountTypeDropdown(this.EduCompId).subscribe(\r\n      (res: IStudentDiscountTypeDropDown[]) => {\r\n        if (res) this.DiscountTypes = res;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get student discount selected\r\n  getAllStudentDiscounts() {\r\n    this.StudentExpenseServ.getAllStudentDiscountByStudentId(\r\n      this.studentId\r\n    ).subscribe((res) => {\r\n      if (res.StudentDicountList.length > 0) {\r\n        this.firstTimeToAddDiscount = false;\r\n        // get student discount in drop down\r\n        this.FormCtrls.Discount_Ids.setValue(\r\n          res.StudentDicountList.map((discount) => discount.DisountTypeId)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  // get origin lists\r\n  getOriginExpensesLists() {\r\n    this.StudentExpenseServ.getAllStudentExpansesMandatoryAndOptionalByStudentId(\r\n      this.studentId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.dataSourceMandatory = new MatTableDataSource(\r\n          res.StudentMandatoryExpensesList\r\n        );\r\n        this.dataSourceOptional = new MatTableDataSource(\r\n          res.StudentNotMandatoryExpensesList\r\n        );\r\n        this.startSortingTable();\r\n\r\n        // get student expense data\r\n        this.getStudentExpenseData();\r\n      }\r\n    });\r\n  }\r\n\r\n  // get student selected expenses & total amounts\r\n  getStudentExpenseData() {\r\n    this.StudentExpenseServ.getAllStudentchosenExpensesByStudentId(\r\n      this.studentId\r\n    ).subscribe((res) => {\r\n      if (res.StudentChoiceExpensesList.length > 0) {\r\n        this.firstTimeToAddOptionalExpenses = false;\r\n        // student choosen api /// change selected property in choosen items only\r\n        this.changeValuesOfCheckboksInTable(res.StudentChoiceExpensesList);\r\n      }\r\n      // total amounts\r\n      this.totalAmount = res.Amount.TotalAmount;\r\n      this.totalAfterDiscount = res.Amount.AmountAfterDiscount;\r\n    });\r\n  }\r\n\r\n  // change selected expenses\r\n  changeChosenOptionalExpenseItem(\r\n    expense: IStudentExpenseVM,\r\n    checked: boolean,\r\n    index: number\r\n  ) {\r\n    expense.selected = checked;\r\n    this.dataSourceOptional.data[index] = expense;\r\n  }\r\n\r\n  // save changes in selected optional expenses\r\n  saveSelectedOptionalExpenses() {\r\n    let editedList: IStudentExpenseAddEditVM = {\r\n      student_user_id: this.studentId,\r\n      academicYearExpanseIds: [],\r\n    };\r\n    this.dataSourceOptional.data.forEach((expense) => {\r\n      if (expense.selected == true)\r\n        editedList.academicYearExpanseIds.push(expense.id);\r\n    });\r\n    // console.log(editedList);\r\n\r\n    (this.firstTimeToAddOptionalExpenses\r\n      ? this.StudentExpenseServ.addOptionalExpenses(editedList)\r\n      : this.StudentExpenseServ.editOptionalExpenses(editedList)\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        // console.log(res.StudentExpanse);\r\n        this.firstTimeToAddOptionalExpenses\r\n          ? this.ToastrMsg.success(\"General.AddSuccessfully\")\r\n          : this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n        this.firstTimeToAddOptionalExpenses = false;\r\n\r\n        // change selected property in choosen items only\r\n        this.changeValuesOfCheckboksInTable(res.StudentExpanse);\r\n\r\n        // total amounts\r\n        this.totalAmount = res.Amount.TotalAmount;\r\n        this.totalAfterDiscount = res.Amount.AmountAfterDiscount;\r\n        this.ChangeTotal(this.totalAfterDiscount);\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n    });\r\n  }\r\n\r\n  changeValuesOfCheckboksInTable(\r\n    optionalChosenList: IStudentExpensechosenVM[]\r\n  ) {\r\n    // change selected property in choosen items only\r\n    let optionalSelectedId = optionalChosenList.map(\r\n      (expense) => expense.academicYearExpanseId\r\n    );\r\n    this.dataSourceOptional.data.map((expense) => {\r\n      if (optionalSelectedId.includes(expense.id)) expense.selected = true;\r\n      else expense.selected = false;\r\n      return expense;\r\n    });\r\n  }\r\n\r\n  applyDiscount() {\r\n    let studentDiscounts: IStudentDiscountAddEditVM = {\r\n      student_user_id: this.studentId,\r\n      Discount_Ids: this.FormCtrls.Discount_Ids.value,\r\n    };\r\n    // console.log(studentDiscounts);\r\n\r\n    (this.firstTimeToAddDiscount\r\n      ? this.StudentExpenseServ.addStudentDiscount(studentDiscounts)\r\n      : this.StudentExpenseServ.editStudentDiscounts(studentDiscounts)\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        // console.log(res.StudentDiscount);\r\n        this.firstTimeToAddDiscount\r\n          ? this.ToastrMsg.success(\"General.AddSuccessfully\")\r\n          : this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n        this.firstTimeToAddDiscount = false;\r\n\r\n        // change discounts selected\r\n        this.FormCtrls.Discount_Ids.setValue(\r\n          res.StudentDiscount.map((discount) => discount.DisountTypeId)\r\n        );\r\n        // console.log(this.FormCtrls.Discount_Ids.value);\r\n\r\n        // total amounts\r\n        this.totalAfterDiscount = res.Amount.AmountAfterDiscount;\r\n        this.ChangeTotal(this.totalAfterDiscount);\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <!-- mandatory expenses table -->\r\n  <div class=\"col-md-6 col-12\">\r\n    <mat-card-title>\r\n      {{ \"Financial.MandatoryExpenses\" | translate }}\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n      <!-- filter input -->\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Filter</mat-label>\r\n        <input\r\n          matInput\r\n          (keyup)=\"applyFilterMandatory($event)\"\r\n          placeholder=\"Ex. ium\"\r\n          #input\r\n        />\r\n      </mat-form-field>\r\n\r\n      <!-- table -->\r\n      <div class=\"mat-elevation-z8 f-w\">\r\n        <table\r\n          mat-table\r\n          [dataSource]=\"dataSourceMandatory\"\r\n          matSort\r\n          #SortM=\"matSort\"\r\n        >\r\n          <!-- # Column -->\r\n          <ng-container matColumnDef=\"#\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n            <td mat-cell *matCellDef=\"let i = index\">\r\n              {{ i + 1 }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Type column -->\r\n          <ng-container matColumnDef=\"Type\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              {{ \"Financial.ExpenseElement\" | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let expense\">\r\n              {{\r\n                currentLang == \"ar\"\r\n                  ? expense.expenseElement_Ar_Name ??\r\n                    expense.expenseElement_En_Name\r\n                  : expense.expenseElement_En_Name ??\r\n                    expense.expenseElement_Ar_Name\r\n              }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Amount column -->\r\n          <ng-container matColumnDef=\"Amount\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              {{ \"Balance.Amount\" | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let expense\">\r\n              {{ expense.Amount }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumnsMandatory\"></tr>\r\n          <tr\r\n            mat-row\r\n            *matRowDef=\"let row; columns: displayedColumnsMandatory\"\r\n          ></tr>\r\n\r\n          <!-- Row shown when there is no matching data. -->\r\n          <tr class=\"mat-row\" *matNoDataRow>\r\n            <td class=\"mat-cell\" colspan=\"3\">\r\n              No data matching the filter \"{{ input.value }}\"\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </mat-card-content>\r\n  </div>\r\n\r\n  <!-- optional expenses table -->\r\n  <div class=\"col-md-6 col-12\">\r\n    <mat-card-title>\r\n      {{ \"Financial.OptionalExpenses\" | translate }}\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n      <!-- filter input -->\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Filter</mat-label>\r\n        <input\r\n          matInput\r\n          (keyup)=\"applyFilterOptional($event)\"\r\n          placeholder=\"Ex. ium\"\r\n          #input\r\n        />\r\n      </mat-form-field>\r\n\r\n      <!-- table -->\r\n      <div class=\"mat-elevation-z8 f-w\">\r\n        <table\r\n          mat-table\r\n          [dataSource]=\"dataSourceOptional\"\r\n          matSort\r\n          #SortO=\"matSort\"\r\n        >\r\n          <!-- # Column -->\r\n          <ng-container matColumnDef=\"#\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n            <td mat-cell *matCellDef=\"let i = index\">\r\n              {{ i + 1 }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Type column -->\r\n          <ng-container matColumnDef=\"Type\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              {{ \"Financial.ExpenseElement\" | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let expense\">\r\n              {{\r\n                currentLang == \"ar\"\r\n                  ? expense.expenseElement_Ar_Name ??\r\n                    expense.expenseElement_En_Name\r\n                  : expense.expenseElement_En_Name ??\r\n                    expense.expenseElement_Ar_Name\r\n              }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Amount column -->\r\n          <ng-container matColumnDef=\"Amount\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              {{ \"Balance.Amount\" | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let expense\">\r\n              {{ expense.Amount }}\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Required column -->\r\n          <ng-container matColumnDef=\"selected\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              {{ \"Financial.isRequired\" | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let expense\" class=\"pl-3\">\r\n              <mat-checkbox\r\n                [checked]=\"expense.selected\"\r\n                (change)=\"\r\n                  changeChosenOptionalExpenseItem(expense, $event.checked, i)\r\n                \"\r\n              >\r\n                <!-- {{ \"Financial.Required\" | translate }} -->\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumnsOptional\"></tr>\r\n          <tr\r\n            mat-row\r\n            *matRowDef=\"let row; columns: displayedColumnsOptional\"\r\n          ></tr>\r\n\r\n          <!-- Row shown when there is no matching data. -->\r\n          <tr class=\"mat-row\" *matNoDataRow>\r\n            <td class=\"mat-cell\" colspan=\"4\">\r\n              No data matching the filter \"{{ input.value }}\"\r\n            </td>\r\n          </tr>\r\n        </table>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info mt-1 float-right\"\r\n          (click)=\"saveSelectedOptionalExpenses()\"\r\n        >\r\n          {{ \"General.Save\" | translate }}\r\n        </button>\r\n      </div>\r\n    </mat-card-content>\r\n  </div>\r\n</div>\r\n\r\n<!-- discount & final amount -->\r\n<div\r\n  class=\"row container-fluid align-items-baseline justify-content-between m-0 p-0\"\r\n>\r\n  <div>\r\n    <span class=\"mr-2 lastRow info\"\r\n      >{{ \"Financial.total\" | translate }} :\r\n    </span>\r\n    {{ totalAmount }}\r\n    LE\r\n  </div>\r\n\r\n  <!-- Discount Type input -->\r\n  <div class=\"col-md-6 col-12\">\r\n    <form [formGroup]=\"myForm\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.DiscountType\" | translate }}</mat-label>\r\n        <mat-select\r\n          formControlName=\"Discount_Ids\"\r\n          multiple\r\n          (selectionChange)=\"applyDiscount()\"\r\n        >\r\n          <!-- <mat-option>{{ \"General.Choose\" | translate }}</mat-option> -->\r\n          <mat-option *ngFor=\"let Type of DiscountTypes\" [value]=\"Type.Id\">\r\n            {{ currentLang == \"ar\" ? Type.ar_name : Type.en_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n\r\n  <div>\r\n    <span class=\"mr-2 lastRow info\"\r\n      >{{ \"Financial.totlaAfterDiscount\" | translate }} :\r\n    </span>\r\n    {{ totalAfterDiscount }}\r\n    LE\r\n  </div>\r\n</div>\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- student expense -->\r\n      <mat-card-title>\r\n        {{ \"Financial.StudentExpenses\" | translate }}\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning float-right\"\r\n          (click)=\"resetForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- Student input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Financial.StudentName\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"studentId\"\r\n                      (selectionChange)=\"getStudentAmountCardData()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Student of Students\"\r\n                        [value]=\"Student.studentUserId\"\r\n                      >\r\n                        {{ Student.student_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- card to show student total expenses -->\r\n        <div class=\"row\" *ngIf=\"studentIdCtrl.value > 0\">\r\n          <div class=\"col-12 col-md-4\">\r\n            <!-- <mat-card class=\"card card-inverse bg-secondary\"> -->\r\n            <mat-card class=\"card\">\r\n              <mat-card-content>\r\n                <!-- <div class=\"media\">\r\n                  <div class=\"media-body text-left\">\r\n                    <h4 class=\"card-text\">\r\n                      {{ \"Financial.dipt\" | translate }}\r\n                    </h4>\r\n                    <h5>100 LE</h5>\r\n                  </div>\r\n                </div> -->\r\n                <div class=\"media\">\r\n                  <div class=\"media-body text-left\">\r\n                    <h5 class=\"mb-2 warning\">{{ cardData?.TotalUnpaid }} LE</h5>\r\n                    <h6 class=\"card-text\">\r\n                      {{ \"Financial.debit\" | translate }}\r\n                    </h6>\r\n                  </div>\r\n                  <div class=\"media-right align-self-center\">\r\n                    <!-- <i\r\n                      class=\"fa fa-credit-card-alt warning font-large-2 float-right\"\r\n                    ></i> -->\r\n                    <mat-icon class=\"warning font-large-2 float-right mr-3\">\r\n                      payment\r\n                    </mat-icon>\r\n                  </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n\r\n          <div class=\"col-12 col-md-4\">\r\n            <!-- <mat-card class=\"card card-inverse bg-light\"> -->\r\n            <mat-card class=\"card\">\r\n              <mat-card-content>\r\n                <div class=\"media\">\r\n                  <div class=\"media-body text-left\">\r\n                    <h5 class=\"mb-2 info\">{{ cardData?.TotalPaid }} LE</h5>\r\n                    <h6 class=\"card-text\">\r\n                      {{ \"Financial.paid\" | translate }}\r\n                    </h6>\r\n                  </div>\r\n                  <div class=\"media-right align-self-center\">\r\n                    <!-- <i\r\n                      class=\"fa fa-credit-card info font-large-2 float-right\"\r\n                    ></i> -->\r\n                    <mat-icon class=\"info font-large-2 float-right mr-3\">\r\n                      payment\r\n                    </mat-icon>\r\n                  </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n\r\n          <div class=\"col-12 col-md-4\">\r\n            <!-- <mat-card class=\"card card-inverse bg-info\"> -->\r\n            <mat-card class=\"card\">\r\n              <mat-card-content>\r\n                <div class=\"media\">\r\n                  <div class=\"media-body text-left\">\r\n                    <h5 class=\"mb-2 primary\">\r\n                      {{ cardData?.AmountAfterDiscount }} LE\r\n                    </h5>\r\n                    <h6 class=\"card-text\">\r\n                      {{ \"Financial.total\" | translate }}\r\n                    </h6>\r\n                  </div>\r\n                  <div class=\"media-right align-self-center\">\r\n                    <!-- <i class=\"fa fa-money primary font-large-2 float-right\"></i> -->\r\n                    <mat-icon class=\"primary font-large-2 float-right mr-3\">\r\n                      payment\r\n                    </mat-icon>\r\n                  </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\" *ngIf=\"studentIdCtrl.value > 0\">\r\n          <div class=\"col-12\">\r\n            <mat-card>\r\n              <mat-card-content>\r\n                <!-- [selectedIndex]=\"selectedTabIndex\" -->\r\n                <mat-tab-group animationDuration=\"300ms\" [selectedIndex]=\"0\">\r\n                  <!-- classInfo -->\r\n                  <mat-tab label=\"{{ 'Financial.AllExpenses' | translate }}\">\r\n                    <app-all-expenses\r\n                      [studentId]=\"studentIdCtrl.value\"\r\n                      (ChangeTotalAmount)=\"changeTotal($event)\"\r\n                    ></app-all-expenses>\r\n                  </mat-tab>\r\n\r\n                  <!-- gradding statement -->\r\n                  <mat-tab label=\"{{ 'Financial.instalments' | translate }}\">\r\n                    <app-student-instalments\r\n                      [totalAmount]=\"cardData?.AmountAfterDiscount\"\r\n                      [studentId]=\"studentIdCtrl.value\"\r\n                    ></app-student-instalments>\r\n                  </mat-tab>\r\n\r\n                  <!-- student payments -->\r\n                  <mat-tab label=\"{{ 'Financial.StudentPayment' | translate }}\">\r\n                    <app-financial-transactions\r\n                      (ChangePaidUnpaidAmount)=\"ChangeAmounts($event)\"\r\n                      [studentId]=\"studentIdCtrl.value\"\r\n                    ></app-financial-transactions>\r\n                  </mat-tab>\r\n                </mat-tab-group>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { IStudentGetVM } from \"app/dashboard/models/setup/student/student\";\r\nimport { StudentService } from \"app/dashboard/services/setup/student/student.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { StudentExpenseService } from \"app/dashboard/services/Financial/student-expense.service\";\r\nimport { IStudentAmountCardVM } from \"app/dashboard/models/financial/student-expense\";\r\n\r\n@Component({\r\n  selector: \"app-student-expense\",\r\n  templateUrl: \"./student-expense.component.html\",\r\n  styleUrls: [\"./student-expense.component.scss\"],\r\n})\r\nexport class StudentExpenseComponent implements OnInit {\r\n  Students: IStudentGetVM[] = [];\r\n  cardData: IStudentAmountCardVM;\r\n  myForm: FormGroup;\r\n\r\n  // selectedTabIndex: number = 0;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private StudentExpenseServ: StudentExpenseService,\r\n    private StudentServ: StudentService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    // private ToastrMsg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n      // this.selectedTabIndex = lang.lang == \"ar\" ? 0 : 2;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      studentId: [0],\r\n    });\r\n\r\n    this.getAllStudents();\r\n    this.getStudentAmountCardData();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudents();\r\n      this.getStudentAmountCardData();\r\n    });\r\n  }\r\n\r\n  get studentIdCtrl() {\r\n    return this.myForm.controls.studentId;\r\n  }\r\n\r\n  // change total from all expenses component\r\n  changeTotal(newAmount: number) {\r\n    this.cardData.AmountAfterDiscount = newAmount;\r\n    this.cardData.TotalUnpaid = newAmount - this.cardData.TotalPaid;\r\n  }\r\n\r\n  // change paid & unpaid from payment component\r\n  ChangeAmounts(newAmounts: IStudentAmountCardVM) {\r\n    this.cardData.TotalPaid = newAmounts.TotalPaid;\r\n    this.cardData.TotalUnpaid = newAmounts.TotalUnpaid;\r\n  }\r\n\r\n  // get all Students\r\n  getAllStudents() {\r\n    this.spinner.show();\r\n    this.StudentServ.GetAllStudentsDropDown(this.EduCompId).subscribe((res) => {\r\n      if (res) {\r\n        this.Students = res.AcceptedStudentList;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get card data\r\n  getStudentAmountCardData() {\r\n    if (this.studentIdCtrl.value > 0) {\r\n      this.spinner.show();\r\n      this.StudentExpenseServ.getStudentAmountData(\r\n        this.studentIdCtrl.value\r\n      ).subscribe((res) => {\r\n        if (res) {\r\n          this.cardData = res;\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    } else this.cardData = null;\r\n  }\r\n\r\n  resetForm() {\r\n    this.myForm.reset();\r\n    this.studentIdCtrl.setValue(0);\r\n    this.cardData = null;\r\n  }\r\n}\r\n","import { map } from \"rxjs/operators\";\r\nimport { StudentExpenseService } from \"app/dashboard/services/Financial/student-expense.service\";\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport {\r\n  IInstallmentAddEditVM,\r\n  IStudentInstallmentAddEditVM,\r\n  IStudentInstallmentVM,\r\n} from \"app/dashboard/models/financial/student-expense\";\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-student-instalments\",\r\n  templateUrl: \"./student-instalments.component.html\",\r\n  styleUrls: [\"./student-instalments.component.scss\"],\r\n})\r\nexport class StudentInstalmentsComponent implements OnInit {\r\n  @Input(\"studentId\") studentId: number = 0;\r\n  @Input(\"totalAmount\") studentTotalAmount: number = 0;\r\n\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  deletedIds: number[] = [];\r\n\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Update\" },\r\n  //   { functionName: \"Delete\" },\r\n  // ];\r\n\r\n  displayColumns: string[] = [\"#\", \"Date\", \"Amount\", \"paid\"];\r\n  dataSource: MatTableDataSource<IStudentInstallmentVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private StudentExpenseServ: StudentExpenseService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      studentInstallments: this.fb.array([]),\r\n    });\r\n    // add first installment form\r\n    this.addStudentInstallmentForm();\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.getStudentInstallments(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentInstallments(1);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.studentId) {\r\n      this.getStudentInstallments(1);\r\n    }\r\n  }\r\n\r\n  // get FormCtrls() {\r\n  //   return this.myForm.controls;\r\n  // }\r\n\r\n  // get installments array\r\n  get StudentInstallmentsArr() {\r\n    return this.myForm.controls[\"studentInstallments\"] as FormArray;\r\n  }\r\n\r\n  // get selected installment form\r\n  StudentInstallmentForm(index: number) {\r\n    return this.StudentInstallmentsArr.controls[index] as FormGroup;\r\n  }\r\n\r\n  get firstId() {\r\n    return this.StudentInstallmentForm(0)?.controls.id.value || 0;\r\n  }\r\n\r\n  // total amount in form\r\n  currentTotalAmount() {\r\n    let InstallmentsList = this.StudentInstallmentsArr.value;\r\n    return InstallmentsList.reduce((prev, { Amount }) => prev + Amount, 0);\r\n  }\r\n\r\n  // add new from for installment\r\n  addStudentInstallmentForm() {\r\n    let StudentInstallmentForm = this.fb.group({\r\n      id: [0],\r\n      Date: [\"\", [Validators.required]],\r\n      Amount: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.StudentInstallmentsArr.push(StudentInstallmentForm);\r\n  }\r\n\r\n  // get no of installment to display it\r\n  getNoOfCurrentInstallment(id: number) {\r\n    // array without deleted items\r\n    let filteredarray = this.StudentInstallmentsArr.value.filter(\r\n      (installment) => installment.Amount != 0\r\n    );\r\n    let curIndex = filteredarray.findIndex(\r\n      (installment) => installment.id == id\r\n    );\r\n    return (curIndex != -1 ? curIndex : filteredarray.length) + 1;\r\n  }\r\n\r\n  // remove one installment form\r\n  deleteStudentInstallmentForm(formIndex: number, id: number) {\r\n    // in add, let amount = 0 , hide this from (without removing its value)\r\n    if (this.firstId > 0 && id != 0) {\r\n      this.StudentInstallmentForm(formIndex).controls.Amount.setValue(0);\r\n      this.deletedIds.push(\r\n        this.StudentInstallmentForm(formIndex).controls.id.value\r\n      );\r\n    }\r\n    // in add, remove form\r\n    else this.StudentInstallmentsArr.removeAt(formIndex);\r\n  }\r\n\r\n  // get values from table to edit\r\n  toEditStudentInstallments() {\r\n    this.clearForm();\r\n    let InstallmentsList = this.dataSource.data;\r\n    // console.log(this.dataSource.data);\r\n    InstallmentsList.forEach((instalment, index) => {\r\n      if (index > 0) this.addStudentInstallmentForm();\r\n      this.StudentInstallmentForm(index).patchValue(instalment);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Return Student installments\r\n  getStudentInstallments(page: number) {\r\n    this.spinner.show();\r\n    this.StudentExpenseServ.getAllInstallment(this.studentId, page).subscribe(\r\n      (res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.studentInstallmentList);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let StudentInstallment: IStudentInstallmentAddEditVM = {\r\n      student_user_id: this.studentId,\r\n      studentInstallments: this.StudentInstallmentsArr.value.map(\r\n        (installment: IInstallmentAddEditVM) => {\r\n          return {\r\n            id: installment.id,\r\n            Amount: installment.Amount,\r\n            Date: this.datePipe.transform(installment.Date),\r\n          };\r\n        }\r\n      ),\r\n    };\r\n    // console.log(StudentInstallment);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.StudentExpenseServ.addEditInstallment(StudentInstallment).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.firstId\r\n              ? this.toastr.success(\"General.UpdateSuccessfully\")\r\n              : this.toastr.success(\"General.AddSuccessfully\");\r\n\r\n            let updatedList = res.studentInstallmentList;\r\n            // console.log(updatedList);\r\n            this.dataSource = new MatTableDataSource(updatedList);\r\n            this.itemsCounts = updatedList?.length;\r\n\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  clearForm() {\r\n    this.StudentInstallmentsArr.clear();\r\n    this.addStudentInstallmentForm();\r\n    this.submitted = false;\r\n    this.deletedIds = [];\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<ng-container *ngIf=\"itemsCounts == 0 || firstId > 0\">\r\n  <mat-card-title>\r\n    {{\r\n      (firstId == 0\r\n        ? \"Financial.AddInstallment\"\r\n        : \"Financial.updateInstallment\"\r\n      ) | translate\r\n    }}\r\n  </mat-card-title>\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <ng-container formArrayName=\"studentInstallments\">\r\n            <ng-container\r\n              *ngFor=\"\r\n                let StudentInstallmentForm of StudentInstallmentsArr.controls;\r\n                let i = index\r\n              \"\r\n            >\r\n              <div\r\n                [class.hideForm]=\"\r\n                  deletedIds.includes(StudentInstallmentForm.controls.id.value)\r\n                \"\r\n              >\r\n                <div\r\n                  class=\"installmentNo mb-1\"\r\n                  *ngIf=\"StudentInstallmentsArr.value.length > 1\"\r\n                >\r\n                  {{ \"Financial.InstallmentNo\" | translate }}\r\n                  {{\r\n                    getNoOfCurrentInstallment(\r\n                      StudentInstallmentForm.controls.id.value\r\n                    )\r\n                  }}\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-12\">\r\n                    <form [formGroupName]=\"i\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-5 col-12\">\r\n                          <mat-form-field appearance=\"legacy\">\r\n                            <mat-label>{{\r\n                              \"labels.Date\" | translate\r\n                            }}</mat-label>\r\n                            <input\r\n                              matInput\r\n                              [matDatepicker]=\"Date\"\r\n                              formControlName=\"Date\"\r\n                            />\r\n                            <mat-datepicker-toggle\r\n                              matSuffix\r\n                              [for]=\"Date\"\r\n                            ></mat-datepicker-toggle>\r\n                            <mat-datepicker #Date></mat-datepicker>\r\n                            <mat-hint\r\n                              *ngIf=\"\r\n                                StudentInstallmentForm.controls.Date.invalid &&\r\n                                (StudentInstallmentForm.controls.Date.touched ||\r\n                                  submitted)\r\n                              \"\r\n                              class=\"text-danger\"\r\n                            >\r\n                              <span\r\n                                *ngIf=\"\r\n                                  StudentInstallmentForm.controls.Date.errors\r\n                                    ?.required\r\n                                \"\r\n                              >\r\n                                <i class=\"ft-alert-circle align-middle\"></i>\r\n                                {{ \"labels.mustEnterValue\" | translate }}\r\n                              </span>\r\n                            </mat-hint>\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-5 col-12\">\r\n                          <mat-form-field appearance=\"legacy\">\r\n                            <mat-label>\r\n                              {{ \"labels.Amount\" | translate }}\r\n                            </mat-label>\r\n                            <input\r\n                              matInput\r\n                              type=\"number\"\r\n                              formControlName=\"Amount\"\r\n                            />\r\n                            <mat-hint\r\n                              class=\"text-danger\"\r\n                              *ngIf=\"\r\n                                StudentInstallmentForm.controls.Amount\r\n                                  .invalid &&\r\n                                (StudentInstallmentForm.controls.Amount\r\n                                  .touched ||\r\n                                  submitted)\r\n                              \"\r\n                            >\r\n                              <span\r\n                                *ngIf=\"\r\n                                  StudentInstallmentForm.controls.Amount.errors\r\n                                    ?.required\r\n                                \"\r\n                              >\r\n                                <i class=\"ft-alert-circle align-middle\"></i>\r\n                                {{ \"labels.mustEnterValue\" | translate }}\r\n                              </span>\r\n                              <span\r\n                                *ngIf=\"\r\n                                  StudentInstallmentForm.controls.Amount.errors\r\n                                    ?.minusNum\r\n                                \"\r\n                              >\r\n                                <i class=\"ft-alert-circle align-middle\"></i>\r\n                                {{ \"labels.bigZero\" | translate }}\r\n                              </span>\r\n                            </mat-hint>\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <!-- delete instalment row -->\r\n                        <div\r\n                          *ngIf=\"i > 0\"\r\n                          class=\"col-md-2 col-12 d-flex justify-content-center\"\r\n                        >\r\n                          <button\r\n                            mat-mini-fab\r\n                            type=\"button\"\r\n                            class=\"btn btn-danger bg-light-danger\"\r\n                            (click)=\"\r\n                              deleteStudentInstallmentForm(\r\n                                i,\r\n                                StudentInstallmentForm.controls.id.value\r\n                              )\r\n                            \"\r\n                          >\r\n                            <mat-icon>delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </ng-container>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions align=\"end\">\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-warning bg-light-warning\"\r\n      (click)=\"addStudentInstallmentForm()\"\r\n      [disabled]=\"currentTotalAmount() >= studentTotalAmount\"\r\n    >\r\n      <!-- <i class=\"fa fa-plus\"></i> -->\r\n      {{ \"Financial.AddInstallment\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-info bg-light-info\"\r\n      (click)=\"onSubmit()\"\r\n      *ngIf=\"firstId == 0\"\r\n      [disabled]=\"currentTotalAmount() != studentTotalAmount || itemsCounts > 0\"\r\n    >\r\n      <i class=\"fa fa-plus\"></i>\r\n      {{ \"General.Add\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-info bg-light-info\"\r\n      (click)=\"onSubmit()\"\r\n      *ngIf=\"firstId > 0\"\r\n      [disabled]=\"currentTotalAmount() != studentTotalAmount\"\r\n    >\r\n      {{ \"General.Update\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-warning\"\r\n      (click)=\"clearForm()\"\r\n      *ngIf=\"firstId > 0\"\r\n    >\r\n      {{ \"General.Reset\" | translate }}\r\n    </button>\r\n  </mat-card-actions>\r\n</ng-container>\r\n\r\n<!-- alert -->\r\n<ng-container #addNotAllowed *ngIf=\"itemsCounts > 0 && firstId == 0\">\r\n  <div class=\"alert bg-light-warning mb-2\" role=\"alert\">\r\n    {{ \"Financial.NoAddOnlyUpdate\" | translate }}\r\n  </div>\r\n</ng-container>\r\n\r\n<hr class=\"mt-1 mb-2\" />\r\n\r\n<mat-card-title>\r\n  {{ \"Financial.Installments\" | translate }}\r\n\r\n  <button\r\n    mat-mini-fab\r\n    *ngIf=\"itemsCounts > 0\"\r\n    class=\"btn btn-success bg-light-success float-right editBtn\"\r\n    (click)=\"toEditStudentInstallments()\"\r\n  >\r\n    <mat-icon>edit</mat-icon>\r\n  </button>\r\n</mat-card-title>\r\n<mat-card-content>\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. ium\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Payment Date Column -->\r\n      <ng-container matColumnDef=\"Date\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Date\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          {{ ele.Date | date : \"dd-MM-yyyy\" }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Amount Column -->\r\n      <ng-container matColumnDef=\"Amount\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Balance.Amount\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">{{ ele.Amount }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Amount Column -->\r\n      <ng-container matColumnDef=\"paid\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"Financial.IsPaid\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let ele\">\r\n          <span *ngIf=\"ele.paid\" class=\"text-success\">\r\n            <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i>\r\n            {{ \"Financial.Paid\" | translate }}</span\r\n          >\r\n          <span *ngIf=\"!ele.paid\" class=\"text-danger\">\r\n            <i class=\"fa fa-times-circle-o\" aria-hidden=\"true\"></i>\r\n            {{ \"Financial.NotPaid\" | translate }}</span\r\n          >\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"5\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getStudentInstallments($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      [pageSize]=\"10\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of users\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</mat-card-content>\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IExternalOrganizationTypeVM } from \"app/dashboard/models/setup/financial-setup/external-organization-type\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DeductionReasonsService {\r\n  constructor(private http: HttpClient) {}\r\n  // Return All Deduction Reasons\r\n  getDeductionReasons(EduCompId:number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}DeductionReason/getAllDeductionReason/${EduCompId}`\r\n    );\r\n\r\n  }\r\n\r\n\r\n  //Add New || Update Deduction Reasons\r\n  addEditDeductionReason(data: IExternalOrganizationTypeVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}DeductionReason/addEditDeductionReason`,\r\n      data\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Delete Deduction Reasons\r\n  deleteDeductionReasons(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}DeductionReason/deleteDeductionReason/${Id}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditEmployeePenality } from \"app/dashboard/models/financial/employee-penality\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeePenalityService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  // Return All Employee Penalitys\r\n  getEmployeePenalitys(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}/SchoolSystem/EmployeePenality/getEmployeePenalitys/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add New Employee Penality\r\n  addEmployeePenality(data: IAddEditEmployeePenality) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/SchoolSystem/EmployeePenality/addEmployeePenality`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update Employee Penality\r\n  updateEmployeePenality(data: IAddEditEmployeePenality) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}/SchoolSystem/EmployeePenality/editEmployeePenality/${data.ID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Employee Penality\r\n  deleteEmployeePenality(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}/SchoolSystem/EmployeePenality/deleteEmployeePenality/${Id}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditEmployeePayroll } from \"app/dashboard/models/financial/employee-payroll\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeePayrollService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  // Return All Employee Payrolls\r\n  getEmployeePayrolls(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}/SchoolSystem/EmployeePayroll/getEmployeePayrolls/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add New Employee Payroll\r\n  addEmployeePayroll(data: IAddEditEmployeePayroll) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/SchoolSystem/EmployeePayroll/addEmployeePayroll`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update Employee Payroll\r\n  updateEmployeePayroll(data: IAddEditEmployeePayroll) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}/SchoolSystem/EmployeePayroll/editEmployeePayroll/${data.ID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Employee Payroll\r\n  deleteEmployeePayroll(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}/SchoolSystem/EmployeePayroll/deleteEmployeePayroll/${Id}`\r\n    );\r\n  }}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport {\r\n  IAddEditStudentPayment,\r\n  IStudentPaymentList,\r\n} from \"app/dashboard/models/financial/financial-transaction\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FinancialTransactionsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //#region Student Payment\r\n  // Return All Student Payments\r\n  getStudentPayments(page: number) {\r\n    return this.http.get<IStudentPaymentList>(\r\n      `${environment.baseUrl}/StudentInstallmentPayment/getStudentInstallmentPaymentByPage/${page}`\r\n    );\r\n  }\r\n\r\n  // Return All Student Payments by student id\r\n  getStudentPaymentsByStudentId(studentId: number, page: number) {\r\n    return this.http.get<IStudentPaymentList>(\r\n      `${environment.baseUrl}/StudentInstallmentPayment/getStudentInstallmentPaymentByStudentIdByPage/${studentId}/${page}`\r\n    );\r\n  }\r\n\r\n  //Add New Student Payment\r\n  addEditStudentPayment(data: IAddEditStudentPayment) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/StudentInstallmentPayment/AddEditStudentInstallmentPayment`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Student Payments\r\n  deleteStudentPayments(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}/StudentInstallmentPayment/DeleteStudentInstallmentPayment/${Id}`\r\n    );\r\n  }\r\n  //#endregion\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditPaymentStatement } from \"app/dashboard/models/financial/payment-statement\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentStatementService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All Payment Statements\r\n  getPaymentStatements(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}/SchoolSystem/PaymentStatement/getPaymentStatements/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add New Payment Statement\r\n  addPaymentStatement(data: IAddEditPaymentStatement) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/SchoolSystem/PaymentStatement/addPaymentStatement`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update Payment Statement\r\n  updatePaymentStatement(data: IAddEditPaymentStatement) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}/SchoolSystem/PaymentStatement/editPaymentStatement/${data.ID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Payment Statement\r\n  deletePaymentStatement(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}/SchoolSystem/PaymentStatement/deletePaymentStatement/${Id}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditPayrollSetup } from \"app/dashboard/models/financial/payroll-setup\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PayrollSetupService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n  // Return All  Payrolls\r\n  getPayrollSetups(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}/SchoolSystem/PayrollSetup/getPayrollSetups/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add New  Payroll\r\n  addPayrollSetup(data: IAddEditPayrollSetup) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/SchoolSystem/PayrollSetup/addPayrollSetup`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update  Payroll\r\n  updatePayrollSetup(data: IAddEditPayrollSetup) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}/SchoolSystem/PayrollSetup/editPayrollSetup/${data.ID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete  Payroll\r\n  deletePayrollSetup(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}/SchoolSystem/PayrollSetup/deletePayrollSetup/${Id}`\r\n    );\r\n  }}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditReceiptStatement } from \"app/dashboard/models/financial/receipt-statement\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReceiptStatementService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All Receipt Statements\r\n  getReceiptStatements(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}/SchoolSystem/ReceiptStatement/getReceiptStatements/${page}`\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //Add New Receipt Statement\r\n  addReceiptStatement(data: IAddEditReceiptStatement) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}/SchoolSystem/ReceiptStatement/addReceiptStatement`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update Receipt Statement\r\n  updateReceiptStatement(data: IAddEditReceiptStatement) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}/SchoolSystem/ReceiptStatement/editReceiptStatement/${data.ID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Receipt Statement\r\n  deleteReceiptStatement(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}/SchoolSystem/ReceiptStatement/deleteReceiptStatement/${Id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IStudentAmountCardVM,\r\n  IStudentDiscountAddEditVM,\r\n  IStudentDiscountVM,\r\n  IStudentExpenseAddEditVM,\r\n  IStudentExpensechosenListVM,\r\n  IStudentExpenseOriginListVM,\r\n  IStudentInstallmentAddEditVM,\r\n  IStudentInstallmentListVM,\r\n  IStudentInstallmentVM,\r\n} from \"app/dashboard/models/financial/student-expense\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StudentExpenseService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // get All Students > dropdown\r\n  getAllStudents() {\r\n    return this.http.get<any[]>(\r\n      `${environment.baseUrl}studentExpense/getAllStudents`\r\n    );\r\n  }\r\n\r\n  getStudentAmountData(studentId: number) {\r\n    return this.http.get<IStudentAmountCardVM>(\r\n      `${environment.baseUrl}StudentInstallmentPayment/GetTotalPaidUnPaidStudentPayment/${studentId}`\r\n    );\r\n  }\r\n\r\n  //#region ////////// all expenses\r\n  // get All chosen expenses for student & mandatory expenses & total count\r\n  getAllStudentchosenExpensesByStudentId(studentId: number) {\r\n    return this.http.get<IStudentExpensechosenListVM>(\r\n      `${environment.baseUrl}StudentExpanse/getStudentChoosenMandatoryExpanseByStudentId/${studentId}`\r\n    );\r\n  }\r\n\r\n  // get All expenses for student (without chosen items & total count)\r\n  getAllStudentExpansesMandatoryAndOptionalByStudentId(studentId: number) {\r\n    return this.http.get<IStudentExpenseOriginListVM>(\r\n      `${environment.baseUrl}StudentExpanse/getStudentExpanseByStudentId/${studentId}`\r\n    );\r\n  }\r\n\r\n  addOptionalExpenses(data: IStudentExpenseAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}StudentExpanse/AddStudentExpanse`,\r\n      data\r\n    );\r\n  }\r\n\r\n  editOptionalExpenses(data: IStudentExpenseAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}StudentExpanse/EditStudentExpanse`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteOptionalExpenses(expenseId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}StudentExpanse/DeleteStudentExpanse/${expenseId}`\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region ////////// student discount\r\n  // get All student discounts\r\n  getAllStudentDiscountByStudentId(studentId: number) {\r\n    return this.http.get<{ StudentDicountList: IStudentDiscountVM[] }>(\r\n      `${environment.baseUrl}StudentDiscount/getAllStudentDiscountByStudentId/${studentId}`\r\n    );\r\n  }\r\n\r\n  addStudentDiscount(data: IStudentDiscountAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}StudentDiscount/AddStudentDiscount`,\r\n      data\r\n    );\r\n  }\r\n\r\n  editStudentDiscounts(data: IStudentDiscountAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}StudentDiscount/EditStudentDiscount`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteStudentDiscount(expenseId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}StudentDiscount/DeleteStudentDiscount/${expenseId}`\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region ////////// instalments\r\n  getAllInstallment(studentId: number, page: number) {\r\n    return this.http.get<IStudentInstallmentListVM>(\r\n      `${environment.baseUrl}StudentInstallment/getAllStudentInstallment/${studentId}/${page}`\r\n    );\r\n  }\r\n\r\n  getAllStudentInstallmentsDropDown(studentId: number) {\r\n    return this.http.get<IStudentInstallmentVM[]>(\r\n      `${environment.baseUrl}StudentInstallment/getAllStudentInstallment/${studentId}`\r\n    );\r\n  }\r\n\r\n  addEditInstallment(data: IStudentInstallmentAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}StudentInstallment/AddStudentInstallment`,\r\n      data\r\n    );\r\n  }\r\n  //#endregion\r\n}\r\n"],"names":["Validators","CustomeValidator","MatPaginator","MatSort","MatTableDataSource","DeleteDialogComponent","i0","ctx_r22","ctx_r25","ctx_r27","ctx_r38","ctx_r41","DeductionReasonsComponent","fb","spinner","translate","toastrMsg","dialog","route","authService","deductionReasonsService","onLangChange","subscribe","lang","curLang","queryParamMap","params","functionId","Number","get","getUserRowFunctions","res","length","rowFunctions","EduCompId","getEduCompId","getAllDeductionReasons","myForm","group","Id","Ar_Name","required","whiteSpace","En_Name","controls","dataSource","paginator","sort","e","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","DeductionReason","patchValue","console","log","show","getDeductionReasons","countItems","submitted","body","FormCtrl","_a","_b","_c","valid","addEditDeductionReason","returnValue","data","unshift","deductionReason","itemCount","success","i","findIndex","clearForm","hide","error","reset","setValue","open","msg","afterClosed","confirm","deleteDeductionReason","deleteDeductionReasons","splice","selectors","viewQuery","ctx","ctx_r24","ctx_r36","ctx_r39","DiscountTypeComponent","toastr","discountTypeService","returnAllDiscountTypes","Value","bigZero","ar_name","en_name","IsPercentage","Data","FormCtrls","page","getDiscountTypes","DiscountTypeList","itemsCounts","addEditDiscountType","discountType","deleteDiscountType","index","ctx_r34","ctx_r37","EmployeePayrollComponent","employeePayrollService","salaryItemService","returnAllEmployeePayrolls","getAllEmployees","getAllSalaryItems","ID","EmployeeID","SalaryItemID","getSalaryItemsDropdownMenu","salaryItemList","getEmployeePayrolls","EmployeePayrollList","id","addEmployeePayroll","updateEmployeePayroll","push","deleteEmployeePayroll","EmployeePenalityComponent","employeePenalityService","returnAllEmployeePenalitys","PenalityDate","Discreption","getEmployeePenalitys","EmployeePenalityList","addEmployeePenality","updateEmployeePenality","deleteEmployeePenality","RouterModule","PaymentStatementComponent","PayrollSetupComponent","ReceiptStatementComponent","StudentExpenseComponent","routes","path","component","FinancialRoutingModule","forChild","imports","exports","EventEmitter","ctx_r32","ctx_r44","ctx_r47","FinancialTransactionsComponent","StudentPaymentServ","paymentMethodService","StudentExpenseServ","datePipe","Date","getStudentPayments","getAllPaymentMethods","getAllStudentInstallments","studentInstallmentId","PaymentDate","PaymentMethodId","DocNom","startSortingTable","changes","studentId","sortingDataAccessor","item","property","PaymentMethodId_ArName","PaymentMethodId_ENName","totalAmount","ChangePaidUnpaidAmount","emit","getAllPaymentMethodsDropdown","paymentMethodList","getAllStudentInstallmentsDropDown","InstallmentList","getStudentPaymentsByStudentId","StudentInstallmentPaymentList","Payment","StudentInstallmentId","transform","addEditStudentPayment","addStudentPayment","student_installment_payment","updateStudentPayment","ChangeAmounts","Amount","returnString","InstallmentAmount","InstallmentDate","deleteStudentPayment","deleteStudentPayments","CommonModule","SharedModule","NgxSpinnerModule","MaterialModule","ReactiveFormsModule","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","StudentInstalmentsComponent","AllExpensesComponent","FinancialModule","provide","useClass","useValue","declarations","ctx_r50","ctx_r53","paymentStatementService","suppliersAndCustomersService","returnAllPaymentStatements","getAllExternalOrganization","Name","PaymentMethodID","SupplierID","DocumentNumber","getExternalOrgnizationsDropDown","SupplierList","ExternalOrgList","getPaymentStatements","PaymentStatementList","addPaymentStatement","updatePaymentStatement","deletePaymentStatement","ctx_r26","ctx_r29","payrollSetupService","returnAllPayrollSetups","Month","getPayrollSetups","PayrollSetupList","addPayrollSetup","updatePayrollSetup","deletePayrollSetup","receiptStatementService","returnAllReceiptStatements","CustomerID","CustomerList","getReceiptStatements","ReceiptStatementList","addReceiptStatement","updateReceiptStatement","deleteReceiptStatement","ctx_r33","ToastrMsg","DiscountTypeServ","authserv","currentLang","Discount_Ids","getOriginExpensesLists","getAllDiscountTypes","getAllStudentDiscounts","dataSourceMandatory","dataSourceOptional","expenseElement_Ar_Name","expenseElement_En_Name","sortMandatory","sortOptional","ChangeTotalAmount","getDiscountTypeDropdown","DiscountTypes","getAllStudentDiscountByStudentId","StudentDicountList","firstTimeToAddDiscount","map","discount","DisountTypeId","getAllStudentExpansesMandatoryAndOptionalByStudentId","StudentMandatoryExpensesList","StudentNotMandatoryExpensesList","getStudentExpenseData","getAllStudentchosenExpensesByStudentId","StudentChoiceExpensesList","firstTimeToAddOptionalExpenses","changeValuesOfCheckboksInTable","TotalAmount","totalAfterDiscount","AmountAfterDiscount","expense","checked","selected","editedList","student_user_id","academicYearExpanseIds","forEach","addOptionalExpenses","editOptionalExpenses","StudentExpanse","ChangeTotal","optionalChosenList","optionalSelectedId","academicYearExpanseId","includes","studentDiscounts","addStudentDiscount","editStudentDiscounts","StudentDiscount","ctx_r4","ctx_r6","ctx_r2","StudentServ","getAllStudents","getStudentAmountCardData","newAmount","cardData","TotalUnpaid","TotalPaid","newAmounts","GetAllStudentsDropDown","Students","AcceptedStudentList","studentIdCtrl","getStudentAmountData","decls","vars","consts","template","ctx_r35","studentInstallments","array","addStudentInstallmentForm","getStudentInstallments","StudentInstallmentsArr","StudentInstallmentForm","InstallmentsList","reduce","prev","minusNum","filteredarray","installment","curIndex","formIndex","firstId","deletedIds","removeAt","instalment","getAllInstallment","studentInstallmentList","StudentInstallment","addEditInstallment","updatedList","clear","environment","DeductionReasonsService","http","baseUrl","post","delete","factory","providedIn","EmployeePenalityService","put","EmployeePayrollService","FinancialTransactionsService","PaymentStatementService","PayrollSetupService","ReceiptStatementService","StudentExpenseService","expenseId"],"sourceRoot":"webpack:///"}