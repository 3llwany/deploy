{"version":3,"file":"src_app_auth_registration_module_ts.js","mappings":"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","sources":["./src/app/auth/error/error-page.component.ts","./src/app/auth/error/error-page.component.html","./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/forgot-password/forgot-password.component.html","./src/app/auth/login-others/login-others.component.ts","./src/app/auth/login-others/login-others.component.html","./src/app/auth/login/login-page.component.ts","./src/app/auth/login/login-page.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/registration-routing.module.ts","./src/app/auth/registration.module.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-error-page\",\r\n  templateUrl: \"./error-page.component.html\",\r\n  styleUrls: [\"./error-page.component.scss\"],\r\n})\r\nexport class ErrorPageComponent {}\r\n","<!--Error page starts-->\r\n<section id=\"error\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row auth-height full-height-vh\">\r\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\r\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\r\n            <div class=\"w-75 error-text mx-auto mt-4\">\r\n              <p>The page you are looking for might have beel removed, had it's name changed, or is temporarily unavailable.</p>\r\n            </div>\r\n            <a routerLink=\"\" class=\"btn btn-warning my-2\">Back To Home</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Error page ends-->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"./../../shared/validators/customeValid.validator\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  resetForm: FormGroup;\r\n  newPassForm: FormGroup;\r\n  submitted = false;\r\n  isFailed: boolean = false;\r\n  errMsg = \"\";\r\n  ifHaveCode: boolean = false;\r\n\r\n  constructor(\r\n    private authServ: AuthService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm = this.fb.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n\r\n    this.newPassForm = this.fb.group({\r\n      verificationCode: [\r\n        \"\",\r\n        [Validators.required, CustomeValidator.whiteSpace],\r\n      ],\r\n\r\n      new_password: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get email() {\r\n    return this.resetForm.controls[\"email\"];\r\n  }\r\n\r\n  get newPassCtrls() {\r\n    return this.newPassForm.controls;\r\n  }\r\n\r\n  // START Forgot Password\r\n  forgotPassword() {\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.authServ\r\n        .forgotPassword(this.resetForm.value)\r\n        .subscribe((res: any) => {\r\n          console.log(res);\r\n          if (res.returnValue == 0) {\r\n            this.ifHaveCode = true;\r\n            this.isFailed = false;\r\n            this.errMsg = \"تم إرسال كود التأكيد الي البريد الإلكتروني الخاص بك\";\r\n          } else {\r\n            this.ifHaveCode = false;\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  // START Forgot Password\r\n  resetPassword() {\r\n    this.isFailed = false;\r\n    if (this.newPassCtrls.valid) {\r\n      this.spinner.show();\r\n      this.authServ\r\n        .resetPassword(this.newPassCtrls.value)\r\n        .subscribe((res: any) => {\r\n          console.log(res);\r\n          if (\r\n            res.returnValue == -1 &&\r\n            res.returnString == \"Verification code is invalid.\"\r\n          ) {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          } else if (\r\n            res.returnValue == 0 &&\r\n            res.returnString == \"Password changed successfully.\"\r\n          ) {\r\n            this.router.navigateByUrl(\"auth/login\");\r\n            this.toastr.success(\r\n              \" تم تغير كلمة المرور بنجاح قم بتسجيل الدخول بكلمة المرور الجديدة\"\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!--Forgot Password Starts-->\r\n<section id=\"forgot-password\" class=\"auth-height\">\r\n  <div\r\n    class=\"row full-height-vh m-0 d-flex align-items-center justify-content-center\"\r\n  >\r\n    <div class=\"col-md-7 col-12\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\"\r\n              >\r\n                <img\r\n                  src=\"/assets/img/gallery/forgot.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"260\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <!-- Search  Email-->\r\n              <div *ngIf=\"!ifHaveCode\" class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">\r\n                  {{ \"auth.RecoverPassword\" | translate }}\r\n                </h4>\r\n                <p class=\"card-text mb-3\">\r\n                  {{ \"auth.RecoverPasswordMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"resetForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"email\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"email.invalid && (email.touched || submitted)\"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        please enter a correct email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </form>\r\n                <br />\r\n                <div\r\n                  class=\"d-flex flex-sm-row flex-column justify-content-between\"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    (click)=\"forgotPassword()\"\r\n                    class=\"btn btn-primary ml-sm-1\"\r\n                  >\r\n                    {{ \"General.SendCode\" | translate }}\r\n                  </button>\r\n                  <a\r\n                    mat-raised-button\r\n                    routerLink=\"/auth/login\"\r\n                    class=\"btn bg-light-primary mb-2 mb-sm-0\"\r\n                  >\r\n                    {{ \"auth.BackToLogin\" | translate }}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Send Code -->\r\n              <div *ngIf=\"ifHaveCode\" class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">\r\n                  {{ \"auth.NewPassword\" | translate }}\r\n                </h4>\r\n                <p class=\"card-text mb-3\">\r\n                  {{ \"auth.EnterVerificationCodeMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"newPassForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"auth.VerificationCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      placeholder=\"Enter verification code\"\r\n                      formControlName=\"verificationCode\"\r\n                      autocomplete=\"off\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        newPassCtrls.verificationCode.invalid &&\r\n                        (newPassCtrls.verificationCode.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          newPassCtrls.verificationCode.errors?.required ||\r\n                          newPassCtrls.verificationCode.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"auth.NewPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"Enter New Password\"\r\n                      formControlName=\"new_password\"\r\n                      autocomplete=\"off\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        newPassCtrls.new_password.invalid &&\r\n                        (newPassCtrls.new_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"newPassCtrls.new_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span></mat-hint\r\n                    >\r\n                  </mat-form-field>\r\n                </form>\r\n                <br />\r\n                <div\r\n                  class=\"d-flex flex-sm-row flex-column justify-content-between\"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    (click)=\"resetPassword()\"\r\n                    class=\"btn btn-primary ml-sm-1 flex-right\"\r\n                  >\r\n                    {{ \"General.Save\" | translate }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Forgot Password Ends-->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-others',\r\n  templateUrl: './login-others.component.html',\r\n  styleUrls: ['./login-others.component.scss']\r\n})\r\nexport class LoginOthersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row justify-content-center align-items-center\">\r\n    <div class=\"col-md-4 col-12\">\r\n      <a href=\"https://testmozakretyangular.cloudiax.com/auth/login\">\r\n        <mat-card class=\"bg-light-info\">\r\n          <img\r\n            mat-card-image\r\n            src=\"assets\\img\\gallery\\register.png\"\r\n            alt=\"\"\r\n            style=\"height: 300px\"\r\n          />\r\n          <mat-card-content>\r\n            <div class=\"media\">\r\n              <div class=\"media-body text-center white\">\r\n                <h4 class=\"card-text\">\r\n                  {{ \"auth.loginAsStudent\" | translate }}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </a>\r\n    </div>\r\n    <div class=\"col-md-4 col-12\">\r\n      <a routerLink=\"/auth/login\">\r\n        <mat-card class=\"bg-light-warning\">\r\n          <img\r\n            mat-card-image\r\n            src=\"assets\\img\\gallery\\forgot.png\"\r\n            alt=\"قسم اللغة الانجليزية \"\r\n            style=\"height: 300px\"\r\n          />\r\n          <mat-card-content>\r\n            <div class=\"media\">\r\n              <div class=\"media-body text-center white\">\r\n                <h4 class=\"card-text\">\r\n                  {{ \"auth.loginAsAdmin\" | translate }}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { loginMV, LoginResponseModel } from \"app/shared/models/auth/auth\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-login-page\",\r\n  templateUrl: \"./login-page.component.html\",\r\n  styleUrls: [\"./login-page.component.scss\"],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  submitted = false;\r\n  isFailed = false;\r\n  errMsg = \"\";\r\n  returnUrl?: any;\r\n\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"];\r\n    this.loginForm = this.fb.group({\r\n      account_email: [\"\", [Validators.required, Validators.email]],\r\n      account_password: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  // login\r\n  login() {\r\n    Object.keys(localStorage).forEach((key) => {\r\n      if (!key.includes(\"currentLang\")) delete localStorage[key];\r\n    });\r\n    this.submitted = true;\r\n    if (this.loginForm.valid) {\r\n      this.spinner.show();\r\n      this.authService\r\n        .login<loginMV, LoginResponseModel>(this.loginForm.value)\r\n        .subscribe((res: LoginResponseModel) => {\r\n          this.spinner.hide();\r\n          this.submitted = false;\r\n          this.isFailed = false;\r\n          console.log(\"login\", res);\r\n          if (res.returnValue == 0) {\r\n            localStorage.setItem(\"token\", res.authToken.token);\r\n            localStorage.setItem(\"user_type_Id\", String(res.user_type_id)); //res.user_type_id; //res.authToken.type_Id;\r\n            localStorage.setItem(\"yearId\", String(res.yearId));\r\n            localStorage.setItem(\r\n              \"EduCompList\",\r\n              String(res.authToken.EduCompList)\r\n            );\r\n            this.authService.setEduCompId(res.authToken.EduCompList[0]);\r\n            //  localStorage.setItem(\"EduCompId\", res.authToken.EduCompList[0]);\r\n            localStorage.setItem(\"userId\", String(res.user_id));\r\n            localStorage.setItem(\"classId\", String(res.academicClassRoomId));\r\n\r\n            if (res.user_type_id == 2)\r\n              this.router.navigateByUrl(this.returnUrl ?? \"student\");\r\n            else if (res.user_type_id == 6)\r\n              this.router.navigateByUrl(\"/support/search\" ?? \"home\");\r\n            else this.router.navigateByUrl(\"/home\");\r\n          }\r\n\r\n          // if login Error\r\n          else if (res.returnValue == -1) {\r\n            this.isFailed = true;\r\n            this.errMsg = \"البريد الإلكتروني او كلمه السر غير صحيحه\";\r\n          } else {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!--Login Page Starts-->\r\n<section id=\"login\">\r\n  <div class=\"row auth-height full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/login.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"300\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">{{ \"auth.Login\" | translate }}</h4>\r\n                <p>{{ \"auth.WelcomeBackMsg\" | translate }}</p>\r\n\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"loginForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"account_email\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_email.invalid &&\r\n                        (FormCtrls.account_email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span></mat-hint\r\n                    >\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Password\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"password\"\r\n                      formControlName=\"account_password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_password.invalid &&\r\n                        (FormCtrls.account_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        This is required\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <br />\r\n\r\n                  <div\r\n                    class=\"d-sm-flex justify-content-between mb-3 font-small-2\"\r\n                  >\r\n                    <a routerLink=\"/auth/reset-password\">\r\n                      {{ \"auth.ForgotPassword\" | translate }}</a\r\n                    >\r\n                  </div>\r\n                  <div>\r\n                    <a\r\n                      mat-raised-button\r\n                      class=\"btn btn-primary mb-1 mb-sm-0 btn-block\"\r\n                      (click)=\"login()\"\r\n                    >\r\n                      {{ \"auth.Login\" | translate }}\r\n                    </a>\r\n                    <a\r\n                      mat-raised-button\r\n                      routerLink=\"/auth/register\"\r\n                      class=\"btn bg-light-primary mb-2 mb-sm-0 btn-block\"\r\n                    >\r\n                      {{ \"auth.CreateAccount\" | translate }}\r\n                    </a>\r\n                  </div>\r\n                </form>\r\n                <hr />\r\n                <ngx-spinner></ngx-spinner>\r\n                <!-- <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <h6 class=\"text-primary m-0\">Or Login With</h6>\r\n\r\n                  <div class=\"login-options\">\r\n                    <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\r\n                    <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\r\n                  </div>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Login Page Ends-->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RegisterMV } from \"app/shared/models/auth/auth\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.scss\"],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  isFailed = false;\r\n  errMsg = \"\";\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        Id: [null],\r\n        userTypeId: [2, Validators.required],\r\n        ar_name: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n        mobile: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n            Validators.minLength(11),\r\n            Validators.maxLength(11),\r\n            CustomeValidator.startsWith,\r\n          ],\r\n        ],\r\n        account_email: [\"\", [Validators.required, Validators.email]],\r\n        account_password: [\r\n          \"\",\r\n          [Validators.required, CustomeValidator.whiteSpace],\r\n        ],\r\n        confirmPassword: [\"\", [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\r\n          \"account_password\",\r\n          \"confirmPassword\"\r\n        ),\r\n      }\r\n    );\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log(this.myForm.value);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.authService\r\n        .Registeration<RegisterMV, any>(this.myForm.value)\r\n        .subscribe((res) => {\r\n          console.log(res);\r\n          this.spinner.hide();\r\n          this.submitted = false;\r\n          this.isFailed = false;\r\n          if (res.returnValue == 1) {\r\n            localStorage.setItem(\"token\", res.token.token);\r\n            localStorage.setItem(\"user_type_Id\", res.user_type_id);\r\n            if (res.user_type_id == \"2\") {\r\n              this.router.navigateByUrl(\"/auth/educational-details\");\r\n            } else {\r\n              this.router.navigateByUrl(\"/home\");\r\n            }\r\n          }\r\n\r\n          if (res.returnValue == 0) {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!--Registration Page Starts-->\r\n<section id=\"regestration\" class=\"auth-height\">\r\n  <div class=\"row full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/register.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"350\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"card-title mb-2\">\r\n                  {{ \"auth.CreateAccount\" | translate }}\r\n                </h4>\r\n                <p>\r\n                  {{ \"auth.FillFormMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"myForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"ar_name\"\r\n                      placeholder=\"Name\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.ar_name.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.whiteSpace ||\r\n                          FormCtrls.ar_name.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"mobile\"\r\n                      placeholder=\"Mobile\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.mobile.invalid &&\r\n                        (FormCtrls.mobile.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.mobile.errors?.required ||\r\n                          FormCtrls.mobile.errors?.whiteSpace ||\r\n                          FormCtrls.mobile.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.mobile.errors?.minlength ||\r\n                          FormCtrls.mobile.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.mobile.errors?.startsWith\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"account_email\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_email.invalid &&\r\n                        (FormCtrls.account_email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Password\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"password\"\r\n                      formControlName=\"account_password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_password.invalid &&\r\n                        (FormCtrls.account_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ConfirmPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      formControlName=\"confirmPassword\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.confirmPassword.invalid &&\r\n                        (FormCtrls.confirmPassword.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.confirmPassword.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        You must enter a confirm password.\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.confirmPassword.errors?.mustMatch\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        Password and confirm not match\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <!-- <mat-radio-group formControlName=\"userTypeId\" class=\"row\">\r\n                    <div class=\"col-6\">\r\n                      <mat-radio-button [value]=\"2\">\r\n                        {{ \"labels.Studnt\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-6\">\r\n                      <mat-radio-button [value]=\"3\">\r\n                        {{ \"labels.Parent\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group> -->\r\n                </form>\r\n\r\n                <br />\r\n                <div>\r\n                  <a\r\n                    mat-raised-button\r\n                    (click)=\"onSubmit()\"\r\n                    class=\"btn btn-primary btn-block mb-1 mb-sm-0\"\r\n                  >\r\n                    {{ \"auth.CreateAccount\" | translate }}\r\n                  </a>\r\n                  <a\r\n                    mat-raised-button\r\n                    routerLink=\"/auth/login\"\r\n                    class=\"btn bg-light-primary btn-block mb-2 mb-sm-0\"\r\n                  >\r\n                    {{ \"auth.BackToLogin\" | translate }}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Registration Page Ends-->\r\n<ngx-spinner></ngx-spinner>\r\n"," import { RegisterComponent } from \"./register/register.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { NotUserGuard } from \"app/shared/services/auth/Guards/auth/not-user.guard\";\r\nimport { IsStudentGuard } from \"app/shared/services/auth/Guards/roles/is-student.guard\";\r\nimport { PendingChangesGuard } from \"app/shared/services/auth/Guards/auth/pending-changes.guard\";\r\nimport { LoginOthersComponent } from \"./login-others/login-others.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"error\",\r\n        component: ErrorPageComponent,\r\n      },\r\n\r\n      {\r\n        path: \"login\",\r\n        component: LoginPageComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n\r\n      {\r\n        path: \"login-main\",\r\n        component: LoginOthersComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n\r\n      {\r\n        path: \"register\",\r\n        component: RegisterComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n      {\r\n        path: \"reset-password\",\r\n        component: ForgotPasswordComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n\r\n\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistrationRoutingModule {}\r\n","import { TranslateModule } from \"@ngx-translate/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { MaterialModule } from \"./../shared/material/material.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nimport { RegistrationRoutingModule } from \"./registration-routing.module\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\n import { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { LoginOthersComponent } from './login-others/login-others.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RegistrationRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    TranslateModule,\r\n  ],\r\n  declarations: [\r\n    ErrorPageComponent,\r\n    LoginPageComponent,\r\n    RegisterComponent,\r\n     ForgotPasswordComponent,\r\n     LoginOthersComponent,\r\n  ],\r\n})\r\nexport class RegistrationModule {}\r\n"],"names":["ErrorPageComponent","selectors","decls","vars","consts","template","i0","Validators","CustomeValidator","ctx_r8","ctx_r17","ForgotPasswordComponent","authServ","router","fb","toastr","spinner","resetForm","group","email","required","newPassForm","verificationCode","whiteSpace","new_password","controls","valid","show","forgotPassword","value","subscribe","res","console","log","returnValue","ifHaveCode","isFailed","errMsg","returnString","hide","newPassCtrls","resetPassword","navigateByUrl","success","LoginOthersComponent","LoginPageComponent","authService","route","returnUrl","snapshot","queryParams","loginForm","account_email","account_password","Object","keys","localStorage","forEach","key","includes","submitted","login","setItem","authToken","token","String","user_type_id","yearId","EduCompList","setEduCompId","user_id","academicClassRoomId","_a","ctx","RegisterComponent","myForm","Id","userTypeId","ar_name","pattern","mobile","minLength","maxLength","startsWith","confirmPassword","validator","mustMatch","Registeration","RouterModule","NotUserGuard","routes","path","children","component","canActivate","RegistrationRoutingModule","forChild","imports","exports","TranslateModule","MaterialModule","CommonModule","FormsModule","ReactiveFormsModule","NgbModule","NgxSpinnerModule","RegistrationModule","declarations"],"sourceRoot":"webpack:///"}