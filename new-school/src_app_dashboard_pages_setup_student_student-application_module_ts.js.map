{"version":3,"file":"src_app_dashboard_pages_setup_student_student-application_module_ts.js","mappings":"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","sources":["./src/app/dashboard/pages/setup/student/application/add-application/add-application.component.html","./src/app/dashboard/pages/setup/student/application/add-application/add-application.component.ts","./src/app/dashboard/pages/setup/student/application/application-index/application-index.component.ts","./src/app/dashboard/pages/setup/student/application/application-index/application-index.component.html","./src/app/dashboard/pages/setup/student/application/change-status/change-status.component.ts","./src/app/dashboard/pages/setup/student/application/change-status/change-status.component.html","./src/app/dashboard/pages/setup/student/discount/discount.component.ts","./src/app/dashboard/pages/setup/student/discount/discount.component.html","./src/app/dashboard/pages/setup/student/profile/add-student/add-student.component.html","./src/app/dashboard/pages/setup/student/profile/add-student/add-student.component.ts","./src/app/dashboard/pages/setup/student/profile/student-profile-index/student-profile-index.component.ts","./src/app/dashboard/pages/setup/student/profile/student-profile-index/student-profile-index.component.html","./src/app/dashboard/pages/setup/student/student-application-routing.module.ts","./src/app/dashboard/pages/setup/student/student-application.module.ts","./src/app/dashboard/pages/setup/student/student-exams/student-create-exam/student-create-exam.component.ts","./src/app/dashboard/pages/setup/student/student-exams/student-create-exam/student-create-exam.component.html","./src/app/dashboard/pages/setup/student/student-exams/student-exam-index/student-exam-index.component.ts","./src/app/dashboard/pages/setup/student/student-exams/student-exam-index/student-exam-index.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/attachments/attachments.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/attachments/attachments.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/behave-info/behave-info.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/behave-info/behave-info.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/bus-line/bus-line.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/bus-line/bus-line.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/education-info/class-info/class-info.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/education-info/class-info/class-info.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/education-info/education-info-core/education-info.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/education-info/education-info-core/education-info.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/education-info/gradding-statement/gradding-statement.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/education-info/gradding-statement/gradding-statement.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/education-info/teachers/teachers.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/education-info/teachers/teachers.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/guardian-info/guardian-info.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/guardian-info/guardian-info.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/health-info/chronic-disease/chronic-disease.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/health-info/chronic-disease/chronic-disease.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/health-info/health-info-core/health-info.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/health-info/health-info-core/health-info.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/health-info/vaccination/vaccination.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/health-info/vaccination/vaccination.component.html","./src/app/dashboard/pages/setup/student/student-sub-info/student-classroom/student-classroom.component.ts","./src/app/dashboard/pages/setup/student/student-sub-info/student-classroom/student-classroom.component.html","./src/app/dashboard/services/setup/student/attachment.service.ts","./src/app/dashboard/services/setup/student/behave-info.service.ts","./src/app/dashboard/services/setup/student/discount.service.ts","./src/app/dashboard/services/setup/student/education-info.service.ts","./src/app/dashboard/services/setup/student/guardian-info.service.ts","./src/app/dashboard/services/setup/student/health-info.service.ts","./src/app/dashboard/services/setup/student/student-bus-line.service.ts","./src/app/dashboard/services/setup/student/student-exams.service.ts"],"sourcesContent":["<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Application -->\r\n      <mat-card-title>\r\n        <span *ngIf=\"!applicationId\">\r\n          {{ \"StudentSetup.addApplication\" | translate }}\r\n        </span>\r\n        <!-- edit Application -->\r\n        <span *ngIf=\"applicationId\">\r\n          {{ \"StudentSetup.updateApplication\" | translate }}\r\n          <!-- - {{ Application?.student_name }} -->\r\n        </span>\r\n\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/students/application/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <app-student-basic-info\r\n              (chengeStudentId)=\"setStudentId($event)\"\r\n              [StudentID]=\"applicationId\"\r\n              [isPreUniversityStudent]=\"isPreUniversityStudent\"\r\n              [IsApplicant]=\"true\"\r\n            ></app-student-basic-info>\r\n\r\n            <ng-container *ngIf=\"isPreUniversityStudent\">\r\n              <hr class=\"break\" />\r\n              <app-guardian-info\r\n                [StudentID]=\"applicationId\"\r\n                [IsApplicant]=\"true\"\r\n              ></app-guardian-info>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IStudentInfoGetVM } from \"app/dashboard/models/setup/student/application\";\r\nimport { ApplicationService } from \"app/dashboard/services/setup/student/application.service\";\r\nimport { StudentService } from \"app/dashboard/services/setup/student/student.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-application\",\r\n  templateUrl: \"./add-application.component.html\",\r\n  styleUrls: [\"./add-application.component.scss\"],\r\n})\r\nexport class AddApplicationComponent implements OnInit {\r\n  // Application: IStudentInfoGetVM;\r\n  applicationId: number = 0;\r\n  isPreUniversityStudent: boolean = false;\r\n\r\n  currentLang: string;\r\n  functionId: number;\r\n  EduCompId: number;\r\n\r\n  constructor(\r\n    private StudentServ: StudentService,\r\n    private ApplicationServ: ApplicationService,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    route.paramMap.subscribe((params) => {\r\n      let id = Number(params.get(\"applicationId\"));\r\n      if (id) {\r\n        this.applicationId = id;\r\n        // console.log(id);\r\n        // StudentServ.getApplicantStudentInfoById(id).subscribe((res) => {\r\n        //   this.Application = res;\r\n        // });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkIfPreUniversityStudent();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.checkIfPreUniversityStudent();\r\n    });\r\n  }\r\n\r\n  // if Pre University Student > need parents || else > doesn't need parents\r\n  checkIfPreUniversityStudent() {\r\n    this.ApplicationServ.isPreUniversityStudent(this.EduCompId).subscribe(\r\n      (res) => {\r\n        this.isPreUniversityStudent = res;\r\n      }\r\n    );\r\n  }\r\n\r\n  setStudentId(id: number) {\r\n    this.applicationId = id;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IApplicationGetVM } from \"app/dashboard/models/setup/student/application\";\r\nimport { ApplicationService } from \"app/dashboard/services/setup/student/application.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-application-index\",\r\n  templateUrl: \"./application-index.component.html\",\r\n  styleUrls: [\"./application-index.component.scss\"],\r\n})\r\nexport class ApplicationIndexComponent implements OnInit {\r\n  Applicants: IApplicationGetVM[] = [];\r\n\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Edit\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"Status\" },\r\n  // ];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"studentName\", \"ststusId\", \"actions\"];\r\n  dataSource: MatTableDataSource<IApplicationGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private ApplicationServ: ApplicationService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllApplicants(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllApplicants(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // get all applications\r\n  getAllApplicants(page: number) {\r\n    this.spinner.show();\r\n\r\n    this.ApplicationServ.getAllApplicants(page, this.EduCompId).subscribe(\r\n      (res) => {\r\n        if (res) {\r\n          this.Applicants = res.StudentApplication;\r\n          this.dataSource = new MatTableDataSource(this.Applicants);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n          // console.log(\"Applicants: >> \", res);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(application: IApplicationGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: application.studentName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteApplication(application);\r\n      });\r\n  }\r\n\r\n  // delete application\r\n  deleteApplication(application: IApplicationGetVM) {\r\n    this.spinner.show();\r\n    this.ApplicationServ.deleteApplicant(\r\n      application.studentApplicationId\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == application);\r\n        this.dataSource.data.splice(i, 1);\r\n        this.dataSource.sort = this.sort;\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"StudentSetup.applications\" | translate }}\r\n\r\n        <!-- add Application -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../add-application\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n        >\r\n          {{ \"StudentSetup.apply\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Code column -->\r\n            <!-- <ng-container matColumnDef=\"Code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"General.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let application\">\r\n                {{ application.Code }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- name column -->\r\n            <ng-container matColumnDef=\"studentName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let application\">\r\n                {{ application.studentName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Status column -->\r\n            <ng-container matColumnDef=\"ststusId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let application\">\r\n                <span *ngIf=\"application.ststusId == 1\" class=\"text-success\">\r\n                  <i class=\"fa fa-check-circle-o\"></i>\r\n                  {{ \"StudentSetup.Accepted\" | translate }}\r\n                </span>\r\n                <span *ngIf=\"application.ststusId == 2\" class=\"text-danger\">\r\n                  <i class=\"fa fa-times-circle-o\"></i>\r\n                  {{ \"StudentSetup.Rejected\" | translate }}\r\n                </span>\r\n                <span *ngIf=\"application.ststusId == 3\" class=\"text-warning\">\r\n                  <i class=\"fa fa-info-circle\"></i>\r\n                  {{ \"StudentSetup.Waiting\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let application\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        routerLink=\"../edit-application/{{\r\n                          application.studentApplicationId\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleteDialog(application)\"\r\n                      >\r\n                        <i class=\"ft-trash mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Status'\"\r\n                        routerLink=\"../change-status/{{ application.id }}/{{\r\n                          application.studentApplicationId\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit mr-2\"></i>\r\n                        {{ \"StudentSetup.changeStatus\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"9\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllApplicants($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of applications\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IChangeStatusVM,\r\n  IrejectionReasonVM,\r\n  IStatusVM,\r\n  IStudentInfoStatusVM,\r\n} from \"app/dashboard/models/setup/student/application\";\r\nimport { ApplicationService } from \"app/dashboard/services/setup/student/application.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-change-status\",\r\n  templateUrl: \"./change-status.component.html\",\r\n  styleUrls: [\"./change-status.component.scss\"],\r\n})\r\nexport class ChangeStatusComponent implements OnInit {\r\n  Application: IStudentInfoStatusVM;\r\n  applicationId: number;\r\n\r\n  StatusList: IStatusVM[] = [];\r\n  Reasons: IrejectionReasonVM[] = [];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private ApplicationServ: ApplicationService,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    private Router: Router,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    route.paramMap.subscribe((params) => {\r\n      let id = Number(params.get(\"statusApplicationId\"));\r\n      this.applicationId = Number(params.get(\"applicationId\"));\r\n      if (id) {\r\n        // console.log(id);\r\n        this.getApplication(id);\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllReasons();\r\n    this.getAllStatus();\r\n\r\n    this.myForm = this.fb.group({\r\n      student_name: [\r\n        {\r\n          value: [],\r\n          disabled: true,\r\n        },\r\n      ],\r\n      statusId: [\"\", [Validators.required]],\r\n      RejectionReasonId: [\"\"],\r\n      Notes: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStatus();\r\n      this.getAllStatus();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get current Application\r\n  getAllStatus() {\r\n    this.spinner.show();\r\n    this.ApplicationServ.getAllApplicationStatus().subscribe((res) => {\r\n      this.StatusList = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get current Application\r\n  getApplication(statusAppId: number) {\r\n    this.spinner.show();\r\n    this.ApplicationServ.getApplicantStatusInfoById(statusAppId).subscribe(\r\n      (res) => {\r\n        this.Application = res[0];\r\n        this.myForm.patchValue(this.Application);\r\n        // console.log(this.myForm.value, res[0]);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get reasons\r\n  getAllReasons() {\r\n    this.spinner.show();\r\n    this.ApplicationServ.getAllRejectionReasons().subscribe((res) => {\r\n      if (res) this.Reasons = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // change validation > reason input\r\n  onChangeStatus(statusId: number) {\r\n    // console.log(statusId);\r\n    if (statusId == 2) {\r\n      this.formCtrls?.RejectionReasonId?.setValidators([Validators.required]);\r\n      this.formCtrls?.RejectionReasonId?.updateValueAndValidity();\r\n    } else {\r\n      this.formCtrls?.RejectionReasonId?.clearValidators();\r\n      this.formCtrls?.RejectionReasonId?.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  // change status\r\n  changeStatus() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let data: IChangeStatusVM = {\r\n        StudentAppId: this.applicationId,\r\n        StatusId: this.formCtrls?.statusId?.value,\r\n      };\r\n      // if rejected\r\n      if (this.formCtrls?.statusId?.value == 2) {\r\n        data.RejectionReasonId = this.formCtrls?.RejectionReasonId?.value;\r\n        data.Notes = this.formCtrls?.Notes?.value;\r\n      }\r\n      // console.log(\"status\", data);\r\n\r\n      this.spinner.show();\r\n      this.ApplicationServ.changeStatus(data).subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n          // this.myForm.reset();\r\n          this.submitted = false;\r\n\r\n          this.Router.navigate([\"/dashboard/students/application/index\"], {\r\n            queryParams: { functionId: this.functionId },\r\n          });\r\n          // this.getApplication();\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Application -->\r\n      <mat-card-title>\r\n        <span>\r\n          {{ \"StudentSetup.changeStatus\" | translate }}\r\n        </span>\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/students/application/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\">\r\n                    <!-- name input -->\r\n                    <div class=\"col-md-8 col-lg-6 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.Name\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"text\"\r\n                          formControlName=\"student_name\"\r\n                        />\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- status -->\r\n                <div class=\"col-md-8 col-lg-6 col-12 mb-3\">\r\n                  <label class=\"text-info mr-1\"\r\n                    >{{ \"labels.Status\" | translate }}\r\n                  </label>\r\n                  <mat-radio-group\r\n                    class=\"radio-group\"\r\n                    formControlName=\"statusId\"\r\n                    (change)=\"onChangeStatus(formCtrls?.statusId.value)\"\r\n                  >\r\n                    <mat-radio-button\r\n                      *ngFor=\"let status of StatusList\"\r\n                      [value]=\"status.id\"\r\n                      class=\"radio-button\"\r\n                    >\r\n                      {{\r\n                        currentLang == \"ar\" ? status.Ar_Name : status.En_Name\r\n                      }}\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- reason input -->\r\n                <div\r\n                  class=\"col-md-4 col-lg-6 col-12\"\r\n                  *ngIf=\"formCtrls?.statusId.value == 2\"\r\n                >\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Reason\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"RejectionReasonId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Reason of Reasons\"\r\n                        [value]=\"Reason.id\"\r\n                      >\r\n                        {{ Reason.ReasonText }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.RejectionReasonId?.invalid &&\r\n                        (formCtrls?.RejectionReasonId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"formCtrls?.RejectionReasonId?.errors?.required\"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- notes input -->\r\n                <div class=\"col-12\" *ngIf=\"formCtrls?.statusId.value == 2\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Notes\" | translate }}\r\n                    </mat-label>\r\n                    <textarea matInput formControlName=\"Notes\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- change Status -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info mb-1\"\r\n          (click)=\"changeStatus()\"\r\n          [disabled]=\"myForm.pristine\"\r\n        >\r\n          {{ \"General.Save\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentDiscountGetVM,\r\n  IStudentDiscountAddEditVM,\r\n} from \"app/dashboard/models/setup/student/discount\";\r\nimport { DiscountService } from \"app/dashboard/services/setup/student/discount.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { IAcademicYear } from \"app/dashboard/models/setup/educational-setup/academic-year\";\r\nimport { AcademicYearService } from \"app/dashboard/services/setup/educational-setup/academic-year.service\";\r\nimport { DiscountTypeService } from \"app/dashboard/services/Financial/discount-type.service\";\r\n\r\n@Component({\r\n  selector: \"app-discount\",\r\n  templateUrl: \"./discount.component.html\",\r\n  styleUrls: [\"./discount.component.scss\"],\r\n})\r\nexport class DiscountComponent implements OnInit {\r\n  StudentDiscounts: IStudentDiscountGetVM[] = [];\r\n  academicYears: IAcademicYear[];\r\n  discountTypes: any[] = [];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"AcademicYear\",\r\n    \"DiscountType\",\r\n    \"Status\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IStudentDiscountGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private StudentDiscountServ: DiscountService,\r\n    private AcademicYearServ: AcademicYearService,\r\n    private DiscountTypeServ: DiscountTypeService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStudentDiscounts(1);\r\n    this.getAllAcademicYears();\r\n    this.getAllDiscountTypes();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      AcademicYearId: [\"\", [Validators.required]],\r\n      DiscountTypeId: [\"\", [Validators.required]],\r\n      Status: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      // custom sort\r\n      this.dataSource.sortingDataAccessor = (item, property) => {\r\n        switch (property) {\r\n          case \"AcademicYear\":\r\n            item.AcademicYear?.fromDate;\r\n          case \"DiscountType\":\r\n            return this.currentLang == \"ar\"\r\n              ? item.DiscountType?.Ar_Name\r\n              : item.DiscountType?.En_Name;\r\n          default:\r\n            return item[property];\r\n        }\r\n      };\r\n      this.dataSource.sort = this.sort;\r\n\r\n      // custom filter\r\n      this.dataSource.filterPredicate = (\r\n        data: IStudentDiscountGetVM,\r\n        filter\r\n      ) => {\r\n        return (\r\n          data.AcademicYear.fromDate.indexOf(filter) != -1 ||\r\n          (this.currentLang == \"ar\"\r\n            ? data.DiscountType.Ar_Name.toLocaleLowerCase().indexOf(filter) !=\r\n              -1\r\n            : data.DiscountType.En_Name.toLocaleLowerCase().indexOf(filter) !=\r\n              -1)\r\n        );\r\n      };\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudentDiscounts(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get Academic Year >> dropDown\r\n  getAllAcademicYears() {\r\n    this.spinner.show();\r\n    this.AcademicYearServ.getYearsDropdown().subscribe(\r\n      (res) => {\r\n        if (res) this.academicYears = res.academicEduYearList;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get Discount Type >> dropDown\r\n  getAllDiscountTypes() {\r\n    this.spinner.show();\r\n    this.DiscountTypeServ.getDiscountTypeDropdown(this.EduCompId).subscribe((res: any[]) => {\r\n      if (res) this.discountTypes = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get all student Discounts\r\n  getAllStudentDiscounts(page: number) {\r\n    this.curPage = page;\r\n\r\n    this.spinner.show();\r\n    this.StudentDiscountServ.getAllStudentDiscounts(page).subscribe((res) => {\r\n      if (res) {\r\n        this.StudentDiscounts = res.StudentDiscountList;\r\n        this.dataSource = new MatTableDataSource(this.StudentDiscounts);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"StudentDiscounts: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let studentDiscount = {} as IStudentDiscountAddEditVM;\r\n      studentDiscount.EduCompId = this.EduCompId;\r\n      studentDiscount.AcademicYearId = this.formCtrls.AcademicYearId?.value;\r\n      studentDiscount.DiscountTypeId = this.formCtrls.DiscountTypeId?.value;\r\n      studentDiscount.Status = this.formCtrls.Status?.value;\r\n      console.log(\"studentDiscount\", studentDiscount);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateStudentDiscount(studentDiscount)\r\n        : this.addStudentDiscount(studentDiscount);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add student Discount\r\n  addStudentDiscount(studentDiscount: IStudentDiscountAddEditVM) {\r\n    this.spinner.show();\r\n    this.StudentDiscountServ.addStudentDiscount(studentDiscount).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.getAllStudentDiscounts(this.curPage);\r\n          this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get form values to update\r\n  toEditStudentDiscount(studentDiscount: IStudentDiscountGetVM) {\r\n    this.myForm.patchValue(studentDiscount);\r\n    this.formCtrls.GovernorateId?.setValue(\r\n      studentDiscount.AcademicYear.academicEduYearId\r\n    );\r\n    this.formCtrls.CityId?.setValue(studentDiscount.DiscountType.Id);\r\n  }\r\n\r\n  // update student Discount\r\n  updateStudentDiscount(studentDiscount: IStudentDiscountAddEditVM) {\r\n    this.spinner.show();\r\n    this.StudentDiscountServ.updateStudentDiscount(\r\n      this.formCtrls.Id.value,\r\n      studentDiscount\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(studentDiscount: IStudentDiscountGetVM): void {\r\n    let name = `${studentDiscount.AcademicYear.fromDate} / ${studentDiscount.AcademicYear.toDate} - ${studentDiscount.DiscountType.Ar_Name}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStudentDiscount(studentDiscount);\r\n      });\r\n  }\r\n\r\n  // delete student Discount\r\n  deleteStudentDiscount(studentDiscount: IStudentDiscountGetVM) {\r\n    this.spinner.show();\r\n    this.StudentDiscountServ.deleteStudentDiscount(\r\n      studentDiscount.Id\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == studentDiscount);\r\n        this.dataSource.data.splice(i, 1);\r\n\r\n        this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add StudentDiscount -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"StudentSetup.addStudentDiscount\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit StudentDiscount -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"StudentSetup.updateStudentDiscount\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n            <!-- <form [formGroup]=\"myForm\" class=\"form-container\"> -->\r\n              <div class=\"row\">\r\n                <!-- Academic Year input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"EducationalSetup.AcademicYear\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"AcademicYearId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let academicYear of academicYears\"\r\n                        [value]=\"academicYear.ID\"\r\n                      >\r\n                        {{ academicYear?.FromDate / academicYear?.ToDate }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.AcademicYearId.invalid &&\r\n                        (formCtrls?.AcademicYearId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.AcademicYearId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Discount Type input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.DiscountType\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"DiscountTypeId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let discountType of discountTypes\"\r\n                        [value]=\"discountType.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? discountType?.Ar_Name\r\n                            : discountType?.En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.DiscountTypeId.invalid &&\r\n                        (formCtrls?.DiscountTypeId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.DiscountTypeId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Status input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"Status\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <!-- <mat-option\r\n                        *ngFor=\"let status of statusList\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? status?.Ar_Name\r\n                            : status?.En_Name\r\n                        }}\r\n                      </mat-option> -->\r\n                      <mat-option value=\"Single\">Single</mat-option>\r\n                      <mat-option value=\"Multi\">Multi</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Status.invalid &&\r\n                        (formCtrls?.Status.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.Status.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add StudentDiscount -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit StudentDiscount -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Cancel\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"StudentSetup.studentDiscounts\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Academic Year column -->\r\n            <ng-container matColumnDef=\"AcademicYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.AcademicYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let studentDiscount\">\r\n                {{\r\n                  studentDiscount?.AcademicYear?.FromDate /\r\n                    studentDiscount?.AcademicYear?.ToDate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Discount Type column -->\r\n            <ng-container matColumnDef=\"DiscountType\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.DiscountType\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let studentDiscount\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? studentDiscount?.DiscountType?.Ar_Name\r\n                    : studentDiscount?.DiscountType?.En_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Status column -->\r\n            <ng-container matColumnDef=\"Status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let studentDiscount\">\r\n                <!-- {{\r\n                  currentLang == \"ar\"\r\n                    ? studentDiscount?.Status?.Ar_Name\r\n                    : studentDiscount?.Status?.En_Name\r\n                }} -->\r\n                studentDiscount?.Status\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let studentDiscount\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditStudentDiscount(studentDiscount)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(studentDiscount)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStudentDiscounts($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of studentDiscounts\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <!-- add Student -->\r\n        <span *ngIf=\"!applicationId\">\r\n          {{ \"StudentSetup.addStudent\" | translate }}\r\n        </span>\r\n        <!-- edit Student -->\r\n        <span *ngIf=\"applicationId\">\r\n          {{ \"StudentSetup.updateStudent\" | translate }}\r\n          <!-- -\r\n          {{ Student?.student_name }} -->\r\n        </span>\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/students/profile/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid mb-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <!-- student info -->\r\n            <!-- <app-student-basic-info\r\n              (chengeStudentId)=\"setStudentId($event)\"\r\n              [StudentID]=\"applicationId\"\r\n              [isPreUniversityStudent]=\"isPreUniversityStudent\"\r\n              [IsApplicant]=\"false\"\r\n            ></app-student-basic-info>\r\n\r\n            <hr class=\"break mb-2\" /> -->\r\n\r\n            <app-student-classroom\r\n              [studentUserId]=\"studentUserId\"\r\n            ></app-student-classroom>\r\n\r\n            <hr class=\"break\" />\r\n\r\n            <div class=\"d-flex break\">\r\n              <ul\r\n                ngbNav\r\n                #nav=\"ngbNav\"\r\n                [activeId]=\"isPreUniversityStudent ? 'GuardianInfo' : 'BusLine'\"\r\n                class=\"nav-pills\"\r\n                orientation=\"vertical\"\r\n              >\r\n                <!-- Guardian Info -->\r\n                <li ngbNavItem=\"GuardianInfo\">\r\n                  <ng-container *ngIf=\"isPreUniversityStudent\">\r\n                    <a ngbNavLink>{{\r\n                      \"StudentSetup.GuardianInfo\" | translate\r\n                    }}</a>\r\n                    <ng-template ngbNavContent>\r\n                      <app-guardian-info\r\n                        [StudentID]=\"applicationId\"\r\n                        [IsApplicant]=\"false\"\r\n                      ></app-guardian-info>\r\n                    </ng-template>\r\n                  </ng-container>\r\n                </li>\r\n\r\n                <!-- Education Info -->\r\n                <!-- <li ngbNavItem=\"EducationInfo\">\r\n                  <a ngbNavLink>{{\r\n                    \"StudentSetup.EducationInfo\" | translate\r\n                  }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-education-info\r\n                      [StudentID]=\"studentUserId\"\r\n                    ></app-education-info>\r\n                  </ng-template>\r\n                </li> -->\r\n\r\n                <!-- Bus Line -->\r\n                <li ngbNavItem=\"BusLine\">\r\n                  <a ngbNavLink>{{ \"StudentSetup.BusLine\" | translate }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-bus-line\r\n                      [studentUserId]=\"studentUserId\"\r\n                    ></app-bus-line>\r\n                  </ng-template>\r\n                </li>\r\n\r\n                <!-- Health Info -->\r\n                <li ngbNavItem=\"HealthInfo\">\r\n                  <a ngbNavLink>{{ \"StudentSetup.HealthInfo\" | translate }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-health-info\r\n                      [studentUserID]=\"studentUserId\"\r\n                    ></app-health-info>\r\n                  </ng-template>\r\n                </li>\r\n\r\n                <!-- Behave Info -->\r\n                <li ngbNavItem=\"BehaveInfo\">\r\n                  <a ngbNavLink>{{ \"StudentSetup.BehaveInfo\" | translate }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-behave-info\r\n                      [studentUserID]=\"studentUserId\"\r\n                    ></app-behave-info>\r\n                  </ng-template>\r\n                </li>\r\n\r\n                <!-- Attachments -->\r\n                <li ngbNavItem=\"Attachments\">\r\n                  <a ngbNavLink>{{ \"StudentSetup.Attachments\" | translate }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <app-attachments\r\n                      [studentUserId]=\"studentUserId\"\r\n                    ></app-attachments>\r\n                  </ng-template>\r\n                </li>\r\n              </ul>\r\n\r\n              <div [ngbNavOutlet]=\"nav\" class=\"ms-4\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IStudentGetVM } from \"app/dashboard/models/setup/student/student\";\r\nimport { ApplicationService } from \"app/dashboard/services/setup/student/application.service\";\r\nimport { StudentService } from \"app/dashboard/services/setup/student/student.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-student\",\r\n  templateUrl: \"./add-student.component.html\",\r\n  styleUrls: [\"./add-student.component.scss\"],\r\n})\r\nexport class AddStudentComponent implements OnInit {\r\n  // Student: IStudentGetVM;\r\n  applicationId: number = 0;\r\n  studentUserId: number = 0;\r\n  isPreUniversityStudent: boolean = false;\r\n\r\n  currentLang: string;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  // active = 'top';\r\n\r\n  constructor(\r\n    private StudentServ: StudentService,\r\n    private ApplicationServ: ApplicationService,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    route.paramMap.subscribe((params) => {\r\n      this.applicationId = Number(params.get(\"applicationId\"));\r\n      this.studentUserId = Number(params.get(\"studentUserId\"));\r\n      // if (id) {\r\n      //   this.applicationId = id;\r\n      // console.log(id);\r\n      // StudentServ.getStudentById(id).subscribe((res) => {\r\n      //   this.Student = res;\r\n      // });\r\n      // }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkIfPreUniversityStudent();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.checkIfPreUniversityStudent();\r\n    });\r\n  }\r\n\r\n  // if Pre University Student > need parents || else > doesn't need parents\r\n  checkIfPreUniversityStudent() {\r\n    this.ApplicationServ.isPreUniversityStudent(this.EduCompId).subscribe(\r\n      (res) => {\r\n        this.isPreUniversityStudent = res;\r\n      }\r\n    );\r\n  }\r\n\r\n  setStudentId(id: number) {\r\n    this.applicationId = id;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IStudentGetVM } from \"app/dashboard/models/setup/student/student\";\r\nimport { StudentService } from \"app/dashboard/services/setup/student/student.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-student-profile-index\",\r\n  templateUrl: \"./student-profile-index.component.html\",\r\n  styleUrls: [\"./student-profile-index.component.scss\"],\r\n})\r\nexport class StudentProfileIndexComponent implements OnInit {\r\n  Students: IStudentGetVM[] = [];\r\n\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"student_name\",\r\n    \"Educationalyear\",\r\n    // \"Class\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IStudentGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private StudentServ: StudentService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStudents(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudents(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Educationalyear\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.eduYear_ar_name ?? item.eduYear_en_name\r\n            : item.eduYear_en_name ?? item.eduYear_ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  // get all students\r\n  getAllStudents(page: number) {\r\n    this.spinner.show();\r\n\r\n    this.StudentServ.GetAllStudents(this.EduCompId, page).subscribe((res) => {\r\n      if (res) {\r\n        this.Students = res.AcceptedStudentList;\r\n        this.dataSource = new MatTableDataSource(this.Students);\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n        // console.log(\"Students: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(student: IStudentGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: student.student_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStudent(student);\r\n      });\r\n  }\r\n\r\n  // delete student\r\n  deleteStudent(student: IStudentGetVM) {\r\n    this.spinner.show();\r\n    this.StudentServ.deleteStudent(student.studentUserId).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == student);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.sort = this.sort;\r\n\r\n          this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Students\" | translate }}\r\n\r\n        <!-- add Student -->\r\n        <!-- <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/students/profile/add-student\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n        >\r\n          {{ \"StudentSetup.addStudent\" | translate }}\r\n        </a> -->\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- name column -->\r\n            <ng-container matColumnDef=\"student_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                {{ student.student_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Educational year column -->\r\n            <ng-container matColumnDef=\"Educationalyear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? student.eduYear_ar_name ?? student.eduYear_en_name\r\n                    : student.eduYear_en_name ?? student.eduYear_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Class column -->\r\n            <!-- <ng-container matColumnDef=\"Class\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Class\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                {{ student.Class }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let student\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    routerLink=\"/dashboard/students/profile/edit-student/{{\r\n                      student.studentApplicationId\r\n                    }}/{{ student.studentUserId }}\"\r\n                    [queryParams]=\"{\r\n                      functionId: functionId\r\n                    }\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <!-- matTooltip=\"{{ 'ladels.Details' | translate }}\" -->\r\n                    <!-- <i class=\"fa fa-external-link font-medium-3 m-2\"></i> -->\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <!-- <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(student)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a> -->\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"9\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStudents($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of students\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AddApplicationComponent } from \"./application/add-application/add-application.component\";\r\nimport { ApplicationIndexComponent } from \"./application/application-index/application-index.component\";\r\nimport { ChangeStatusComponent } from \"./application/change-status/change-status.component\";\r\nimport { DiscountComponent } from \"./discount/discount.component\";\r\nimport { AddStudentComponent } from \"./profile/add-student/add-student.component\";\r\nimport { StudentProfileIndexComponent } from \"./profile/student-profile-index/student-profile-index.component\";\r\nimport { StudentCreateExamComponent } from \"./student-exams/student-create-exam/student-create-exam.component\";\r\nimport { StudentExamIndexComponent } from \"./student-exams/student-exam-index/student-exam-index.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"discount\",\r\n    component: DiscountComponent,\r\n  },\r\n  {\r\n    path: \"application\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: ApplicationIndexComponent,\r\n      },\r\n      {\r\n        path: \"edit-application/:applicationId\",\r\n        component: AddApplicationComponent,\r\n      },\r\n      {\r\n        path: \"add-application\",\r\n        component: AddApplicationComponent,\r\n      },\r\n      {\r\n        path: \"change-status/:statusApplicationId/:applicationId\",\r\n        component: ChangeStatusComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"profile\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: StudentProfileIndexComponent,\r\n      },\r\n      {\r\n        path: \"edit-student/:applicationId/:studentUserId\",\r\n        component: AddStudentComponent,\r\n      },\r\n      // {\r\n      //   path: \"add-student\",\r\n      //   component: AddStudentComponent,\r\n      // },\r\n    ],\r\n  },\r\n  {\r\n    path: \"exam\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: StudentExamIndexComponent,\r\n      },\r\n      {\r\n        path: \"add-exam\",\r\n        component: StudentCreateExamComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class StudentApplicationRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { StudentApplicationRoutingModule } from \"./student-application-routing.module\";\r\nimport { DiscountComponent } from \"./discount/discount.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ApplicationIndexComponent } from \"./application/application-index/application-index.component\";\r\nimport { AddApplicationComponent } from \"./application/add-application/add-application.component\";\r\nimport { StudentProfileIndexComponent } from \"./profile/student-profile-index/student-profile-index.component\";\r\nimport { AddStudentComponent } from \"./profile/add-student/add-student.component\";\r\nimport { StudentBasicInfoComponent } from \"./student-sub-info/student-basic-info/student-basic-info.component\";\r\nimport { GuardianInfoComponent } from \"./student-sub-info/guardian-info/guardian-info.component\";\r\nimport { ChangeStatusComponent } from \"./application/change-status/change-status.component\";\r\nimport { BehaveInfoComponent } from \"./student-sub-info/behave-info/behave-info.component\";\r\nimport { BusLineComponent } from \"./student-sub-info/bus-line/bus-line.component\";\r\nimport { AttachmentsComponent } from \"./student-sub-info/attachments/attachments.component\";\r\nimport { HealthInfoComponent } from \"./student-sub-info/health-info/health-info-core/health-info.component\";\r\nimport { ChronicDiseaseComponent } from \"./student-sub-info/health-info/chronic-disease/chronic-disease.component\";\r\nimport { VaccinationComponent } from \"./student-sub-info/health-info/vaccination/vaccination.component\";\r\nimport { EducationInfoComponent } from \"./student-sub-info/education-info/education-info-core/education-info.component\";\r\nimport { ClassInfoComponent } from \"./student-sub-info/education-info/class-info/class-info.component\";\r\nimport { GradingStatementComponent } from \"./student-sub-info/education-info/gradding-statement/gradding-statement.component\";\r\nimport { TeachersComponent } from \"./student-sub-info/education-info/teachers/teachers.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { StudentExamIndexComponent } from \"./student-exams/student-exam-index/student-exam-index.component\";\r\nimport { StudentCreateExamComponent } from \"./student-exams/student-create-exam/student-create-exam.component\";\r\nimport { StudentClassroomComponent } from \"./student-sub-info/student-classroom/student-classroom.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DiscountComponent,\r\n    ApplicationIndexComponent,\r\n    AddApplicationComponent,\r\n    StudentProfileIndexComponent,\r\n    AddStudentComponent,\r\n    // StudentBasicInfoComponent,\r\n    GuardianInfoComponent,\r\n    ChangeStatusComponent,\r\n    BehaveInfoComponent,\r\n    BusLineComponent,\r\n    AttachmentsComponent,\r\n    HealthInfoComponent,\r\n    ChronicDiseaseComponent,\r\n    VaccinationComponent,\r\n    EducationInfoComponent,\r\n    ClassInfoComponent,\r\n    GradingStatementComponent,\r\n    TeachersComponent,\r\n    StudentExamIndexComponent,\r\n    StudentCreateExamComponent,\r\n    StudentClassroomComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    StudentApplicationRoutingModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class StudentApplicationModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IExamDataListVM,\r\n  IExamDataVM,\r\n  IStudentExamDataVM,\r\n} from \"app/dashboard/models/setup/student/student-exam\";\r\nimport { StudentExamsService } from \"app/dashboard/services/setup/student/student-exams.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"app-student-create-exam\",\r\n  templateUrl: \"./student-create-exam.component.html\",\r\n  styleUrls: [\"./student-create-exam.component.scss\"],\r\n})\r\nexport class StudentCreateExamComponent implements OnInit {\r\n  itemsCounts: number = 0;\r\n\r\n  curLang: string;\r\n  submitted: boolean = false;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  examData: FormGroup;\r\n  questionData: FormGroup;\r\n  unitList: any;\r\n  topicList: any;\r\n  lessonList: any;\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"QuestionNumber\",\r\n    \"Mark\",\r\n    \"Subject\",\r\n    \"Unit\",\r\n    \"Lesson\",\r\n    \"Topic\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IExamDataVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    public authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private studentExamsService: StudentExamsService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllQuestions(1);\r\n    this.examData = this.fb.group({\r\n      id: [0],\r\n      unitId: [\"\", Validators.required],\r\n      lessonId: [\"\", Validators.required],\r\n      subjectId: [\"\", Validators.required],\r\n      examName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      examHours: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      examMinutes: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.questionData = this.fb.group({\r\n      id: [0],\r\n      questionsNumber: [\"\", Validators.required],\r\n      topic: [\"\", Validators.required],\r\n      mark: [\"\", Validators.required],\r\n    });\r\n  }\r\n  get ExamDataControls() {\r\n    return this.examData.controls;\r\n  }\r\n  get QuestionDataControls() {\r\n    return this.questionData.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllQuestions(page: number) {\r\n    this.studentExamsService\r\n      .getAllExamQuestions(page)\r\n      .subscribe((res: IExamDataListVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.ExamList);\r\n          this.itemsCounts = res.itemCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {}\r\n\r\n  openDeleateDialog(questionData: any): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\" ? questionData.Ar_Name : questionData.En_Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteQuestion(questionData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Question\r\n  deleteQuestion(questionData: any) {\r\n    this.studentExamsService\r\n      .deleteExamQuestions(questionData.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == questionData);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!--START ADD/EDIT Exam -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>\r\n          <span>{{(ExamDataControls.id.value == 0?\"Navbar.newexam\":\"Navbar.EditExam\") | translate }}</span>\r\n\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashhboard/students/exam\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"examData\">\r\n              <div class=\"row\">\r\n                <!-- exam name -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamNm\" | translate }}</mat-label>\r\n                    <input matInput formControlName=\"examName\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        ExamDataControls.examName?.invalid &&\r\n                        (ExamDataControls.examName?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          ExamDataControls.examName?.errors?.required ||\r\n                          ExamDataControls.examName?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- exam houre -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamHours\" | translate }}</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"examHours\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        ExamDataControls.examHours?.invalid &&\r\n                        (ExamDataControls.examHours?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"ExamDataControls.examHours?.errors?.required\"\r\n                      >\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- exam minutes -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamMinute\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"examMinutes\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        ExamDataControls.examMinutes?.invalid &&\r\n                        (ExamDataControls.examMinutes?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"ExamDataControls.examMinutes?.errors?.required\"\r\n                      >\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- exam subject -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <all-cources-dropdown\r\n                    [control]=\"ExamDataControls.subjectId\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </all-cources-dropdown>\r\n                </div>\r\n                <!-- exam unit -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <units-by-course-dropdown\r\n                    [control]=\"ExamDataControls.unitId\"\r\n                    [courceControl]=\"ExamDataControls.subjectId\"\r\n                    [submitted]=\"submitted\"\r\n                  >\r\n                  </units-by-course-dropdown>\r\n                </div>\r\n                <!-- exam lesson -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <lessons-by-unit-dropdown\r\n                    [control]=\"ExamDataControls.lessonId\"\r\n                    [unitControl]=\"ExamDataControls.unitId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></lessons-by-unit-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n\r\n          {{\r\n            (ExamDataControls.id.value > 0 ? \"General.Update\" : \"General.Add\")\r\n              | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- START: ADD/EDIT Exam Quetion -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>{{(QuestionDataControls.id.value == 0?\"labels.AddQuestion\":\"labels.AddQuestion\") | translate }}</span>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"questionData\" class=\"form-horizontal\">\r\n          <div class=\"row\">\r\n            <!-- exam unit -->\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <units-by-course-dropdown\r\n                [control]=\"ExamDataControls.unitId\"\r\n                [courceControl]=\"ExamDataControls.subjectId\"\r\n                [submitted]=\"submitted\"\r\n              >\r\n              </units-by-course-dropdown>\r\n            </div>\r\n            <!-- exam lesson -->\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <lessons-by-unit-dropdown\r\n                [control]=\"ExamDataControls.lessonId\"\r\n                [unitControl]=\"ExamDataControls.unitId\"\r\n                [submitted]=\"submitted\"\r\n              ></lessons-by-unit-dropdown>\r\n            </div>\r\n            <!--  topic -->\r\n            <div class=\"col-md-4 col-12\">\r\n              <topics-by-lesson-dropdown\r\n                [lessonControl]=\"ExamDataControls.lessonId\"\r\n                [control]=\"ExamDataControls.unitId\"\r\n                [submitted]=\"submitted\"\r\n              ></topics-by-lesson-dropdown>\r\n            </div>\r\n\r\n            <!-- question Number -->\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.QuestionNumber\" | translate }}</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  formControlName=\"questionsNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    QuestionDataControls.questionsNumber?.invalid &&\r\n                    (QuestionDataControls.questionsNumber?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      QuestionDataControls.questionsNumber?.errors?.required\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- Mark -->\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mark\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"mark\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    QuestionDataControls.mark?.invalid &&\r\n                    (QuestionDataControls.mark?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"QuestionDataControls.mark?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{\r\n            (QuestionDataControls.id.value == 0\r\n              ? \"General.Add\"\r\n              : \"General.Update\"\r\n            ) | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Questions\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"mat-elevation-z8 f-w\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <!-- # Column -->\r\n                <ng-container matColumnDef=\"#\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n                  <td mat-cell *matCellDef=\"let i = index\">\r\n                    {{ i + 1 }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- questionNumber Column -->\r\n                <ng-container matColumnDef=\"QuestionNumber\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.QuestionNumber\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionNumber }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Mark Column -->\r\n                <ng-container matColumnDef=\"Mark\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.Mark\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.Mark }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- Subject Column -->\r\n                <ng-container matColumnDef=\"Subject\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.Subject\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ curLang == \"ar\" ? ele.ar_name : ele.ar_name }}\r\n                  </td>\r\n                </ng-container>\r\n                <!-- Unit Column -->\r\n                <ng-container matColumnDef=\"Unit\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.Unit\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ curLang == \"ar\" ? ele.ar_name : ele.ar_name }}\r\n                  </td>\r\n                </ng-container>\r\n                <!-- Lesson Column -->\r\n                <ng-container matColumnDef=\"Lesson\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.Lesson\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ curLang == \"ar\" ? ele.ar_name : ele.ar_name }}\r\n                  </td>\r\n                </ng-container>\r\n                <!-- Topic Column -->\r\n                <ng-container matColumnDef=\"Topic\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.Topic\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ curLang == \"ar\" ? ele.ar_name : ele.ar_name }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- actions Column -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    actions\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let groupHeader\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'DeleteGroup'\"\r\n                        (click)=\"openDeleateDialog(groupHeader)\"\r\n                        class=\"danger p-0\"\r\n                        matTooltip=\"Delete Group\"\r\n                      >\r\n                        <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                  <td class=\"mat-cell\" colspan=\"8\">\r\n                    No data matching the filter \"{{ input.value }}\"\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n\r\n              <mat-paginator\r\n                [pageSizeOptions]=\"[10]\"\r\n                (page)=\"getAllQuestions($event.pageIndex + 1)\"\r\n                [length]=\"itemsCounts\"\r\n                [pageSize]=\"10\"\r\n                showFirstLastButtons\r\n                aria-label=\"Select page of users\"\r\n              >\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IStudentExamDataVM } from \"app/dashboard/models/setup/student/student-exam\";\r\nimport { StudentExamsService } from \"app/dashboard/services/setup/student/student-exams.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-student-exam-index\",\r\n  templateUrl: \"./student-exam-index.component.html\",\r\n  styleUrls: [\"./student-exam-index.component.scss\"],\r\n})\r\nexport class StudentExamIndexComponent implements OnInit {\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"ExamName\",\r\n    \"ExamCreator\",\r\n    \"Subject\",\r\n    \"ExamGrade\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IStudentExamDataVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    public authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private studentExamsService: StudentExamsService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStudentExams(1);\r\n  }\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n  getAllStudentExams(page: number) {\r\n    this.studentExamsService.getAllStudentExams(page).subscribe((res) => {\r\n      if(res){\r\n        this.dataSource=new MatTableDataSource(res.StudentExamList);\r\n        this.itemsCounts=res.itemCount\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"StudentSetup.StudentExam\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          [routerLink]=\"['/dashboard/students/exam/add-exam']\"\r\n          routerLinkActive=\"router-link-active\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n\r\n          {{ \"Navbar.newexam\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- ExamName Column -->\r\n            <ng-container matColumnDef=\"ExamName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ExamName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\"\r\n                    ? ele.Exam_Ar_Name ?? ele.Exam_En_Name\r\n                    : ele.Exam_En_Name ?? ele.Exam_Ar_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- ExamCreator Column -->\r\n            <ng-container matColumnDef=\"ExamCreator\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"StudentSetup.ExamCreator\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\"\r\n                    ? ele.ExamCreator_Ar_Name ?? ele.ExamCreator_En_Name\r\n                    : ele.ExamCreator_En_Name ?? ele.ExamCreator_Ar_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Subject Column -->\r\n            <ng-container matColumnDef=\"Subject\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Subject\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.ar_name : ele.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- ExamGrade Column -->\r\n            <ng-container matColumnDef=\"ExamGrade\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"StudentSetup.ExamGrade\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ExamGrade }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"text-center actions\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button type=\"button\" class=\"btn btn-info bg-light-info\">\r\n                    {{ \"StudentSetup.ShowExam\" | translate }}\r\n                  </button>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"8\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStudentExams($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IAttachTypeGetByUserType } from \"app/dashboard/models/setup/general-setup/attach-type\";\r\nimport { AttachmentService } from \"app/dashboard/services/setup/student/attachment.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AttachTypeService } from \"app/dashboard/services/setup/general-setup/attach-type.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport {\r\n  IStudentAttachAddEditVM,\r\n  IStudentAttachVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { forkJoin } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-attachments\",\r\n  templateUrl: \"./attachments.component.html\",\r\n  styleUrls: [\"./attachments.component.scss\"],\r\n})\r\nexport class AttachmentsComponent implements OnInit {\r\n  @Input(\"studentUserId\") studentUserId: number;\r\n\r\n  @ViewChild(\"fileInput\") fileInput: ElementRef;\r\n\r\n  StudentAttachments: IStudentAttachVM[] = [];\r\n  AttachmentTypes: IAttachTypeGetByUserType[] = [];\r\n\r\n  myForm: FormGroup;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private AttachmentServ: AttachmentService,\r\n    private AttachTypeServ: AttachTypeService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService,\r\n    private uploadFileService: UploadFileService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStudentAttachmentsAndTypes();\r\n\r\n    this.myForm = this.fb.group({\r\n      attachments: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  get attachmentsArr() {\r\n    return this.myForm.controls[\"attachments\"] as FormArray;\r\n  }\r\n\r\n  attachmentForm(index: number) {\r\n    return this.attachmentsArr.controls[index] as FormGroup;\r\n  }\r\n\r\n  setFormTouched(formIndex: number, value: boolean) {\r\n    this.attachmentForm(formIndex).controls.touched.setValue(value);\r\n  }\r\n\r\n  // add new from for attach\r\n  addStudentInstallmentForm(attachType: IAttachTypeGetByUserType) {\r\n    let StudentAttachmentForm = this.fb.group({\r\n      id: [0],\r\n      attachType_id: [attachType.attachTypeId],\r\n      selected: [false],\r\n      attach: [null],\r\n      attach_path: [null],\r\n      attach_type_ArName: [attachType.attach_type_ArName],\r\n      attach_type_EnName: [attachType.attach_type_EnName],\r\n      touched: [false],\r\n      remove_image: [0],\r\n    });\r\n    // console.log(StudentAttachmentForm.value);\r\n\r\n    this.attachmentsArr.push(StudentAttachmentForm);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudentAttachmentsAndTypes();\r\n    });\r\n  }\r\n\r\n  // get formCtrls() {\r\n  //   return this.myForm.controls;\r\n  // }\r\n\r\n  // get Attachment Types\r\n  getAttachmentTypes() {\r\n    return this.AttachTypeServ.getAttachTypesDropDownByUserId(\r\n      this.studentUserId\r\n    );\r\n  }\r\n\r\n  // get all student attachments\r\n  getAllStudentAttachments() {\r\n    return this.AttachmentServ.getAllAttachmentsByStudentID(this.studentUserId);\r\n  }\r\n\r\n  getAllStudentAttachmentsAndTypes() {\r\n    forkJoin([\r\n      this.getAttachmentTypes(),\r\n      this.getAllStudentAttachments(),\r\n    ]).subscribe((res) => {\r\n      if (res) {\r\n        this.AttachmentTypes = res[0].attachmentList;\r\n        this.AttachmentTypes.forEach((attachType) => {\r\n          this.addStudentInstallmentForm(attachType);\r\n        });\r\n        // student data\r\n        this.StudentAttachments = res[1].studentVaccineList;\r\n        // console.log(\"StudentAttachments: >> \", res);\r\n        this.putSelectedAttachments();\r\n      }\r\n    });\r\n  }\r\n\r\n  putSelectedAttachments() {\r\n    this.AttachmentTypes.forEach((attach, index) => {\r\n      let attach_index = this.StudentAttachments.findIndex(\r\n        (stAttach) => attach.attachTypeId == stAttach.attachType_id\r\n      );\r\n      if (attach_index > -1) {\r\n        this.attachmentForm(index).controls.selected.setValue(true);\r\n        this.attachmentForm(index).controls.id.setValue(\r\n          this.StudentAttachments[attach_index].id\r\n        );\r\n        this.attachmentForm(index).controls.attach_path.setValue(\r\n          this.StudentAttachments[attach_index].attach_path\r\n        );\r\n      }\r\n    });\r\n    // console.log(this.StudentAttachments, this.myForm.value);\r\n  }\r\n\r\n  // change check box\r\n  onSelectAttachType(event: MatCheckboxChange, formIndex: number) {\r\n    this.attachmentForm(formIndex).controls.selected.setValue(event.checked);\r\n    if (!this.attachmentForm(formIndex).controls.id.value && !event.checked)\r\n      this.setFormTouched(formIndex, false);\r\n    else this.setFormTouched(formIndex, true);\r\n  }\r\n\r\n  // select image\r\n  onChangeFile(event: any, formIndex: number) {\r\n    this.setFormTouched(formIndex, true);\r\n    // this.removeImage = 0;\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      this.attachmentForm(formIndex).controls.attach.setValue(file);\r\n      // this.imageChange = true;\r\n    });\r\n  }\r\n\r\n  downloadFile(fileUrl: string) {\r\n    this.uploadFileService.downloadFile(fileUrl);\r\n  }\r\n\r\n  imageUrl(formIndex: number) {\r\n    let currentForm = this.attachmentForm(formIndex).controls;\r\n    return this.uploadFileService.previewPicture(\r\n      currentForm.attach.value ?? currentForm.attach_path.value\r\n    );\r\n  }\r\n\r\n  RemoveFile(formIndex: number) {\r\n    this.setFormTouched(formIndex, true);\r\n    if (this.attachmentForm(formIndex).controls.attach_path.value)\r\n      this.attachmentForm(formIndex).controls.remove_image.setValue(1);\r\n    this.attachmentForm(formIndex).controls.attach.setValue(null);\r\n    this.attachmentForm(formIndex).controls.attach_path.setValue(null);\r\n    this.fileInput.nativeElement.value = \"\";\r\n  }\r\n\r\n  onSubmit(formIndex: number) {\r\n    // if selected > add // not selected & no id > delete\r\n    if (this.attachmentForm(formIndex).controls.selected.value)\r\n      this.addEditStudentAttachment(formIndex);\r\n    else if (this.attachmentForm(formIndex).controls.id.value > 0)\r\n      this.openDeleteDialog(formIndex);\r\n  }\r\n\r\n  // add edit\r\n  addEditStudentAttachment(formIndex: number) {\r\n    if (this.myForm.valid) {\r\n      let attachment: IStudentAttachAddEditVM = {\r\n        id: this.attachmentForm(formIndex).controls.id?.value,\r\n        studentUserId: this.studentUserId,\r\n        attachType_id:\r\n          this.attachmentForm(formIndex).controls.attachType_id.value,\r\n        attach: this.attachmentForm(formIndex).controls.attach?.value,\r\n        remove_image:\r\n          this.attachmentForm(formIndex).controls.remove_image.value,\r\n      };\r\n      // console.log(\"attachment\", attachment);\r\n\r\n      this.spinner.show();\r\n      this.AttachmentServ.addEditAttachment(attachment).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            attachment.id == 0\r\n              ? this.ToastrMsg.success(\"General.AddSuccessfully\")\r\n              : this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n            this.attachmentForm(formIndex).patchValue(res.StudentAttach[0]);\r\n            this.attachmentForm(formIndex).controls.attach.setValue(null);\r\n            this.setFormTouched(formIndex, false);\r\n          } else this.ToastrMsg.error(res?.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(formIndex: number): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.currentLang == \"ar\"\r\n              ? this.attachmentForm(formIndex).controls.attach_type_ArName.value\r\n              : this.attachmentForm(formIndex).controls.attach_type_EnName\r\n                  .value,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteAttachment(formIndex);\r\n      });\r\n  }\r\n\r\n  // delete attachment\r\n  deleteAttachment(formIndex: number) {\r\n    this.spinner.show();\r\n    this.AttachmentServ.deleteAttachment(\r\n      this.attachmentForm(formIndex).controls.id.value\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n        this.attachmentForm(formIndex).controls.id.setValue(0);\r\n        this.RemoveFile(formIndex);\r\n        this.setFormTouched(formIndex, false);\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- Attachment -->\r\n      <mat-card-title>\r\n        {{ \"StudentSetup.Attachments\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <ng-container *ngIf=\"AttachmentTypes.length > 0; else noAttachRquired\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div [formGroup]=\"myForm\" class=\"container-fluid\">\r\n                <ng-container formArrayName=\"attachments\">\r\n                  <ng-container\r\n                    *ngFor=\"\r\n                      let StudentAttachmentForm of attachmentsArr.controls;\r\n                      let i = index\r\n                    \"\r\n                  >\r\n                    <div class=\"row\">\r\n                      <div class=\"col-12 mb-3\">\r\n                        <div [formGroupName]=\"i\">\r\n                          <div class=\"row\">\r\n                            <!-- Attachment Type -->\r\n                            <div\r\n                              class=\"col-md-3 col-12 d-flex align-items-center\"\r\n                            >\r\n                              <mat-checkbox\r\n                                [checked]=\"\r\n                                  StudentAttachmentForm.controls.selected.value\r\n                                \"\r\n                                color=\"warn\"\r\n                                (change)=\"onSelectAttachType($event, i)\"\r\n                              >\r\n                                {{\r\n                                  currentLang == \"ar\"\r\n                                    ? StudentAttachmentForm.controls\r\n                                        .attach_type_ArName.value\r\n                                    : StudentAttachmentForm.controls\r\n                                        .attach_type_EnName.value\r\n                                }}\r\n                              </mat-checkbox>\r\n                            </div>\r\n\r\n                            <!-- Attachment file -->\r\n                            <div\r\n                              class=\"col-md-8 col-12 d-flex align-items-center\"\r\n                            >\r\n                              <div class=\"ImageDiv\">\r\n                                <input\r\n                                  #fileInput\r\n                                  [hidden]=\"true\"\r\n                                  id=\"input-file-{{ i }}\"\r\n                                  type=\"file\"\r\n                                  [disabled]=\"\r\n                                    !StudentAttachmentForm.controls.selected\r\n                                      .value\r\n                                  \"\r\n                                  (change)=\"onChangeFile($event, i)\"\r\n                                />\r\n\r\n                                <label\r\n                                  for=\"input-file-{{ i }}\"\r\n                                  mat-raised-button\r\n                                  class=\"upload-btn btn btn-info bg-light-info btn-sm float-right\"\r\n                                  [disabled]=\"\r\n                                    !StudentAttachmentForm.controls.selected\r\n                                      .value\r\n                                  \"\r\n                                  [class.disabled-btn]=\"\r\n                                    !StudentAttachmentForm.controls.selected\r\n                                      .value\r\n                                  \"\r\n                                >\r\n                                  <i class=\"fa fa-upload\"></i>\r\n                                  {{ \"General.Upload\" | translate }}\r\n                                </label>\r\n\r\n                                <span class=\"mt-1 mr-1\">\r\n                                  <a [href]=\"imageUrl(i)\" target=\"_blank\">\r\n                                    <img\r\n                                      [class.hideImg]=\"\r\n                                        (!StudentAttachmentForm.controls.attach\r\n                                          ?.value &&\r\n                                          !StudentAttachmentForm.controls\r\n                                            .attach_path?.value) ||\r\n                                        !StudentAttachmentForm.controls.selected\r\n                                          .value\r\n                                      \"\r\n                                      [src]=\"imageUrl(i)\"\r\n                                      class=\"fileReview\"\r\n                                      alt=\"{{\r\n                                        'EducationalSetup.Image' | translate\r\n                                      }}\"\r\n                                    />\r\n                                  </a>\r\n                                </span>\r\n\r\n                                <!-- delete button -->\r\n                                <a\r\n                                  [class.hideBtn]=\"\r\n                                    (!StudentAttachmentForm.controls.attach\r\n                                      ?.value &&\r\n                                      !StudentAttachmentForm.controls\r\n                                        .attach_path?.value) ||\r\n                                    !StudentAttachmentForm.controls.selected\r\n                                      .value\r\n                                  \"\r\n                                  (click)=\"RemoveFile(i)\"\r\n                                  class=\"danger p-0\"\r\n                                  matTooltip=\"{{\r\n                                    'General.Delete' | translate\r\n                                  }}\"\r\n                                >\r\n                                  <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                                </a>\r\n\r\n                                <!-- download file -->\r\n                                <a\r\n                                  [class.hideBtn]=\"\r\n                                    !StudentAttachmentForm.controls.attach_path\r\n                                      ?.value ||\r\n                                    !StudentAttachmentForm.controls.selected\r\n                                      .value\r\n                                  \"\r\n                                  (click)=\"\r\n                                    downloadFile(\r\n                                      StudentAttachmentForm.controls.attach_path\r\n                                        ?.value\r\n                                    )\r\n                                  \"\r\n                                  class=\"info p-0\"\r\n                                  matTooltip=\"{{\r\n                                    'General.Download' | translate\r\n                                  }}\"\r\n                                >\r\n                                  <i\r\n                                    class=\"fa fa-download font-medium-3 mr-2\"\r\n                                  ></i>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <!-- save attachment -->\r\n                            <div\r\n                              class=\"col-md-1 col-12 p-0 text-center d-flex justify-content-center align-items-center\"\r\n                            >\r\n                              <button\r\n                                mat-mini-fab\r\n                                type=\"button\"\r\n                                [disabled]=\"\r\n                                  !StudentAttachmentForm.controls.touched.value\r\n                                \"\r\n                                class=\"btn btn-success bg-light-success\"\r\n                                (click)=\"onSubmit(i)\"\r\n                                matTooltip=\"{{ 'General.Save' | translate }}\"\r\n                                [matTooltipPosition]=\"\r\n                                  currentLang == 'ar' ? 'left' : 'right'\r\n                                \"\r\n                              >\r\n                                <mat-icon>check</mat-icon>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <ng-template #noAttachRquired>\r\n          <div class=\"alert bg-light-warning mb-2\" role=\"alert\">\r\n            {{ \"StudentSetup.noAttachRequired\" | translate }}\r\n          </div>\r\n        </ng-template>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentBehaveAddEditVM,\r\n  IStudentBehaveVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { BehaveInfoService } from \"app/dashboard/services/setup/student/behave-info.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-behave-info\",\r\n  templateUrl: \"./behave-info.component.html\",\r\n  styleUrls: [\"./behave-info.component.scss\"],\r\n})\r\nexport class BehaveInfoComponent implements OnInit {\r\n  @Input(\"studentUserID\") studentUserID: number;\r\n\r\n  BehaveInfos: IStudentBehaveVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"behave_name\", \"Details\", \"actions\"];\r\n  dataSource: MatTableDataSource<IStudentBehaveVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private BehaveInfoServ: BehaveInfoService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.studentUserID) this.getAllBehaveInfos(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      behave_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Details: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.studentUserID) this.getAllBehaveInfos(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all behaveInfos\r\n  getAllBehaveInfos(page: number) {\r\n    this.spinner.show();\r\n\r\n    this.BehaveInfoServ.getAllBehaveInfosByStudentID(\r\n      page,\r\n      this.studentUserID\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.BehaveInfos = res.studentBehaveList;\r\n        this.dataSource = new MatTableDataSource(this.BehaveInfos);\r\n        this.itemsCounts = res.countItems;\r\n        this.dataSource.sort = this.sort;\r\n        // console.log(\"BehaveInfos: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditBehaveInfo(behaveInfo: IStudentBehaveVM) {\r\n    this.myForm.patchValue(behaveInfo);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let behaveInfo: IStudentBehaveAddEditVM = {\r\n        studentUserId: this.studentUserID,\r\n        id: this.formCtrls.id?.value,\r\n        behave_name: this.formCtrls.behave_name?.value,\r\n        Details: this.formCtrls.Details?.value,\r\n      };\r\n      // console.log(\"behaveInfo\", behaveInfo);\r\n\r\n      this.spinner.show();\r\n      this.BehaveInfoServ.addEditBehaveInfo(behaveInfo).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            behaveInfo.id == 0\r\n              ? this.addBehaveInfo(res.student_behave[0])\r\n              : this.updateBehaveInfo(res.student_behave[0]);\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n          } else this.ToastrMsg.error(res?.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add behaveInfo\r\n  addBehaveInfo(res: IStudentBehaveVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // update behaveInfo\r\n  updateBehaveInfo(res: IStudentBehaveVM) {\r\n    let i = this.dataSource.data.findIndex((e) => e.id == res.id);\r\n    this.dataSource.data[i] = res;\r\n    this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(behaveInfo: IStudentBehaveVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: behaveInfo.behave_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteBehaveInfo(behaveInfo);\r\n      });\r\n  }\r\n\r\n  // delete behaveInfo\r\n  deleteBehaveInfo(behaveInfo: IStudentBehaveVM) {\r\n    this.spinner.show();\r\n    this.BehaveInfoServ.deleteBehaveInfo(behaveInfo.id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == behaveInfo);\r\n          this.dataSource.data.splice(i, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (behaveInfo.id == this.formCtrls.id.value) this.clearForm();\r\n\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add - edit BehaveInfo -->\r\n      <mat-card-title>\r\n        {{\r\n          (formCtrls?.id.value == 0\r\n            ? \"StudentSetup.addBehave\"\r\n            : \"StudentSetup.updateBehave\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Behave Name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"StudentSetup.BehaveCategory\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"behave_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.behave_name.invalid &&\r\n                        (formCtrls.behave_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.behave_name.errors?.required ||\r\n                          formCtrls.behave_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Details input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Details\" | translate }}\r\n                    </mat-label>\r\n                    <textarea matInput formControlName=\"Details\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <!-- add - edit BehaveInfo -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          [disabled]=\"!studentUserID\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          *ngIf=\"formCtrls?.id.value > 0\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n      <hr class=\"my-1\" />\r\n\r\n      <mat-card-title> {{ \"StudentSetup.Behaves\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Behave Name column -->\r\n            <ng-container matColumnDef=\"behave_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"StudentSetup.BehaveCategory\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let behaveInfo\">\r\n                {{ behaveInfo.behave_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Details column -->\r\n            <ng-container matColumnDef=\"Details\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Details\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let behaveInfo\">\r\n                {{ behaveInfo.Details }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let behaveInfo\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditBehaveInfo(behaveInfo)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(behaveInfo)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllBehaveInfos($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of behaveInfos\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport {\r\n  IStudentBusLineGetVM,\r\n  IStudentBusLineAddEditVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { StationService } from \"app/dashboard/services/setup/general-setup/location/station.service\";\r\nimport { BusLineService } from \"app/dashboard/services/setup/general-setup/bus-line.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { IBusLine } from \"app/dashboard/models/setup/general-setup/bus-line\";\r\nimport { IStationByBuslineVM } from \"app/dashboard/models/setup/general-setup/location/station\";\r\nimport { StudentBusLineService } from \"app/dashboard/services/setup/student/student-bus-line.service\";\r\n\r\n@Component({\r\n  selector: \"app-bus-line\",\r\n  templateUrl: \"./bus-line.component.html\",\r\n  styleUrls: [\"./bus-line.component.scss\"],\r\n})\r\nexport class BusLineComponent implements OnInit {\r\n  @Input(\"studentUserId\") studentUserId: number;\r\n\r\n  StudentBusLine: IStudentBusLineGetVM;\r\n  BusLines: IBusLine[] = [];\r\n  Stations: IStationByBuslineVM[] = [];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private StudentBusLineServ: StudentBusLineService,\r\n    private BusLineServ: BusLineService,\r\n    private StationServ: StationService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.studentUserId) this.getStudentBusLine();\r\n    this.getAllBusLines();\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      busLineId: [\"\", [Validators.required]],\r\n      from_date: [\"\", [Validators.required]],\r\n      busLineDetails_id: [\r\n        {\r\n          value: [],\r\n          disabled: true,\r\n        },\r\n        [Validators.required],\r\n      ],\r\n      busTime: [\r\n        {\r\n          value: [],\r\n          disabled: true,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.studentUserId) this.getStudentBusLine();\r\n      this.getAllBusLines();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all bus lines\r\n  getAllBusLines() {\r\n    this.spinner.show();\r\n    this.BusLineServ.getBusLinesDropDown(this.EduCompId).subscribe(\r\n      (res: IBusLine[]) => {\r\n        if (res) this.BusLines = res;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get all stations\r\n  getAllStationsByBuslineId(buslineId: number) {\r\n    this.formCtrls?.busLineDetails_id.setValue(null);\r\n    if (buslineId) {\r\n      // this.spinner.show();\r\n      this.StationServ.getAllStationsByBuslineId(buslineId).subscribe((res) => {\r\n        if (res) {\r\n          this.Stations = res;\r\n          this.formCtrls?.busLineDetails_id.enable();\r\n        }\r\n        // this.spinner.hide();\r\n      });\r\n    } else this.formCtrls?.busLineDetails_id.disable();\r\n  }\r\n\r\n  GetTimeOfStation(station: IStationByBuslineVM) {\r\n    if (station) this.formCtrls?.busTime.setValue(station.busTime);\r\n    else this.formCtrls?.busTime.setValue(null);\r\n  }\r\n\r\n  // get all busLines\r\n  getStudentBusLine() {\r\n    this.StudentBusLine = null;\r\n    this.spinner.show();\r\n    this.StudentBusLineServ.getStudentBusLineDetailsByStudentID(\r\n      this.studentUserId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.StudentBusLine = res.studentBusLineList;\r\n        this.myForm.patchValue(this.StudentBusLine);\r\n        this.formCtrls.from_date.setValue(this.StudentBusLine?.fromDate);\r\n        this.getAllStationsByBuslineId(this.formCtrls.busLineId.value);\r\n        this.formCtrls.busLineDetails_id.setValue(\r\n          this.StudentBusLine?.busLineDetails_id\r\n        );\r\n        // console.log(\"StudentBusLine: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let studentBusLine: IStudentBusLineAddEditVM = {\r\n        id: this.formCtrls.id.value,\r\n        busLineDetails_id: this.formCtrls.busLineDetails_id.value,\r\n        from_date: this.datePipe.transform(this.formCtrls.from_date.value),\r\n        studentUserId: this.studentUserId,\r\n      };\r\n      console.log(\"studentBusLine\", studentBusLine);\r\n\r\n      this.spinner.show();\r\n      this.StudentBusLineServ.addEditStudentBusLine(studentBusLine).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            this.formCtrls.id.value == 0\r\n              ? this.ToastrMsg.success(\"General.AddSuccessfully\")\r\n              : this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n\r\n            // this.myForm.reset();\r\n            this.StudentBusLine = res.Student_BusLine[0];\r\n            this.myForm.patchValue(res.Student_BusLine[0]);\r\n            this.formCtrls.from_date.setValue(res.Student_BusLine[0].fromDate);\r\n            // console.log(this.myForm.value);\r\n          } else {\r\n            this.ToastrMsg.error(res?.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(): void {\r\n    this.translate.get(\"GeneralSetup.studentBusLine\").subscribe((res) => {\r\n      this.dialog\r\n        .open(DeleteDialogComponent, {\r\n          data: {\r\n            msg: res,\r\n          },\r\n        })\r\n        .afterClosed()\r\n        .subscribe((confirm) => {\r\n          if (confirm) this.deleteBusLine(this.StudentBusLine);\r\n        });\r\n    });\r\n  }\r\n\r\n  // delete studentBusLine\r\n  deleteBusLine(studentBusLine: IStudentBusLineGetVM) {\r\n    this.spinner.show();\r\n    this.StudentBusLineServ.deleteStudentBusLine(studentBusLine.id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n          this.StudentBusLine = null;\r\n          this.clearForm();\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    if (this.StudentBusLine) {\r\n      this.myForm.patchValue(this.StudentBusLine);\r\n      this.getAllStationsByBuslineId(this.formCtrls.busLineId.value);\r\n      this.formCtrls.busLineDetails_id.setValue(\r\n        this.StudentBusLine?.busLineDetails_id\r\n      );\r\n      this.formCtrls.from_date.setValue(this.StudentBusLine?.fromDate);\r\n    }\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add - edit BusLine -->\r\n      <mat-card-title>\r\n        {{\r\n          (formCtrls?.id.value == 0\r\n            ? \"GeneralSetup.AddBusLine\"\r\n            : \"GeneralSetup.EditBusLine\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- BusLine input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"StudentSetup.BusLine\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"busLineId\"\r\n                      (selectionChange)=\"\r\n                        getAllStationsByBuslineId(formCtrls.busLineId.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let BusLine of BusLines\"\r\n                        [value]=\"BusLine.id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? BusLine.ar_name\r\n                            : BusLine.en_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.busLineId.invalid &&\r\n                        (formCtrls?.busLineId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.busLineId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- FromDate input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"from_date\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        formCtrls?.from_date?.invalid &&\r\n                        (formCtrls?.from_date?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.from_date?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Station input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"location.station\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"busLineDetails_id\">\r\n                      <mat-option (click)=\"GetTimeOfStation(null)\">{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Station of Stations\"\r\n                        [value]=\"Station.busLineDetails_id\"\r\n                        (click)=\"GetTimeOfStation(Station)\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? Station.station_ar_name ?? Station.station_en_name\r\n                            : Station.station_en_name ?? Station.station_ar_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.busLineDetails_id.invalid &&\r\n                        (formCtrls?.busLineDetails_id.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"formCtrls?.busLineDetails_id.errors?.required\"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Time input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Time\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"busTime\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"m-0\">\r\n        <!-- add - edit BusLine -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          [disabled]=\"!studentUserId\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          [disabled]=\"myForm.pristine\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n\r\n        <!-- delete -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-danger\"\r\n          *ngIf=\"formCtrls?.id.value > 0\"\r\n          (click)=\"openDeleteDialog()\"\r\n        >\r\n          {{ \"General.Delete\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentClassInfoGetVM,\r\n  IStudentClassInfoAddEditVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { EducationInfoService } from \"./../../../../../../services/setup/student/education-info.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { IAcademicYear } from \"app/dashboard/models/setup/educational-setup/academic-year\";\r\nimport { AcademicYearService } from \"app/dashboard/services/setup/educational-setup/academic-year.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-class-info\",\r\n  templateUrl: \"./class-info.component.html\",\r\n  styleUrls: [\"./class-info.component.scss\"],\r\n})\r\nexport class ClassInfoComponent implements OnInit {\r\n  @Input(\"StudentID\") StudentID: number;\r\n\r\n  ClassInfos: IStudentClassInfoGetVM[] = [];\r\n  academicYears: IAcademicYear[];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"AcademicYear\",\r\n    \"Status\",\r\n    \"Degree\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IStudentClassInfoGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private EducationInfoServ: EducationInfoService,\r\n    private AcademicYearServ: AcademicYearService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.StudentID) this.getAllClassInfos(1);\r\n    this.getAllAcademicYears();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      AcademicYearId: [\"\", [Validators.required]],\r\n      Status: [\"\", [Validators.required]],\r\n      Degree: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.StudentID) this.getAllClassInfos(1);\r\n      this.getAllAcademicYears();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all student ClassInfos\r\n  getAllClassInfos(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.EducationInfoServ.getAllClassInfosByStudentID(\r\n      page,\r\n      this.StudentID\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.ClassInfos = res.ClassInfoList;\r\n        this.dataSource = new MatTableDataSource(this.ClassInfos);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"ClassInfos: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getAllAcademicYears() {\r\n    this.spinner.show();\r\n    this.AcademicYearServ.getYearsDropdown().subscribe((res) => {\r\n      if (res) this.academicYears = res.academicEduYearList;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let studentClassInfo = {} as IStudentClassInfoAddEditVM;\r\n      studentClassInfo.EduCompId = this.EduCompId;\r\n      studentClassInfo.Id = this.formCtrls.Id?.value;\r\n      studentClassInfo.AcademicYearId = this.formCtrls.AcademicYearId?.value;\r\n      studentClassInfo.Degree = this.formCtrls.Degree?.value;\r\n      studentClassInfo.Status = this.formCtrls.Medicines?.value;\r\n      console.log(\"studentClassInfo\", studentClassInfo);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateClassInfo(studentClassInfo)\r\n        : this.addClassInfo(studentClassInfo);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add student ClassInfo\r\n  addClassInfo(studentClassInfo: IStudentClassInfoAddEditVM) {\r\n    this.spinner.show();\r\n    this.EducationInfoServ.addClassInfo(\r\n      this.StudentID,\r\n      studentClassInfo\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.getAllClassInfos(this.curPage);\r\n        this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditClassInfo(studentClassInfo: IStudentClassInfoGetVM) {\r\n    this.myForm.patchValue(studentClassInfo);\r\n    this.formCtrls?.AcademicYearId.setValue(\r\n      studentClassInfo.AcademicYear.academicEduYearId\r\n    );\r\n  }\r\n\r\n  // update student ClassInfo\r\n  updateClassInfo(studentClassInfo: IStudentClassInfoAddEditVM) {\r\n    this.spinner.show();\r\n    this.EducationInfoServ.updateClassInfo(\r\n      this.StudentID,\r\n      studentClassInfo\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex(\r\n          (e) => e.Id == this.formCtrls.Id.value\r\n        );\r\n        this.dataSource.data[i] = res;\r\n\r\n        this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n        this.myForm.reset();\r\n        this.submitted = false;\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(studentClassInfo: IStudentClassInfoGetVM): void {\r\n    let title = `${studentClassInfo.AcademicYear.fromDate} / ${studentClassInfo.AcademicYear.toDate}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteClassInfo(studentClassInfo);\r\n      });\r\n  }\r\n\r\n  // delete studentClassInfo\r\n  deleteClassInfo(studentClassInfo: IStudentClassInfoGetVM) {\r\n    this.spinner.show();\r\n    this.EducationInfoServ.deleteClassInfo(studentClassInfo.Id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == studentClassInfo);\r\n          this.dataSource.data.splice(i, 1);\r\n\r\n          this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n\r\n<!-- add - edit ClassInfo -->\r\n<mat-card-title>\r\n  {{\r\n    (formCtrls?.Id.value == 0\r\n      ? \"StudentSetup.addClassInfo\"\r\n      : \"StudentSetup.updateClassInfo\"\r\n    ) | translate\r\n  }}\r\n</mat-card-title>\r\n<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <!-- Academic Year input -->\r\n          <div class=\"col-md-6 col-12\">\r\n            <app-academic-year-dropdown\r\n              [control]=\"formCtrls?.AcademicYearId\"\r\n              [submitted]=\"submitted\"\r\n            ></app-academic-year-dropdown>\r\n          </div>\r\n\r\n          <!-- Status input -->\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Status\" | translate }}</mat-label>\r\n              <mat-select formControlName=\"Status\">\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option value=\"Pass\"> Pass </mat-option>\r\n                <mat-option value=\"Failed\"> Failed </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  formCtrls?.Status.invalid &&\r\n                  (formCtrls?.Status.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"formCtrls?.Status.errors?.required\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <!-- Degree input -->\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"labels.Degree\" | translate }}\r\n              </mat-label>\r\n              <input matInput type=\"number\" formControlName=\"Degree\" />\r\n              <mat-hint\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  formCtrls?.Degree.invalid &&\r\n                  (formCtrls?.Degree.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"formCtrls?.Degree.errors?.required\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n                <span *ngIf=\"formCtrls?.Degree.errors?.minusNum\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n<mat-card-actions align=\"end\" class=\"m-0\">\r\n  <!-- add - edit ClassInfo -->\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info\"\r\n    [disabled]=\"!StudentID\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.Id.value == 0\"></i>\r\n    {{\r\n      (formCtrls?.Id.value == 0 ? \"General.Add\" : \"General.Update\") | translate\r\n    }}\r\n  </button>\r\n\r\n  <!-- reset -->\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-warning\"\r\n    [disabled]=\"myForm.pristine\"\r\n    (click)=\"resetForm()\"\r\n  >\r\n    {{ \"General.Reset\" | translate }}\r\n  </button>\r\n</mat-card-actions>\r\n\r\n<hr class=\"my-1\" />\r\n\r\n<mat-card-title> {{ \"StudentSetup.classInfos\" | translate }}</mat-card-title>\r\n<mat-card-content>\r\n  <!-- filter input -->\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. Example\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <!-- table -->\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n          {{ i + 1 }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Academic Year column -->\r\n      <ng-container matColumnDef=\"AcademicYear\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.CurrentYear\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let classInfo\">\r\n          {{\r\n            classInfo.AcademicYear?.FromDate / classInfo.AcademicYear?.ToDate\r\n          }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Status column -->\r\n      <ng-container matColumnDef=\"Status\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Status\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let classInfo\">\r\n          {{ classInfo.Status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Degree column -->\r\n      <ng-container matColumnDef=\"Degree\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Degree\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let classInfo\">\r\n          {{ classInfo.Degree }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- actions column -->\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let classInfo\"\r\n          class=\"text-center px-3 actions\"\r\n        >\r\n          <ng-container *ngFor=\"let fun of rowFunctions\">\r\n            <a\r\n              *ngIf=\"fun.functionName === 'Edit'\"\r\n              (click)=\"toEditClassInfo(classInfo)\"\r\n              class=\"success p-0\"\r\n              matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n            >\r\n              <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n            </a>\r\n\r\n            <a\r\n              *ngIf=\"fun.functionName === 'Delete'\"\r\n              (click)=\"openDeleteDialog(classInfo)\"\r\n              class=\"danger p-0\"\r\n              matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n            >\r\n              <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n            </a>\r\n          </ng-container>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"5\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getAllClassInfos($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of classInfos\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<!-- </mat-card>\r\n  </div>\r\n</div>\r\n -->\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-education-info\",\r\n  templateUrl: \"./education-info.component.html\",\r\n  styleUrls: [\"./education-info.component.scss\"],\r\n})\r\nexport class EducationInfoComponent implements OnInit {\r\n  @Input(\"StudentID\") StudentID: number;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-tab-group animationDuration=\"300ms\">\r\n          <!-- classInfo -->\r\n          <mat-tab label=\"{{ 'StudentSetup.classInfo' | translate }}\">\r\n            <app-class-info [StudentID]=\"StudentID\"></app-class-info>\r\n          </mat-tab>\r\n\r\n          <!-- gradding statement -->\r\n          <!-- <mat-tab label=\"{{ 'StudentSetup.gradingStatement' | translate }}\">\r\n            <app-gradding-statement\r\n              [StudentID]=\"StudentID\"\r\n            ></app-gradding-statement>\r\n          </mat-tab> -->\r\n\r\n          <!-- teachers -->\r\n          <mat-tab label=\"{{ 'labels.Teachers' | translate }}\">\r\n            <app-teachers [StudentID]=\"StudentID\"></app-teachers>\r\n          </mat-tab>\r\n        </mat-tab-group>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentGradingStatementGetVM,\r\n  IStudentGradingStatementResponseVM,\r\n  IStudentGradingStatementSearchVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { EducationInfoService } from \"../../../../../../services/setup/student/education-info.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { IAcademicYear } from \"app/dashboard/models/setup/educational-setup/academic-year\";\r\nimport { AcademicYearService } from \"app/dashboard/services/setup/educational-setup/academic-year.service\";\r\n\r\n@Component({\r\n  selector: \"app-gradding-statement\",\r\n  templateUrl: \"./gradding-statement.component.html\",\r\n  styleUrls: [\"./gradding-statement.component.scss\"],\r\n})\r\nexport class GradingStatementComponent implements OnInit {\r\n  @Input(\"StudentID\") StudentID: number;\r\n\r\n  GradingStatements: IStudentGradingStatementGetVM[] = [];\r\n  academicYears: IAcademicYear[];\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang!: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"Year\", \"Status\", \"Degree\", \"Courses\"];\r\n  dataSource: MatTableDataSource<IStudentGradingStatementGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private EducationInfoServ: EducationInfoService,\r\n    private AcademicYearServ: AcademicYearService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    // private ToastrMsg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.StudentID) this.getAllGradingStatements(1);\r\n    this.getAllAcademicYears();\r\n\r\n    this.myForm = this.fb.group({\r\n      YearId: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.StudentID) this.getAllGradingStatements(1);\r\n      this.getAllAcademicYears();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all student GradingStatements\r\n  getAllGradingStatements(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    let studentGradingStatement = {} as IStudentGradingStatementSearchVM;\r\n    studentGradingStatement.EduCompId = this.EduCompId;\r\n    studentGradingStatement.studentID = this.StudentID;\r\n    studentGradingStatement.YearId = this.formCtrls.YearId?.value;\r\n    studentGradingStatement.page = this.curPage;\r\n\r\n    this.EducationInfoServ.getAllGradingStatementsByStudentIDAndYear(\r\n      studentGradingStatement\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.GradingStatements = res.GradingStatementList;\r\n        this.dataSource = new MatTableDataSource(this.GradingStatements);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"GradingStatements: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getAllAcademicYears() {\r\n    this.spinner.show();\r\n    this.AcademicYearServ.getYearsDropdown().subscribe(\r\n      (res) => {\r\n        if (res) this.academicYears = res.academicEduYearList;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n\r\n<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <!-- Academic Year input -->\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"getAllGradingStatements(1)\"\r\n                formControlName=\"YearId\"\r\n              >\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let academicYear of academicYears\"\r\n                  [value]=\"academicYear.ID\"\r\n                >\r\n                  {{ academicYear?.FromDate / academicYear?.ToDate }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<!-- <hr class=\"my-1\" /> -->\r\n\r\n<mat-card-title>\r\n  {{ \"StudentSetup.gradingStatement\" | translate }}</mat-card-title\r\n>\r\n<mat-card-content>\r\n  <!-- filter input -->\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. Example\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <!-- table -->\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n          {{ i + 1 }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Year column -->\r\n      <ng-container matColumnDef=\"Year\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Year\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let gradingStatement\">\r\n          <a [href]=\"imageUrl(gradingStatement.Year)\" target=\"_blank\">\r\n            <img\r\n              [src]=\"imageUrl(gradingStatement.Year)\"\r\n              alt=\"{{ 'labels.Year' | translate }}\"\r\n              class=\"image\"\r\n            />\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Status column -->\r\n      <ng-container matColumnDef=\"Status\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Status\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let gradingStatement\">\r\n          {{ gradingStatement.Status }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Degree column -->\r\n      <ng-container matColumnDef=\"Degree\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Degree\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let gradingStatement\">\r\n          <a [href]=\"gradingStatement.Degree\" target=\"_blank\">\r\n            {{ \"labels.Degree\" | translate }}\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Courses column -->\r\n      <ng-container matColumnDef=\"Courses\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"EducationalSetup.courses\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let gradingStatement\">\r\n          <a [href]=\"gradingStatement.Courses\" target=\"_blank\">\r\n            {{ \"EducationalSetup.courses\" | translate }}\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"5\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getAllGradingStatements($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of gradingStatements\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<!-- </mat-card>\r\n  </div>\r\n</div>\r\n -->\r\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentTeacherGetVM,\r\n  IStudentTeacherSearchVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { EducationInfoService } from \"./../../../../../../services/setup/student/education-info.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { IAcademicYear } from \"app/dashboard/models/setup/educational-setup/academic-year\";\r\nimport { AcademicYearService } from \"app/dashboard/services/setup/educational-setup/academic-year.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Component({\r\n  selector: \"app-teachers\",\r\n  templateUrl: \"./teachers.component.html\",\r\n  styleUrls: [\"./teachers.component.scss\"],\r\n})\r\nexport class TeachersComponent implements OnInit {\r\n  @Input(\"StudentID\") StudentID: number;\r\n\r\n  Teachers: IStudentTeacherGetVM[] = [];\r\n  academicYears: IAcademicYear[];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"TeacherPhoto\", \"Name\", \"Comment\"];\r\n  dataSource: MatTableDataSource<IStudentTeacherGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private EducationInfoServ: EducationInfoService,\r\n    private AcademicYearServ: AcademicYearService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    // private ToastrMsg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.StudentID) this.getAllTeachers(1);\r\n    this.getAllAcademicYears();\r\n\r\n    this.myForm = this.fb.group({\r\n      ShowByYearId: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.StudentID) this.getAllTeachers(1);\r\n      this.getAllAcademicYears();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all student Teachers\r\n  getAllTeachers(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    let studentTeacher = {} as IStudentTeacherSearchVM;\r\n    studentTeacher.EduCompId = this.EduCompId;\r\n    studentTeacher.studentID = this.StudentID;\r\n    studentTeacher.YearId = this.formCtrls.ShowByYearId?.value;\r\n    studentTeacher.page = this.curPage;\r\n\r\n    this.EducationInfoServ.getAllTeachersByStudentIDAndYear(\r\n      studentTeacher\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.Teachers = res.TeacherList;\r\n        this.dataSource = new MatTableDataSource(this.Teachers);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"Teachers: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getAllAcademicYears() {\r\n    this.spinner.show();\r\n    this.AcademicYearServ.getYearsDropdown().subscribe(\r\n      (res) => {\r\n        if (res) this.academicYears = res.academicEduYearList;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  imageUrl(url: string) {\r\n    if (url) return `${environment.baseUrl}${url.slice(1)}`;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n\r\n<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <!-- Academic Year input -->\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.ShowBy\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"getAllTeachers(1)\"\r\n                formControlName=\"ShowByYearId\"\r\n              >\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let academicYear of academicYears\"\r\n                  [value]=\"academicYear.ID\"\r\n                >\r\n                  {{ academicYear?.FromDate / academicYear?.ToDate }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<!-- <hr class=\"my-1\" /> -->\r\n\r\n<mat-card-title> {{ \"labels.Teachers\" | translate }}</mat-card-title>\r\n<mat-card-content>\r\n  <!-- filter input -->\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. Example\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <!-- table -->\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n          {{ i + 1 }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Teacher Photo column -->\r\n      <ng-container matColumnDef=\"TeacherPhoto\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"StudentSetup.TeacherPhoto\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let teacher\">\r\n          <a [href]=\"imageUrl(teacher.TeacherPhoto)\" target=\"_blank\">\r\n            <img\r\n              [src]=\"imageUrl(teacher.TeacherPhoto)\"\r\n              alt=\"{{ 'StudentSetup.TeacherPhoto' | translate }}\"\r\n              class=\"image\"\r\n            />\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Name column -->\r\n      <ng-container matColumnDef=\"Name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Name\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let teacher\">\r\n          {{ teacher.Name }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Comment column -->\r\n      <ng-container matColumnDef=\"Comment\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"labels.Comment\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let teacher\">\r\n          <a [href]=\"teacher.Comment\" target=\"_blank\">\r\n            {{ \"StudentSetup.viewComments\" | translate }}\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"5\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getAllTeachers($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of teachers\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<!-- </mat-card>\r\n  </div>\r\n</div>\r\n -->\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IGuardianInfoAddEditVM,\r\n  IGuardianInfoGetVM,\r\n  IGuardianRelation,\r\n} from \"app/dashboard/models/setup/student/application\";\r\nimport { ApplicationService } from \"app/dashboard/services/setup/student/application.service\";\r\nimport { GuardianInfoService } from \"app/dashboard/services/setup/student/guardian-info.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-guardian-info\",\r\n  templateUrl: \"./guardian-info.component.html\",\r\n  styleUrls: [\"./guardian-info.component.scss\"],\r\n})\r\nexport class GuardianInfoComponent implements OnInit {\r\n  @Input(\"StudentID\") StudentID: number;\r\n  // IsApplicant = true > new application || IsApplicant = false > new student\r\n  @Input(\"IsApplicant\") IsNewApplicant: boolean;\r\n\r\n  Relations: IGuardianRelation[];\r\n  GuardianInfos: IGuardianInfoGetVM[] = [];\r\n\r\n  GuardianForm1st: FormGroup;\r\n  GuardianForm2nd: FormGroup;\r\n  submitted1st = false;\r\n  submitted2nd = false;\r\n\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  // functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private GuardianServ: GuardianInfoService,\r\n    private ApplicationServ: ApplicationService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    // route.queryParamMap.subscribe((params) => {\r\n    //   this.functionId = Number(params.get(\"functionId\"));\r\n    //   // console.log(\"functionId\", this.functionId);\r\n    // });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllGuardianRelations();\r\n    if (this.StudentID) this.getGuardianInfoByStudentID();\r\n\r\n    // 1st Guardian Form\r\n    this.GuardianForm1st = this.fb.group({\r\n      id: [0],\r\n      parent_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      relation_id: [\"\", [Validators.required]],\r\n      parent_mobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          // Validators.pattern(/^(010|011|012|015)[0-9]{8}$/),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n          CustomeValidator.whiteSpace,\r\n        ],\r\n      ],\r\n      job: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      parent_email: [\"\", [Validators.email]],\r\n    });\r\n\r\n    // 2nd Guardian Form\r\n    this.GuardianForm2nd = this.fb.group({\r\n      id: [0],\r\n      parent_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      relation_id: [\"\", [Validators.required]],\r\n      parent_mobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          // Validators.pattern(/^(010|011|012|015)[0-9]{8}$/),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n          CustomeValidator.whiteSpace,\r\n        ],\r\n      ],\r\n      job: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      parent_email: [\"\", [Validators.email]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllGuardianRelations();\r\n      if (this.StudentID) this.getGuardianInfoByStudentID();\r\n    });\r\n  }\r\n\r\n  get formCtrls1stGuardian() {\r\n    return this.GuardianForm1st.controls;\r\n  }\r\n\r\n  get formCtrls2ndGuardian() {\r\n    return this.GuardianForm2nd.controls;\r\n  }\r\n\r\n  // get Guardian Relations\r\n  getAllGuardianRelations() {\r\n    this.ApplicationServ.getAllGuardianRelations().subscribe((res) => {\r\n      if (res) this.Relations = res;\r\n    });\r\n  }\r\n\r\n  // get Guardian info if edit\r\n  getGuardianInfoByStudentID() {\r\n    this.spinner.show();\r\n    this.GuardianServ.getApplicantParentsInfoById(this.StudentID).subscribe(\r\n      (res) => {\r\n        if (res) {\r\n          this.GuardianInfos = res.parentInfo;\r\n          this.GuardianForm1st.patchValue(this.GuardianInfos[0]);\r\n          this.GuardianForm2nd.patchValue(this.GuardianInfos[1]);\r\n          this.GuardianForm1st.controls.id.setValue(\r\n            this.GuardianInfos[0]?.Parent_app_id || 0\r\n          );\r\n          this.GuardianForm2nd.controls.id.setValue(\r\n            this.GuardianInfos[1]?.Parent_app_id || 0\r\n          );\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(isAdd: boolean, form: FormGroup, rank: number) {\r\n    if (rank == 1) this.submitted1st = true;\r\n    if (rank == 2) this.submitted2nd = true;\r\n    // console.log(isAdd, form, rank);\r\n\r\n    if (form.valid) {\r\n      let guardianInfo: IGuardianInfoAddEditVM = {\r\n        edu_comp_id: this.EduCompId,\r\n        id: form.controls.id.value,\r\n        Parent_Name: form.controls.parent_name.value,\r\n        relation_id: form.controls.relation_id.value,\r\n        parent_mobile: form.controls.parent_mobile.value,\r\n        job: form.controls.job.value,\r\n        address: form.controls.address.value,\r\n        parent_email: form.controls.parent_email.value,\r\n      };\r\n      if (guardianInfo.id == 0) guardianInfo.studentAppIds = [this.StudentID];\r\n      // console.log(\"GuardianInfo\", guardianInfo);\r\n\r\n      this.spinner.show();\r\n      this.GuardianServ.addEditApplicationParentInfo(guardianInfo).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            isAdd\r\n              ? this.ToastrMsg.success(\"General.AddSuccessfully\")\r\n              : this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n            if (rank == 1) this.submitted1st = false;\r\n            if (rank == 2) this.submitted2nd = false;\r\n            // this.getGuardianInfoByStudentID();\r\n            // get parent id after add\r\n            if (isAdd) form.controls.id.setValue(res.ParentApp[0].parentAppId);\r\n            this.GuardianInfos[rank - 1] = form.value;\r\n            this.GuardianInfos[rank - 1].Parent_app_id = form.value.id;\r\n            // console.log(this.GuardianForm1st.value, this.GuardianInfos[0]);\r\n          } else this.ToastrMsg.error(res?.returnstring);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(GuardianInfo: IGuardianInfoGetVM, rank: number): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: GuardianInfo.parent_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteGuardianInfo(GuardianInfo.Parent_app_id, rank);\r\n      });\r\n  }\r\n\r\n  // delete Guardian Info\r\n  deleteGuardianInfo(id: number, rank: number) {\r\n    this.spinner.show();\r\n    this.GuardianServ.deleteGuardianInfo(id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n\r\n        this.GuardianInfos.splice(rank - 1, 1);\r\n\r\n        this.resetGuardianForm1st();\r\n        this.resetGuardianForm2nd();\r\n        // this.getGuardianInfoByStudentID();\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  resetGuardianForm1st() {\r\n    this.GuardianForm1st.reset();\r\n    if (this.GuardianInfos.length > 0)\r\n      this.GuardianForm1st.patchValue(this.GuardianInfos[0]);\r\n    this.GuardianForm1st.controls.id.setValue(\r\n      this.GuardianInfos[0]?.Parent_app_id || 0\r\n    );\r\n    this.submitted1st = false;\r\n  }\r\n\r\n  resetGuardianForm2nd() {\r\n    this.GuardianForm2nd.reset();\r\n    if (this.GuardianInfos.length > 1)\r\n      this.GuardianForm2nd.patchValue(this.GuardianInfos[1]);\r\n    this.GuardianForm2nd.controls.id.setValue(\r\n      this.GuardianInfos[1]?.Parent_app_id || 0\r\n    );\r\n    this.submitted2nd = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-tab-group animationDuration=\"300ms\">\r\n          <!-- 1st Guardian Info -->\r\n          <mat-tab label=\"{{ 'StudentSetup.1stGuardianInfo' | translate }}\"\r\n            ><form [formGroup]=\"GuardianForm1st\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Name\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"parent_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls1stGuardian?.parent_name?.invalid &&\r\n                        (formCtrls1stGuardian.parent_name?.touched ||\r\n                          submitted1st)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.parent_name?.errors?.required ||\r\n                          formCtrls1stGuardian?.parent_name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Relation input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"StudentSetup.Relation\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"relation_id\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let relation of Relations\"\r\n                        [value]=\"relation.id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? relation.relation_ar_name\r\n                            : relation.relation_en_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls1stGuardian?.relation_id?.invalid &&\r\n                        (formCtrls1stGuardian?.relation_id?.touched ||\r\n                          submitted1st)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.relation_id?.errors?.required\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Mobile input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.MobileNo\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"parent_mobile\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls1stGuardian?.parent_mobile?.invalid &&\r\n                        (formCtrls1stGuardian?.parent_mobile?.touched ||\r\n                          submitted1st)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.parent_mobile?.errors\r\n                            ?.required ||\r\n                          formCtrls1stGuardian?.parent_mobile?.errors\r\n                            ?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.parent_mobile?.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.parent_mobile?.errors\r\n                            ?.minlength ||\r\n                          formCtrls1stGuardian?.parent_mobile?.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.parent_mobile?.errors\r\n                            ?.startsWith\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                      <!-- <span\r\n                        *ngIf=\"formCtrls1stGuardian?.parent_mobile?.errors?.pattern\"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.PhonePattern\" | translate }}\r\n                      </span> -->\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Job input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"StudentSetup.Job\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"job\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls1stGuardian?.job?.invalid &&\r\n                        (formCtrls1stGuardian?.job?.touched || submitted1st)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.job?.errors?.required ||\r\n                          formCtrls1stGuardian?.job?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Address input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Address\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"address\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls1stGuardian?.address?.invalid &&\r\n                        (formCtrls1stGuardian?.address?.touched || submitted1st)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.address?.errors?.required ||\r\n                          formCtrls1stGuardian?.address?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Email input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Email\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"parent_email\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls1stGuardian?.parent_email?.invalid &&\r\n                        (formCtrls1stGuardian?.parent_email?.touched ||\r\n                          submitted1st)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls1stGuardian?.parent_email?.errors?.email\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.emailFormate\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <div>\r\n              <!-- reset -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-warning mb-2 float-right\"\r\n                [disabled]=\"GuardianForm1st.pristine\"\r\n                (click)=\"resetGuardianForm1st()\"\r\n              >\r\n                {{ \"General.Reset\" | translate }}\r\n              </button>\r\n\r\n              <!-- delete Guardian Info -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-danger mb-2 float-right\"\r\n                *ngIf=\"StudentID && GuardianInfos?.length > 0\"\r\n                (click)=\"openDeleteDialog(GuardianInfos[0], 1)\"\r\n              >\r\n                {{ \"General.Delete\" | translate }}\r\n              </button>\r\n\r\n              <!-- add Guardian Info -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n                *ngIf=\"!StudentID || (StudentID && GuardianInfos?.length == 0)\"\r\n                [disabled]=\"!StudentID\"\r\n                (click)=\"onSubmit(true, GuardianForm1st, 1)\"\r\n              >\r\n                <i class=\"fa fa-plus\"></i>\r\n                {{ \"General.Add\" | translate }}\r\n              </button>\r\n\r\n              <!-- edit Guardian Info -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n                *ngIf=\"StudentID && GuardianInfos?.length > 0\"\r\n                (click)=\"onSubmit(false, GuardianForm1st, 1)\"\r\n              >\r\n                {{ \"General.Update\" | translate }}\r\n              </button>\r\n            </div>\r\n          </mat-tab>\r\n\r\n          <!-- 2nd Guardian Info -->\r\n          <mat-tab label=\"{{ 'StudentSetup.2ndGuardianInfo' | translate }}\"\r\n            ><form [formGroup]=\"GuardianForm2nd\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Name\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"parent_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls2ndGuardian?.parent_name?.invalid &&\r\n                        (formCtrls2ndGuardian.parent_name?.touched ||\r\n                          submitted2nd)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.parent_name?.errors?.required ||\r\n                          formCtrls2ndGuardian?.parent_name?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Relation input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"StudentSetup.Relation\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"relation_id\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let relation of Relations\"\r\n                        [value]=\"relation.id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? relation.relation_ar_name\r\n                            : relation.relation_en_name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls2ndGuardian?.relation_id?.invalid &&\r\n                        (formCtrls2ndGuardian?.relation_id?.touched ||\r\n                          submitted2nd)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.relation_id?.errors?.required\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Mobile input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.MobileNo\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"parent_mobile\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls2ndGuardian?.parent_mobile?.invalid &&\r\n                        (formCtrls2ndGuardian?.parent_mobile?.touched ||\r\n                          submitted2nd)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.parent_mobile?.errors\r\n                            ?.required ||\r\n                          formCtrls2ndGuardian?.parent_mobile?.errors\r\n                            ?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.parent_mobile?.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.parent_mobile?.errors\r\n                            ?.minlength ||\r\n                          formCtrls2ndGuardian?.parent_mobile?.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.parent_mobile?.errors\r\n                            ?.startsWith\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                      <!-- <span\r\n                        *ngIf=\"formCtrls2ndGuardian?.parent_mobile?.errors?.pattern\"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.PhonePattern\" | translate }}\r\n                      </span> -->\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Job input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"StudentSetup.Job\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"job\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls2ndGuardian?.job?.invalid &&\r\n                        (formCtrls2ndGuardian?.job?.touched || submitted2nd)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.job?.errors?.required ||\r\n                          formCtrls2ndGuardian?.job?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Address input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Address\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"address\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls2ndGuardian?.address?.invalid &&\r\n                        (formCtrls2ndGuardian?.address?.touched || submitted2nd)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.address?.errors?.required ||\r\n                          formCtrls2ndGuardian?.address?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Email input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Email\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"parent_email\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls2ndGuardian?.parent_email?.invalid &&\r\n                        (formCtrls2ndGuardian?.parent_email?.touched ||\r\n                          submitted2nd)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls2ndGuardian?.parent_email?.errors?.email\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.emailFormate\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <div>\r\n              <!-- reset -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-warning mb-2 float-right\"\r\n                [disabled]=\"GuardianForm2nd.pristine\"\r\n                (click)=\"resetGuardianForm2nd()\"\r\n              >\r\n                {{ \"General.Reset\" | translate }}\r\n              </button>\r\n\r\n              <!-- delete Guardian Info -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-danger mb-2 float-right\"\r\n                *ngIf=\"StudentID && GuardianInfos?.length > 1\"\r\n                (click)=\"openDeleteDialog(GuardianInfos[1], 2)\"\r\n              >\r\n                {{ \"General.Delete\" | translate }}\r\n              </button>\r\n\r\n              <!-- add Guardian Info -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n                *ngIf=\"!StudentID || (StudentID && GuardianInfos?.length == 1)\"\r\n                [disabled]=\"!StudentID\"\r\n                (click)=\"onSubmit(true, GuardianForm2nd, 2)\"\r\n              >\r\n                <i class=\"fa fa-plus\"></i>\r\n                {{ \"General.Add\" | translate }}\r\n              </button>\r\n\r\n              <!-- edit Guardian Info -->\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n                *ngIf=\"StudentID && GuardianInfos?.length > 1\"\r\n                (click)=\"onSubmit(false, GuardianForm2nd, 2)\"\r\n              >\r\n                {{ \"General.Update\" | translate }}\r\n              </button>\r\n            </div>\r\n          </mat-tab>\r\n\r\n          <!-- <mat-tab\r\n            label=\"{{ 'StudentSetup.Attachments' | translate }}\"\r\n            *ngIf=\"IsNewApplicant\"\r\n            ><app-attachments [StudentID]=\"StudentID\"></app-attachments\r\n          ></mat-tab> -->\r\n        </mat-tab-group>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentChronicDiseaseGetVM,\r\n  IStudentChronicDiseaseAddEditVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { ChronicDiseaseGetVM } from \"app/dashboard/models/setup/general-setup/chronic-disease\";\r\nimport { ChronicDiseaseService } from \"app/dashboard/services/setup/general-setup/chronic-disease.service\";\r\nimport { HealthInfoService } from \"app/dashboard/services/setup/student/health-info.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-chronic-disease\",\r\n  templateUrl: \"./chronic-disease.component.html\",\r\n  styleUrls: [\"./chronic-disease.component.scss\"],\r\n})\r\nexport class ChronicDiseaseComponent implements OnInit {\r\n  @Input(\"studentUserID\") studentUserID: number;\r\n\r\n  ChronicDiseases: IStudentChronicDiseaseGetVM[] = [];\r\n  ChronicDiseaseTypes: ChronicDiseaseGetVM[] = [];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"ChronicDisease\", \"medecine\", \"actions\"];\r\n  dataSource: MatTableDataSource<IStudentChronicDiseaseGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private HealthInfoServ: HealthInfoService,\r\n    private ChronicDiseaseServ: ChronicDiseaseService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.studentUserID) this.getAllChronicDiseases(1);\r\n    this.getAllChronicDiseaseTypes();\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      chronic_disease_id: [\"\", [Validators.required]],\r\n      medecine: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.studentUserID) this.getAllChronicDiseases(1);\r\n      this.getAllChronicDiseases(1);\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"ChronicDisease\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.Disease_ar_name\r\n            : item.Disease_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all types\r\n  getAllChronicDiseaseTypes() {\r\n    this.spinner.show();\r\n    this.ChronicDiseaseServ.getAllChronicDiseasesDropDown(\r\n      this.EduCompId\r\n    ).subscribe((res) => {\r\n      if (res) this.ChronicDiseaseTypes = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get all student Chronic Diseases\r\n  getAllChronicDiseases(page: number) {\r\n    this.spinner.show();\r\n\r\n    this.HealthInfoServ.getAllChronicDiseasesByStudentID(\r\n      page,\r\n      this.studentUserID\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.ChronicDiseases = res.studentBehaveList;\r\n        this.dataSource = new MatTableDataSource(this.ChronicDiseases);\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n        // console.log(\"ChronicDiseases: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditChronicDisease(chronicDisease: IStudentChronicDiseaseGetVM) {\r\n    this.myForm.patchValue(chronicDisease);\r\n    // this.formCtrls?.chronic_disease_id.setValue(chronicDisease.ChronicDisease.id);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let chronicDisease: IStudentChronicDiseaseAddEditVM = {\r\n        studentUserId: this.studentUserID,\r\n        id: this.formCtrls.id.value,\r\n        chronic_disease_id: this.formCtrls.chronic_disease_id.value,\r\n        medecine: this.formCtrls.medecine.value,\r\n      };\r\n      console.log(\"chronicDisease\", chronicDisease);\r\n\r\n      this.HealthInfoServ.addEditChronicDisease(chronicDisease).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            chronicDisease.id == 0\r\n              ? this.addChronicDisease(res.student_health[0])\r\n              : this.updateChronicDisease(res.student_health[0]);\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n          } else this.ToastrMsg.error(res?.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add chronicDisease\r\n  addChronicDisease(res: IStudentChronicDiseaseGetVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // update chronicDisease\r\n  updateChronicDisease(res: IStudentChronicDiseaseGetVM) {\r\n    let i = this.dataSource.data.findIndex((e) => e.id == res.id);\r\n    this.dataSource.data[i] = res;\r\n    this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(chronicDisease: IStudentChronicDiseaseGetVM): void {\r\n    let name =\r\n      this.currentLang == \"ar\"\r\n        ? chronicDisease.Disease_ar_name\r\n        : chronicDisease.Disease_en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteChronicDisease(chronicDisease);\r\n      });\r\n  }\r\n\r\n  // delete chronicDisease\r\n  deleteChronicDisease(chronicDisease: IStudentChronicDiseaseGetVM) {\r\n    this.spinner.show();\r\n    this.HealthInfoServ.deleteChronicDisease(chronicDisease.id).subscribe(\r\n      (res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == chronicDisease);\r\n          this.dataSource.data.splice(i, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (chronicDisease.id == this.formCtrls.id.value) this.clearForm();\r\n\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n\r\n<!-- add - edit ChronicDisease -->\r\n<mat-card-title>\r\n  {{\r\n    (formCtrls?.id.value == 0\r\n      ? \"GeneralSetup.addChronicDisease\"\r\n      : \"GeneralSetup.updateChronicDisease\"\r\n    ) | translate\r\n  }}\r\n</mat-card-title>\r\n<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <!-- Chronic Disease input -->\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{\r\n                \"GeneralSetup.chronicDiseaseName\" | translate\r\n              }}</mat-label>\r\n              <mat-select formControlName=\"chronic_disease_id\">\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let ChronicDiseaseType of ChronicDiseaseTypes\"\r\n                  [value]=\"ChronicDiseaseType.Id\"\r\n                >\r\n                  {{\r\n                    currentLang == \"ar\"\r\n                      ? ChronicDiseaseType.Ar_Name\r\n                      : ChronicDiseaseType.En_Name\r\n                  }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  formCtrls?.chronic_disease_id.invalid &&\r\n                  (formCtrls?.chronic_disease_id.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"formCtrls?.chronic_disease_id.errors?.required\">\r\n                  <i class=\"ft-alert-circle align-middle\"></i>\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <!-- Medicines input -->\r\n          <div class=\"col-md-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"StudentSetup.Medicines\" | translate }}\r\n              </mat-label>\r\n              <textarea matInput formControlName=\"medecine\"></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n<mat-card-actions align=\"end\" class=\"m-0\">\r\n  <!-- add - edit ChronicDisease -->\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info\"\r\n    [disabled]=\"!studentUserID\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id.value == 0\"></i>\r\n    {{\r\n      (formCtrls?.id.value == 0 ? \"General.Add\" : \"General.Update\") | translate\r\n    }}\r\n  </button>\r\n\r\n  <!-- reset -->\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-warning\"\r\n    *ngIf=\"formCtrls?.id.value > 0\"\r\n    (click)=\"clearForm()\"\r\n  >\r\n    {{ \"General.Reset\" | translate }}\r\n  </button>\r\n</mat-card-actions>\r\n\r\n<hr class=\"my-1\" />\r\n\r\n<mat-card-title>\r\n  {{ \"GeneralSetup.chronicDiseases\" | translate }}</mat-card-title\r\n>\r\n<mat-card-content>\r\n  <!-- filter input -->\r\n  <mat-form-field appearance=\"standard\">\r\n    <mat-label>Filter</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"applyFilter($event)\"\r\n      placeholder=\"Ex. Example\"\r\n      #input\r\n    />\r\n  </mat-form-field>\r\n\r\n  <!-- table -->\r\n  <div class=\"mat-elevation-z8 f-w\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n      <!-- # Column -->\r\n      <ng-container matColumnDef=\"#\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n        <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n          {{ i + 1 }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- ChronicDisease column -->\r\n      <ng-container matColumnDef=\"ChronicDisease\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"GeneralSetup.chronicDiseaseName\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let chronicDisease\">\r\n          {{\r\n            currentLang == \"ar\"\r\n              ? chronicDisease.Disease_ar_name\r\n              : chronicDisease.Disease_en_name\r\n          }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Medicines column -->\r\n      <ng-container matColumnDef=\"medecine\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n          {{ \"StudentSetup.Medicines\" | translate }}\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let chronicDisease\">\r\n          {{ chronicDisease.medecine }}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- actions column -->\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n        <td\r\n          mat-cell\r\n          *matCellDef=\"let chronicDisease\"\r\n          class=\"text-center px-3 actions\"\r\n        >\r\n          <ng-container *ngFor=\"let fun of rowFunctions\">\r\n            <a\r\n              *ngIf=\"fun.functionName === 'Edit'\"\r\n              (click)=\"toEditChronicDisease(chronicDisease)\"\r\n              class=\"success p-0\"\r\n              matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n            >\r\n              <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n            </a>\r\n\r\n            <a\r\n              *ngIf=\"fun.functionName === 'Delete'\"\r\n              (click)=\"openDeleteDialog(chronicDisease)\"\r\n              class=\"danger p-0\"\r\n              matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n            >\r\n              <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n            </a>\r\n          </ng-container>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">\r\n          No data matching the filter \"{{ input.value }}\"\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator\r\n      [pageSizeOptions]=\"[10]\"\r\n      (page)=\"getAllChronicDiseases($event.pageIndex + 1)\"\r\n      [length]=\"itemsCounts\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of chronicDiseases\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<!-- </mat-card>\r\n  </div>\r\n</div>\r\n -->\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-health-info\",\r\n  templateUrl: \"./health-info.component.html\",\r\n  styleUrls: [\"./health-info.component.scss\"],\r\n})\r\nexport class HealthInfoComponent implements OnInit {\r\n  @Input(\"studentUserID\") studentUserID: number;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-tab-group animationDuration=\"300ms\">\r\n          <!-- vaccination -->\r\n          <mat-tab label=\"{{ 'StudentSetup.Vaccination' | translate }}\">\r\n            <app-vaccination [studentUserId]=\"studentUserID\"></app-vaccination>\r\n          </mat-tab>\r\n\r\n          <!-- chronic disease -->\r\n          <mat-tab label=\"{{ 'GeneralSetup.chronicDiseases' | translate }}\">\r\n            <app-chronic-disease\r\n              [studentUserID]=\"studentUserID\"\r\n            ></app-chronic-disease>\r\n          </mat-tab>\r\n        </mat-tab-group>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { forkJoin } from \"rxjs\";\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IStudentVaccinationGetVM,\r\n  IStudentVaccinationAddEditVM,\r\n  IStudentVaccinationTypesVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { VaccinationService } from \"app/dashboard/services/setup/general-setup/vaccination.service\";\r\nimport { HealthInfoService } from \"app/dashboard/services/setup/student/health-info.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\n\r\n@Component({\r\n  selector: \"app-vaccination\",\r\n  templateUrl: \"./vaccination.component.html\",\r\n  styleUrls: [\"./vaccination.component.scss\"],\r\n})\r\nexport class VaccinationComponent implements OnInit {\r\n  @Input(\"studentUserId\") studentUserId: number;\r\n\r\n  StudentVaccines: IStudentVaccinationGetVM[] = [];\r\n  VaccinationTypes: IStudentVaccinationTypesVM[] = [];\r\n\r\n  // myForm: FormGroup;\r\n  // submitted = false;\r\n\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private HealthInfoServ: HealthInfoService,\r\n    private VaccinationServ: VaccinationService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStudentVaccinesAndTypes();\r\n  }\r\n\r\n  // get Vaccine_Ids_ctrl() {\r\n  //   return this.myForm.controls.Vaccine_Ids;\r\n  // }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudentVaccinesAndTypes();\r\n    });\r\n  }\r\n\r\n  // get all vaccination types\r\n  getAllVaccinationTypes() {\r\n    return this.VaccinationServ.getAllVaccinationsDropDown(this.EduCompId);\r\n  }\r\n\r\n  // get all student StudentVaccines\r\n  getAllVaccinations() {\r\n    return this.HealthInfoServ.getAllVaccinationsByStudentID(\r\n      this.studentUserId\r\n    );\r\n  }\r\n\r\n  getAllStudentVaccinesAndTypes() {\r\n    forkJoin([\r\n      this.getAllVaccinationTypes(),\r\n      this.getAllVaccinations(),\r\n    ]).subscribe((res) => {\r\n      if (res) {\r\n        this.VaccinationTypes = res[0];\r\n        this.StudentVaccines = res[1].studentVaccineList;\r\n        this.putSelectedVaccine();\r\n      }\r\n    });\r\n  }\r\n\r\n  putSelectedVaccine() {\r\n    this.VaccinationTypes.map((vaccine) => {\r\n      this.StudentVaccines.findIndex(\r\n        (stVaccine) => vaccine.Id == stVaccine.Vaccine_id\r\n      ) > -1\r\n        ? (vaccine.selected = true)\r\n        : (vaccine.selected = false);\r\n      return vaccine;\r\n    });\r\n    // console.log(this.VaccinationTypes);\r\n  }\r\n\r\n  selectVaccineChange(event: MatCheckboxChange, index: number) {\r\n    this.VaccinationTypes[index].selected = event.checked;\r\n    // console.log(event, this.VaccinationTypes);\r\n  }\r\n\r\n  onSubmit() {\r\n    let studentVaccination: IStudentVaccinationAddEditVM = {\r\n      studentUserId: this.studentUserId,\r\n      Vaccine_Ids: this.VaccinationTypes.filter(\r\n        (vaccine) => vaccine.selected == true\r\n      ).map((selectedVaccine) => selectedVaccine.Id),\r\n    };\r\n    // console.log(\"studentVaccination\", studentVaccination);\r\n\r\n    (this.StudentVaccines.length == 0\r\n      ? this.HealthInfoServ.addVaccination(studentVaccination)\r\n      : this.HealthInfoServ.updateVaccination(studentVaccination)\r\n    ).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.StudentVaccines.length == 0\r\n          ? this.ToastrMsg.success(\"General.AddSuccessfully\")\r\n          : this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n        this.StudentVaccines = res.student_vaccine;\r\n        this.putSelectedVaccine();\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // // delete dialog\r\n  // openDeleteDialog(studentVaccination: IStudentVaccinationGetVM): void {\r\n  //   let name =\r\n  //     this.currentLang == \"ar\"\r\n  //       ? studentVaccination.vaccine_ar_name\r\n  //       : studentVaccination.vaccine_en_name;\r\n\r\n  //   this.dialog\r\n  //     .open(DeleteDialogComponent, {\r\n  //       data: {\r\n  //         msg: name,\r\n  //       },\r\n  //     })\r\n  //     .afterClosed()\r\n  //     .subscribe((confirm) => {\r\n  //       if (confirm) this.deleteVaccination(studentVaccination);\r\n  //     });\r\n  // }\r\n\r\n  // // delete studentVaccination\r\n  // deleteVaccination(studentVaccination: IStudentVaccinationGetVM) {\r\n  //   this.spinner.show();\r\n  //   this.HealthInfoServ.deleteVaccination(studentVaccination.id).subscribe(\r\n  //     (res: any) => {\r\n  //       if (res?.returnValue == 1) {\r\n  //         this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n  //       } else this.ToastrMsg.error(res?.returnString);\r\n  //       this.spinner.hide();\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  // resetForm() {\r\n  //   this.myForm.reset();\r\n  //   this.Vaccine_Ids_ctrl.setValue([]);\r\n  //   // this.submitted = false;\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n\r\n<!-- Vaccination -->\r\n<mat-card-title>\r\n  {{ \"GeneralSetup.vaccinations\" | translate }}\r\n</mat-card-title>\r\n<mat-card-content class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <ng-container\r\n            *ngFor=\"let VaccinationType of VaccinationTypes; index as i\"\r\n          >\r\n            <div class=\"col-md-6 col-12 mb-2\">\r\n              <mat-checkbox\r\n                [checked]=\"VaccinationType.selected\"\r\n                [value]=\"VaccinationType.Id\"\r\n                (change)=\"selectVaccineChange($event, i)\"\r\n                color=\"warn\"\r\n              >\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? VaccinationType.Ar_Name ?? VaccinationType.En_Name\r\n                    : VaccinationType.En_Name ?? VaccinationType.Ar_Name\r\n                }}\r\n              </mat-checkbox>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n<mat-card-actions align=\"end\" class=\"m-0\">\r\n  <!-- add - edit Vaccination -->\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info\"\r\n    [disabled]=\"!studentUserId\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    <i class=\"fa fa-plus\" *ngIf=\"StudentVaccines.length == 0\"></i>\r\n    {{\r\n      (StudentVaccines.length == 0 ? \"General.Add\" : \"General.Update\")\r\n        | translate\r\n    }}\r\n  </button>\r\n\r\n  <!-- reset -->\r\n  <!-- <button\r\n    mat-raised-button\r\n    class=\"btn btn-warning\"\r\n    [disabled]=\"myForm.pristine\"\r\n    (click)=\"resetForm()\"\r\n  >\r\n    {{ \"General.Reset\" | translate }}\r\n  </button> -->\r\n</mat-card-actions>\r\n\r\n<hr class=\"my-1\" />\r\n\r\n<!-- </mat-card>\r\n  </div>\r\n</div>\r\n -->\r\n","import { Component, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { StudentService } from \"app/dashboard/services/setup/student/student.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport {\r\n  IStudentClassroomAddEditVM,\r\n  IStudentClassroomGetVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\n\r\n@Component({\r\n  selector: \"app-student-classroom\",\r\n  templateUrl: \"./student-classroom.component.html\",\r\n  styleUrls: [\"./student-classroom.component.scss\"],\r\n})\r\nexport class StudentClassroomComponent implements OnInit {\r\n  @Input(\"studentUserId\") studentUserId: number = 0;\r\n  // @Input(\"isPreUniversityStudent\") isPreUniversityStudent: boolean;\r\n\r\n  StudentClassInfo: IStudentClassroomGetVM;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private StudentServ: StudentService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    // use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.studentUserId) this.getStudentClassroomByStudentID();\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      student_user_ar_name: [\r\n        {\r\n          value: \"\",\r\n          disabled: true,\r\n        },\r\n        [Validators.required, CustomeValidator.whiteSpace],\r\n      ],\r\n      eduYearId: [\r\n        {\r\n          value: \"\",\r\n          disabled: true,\r\n        },\r\n        ,\r\n        [Validators.required],\r\n      ],\r\n      academicClassRoomId: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      if (this.studentUserId) this.getStudentClassroomByStudentID();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get student info if edit\r\n  getStudentClassroomByStudentID() {\r\n    this.spinner.show();\r\n    this.StudentServ.getStudentClassroomInfoByStudentId(\r\n      this.studentUserId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.StudentClassInfo = res.StudentClassItem;\r\n        this.myForm.patchValue(this.StudentClassInfo);\r\n        this.formCtrls.academicClassRoomId.setValue(\r\n          this.StudentClassInfo.acadmicClassRoomId\r\n        );\r\n        // console.log(this.myForm.value)\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let studentClassroom: IStudentClassroomAddEditVM = {\r\n        studentUserId: this.studentUserId,\r\n        academicClassRoomId: this.formCtrls.academicClassRoomId.value,\r\n      };\r\n      console.log(\"studentClassroom\", studentClassroom);\r\n\r\n      this.spinner.show();\r\n      this.StudentServ.addEditStudentClassroom(studentClassroom).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            this.formCtrls.id.value == 0\r\n              ? this.ToastrMsg.success(\"General.AddSuccessfully\")\r\n              : this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n\r\n            this.submitted = false;\r\n            this.StudentClassInfo = res.student_vaccine[0];\r\n            this.myForm.patchValue(res.student_vaccine[0]);\r\n            this.formCtrls.academicClassRoomId.setValue(\r\n              res.student_vaccine[0].acadmicClassRoomId\r\n            );\r\n          } else this.ToastrMsg.error(res?.returnstring);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  resetForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    if (this.studentUserId) {\r\n      this.myForm.patchValue(this.StudentClassInfo);\r\n      this.formCtrls.academicClassRoomId.setValue(\r\n        this.StudentClassInfo.acadmicClassRoomId\r\n      );\r\n    }\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- student form -->\r\n<form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <!-- name input -->\r\n    <div class=\"col-md-6 col-12\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>\r\n          {{ \"labels.Name\" | translate }}\r\n        </mat-label>\r\n        <input matInput formControlName=\"student_user_ar_name\" />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <!-- Educational Year To Join input -->\r\n    <div class=\"col-md-6 col-12\">\r\n      <app-educational-year-dropdown\r\n        [control]=\"formCtrls?.eduYearId\"\r\n        [submitted]=\"submitted\"\r\n      ></app-educational-year-dropdown>\r\n    </div>\r\n\r\n    <!-- classroom input -->\r\n    <div class=\"col-md-6 col-12\">\r\n      <app-class-room-by-educational-year-dropdown\r\n        [eduYearControl]=\"formCtrls?.eduYearId\"\r\n        [submitted]=\"submitted\"\r\n        [classRoomcontrol]=\"formCtrls?.academicClassRoomId\"\r\n        [eduCompId]=\"EduCompId\"\r\n        [showAll]=\"false\"\r\n      ></app-class-room-by-educational-year-dropdown>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<div>\r\n  <!-- reset -->\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-warning mb-3 float-right\"\r\n    [disabled]=\"myForm.pristine\"\r\n    (click)=\"resetForm()\"\r\n  >\r\n    {{ \"General.Reset\" | translate }}\r\n  </button>\r\n\r\n  <!-- add - edit Student class Info -->\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info mb-3 float-right\"\r\n    (click)=\"onSubmit()\"\r\n  >\r\n    <i class=\"fa fa-plus\" *ngIf=\"formCtrls.id.value == 0\"></i>\r\n    {{\r\n      (formCtrls.id.value == 0 ? \"General.Add\" : \"General.Update\") | translate\r\n    }}\r\n  </button>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IAttachmentAddEditVM,\r\n  IAttachmentResponseVM,\r\n} from \"app/dashboard/models/setup/general-setup/attach-type\";\r\nimport { IStudentAttachAddEditVM, IStudentAttachResponseVM } from \"app/dashboard/models/setup/student/student\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AttachmentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return all Attachments By StudentID\r\n  getAllAttachmentsByStudentID(studentID: number) {\r\n    return this.http.get<IStudentAttachResponseVM>(\r\n      `${environment.baseUrl}StudentAttach/GetStudentAttachByStudentUserId/${studentID}`\r\n    );\r\n  }\r\n\r\n  //Add New Attachment\r\n  addEditAttachment(data: IStudentAttachAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}StudentAttach/AddEditStudentAttach`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Attachment\r\n  deleteAttachment(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}StudentAttach/deleteStudentAttach/${id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IStudentBehaveAddEditVM,\r\n  IStudentBehaveResponseVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BehaveInfoService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return all Behave_Infos By StudentID\r\n  getAllBehaveInfosByStudentID(page: number, studentID: number) {\r\n    return this.http.get<IStudentBehaveResponseVM>(\r\n      `${environment.baseUrl}Student/GetStudentBehaveByStudentUserId/${studentID}/${page}`\r\n    );\r\n  }\r\n\r\n  //Add New Behave_Info\r\n  addEditBehaveInfo(data: IStudentBehaveAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Student/AddEditStudentBehave`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Behave_Info\r\n  deleteBehaveInfo(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Student/deleteStudentBehave/${id}`\r\n    );\r\n  }\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IStudentDiscountAddEditVM,\r\n  IStudentDiscountGetResponseVM,\r\n} from \"app/dashboard/models/setup/student/discount\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DiscountService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All Student Discounts by page\r\n  getAllStudentDiscounts(\r\n    page: number\r\n  ): Observable<IStudentDiscountGetResponseVM> {\r\n    return this.http.get<IStudentDiscountGetResponseVM>(\r\n      `${environment.baseUrl}StudentDiscounts/getAllStudentDiscounts/${page}`\r\n    );\r\n  }\r\n\r\n  // Add Student Discount\r\n  addStudentDiscount(data: IStudentDiscountAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}StudentDiscounts/addStudentDiscount`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update Student Discount\r\n  updateStudentDiscount(id: number, data: IStudentDiscountAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}StudentDiscounts/updateStudentDiscount${id}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Delete Student Discount\r\n  deleteStudentDiscount(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}StudentDiscounts/deleteStudentDiscount/${id}`\r\n    );\r\n  }\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IStudentClassInfoAddEditVM,\r\n  IStudentClassInfoResponseVM,\r\n  IStudentGradingStatementResponseVM,\r\n  IStudentGradingStatementSearchVM,\r\n  IStudentTeacherResponseVM,\r\n  IStudentTeacherSearchVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EducationInfoService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //#region class info\r\n  // Return all ClassInfos By StudentID\r\n  getAllClassInfosByStudentID(\r\n    page: number,\r\n    studentID: number\r\n  ): Observable<IStudentClassInfoResponseVM> {\r\n    return this.http.get<IStudentClassInfoResponseVM>(\r\n      `${environment.baseUrl}Applications/getAllClassInfosByStudentID/${page}/${studentID}`\r\n    );\r\n  }\r\n\r\n  //Add New ClassInfo\r\n  addClassInfo(studentID: number, data: IStudentClassInfoAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Applications/addClassInfo/${studentID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update ClassInfo\r\n  updateClassInfo(studentID: number, data: IStudentClassInfoAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}Applications/updateClassInfo/${studentID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete ClassInfo\r\n  deleteClassInfo(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Applications/deleteClassInfo/${id}`\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region grading statement\r\n  getAllGradingStatementsByStudentIDAndYear(\r\n    data: IStudentGradingStatementSearchVM\r\n  ): Observable<IStudentGradingStatementResponseVM> {\r\n    return this.http.post<IStudentGradingStatementResponseVM>(\r\n      `${environment.baseUrl}Applications/getAllGradingStatementsByStudentIDAndYear`,\r\n      data\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region teachers\r\n  getAllTeachersByStudentIDAndYear(\r\n    data: IStudentTeacherSearchVM\r\n  ): Observable<IStudentTeacherResponseVM> {\r\n    return this.http.post<IStudentTeacherResponseVM>(\r\n      `${environment.baseUrl}Applications/getAllTeachersByStudentIDAndYear`,\r\n      data\r\n    );\r\n  }\r\n  //#endregion\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IGuardianInfoAddEditVM,\r\n  IGuardianInfoGetVM,\r\n} from \"app/dashboard/models/setup/student/application\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GuardianInfoService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // search if this guardian exist with another student\r\n  isGuardianInfoExist(eduCompId: number, mobile: string) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}AJAX/GetParentApplicationByMobile/${eduCompId}/${mobile}`\r\n    );\r\n  }\r\n\r\n  // get GuardianInfo ByStudentID\r\n  getApplicantParentsInfoById(id: number) {\r\n    return this.http.get<{ parentInfo: IGuardianInfoGetVM[] }>(\r\n      `${environment.baseUrl}Student/GetAllStudentParentInfoByAppId/${id}`\r\n    );\r\n  }\r\n\r\n  //Add New GuardianInfo\r\n  addEditApplicationParentInfo(application: IGuardianInfoAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Student/AddEditParentApp`,\r\n      application\r\n    );\r\n  }\r\n\r\n  //Delete GuardianInfo\r\n  deleteGuardianInfo(Id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Student/deleteParentApp/${Id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IStudentChronicDiseaseAddEditVM,\r\n  IStudentChronicDiseaseResponseVM,\r\n  IStudentVaccinationAddEditVM,\r\n  IStudentVaccinationResponseVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class HealthInfoService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //#region chronic disease\r\n  // Return all ChronicDiseases By StudentID\r\n  getAllChronicDiseasesByStudentID(page: number, studentID: number) {\r\n    return this.http.get<IStudentChronicDiseaseResponseVM>(\r\n      `${environment.baseUrl}Student/GetHealthInfoByStudentUserId/${studentID}/${page}`\r\n    );\r\n  }\r\n\r\n  //Add New ChronicDisease\r\n  addEditChronicDisease(data: IStudentChronicDiseaseAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Student/AddEditStudentHealthInfo`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete ChronicDisease\r\n  deleteChronicDisease(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Student/deleteStudentBehave/${id}`\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region vaccination\r\n  // Return all Vaccinations By StudentID\r\n  getAllVaccinationsByStudentID(studentID: number) {\r\n    return this.http.get<IStudentVaccinationResponseVM>(\r\n      `${environment.baseUrl}Student/GetStudentVaccineByStudentUserId/${studentID}`\r\n    );\r\n  }\r\n\r\n  //Add New Vaccination\r\n  addVaccination(data: IStudentVaccinationAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Student/AddStudentVaccine`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update Vaccination\r\n  updateVaccination(data: IStudentVaccinationAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}Student/EditStudentVaccine`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Vaccination\r\n  deleteVaccination(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Student/deleteStudentVaccine/${id}`\r\n    );\r\n  }\r\n  //#endregion\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IStudentBusLineAddEditVM,\r\n  IStudentBusLineGetVM,\r\n} from \"app/dashboard/models/setup/student/student\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StudentBusLineService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return all StudentBusLines By StudentID\r\n  getStudentBusLineDetailsByStudentID(studentID: number) {\r\n    return this.http.get<{ studentBusLineList: IStudentBusLineGetVM }>(\r\n      `${environment.baseUrl}Student/GetStudentBusLineByStudentUserId/${studentID}`\r\n    );\r\n  }\r\n\r\n  //Add New StudentBusLine\r\n  addEditStudentBusLine(data: IStudentBusLineAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Student/AddEditStudentBusLine`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete StudentBusLine\r\n  deleteStudentBusLine(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Student/deleteStudentBusLine/${id}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  IExamDataListVM,\r\n  IStudentExamDataListVM,\r\n} from \"app/dashboard/models/setup/student/student-exam\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StudentExamsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return all Student Exams\r\n  getAllStudentExams(page: number) {\r\n    return this.http.get<IStudentExamDataListVM>(\r\n      `${environment.baseUrl}Template/returnTemplates/${page}`\r\n    );\r\n  }\r\n\r\n  // Return all  Exam Questions\r\n  getAllExamQuestions(page: number) {\r\n    return this.http.get<IExamDataListVM>(\r\n      `${environment.baseUrl}AJAX/returnTemplateDetails/${page}`\r\n    );\r\n  }\r\n\r\n  // delete   Exam Questions\r\n  deleteExamQuestions(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}template/deleteTemplateDetailById/${id}`\r\n    );\r\n  }\r\n}\r\n"],"names":["i0","AddApplicationComponent","StudentServ","ApplicationServ","translate","route","authserv","queryParamMap","subscribe","params","functionId","Number","get","paramMap","id","applicationId","onLangChange","lang","currentLang","EduCompId","getEduCompId","checkIfPreUniversityStudent","e","isPreUniversityStudent","res","selectors","decls","vars","consts","template","ctx","MatPaginator","MatSort","MatTableDataSource","DeleteDialogComponent","ctx_r25","ApplicationIndexComponent","spinner","ToastrMsg","dialog","getUserRowFunctions","length","rowFunctions","getAllApplicants","dataSource","paginator","sort","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","page","show","Applicants","StudentApplication","itemsCounts","countItems","hide","application","open","data","msg","studentName","afterClosed","confirm","deleteApplication","deleteApplicant","studentApplicationId","returnValue","i","findIndex","splice","success","error","returnString","viewQuery","Validators","ChangeStatusComponent","fb","Router","getApplication","getAllReasons","getAllStatus","myForm","group","student_name","disabled","statusId","required","RejectionReasonId","Notes","controls","getAllApplicationStatus","StatusList","statusAppId","getApplicantStatusInfoById","Application","patchValue","getAllRejectionReasons","Reasons","formCtrls","_a","_b","setValidators","_c","_d","updateValueAndValidity","_e","_f","clearValidators","_g","_h","submitted","valid","StudentAppId","StatusId","changeStatus","navigate","queryParams","ctx_r29","ctx_r31","ctx_r33","ctx_r44","ctx_r47","DiscountComponent","StudentDiscountServ","AcademicYearServ","DiscountTypeServ","functionName","getAllStudentDiscounts","getAllAcademicYears","getAllDiscountTypes","Id","AcademicYearId","DiscountTypeId","Status","sortingDataAccessor","item","property","AcademicYear","fromDate","DiscountType","Ar_Name","En_Name","filterPredicate","indexOf","toLocaleLowerCase","getYearsDropdown","academicYears","academicEduYearList","getDiscountTypeDropdown","discountTypes","curPage","StudentDiscounts","StudentDiscountList","console","log","studentDiscount","updateStudentDiscount","addStudentDiscount","reset","GovernorateId","setValue","academicEduYearId","CityId","name","toDate","deleteStudentDiscount","info","AddStudentComponent","studentUserId","StudentProfileIndexComponent","getAllStudents","startSortingTable","eduYear_ar_name","eduYear_en_name","GetAllStudents","Students","AcceptedStudentList","student","deleteStudent","RouterModule","StudentCreateExamComponent","StudentExamIndexComponent","routes","path","component","children","redirectTo","pathMatch","StudentApplicationRoutingModule","forChild","imports","exports","CommonModule","SharedModule","NgxSpinnerModule","MaterialModule","ReactiveFormsModule","GuardianInfoComponent","BehaveInfoComponent","BusLineComponent","AttachmentsComponent","HealthInfoComponent","ChronicDiseaseComponent","VaccinationComponent","EducationInfoComponent","ClassInfoComponent","GradingStatementComponent","TeachersComponent","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","StudentClassroomComponent","StudentApplicationModule","provide","useClass","useValue","declarations","CustomeValidator","ctx_r40","authService","toastr","studentExamsService","getAllQuestions","examData","unitId","lessonId","subjectId","examName","whiteSpace","examHours","minusNum","examMinutes","questionData","questionsNumber","topic","mark","getAllExamQuestions","ExamList","itemCount","curLang","deleteQuestion","deleteExamQuestions","index","getAllStudentExams","StudentExamList","forkJoin","ctx_r7","ctx_r9","ctx_r10","ctx_r11","ctx_r12","ctx_r3","AttachmentServ","AttachTypeServ","uploadFileService","getAllStudentAttachmentsAndTypes","attachments","array","attachmentsArr","formIndex","attachmentForm","touched","attachType","StudentAttachmentForm","attachType_id","attachTypeId","selected","attach","attach_path","attach_type_ArName","attach_type_EnName","remove_image","push","getAttachTypesDropDownByUserId","getAllAttachmentsByStudentID","getAttachmentTypes","getAllStudentAttachments","AttachmentTypes","attachmentList","forEach","addStudentInstallmentForm","StudentAttachments","studentVaccineList","putSelectedAttachments","attach_index","stAttach","checked","setFormTouched","uploadFile","then","file","fileUrl","downloadFile","currentForm","previewPicture","fileInput","nativeElement","addEditStudentAttachment","openDeleteDialog","attachment","addEditAttachment","StudentAttach","deleteAttachment","RemoveFile","_r1","ctx_r16","ctx_r26","BehaveInfoServ","studentUserID","getAllBehaveInfos","behave_name","Details","getAllBehaveInfosByStudentID","BehaveInfos","studentBehaveList","behaveInfo","addEditBehaveInfo","addBehaveInfo","student_behave","updateBehaveInfo","clearForm","unshift","deleteBehaveInfo","ctx_r15","StudentBusLineServ","BusLineServ","StationServ","datePipe","getStudentBusLine","getAllBusLines","busLineId","from_date","busLineDetails_id","busTime","getBusLinesDropDown","BusLines","buslineId","getAllStationsByBuslineId","Stations","enable","disable","station","StudentBusLine","getStudentBusLineDetailsByStudentID","studentBusLineList","studentBusLine","transform","addEditStudentBusLine","Student_BusLine","deleteBusLine","deleteStudentBusLine","inputs","ctx_r32","EducationInfoServ","StudentID","getAllClassInfos","Degree","getAllClassInfosByStudentID","ClassInfos","ClassInfoList","studentClassInfo","Medicines","updateClassInfo","addClassInfo","title","deleteClassInfo","getAllGradingStatements","YearId","studentGradingStatement","studentID","getAllGradingStatementsByStudentIDAndYear","GradingStatements","GradingStatementList","environment","getAllTeachers","ShowByYearId","studentTeacher","getAllTeachersByStudentIDAndYear","Teachers","TeacherList","url","baseUrl","slice","ctx_r30","ctx_r34","ctx_r46","ctx_r48","ctx_r50","GuardianServ","getAllGuardianRelations","getGuardianInfoByStudentID","GuardianForm1st","parent_name","relation_id","parent_mobile","maxLength","minLength","pattern","startsWith","job","address","parent_email","email","GuardianForm2nd","Relations","getApplicantParentsInfoById","GuardianInfos","parentInfo","Parent_app_id","isAdd","form","rank","submitted1st","submitted2nd","guardianInfo","edu_comp_id","Parent_Name","studentAppIds","addEditApplicationParentInfo","ParentApp","parentAppId","returnstring","GuardianInfo","deleteGuardianInfo","resetGuardianForm1st","resetGuardianForm2nd","IsNewApplicant","ctx_r18","ctx_r28","HealthInfoServ","ChronicDiseaseServ","getAllChronicDiseases","getAllChronicDiseaseTypes","chronic_disease_id","medecine","Disease_ar_name","Disease_en_name","getAllChronicDiseasesDropDown","ChronicDiseaseTypes","getAllChronicDiseasesByStudentID","ChronicDiseases","chronicDisease","addEditChronicDisease","addChronicDisease","student_health","updateChronicDisease","deleteChronicDisease","ctx_r4","VaccinationType_r2","VaccinationServ","getAllStudentVaccinesAndTypes","getAllVaccinationsDropDown","getAllVaccinationsByStudentID","getAllVaccinationTypes","getAllVaccinations","VaccinationTypes","StudentVaccines","putSelectedVaccine","map","vaccine","stVaccine","Vaccine_id","studentVaccination","Vaccine_Ids","selectedVaccine","addVaccination","updateVaccination","student_vaccine","getStudentClassroomByStudentID","student_user_ar_name","eduYearId","academicClassRoomId","getStudentClassroomInfoByStudentId","StudentClassInfo","StudentClassItem","acadmicClassRoomId","studentClassroom","addEditStudentClassroom","AttachmentService","http","post","delete","factory","providedIn","BehaveInfoService","DiscountService","put","EducationInfoService","GuardianInfoService","eduCompId","mobile","HealthInfoService","StudentBusLineService","StudentExamsService"],"sourceRoot":"webpack:///"}