{"version":3,"file":"src_app_teacher_teacher_module_ts.js","mappings":"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","sources":["./src/app/shared/validators/date.adapter.ts","./src/app/students/services/student-chats.service.ts","./src/app/teacher/pages/appreciation/appreciation.component.ts","./src/app/teacher/pages/appreciation/appreciation.component.html","./src/app/teacher/pages/chat-scheduling/chat-scheduling.component.ts","./src/app/teacher/pages/chat-scheduling/chat-scheduling.component.html","./src/app/teacher/pages/chat-time-table/chat-time-table.component.html","./src/app/teacher/pages/chat-time-table/chat-time-table.component.ts","./src/app/teacher/pages/teacher-chats/teacher-chats.component.ts","./src/app/teacher/pages/teacher-chats/teacher-chats.component.html","./src/app/teacher/services/teacher-chats.service.ts","./src/app/teacher/teacher-routing.module.ts","./src/app/teacher/teacher.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { NativeDateAdapter } from \"@angular/material/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AppDateAdapter extends NativeDateAdapter {\r\n  parse(value: any): Date | null {\r\n    if (typeof value === \"string\" && value.indexOf(\"/\") > -1) {\r\n      const str = value.split(\"/\");\r\n      const year = Number(str[2]);\r\n      const month = Number(str[1]) - 1;\r\n      const date = Number(str[0]);\r\n      return new Date(year, month, date);\r\n    }\r\n    const timestamp = typeof value === \"number\" ? value : Date.parse(value);\r\n    return isNaN(timestamp) ? null : new Date(timestamp);\r\n  }\r\n  format(date: Date, displayFormat: string): string {\r\n    if (displayFormat == \"input\") {\r\n      let day = date.getDate();\r\n      let month = date.getMonth() + 1;\r\n      let year = date.getFullYear();\r\n      return this._to2digit(day) + \"/\" + this._to2digit(month) + \"/\" + year;\r\n    } else if (displayFormat == \"inputMonth\") {\r\n      let month = date.getMonth() + 1;\r\n      let year = date.getFullYear();\r\n      return this._to2digit(month) + \"/\" + year;\r\n    } else {\r\n      return date.toDateString();\r\n    }\r\n  }\r\n\r\n  private _to2digit(n: number) {\r\n    return (\"00\" + n).slice(-2);\r\n  }\r\n}\r\n\r\nexport const APP_DATE_FORMATS = {\r\n  parse: {\r\n    dateInput: { month: \"short\", year: \"numeric\", day: \"numeric\" },\r\n  },\r\n  display: {\r\n    // dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\r\n    dateInput: \"input\",\r\n    // monthYearLabel: { month: 'short', year: 'numeric', day: 'numeric' },\r\n    monthYearLabel: \"inputMonth\",\r\n    dateA11yLabel: { year: \"numeric\", month: \"long\", day: \"numeric\" },\r\n    monthYearA11yLabel: { year: \"numeric\", month: \"long\" },\r\n  },\r\n};\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StudentChatService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return askTeacher Data\r\n  askTeacher(id: any) {\r\n    return this.http.get(environment.baseUrl + \"AJAX/askTeacher/\" + id);\r\n  }\r\n\r\n  // Return Messages And replayes in msg\r\n  getMsgReplaies(msgId: any) {\r\n    return this.http.get(\r\n      environment.baseUrl + \"MessageThreads/returnThreadReplies/\" + msgId\r\n    );\r\n  }\r\n\r\n  //Replay to Msg\r\n  SendStudentMessage(data: any) {\r\n    return this.http.post(environment.baseUrl + \"AJAX/SendMessage\", data);\r\n  }\r\n\r\n  getStudentScheduling() {\r\n    return this.http.get(\r\n      `${environment.baseUrl}AskTeacherSchedulings/GeTAskTeacherSchedulingForStudent`\r\n    );\r\n  }\r\n\r\n  getCurrntThread(threadId: any, SchedulId: any) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}MessageThreads/${threadId}/${SchedulId}`\r\n    );\r\n  }\r\n\r\n  likeMsg(body: any) {\r\n    return this.http.post(`${environment.baseUrl}UserLikes`, body);\r\n  }\r\n\r\n  unLikeMsg(replyId: number) {\r\n    return this.http.delete(`${environment.baseUrl}UserLikes/${replyId}`);\r\n  }\r\n}\r\n","import { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  ClassRoomGetVM,\r\n  IStudentClassGetVM,\r\n} from \"app/dashboard/models/setup/general-setup/classes/class-room\";\r\nimport { StudentService } from \"app/dashboard/services/setup/student/student.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { TeacherService } from \"app/teacher/services/teacher.service\";\r\nimport { AppreciationsService } from \"app/dashboard/services/setup/general-setup/appreciations.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { IExpressioModel } from \"app/dashboard/models/setup/general-setup/appreciation-expressions\";\r\nimport { IAppreciationSendVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-appreciation\",\r\n  templateUrl: \"./appreciation.component.html\",\r\n  styleUrls: [\"./appreciation.component.scss\"],\r\n})\r\nexport class AppreciationComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  classroomList: ClassRoomGetVM[] = [];\r\n  expressionsList: IExpressioModel[] = [];\r\n  studentList: any[] = [];\r\n\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private teacherService: TeacherService,\r\n    private AppreciationExpressionServ: AppreciationsService,\r\n    private StudentServ: StudentService,\r\n    private generalServ: GeneralService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      // id: [0],\r\n      classroomId: [\"\", [Validators.required]],\r\n      studentIds: [\r\n        {\r\n          value: [],\r\n          disabled: true,\r\n        },\r\n        [Validators.required],\r\n      ],\r\n      expression: [\r\n        \"\" /* , [Validators.required, CustomeValidator.whiteSpace] */,\r\n      ],\r\n      AppreciationExpressionId: [\"\", [Validators.required]],\r\n    });\r\n\r\n    this.getAllClassroomsOfTeacher();\r\n    this.getAllAppreciationExpressions();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllClassroomsOfTeacher();\r\n      this.getAllAppreciationExpressions();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get Classrooms >> dropDown\r\n  getAllClassroomsOfTeacher() {\r\n    this.spinner.show();\r\n    this.teacherService.getClassesOfTeacher().subscribe((res) => {\r\n      if (res) this.classroomList = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get Appreciation Expression >> dropDown\r\n  getAllAppreciationExpressions() {\r\n    this.spinner.show();\r\n    this.AppreciationExpressionServ.getAllExpressionsDropDown().subscribe(\r\n      (res) => {\r\n        console.log(\"resss\", res);\r\n        if (res) this.expressionsList = res;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get students in classroom\r\n  onChangeClassroom(classroomId: number) {\r\n    console.log(\"cclll\", classroomId);\r\n    this.formCtrls?.studentIds.setValue(null);\r\n\r\n    if (classroomId) {\r\n      this.spinner.show();\r\n      this.StudentServ.GetAllStudentsByClassroomId(classroomId).subscribe(\r\n        (res) => {\r\n          if (res) {\r\n            console.log(\"rrrrr\", res);\r\n            this.studentList = res;\r\n            this.formCtrls?.studentIds.enable();\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.formCtrls?.studentIds.disable();\r\n  }\r\n\r\n  // send appreciation\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // check to send each expression\r\n    if (!this.formCtrls.AppreciationExpressionId?.value) {\r\n      this.formCtrls.expression.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.whiteSpace,\r\n      ]);\r\n      this.formCtrls.expression.updateValueAndValidity();\r\n    } else {\r\n      this.formCtrls.expression.clearValidators();\r\n      this.formCtrls.expression.updateValueAndValidity();\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      let appreciation: IAppreciationSendVM = {\r\n        // eduCompId: this.EduCompId,\r\n        ToUsers: this.formCtrls.studentIds?.value,\r\n        //FreeText: this.formCtrls.expression?.value,\r\n        AppreciationExpressionId:\r\n          this.formCtrls.AppreciationExpressionId?.value,\r\n      };\r\n      console.log(\"appreciation\", appreciation);\r\n\r\n      this.spinner.show();\r\n      this.generalServ.sendAppreciation(appreciation).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.ToastrMsg.error(\"General.SendSuccessfully\");\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- send Appreciation -->\r\n      <mat-card-title>\r\n        {{ \"Teacher.Appreciation\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- classrooms input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"classes.classRoom\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"classroomId\"\r\n                      (selectionChange)=\"\r\n                        onChangeClassroom(formCtrls.classroomId.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let classroom of classroomList\"\r\n                        [value]=\"classroom.AcademicClassRoomId\"\r\n                      >\r\n                        {{ classroom.roomCode }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.classroomId.invalid &&\r\n                        (formCtrls?.classroomId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.classroomId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- students input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Students\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"studentIds\" multiple>\r\n                      <!-- <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option> -->\r\n                      <mat-option\r\n                        *ngFor=\"let student of studentList\"\r\n                        [value]=\"student.id\"\r\n                      >\r\n                        {{ student.student_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.studentIds.invalid &&\r\n                        (formCtrls?.studentIds.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.studentIds.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- exist expressions input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Teacher.Expression\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"AppreciationExpressionId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let expression of expressionsList\"\r\n                        [value]=\"expression.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? expression.Ar_Name ?? expression.En_Name\r\n                            : expression.En_Name ?? expression.Ar_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.AppreciationExpressionId.invalid &&\r\n                        (formCtrls?.AppreciationExpressionId.touched ||\r\n                          submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.AppreciationExpressionId.errors?.required\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Expression input -->\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Teacher.Expression\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"expression\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.expression.invalid &&\r\n                        (formCtrls?.expression.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.expression.errors?.required ||\r\n                          formCtrls?.expression.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- send -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Send\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { ClassRoomGetVM } from \"app/dashboard/models/setup/general-setup/classes/class-room\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ClassRoomService } from \"app/dashboard/services/setup/general-setup/classes/class-room.service\";\r\nimport { TeacherChatService } from \"app/teacher/services/teacher-chats.service\";\r\nimport { IChatSchedulingAddVM } from \"app/teacher/models/teacher-chats\";\r\nimport { WeeklyTableService } from \"app/dashboard/services/educational-tabels/weekly-table.service\";\r\nimport { IWeeklyDayVM } from \"app/dashboard/models/educational-tabels/weekly-table\";\r\nimport { TeacherService } from \"app/teacher/services/teacher.service\";\r\n\r\n@Component({\r\n  selector: \"app-chat-scheduling\",\r\n  templateUrl: \"./chat-scheduling.component.html\",\r\n  styleUrls: [\"./chat-scheduling.component.scss\"],\r\n})\r\nexport class ChatSchedulingComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  currentLang: string;\r\n  classroomList: ClassRoomGetVM[] = [];\r\n  weeklyDays: IWeeklyDayVM[] = [];\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private ChatServ: TeacherChatService,\r\n    private teacherService: TeacherService,\r\n    private WeeklyTableServ: WeeklyTableService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      // id: [0],\r\n      classroomId: [\"\", [Validators.required]],\r\n      weeklyDayId: [\"\", [Validators.required]],\r\n      From_Hour: [\"\", [Validators.required]],\r\n      To_Hour: [\"\", [Validators.required]],\r\n    });\r\n\r\n    this.getAllClassrooms();\r\n    this.getAllWeeklyDays();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllClassrooms();\r\n      this.getAllWeeklyDays();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get Classrooms >> dropDown\r\n  getAllClassrooms() {\r\n    this.spinner.show();\r\n    this.teacherService.getClassesOfTeacher().subscribe((res) => {\r\n      if (res) this.classroomList = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get Weekly Day\r\n  getAllWeeklyDays() {\r\n    this.spinner.show();\r\n    this.WeeklyTableServ.getAllWeeklyDays().subscribe((res) => {\r\n      if (res) this.weeklyDays = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // add chat scheduling\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      if (this.formCtrls.To_Hour.value < this.formCtrls.From_Hour.value) {\r\n        this.ToastrMsg.error(\"EducationalTabels.ToHourBeforeFromDHour\");\r\n        return;\r\n      }\r\n\r\n      let ChatScheduling: IChatSchedulingAddVM = {\r\n        // eduCompId: this.EduCompId,\r\n        classroomId: this.formCtrls.classroomId?.value,\r\n        weeklyDayId: this.formCtrls.weeklyDayId?.value,\r\n        From_Hour: this.formCtrls.From_Hour?.value,\r\n        To_Hour: this.formCtrls.To_Hour?.value,\r\n      };\r\n      // console.log(\"ChatScheduling\", ChatScheduling);\r\n\r\n      this.spinner.show();\r\n      this.ChatServ.addChatScheduling(ChatScheduling).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.ToastrMsg.error(\"General.AddSuccessfully\");\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Chat Scheduling -->\r\n      <mat-card-title>\r\n        {{ \"Teacher.ChatScheduling\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- classrooms input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"classes.classRoom\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"classroomId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let classroom of classroomList\"\r\n                        [value]=\"classroom.id\"\r\n                      >\r\n                        {{ classroom.roomCode }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.classroomId.invalid &&\r\n                        (formCtrls?.classroomId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.classroomId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- weekly day input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"EducationalTabels.Day\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"weeklyDayId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let day of weeklyDays\"\r\n                        [value]=\"day.id\"\r\n                      >\r\n                        {{ currentLang == \"ar\" ? day.Ar_Name : day.En_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.weeklyDayId.invalid &&\r\n                        (formCtrls?.weeklyDayId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.weeklyDayId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- from hour -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalTabels.FromHour\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"From_Hour\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.From_Hour?.invalid &&\r\n                        (formCtrls.From_Hour?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls.From_Hour?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- to hour -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalTabels.ToHour\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"To_Hour\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.To_Hour?.invalid &&\r\n                        (formCtrls.To_Hour?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls.To_Hour?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- send -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- Chat Time Table -->\r\n      <mat-card-title>\r\n        {{ \"Teacher.ChatTimeTable\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid mb-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 table-container\">\r\n            <ng-container *ngFor=\"let day of teacherTimeTable; index as i\">\r\n              <div class=\"row\">\r\n                <div\r\n                  class=\"col day-cell\"\r\n                  [ngClass]=\"{\r\n                    'border-ar': currentLang == 'ar',\r\n                    'border-en': currentLang == 'en',\r\n                    'first-row': i == 0\r\n                  }\"\r\n                >\r\n                  <div>{{ day.key }}</div>\r\n                </div>\r\n\r\n                <div class=\"col\">\r\n                  <div class=\"row\">\r\n                    <ng-container *ngFor=\"let schedule of day.List\">\r\n                      <a\r\n                        routerLink=\"../chats/{{ schedule.id }}\"\r\n                        [queryParams]=\"{ ThreadId: schedule.messageThread?.Id }\"\r\n                        [ngClass]=\"{\r\n                          'border-ar': currentLang == 'ar',\r\n                          'border-en': currentLang == 'en',\r\n                          'first-row': i == 0\r\n                        }\"\r\n                        class=\"col schedule-card\"\r\n                      >\r\n                        <div class=\"card-cell\">\r\n                          <!-- src=\"{{ schedule.teacherPicture.attach_path }}\" -->\r\n                          <img\r\n                            class=\"card-image\"\r\n                            src=\"{{ schedule.teacherPicture.attach_path }}\"\r\n                            alt=\"\"\r\n                          />\r\n                          <div>\r\n                            <h5 class=\"schedule-title\">\r\n                              {{ schedule.teacherName }}\r\n                            </h5>\r\n                            <div class=\"text-danger\">\r\n                              <div class=\"time-text\">\r\n                                {{ schedule.FromHour | Time }}\r\n                              </div>\r\n                              <span> - </span>\r\n                              <div class=\"time-text\">\r\n                                {{ schedule.ToHour | Time }}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { TranslateService } from \"@ngx-translate/core\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { TeacherChatService } from \"app/teacher/services/teacher-chats.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GroupByService } from \"app/shared/services/General/group-by.service\";\r\nimport { ITeacherTimeTableVM } from \"app/teacher/models/teacher-chats\";\r\n\r\n@Component({\r\n  selector: \"app-chat-time-table\",\r\n  templateUrl: \"./chat-time-table.component.html\",\r\n  styleUrls: [\"./chat-time-table.component.scss\"],\r\n})\r\nexport class ChatTimeTableComponent implements OnInit {\r\n  teacherTimeTable: ITeacherTimeTableVM[];\r\n\r\n  currentLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private ChatServ: TeacherChatService,\r\n    private GroupByService: GroupByService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTecherScheduling();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTecherScheduling();\r\n    });\r\n  }\r\n\r\n  getTecherScheduling() {\r\n    this.spinner.show();\r\n    this.ChatServ.getTeacherChatScheduling().subscribe(\r\n      (res: ITeacherTimeTableVM[]) => {\r\n        if (res) {\r\n          console.log(\"res Groups\", this.GroupByService.groupBy(res, \"Day\"));\r\n          console.log(\"res\", res);\r\n          this.teacherTimeTable = this.GroupByService.groupBy(res, \"Day\");\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IfileVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport {\r\n  messageThreadVM,\r\n  MsgReplayVM,\r\n  MsgsVM,\r\n} from \"app/students/models/student-chats\";\r\nimport { StudentChatService } from \"app/students/services/student-chats.service\";\r\nimport { TeacherChatService } from \"app/teacher/services/teacher-chats.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-chats\",\r\n  templateUrl: \"./teacher-chats.component.html\",\r\n  styleUrls: [\"./teacher-chats.component.scss\"],\r\n})\r\nexport class TeacherChatsComponent implements OnInit {\r\n  MsgReplaies: MsgReplayVM[] = []; //List of replaies For Msg\r\n  TeacherSubjectIds: any;\r\n  selectedMsgToReplay: MsgsVM = null;\r\n  currentUserId: number;\r\n  attachecFilePath: any = null;\r\n  replayForm: FormGroup;\r\n  createThreadForm: FormGroup;\r\n\r\n  schedulingId: any;\r\n  msgGroup?: messageThreadVM = null;\r\n  creatSubmitted? = false;\r\n  currentThreadId: any = null;\r\n  isContentOverlay = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private teacherChatService: TeacherChatService,\r\n    private studentChatService: StudentChatService,\r\n    public uploadFileService: UploadFileService,\r\n    private GeneralServ: GeneralService,\r\n    private authService: AuthService,\r\n    private toastr: MessagesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.schedulingId = params.get(\"SchedulingId\");\r\n      console.log(\"schedulingId:\", this.schedulingId);\r\n    });\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.currentThreadId = params.get(\"ThreadId\");\r\n      console.log(\"currentThreadId:\", this.currentThreadId);\r\n    });\r\n\r\n    this.currentUserId = authService.getUserId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTeacherSubjectIds();\r\n\r\n    this.replayForm = this.fb.group({\r\n      threadId: [\"\", Validators.required],\r\n      TeacherSubjectIds: [[], Validators.required],\r\n      ParentReplyId: [null],\r\n      Attach: [null],\r\n      ReplyText: [\"\"],\r\n    });\r\n\r\n    this.createThreadForm = this.fb.group({\r\n      askTeacherSchedulingId: [this.schedulingId, Validators.required],\r\n      replyQueueAmount: [null, [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n\r\n    if (this.currentThreadId != null) {\r\n      this.getMsgReplaies(this.currentThreadId);\r\n      this.FormCtrl.threadId.setValue(this.currentThreadId);\r\n      this.getCurrntThread();\r\n    }\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.replayForm.controls;\r\n  }\r\n\r\n  get replyQueueAmountCtrl() {\r\n    return this.createThreadForm.get(\"replyQueueAmount\");\r\n  }\r\n\r\n  getTeacherSubjectIds() {\r\n    this.teacherChatService.getTeacherSubjectIds().subscribe((res: any) => {\r\n      if (res) {\r\n        //  console.log(\"TeacherSubjectIds\", res);\r\n        this.FormCtrl.TeacherSubjectIds.setValue(res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getMsgReplaies(msgId: number) {\r\n    this.spinner.show();\r\n    this.studentChatService\r\n      .getMsgReplaies(msgId)\r\n      .subscribe((res: MsgReplayVM[]) => {\r\n        this.MsgReplaies = res;\r\n        // setTimeout(function () {\r\n        //   $(\".chat-box .chat-body\").animate(\r\n        //     { scrollTop: $(\".chat-box .chat-body\").prop(\"scrollHeight\") },\r\n        //     1000\r\n        //   );\r\n        // }, 1000);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  ReplayToMessage() {\r\n    this.spinner.show();\r\n    if (this.replayForm.valid) {\r\n      this.teacherChatService\r\n        .SendTeacherMessage(this.replayForm.value)\r\n        .subscribe((res: any) => {\r\n          // console.log('ReplayToMessage', res);\r\n          if (res.returnString == \"Success\") {\r\n            this.getMsgReplaies(this.FormCtrl.threadId.value);\r\n            this.FormCtrl.ReplyText.reset();\r\n            this.FormCtrl.Attach.reset();\r\n            this.closePreview();\r\n            // $(\".chat-box .chat-body\").animate(\r\n            //   { scrollTop: $(\".chat-box .chat-body\").prop(\"scrollHeight\") },\r\n            //   1000\r\n            // );\r\n          } else {\r\n            this.toastr.error(res.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getCurrntThread() {\r\n    this.studentChatService\r\n      .getCurrntThread(this.currentThreadId, this.schedulingId)\r\n      .subscribe((res: any) => {\r\n        console.log(\"CurrntThread\", res);\r\n        this.msgGroup = res.messageThread;\r\n        // this.createThreadForm.controls['Id'].setValue(this.currentThreadId);\r\n        //this.enterNewThread(res.Id);\r\n        //this.currentThreadId = res.Id;\r\n      });\r\n  }\r\n\r\n  createMessageThread() {\r\n    this.creatSubmitted = true;\r\n    let valid = this.createThreadForm.valid;\r\n    console.log(this.createThreadForm.value);\r\n    if (valid) {\r\n      this.spinner.show();\r\n      this.teacherChatService\r\n        .createMessageThreads(this.createThreadForm.value)\r\n        .subscribe((res: any) => {\r\n          console.log(res);\r\n          this.router.navigate([], {\r\n            relativeTo: this.route,\r\n            queryParams: { ThreadId: res.Id },\r\n            queryParamsHandling: \"merge\",\r\n          });\r\n          this.msgGroup = res;\r\n          this.creatSubmitted = false;\r\n          this.currentThreadId = res.Id;\r\n          this.FormCtrl.threadId.setValue(res.Id);\r\n          this.createThreadForm.controls[\"replyQueueAmount\"].reset();\r\n          this.getMsgReplaies(res.Id);\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  updateMessageThreads() {\r\n    this.creatSubmitted = true;\r\n    let valid = this.createThreadForm.valid;\r\n    console.log(this.createThreadForm.value);\r\n    if (valid) {\r\n      this.spinner.show();\r\n      this.teacherChatService\r\n        .updateMessageThreads(this.createThreadForm.value, this.currentThreadId)\r\n        .subscribe((res: any) => {\r\n          console.log(res);\r\n          if (res.Id == this.currentThreadId) {\r\n            this.creatSubmitted = false;\r\n            this.getMsgReplaies(res.Id);\r\n            this.createThreadForm.controls[\"replyQueueAmount\"].reset();\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n          }\r\n          // this.msgGroup = res;\r\n\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  removeReply(msgId: number) {\r\n    this.spinner.show();\r\n    this.teacherChatService.removeReply(msgId).subscribe((res: any) => {\r\n      //  console.log('removeReply', res);\r\n      if (res.returnValue == 1) {\r\n        this.toastr.success(\"تم حذف الرسالة\");\r\n        this.getMsgReplaies(this.FormCtrl.threadId.value);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getParentReplyId(msg: MsgsVM) {\r\n    this.FormCtrl.ParentReplyId.setValue(msg.Id);\r\n    this.selectedMsgToReplay = msg;\r\n    if (msg) {\r\n      console.log(\"ParentReplyIdMsg\", msg);\r\n    }\r\n    console.log(this.replayForm.value);\r\n  }\r\n\r\n  closePreview() {\r\n    this.FormCtrl.Attach.setValue(null);\r\n    this.FormCtrl.ParentReplyId.setValue(\"\");\r\n    this.selectedMsgToReplay = null;\r\n    this.attachecFilePath = null;\r\n  }\r\n\r\n  // attache Replay Pic\r\n  attacheReplayPic(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        this.FormCtrl.Attach.setValue(file);\r\n        this.attachecFilePath = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  onSidebarToggle() {\r\n    this.isContentOverlay = true;\r\n  }\r\n\r\n  onContentOverlay() {\r\n    this.isContentOverlay = false;\r\n  }\r\n\r\n  openDeleteDialog(msg: MsgReplayVM): void {\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: {\r\n        title: \"General.ConfirmDelete\",\r\n        msg: msg.Message,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((confirm) => {\r\n      if (confirm) this.removeReply(msg.Id);\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<mat-card class=\"chat-application overflow-hidden p-1 pb-2\">\r\n  <div\r\n    class=\"app-content-overlay\"\r\n    #contentOverlay\r\n    class=\"app-content-overlay\"\r\n    [ngClass]=\"{ show: isContentOverlay }\"\r\n    (click)=\"onContentOverlay()\"\r\n  ></div>\r\n\r\n  <!-- Right Col: Chat content -->\r\n  <!-- Top Header -->\r\n  <div class=\"chat-name p-1\">\r\n    <div>\r\n      <span\r\n        (click)=\"onSidebarToggle()\"\r\n        class=\"chat-app-sidebar-toggle ft-menu font-medium-4 mr-3 d-block d-md-none\"\r\n      >\r\n      </span>\r\n\r\n      <div class=\"row align-items-center justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <form [formGroup]=\"createThreadForm\" class=\"d-inline-block\">\r\n            <input\r\n              formControlName=\"replyQueueAmount\"\r\n              type=\"number\"\r\n              class=\"form-control\"\r\n              placeholder=\"Students Numbers\"\r\n            />\r\n\r\n            <span\r\n              class=\"text-danger\"\r\n              *ngIf=\"\r\n                replyQueueAmountCtrl?.invalid &&\r\n                (replyQueueAmountCtrl?.touched || creatSubmitted)\r\n              \"\r\n            >\r\n              <span\r\n                *ngIf=\"\r\n                  replyQueueAmountCtrl?.errors?.required ||\r\n                  replyQueueAmountCtrl?.errors?.bigZero\r\n                \"\r\n              >\r\n                {{ \"labels.mustEnterValue\" | translate }}\r\n              </span>\r\n            </span>\r\n          </form>\r\n          <button\r\n            *ngIf=\"currentThreadId == null\"\r\n            class=\"mr-1 ml-1\"\r\n            mat-mini-fab\r\n            color=\"warn\"\r\n            (click)=\"createMessageThread()\"\r\n          >\r\n            <mat-icon>add</mat-icon>\r\n          </button>\r\n          <button\r\n            *ngIf=\"currentThreadId != null\"\r\n            class=\"mr-1 ml-1\"\r\n            mat-mini-fab\r\n            color=\"warn\"\r\n            (click)=\"updateMessageThreads()\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <a class=\"text-center\" (click)=\"getMsgReplaies(msgGroup?.Id)\">\r\n            <div class=\"alert alert-light m-0\" role=\"alert\">\r\n              {{ msgGroup?.ThreadText }}\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"w-40\">\r\n        <form [formGroup]=\"createThreadForm\">\r\n          <input\r\n            formControlName=\"replyQueueAmount\"\r\n            type=\"number\"\r\n            class=\"form-control\"\r\n            placeholder=\"Students Numbers\"\r\n          />\r\n\r\n          <span\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              replyQueueAmountCtrl?.invalid &&\r\n              (replyQueueAmountCtrl?.touched || creatSubmitted)\r\n            \"\r\n          >\r\n            <span *ngIf=\"replyQueueAmountCtrl?.errors?.required\">\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n            <span *ngIf=\"replyQueueAmountCtrl?.errors?.bigZero\">\r\n              {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n            </span>\r\n          </span>\r\n        </form>\r\n      </div> -->\r\n\r\n      <!-- <div class=\"position-relative float-right\">\r\n        <button\r\n          *ngIf=\"currentThreadId == null\"\r\n          class=\"escprev\"\r\n          mat-mini-fab\r\n          color=\"warn\"\r\n          (click)=\"createMessageThread()\"\r\n        >\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n        <button\r\n          *ngIf=\"currentThreadId != null\"\r\n          class=\"escprev\"\r\n          mat-mini-fab\r\n          color=\"warn\"\r\n          (click)=\"updateMessageThreads()\"\r\n        >\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n      </div> -->\r\n\r\n      <!-- <div>\r\n        <a class=\"text-center\" (click)=\"getMsgReplaies(msgGroup?.Id)\">\r\n          <div class=\"alert alert-light m-0\" role=\"alert\">\r\n            {{ msgGroup?.ThreadText }}\r\n          </div>\r\n        </a>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n\r\n  <section class=\"chat-app-window position-relative\">\r\n    <div class=\"chats\">\r\n      <div\r\n        class=\"chat\"\r\n        *ngFor=\"let msg of MsgReplaies\"\r\n        [ngClass]=\"{\r\n          'chat-right': msg.userId == currentUserId,\r\n          'chat-left': msg.userId != currentUserId,\r\n          'msg-not-seen': !msg.isShown\r\n        }\"\r\n        id=\"replay-{{ msg.Id }}\"\r\n      >\r\n        <div class=\"chat-avatar\">\r\n          <div class=\"avatar avatar-md\">\r\n            <!-- user picture -->\r\n            <!-- <img\r\n              src=\"mozakretyapi/{{ msg.UserprofilePicture }}\"\r\n              alt=\"{{ msg.Username }}\"\r\n            /> -->\r\n            <img\r\n              [src]=\"uploadFileService.previewPicture(msg.UserprofilePicture)\"\r\n              alt=\"{{ msg.Username }}\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-body\">\r\n          <div\r\n            class=\"chat-content\"\r\n            [ngClass]=\"{\r\n              'bg-info': msg.userId == currentUserId\r\n            }\"\r\n          >\r\n            <!-- username -->\r\n            <p class=\"username\">\r\n              {{ msg.Username }}\r\n            </p>\r\n            <!-- msg replay -->\r\n            <div\r\n              class=\"replay-box rounded bg-light-secondary\"\r\n              *ngIf=\"msg.ParentReply.Id != null\"\r\n            >\r\n              <p class=\"content replytext\" *ngIf=\"!msg.ParentReply.IsDelete\">\r\n                <span style=\"display: block\">\r\n                  <i class=\"ft-repeat\"></i>\r\n                  <strong> {{ msg.ParentReply.Username }}:</strong>\r\n                </span>\r\n\r\n                <span>\r\n                  {{ msg.ParentReply.Message }}\r\n                </span>\r\n\r\n                <!-- msg replay Attach -->\r\n                <img\r\n                  *ngIf=\"msg.ParentReply.Attach\"\r\n                  [src]=\"\r\n                    uploadFileService.previewPicture(msg.ParentReply.Attach)\r\n                  \"\r\n                  style=\"width: 50px; height: 50px\"\r\n                />\r\n              </p>\r\n\r\n              <!-- deleted msg -->\r\n              <p class=\"content replytext\" *ngIf=\"msg.ParentReply.IsDelete\">\r\n                <span class=\"deleted-msg\"\r\n                  ><i class=\"fa fa-ban\"></i\r\n                  >{{ \"labels.MsgDeleted\" | translate }}\r\n                </span>\r\n              </p>\r\n            </div>\r\n\r\n            <!-- not deleted Message content -->\r\n            <p *ngIf=\"!msg.IsDelete\" class=\"content\">\r\n              {{ msg.Message }}\r\n            </p>\r\n\r\n            <p *ngIf=\"msg.IsDelete\" class=\"content\" class=\"content replytext\">\r\n              <span class=\"deleted-msg\">\r\n                <i class=\"fa fa-ban\"></i>{{ \"labels.MsgDeleted\" | translate }}\r\n              </span>\r\n            </p>\r\n\r\n            <!-- not deleted Message Attach -->\r\n            <div *ngIf=\"msg.Attach && !msg.IsDelete\">\r\n              <a\r\n                [href]=\"\r\n                  uploadFileService.previewPicture(msg.Attach | sliceExamPic)\r\n                \"\r\n                target=\"_blank\"\r\n                data-lightbox=\"image-1\"\r\n                data-title=\"\"\r\n              >\r\n                <img\r\n                  class=\"img-responsive\"\r\n                  [src]=\"\r\n                    uploadFileService.previewPicture(msg.Attach | sliceExamPic)\r\n                  \"\r\n                />\r\n              </a>\r\n            </div>\r\n\r\n            <hr />\r\n            <p class=\"msg-time\">\r\n              <!-- not deleted time and date -->\r\n              <span>\r\n                {{ msg.Date | date : \"dd/MM/yyyy\" }} -\r\n                {{ msg.Date | Time }}\r\n              </span>\r\n\r\n              <span\r\n                class=\"msg-opt-icons mr-1\"\r\n                *ngIf=\"msg.isTeacher\"\r\n                [ngClass]=\"{ danger: msg.Likes > 0 }\"\r\n                [ngClass]=\"{\r\n                  danger: msg.Likes > 0,\r\n                  wieght: msg.Likes == 0\r\n                }\"\r\n              >\r\n                <i class=\"fa fa-heart\" aria-hidden=\"true\">\r\n                  {{ msg.Likes > 0 ? msg.Likes : \"\" }}\r\n                </i>\r\n              </span>\r\n\r\n              <span\r\n                *ngIf=\"!msg.IsDelete\"\r\n                class=\"cursor-pointer\"\r\n                (click)=\"openDeleteDialog(msg)\"\r\n              >\r\n                <i\r\n                  class=\"ft-trash-2 mr-1\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Delete This Message\"\r\n                ></i>\r\n              </span>\r\n\r\n              <span class=\"cursor-pointer\" (click)=\"getParentReplyId(msg)\">\r\n                <i\r\n                  class=\"ft-repeat\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Reply To This Message\"\r\n                >\r\n                </i>\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- Replay Options -->\r\n  <section\r\n    class=\"chat-app-form chat-replay-options bg-light-primary\"\r\n    *ngIf=\"this.attachecFilePath != null || selectedMsgToReplay != null\"\r\n  >\r\n    <div class=\"row\">\r\n      <button\r\n        class=\"escprev\"\r\n        (click)=\"closePreview()\"\r\n        mat-mini-fab\r\n        color=\"warn\"\r\n      >\r\n        <mat-icon>clear</mat-icon>\r\n      </button>\r\n      <div\r\n        class=\"col-4\"\r\n        *ngIf=\"this.attachecFilePath != null\"\r\n        class=\"img-responsive\"\r\n      >\r\n        <img\r\n          class=\"img-responsive\"\r\n          [src]=\"uploadFileService.previewPicture(attachecFilePath)\"\r\n          alt=\"Photo attached\"\r\n        />\r\n      </div>\r\n      <div class=\"col-6\" *ngIf=\"selectedMsgToReplay != null\">\r\n        <textarea disabled class=\"rplayedMsg\">\r\n        {{ selectedMsgToReplay.Message }}\r\n        </textarea>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- Replay to msg form -->\r\n  <section\r\n    class=\"chat-app-form px-3 py-2\"\r\n    *ngIf=\"FormCtrl.threadId.value != null\"\r\n  >\r\n    <form [formGroup]=\"replayForm\" class=\"d-flex align-items-center\">\r\n      <input\r\n        formControlName=\"ReplyText\"\r\n        type=\"text\"\r\n        class=\"form-control chat-message-send mr-2\"\r\n        placeholder=\"Type your replay here\"\r\n      />\r\n\r\n      <button (click)=\"fileInput.click()\" mat-mini-fab color=\"warn\">\r\n        <mat-icon>attachment</mat-icon>\r\n      </button>\r\n      <input\r\n        hidden\r\n        (change)=\"attacheReplayPic($event)\"\r\n        #fileInput\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        id=\"file\"\r\n      />\r\n      <button\r\n        (click)=\"ReplayToMessage()\"\r\n        [disabled]=\"FormCtrl.threadId.value == null\"\r\n        type=\"submit\"\r\n        class=\"btn btn-primary d-lg-flex align-items-center\"\r\n      >\r\n        <i class=\"ft-send\"></i>\r\n        <span class=\"d-none d-lg-block ml-1\">\r\n          {{ \"General.Send\" | translate }}\r\n        </span>\r\n      </button>\r\n    </form>\r\n  </section>\r\n</mat-card>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport {\r\n  IChatSchedulingAddVM,\r\n  ITeacherTimeTableVM,\r\n} from \"app/teacher/models/teacher-chats\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TeacherChatService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addChatScheduling(data: IChatSchedulingAddVM) {\r\n    return this.http.post(`${environment.baseUrl}AskTeacherSchedulings`, data);\r\n  }\r\n\r\n  // get teacher chat time table\r\n  getTeacherChatScheduling() {\r\n    return this.http.get(\r\n      `${environment.baseUrl}AskTeacherSchedulings/GeTAskTeacherScheduling`\r\n    );\r\n  }\r\n\r\n  getTeacherSubjectIds() {\r\n    return this.http.get(\r\n      environment.baseUrl + \"AJAX/returnTeacherSubjectIdsForAssistant\"\r\n    );\r\n  }\r\n\r\n  SendTeacherMessage(data: any) {\r\n    return this.http.post(\r\n      environment.baseUrl + \"MessageThreads/SendMessage\",\r\n      data\r\n    );\r\n  }\r\n\r\n  closeMsg(msgId: number) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}AJAX/CloseThread/${msgId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  removeReply(msgId: number) {\r\n    return this.http.delete(environment.baseUrl + \"AJAX/RemoveReply/\" + msgId);\r\n  }\r\n\r\n  createMessageThreads(body: any) {\r\n    return this.http.post(environment.baseUrl + \"MessageThreads\", body);\r\n  }\r\n\r\n  updateMessageThreads(body: any, ThreadId: number) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}MessageThreads/${ThreadId}`,\r\n      body\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { ChatSchedulingComponent } from \"./pages/chat-scheduling/chat-scheduling.component\";\r\nimport { ChatTimeTableComponent } from \"./pages/chat-time-table/chat-time-table.component\";\r\nimport { AppreciationComponent } from \"./pages/appreciation/appreciation.component\";\r\nimport { SendAppreciationComponent } from \"app/shared/components/send-appreciation/send-appreciation.component\";\r\nimport { TeacherChatsComponent } from \"./pages/teacher-chats/teacher-chats.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"appreciation\",\r\n    component: SendAppreciationComponent,\r\n  },\r\n  {\r\n    path: \"chat-scheduling\",\r\n    component: ChatSchedulingComponent,\r\n  },\r\n  {\r\n    path: \"chat-table\",\r\n    component: ChatTimeTableComponent,\r\n  },\r\n  {\r\n    path: \"chats/:SchedulingId\",\r\n    component: TeacherChatsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TeacherRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { TeacherRoutingModule } from \"./teacher-routing.module\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { AppreciationComponent } from \"./pages/appreciation/appreciation.component\";\r\nimport { ChatSchedulingComponent } from \"./pages/chat-scheduling/chat-scheduling.component\";\r\nimport { ChatTimeTableComponent } from \"./pages/chat-time-table/chat-time-table.component\";\r\nimport { TeacherChatsComponent } from \"./pages/teacher-chats/teacher-chats.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppreciationComponent,\r\n    ChatSchedulingComponent,\r\n    ChatTimeTableComponent,\r\n    TeacherChatsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    TeacherRoutingModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class TeacherModule {}\r\n"],"names":["NativeDateAdapter","AppDateAdapter","value","indexOf","str","split","year","Number","month","date","Date","timestamp","parse","isNaN","displayFormat","day","getDate","getMonth","getFullYear","_to2digit","toDateString","n","slice","t","factory","providedIn","APP_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","environment","StudentChatService","http","id","get","baseUrl","msgId","data","post","threadId","SchedulId","body","replyId","delete","i0","Validators","CustomeValidator","AppreciationComponent","fb","teacherService","AppreciationExpressionServ","StudentServ","generalServ","translate","spinner","ToastrMsg","route","authserv","queryParamMap","subscribe","params","functionId","onLangChange","lang","currentLang","EduCompId","getEduCompId","myForm","group","classroomId","required","studentIds","disabled","expression","AppreciationExpressionId","getAllClassroomsOfTeacher","getAllAppreciationExpressions","e","controls","show","getClassesOfTeacher","res","classroomList","hide","getAllExpressionsDropDown","console","log","expressionsList","formCtrls","_a","setValue","GetAllStudentsByClassroomId","studentList","enable","_b","disable","submitted","setValidators","whiteSpace","updateValueAndValidity","clearValidators","valid","appreciation","ToUsers","_c","sendAppreciation","returnValue","error","returnString","selectors","decls","vars","consts","template","ctx","ChatSchedulingComponent","ChatServ","WeeklyTableServ","weeklyDayId","From_Hour","To_Hour","getAllClassrooms","getAllWeeklyDays","weeklyDays","ChatScheduling","_d","addChatScheduling","ChatTimeTableComponent","GroupByService","getTecherScheduling","getTeacherChatScheduling","groupBy","teacherTimeTable","DeleteDialogComponent","ctx_r8","ctx_r10","ctx_r28","ctx_r31","ctx_r35","_r37","ctx_r40","ctx_r41","TeacherChatsComponent","teacherChatService","studentChatService","uploadFileService","GeneralServ","authService","toastr","router","dialog","paramMap","schedulingId","currentThreadId","currentUserId","getUserId","getTeacherSubjectIds","replayForm","TeacherSubjectIds","ParentReplyId","Attach","ReplyText","createThreadForm","askTeacherSchedulingId","replyQueueAmount","bigZero","getMsgReplaies","FormCtrl","getCurrntThread","MsgReplaies","SendTeacherMessage","reset","closePreview","msgGroup","messageThread","creatSubmitted","createMessageThreads","navigate","relativeTo","queryParams","ThreadId","Id","queryParamsHandling","success","updateMessageThreads","removeReply","msg","selectedMsgToReplay","attachecFilePath","event","uploadFile","then","file","setTimeout","isContentOverlay","dialogRef","open","title","Message","afterClosed","confirm","TeacherChatService","put","RouterModule","SendAppreciationComponent","routes","path","component","TeacherRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","SharedModule","MaterialModule","NgbModule","NgxSpinnerModule","DateAdapter","MAT_DATE_FORMATS","TeacherModule","provide","useClass","useValue","declarations"],"sourceRoot":"webpack:///"}