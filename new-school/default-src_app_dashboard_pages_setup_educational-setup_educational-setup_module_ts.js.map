{"version":3,"file":"default-src_app_dashboard_pages_setup_educational-setup_educational-setup_module_ts.js","mappings":"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","sources":["./src/app/dashboard/pages/setup/educational-setup/academic-year/academic-year/academic-year.component.ts","./src/app/dashboard/pages/setup/educational-setup/academic-year/academic-year/academic-year.component.html","./src/app/dashboard/pages/setup/educational-setup/academic-year/asign-class-rooms/asign-class-rooms.component.ts","./src/app/dashboard/pages/setup/educational-setup/academic-year/asign-class-rooms/asign-class-rooms.component.html","./src/app/dashboard/pages/setup/educational-setup/academic-year/term-detail/term-detail.component.ts","./src/app/dashboard/pages/setup/educational-setup/academic-year/term-detail/term-detail.component.html","./src/app/dashboard/pages/setup/educational-setup/academic-year/terms/terms.component.ts","./src/app/dashboard/pages/setup/educational-setup/academic-year/terms/terms.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/add-edit-course/add-edit-course.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/add-edit-course/add-edit-course.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/course-group/course-group.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/course-group/course-Group.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/course-index/course-index.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/course-index/course-index.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/course-lecture/course-lecture.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/course-lecture/course-lecture.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/add-unit/add-unit.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/add-unit/add-unit.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/lessons/add-lesson/add-lesson.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/lessons/add-lesson/add-lesson.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/lessons/lessons-index/lessons-index.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/lessons/lessons-index/lessons-index.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/strcture-index/strcture-index.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/strcture-index/strcture-index.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/topics/topics.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/course-strcture/topics/topics.component.html","./src/app/dashboard/pages/setup/educational-setup/courses/exam-night/exam-night.component.ts","./src/app/dashboard/pages/setup/educational-setup/courses/exam-night/exam-night.component.html","./src/app/dashboard/pages/setup/educational-setup/department/department.component.ts","./src/app/dashboard/pages/setup/educational-setup/department/department.component.html","./src/app/dashboard/pages/setup/educational-setup/education-year/education-year.component.ts","./src/app/dashboard/pages/setup/educational-setup/education-year/education-year.component.html","./src/app/dashboard/pages/setup/educational-setup/educational-setup-routing.module.ts","./src/app/dashboard/pages/setup/educational-setup/educational-setup.module.ts","./src/app/dashboard/pages/setup/educational-setup/groups/groups/groups.component.ts","./src/app/dashboard/pages/setup/educational-setup/groups/groups/groups.component.html","./src/app/dashboard/pages/setup/educational-setup/groups/subgroups/subgroups.component.ts","./src/app/dashboard/pages/setup/educational-setup/groups/subgroups/subgroups.component.html","./src/app/dashboard/pages/setup/educational-setup/student-groups/add-student-to-group/add-student-to-group.component.ts","./src/app/dashboard/pages/setup/educational-setup/student-groups/add-student-to-group/add-student-to-group.component.html","./src/app/dashboard/pages/setup/educational-setup/student-groups/student-group-index/student-group-index.component.ts","./src/app/dashboard/pages/setup/educational-setup/student-groups/student-group-index/student-group-index.component.html","./src/app/dashboard/services/setup/educational-setup/asign-class-rooms.service.ts","./src/app/dashboard/services/setup/educational-setup/department.service.ts","./src/app/dashboard/services/setup/educational-setup/education-detail.service.ts","./src/app/dashboard/services/setup/educational-setup/exam-night.service.ts","./src/app/dashboard/services/setup/educational-setup/group.service.ts","./src/app/dashboard/services/setup/educational-setup/student-group.service.ts","./src/app/dashboard/services/setup/general-setup/educational-group.service.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { AcademicYearService } from \"app/dashboard/services/setup/educational-setup/academic-year.service\";\r\nimport {\r\n  IAcademicYear,\r\n  IAcademicYearList,\r\n  IAddEditAcademicYear,\r\n} from \"app/dashboard/models/setup/educational-setup/academic-year\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\n// import { IEducationYear } from \"app/dashboard/models/setup/educational-setup/education-year\";\r\n// import { EducationYearService } from \"app/dashboard/services/setup/educational-setup/education-year.service\";\r\n\r\n@Component({\r\n  selector: \"app-academic-year\",\r\n  templateUrl: \"./academic-year.component.html\",\r\n  styleUrls: [\"./academic-year.component.scss\"],\r\n})\r\nexport class AcademicYearComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  // educationalYearList: IEducationYear[];\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any = [\r\n  //   { functionName: \"Update\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"Terms\" },\r\n  //   { functionName: \"Class-rooms\" },\r\n  // ];\r\n  displayColumns: string[] = [\"#\", \"fromDate\", \"toDate\", \"eduYear\", \"option\"];\r\n  dataSource: MatTableDataSource<IAcademicYear>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private academicYearService: AcademicYearService,\r\n    // private educationYearService: EducationYearService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      From_Date: [\"\", Validators.required],\r\n      To_Date: [\"\", Validators.required],\r\n      stageId: [\"\", Validators.required],\r\n      eduYearId: [\"\", Validators.required],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.returnAllAcademicYear(1);\r\n    // this.getAllEducationalYear();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllAcademicYear(1);\r\n      // this.getAllEducationalYear();\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"eduYear\":\r\n          return this.curLang == \"ar\" ? item.eduYearArName : item.eduEnName;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // getAllEducationalYear() {\r\n  //   this.spinner.show();\r\n  //   this.educationYearService.getEducationalYearDropdown().subscribe((res) => {\r\n  //     if (res) this.educationalYearList = res.eduYearList;\r\n  //     this.spinner.hide();\r\n  //   });\r\n  // }\r\n\r\n  editAcademicYear(AcadYearData: IAcademicYear) {\r\n    this.myForm.patchValue(AcadYearData);\r\n    this.FormCtrls.id.setValue(AcadYearData.academicEduYearId);\r\n    this.FormCtrls.From_Date.setValue(AcadYearData.fromDate);\r\n    this.FormCtrls.To_Date.setValue(AcadYearData.toDate);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Return All  Academic  Year\r\n  returnAllAcademicYear(page: number) {\r\n    this.spinner.show();\r\n    this.academicYearService\r\n      .getAcademicYears(page)\r\n      .subscribe((res: IAcademicYearList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.eduYearList);\r\n          this.itemsCounts = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (\r\n      new Date(this.FormCtrls.To_Date.value).getTime() <\r\n      new Date(this.FormCtrls.From_Date.value).getTime()\r\n    ) {\r\n      this.toastr.error(\"General.ToDateBeforeFromDate\");\r\n      return;\r\n    }\r\n\r\n    let AcademicYearData: IAddEditAcademicYear = {\r\n      id: this.FormCtrls.id.value,\r\n      From_Date: this.datePipe.transform(this.FormCtrls.From_Date.value),\r\n      To_Date: this.datePipe.transform(this.FormCtrls.To_Date.value),\r\n      eduYearId: this.FormCtrls.eduYearId.value,\r\n      eduCompId: this.EduCompId,\r\n    };\r\n    // console.log(AcademicYearData);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.academicYearService\r\n        .addEditAcademicYear(AcademicYearData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            let returnObject = res.academicEducationYear;\r\n            let returnData: IAcademicYear = {\r\n              academicEduYearId: returnObject.id,\r\n              fromDate: returnObject.From_Date,\r\n              toDate: returnObject.To_Date,\r\n              stageId: returnObject.stageId,\r\n              eduYearId: returnObject.eduYearId,\r\n              eduYearArName: returnObject.eduYear_ar_name,\r\n              eduEnName: returnObject.eduYear_en_name,\r\n            };\r\n\r\n            AcademicYearData.id == 0\r\n              ? this.addAcademicYear(returnData)\r\n              : this.updateAcademicYear(returnData);\r\n            this.dataSource.sort = this.sort;\r\n            // this.clearForm();\r\n            this.submitted = false;\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Add  Academic  Year\r\n  addAcademicYear(res: IAcademicYear) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.toastr.success(\"General.AddSuccessfully\");\r\n\r\n    this.FormCtrls.eduYearId.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  // Update  Academic  Year\r\n  updateAcademicYear(res: IAcademicYear) {\r\n    let i = this.dataSource.data.findIndex(\r\n      (e) => e.academicEduYearId == res.academicEduYearId\r\n    );\r\n    this.dataSource.data[i] = res;\r\n    this.toastr.success(\"General.UpdateSuccessfully\");\r\n\r\n    this.clearForm();\r\n  }\r\n\r\n  openDeleateDialog(AcadYearData: IAcademicYear): void {\r\n    let title = `${this.datePipe.transform(\r\n      AcadYearData.fromDate\r\n    )} - ${this.datePipe.transform(AcadYearData.toDate)}`;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteAcademicYear(AcadYearData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete  Academic  Year\r\n  deleteAcademicYear(AcadYearData: IAcademicYear) {\r\n    this.academicYearService\r\n      .deleteAcademicYear(AcadYearData.academicEduYearId)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == AcadYearData);\r\n          this.dataSource.data.splice(index, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (AcadYearData.academicEduYearId == this.FormCtrls.id.value)\r\n            this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.id.value == 0\r\n            ? \"EducationalSetup.AddAcademicYear\"\r\n            : \"EducationalSetup.EditAcademicYear\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"From_Date\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls?.From_Date.invalid &&\r\n                        (FormCtrls?.From_Date.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls?.From_Date.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"To_Date\"\r\n                      formControlName=\"To_Date\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"To_Date\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #To_Date></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.To_Date.invalid &&\r\n                        (FormCtrls.To_Date.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.To_Date.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-educational-stage-dropdown\r\n                    [control]=\"FormCtrls.stageId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-educational-stage-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <educational-year-by-stage-dropdown\r\n                    [control]=\"FormCtrls.eduYearId\"\r\n                    [submitted]=\"submitted\"\r\n                    [stageControl]=\"FormCtrls.stageId\"\r\n                  ></educational-year-by-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.EducationalYears\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"eduYearId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of educationalYearList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.eduYearId.invalid &&\r\n                        (FormCtrls.eduYearId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.eduYearId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- *ngIf=\"FormCtrls.id.value > 0\" -->\r\n        <button mat-raised-button class=\"btn btn-warning\" (click)=\"clearForm()\">\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.AcademicYears\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- From_Data Column -->\r\n            <ng-container matColumnDef=\"fromDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.fromDate | date : \"dd-MM-yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- To_Data Column -->\r\n            <ng-container matColumnDef=\"toDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.toDate | date : \"dd-MM-yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- To_Data Column -->\r\n            <ng-container matColumnDef=\"eduYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.EducationalYears\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.eduYearArName : ele.eduEnName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Update'\"\r\n                        (click)=\"editAcademicYear(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-edit-2 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-trash mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Terms'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/educational-setup/academic-year/terms/{{\r\n                          ele.academicEduYearId\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-sitemap mr-2\"></i>\r\n                        {{ \"EducationalSetup.Terms\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Class-rooms'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/educational-setup/academic-year/assign-class-rooms/{{\r\n                          ele.academicEduYearId\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-building-o mr-2\"></i>\r\n                        {{ \"classes.classRooms\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllAcademicYear($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { EducationYearService } from \"app/dashboard/services/setup/educational-setup/education-year.service\";\r\nimport {\r\n  IAddEditAssignClassRoomVM,\r\n  IAssignClassRoom,\r\n  IAssignClassRoomList,\r\n} from \"app/dashboard/models/setup/educational-setup/assign-class-rooms\";\r\nimport { ClassRoomGetVM } from \"app/dashboard/models/setup/general-setup/classes/class-room\";\r\n// import { IEducationYear } from \"app/dashboard/models/setup/educational-setup/education-year\";\r\nimport { AsignClassRoomsService } from \"app/dashboard/services/setup/educational-setup/asign-class-rooms.service\";\r\nimport { ClassRoomService } from \"app/dashboard/services/setup/general-setup/classes/class-room.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-class-rooms\",\r\n  templateUrl: \"./asign-class-rooms.component.html\",\r\n  styleUrls: [\"./asign-class-rooms.component.scss\"],\r\n})\r\nexport class AsignClassRoomsComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  academicEduYearId: number;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  classRoomList: ClassRoomGetVM[];\r\n  // educationalYearList: IEducationYear[];\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any = [{ functionName: \"Update\" }, { functionName: \"Delete\" }];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"ClassRoom\",\r\n    // \"EducationalYear\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IAssignClassRoom>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private asignClassRoomsService: AsignClassRoomsService,\r\n    private educationYearService: EducationYearService,\r\n    private classRoomService: ClassRoomService\r\n  ) {\r\n    this.route.paramMap.subscribe(\r\n      (pram) => (this.academicEduYearId = Number(pram.get(\"yearId\")))\r\n    );\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      // academicEduYearId: [\"\", Validators.required],\r\n      classRoomId: [\"\", [Validators.required]],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.getAsignClassRoom(1);\r\n    // this.getAllEducationalYear();\r\n    this.getAllClassRooms();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAsignClassRoom(1);\r\n      // this.getAllEducationalYear();\r\n      this.getAllClassRooms();\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"ClassRoom\":\r\n          return item.classRoomCode;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editAsignClassRoom(AsignClassRoomData: IAssignClassRoom) {\r\n    this.myForm.patchValue(AsignClassRoomData);\r\n    this.FormCtrls.id.setValue(AsignClassRoomData.academicClassRoomId);\r\n  }\r\n\r\n  // Return ClassRooms\r\n  getAllClassRooms() {\r\n    this.classRoomService\r\n      .getAllClassRoomsDropDown(this.EduCompId)\r\n      .subscribe((res) => {\r\n        if (res) this.classRoomList = res;\r\n      });\r\n  }\r\n\r\n  // // Return Educational Years\r\n  // getAllEducationalYear() {\r\n  //   this.educationYearService.getEducationalYearDropdown().subscribe((res) => {\r\n  //     this.educationalYearList = res.eduYearList;\r\n  //   });\r\n  // }\r\n\r\n  // Return Asign ClassRoom\r\n  getAsignClassRoom(page: number) {\r\n    this.spinner.show();\r\n    this.asignClassRoomsService\r\n      .getAsignClassRoomsByYearId(this.academicEduYearId, page)\r\n      .subscribe((res: IAssignClassRoomList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.academicClassRoom);\r\n          this.itemsCounts = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let AsignClassRoomData: IAddEditAssignClassRoomVM = {\r\n      id: this.FormCtrls.id.value,\r\n      academicEduYearId: this.academicEduYearId,\r\n      classRoomId: this.FormCtrls.classRoomId.value,\r\n      eduCompId: this.EduCompId,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.asignClassRoomsService\r\n        .addEditAsignClassRoom(AsignClassRoomData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            // let returnObject = res.academic_ClassRoom;\r\n            // let returnData: IAssignClassRoom = {\r\n            //   academicClassRoomId: returnObject.id,\r\n            //   academicEduYearId: returnObject.academicEduYearId,\r\n            //   classRoomId: returnObject.classRoomId,\r\n            //   classRoomCode: returnObject.classRoomCode,\r\n            // };\r\n            res.academic_ClassRoom.academicClassRoomId =\r\n              res.academic_ClassRoom.id;\r\n\r\n            AsignClassRoomData.id == 0\r\n              ? this.addAsignClassRoom(res.academic_ClassRoom)\r\n              : this.updateAsignClassRoom(res.academic_ClassRoom);\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n            this.submitted = false;\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add Asign ClassRoom\r\n  addAsignClassRoom(res: IAssignClassRoom) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.toastr.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // Update Asign ClassRoom\r\n  updateAsignClassRoom(res: IAssignClassRoom) {\r\n    let i = this.dataSource.data.findIndex(\r\n      (e) => e.academicClassRoomId == res.academicClassRoomId\r\n    );\r\n    this.dataSource.data[i] = res;\r\n    this.toastr.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  openDeleateDialog(AsignClassRoomData: IAssignClassRoom): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: AsignClassRoomData.academicClassRoomId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteAsignClassRoom(AsignClassRoomData);\r\n      });\r\n  }\r\n\r\n  // Delete  Asign ClassRoom\r\n  deleteAsignClassRoom(AsignClassRoomData: IAssignClassRoom) {\r\n    this.asignClassRoomsService\r\n      .deleteAsignClassRoom(AsignClassRoomData.academicClassRoomId)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex(\r\n            (e) => e == AsignClassRoomData\r\n          );\r\n          this.dataSource.data.splice(index, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (AsignClassRoomData.academicClassRoomId == this.FormCtrls.id.value)\r\n            this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.id.value == 0\r\n            ? \"EducationalSetup.addAsignClassRoom\"\r\n            : \"EducationalSetup.updateAsignClassRoom\"\r\n          ) | translate\r\n        }}\r\n\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/educational-setup/academic-year/AcademicYear\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"classes.classRoom\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"classRoomId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of classRoomList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ ele.roomCode }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.classRoomId.invalid &&\r\n                        (FormCtrls.classRoomId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.classRoomId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.EducationalYears\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"academicEduYearId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of educationalYearList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.academicEduYearId.invalid &&\r\n                        (FormCtrls.academicEduYearId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"FormCtrls.academicEduYearId.errors?.required\"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.AsignClassRoom\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- ClassRoom Column -->\r\n            <ng-container matColumnDef=\"ClassRoom\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"classes.classRoom\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.classRoomCode }}</td>\r\n            </ng-container>\r\n\r\n            <!-- EducationalYear Column -->\r\n            <!-- <ng-container matColumnDef=\"EducationalYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.EducationalYears\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.en_name }}</td>\r\n            </ng-container> -->\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editAsignClassRoom(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAsignClassRoom($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CourseGroupGetVM } from \"app/dashboard/models/setup/educational-setup/course\";\r\nimport { CourseService } from \"app/dashboard/services/setup/educational-setup/course.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { EducationDetailService } from \"app/dashboard/services/setup/educational-setup/education-detail.service\";\r\nimport {\r\n  IAddEditEduYearDetailes,\r\n  IEduYearDetailes,\r\n  IEduYearDetailesList,\r\n} from \"app/dashboard/models/setup/educational-setup/education-detail\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-term-detail\",\r\n  templateUrl: \"./term-detail.component.html\",\r\n  styleUrls: [\"./term-detail.component.scss\"],\r\n})\r\nexport class TermDetailComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  termId: number;\r\n  academicEduYearId: number;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Update\" },\r\n  //   { functionName: \"Delete\" },\r\n  // ];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"Course\",\r\n    \"CourseGroup\",\r\n    \"CoursePercentage\",\r\n    \"AddedToScores\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEduYearDetailes>;\r\n  CourseGroupList: CourseGroupGetVM[];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private educationDetailService: EducationDetailService,\r\n    private CourseService: CourseService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((pram) => {\r\n      this.termId = Number(pram.get(\"termId\"));\r\n      this.academicEduYearId = Number(pram.get(\"yearId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      SubjectId: [\"\", [Validators.required]],\r\n      CoursesGroupId: [\"\", [Validators.required]],\r\n      CoursePercentage: [\r\n        \"\",\r\n        [Validators.required, CustomeValidator.minusNum, Validators.max(99)],\r\n      ],\r\n      AddedToScores: [\"\", [Validators.required]],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.returnEduYearDetails(1);\r\n    this.getAllCoursesGroup();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnEduYearDetails(1);\r\n      this.getAllCoursesGroup();\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Course\":\r\n          return this.curLang == \"ar\"\r\n            ? item.subject_ar_name ?? item.subject_en_name\r\n            : item.subject_en_name ?? item.subject_ar_name;\r\n        case \"CourseGroup\":\r\n          return this.curLang == \"ar\"\r\n            ? item.courseGroup_arName ?? item.courseGroup_enName\r\n            : item.courseGroup_enName ?? item.courseGroup_arName;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editeduYearDetail(eduYearDetailData: IEduYearDetailes) {\r\n    this.myForm.patchValue(eduYearDetailData);\r\n    this.FormCtrls.id.setValue(eduYearDetailData.edu_details_id);\r\n    this.FormCtrls.SubjectId.setValue(eduYearDetailData.subject_id);\r\n    this.FormCtrls.CoursesGroupId.setValue(eduYearDetailData.courseGroup_id);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Return Courses Group\r\n  getAllCoursesGroup() {\r\n    this.CourseService.getAllCourseGroupsDropDown().subscribe((res) => {\r\n      if (res) this.CourseGroupList = res;\r\n    });\r\n  }\r\n\r\n  // Return Educational Year Details\r\n  returnEduYearDetails(page: number) {\r\n    this.spinner.show();\r\n    this.educationDetailService\r\n      .getAcademicEduYearDetailsByTermId(this.termId, page)\r\n      .subscribe((res: IEduYearDetailesList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.edu_details_list);\r\n          this.itemsCounts = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let eduYearDetailData: IAddEditEduYearDetailes = {\r\n      id: this.FormCtrls.id.value,\r\n      TermId: this.termId,\r\n      SubjectId: this.FormCtrls.SubjectId.value,\r\n      CoursesGroupId: this.FormCtrls.CoursesGroupId.value,\r\n      CoursePercentage: this.FormCtrls.CoursePercentage.value,\r\n      AddedToScores: this.FormCtrls.AddedToScores.value,\r\n      eduCompId: this.EduCompId,\r\n    };\r\n    console.log(eduYearDetailData);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.educationDetailService\r\n        .AddEditAcademicYearDetail(eduYearDetailData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            let returnObject = res.academicEducationYearDetails;\r\n            let returnData: IEduYearDetailes = {\r\n              edu_details_id: returnObject.id,\r\n              subject_id: returnObject.SubjectId,\r\n              subject_ar_name: returnObject.subject_arName,\r\n              subject_en_name: returnObject.subject_enName,\r\n              courseGroup_id: returnObject.CoursesGroupId,\r\n              courseGroup_arName: returnObject.courseGroup_arName,\r\n              courseGroup_enName: returnObject.courseGroup_enName,\r\n              CoursePercentage: returnObject.CoursePercentage,\r\n              AddedToScores: returnObject.AddedToScores,\r\n            };\r\n            console.log(res);\r\n\r\n            eduYearDetailData.id == 0\r\n              ? this.addEduYearDetail(returnData)\r\n              : this.updateEduYearDetail(returnData);\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Add Educational Year Detail\r\n  addEduYearDetail(res: IEduYearDetailes) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.toastr.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // Update Educational Year Detail\r\n  updateEduYearDetail(res: IEduYearDetailes) {\r\n    let i = this.dataSource.data.findIndex(\r\n      (e) => e.edu_details_id == res.edu_details_id\r\n    );\r\n    this.dataSource.data[i] = res;\r\n    this.toastr.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  openDeleateDialog(eduYearDetailData: IEduYearDetailes): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? eduYearDetailData.subject_ar_name ??\r\n                eduYearDetailData.subject_en_name\r\n              : eduYearDetailData.subject_en_name ??\r\n                eduYearDetailData.subject_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteeduYearDetail(eduYearDetailData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Educational Year Detail\r\n  deleteeduYearDetail(eduYearDetailData: IEduYearDetailes) {\r\n    this.educationDetailService\r\n      .deleteAcademicEducationalYearDetail(eduYearDetailData.edu_details_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex(\r\n            (e) => e == eduYearDetailData\r\n          );\r\n          this.dataSource.data.splice(index, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (eduYearDetailData.edu_details_id == this.FormCtrls.id.value)\r\n            this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.id.value == 0\r\n            ? \"EducationalSetup.AddEducationalDetail\"\r\n            : \"EducationalSetup.EditEducationalDetail\"\r\n          ) | translate\r\n        }}\r\n\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/educational-setup/academic-year/terms/{{\r\n            academicEduYearId\r\n          }}\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.CourseGroup\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"CoursesGroupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of CourseGroupList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{\r\n                          curLang == \"ar\"\r\n                            ? ele.Ar_Name ?? ele.En_Name\r\n                            : ele.En_Name ?? ele.Ar_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.CoursesGroupId.invalid &&\r\n                        (FormCtrls.CoursesGroupId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.CoursesGroupId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <all-cources-dropdown\r\n                    [control]=\"FormCtrls.SubjectId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></all-cources-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.CoursePercentage\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      type=\"number\"\r\n                      matInput\r\n                      formControlName=\"CoursePercentage\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.CoursePercentage.invalid &&\r\n                        (FormCtrls.CoursePercentage.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.CoursePercentage.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.CoursePercentage.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.CoursePercentage.errors?.max\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"EducationalSetup.maxPercentage\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-label>\r\n                    {{ \"EducationalSetup.IsAddedToTotal\" | translate }}\r\n                  </mat-label>\r\n                  <mat-radio-group formControlName=\"AddedToScores\">\r\n                    <mat-radio-button [value]=\"true\" class=\"mx-2\">\r\n                      {{ \"labels.Yes\" | translate }}\r\n                    </mat-radio-button>\r\n                    <mat-radio-button [value]=\"false\">\r\n                      {{ \"labels.No\" | translate }}\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                  <mat-hint\r\n                    *ngIf=\"\r\n                      FormCtrls.AddedToScores.invalid &&\r\n                      (FormCtrls.AddedToScores.touched || submitted)\r\n                    \"\r\n                    class=\"text-danger error mt-0\"\r\n                  >\r\n                    <span *ngIf=\"FormCtrls.AddedToScores.errors?.required\">\r\n                      <i class=\"ft-alert-circle align-middle\"></i>\r\n                      {{ \"labels.MustChoosevalue\" | translate }}\r\n                    </span>\r\n                  </mat-hint>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.EducationalDetailes\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Course Column -->\r\n            <ng-container matColumnDef=\"Course\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.Course\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\"\r\n                    ? ele.subject_ar_name ?? ele.subject_en_name\r\n                    : ele.subject_en_name ?? ele.subject_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- CourseGroup Column -->\r\n            <ng-container matColumnDef=\"CourseGroup\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.courseGroup\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\"\r\n                    ? ele.courseGroup_arName ?? ele.courseGroup_enName\r\n                    : ele.courseGroup_enName ?? ele.courseGroup_arName\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- CoursePercentage Column -->\r\n            <ng-container matColumnDef=\"CoursePercentage\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.CoursePercentage\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CoursePercentage }}</td>\r\n            </ng-container>\r\n\r\n            <!-- AddedToScores Column -->\r\n            <ng-container matColumnDef=\"AddedToScores\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.AddedToScores\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.AddedToScores }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editeduYearDetail(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnEduYearDetails($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { TermsService } from \"app/dashboard/services/setup/educational-setup/terms.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  ITermGetVM,\r\n  ITermList,\r\n  ITermAddEdidVM,\r\n} from \"app/dashboard/models/setup/educational-setup/terms\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-terms\",\r\n  templateUrl: \"./terms.component.html\",\r\n  styleUrls: [\"./terms.component.scss\"],\r\n})\r\nexport class TermsComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  academicEduYearId: number;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Update\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"Detail\" },\r\n  // ];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"en_name\",\r\n    \"fromDate\",\r\n    \"toDate\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<ITermGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private termsService: TermsService,\r\n    public authService: AuthService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.route.paramMap.subscribe(\r\n      (param) => (this.academicEduYearId = Number(param.get(\"yearId\")))\r\n    );\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      fromDate: [\"\", Validators.required],\r\n      toDate: [\"\", Validators.required],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.returnAllTermsByYearId(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllTermsByYearId(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editTerm(TermData: ITermGetVM) {\r\n    this.myForm.patchValue(TermData);\r\n    this.FormCtrls.id.setValue(TermData.TermId);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Return All  Terms\r\n  returnAllTermsByYearId(page: number) {\r\n    this.spinner.show();\r\n    this.termsService\r\n      .getTermsByYearId(this.academicEduYearId, page)\r\n      .subscribe((res: ITermList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.TermList);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (\r\n      new Date(this.FormCtrls.toDate.value).getTime() <\r\n      new Date(this.FormCtrls.fromDate.value).getTime()\r\n    ) {\r\n      this.toastr.error(\"General.ToDateBeforeFromDate\");\r\n      return;\r\n    }\r\n\r\n    let TermData: ITermAddEdidVM = {\r\n      id: this.FormCtrls.id.value,\r\n      ar_name: this.FormCtrls.ar_name.value,\r\n      en_name: this.FormCtrls.en_name.value,\r\n      fromDate: this.datePipe.transform(this.FormCtrls.fromDate.value),\r\n      toDate: this.datePipe.transform(this.FormCtrls.toDate.value),\r\n      academicEduYearId: this.academicEduYearId,\r\n      eduCompId: this.EduCompId,\r\n    };\r\n    // console.log(TermData);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.termsService.addEditTerm(TermData).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          // let returnObject = res.academicTerm;\r\n          // let returnData: ITermGetVM = {\r\n          //   TermId: returnObject.id,\r\n          //   ar_name: returnObject.ar_name,\r\n          //   en_name: returnObject.en_name,\r\n          //   fromDate: returnObject.fromDate,\r\n          //   toDate: returnObject.toDate,\r\n          // };\r\n          res.academicTerm.TermId = res.academicTerm.id;\r\n\r\n          TermData.id == 0\r\n            ? this.addTerm(res.academicTerm)\r\n            : this.updateTerm(res.academicTerm);\r\n          this.dataSource.sort = this.sort;\r\n          this.clearForm();\r\n        } else this.toastr.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Add Term\r\n  addTerm(res: ITermGetVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.toastr.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // Update Term\r\n  updateTerm(res: ITermGetVM) {\r\n    console.log(res);\r\n    let i = this.dataSource.data.findIndex((e) => e.TermId == res.TermId);\r\n    this.dataSource.data[i] = res;\r\n    this.toastr.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  openDeleateDialog(TermData: ITermGetVM): void {\r\n    if (TermData.TermId == this.FormCtrls.id.value) this.clearForm();\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? TermData.ar_name : TermData.en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteTerm(TermData);\r\n      });\r\n  }\r\n\r\n  // Delete Term\r\n  deleteTerm(TermData: ITermGetVM) {\r\n    this.termsService.deleteTerm(TermData.TermId).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let index = this.dataSource.data.findIndex((e) => e == TermData);\r\n        this.dataSource.data.splice(index, 1);\r\n        // this.itemsCounts--;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        if (TermData.TermId == this.FormCtrls.id.value) this.clearForm();\r\n\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.toastr.error(\"General.TosterErrorMessage\");\r\n      }\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls?.id.value == 0\r\n            ? \"EducationalSetup.AddTerm\"\r\n            : \"EducationalSetup.EditTerm\"\r\n          ) | translate\r\n        }}\r\n\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/educational-setup/academic-year/AcademicYear\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.required ||\r\n                          FormCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.en_name.invalid &&\r\n                        (FormCtrls.en_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.en_name.errors?.required ||\r\n                          FormCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.fromDate.invalid &&\r\n                        (FormCtrls.fromDate.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.fromDate.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.toDate.invalid &&\r\n                        (FormCtrls.toDate.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.toDate.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.Terms\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- arName Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- From_Data Column -->\r\n            <ng-container matColumnDef=\"fromDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.fromDate | date : \"dd-MM-yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- To_Data Column -->\r\n            <ng-container matColumnDef=\"toDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.toDate | date : \"dd-MM-yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Update'\"\r\n                        (click)=\"editTerm(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-edit-2 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(ele)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-trash mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Detail'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/educational-setup/academic-year/term-details/{{\r\n                          academicEduYearId\r\n                        }}/{{ ele.TermId }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-external-link mr-2\"></i>\r\n                        {{ \"EducationalSetup.EducationalDetailes\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllTermsByYearId($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  CourseAddEditVM,\r\n  CourseGetVM,\r\n} from \"app/dashboard/models/setup/educational-setup/course\";\r\nimport { CourseService } from \"app/dashboard/services/setup/educational-setup/course.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { switchMap } from \"rxjs/operators\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Component({\r\n  selector: \"app-add-edit-course\",\r\n  templateUrl: \"./add-edit-course.component.html\",\r\n  styleUrls: [\"./add-edit-course.component.scss\"],\r\n})\r\nexport class AddEditCourseComponent implements OnInit {\r\n  Course: CourseGetVM;\r\n  courseId: number = 0;\r\n  imageChange: boolean = false;\r\n  removeImage: number = 0;\r\n\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private CourseServ: CourseService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private uploadFileService: UploadFileService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    route.paramMap.subscribe((params) => {\r\n      let id = Number(params.get(\"courseId\"));\r\n      if (id) {\r\n        this.courseId = id;\r\n        // console.log(id);\r\n        CourseServ.getCourseById(id).subscribe((res) => {\r\n          this.Course = res[0];\r\n          this.myForm.patchValue(this.Course);\r\n        });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      subject_ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      subject_en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      price: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      subjectCode: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      academicEduYearId: [\"\", [Validators.required]],\r\n      MaxScore: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      MinScore: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      course_attach: [null],\r\n      PromoPath: [\"\"],\r\n      subjectDescription: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // select image\r\n  onChangeImage(event: any) {\r\n    this.removeImage = 0;\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      this.formCtrls.course_attach?.setValue(file);\r\n      this.imageChange = true;\r\n    });\r\n  }\r\n\r\n  imageUrl() {\r\n    let imageUrl = !this.imageChange\r\n      ? this.Course?.ImagePath\r\n      : this.formCtrls?.course_attach?.value;\r\n    this.uploadFileService.previewPicture(imageUrl);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // console.log(this.myForm.value);\r\n\r\n    if (this.myForm.valid) {\r\n      if (this.formCtrls.MinScore?.value > this.formCtrls.MaxScore?.value)\r\n        return this.ToastrMsg.error(\"EducationalSetup.maxScoreGreaterThanMin\");\r\n\r\n      let course: CourseAddEditVM = {\r\n        eduCompId: this.EduCompId,\r\n        id: this.courseId,\r\n        subject_ar_name: this.formCtrls.subject_ar_name?.value,\r\n        subject_en_name: this.formCtrls.subject_en_name?.value,\r\n        price: this.formCtrls.price?.value,\r\n        subjectCode: this.formCtrls.subjectCode?.value,\r\n        MaxScore: this.formCtrls.MaxScore?.value,\r\n        MinScore: this.formCtrls.MinScore?.value,\r\n        PromoPath: this.formCtrls.PromoPath?.value,\r\n        course_attach: this.formCtrls.course_attach?.value,\r\n        subjectDescription: this.formCtrls.subjectDescription?.value,\r\n        academicEduYearId: this.formCtrls.academicEduYearId?.value,\r\n        remove_image: this.removeImage,\r\n      };\r\n      // if (\r\n      //   this.formCtrls.course_attach.value == null &&\r\n      //   this.imageChange == true\r\n      // )\r\n      //   course.remove_image = 1;\r\n\r\n      console.log(\"Course\", course);\r\n\r\n      this.CourseServ.addEditCourse(course).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          course.id == 0\r\n            ? this.ToastrMsg.success(\"General.AddSuccessfully\")\r\n            : this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n\r\n          this.router.navigate([\"dashboard/educational-setup/courses/index/\"], {\r\n            queryParams: {\r\n              functionId: this.functionId,\r\n            },\r\n          });\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  RemoveFile() {\r\n    // this.imageChange = true;\r\n    this.removeImage = 1;\r\n    if (this.Course) this.Course.ImagePath = null;\r\n    this.formCtrls.course_attach.setValue(null);\r\n  }\r\n\r\n  // clearForm() {\r\n  //   this.myForm.reset();\r\n  //   this.courseId = 0;\r\n  //   this.submitted = false;\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Course -->\r\n      <mat-card-title>\r\n        <span *ngIf=\"courseId == 0\">\r\n          {{ \"EducationalSetup.addCourse\" | translate }}\r\n        </span>\r\n        <!-- edit Course -->\r\n        <span *ngIf=\"courseId > 0\">\r\n          {{ \"EducationalSetup.updateCourse\" | translate }} -\r\n          {{\r\n            currentLang == \"ar\"\r\n              ? Course?.subject_ar_name\r\n              : Course?.subject_en_name\r\n          }}\r\n        </span>\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/educational-setup/courses/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <div class=\"row\">\r\n                    <!-- arabic name input -->\r\n                    <div class=\"col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.arName\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"text\"\r\n                          formControlName=\"subject_ar_name\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            formCtrls.subject_ar_name.invalid &&\r\n                            (formCtrls.subject_ar_name.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              formCtrls.subject_ar_name.errors?.required ||\r\n                              formCtrls.subject_ar_name.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            <i class=\"ft-alert-circle align-middle\"></i>\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- english name input -->\r\n                    <div class=\"col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.enName\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"text\"\r\n                          formControlName=\"subject_en_name\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            formCtrls.subject_en_name.invalid &&\r\n                            (formCtrls.subject_en_name.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              formCtrls.subject_en_name.errors?.required ||\r\n                              formCtrls.subject_en_name.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            <i class=\"ft-alert-circle align-middle\"></i>\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                      <app-academic-year-dropdown\r\n                        [control]=\"formCtrls.academicEduYearId\"\r\n                        [submitted]=\"submitted\"\r\n                      ></app-academic-year-dropdown>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- cover photo -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <div class=\"ImageDiv\">\r\n                    <input\r\n                      #fileInput\r\n                      [hidden]=\"true\"\r\n                      id=\"input-file\"\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      (change)=\"onChangeImage($event)\"\r\n                    />\r\n                    <label\r\n                      for=\"input-file\"\r\n                      class=\"btn btn-primary float-right\"\r\n                      mat-raised-button\r\n                      >{{ \"General.Upload\" | translate }}\r\n                      {{ \"EducationalSetup.Image\" | translate }}\r\n                    </label>\r\n                    <span class=\"mt-1 mr-1 float-right\">\r\n                      <img\r\n                        [class.hideImg]=\"\r\n                          !formCtrls?.course_attach?.value && !Course?.ImagePath\r\n                        \"\r\n                        [src]=\"imageUrl()\"\r\n                        class=\"coverPhoto\"\r\n                        alt=\"{{ 'EducationalSetup.Image' | translate }}\"\r\n                      />\r\n                    </span>\r\n                    <!-- delete button -->\r\n                    <a\r\n                      *ngIf=\"\r\n                        formCtrls?.course_attach?.value || Course?.ImagePath\r\n                      \"\r\n                      (click)=\"RemoveFile()\"\r\n                      class=\"danger p-0\"\r\n                      matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                    >\r\n                      <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- course code input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.subjectCode\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"subjectCode\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.subjectCode.invalid &&\r\n                        (formCtrls.subjectCode.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.subjectCode.errors?.required ||\r\n                          formCtrls.subjectCode.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- price input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Price\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"price\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.price.invalid &&\r\n                        (formCtrls?.price.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.price.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.price.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- min score input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.MinScore\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"MinScore\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.MinScore.invalid &&\r\n                        (formCtrls?.MinScore.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.MinScore.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.MinScore.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- max score input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.MaxScore\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"MaxScore\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.MaxScore.invalid &&\r\n                        (formCtrls?.MaxScore.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.MaxScore.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.MaxScore.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- promo input -->\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.Promo\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput formControlName=\"PromoPath\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- description input -->\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Description\" | translate }}\r\n                    </mat-label>\r\n                    <textarea\r\n                      matInput\r\n                      formControlName=\"subjectDescription\"\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add || edit button -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"courseId == 0\"></i>\r\n          {{ (courseId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n        </button>\r\n\r\n        <!-- reset button -->\r\n        <!-- <button\r\n          *ngIf=\"courseId> 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  CourseGroupAddEditVM,\r\n  CourseGroupGetVM,\r\n} from \"app/dashboard/models/setup/educational-setup/course\";\r\nimport { CourseService } from \"app/dashboard/services/setup/educational-setup/course.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-course-courseGroup\",\r\n  templateUrl: \"./course-Group.component.html\",\r\n  styleUrls: [\"./course-Group.component.scss\"],\r\n})\r\nexport class CourseGroupComponent implements OnInit {\r\n  CourseGroups: CourseGroupGetVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  // curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"Ar_Name\",\r\n    \"En_Name\",\r\n    \"Min_Sub_Num\",\r\n    \"Max_Sub_Num\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<CourseGroupGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private courseServ: CourseService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Max_Sub_Num: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      Min_Sub_Num: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.getAllCourseGroups(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllCourseGroups(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all course Groups\r\n  getAllCourseGroups(page: number) {\r\n    // this.curPage = page;\r\n\r\n    this.spinner.show();\r\n    this.courseServ.getAllCourseGroups(page).subscribe((res) => {\r\n      if (res) {\r\n        this.CourseGroups = res.courseGroupList;\r\n        this.dataSource = new MatTableDataSource(this.CourseGroups);\r\n        this.itemsCounts = res.countItems;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditCourseGroup(courseGroup: CourseGroupGetVM) {\r\n    this.myForm.patchValue(courseGroup);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      if (this.formCtrls.Min_Sub_Num?.value > this.formCtrls.Max_Sub_Num?.value)\r\n        return this.ToastrMsg.error(\"EducationalSetup.maxSubGreaterThanMin\");\r\n\r\n      let courseGroup: CourseGroupAddEditVM = {\r\n        id: this.formCtrls.id?.value,\r\n        EducationalComponentID: this.EduCompId,\r\n        Ar_Name: this.formCtrls.Ar_Name?.value,\r\n        En_Name: this.formCtrls.En_Name?.value,\r\n        Max_Sub_Num: this.formCtrls.Max_Sub_Num?.value,\r\n        Min_Sub_Num: this.formCtrls.Min_Sub_Num?.value,\r\n      };\r\n      console.log(\"CourseGroup\", courseGroup);\r\n\r\n      this.courseServ.addEditCourseGroup(courseGroup).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          // let returnObject = res.course_group;\r\n          // let returnData: CourseGroupGetVM = {\r\n          //   id: returnObject.id,\r\n          //   Ar_Name: returnObject.Ar_Name,\r\n          //   En_Name: returnObject.En_Name,\r\n          //   Max_Sub_Num: returnObject.Max_Sub_Num,\r\n          //   Min_Sub_Num: returnObject.Min_Sub_Num,\r\n          // };\r\n\r\n          courseGroup.id == 0\r\n            ? this.addCourseGroup(res.course_group)\r\n            : this.updateCourseGroup(res.course_group);\r\n          this.dataSource.sort = this.sort;\r\n          this.clearForm();\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add course Group\r\n  addCourseGroup(res: CourseGroupGetVM) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // update course Group\r\n  updateCourseGroup(res: CourseGroupGetVM) {\r\n    let i = this.dataSource.data.findIndex((e) => e.id == res.id);\r\n    this.dataSource.data[i] = res;\r\n    this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(courseGroup: CourseGroupGetVM): void {\r\n    let courseGroupName =\r\n      this.currentLang == \"ar\" ? courseGroup.Ar_Name : courseGroup.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: courseGroupName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteCourseGroup(courseGroup);\r\n      });\r\n  }\r\n\r\n  // delete course Group\r\n  deleteCourseGroup(courseGroup: CourseGroupGetVM) {\r\n    this.spinner.show();\r\n    this.courseServ.deleteCourseGroup(courseGroup.id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == courseGroup);\r\n        this.dataSource.data.splice(i, 1);\r\n        // this.itemsCounts--;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        if (courseGroup.id == this.formCtrls.id.value) this.clearForm();\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else this.ToastrMsg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Course Group -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value == 0\">\r\n        {{ \"EducationalSetup.addCourseGroup\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Course Group -->\r\n      <mat-card-title *ngIf=\"formCtrls?.id.value > 0\">\r\n        {{ \"EducationalSetup.updateCourseGroup\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Ar_Name.invalid &&\r\n                        (formCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Ar_Name.errors?.required ||\r\n                          formCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.En_Name.invalid &&\r\n                        (formCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.En_Name.errors?.required ||\r\n                          formCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Min Sub. No. input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.MinSubNo\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"Min_Sub_Num\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Min_Sub_Num.invalid &&\r\n                        (formCtrls?.Min_Sub_Num.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.Min_Sub_Num.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.Min_Sub_Num.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Max Sub. No. input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.MaxSubNo\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"Max_Sub_Num\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Max_Sub_Num.invalid &&\r\n                        (formCtrls?.Max_Sub_Num.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.Max_Sub_Num.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.Max_Sub_Num.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add || edit button -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset button -->\r\n        <button\r\n          *ngIf=\"formCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.courseGroups\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let courseGroup\">\r\n                {{ courseGroup.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let courseGroup\">\r\n                {{ courseGroup.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Min Sub. No. column -->\r\n            <ng-container matColumnDef=\"Min_Sub_Num\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.MinSubNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let courseGroup\">\r\n                {{ courseGroup.Min_Sub_Num }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Max Sub. No. column -->\r\n            <ng-container matColumnDef=\"Max_Sub_Num\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.MaxSubNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let courseGroup\">\r\n                {{ courseGroup.Max_Sub_Num }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let courseGroup\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditCourseGroup(courseGroup)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(courseGroup)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllCourseGroups($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of courseGroups\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  CourseGetVM,\r\n  IUploadSubjectSyllabusModel,\r\n} from \"app/dashboard/models/setup/educational-setup/course\";\r\nimport { CourseService } from \"app/dashboard/services/setup/educational-setup/course.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IfileVM, IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-index\",\r\n  templateUrl: \"./course-index.component.html\",\r\n  styleUrls: [\"./course-index.component.scss\"],\r\n})\r\nexport class CourseIndexComponent implements OnInit {\r\n  Courses: CourseGetVM[] = [];\r\n  // curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Edit\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"Lecture\" },\r\n  //   { functionName: \"courseStructure\" },\r\n  //   { functionName: \"UploadSyllabus\" },\r\n  // ];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"subject_name\",\r\n    \"eduYear\",\r\n    \"MinScore\",\r\n    \"MaxScore\",\r\n    \"price\",\r\n    \"subjectCode\",\r\n    \"subjectDescription\",\r\n    \"ImagePath\",\r\n    \"PromoPath\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<CourseGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private CourseServ: CourseService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService,\r\n    public uploadFileService: UploadFileService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCourses(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllCourses(1);\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"eduYear\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.eduYear_ar_name ?? item.eduYear_en_name\r\n            : item.eduYear_en_name ?? item.eduYear_ar_name;\r\n        case \"subject_name\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.subject_ar_name ?? item.subject_en_name\r\n            : item.subject_en_name ?? item.subject_ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // get all courses\r\n  getAllCourses(page: number) {\r\n    // this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.CourseServ.getAllCoursesByEduCopmIdPage(\r\n      this.EduCompId,\r\n      page\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.Courses = res.subjectList;\r\n        this.dataSource = new MatTableDataSource(this.Courses);\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(course: CourseGetVM): void {\r\n    let courseName =\r\n      this.currentLang == \"ar\"\r\n        ? course.subject_ar_name\r\n        : course.subject_en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: courseName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteCourse(course);\r\n      });\r\n  }\r\n\r\n  // delete course\r\n  deleteCourse(course: CourseGetVM) {\r\n    this.spinner.show();\r\n    this.CourseServ.deleteCourse(course.id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        let i = this.dataSource.data.findIndex((e) => e == course);\r\n        this.dataSource.data.splice(i, 1);\r\n        // this.itemsCounts--;\r\n        this.dataSource.sort = this.sort;\r\n\r\n        this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onUploadSyllabus(event: any, subjectId: number) {\r\n    this.uploadFileService.uploadFile(event).then((file: IfileVM) => {\r\n      setTimeout(() => {\r\n        if (file.FileAsBase64) this.uploadSubjectSyllabus(file, subjectId);\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  uploadSubjectSyllabus(file: IfileVM, subjectId: number) {\r\n    let body = {} as IUploadSubjectSyllabusModel;\r\n    body.subjectId = subjectId;\r\n    body.thumbnailFile = file;\r\n    if (file) {\r\n      this.spinner.show();\r\n      this.CourseServ.uploadSubjectSyllabus(body).subscribe((res: any) => {\r\n        if (res.returnValue === 1) {\r\n          this.ToastrMsg.success(\"General.UploadSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.ToastrMsg.warning(\"labels.MustSelectFile\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.courses\" | translate }}\r\n        <!-- add Course -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/educational-setup/courses/add-course\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info mb-2 float-right\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- course name column -->\r\n            <ng-container matColumnDef=\"subject_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? course.subject_ar_name ?? course.subject_en_name\r\n                    : course.subject_en_name ?? course.subject_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- education year column -->\r\n            <ng-container matColumnDef=\"eduYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? course.eduYear_ar_name ?? course.eduYear_en_name\r\n                    : course.eduYear_en_name ?? course.eduYear_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Max Score column -->\r\n            <ng-container matColumnDef=\"MaxScore\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.MaxScore\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.MaxScore }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Min Score column -->\r\n            <ng-container matColumnDef=\"MinScore\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.MinScore\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.MinScore }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- price column -->\r\n            <ng-container matColumnDef=\"price\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Price\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.price }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- subjectCode column -->\r\n            <ng-container matColumnDef=\"subjectCode\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.subjectCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.subjectCode }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Description column -->\r\n            <ng-container matColumnDef=\"subjectDescription\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Description\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.subjectDescription }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Image column -->\r\n            <ng-container matColumnDef=\"ImagePath\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.Image\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <a\r\n                  [href]=\"uploadFileService.previewPicture(course.ImagePath)\"\r\n                  target=\"_blank\"\r\n                  *ngIf=\"course.ImagePath\"\r\n                >\r\n                  <img\r\n                    [src]=\"uploadFileService.previewPicture(course.ImagePath)\"\r\n                    alt=\"{{ 'EducationalSetup.Image' | translate }}\"\r\n                    class=\"image\"\r\n                  />\r\n                </a>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Promo column -->\r\n            <ng-container matColumnDef=\"PromoPath\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.Promo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <a [href]=\"course.PromoPath\" target=\"_blank\">\r\n                  {{ course.PromoPath }}\r\n                  <!-- video -->\r\n                </a>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let course\" class=\"text-center actions\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/educational-setup/courses/edit-course/{{\r\n                          course.id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"ft-edit-2 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        ngbDropdownItem\r\n                        (click)=\"openDeleteDialog(course)\"\r\n                      >\r\n                        <i class=\"ft-trash mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Lecture'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/educational-setup/courses/course-lectures/{{\r\n                          course.id\r\n                        }}\"\r\n                        [queryParams]=\"{ functionId: functionId }\"\r\n                      >\r\n                        <i class=\"ft-video mr-2\"></i>\r\n                        {{ \"EducationalSetup.CourseLectures\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'courseStructure'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"../course-structure/{{ course.id }}\"\r\n                        [queryParams]=\"{ functionId: functionId }\"\r\n                      >\r\n                        <i class=\"ft-cpu mr-2\"></i>\r\n                        {{ \"labels.SubjectStructure\" | translate }}\r\n                      </a>\r\n\r\n                      <span\r\n                        *ngIf=\"fun.functionName === 'UploadSyllabus'\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <i class=\"ft-upload mr-2\"></i>\r\n                        {{ \"EducationalSetup.UploadSyllabus\" | translate }}\r\n                        <span>\r\n                          <input\r\n                            (change)=\"onUploadSyllabus($event, course.id)\"\r\n                            class=\"form-control\"\r\n                            type=\"file\"\r\n                            accept=\".pdf\"\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"9\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllCourses($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of courses\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { WeeklyTableService } from \"app/dashboard/services/educational-tabels/weekly-table.service\";\r\nimport { IWeeklyLectureVM } from \"app/dashboard/models/educational-tabels/weekly-table\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { ICourseLectureAddEditVM } from \"app/dashboard/models/setup/educational-setup/course\";\r\nimport { CourseLectureService } from \"app/dashboard/services/setup/educational-setup/course-lecture.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-lecture\",\r\n  templateUrl: \"./course-lecture.component.html\",\r\n  styleUrls: [\"./course-lecture.component.scss\"],\r\n})\r\nexport class CourseLectureComponent implements OnInit {\r\n  courseId: number = 0;\r\n  lecturesList: IWeeklyLectureVM[];\r\n  IsAdd: boolean = true;\r\n\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private CourseLectureServ: CourseLectureService,\r\n    private WeeklyTableServ: WeeklyTableService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    // get course id\r\n    route.paramMap.subscribe((params) => {\r\n      let id = Number(params.get(\"courseId\"));\r\n      if (id) {\r\n        this.courseId = id;\r\n        this.CourseLectureServ.getAllLecturesIdsByCourseId(\r\n          this.courseId\r\n        ).subscribe((res) => {\r\n          if (res) {\r\n            if (res.length > 0) this.IsAdd = false;\r\n            this.WeeklyLecIDSCtrls.setValue(res.map((lec) => lec.Lecture_id));\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      WeeklyLec_IDS: [\"\", [Validators.required]],\r\n    });\r\n\r\n    this.getAllWeeklyLectures();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllWeeklyLectures();\r\n    });\r\n  }\r\n\r\n  get WeeklyLecIDSCtrls() {\r\n    return this.myForm.controls.WeeklyLec_IDS;\r\n  }\r\n\r\n  getAllWeeklyLectures() {\r\n    this.spinner.show();\r\n    this.WeeklyTableServ.getAllWeeklyLectures().subscribe((res:IWeeklyLectureVM[]) => {\r\n      if (res) this.lecturesList = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let courseLectures: ICourseLectureAddEditVM = {\r\n        subject_id: this.courseId,\r\n        WeeklyLec_IDS: this.WeeklyLecIDSCtrls.value,\r\n      };\r\n      // console.log(\"WeeklyLecIDS\", courseLectures);\r\n\r\n      this.spinner.show();\r\n      this.IsAdd\r\n        ? this.addcourseLectures(courseLectures)\r\n        : this.updatecourseLectures(courseLectures, false);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add course Group\r\n  addcourseLectures(courseLectures: ICourseLectureAddEditVM) {\r\n    this.CourseLectureServ.addCourseLectures(courseLectures).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.IsAdd = false;\r\n          // get lectures ids from response after add\r\n          this.WeeklyLecIDSCtrls.setValue(\r\n            res.Course_Lecture.map((lec) => lec.Lecture_id)\r\n          );\r\n          this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // update course Group\r\n  updatecourseLectures(\r\n    courseLectures: ICourseLectureAddEditVM,\r\n    isDelete: Boolean\r\n  ) {\r\n    this.CourseLectureServ.editCourseLectures(courseLectures).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          // get lectures ids from response after edit\r\n          this.WeeklyLecIDSCtrls.setValue(\r\n            res.Course_Lecture.map((lec) => lec.Lecture_id)\r\n          );\r\n          if (isDelete) {\r\n            this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n            this.IsAdd = true;\r\n          } else this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.courseId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletecourseLectures();\r\n      });\r\n  }\r\n\r\n  // delete course Group\r\n  deletecourseLectures() {\r\n    this.WeeklyLecIDSCtrls.setValue([]);\r\n    this.submitted = false;\r\n\r\n    let courseLectures: ICourseLectureAddEditVM = {\r\n      subject_id: this.courseId,\r\n      WeeklyLec_IDS: this.WeeklyLecIDSCtrls.value,\r\n    };\r\n    console.log(\"WeeklyLecIDS\", courseLectures);\r\n\r\n    this.spinner.show();\r\n    this.updatecourseLectures(courseLectures, true);\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add - edit Course Lecture -->\r\n      <mat-card-title>\r\n        {{\r\n          (IsAdd\r\n            ? \"EducationalSetup.addCourseLecture\"\r\n            : \"EducationalSetup.updateCourseLecture\"\r\n          ) | translate\r\n        }}\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/educational-setup/courses/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- lectures input -->\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Material.Lectures\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"WeeklyLec_IDS\" multiple>\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of lecturesList\"\r\n                        [value]=\"ele.id\"\r\n                      >\r\n                        {{\r\n                          curLang == \"ar\"\r\n                            ? ele.Ar_Name ?? ele.En_Name\r\n                            : ele.En_Name ?? ele.Ar_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        WeeklyLecIDSCtrls?.invalid &&\r\n                        (WeeklyLecIDSCtrls?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"WeeklyLecIDSCtrls.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add || edit button -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"IsAdd\"></i>\r\n          {{ (IsAdd ? \"General.Add\" : \"General.Update\") | translate }}\r\n        </button>\r\n\r\n        <!-- delete button -->\r\n        <button\r\n          *ngIf=\"!IsAdd\"\r\n          mat-raised-button\r\n          class=\"btn btn-danger bg-light-danger\"\r\n          (click)=\"openDeleteDialog()\"\r\n        >\r\n          {{ \"General.Delete\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { CourceStructureService } from \"app/dashboard/services/setup/educational-setup/cource-structure.service\";\r\nimport {\r\n  currentSubject,\r\n  IAddedUnitVM,\r\n  IAddUpdateUnitVM,\r\n} from \"app/dashboard/models/setup/educational-setup/cource-structure\";\r\n\r\n@Component({\r\n  selector: \"app-add-unit\",\r\n  templateUrl: \"./add-unit.component.html\",\r\n  styleUrls: [\"./add-unit.component.scss\"],\r\n})\r\nexport class AddUnitComponent implements OnInit {\r\n  unitId: number;\r\n  subjectId: number;\r\n  myForm!: FormGroup;\r\n  submitted: boolean = false;\r\n   coverPath = \"https://via.placeholder.com/150\";\r\n  unit_name: string;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private courceStructureService: CourceStructureService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddUnitComponent>\r\n  ) {\r\n    this.subjectId = data.subjectId;\r\n     console.log(\"subjectId\", this.subjectId);\r\n    this.unitId = data.unitId;\r\n    if (this.unitId > 0) this.getUnitById();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [this.unitId],\r\n      unit_ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      unit_en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      unitDescription: [\"\"],\r\n      thumbnailPic: [null],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get Unit ById\r\n  getUnitById() {\r\n    this.spinner.show();\r\n    this.courceStructureService\r\n      .getUnitById(this.unitId)\r\n      .subscribe((res: any) => {\r\n        if (res.addedUnit) {\r\n          this.myForm.patchValue(res.addedUnit);\r\n          this.unit_name = res.addedUnit.unit_ar_name;\r\n          this.subjectId = res.addedUnit.subjectid;\r\n          this.coverPath = `mozakretyapi${res.addedUnit.unitThumb?.attach_path}`;\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Start: add Unit\r\n  addUpdateUnit() {\r\n    this.submitted = true;\r\n    let body = {} as IAddUpdateUnitVM;\r\n    let addedUnit = {} as IAddedUnitVM;\r\n    let currentSubject = {} as currentSubject;\r\n\r\n    addedUnit.id = this.FormCtrls.id?.value;\r\n    addedUnit.unit_ar_name = this.FormCtrls.unit_ar_name?.value;\r\n    addedUnit.unit_en_name = this.FormCtrls.unit_en_name?.value;\r\n    addedUnit.unitDescription = this.FormCtrls.unitDescription?.value;\r\n    addedUnit.thumbnailPic = this.FormCtrls.thumbnailPic?.value;\r\n    currentSubject.subject_id = this.subjectId;\r\n    body.addedUnit = addedUnit;\r\n    body.currentSubject = currentSubject;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.courceStructureService.addUpdateUnit(body).subscribe((res) => {\r\n        console.log(\"addUpdateUnit\", res);\r\n        if (res) {\r\n          this.spinner.hide();\r\n          this.dialogRef.close(res);\r\n          this.unitId == 0\r\n            ? this.msg.success(\"General.AddSuccessfully\")\r\n            : this.msg.success(\"General.UpdeteSuccessfully\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.coverPath = fileReder;\r\n        this.FormCtrls.thumbnailPic.setValue(data);\r\n      };\r\n    }\r\n  }\r\n}\r\n","<h1 mat-dialog-title class=\"primary-color\">\r\n  <span *ngIf=\"unitId == 0\">\r\n    {{ \"subjects.AddUnit\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"unitId > 0\">\r\n    {{ \"subjects.UpdateUnit\" | translate }} - {{ unit_name }}\r\n  </span>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-9\">\r\n        <div class=\"media\">\r\n          <img\r\n            class=\"rounded mr-3\"\r\n            src=\"{{ coverPath }}\"\r\n            width=\"70\"\r\n            height=\"70\"\r\n            alt=\"avatar\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger\"\r\n          mat-raised-button\r\n          (click)=\"fileInput.click()\"\r\n        >\r\n          {{ \"subjects.CoverPhoto\" | translate }}\r\n        </button>\r\n        <input\r\n          hidden\r\n          (change)=\"onChange($event)\"\r\n          #fileInput\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          id=\"file\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label> {{ \"General.ar_name\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"unit_ar_name\" />\r\n          <mat-hint\r\n            class=\"danger\"\r\n            *ngIf=\"\r\n              FormCtrls.unit_ar_name.invalid &&\r\n              (FormCtrls.unit_ar_name.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                FormCtrls.unit_ar_name.errors?.required &&\r\n                FormCtrls.unit_ar_name.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label> {{ \"General.en_name\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"unit_en_name\" />\r\n          <mat-hint\r\n            class=\"danger\"\r\n            *ngIf=\"\r\n              FormCtrls.unit_en_name.invalid &&\r\n              (FormCtrls.unit_en_name.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                FormCtrls.unit_en_name.errors?.required &&\r\n                FormCtrls.unit_en_name.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"General.Description\" | translate }}\r\n          </mat-label>\r\n          <textarea matInput formControlName=\"unitDescription\"> </textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button\r\n    mat-raised-button\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"btn btn-danger float-right\"\r\n  >\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n  <button\r\n    *ngIf=\"unitId == 0\"\r\n    (click)=\"addUpdateUnit()\"\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-primary float-right\"\r\n  >\r\n    {{ \"General.Add\" | translate }}\r\n  </button>\r\n  <button\r\n    *ngIf=\"unitId > 0\"\r\n    (click)=\"addUpdateUnit()\"\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-primary float-right\"\r\n  >\r\n    {{ \"General.Update\" | translate }}\r\n  </button>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n"," import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IaddUpdateLessonVM, ILessonBodyVM } from \"app/dashboard/models/setup/educational-setup/cource-structure\";\r\nimport { CourceStructureService } from \"app/dashboard/services/setup/educational-setup/cource-structure.service\";\r\n\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-add-lesson\",\r\n  templateUrl: \"./add-lesson.component.html\",\r\n  styleUrls: [\"./add-lesson.component.scss\"],\r\n})\r\nexport class AddLessonComponent implements OnInit {\r\n  unitId: number;\r\n  lessonId: number;\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  lesson_name: string;\r\n  coverPath = \"https://via.placeholder.com/150\";\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private courceStructureService: CourceStructureService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddLessonComponent>\r\n  ) {\r\n    this.unitId = data.unitId;\r\n    this.lessonId = data.lesson.id;\r\n    if (this.lessonId > 0) this.getLessonById();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [this.lessonId],\r\n      lesson_ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      lesson_en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      lessonDescription: [\"\"],\r\n      thumbnailPic: [null],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getLessonById() {\r\n    this.spinner.show();\r\n    this.courceStructureService.getLessonById(this.lessonId).subscribe((res: any) => {\r\n      if (res.addedLesson) {\r\n        this.myForm.patchValue(res.addedLesson);\r\n        this.lesson_name = res.addedLesson.lesson_ar_name;\r\n        this.coverPath = `mozakretyapi${res.addedLesson.lessonThumb?.attach_path}`;\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  addUpdateLesson() {\r\n    this.submitted = true;\r\n    let body = {} as IaddUpdateLessonVM;\r\n    let addedLesson = {} as ILessonBodyVM;\r\n\r\n    addedLesson.id = this.FormCtrls.id?.value;\r\n    addedLesson.lesson_ar_name = this.FormCtrls.lesson_ar_name?.value;\r\n    addedLesson.lesson_en_name = this.FormCtrls.lesson_en_name?.value;\r\n    addedLesson.lessonDescription = this.FormCtrls.lessonDescription?.value;\r\n    addedLesson.thumbnailPic = this.FormCtrls.thumbnailPic?.value;\r\n    body.addedLesson = addedLesson;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.courceStructureService.addUpdateLesson(this.unitId, body).subscribe(\r\n        (res) => {\r\n          if (res) {\r\n            this.dialogRef.close(res);\r\n            this.spinner.hide();\r\n            this.lessonId == 0\r\n              ? this.msg.success(\"General.AddSuccessfully\")\r\n              : this.msg.success(\"General.UpdeteSuccessfully\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.coverPath = fileReder;\r\n        this.FormCtrls.thumbnailPic.setValue(data);\r\n      };\r\n    }\r\n  }\r\n}\r\n","<h1 mat-dialog-title class=\"primary-color\">\r\n  <span *ngIf=\"lessonId == 0\">\r\n    {{ \"subjects.AddLesson\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"lessonId > 0\">\r\n    {{ \"subjects.UpdateLesson\" | translate }} - {{ lesson_name }}\r\n  </span>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-9\">\r\n        <div class=\"media\">\r\n          <img\r\n            class=\"rounded mr-3\"\r\n            src=\"{{ coverPath }}\"\r\n            width=\"70\"\r\n            height=\"70\"\r\n            alt=\"avatar\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger\"\r\n          mat-raised-button\r\n          (click)=\"fileInput.click()\"\r\n        >\r\n          {{ \"subjects.CoverPhoto\" | translate }}\r\n        </button>\r\n        <input\r\n          hidden\r\n          (change)=\"onChange($event)\"\r\n          #fileInput\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          id=\"file\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label> {{ \"General.ar_name\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"lesson_ar_name\" />\r\n          <mat-hint\r\n            class=\"danger\"\r\n            *ngIf=\"\r\n              FormCtrls.lesson_ar_name.invalid &&\r\n              (FormCtrls.lesson_ar_name.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                FormCtrls.lesson_ar_name.errors?.required &&\r\n                FormCtrls.lesson_ar_name.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label> {{ \"General.en_name\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"lesson_en_name\" />\r\n          <mat-hint\r\n            class=\"danger\"\r\n            *ngIf=\"\r\n              FormCtrls.lesson_en_name.invalid &&\r\n              (FormCtrls.lesson_en_name.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                FormCtrls.lesson_en_name.errors?.required &&\r\n                FormCtrls.lesson_en_name.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"General.Description\" | translate }}\r\n          </mat-label>\r\n          <textarea matInput formControlName=\"lessonDescription\"> </textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button\r\n    mat-raised-button\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"btn btn-danger float-right\"\r\n  >\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n  <button\r\n    *ngIf=\"lessonId == 0\"\r\n    (click)=\"addUpdateLesson()\"\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-primary float-right\"\r\n  >\r\n    {{ \"General.Add\" | translate }}\r\n  </button>\r\n  <button\r\n    *ngIf=\"lessonId > 0\"\r\n    (click)=\"addUpdateLesson()\"\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-primary float-right\"\r\n  >\r\n    {{ \"General.Update\" | translate }}\r\n  </button>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Component, OnInit, Input } from \"@angular/core\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CourceStructureService } from \"app/dashboard/services/setup/educational-setup/cource-structure.service\";\r\nimport { ILessonVM } from \"app/dashboard/models/setup/educational-setup/cource-structure\";\r\nimport { AddLessonComponent } from \"../add-lesson/add-lesson.component\";\r\nimport { TopicsComponent } from \"../../topics/topics.component\";\r\n\r\n@Component({\r\n  selector: \"app-lessons-index\",\r\n  templateUrl: \"./lessons-index.component.html\",\r\n  styleUrls: [\"./lessons-index.component.scss\"],\r\n})\r\nexport class LessonsIndexComponent implements OnInit {\r\n  @Input(\"unitId\") unitId: number;\r\n  @Input(\"AddedLesson\") AddedLesson: ILessonVM;\r\n  @Input() canUpdate: boolean = true;\r\n  lessons: ILessonVM[];\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private courceStructureService: CourceStructureService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  ngOnChanges() {\r\n    this.unitId > 0 ? this.getLessons() : null;\r\n    //  console.log(\"Added Lesson=>: \", this.AddedLesson);\r\n    if (this.AddedLesson) this.lessons.push(this.AddedLesson);\r\n  }\r\n\r\n  getLessons() {\r\n    this.spinner.show();\r\n    this.courceStructureService\r\n      .getLessons(this.unitId)\r\n      .subscribe((res: ILessonVM[]) => {\r\n        this.lessons = res;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  deleteLesson(lesson: ILessonVM) {\r\n    this.spinner.show();\r\n    this.courceStructureService\r\n      .deleteLesson(lesson.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.lessons.indexOf(lesson);\r\n          this.lessons.splice(i, 1);\r\n          this.msg.success(\"General.DeleteSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(lesson: ILessonVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: lesson.lesson_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteLesson(lesson);\r\n      });\r\n  }\r\n\r\n  openAddLessonDialog(lesson: ILessonVM): void {\r\n    this.dialog\r\n      .open(AddLessonComponent, {\r\n        data: {\r\n          unitId: this.unitId,\r\n          lesson: lesson,\r\n        },\r\n        minWidth: \"60vw\",\r\n        //  minHeight: \"60vh\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updatedLesson: ILessonVM) => {\r\n        //console.log(\"updated Lesson=>: \", updatedLesson);\r\n        let i = this.lessons.findIndex((e) => e.id == updatedLesson.id);\r\n        this.lessons[i] = updatedLesson;\r\n      });\r\n  }\r\n\r\n  openAddTopicDialog(lessonId: number): void {\r\n    this.dialog\r\n      .open(TopicsComponent, {\r\n        data: {\r\n          lessonId: lessonId,\r\n          lesson: null,\r\n        },\r\n\r\n        minWidth: \"85vw\",\r\n        maxHeight: \"95vh\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((topic) => {});\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <ng-container *ngIf=\"lessons?.length > 0; else emptyLessons\">\r\n    <div class=\"col-md-3 col-12\" *ngFor=\"let lesson of lessons\">\r\n      <mat-card>\r\n        <div class=\"card-img\">\r\n          <img\r\n            class=\"img-fluid\"\r\n            src=\"mozakretyapi{{ lesson.lessonThumb?.attach_path }}\"\r\n            alt=\"lesson cover\"\r\n          />\r\n          <!-- src=\"https://testmozakretyangular.cloudiax.com/mozakretyapi/dbFiles/lessonThumbnails/lesson638088974305697377.png\" -->\r\n        </div>\r\n        <mat-card-header>\r\n          <mat-card-subtitle [title]=\"lesson?.lesson_ar_name\">\r\n            {{ lesson?.lesson_ar_name }}</mat-card-subtitle\r\n          >\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n          <p [title]=\"lesson?.lessonDescription\">\r\n            {{ lesson?.lessonDescription }}\r\n          </p>\r\n        </mat-card-content>\r\n        <mat-card-actions *ngIf=\"canUpdate\">\r\n          <button mat-button (click)=\"openAddTopicDialog(lesson.id)\">\r\n            {{ \"subjects.Topics\" | translate }}\r\n          </button>\r\n          <!-- <button mat-button (click)=\"openAddLessonDialog(lesson)\">Edit</button>\r\n          <button mat-button (click)=\"openDeleateDialog(lesson)\">Delete</button> -->\r\n          <button\r\n            mat-icon-button\r\n            class=\"mr-2\"\r\n            (click)=\"openAddLessonDialog(lesson)\"\r\n          >\r\n            <mat-icon color=\"primary\">edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            class=\"mr-2\"\r\n            (click)=\"openDeleateDialog(lesson)\"\r\n          >\r\n            <mat-icon color=\"warn\">delete</mat-icon>\r\n          </button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-template #emptyLessons class=\"text-center\">\r\n    <div class=\"col-4\">\r\n      <div class=\"alert bg-light-warning alert-dismissible mb-2\" role=\"alert\">\r\n        <h4 class=\"alert-heading mb-2\">\r\n          {{ \"subjects.LessonsIsEmpty\" | translate }}\r\n        </h4>\r\n        <p>{{ \"subjects.clickToAddLesson\" | translate }}</p>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","import { TranslateService } from \"@ngx-translate/core\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AddLessonComponent } from \"./../lessons/add-lesson/add-lesson.component\";\r\nimport { AddUnitComponent } from \"./../add-unit/add-unit.component\";\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  IRowFunctionVM,\r\n  IUserVM,\r\n  UserModel,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CourceStructureService } from \"app/dashboard/services/setup/educational-setup/cource-structure.service\";\r\nimport {\r\n  ILessonVM,\r\n  IUnitVM,\r\n} from \"app/dashboard/models/setup/educational-setup/cource-structure\";\r\nimport { CourseService } from \"app/dashboard/services/setup/educational-setup/course.service\";\r\nimport { CourseGetVM } from \"app/dashboard/models/setup/educational-setup/course\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\n\r\n@Component({\r\n  selector: \"app-strcture-index\",\r\n  templateUrl: \"./strcture-index.component.html\",\r\n  styleUrls: [\"./strcture-index.component.scss\"],\r\n})\r\nexport class StrctureIndexComponent implements OnInit {\r\n  EduCompId: number;\r\n  branchId: number;\r\n  subjectId: number;\r\n  functionId: number;\r\n  userId: number;\r\n  selectedUnitId: number;\r\n  selectedUnitName: string;\r\n  rowFunctions: IRowFunctionVM[];\r\n  units: IUnitVM[] = [];\r\n  AddedLesson: ILessonVM;\r\n  @Input() canUpdate: boolean = true; // if (true) current user is (admin), if (false) current user is (parent or student)\r\n  course: CourseGetVM;\r\n  currentLang: string;\r\n  userData: UserModel;\r\n  isParent: boolean = false; // current user is parent\r\n  isStudent: boolean = false; //current user is student\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private courceStructureService: CourceStructureService,\r\n    private courseServ: CourseService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private generalService: GeneralService,\r\n    private translate: TranslateService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.subjectId = Number(params.get(\"subjectId\"));\r\n      this.userId = Number(params.get(\"userId\")); // get userId if parent or student\r\n\r\n      if (router.url.search(\"/parent/\") >= 0) this.isParent = true; // current user is parent\r\n      if (router.url.search(\"/student/\") >= 0) this.isStudent = true; // current user is student\r\n      console.log(\"isStudent\", this.isStudent);\r\n      console.log(\"isParent\", this.isParent);\r\n      if (this.userId) {\r\n        generalService.getUser(this.userId).subscribe((res: IUserVM) => {\r\n          this.userData = res.user;\r\n        });\r\n      }\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    courseServ.getCourseById(this.subjectId).subscribe((res) => {\r\n      this.course = res[0];\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"canUpdate\", this.canUpdate);\r\n    this.getUnits();\r\n  }\r\n\r\n  //Get Subject Structre\r\n  getUnits() {\r\n    this.spinner.show();\r\n    this.courceStructureService\r\n      .getUnits(this.subjectId)\r\n      .subscribe((res: IUnitVM[]) => {\r\n        this.units = res;\r\n        this.selectedUnitId = res[0].id;\r\n        this.selectedUnitName = res[0].unit_ar_name;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SelectUnitId(unit: IUnitVM) {\r\n    this.selectedUnitId = unit.id;\r\n    this.selectedUnitName = unit.unit_ar_name;\r\n  }\r\n\r\n  deleteUnit(unit: IUnitVM) {\r\n    this.spinner.show();\r\n    this.courceStructureService.deleteUnit(unit.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.units.indexOf(unit);\r\n        this.units.splice(i, 1);\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(unit: IUnitVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: unit.unit_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUnit(unit);\r\n      });\r\n  }\r\n\r\n  openAddUnitDialog(unitId): void {\r\n    this.dialog\r\n      .open(AddUnitComponent, {\r\n        data: {\r\n          unitId: unitId > 0 ? unitId : 0,\r\n          subjectId: this.subjectId,\r\n          canUpdate: this.canUpdate,\r\n        },\r\n        minWidth: \"60vw\",\r\n        // minHeight: \"60vh\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((unit: IUnitVM) => {\r\n        if (unit?.id > 0) {\r\n          let i = this.units.findIndex((e) => e.id == unit.id);\r\n          i < 0 ? this.units.push(unit) : (this.units[i] = unit);\r\n        }\r\n      });\r\n  }\r\n\r\n  openAddLessonDialog(): void {\r\n    this.dialog\r\n      .open(AddLessonComponent, {\r\n        data: {\r\n          unitId: this.selectedUnitId,\r\n          lesson: {\r\n            id: 0,\r\n          },\r\n        },\r\n        minWidth: \"60vw\",\r\n        //minHeight: \"60vh\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((lesson: ILessonVM) => {\r\n        if (lesson?.id > 0) this.AddedLesson = lesson;\r\n      });\r\n  }\r\n\r\n  back() {\r\n    if (this.isParent)\r\n      this.router.navigateByUrl(`/parent/child-evaluation/${this.userId}`);\r\n    if (this.isStudent) this.router.navigateByUrl(\"/student/mySpace\");\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.id;\r\n  }\r\n}\r\n","<!-- Page Header -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card-title>\r\n      {{ \"labels.SubjectStructure\" | translate }} -\r\n\r\n      <span class=\"warning\">\r\n        {{\r\n          currentLang == \"ar\"\r\n            ? course?.subject_ar_name ?? course?.subject_en_name\r\n            : course?.subject_en_name ?? course?.subject_ar_name\r\n        }}\r\n      </span>\r\n\r\n      <!-- Student and parent Header -->\r\n      <ng-container *ngIf=\"!canUpdate\">\r\n        <span *ngIf=\"isParent\">\r\n          <!--  show student name if only parent -->\r\n          - {{ \"GeneralSetup.ForStudent\" | translate }}\r\n          <span class=\"warning\">\r\n            {{ userData?.ar_name }}\r\n          </span>\r\n        </span>\r\n\r\n        <a\r\n          (click)=\"back()\"\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </ng-container>\r\n\r\n      <!-- Admin Header -->\r\n      <ng-container *ngIf=\"canUpdate\">\r\n        <!-- Back -->\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/educational-setup/courses/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n\r\n        <!-- Add new Unit -->\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"openAddUnitDialog(0)\"\r\n          class=\"btn btn-primary bg-light-primary float-right\"\r\n        >\r\n          {{ \"subjects.AddUnit\" | translate }}\r\n        </a>\r\n      </ng-container>\r\n    </mat-card-title>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-3 mt-3\">\r\n    <!--Start Units Nav tabs -->\r\n    <ng-container *ngIf=\"units?.length > 0\">\r\n      <div *ngFor=\"let unit of units; trackBy: track\">\r\n        <mat-card\r\n          class=\"p-0\"\r\n          [class]=\"{ 'bg-light-info': selectedUnitId == unit.id }\"\r\n        >\r\n          <div class=\"row\">\r\n            <div class=\"col-10 p-0\">\r\n              <a class=\"media\" (click)=\"SelectUnitId(unit)\">\r\n                <img\r\n                  src=\"mozakretyapi{{ unit.unitThumb?.attach_path }}\"\r\n                  alt=\"profile-img\"\r\n                  class=\"rounded mr-3\"\r\n                  height=\"64\"\r\n                  width=\"64\"\r\n                />\r\n                <div class=\"media-body\">\r\n                  <div\r\n                    class=\"col-12 d-flex flex-sm-row flex-column justify-content-start px-0 mb-sm-2\"\r\n                  >\r\n                    <mat-card-subtitle [title]=\"unit.unit_ar_name\">\r\n                      {{ unit.unit_ar_name }}\r\n                    </mat-card-subtitle>\r\n                  </div>\r\n                  <p class=\"text-muted mb-0 mt-1 mt-sm-0 unitDescription\">\r\n                    <small [title]=\"unit.unitDescription\">{{\r\n                      unit.unitDescription\r\n                    }}</small>\r\n                  </p>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div class=\"col-2 p-0\" *ngIf=\"canUpdate\">\r\n              <div\r\n                class=\"dropdown btn-group mr-1 mb-1\"\r\n                ngbDropdown\r\n                *ngIf=\"rowFunctions?.length > 0\"\r\n              >\r\n                <button\r\n                  ngbDropdownToggle\r\n                  type=\"button\"\r\n                  class=\"btn btn-icon round mr-1 mb-1 dropdown-toggle btn-dropdown\"\r\n                >\r\n                  <i class=\"fa fa-cog font-medium-3\"></i>\r\n                </button>\r\n\r\n                <div ngbDropdownMenu class=\"dropdown-menu\" role=\"menu\">\r\n                  <ng-container>\r\n                    <a class=\"dropdown-item\" (click)=\"openDeleateDialog(unit)\">\r\n                      <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                      {{ \"General.Delete\" | translate }}\r\n                    </a>\r\n\r\n                    <a\r\n                      (click)=\"openAddUnitDialog(unit.id)\"\r\n                      class=\"dropdown-item\"\r\n                    >\r\n                      <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                      {{ \"General.Edit\" | translate }}\r\n                    </a>\r\n                  </ng-container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <div *ngIf=\"units?.length == 0\">\r\n      <mat-card>\r\n        {{ \"subjects.emptyUnits\" | translate }}\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-9\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ selectedUnitName }}\r\n\r\n        <!-- Add Lesson -->\r\n        <a\r\n          *ngIf=\"canUpdate\"\r\n          mat-raised-button\r\n          (click)=\"openAddLessonDialog()\"\r\n          class=\"btn btn-primary bg-light-primary float-right\"\r\n        >\r\n          {{ \"subjects.AddLesson\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <app-lessons-index\r\n          [unitId]=\"selectedUnitId\"\r\n          [AddedLesson]=\"AddedLesson\"\r\n          [canUpdate]=\"canUpdate\"\r\n        ></app-lessons-index>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport {\r\n  ITopicBodyVM,\r\n  ITopicVM,\r\n} from \"app/dashboard/models/setup/educational-setup/cource-structure\";\r\nimport { CourceStructureService } from \"app/dashboard/services/setup/educational-setup/cource-structure.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-topics\",\r\n  templateUrl: \"./topics.component.html\",\r\n  styleUrls: [\"./topics.component.scss\"],\r\n})\r\nexport class TopicsComponent implements OnInit {\r\n  topics: ITopicVM[];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  p: number = 1;\r\n  maxSize: number = 9;\r\n  itemsCount: number;\r\n  lessonId: number;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private fb: FormBuilder,\r\n    private courceStructureService: CourceStructureService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<TopicsComponent>\r\n  ) {\r\n    this.lessonId = data.lessonId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTopicsByLessonId();\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      topic_ar_name: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(100),\r\n          CustomeValidator.whiteSpace,\r\n        ],\r\n      ],\r\n      topic_en_name: [\"\"],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getTopicsByLessonId() {\r\n    this.spinner.show();\r\n    this.courceStructureService\r\n      .getTopicsByLessonId(this.p, this.lessonId)\r\n      .subscribe((res: any) => {\r\n        //  console.log(\"getTopicsByLessonId\", res);\r\n        this.topics = res.edu_topic;\r\n        this.itemsCount = res.topicsSize;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getTopicById(topic: ITopicVM) {\r\n    this.myForm.patchValue(topic);\r\n    // console.log(topic);\r\n  }\r\n\r\n  getTopicByIds(id: any) {\r\n    this.spinner.show();\r\n    this.courceStructureService\r\n      .getTopicById(this.lessonId, id)\r\n      .subscribe((res: any) => {\r\n        if (res.id != null) {\r\n          this.myForm.patchValue(res);\r\n          // this.myForm.controls[\"id\"].setValue(res.LessonID);\r\n          // this.myForm.controls[\"id\"].setValue(res.id);\r\n          // this.myForm.controls[\"topic_ar_name\"].setValue(res.topic_ar_name);\r\n          // this.myForm.controls[\"topic_en_name\"].setValue(res.topic_en_name);\r\n\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  addUpdateTopic() {\r\n    this.submitted = true;\r\n    let body = {} as ITopicBodyVM;\r\n    body.LessonID = this.lessonId;\r\n    body.id = this.FormCtrls.id?.value;\r\n    body.topic_ar_name = this.FormCtrls.topic_ar_name.value;\r\n    body.topic_en_name = this.FormCtrls.topic_en_name.value;\r\n    body.state = true;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.courceStructureService.addUpdateTopic(body).subscribe((res: any) => {\r\n        // console.log(\"addUpdateTopic\", res);\r\n        if (res.returnValue == 1) {\r\n          this.submitted = false;\r\n          this.myForm.reset();\r\n          this.FormCtrls.id?.setValue(0);\r\n          this.getTopicsByLessonId();\r\n          body.id == 0\r\n            ? this.msg.success(\"General.AddSuccessfully\")\r\n            : this.msg.success(\"General.UpdeteSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(topic: ITopicVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: topic.topic_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteTopic(topic);\r\n      });\r\n  }\r\n\r\n  deleteTopic(topic: ITopicVM) {\r\n    this.spinner.show();\r\n    this.courceStructureService.deleteTopic(topic.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        let i = this.topics.indexOf(topic);\r\n        this.topics.splice(i, 1);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.id;\r\n  }\r\n}\r\n","<h1 mat-dialog-title class=\"primary-color\">\r\n  {{ \"subjects.Topics\" | translate }}\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label> {{ \"General.ar_name\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"topic_ar_name\" />\r\n          <mat-hint\r\n            class=\"danger\"\r\n            *ngIf=\"\r\n              FormCtrls.topic_ar_name.invalid &&\r\n              (FormCtrls.topic_ar_name.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                FormCtrls.topic_ar_name.errors?.required &&\r\n                FormCtrls.topic_ar_name.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-6\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label> {{ \"General.en_name\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"topic_en_name\" />\r\n          <mat-hint\r\n            class=\"danger\"\r\n            *ngIf=\"\r\n              FormCtrls.topic_en_name.invalid &&\r\n              (FormCtrls.topic_en_name.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                FormCtrls.topic_en_name.errors?.required &&\r\n                FormCtrls.topic_en_name.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <button\r\n          *ngIf=\"this.FormCtrls.id?.value == 0\"\r\n          (click)=\"addUpdateTopic()\"\r\n          mat-raised-button\r\n          cdkFocusInitial\r\n          class=\"btn btn-primary float-right\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"this.FormCtrls.id?.value > 0\"\r\n          (click)=\"addUpdateTopic()\"\r\n          mat-raised-button\r\n          cdkFocusInitial\r\n          class=\"btn btn-primary float-right\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </div>\r\n      <!--\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"General.Description\" | translate }}\r\n          </mat-label>\r\n          <textarea matInput formControlName=\"lessonDescription\"> </textarea>\r\n        </mat-form-field>\r\n      </div> -->\r\n    </div>\r\n  </form>\r\n  <hr />\r\n  <div\r\n    class=\"full-wid-table\"\r\n    style=\"overflow: hidden !important\"\r\n    *ngIf=\"topics?.length > 0; else topicsEmpty\"\r\n  >\r\n    <table\r\n      class=\"table table-striped table-hover table-full-width rtl\"\r\n      id=\"sotbmod\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>{{ \"General.ar_name\" | translate }}</th>\r\n          <th>{{ \"General.en_name\" | translate }}</th>\r\n          <th>actions­</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody id=\"addedExamQuestionsHolder\">\r\n        <tr\r\n          id=\"ExamQuestion-2626853\"\r\n          *ngFor=\"\r\n            let topic of topics\r\n              | paginate\r\n                : {\r\n                    itemsPerPage: 10,\r\n                    currentPage: p,\r\n                    totalItems: itemsCount\r\n                  };\r\n            trackBy: track;\r\n            let i = index\r\n          \"\r\n        >\r\n          <td>{{ i + 1 }}</td>\r\n          <td>{{ topic.topic_ar_name }}</td>\r\n          <td>{{ topic.topic_en_name }}</td>\r\n\r\n          <td>\r\n            <button\r\n              (click)=\"getTopicById(topic)\"\r\n              mat-mini-fab\r\n              color=\"primary\"\r\n              class=\"mr-1\"\r\n            >\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n\r\n            <button\r\n              (click)=\"openDeleateDialog(topic)\"\r\n              mat-mini-fab\r\n              color=\"warn\"\r\n              class=\"mr-1\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <pagination-controls\r\n      *ngIf=\"topics?.length > 0\"\r\n      dir=\"ltr\"\r\n      [maxSize]=\"maxSize\"\r\n      (pageChange)=\"p = $event; getTopicsByLessonId()\"\r\n      previousLabel=\"\"\r\n      nextLabel=\"\"\r\n    >\r\n    </pagination-controls>\r\n  </div>\r\n\r\n  <ng-template #topicsEmpty class=\"text-center\">\r\n    <div class=\"col-4\">\r\n      <div class=\"alert bg-light-warning alert-dismissible mb-2\" role=\"alert\">\r\n        <h4 class=\"alert-heading mb-2\">\r\n          {{ \"subjects.TopicsIsEmpty\" | translate }}\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button\r\n    mat-raised-button\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"btn btn-danger float-right\"\r\n  >\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { MessagesService } from \"./../../../../../../shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  ExamNightModel,\r\n  GetExamNightModel,\r\n} from \"app/dashboard/models/setup/educational-setup/exam-night\";\r\nimport { ExamNightService } from \"app/dashboard/services/setup/educational-setup/exam-night.service\";\r\nimport { IfileVM, IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-exam-night\",\r\n  templateUrl: \"./exam-night.component.html\",\r\n  styleUrls: [\"./exam-night.component.scss\"],\r\n})\r\nexport class ExamNightComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  Filepath = null;\r\n  fileType: string;\r\n  currentLang: string;\r\n  itemsCounts: number = 0;\r\n\r\n  displayedColumns: string[] = [\"#\", \"name\", \"subject\", \"download\", \"actions\"];\r\n  dataSource: MatTableDataSource<ExamNightModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private uploadFileService: UploadFileService,\r\n    private examNightService: ExamNightService,\r\n    public authService: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private toastr: MessagesService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllExamNight(1);\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      countryId: [\"\"],\r\n      stageId: [\"\"],\r\n      educationYearId: [\"\"],\r\n      subjectId: [null, Validators.required],\r\n      file: [null, Validators.required],\r\n      name: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      //   this.getAllExamNight(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  getAllExamNight(page: number) {\r\n    this.spinner.show();\r\n    this.examNightService\r\n      .getAllExamNight(page)\r\n      .subscribe((res: GetExamNightModel) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.list);\r\n          this.itemsCounts = res.itemsCounts;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  addExamNight() {\r\n    this.submitted = true;\r\n    let body: ExamNightModel = {\r\n      id: this.FormCtrls.id.value,\r\n      subjectId: this.FormCtrls.subjectId.value,\r\n      name: this.FormCtrls.name.value,\r\n      file: this.FormCtrls.file.value,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.examNightService.addExamNight(body).subscribe((response) => {\r\n        if (response) {\r\n          this.clearForm();\r\n          this.getAllExamNight(1);\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          console.log(\"EXAM NIGHT: \", response);\r\n        }\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(file: ExamNightModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: file.name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteFile(file);\r\n      });\r\n  }\r\n\r\n  deleteFile(file: ExamNightModel) {\r\n    this.examNightService.deleteFile(file.id).subscribe((response) => {\r\n      if (response) {\r\n        let i = this.dataSource.data.findIndex((e) => e == file);\r\n        this.dataSource.data.splice(i, 1);\r\n        this.itemsCounts--;\r\n        this.dataSource.sort = this.sort;\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.toastr.error(\"General.TosterErrorMessage\");\r\n      }\r\n    });\r\n  }\r\n\r\n  //Attache File\r\n  onChange($event) {\r\n    this.uploadFileService.uploadFile($event).then((file: IfileVM) => {\r\n      console.log(\"file\", file);\r\n      this.FormCtrls.file?.setValue(file);\r\n      // this.fileType = file.type;\r\n      // this.Filepath = file.FileAsBase64?.replace(\r\n      //   \"data:application/pdf;base64,\",\r\n      //   \"\"\r\n      // );\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n    const FileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n    FileInputs.forEach((input: any) => {\r\n      input.value = null;\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Add\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- Stages Dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-educational-stage-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"FormCtrls.stageId\"\r\n                  >\r\n                  </app-educational-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Years dropdown-->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <educational-year-by-stage-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"FormCtrls.educationYearId\"\r\n                    [stageControl]=\"FormCtrls.stageId\"\r\n                  >\r\n                  </educational-year-by-stage-dropdown>\r\n                </div>\r\n\r\n                <!-- Cources [subjects] dropdown -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <cources-by-year-dropdown\r\n                    [submitted]=\"false\"\r\n                    [control]=\"FormCtrls.subjectId\"\r\n                    [yearControl]=\"FormCtrls.educationYearId\"\r\n                  >\r\n                  </cources-by-year-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.name.invalid &&\r\n                        (FormCtrls.name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.name.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.name.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-6\">\r\n                  <input (change)=\"onChange($event)\" type=\"file\" />\r\n                </div>\r\n\r\n                <!-- <div class=\"col-12\">\r\n                  <embed\r\n                    [type]=\"fileType\"\r\n                    [src]=\"Filepath | safe\"\r\n                    width=\"300\"\r\n                    height=\"300\"\r\n                  />\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <a mat-raised-button class=\"btn bg-light-info\" (click)=\"addExamNight()\">\r\n          <i class=\"fa fa-plus-square\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n\r\n        <button\r\n          *ngIf=\"this.FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.examNight\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- subject Column -->\r\n            <ng-container matColumnDef=\"subject\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Subject\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.subject }}</td>\r\n            </ng-container>\r\n\r\n            <!-- download Column -->\r\n            <ng-container matColumnDef=\"download\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"General.Download\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.path }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let file\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editUser(file)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(file)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllExamNight($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { DepartmentService } from \"app/dashboard/services/setup/educational-setup/department.service\";\r\nimport {\r\n  IAddEditDepartment,\r\n  IDepartment,\r\n} from \"app/dashboard/models/setup/educational-setup/department\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { IEductionalGroupVM } from \"app/dashboard/models/setup/general-setup/educational-group\";\r\nimport { EducationalGroupService } from \"app/dashboard/services/setup/general-setup/educational-group.service\";\r\n\r\n@Component({\r\n  selector: \"app-department\",\r\n  templateUrl: \"./department.component.html\",\r\n  styleUrls: [\"./department.component.scss\"],\r\n})\r\nexport class DepartmentComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  EduGroups: IEductionalGroupVM[] = [];\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Update\" },\r\n  //   { functionName: \"Delete\" },\r\n  // ];\r\n  displayColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"en_name\",\r\n    // \"stage\",\r\n    // \"EducationalYear\",\r\n    \"educationGroup\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IDepartment>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private departmentService: DepartmentService,\r\n    private EducationalGroupServ: EducationalGroupService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      eduGroupId: [\"\", [Validators.required]],\r\n      // stageId: [\"\", Validators.required],\r\n      // eduYearId: [\"\", Validators.required],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.returnAllDepartments(1);\r\n    this.getAllEducationalGroups();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnAllDepartments(1);\r\n      this.getAllEducationalGroups();\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"educationGroup\":\r\n          return this.curLang == \"ar\"\r\n            ? item.eduGroupArName\r\n            : item.eduGroupEnName;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editDepartment(DepartmentData: IDepartment) {\r\n    this.myForm.patchValue(DepartmentData);\r\n    this.FormCtrls.id.setValue(DepartmentData.Dep_id);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // get all educational groups\r\n  getAllEducationalGroups() {\r\n    this.spinner.show();\r\n    this.EducationalGroupServ.getEducationalGroupDropdown().subscribe(\r\n      (res: IEductionalGroupVM[]) => {\r\n        if (res) this.EduGroups = res;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // Return All Departments\r\n  returnAllDepartments(page: number) {\r\n    this.spinner.show();\r\n    this.departmentService.getDepartment(page).subscribe((res) => {\r\n      if (res) {\r\n        this.dataSource = new MatTableDataSource(res.DepList);\r\n        this.itemsCounts = res.countItems;\r\n        this.startSortingTable();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let departmentData: IAddEditDepartment = {\r\n      id: this.FormCtrls.id.value,\r\n      // stageId: this.FormCtrls.stageId.value,\r\n      // eduYearId: this.FormCtrls.eduYearId.value,\r\n      ar_name: this.FormCtrls.ar_name.value,\r\n      en_name: this.FormCtrls.en_name.value,\r\n      eduGroupId: this.FormCtrls.eduGroupId.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.departmentService\r\n        .addEditDepartment(departmentData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            let returnObject = res.Department;\r\n            let returnData: IDepartment = {\r\n              Dep_id: returnObject.id,\r\n              ar_name: returnObject.ar_name,\r\n              en_name: returnObject.en_name,\r\n              eduGroupId: returnObject.eduGroupId,\r\n              eduGroupArName: returnObject.eduGroup_ar_name,\r\n              eduGroupEnName: returnObject.eduGroup_en_name,\r\n            };\r\n\r\n            departmentData.id == 0\r\n              ? this.addDepartment(returnData)\r\n              : this.updateDepartment(returnData);\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Add Department\r\n  addDepartment(res: IDepartment) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.toastr.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // Update Department\r\n  updateDepartment(res: IDepartment) {\r\n    let index = this.dataSource.data.findIndex((e) => e.Dep_id == res.Dep_id);\r\n    this.dataSource.data[index] = res;\r\n    this.toastr.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  openDeleateDialog(DepartmentData: IDepartment): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? DepartmentData.ar_name\r\n              : DepartmentData.en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteDepartment(DepartmentData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Department\r\n  deleteDepartment(DepartmentData: IDepartment) {\r\n    this.departmentService\r\n      .deleteDepartment(DepartmentData.Dep_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex(\r\n            (e) => e == DepartmentData\r\n          );\r\n          this.dataSource.data.splice(index, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (DepartmentData.Dep_id == this.FormCtrls.id.value)\r\n            this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls?.id?.value == 0\r\n            ? \"EducationalSetup.AddDepartment\"\r\n            : \"EducationalSetup.EditDepartment\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"ar_name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.required ||\r\n                          FormCtrls.ar_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"en_name\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.en_name.invalid &&\r\n                        (FormCtrls.en_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.en_name.errors?.required ||\r\n                          FormCtrls.en_name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <app-educational-stage-dropdown\r\n                    [control]=\"FormCtrls.stageId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-educational-stage-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <educational-year-by-stage-dropdown\r\n                    [control]=\"FormCtrls.eduYearId\"\r\n                    [submitted]=\"submitted\"\r\n                    [stageControl]=\"FormCtrls.stageId\"\r\n                  ></educational-year-by-stage-dropdown>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"GeneralSetup.EducationGroup\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"eduGroupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let ele of EduGroups\"\r\n                        [value]=\"ele.eduGroup_id\"\r\n                      >\r\n                        {{ curLang == \"ar\" ? ele.ar_name : ele.en_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.eduGroupId?.invalid &&\r\n                        (FormCtrls.eduGroupId?.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.eduGroupId?.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.Departments\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- stage Column -->\r\n            <!-- <ng-container matColumnDef=\"stage\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Stage\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.stage }}</td>\r\n            </ng-container> -->\r\n\r\n            <!-- Educational Year Column -->\r\n            <!-- <ng-container matColumnDef=\"EducationalYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.EducationalYears\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.stage }}</td>\r\n            </ng-container> -->\r\n\r\n            <!-- educational group column -->\r\n            <ng-container matColumnDef=\"educationGroup\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"GeneralSetup.EducationGroup\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.eduGroupArName : ele.eduGroupEnName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editDepartment(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnAllDepartments($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { EducationYearService } from \"app/dashboard/services/setup/educational-setup/education-year.service\";\r\nimport {\r\n  IAddEditEducationYear,\r\n  IEducationYear,\r\n  IEducationYearList,\r\n} from \"app/dashboard/models/setup/educational-setup/education-year\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-education-year\",\r\n  templateUrl: \"./education-year.component.html\",\r\n  styleUrls: [\"./education-year.component.scss\"],\r\n})\r\nexport class EducationYearComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Update\" },\r\n  //   { functionName: \"Delete\" },\r\n  // ];\r\n  curLang: string;\r\n  displayColumns: string[] = [\"#\", \"ar_name\", \"en_name\", \"stage\", \"option\"];\r\n  dataSource: MatTableDataSource<IEducationYear>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private educationYearService: EducationYearService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      eduYear_ar_ame: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      eduYear_en_ame: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      stageID: [\"\", Validators.required],\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.returnEduYears(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.returnEduYears(1);\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"stage\":\r\n          return this.curLang == \"ar\" ? item.stageArName : item.stageEnName;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  editEduYear(EduYearData: IEducationYear) {\r\n    // this.myForm.patchValue(EduYearData);\r\n    this.FormCtrls.id.setValue(EduYearData.eduYearId);\r\n    this.FormCtrls.eduYear_ar_ame.setValue(EduYearData.ar_name);\r\n    this.FormCtrls.eduYear_en_ame.setValue(EduYearData.en_name);\r\n    this.FormCtrls.stageID.setValue(EduYearData.stageId);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // Return All Edu Years\r\n  returnEduYears(page: number) {\r\n    this.spinner.show();\r\n    this.educationYearService\r\n      .getAllEducationalYears(page)\r\n      .subscribe((res: IEducationYearList) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.eduYearList);\r\n          this.itemsCounts = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let EduYearData: IAddEditEducationYear = {\r\n      id: this.FormCtrls.id.value,\r\n      stageID: this.FormCtrls.stageID.value,\r\n      eduYear_ar_ame: this.FormCtrls.eduYear_ar_ame.value,\r\n      eduYear_en_ame: this.FormCtrls.eduYear_en_ame.value,\r\n      eduCompId: this.EduCompId,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.educationYearService\r\n        .addEditEducationalYear(EduYearData)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            let returnObject = res.new_eduYear;\r\n            let returnData: IEducationYear = {\r\n              eduYearId: returnObject.id,\r\n              ar_name: returnObject.ar_name,\r\n              en_name: returnObject.en_name,\r\n              stageId: returnObject.stageID,\r\n              stageArName: returnObject.stage_ar_name,\r\n              stageEnName: returnObject.group_en_name,\r\n            };\r\n\r\n            EduYearData.id == 0\r\n              ? this.addEduYear(returnData)\r\n              : this.updateEduYear(returnData);\r\n            this.dataSource.sort = this.sort;\r\n            this.clearForm();\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // Add Edu Year\r\n  addEduYear(res: IEducationYear) {\r\n    this.dataSource.data.unshift(res);\r\n    this.itemsCounts++;\r\n    this.toastr.success(\"General.AddSuccessfully\");\r\n  }\r\n\r\n  // Update Edu Year\r\n  updateEduYear(res: IEducationYear) {\r\n    let index = this.dataSource.data.findIndex(\r\n      (e) => e.eduYearId == res.eduYearId\r\n    );\r\n    this.dataSource.data[index] = res;\r\n    this.toastr.success(\"General.UpdateSuccessfully\");\r\n  }\r\n\r\n  openDeleateDialog(EduYearData: IEducationYear): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? EduYearData.ar_name : EduYearData.en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteEduYear(EduYearData);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Edu Year\r\n  deleteEduYear(EduYearData: IEducationYear) {\r\n    this.educationYearService\r\n      .deleteEducationalYear(EduYearData.eduYearId)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == EduYearData);\r\n          this.dataSource.data.splice(index, 1);\r\n          // this.itemsCounts--;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (EduYearData.eduYearId == this.FormCtrls.id.value)\r\n            this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.id.value == 0\r\n            ? \"EducationalSetup.AddEducationalYear\"\r\n            : \"EducationalSetup.EditEducationalYear\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"eduYear_ar_ame\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.eduYear_ar_ame.invalid &&\r\n                        (FormCtrls.eduYear_ar_ame.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.eduYear_ar_ame.errors?.required ||\r\n                          FormCtrls.eduYear_ar_ame.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"eduYear_en_ame\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.eduYear_en_ame.invalid &&\r\n                        (FormCtrls.eduYear_en_ame.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.eduYear_en_ame.errors?.required ||\r\n                          FormCtrls.eduYear_en_ame.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-educational-stage-dropdown\r\n                    [control]=\"FormCtrls.stageID\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-educational-stage-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls?.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.EducationalYears\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- stage Column -->\r\n            <ng-container matColumnDef=\"stage\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Stage\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.stageArName : ele.stageEnName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editEduYear(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"returnEduYears($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of Educational Years\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AcademicYearComponent } from \"./academic-year/academic-year/academic-year.component\";\r\nimport { AsignClassRoomsComponent } from \"./academic-year/asign-class-rooms/asign-class-rooms.component\";\r\nimport { TermDetailComponent } from \"./academic-year/term-detail/term-detail.component\";\r\nimport { TermsComponent } from \"./academic-year/terms/terms.component\";\r\nimport { DepartmentComponent } from \"./department/department.component\";\r\nimport { EducationYearComponent } from \"./education-year/education-year.component\";\r\nimport { SubgroupsComponent } from \"./groups/subgroups/subgroups.component\";\r\nimport { GroupsComponent } from \"./groups/groups/groups.component\";\r\nimport { CourseIndexComponent } from \"./courses/course-index/course-index.component\";\r\nimport { AddEditCourseComponent } from \"./courses/add-edit-course/add-edit-course.component\";\r\nimport { CourseGroupComponent } from \"./courses/course-group/course-group.component\";\r\nimport { StudentGroupIndexComponent } from \"./student-groups/student-group-index/student-group-index.component\";\r\nimport { AddStudentToGroupComponent } from \"./student-groups/add-student-to-group/add-student-to-group.component\";\r\nimport { StrctureIndexComponent } from \"./courses/course-strcture/strcture-index/strcture-index.component\";\r\nimport { CourseLectureComponent } from \"./courses/course-lecture/course-lecture.component\";\r\nimport { ExamNightComponent } from \"./courses/exam-night/exam-night.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"educational-year\", component: EducationYearComponent },\r\n  { path: \"department\", component: DepartmentComponent },\r\n  {\r\n    path: \"academic-year\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"AcademicYear\", pathMatch: \"full\" },\r\n\r\n      {\r\n        path: \"AcademicYear\",\r\n        component: AcademicYearComponent,\r\n      },\r\n      {\r\n        path: \"terms/:yearId\",\r\n        component: TermsComponent,\r\n      },\r\n      {\r\n        path: \"term-details/:yearId/:termId\",\r\n        component: TermDetailComponent,\r\n      },\r\n      {\r\n        path: \"assign-class-rooms/:yearId\",\r\n        component: AsignClassRoomsComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"groups\",\r\n    component: GroupsComponent,\r\n  },\r\n  {\r\n    path: \"subgroups\",\r\n    component: SubgroupsComponent,\r\n  },\r\n\r\n  {\r\n    path: \"courses\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: CourseIndexComponent,\r\n      },\r\n      {\r\n        path: \"edit-course/:courseId\",\r\n        component: AddEditCourseComponent,\r\n      },\r\n      {\r\n        path: \"add-course\",\r\n        component: AddEditCourseComponent,\r\n      },\r\n      {\r\n        path: \"course-lectures/:courseId\",\r\n        component: CourseLectureComponent,\r\n      },\r\n      {\r\n        path: \"course-group\",\r\n        component: CourseGroupComponent,\r\n      },\r\n      {\r\n        path: \"course-structure/:subjectId\",\r\n        component: StrctureIndexComponent,\r\n      },\r\n\r\n      {\r\n        path: \"exam-night\",\r\n        component: ExamNightComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"student-group\",\r\n    component: StudentGroupIndexComponent,\r\n  },\r\n  {\r\n    path: \"add-student-to-group\",\r\n    component: AddStudentToGroupComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EducationalSetupRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { EducationalSetupRoutingModule } from \"./educational-setup-routing.module\";\r\nimport { EducationYearComponent } from \"./education-year/education-year.component\";\r\nimport { DepartmentComponent } from \"./department/department.component\";\r\nimport { AcademicYearComponent } from \"./academic-year/academic-year/academic-year.component\";\r\nimport { TermDetailComponent } from \"./academic-year/term-detail/term-detail.component\";\r\nimport { TermsComponent } from \"./academic-year/terms/terms.component\";\r\nimport { AsignClassRoomsComponent } from \"./academic-year/asign-class-rooms/asign-class-rooms.component\";\r\nimport { GroupsComponent } from \"./groups/groups/groups.component\";\r\nimport { SubgroupsComponent } from \"./groups/subgroups/subgroups.component\";\r\nimport { CourseIndexComponent } from \"./courses/course-index/course-index.component\";\r\nimport { CourseGroupComponent } from \"./courses/course-group/course-group.component\";\r\nimport { AddEditCourseComponent } from \"./courses/add-edit-course/add-edit-course.component\";\r\nimport { StudentGroupIndexComponent } from \"./student-groups/student-group-index/student-group-index.component\";\r\nimport { AddStudentToGroupComponent } from \"./student-groups/add-student-to-group/add-student-to-group.component\";\r\nimport { AddUnitComponent } from \"./courses/course-strcture/add-unit/add-unit.component\";\r\nimport { AddLessonComponent } from \"./courses/course-strcture/lessons/add-lesson/add-lesson.component\";\r\nimport { LessonsIndexComponent } from \"./courses/course-strcture/lessons/lessons-index/lessons-index.component\";\r\nimport { StrctureIndexComponent } from \"./courses/course-strcture/strcture-index/strcture-index.component\";\r\nimport { TopicsComponent } from \"./courses/course-strcture/topics/topics.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { CourseLectureComponent } from \"./courses/course-lecture/course-lecture.component\";\r\nimport { ExamNightComponent } from \"./courses/exam-night/exam-night.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GroupsComponent,\r\n    SubgroupsComponent,\r\n    CourseIndexComponent,\r\n    CourseGroupComponent,\r\n    AddEditCourseComponent,\r\n    EducationYearComponent,\r\n    DepartmentComponent,\r\n    AcademicYearComponent,\r\n    TermDetailComponent,\r\n    TermsComponent,\r\n    AsignClassRoomsComponent,\r\n    StudentGroupIndexComponent,\r\n    AddStudentToGroupComponent,\r\n    StrctureIndexComponent,\r\n    LessonsIndexComponent,\r\n    AddLessonComponent,\r\n    AddUnitComponent,\r\n    TopicsComponent,\r\n    CourseLectureComponent,\r\n    ExamNightComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    EducationalSetupRoutingModule,\r\n  ],\r\n  exports: [\r\n    StrctureIndexComponent,\r\n    LessonsIndexComponent,\r\n    AddLessonComponent,\r\n    AddUnitComponent,\r\n    TopicsComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class EducationalSetupModule {}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  GroupAddEditVM,\r\n  GroupGetResponseVM,\r\n  GroupGetVM,\r\n} from \"app/dashboard/models/setup/educational-setup/group\";\r\nimport { GroupService } from \"app/dashboard/services/setup/educational-setup/group.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-groups\",\r\n  templateUrl: \"./groups.component.html\",\r\n  styleUrls: [\"./groups.component.scss\"],\r\n})\r\nexport class GroupsComponent implements OnInit, AfterViewInit {\r\n  Groups: GroupGetVM[] = [\r\n    { Id: 1, Ar_Name: \"لل\", En_Name: \"ff\" },\r\n    { Id: 2, Ar_Name: \"ت\", En_Name: \"kk\" },\r\n  ];\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang!: string;\r\n\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"Ar_Name\", \"En_Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<GroupGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private GroupServ: GroupService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllGroups(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    // test data\r\n    this.dataSource = new MatTableDataSource(this.Groups);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get all groups\r\n  getAllGroups(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.GroupServ.getAllGroups<GroupGetResponseVM>(\r\n      page\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.Groups = res.GroupList;\r\n        this.dataSource = new MatTableDataSource(this.Groups);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"Groups: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // add group\r\n  addGroup() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let group = this.myForm.value;\r\n      delete group.Id;\r\n      console.log(\"Group\", group);\r\n\r\n      this.spinner.show();\r\n      this.GroupServ.addGroup<GroupAddEditVM>(\r\n        group\r\n      ).subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.getAllGroups(this.curPage);\r\n          this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  // get form values to update\r\n  toEditGroup(group: GroupGetVM) {\r\n    this.myForm.patchValue(group);\r\n  }\r\n\r\n  // update group\r\n  updateGroup() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let id = this.formCtrls.Id.value;\r\n      let group = this.myForm.value;\r\n      delete group.Id;\r\n      console.log(\"Group\", group);\r\n\r\n      this.spinner.show();\r\n      this.GroupServ.updateGroup<GroupAddEditVM>(\r\n        id,\r\n        group\r\n      ).subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.getAllGroups(this.curPage);\r\n          this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(group: GroupGetVM): void {\r\n    let groupName =\r\n      this.currentLang == \"ar\" ? group.Ar_Name : group.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: groupName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteGroup(group.Id);\r\n      });\r\n  }\r\n\r\n  // delete group\r\n  deleteGroup(id: any) {\r\n    let index = this.Groups.indexOf(id);\r\n\r\n    this.spinner.show();\r\n    this.GroupServ.deleteGroup(id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.Groups.splice(index, 1);\r\n        this.dataSource = new MatTableDataSource(this.Groups);\r\n        this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Group -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"EducationalSetup.addGroup\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Group -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"EducationalSetup.updateGroup\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Ar_Name.invalid &&\r\n                        (formCtrls.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Ar_Name.errors?.required ||\r\n                          formCtrls.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.En_Name.invalid &&\r\n                        (formCtrls.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.En_Name.errors?.required ||\r\n                          formCtrls.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add Group -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"addGroup()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit Group -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Cancel\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"updateGroup()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.groups\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let group\">\r\n                {{ group.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let group\">\r\n                {{ group.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let group\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditGroup(group)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(group)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllGroups($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of groups\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  SubgroupGetResponseVM,\r\n  SubgroupGetVM,\r\n  SubgroupAddEditVM,\r\n  GroupGetVM,\r\n} from \"app/dashboard/models/setup/educational-setup/group\";\r\nimport { GroupService } from \"app/dashboard/services/setup/educational-setup/group.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-subgroups\",\r\n  templateUrl: \"./subgroups.component.html\",\r\n  styleUrls: [\"./subgroups.component.scss\"],\r\n})\r\nexport class SubgroupsComponent implements OnInit, AfterViewInit {\r\n  Subgroups: SubgroupGetVM[] = [\r\n    {\r\n      Id: 1,\r\n      Ar_Name: \"لل\",\r\n      En_Name: \"ff\",\r\n      Group: { Id: 1, Ar_Name: \"لل\", En_Name: \"df\" },\r\n    },\r\n    {\r\n      Id: 2,\r\n      Ar_Name: \"لل\",\r\n      En_Name: \"ee\",\r\n      Group: { Id: 2, Ar_Name: \"لل\", En_Name: \"aa\" },\r\n    },\r\n  ];\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang!: string;\r\n  groups: GroupGetVM[] = [\r\n    { Id: 1, Ar_Name: \"لل\", En_Name: \"ff\" },\r\n    { Id: 2, Ar_Name: \"لل\", En_Name: \"kk\" },\r\n  ];\r\n\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\"#\", \"Ar_Name\", \"En_Name\", \"Group\", \"actions\"];\r\n  dataSource: MatTableDataSource<SubgroupGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private GroupServ: GroupService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllSubgroups(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [null],\r\n      Ar_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      En_Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      GroupId: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // get groups\r\n    this.getAllGroups();\r\n\r\n    // test data\r\n    this.dataSource = new MatTableDataSource(this.Subgroups);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"Group\":\r\n          return this.currentLang == \"ar\"\r\n            ? item.Group?.Ar_Name\r\n            : item.Group?.En_Name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n\r\n    // custom filter\r\n    this.dataSource.filterPredicate = (data: SubgroupGetVM, filter) => {\r\n      return this.currentLang == \"ar\"\r\n        ? data.Group.Ar_Name.toLocaleLowerCase().indexOf(filter) != -1\r\n        : data.Group.En_Name.toLocaleLowerCase().indexOf(filter) != -1;\r\n    };\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get groups >> dropDown\r\n  getAllGroups() {\r\n    this.spinner.show();\r\n    this.GroupServ.getAllGroupsDropDown<GroupGetVM>().subscribe((res) => {\r\n      if (res) this.groups = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get all subgroups\r\n  getAllSubgroups(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n\r\n    this.GroupServ.getAllSubgroups<SubgroupGetResponseVM>(page).subscribe(\r\n      (res) => {\r\n        if (res) {\r\n          this.Subgroups = res.SubgroupList;\r\n          this.dataSource = new MatTableDataSource(this.Subgroups);\r\n          this.itemsCounts = res.countItems;\r\n          console.log(\"Subgroups: >> \", res);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // add subgroup\r\n  addSubgroup() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let subgroup = this.myForm.value;\r\n      delete subgroup.Id;\r\n      console.log(\"Subgroup\", subgroup);\r\n\r\n      this.spinner.show();\r\n      this.GroupServ.addSubgroup<SubgroupAddEditVM>(subgroup).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            this.getAllSubgroups(this.curPage);\r\n            this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n            this.myForm.reset();\r\n            this.submitted = false;\r\n          } else {\r\n            this.ToastrMsg.error(res?.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // get form values to update\r\n  toEditSubgroup(subgroup: SubgroupGetVM) {\r\n    this.myForm.patchValue(subgroup);\r\n    this.formCtrls.GroupId?.setValue(subgroup.Group.Id);\r\n  }\r\n\r\n  // update subgroup\r\n  updateSubgroup() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let id = this.formCtrls.Id.value;\r\n      let subgroup = this.myForm.value;\r\n      delete subgroup.Id;\r\n      console.log(\"Subgroup\", subgroup);\r\n\r\n      this.spinner.show();\r\n      this.GroupServ.updateSubgroup<SubgroupAddEditVM>(id, subgroup).subscribe(\r\n        (res: any) => {\r\n          if (res?.returnValue == 1) {\r\n            this.getAllSubgroups(this.curPage);\r\n            this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n\r\n            this.myForm.reset();\r\n            this.submitted = false;\r\n          } else {\r\n            this.ToastrMsg.error(res?.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(subgroup: SubgroupGetVM): void {\r\n    let subgroupName =\r\n      this.currentLang == \"ar\" ? subgroup.Ar_Name : subgroup.En_Name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: subgroupName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteSubgroup(subgroup.Id);\r\n      });\r\n  }\r\n\r\n  // delete subgroup\r\n  deleteSubgroup(id: any) {\r\n    let index = this.Subgroups.indexOf(id);\r\n\r\n    this.spinner.show();\r\n    this.GroupServ.deleteSubgroup(id).subscribe((res: any) => {\r\n      if (res?.returnValue == 1) {\r\n        this.Subgroups.splice(index, 1);\r\n        this.dataSource = new MatTableDataSource(this.Subgroups);\r\n        this.ToastrMsg.info(\"General.DeleteSuccessfully\");\r\n      } else {\r\n        this.ToastrMsg.error(res?.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Subgroup -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id.value\">\r\n        {{ \"EducationalSetup.addSubgroup\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Subgroup -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id.value\">\r\n        {{ \"EducationalSetup.updateSubgroup\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- arabic name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Ar_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.Ar_Name.invalid &&\r\n                        (formCtrls?.Ar_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.Ar_Name.errors?.required ||\r\n                          formCtrls?.Ar_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- english name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"En_Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.En_Name.invalid &&\r\n                        (formCtrls?.En_Name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls?.En_Name.errors?.required ||\r\n                          formCtrls?.En_Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- group input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"EducationalSetup.group\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"GroupId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? group.Ar_Name\r\n                            : group.En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.GroupId.invalid &&\r\n                        (formCtrls?.GroupId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.GroupId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add Subgroup -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"!formCtrls?.Id.value\"\r\n          (click)=\"addSubgroup()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <!-- edit Subgroup -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"myForm.reset(); submitted = false\"\r\n        >\r\n          {{ \"General.Cancel\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info mb-1\"\r\n          *ngIf=\"formCtrls?.Id.value\"\r\n          (click)=\"updateSubgroup()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"EducationalSetup.subgroups\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. Example\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name column -->\r\n            <ng-container matColumnDef=\"Ar_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let subgroup\">\r\n                {{ subgroup.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name column -->\r\n            <ng-container matColumnDef=\"En_Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let subgroup\">\r\n                {{ subgroup.En_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- group column -->\r\n            <ng-container matColumnDef=\"Group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let subgroup\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? subgroup?.Group.Ar_Name\r\n                    : subgroup?.Group.En_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let subgroup\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditSubgroup(subgroup)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(subgroup)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllSubgroups($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of subgroups\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IfileVM, IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { StudentGroupService } from \"app/dashboard/services/setup/educational-setup/student-group.service\";\r\nimport {\r\n  StudentSearchVM,\r\n  StudentGetVM,\r\n} from \"app/dashboard/models/setup/educational-setup/student-group\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-student-to-group\",\r\n  templateUrl: \"./add-student-to-group.component.html\",\r\n  styleUrls: [\"./add-student-to-group.component.scss\"],\r\n})\r\nexport class AddStudentToGroupComponent implements OnInit {\r\n  students: StudentGetVM[] = [];\r\n  groupId: number = 0;\r\n\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  myForm: FormGroup;\r\n\r\n  ExcelFile: IfileVM = null;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [{ functionName: \"Delete\" }];\r\n\r\n  displayedColumns: string[] = [\"#\", \"Name\", \"Email\", \"Mobile\", \"actions\"];\r\n  dataSource: MatTableDataSource<StudentGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private studentGroupServ: StudentGroupService,\r\n    private toastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.groupId = Number(params.get(\"groupId\"));\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.fb.group({\r\n      Email: [\"\"],\r\n      Mobile: [\"\"],\r\n    });\r\n\r\n    this.getAllStudentsInGroup(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudentsInGroup(1);\r\n    });\r\n\r\n    // this.authserv.branchId.subscribe((e) => {\r\n    //   this.getAllStudentsInGroup(1);\r\n    // });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getAllStudentsInGroup(page: number) {\r\n    this.curPage = page;\r\n\r\n    let searchData: StudentSearchVM = {\r\n      Mobile: this.formCtrls?.Mobile?.value?.trim(),\r\n      Email: this.formCtrls?.Email?.value?.trim(),\r\n      Page: page,\r\n      GroupId: this.groupId,\r\n      EduCompId: this.EduCompId,\r\n    };\r\n\r\n    this.spinner.show();\r\n    this.studentGroupServ\r\n      .getAllStudentsInGroup(searchData)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.students = res.StudentList;\r\n          this.dataSource = new MatTableDataSource(this.students);\r\n          this.itemsCounts = res.countItems;\r\n          // console.log(\"students\", this.students);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  addStudent() {\r\n    let searchData: StudentSearchVM = {\r\n      Mobile: this.formCtrls?.Mobile?.value,\r\n      Email: this.formCtrls?.Email?.value,\r\n      Page: 1,\r\n      GroupId: this.groupId,\r\n      EduCompId: this.EduCompId,\r\n    };\r\n\r\n    this.spinner.show();\r\n    console.log(\"search data\", searchData);\r\n    this.studentGroupServ.checkStudent(searchData).subscribe((student) => {\r\n      // console.log(\"check student\", student);\r\n      if (student.InGroup) {\r\n        this.toastrMsg.info(\"EducationalSetup.studentExistInGroup\");\r\n        return;\r\n      } else {\r\n        this.spinner.show();\r\n        // console.log(\"student\", student);\r\n        this.studentGroupServ\r\n          .addStudent(student.student?.userId, this.groupId)\r\n          .subscribe((res: any) => {\r\n            // console.log('addStudent', res);\r\n            // if (\r\n            //   res?.returnString ==\r\n            //   \"Student already exists in a group with the same teacher and subject\"\r\n            // )\r\n            //   this.toastrMsg.info(\"EducationalSetup.studentExistInGroup\");\r\n            if (res?.returnValue == 1) {\r\n              this.getAllStudentsInGroup(this.curPage);\r\n              this.toastrMsg.success(\"General.AddSuccessfully\");\r\n            } else this.toastrMsg.error(res?.returnString);\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleteDialog(student: StudentGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: student.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStudent(student);\r\n      });\r\n  }\r\n\r\n  deleteStudent(student: StudentGetVM) {\r\n    this.spinner.show();\r\n    this.studentGroupServ\r\n      .deleteStudent(student.userId, this.groupId)\r\n      .subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => (e = student));\r\n          this.dataSource.data.splice(i, 1);\r\n\r\n          // this.dataSource.paginator = this.paginator;\r\n          this.toastrMsg.success(\"General.DeleteSuccessfully\");\r\n        } else this.toastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  uploadStudentsByExcel() {\r\n    if (this.ExcelFile == null)\r\n      this.toastrMsg.warning(\"UploadStudentGrades.fileErr\");\r\n    else {\r\n      this.spinner.show();\r\n      this.studentGroupServ\r\n        .uploadStudentsByExcel({\r\n          ExcelFile: this.ExcelFile,\r\n          groupId: this.groupId,\r\n        })\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1)\r\n            this.toastrMsg.success(\"General.UploadSuccessfully\");\r\n          else this.toastrMsg.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = event.target.files[0].name;\r\n    let fileSize = event.target.files[0].size;\r\n    let fileType = event.target.files[0].type;\r\n    let LastModified = event.target.files[0].lastModified;\r\n    let LastModifiedDate = event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n\r\n        let data: IfileVM = {\r\n          FileAsBase64: fileReder.replace(\r\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\",\r\n            \"\"\r\n          ),\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.ExcelFile = data;\r\n      };\r\n    }\r\n  }\r\n\r\n  clearSearch() {\r\n    this.myForm.reset();\r\n    this.getAllStudentsInGroup(1);\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AssignStudentToGroup\" | translate }}\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../student-group\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n\r\n        <!-- search -->\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllStudentsInGroup(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <!-- reset button -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning float-right\"\r\n          (click)=\"clearSearch()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- email input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input matInput formControlName=\"Email\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- mobile input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.MobileNo\" | translate }} </mat-label>\r\n                    <input matInput formControlName=\"Mobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- upload excel sheet with students -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-label> {{ \"labels.ExcelSheet\" | translate }} </mat-label>\r\n                  <input\r\n                    class=\"file-upload\"\r\n                    type=\"file\"\r\n                    (change)=\"onChange($event)\"\r\n                    name=\"uploadedFile\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-md-6 col-12 p-0\"></div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add || edit button -->\r\n        <!-- add -->\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"addStudent()\"\r\n          class=\"btn btn-info bg-light-info\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n          <i class=\"fa fa-plus-square\"></i>\r\n        </a>\r\n\r\n        <!-- upload -->\r\n        <a type=\"button\" (click)=\"uploadStudentsByExcel()\" class=\"btn btn-info\">\r\n          <i class=\"fa fa-upload\"></i>\r\n          {{ \"General.Upload\" | translate }}\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Students\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- name column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let student\">{{ student.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email column -->\r\n            <ng-container matColumnDef=\"Email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let student\">{{ student.Email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile column -->\r\n            <ng-container matColumnDef=\"Mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.MobileNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let student\">{{ student.Mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let student\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(student)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStudentsInGroup($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of students\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  StudentGroupAddEditVM,\r\n  StudentGroupGetVM,\r\n} from \"app/dashboard/models/setup/educational-setup/student-group\";\r\nimport { StudentGroupService } from \"app/dashboard/services/setup/educational-setup/student-group.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { CourseService } from \"app/dashboard/services/setup/educational-setup/course.service\";\r\nimport { CourseGetVM } from \"app/dashboard/models/setup/educational-setup/course\";\r\n\r\n@Component({\r\n  selector: \"app-student-group-index\",\r\n  templateUrl: \"./student-group-index.component.html\",\r\n  styleUrls: [\"./student-group-index.component.scss\"],\r\n})\r\nexport class StudentGroupIndexComponent implements OnInit {\r\n  StudentGroups: StudentGroupGetVM[] = [];\r\n  teachers: any[];\r\n  courses: CourseGetVM[];\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  curPage: number = 1;\r\n  itemsCounts: number;\r\n  currentLang: string;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  // rowFunctions: IRowFunctionVM[];\r\n  rowFunctions: any[] = [\r\n    { functionName: \"Edit\" },\r\n    { functionName: \"Delete\" },\r\n    { functionName: \"AddStudentToGroup\" },\r\n  ];\r\n\r\n  // table\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"Name\",\r\n    \"Teacher\",\r\n    \"Course\",\r\n    \"MaxLimit\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<StudentGroupGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private studentGroupServ: StudentGroupService,\r\n    private courseServ: CourseService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private ToastrMsg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authserv: AuthService\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    // current language\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStudentGroups(1);\r\n    this.getAllTeachers();\r\n    this.getAllCourses();\r\n\r\n    this.myForm = this.fb.group({\r\n      Id: [0],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      TeacherId: [\"\", [Validators.required]],\r\n      CourseId: [\"\", [Validators.required]],\r\n      MaxLimit: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    // test data\r\n    this.dataSource = new MatTableDataSource(this.StudentGroups);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllStudentGroups(1);\r\n      this.getAllTeachers();\r\n      this.getAllCourses();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getAllTeachers() {}\r\n\r\n  getAllCourses() {\r\n    this.spinner.show();\r\n    this.courseServ.getAllCoursesDropDown().subscribe((res: any) => {\r\n      if (res) this.courses = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get all course Groups\r\n  getAllStudentGroups(page: number) {\r\n    this.curPage = page;\r\n\r\n    this.spinner.show();\r\n    this.studentGroupServ.getAllStudentGroups(page).subscribe((res) => {\r\n      if (res) {\r\n        this.StudentGroups = res.StudentGroupList;\r\n        this.dataSource = new MatTableDataSource(this.StudentGroups);\r\n        this.itemsCounts = res.countItems;\r\n        console.log(\"StudentGroups: >> \", res);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let studentGroup = {} as StudentGroupAddEditVM;\r\n      studentGroup.EduCompId = this.EduCompId;\r\n      studentGroup.Name = this.formCtrls.Name?.value;\r\n      studentGroup.TeacherId = this.formCtrls.TeacherId?.value;\r\n      studentGroup.CourseId = this.formCtrls.CourseId?.value;\r\n      studentGroup.MaxLimit = this.formCtrls.MaxLimit?.value;\r\n      console.log(\"StudentGroup\", studentGroup);\r\n\r\n      this.formCtrls.Id?.value\r\n        ? this.updateStudentGroup(studentGroup)\r\n        : this.addStudentGroup(studentGroup);\r\n    } else this.ToastrMsg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // add course Group\r\n  addStudentGroup(studentGroup: StudentGroupAddEditVM) {\r\n    this.spinner.show();\r\n    this.studentGroupServ\r\n      .addStudentGroup(studentGroup)\r\n      .subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          this.getAllStudentGroups(this.curPage);\r\n          this.ToastrMsg.success(\"General.AddSuccessfully\");\r\n\r\n          this.myForm.reset();\r\n          this.formCtrls.id.setValue(0);\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  // get form values to update\r\n  toEditStudentGroup(studentGroup: StudentGroupGetVM) {\r\n    this.myForm.patchValue(studentGroup);\r\n    this.formCtrls.TeacherId?.setValue(studentGroup.Teacher.Id);\r\n    this.formCtrls.CourseId?.setValue(studentGroup.Course.id);\r\n  }\r\n\r\n  // update course Group\r\n  updateStudentGroup(studentGroup: StudentGroupAddEditVM) {\r\n    this.spinner.show();\r\n    this.studentGroupServ\r\n      .updateStudentGroup(this.formCtrls.Id.value, studentGroup)\r\n      .subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex(\r\n            (e) => e.Id == this.formCtrls.Id.value\r\n          );\r\n          this.dataSource.data[i] = res;\r\n\r\n          this.ToastrMsg.success(\"General.UpdateSuccessfully\");\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n        } else {\r\n          this.ToastrMsg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  // delete dialog\r\n  openDeleteDialog(studentGroup: StudentGroupGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: studentGroup.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteStudentGroup(studentGroup);\r\n      });\r\n  }\r\n\r\n  // delete course Group\r\n  deleteStudentGroup(studentGroup: StudentGroupGetVM) {\r\n    this.spinner.show();\r\n    this.studentGroupServ\r\n      .deleteStudentGroup(studentGroup.Id)\r\n      .subscribe((res: any) => {\r\n        if (res?.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == studentGroup);\r\n          this.dataSource.data.splice(i, 1);\r\n\r\n          this.ToastrMsg.success(\"General.DeleteSuccessfully\");\r\n        } else this.ToastrMsg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Course Group -->\r\n      <mat-card-title *ngIf=\"!formCtrls?.Id?.value\">\r\n        {{ \"EducationalSetup.addGroup\" | translate }}\r\n      </mat-card-title>\r\n      <!-- edit Course Group -->\r\n      <mat-card-title *ngIf=\"formCtrls?.Id?.value\">\r\n        {{ \"EducationalSetup.updateGroup\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- name input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Name\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls.Name?.invalid &&\r\n                        (formCtrls.Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          formCtrls.Name.errors?.required ||\r\n                          formCtrls.Name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- teacher input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"TeacherId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of teachers\"\r\n                        [value]=\"teacher.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\"\r\n                            ? teacher.Ar_Name\r\n                            : teacher.En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.TeacherId.invalid &&\r\n                        (formCtrls?.TeacherId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.TeacherId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- course input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"EducationalSetup.course\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select formControlName=\"CourseId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let course of courses\"\r\n                        [value]=\"course.Id\"\r\n                      >\r\n                        {{\r\n                          currentLang == \"ar\" ? course.Ar_Name : course.En_Name\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.CourseId.invalid &&\r\n                        (formCtrls?.CourseId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.CourseId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- max limit input -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"EducationalSetup.MaxLimit\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"MaxLimit\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        formCtrls?.MaxLimit?.invalid &&\r\n                        (formCtrls?.MaxLimit?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"formCtrls?.MaxLimit.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrls?.MaxLimit.errors?.minusNum\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <!-- add || edit button -->\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"formCtrls?.Id?.value == 0\"></i>\r\n          {{\r\n            (formCtrls?.Id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <!-- reset button -->\r\n        <button\r\n          *ngIf=\"formCtrls.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"EducationalSetup.groups\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <!-- filter input -->\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <!-- table -->\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"firstCol\">#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\" class=\"firstCol\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- name column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let studentGroup\">\r\n                {{ studentGroup.Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- teacher column -->\r\n            <ng-container matColumnDef=\"Teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let studentGroup\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? studentGroup.Teacher.Ar_Name\r\n                    : studentGroup.Teacher.En_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- course column -->\r\n            <ng-container matColumnDef=\"Course\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Course\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let studentGroup\">\r\n                {{\r\n                  currentLang == \"ar\"\r\n                    ? studentGroup.Course.Ar_Name\r\n                    : studentGroup.Course.En_Name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- max limit column -->\r\n            <ng-container matColumnDef=\"MaxLimit\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.MaxLimit\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let studentGroup\">\r\n                {{ studentGroup.MaxLimit }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"actions\"></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let studentGroup\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info bg-light-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        (click)=\"toEditStudentGroup(studentGroup)\"\r\n                      >\r\n                        <i class=\"fa fa-edit mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleteDialog(studentGroup)\"\r\n                      >\r\n                        <i class=\"ft-trash mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'AddStudentToGroup'\"\r\n                        routerLink=\"../add-student-to-group\"\r\n                        [queryParams]=\"{\r\n                          groupId: studentGroup.Id,\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit mr-2\"></i>\r\n                        {{ \"labels.AssignStudentToGroup\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllStudentGroups($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of studentGroups\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport {\r\n  IAddEditAssignClassRoomVM,\r\n  IAssignClassRoom,\r\n  IAssignClassRoomList,\r\n} from \"app/dashboard/models/setup/educational-setup/assign-class-rooms\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AsignClassRoomsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return Class rooms\r\n  getAsignClassRoomsByYearId(yearId: any, page: number) {\r\n    return this.http.get<IAssignClassRoomList>(\r\n      `${environment.baseUrl}AssignClassRoom/getAssignClassRoomByAcademicEduYearId/${yearId}/${page}`\r\n    );\r\n  }\r\n\r\n  // getAsignClassRooms(page: number) {\r\n  //   return this.http.get<IAssignClassRoomList>(\r\n  //     `${environment.baseUrl}AssignClassRoom/getAssignClassRoomPage/${page}`\r\n  //   );\r\n  // }\r\n\r\n  // getAsignClassRoomsDropDown(page: number) {\r\n  //   return this.http.get<IAssignClassRoom[]>(\r\n  //     `${environment.baseUrl}AssignClassRoom/getAllAssignClassRoom/${page}`\r\n  //   );\r\n  // }\r\n\r\n  //Add New Class room\r\n  addEditAsignClassRoom(data: IAddEditAssignClassRoomVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}AssignClassRoom/addEditAssignClassRoom`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Class room\r\n  deleteAsignClassRoom(ClassRoomId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}AssignClassRoom/deleteAssignClassRoom/${ClassRoomId}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport {\r\n  IAddEditDepartment,\r\n  IDepartment,\r\n  IDepartmentList,\r\n} from \"app/dashboard/models/setup/educational-setup/department\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DepartmentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All Departments\r\n  getDepartment(page: number) {\r\n    return this.http.get<IDepartmentList>(\r\n      `${environment.baseUrl}Department/getDepartmentByPage/${page}`\r\n    );\r\n  }\r\n\r\n  getDepartmentDropdown() {\r\n    return this.http.get<IDepartment[]>(\r\n      `${environment.baseUrl}Department/getAllDepartment`\r\n    );\r\n  }\r\n\r\n  //Add - edit New Department\r\n  addEditDepartment(data: IAddEditDepartment) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}Department/addEditDepartment`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Department\r\n  deleteDepartment(DepartmentId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Department/deleteDepartment/${DepartmentId}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IAddEditEduYearDetailes } from \"app/dashboard/models/setup/educational-setup/education-detail\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EducationDetailService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Return All Academic Educational Year Detail\r\n  getAcademicEduYearDetailsByTermId(TermId: any, page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}AcademicEduYearDetails/getEducationDetailsByTermIdByPage/${TermId}/${page}`\r\n    );\r\n  }\r\n\r\n  getAcademicEduYearDetailsByPage(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}AcademicEduYearDetails/getEducationDetailsByPage/${page}`\r\n    );\r\n  }\r\n\r\n  //Add New Academic Educational Year Detail\r\n  AddEditAcademicYearDetail(data: IAddEditEduYearDetailes) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}AcademicEduYearDetails/addEditEducationDetails`,\r\n      data\r\n    );\r\n  }\r\n\r\n  //Delete Academic Educational Year Detail\r\n  deleteAcademicEducationalYearDetail(AcademicEduYearDetailId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}AcademicEduYearDetails/deleteEducationDetails/${AcademicEduYearDetailId}`\r\n    );\r\n  }\r\n}\r\n","import { environment } from \"environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ExamNightModel } from \"app/dashboard/models/setup/educational-setup/exam-night\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ExamNightService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllExamNight(page: number) {\r\n    return this.http.get(`${environment.baseUrl}AssignClassRoom${page}`);\r\n  }\r\n\r\n  addExamNight(body: ExamNightModel) {\r\n    return this.http.post(`${environment.baseUrl}AssignClassRoom`, body);\r\n  }\r\n\r\n  deleteFile(id: number) {\r\n    return this.http.delete(`${environment.baseUrl}AssignClassRoom${id}`);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GroupService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //#region >> groups\r\n  // Return All  Groups by page\r\n  getAllGroups<T>(page: number) {\r\n    return this.http.get<T>(`${environment.baseUrl}Groups/getAllGroups/${page}`);\r\n  }\r\n\r\n  // Return All Groups > dropDown list\r\n  getAllGroupsDropDown<T>() {\r\n    return this.http.get<T[]>(\r\n      `${environment.baseUrl}Groups/getAllGroupsDropDown`\r\n    );\r\n  }\r\n\r\n  // Add New Group\r\n  addGroup<T>(data: T) {\r\n    return this.http.post(`${environment.baseUrl}Groups/addGroup`, data);\r\n  }\r\n\r\n  // Update Group\r\n  updateGroup<T>(id: number, data: T) {\r\n    return this.http.put(`${environment.baseUrl}Groups/updateGroup${id}`, data);\r\n  }\r\n\r\n  // Delete Group\r\n  deleteGroup(id: number) {\r\n    return this.http.delete(`${environment.baseUrl}Groups/deleteGroup/${id}`);\r\n  }\r\n  //#endregion\r\n\r\n  //#region >> subgroups\r\n  // Return All Subgroup by page\r\n  getAllSubgroups<T>(page: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}Subgroups/getAllSubgroups/${page}`\r\n    );\r\n  }\r\n\r\n  // Add New Subgroup\r\n  addSubgroup<T>(data: T) {\r\n    return this.http.post(`${environment.baseUrl}Subgroups/addSubgroup`, data);\r\n  }\r\n\r\n  // Update Subgroup\r\n  updateSubgroup<T>(id: number, data: T) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}Subgroups/updateSubgroup${id}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Delete Subgroup\r\n  deleteSubgroup(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Subgroups/deleteSubgroup/${id}`\r\n    );\r\n  }\r\n  //#endregion\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  StudentGetResponseVM,\r\n  StudentGroupAddEditVM,\r\n  StudentGroupGetResponseVM,\r\n  StudentGroupGetVM,\r\n  StudentResultVM,\r\n  StudentSearchVM,\r\n} from \"app/dashboard/models/setup/educational-setup/student-group\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StudentGroupService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //#region >> groups\r\n  // Return All  StudentGroups by page\r\n  getAllStudentGroups(page: number) {\r\n    return this.http.get<StudentGroupGetResponseVM>(\r\n      `${environment.baseUrl}StudentGroups/getAllStudentGroups/${page}`\r\n    );\r\n  }\r\n\r\n  // Return All StudentGroups > dropDown list\r\n  getAllStudentGroupsDropDown() {\r\n    return this.http.get<StudentGroupGetVM[]>(\r\n      `${environment.baseUrl}StudentGroups/getAllStudentGroupsDropDown`\r\n    );\r\n  }\r\n\r\n  // Add New StudentGroup\r\n  addStudentGroup(data: StudentGroupAddEditVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}StudentGroups/addStudentGroup`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Update StudentGroup\r\n  updateStudentGroup(id: number, data: StudentGroupAddEditVM) {\r\n    return this.http.put(\r\n      `${environment.baseUrl}StudentGroups/updateStudentGroup${id}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  // Delete StudentGroup\r\n  deleteStudentGroup(id: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}StudentGroups/deleteStudentGroup/${id}`\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region assign student to group\r\n  getAllStudentsInGroup(body: StudentSearchVM) {\r\n    return this.http.post<StudentGetResponseVM>(\r\n      `${environment.baseUrl}studyinggroup/search-student-groups`,\r\n      body\r\n    );\r\n  }\r\n\r\n  checkStudent(body: StudentSearchVM) {\r\n    return this.http.post<StudentResultVM>(\r\n      environment.baseUrl + \"studyinggroup/search-student-in-group\",\r\n      body\r\n    );\r\n  }\r\n\r\n  addStudent(studentId: number, groupId: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}studyinggroup/add-student-groups/${studentId}/${groupId}`\r\n    );\r\n  }\r\n\r\n  deleteStudent(studentId: number, groupId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}studyinggroup/remove-student-groups/${studentId}/${groupId}`\r\n    );\r\n  }\r\n\r\n  uploadStudentsByExcel(body: any) {\r\n    return this.http.post(\r\n      environment.baseUrl + \"studyinggroup/upload-excel-student-groups\",\r\n      body\r\n    );\r\n  }\r\n  //#endregion\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IBodyEductionalGroupVM } from \"app/dashboard/models/setup/general-setup/educational-group\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EducationalGroupService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEducationalGroup(page: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}EducationGroup/getEduGroupByPage/${page}`\r\n    );\r\n  }\r\n\r\n  getEducationalGroupDropdown() {\r\n    return this.http.get(`${environment.baseUrl}EducationGroup/getAllEduGroup`);\r\n  }\r\n\r\n  addupdateEduGroup(data: IBodyEductionalGroupVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}EducationGroup/addEditEduGroup`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteEducationalGroup(EduGroupId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}EducationGroup/deleteEduGroup/${EduGroupId}`\r\n    );\r\n  }\r\n}\r\n"],"names":["Validators","MatSort","MatPaginator","MatTableDataSource","DeleteDialogComponent","i0","ctx_r32","ctx_r35","AcademicYearComponent","spinner","toastr","dialog","translate","fb","academicYearService","route","authService","datePipe","queryParamMap","subscribe","params","functionId","Number","get","getUserRowFunctions","res","length","rowFunctions","EduCompId","getEduCompId","myForm","group","id","From_Date","required","To_Date","stageId","eduYearId","onLangChange","lang","curLang","returnAllAcademicYear","dataSource","paginator","startSortingTable","e","sortingDataAccessor","item","property","eduYearArName","eduEnName","sort","controls","AcadYearData","patchValue","FormCtrls","setValue","academicEduYearId","fromDate","toDate","event","filterValue","target","value","filter","trim","toLowerCase","page","show","getAcademicYears","eduYearList","itemsCounts","countItems","hide","submitted","Date","getTime","error","AcademicYearData","transform","eduCompId","valid","addEditAcademicYear","returnValue","returnObject","academicEducationYear","returnData","eduYear_ar_name","eduYear_en_name","addAcademicYear","updateAcademicYear","returnString","data","unshift","success","reset","i","findIndex","clearForm","title","open","msg","afterClosed","confirm","deleteAcademicYear","index","splice","selectors","viewQuery","ctx","ctx_r16","ctx_r25","ctx_r28","AsignClassRoomsComponent","asignClassRoomsService","educationYearService","classRoomService","paramMap","pram","classRoomId","getAsignClassRoom","getAllClassRooms","classRoomCode","AsignClassRoomData","academicClassRoomId","getAllClassRoomsDropDown","classRoomList","getAsignClassRoomsByYearId","academicClassRoom","addEditAsignClassRoom","academic_ClassRoom","addAsignClassRoom","updateAsignClassRoom","deleteAsignClassRoom","CustomeValidator","ctx_r40","ctx_r43","TermDetailComponent","educationDetailService","CourseService","termId","SubjectId","CoursesGroupId","CoursePercentage","minusNum","max","AddedToScores","returnEduYearDetails","getAllCoursesGroup","subject_ar_name","_a","subject_en_name","_b","courseGroup_arName","_c","courseGroup_enName","_d","eduYearDetailData","edu_details_id","subject_id","courseGroup_id","getAllCourseGroupsDropDown","CourseGroupList","getAcademicEduYearDetailsByTermId","edu_details_list","TermId","console","log","AddEditAcademicYearDetail","academicEducationYearDetails","subject_arName","subject_enName","addEduYearDetail","updateEduYearDetail","deleteeduYearDetail","deleteAcademicEducationalYearDetail","ctx_r41","ctx_r44","TermsComponent","termsService","param","ar_name","whiteSpace","en_name","returnAllTermsByYearId","TermData","getTermsByYearId","TermList","addEditTerm","academicTerm","addTerm","updateTerm","deleteTerm","ctx_r13","AddEditCourseComponent","CourseServ","ToastrMsg","uploadFileService","router","authserv","courseId","getCourseById","Course","currentLang","price","subjectCode","MaxScore","MinScore","course_attach","PromoPath","subjectDescription","removeImage","uploadFile","then","file","formCtrls","imageChange","imageUrl","ImagePath","previewPicture","course","_e","_f","_g","_h","_j","_k","_l","_m","remove_image","addEditCourse","navigate","queryParams","decls","vars","consts","template","ctx_r30","ctx_r42","ctx_r45","CourseGroupComponent","courseServ","Ar_Name","En_Name","Max_Sub_Num","Min_Sub_Num","getAllCourseGroups","firstPage","CourseGroups","courseGroupList","courseGroup","EducationalComponentID","addEditCourseGroup","addCourseGroup","course_group","updateCourseGroup","courseGroupName","deleteCourseGroup","ctx_r47","ctx_r52","CourseIndexComponent","getAllCourses","getAllCoursesByEduCopmIdPage","Courses","subjectList","courseName","deleteCourse","subjectId","setTimeout","FileAsBase64","uploadSubjectSyllabus","body","thumbnailFile","warning","ctx_r6","CourseLectureComponent","CourseLectureServ","WeeklyTableServ","getAllLecturesIdsByCourseId","IsAdd","WeeklyLecIDSCtrls","map","lec","Lecture_id","WeeklyLec_IDS","getAllWeeklyLectures","lecturesList","courseLectures","addcourseLectures","updatecourseLectures","addCourseLectures","Course_Lecture","isDelete","editCourseLectures","deletecourseLectures","MAT_DIALOG_DATA","ctx_r9","ctx_r11","AddUnitComponent","courceStructureService","dialogRef","unitId","getUnitById","unit_ar_name","unit_en_name","unitDescription","thumbnailPic","addedUnit","unit_name","subjectid","coverPath","unitThumb","attach_path","currentSubject","addUpdateUnit","close","fileName","files","name","fileSize","size","fileType","type","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","result","_r2","AddLessonComponent","lessonId","lesson","getLessonById","lesson_ar_name","lesson_en_name","lessonDescription","addedLesson","lesson_name","lessonThumb","addUpdateLesson","TopicsComponent","LessonsIndexComponent","getLessons","AddedLesson","lessons","push","deleteLesson","indexOf","minWidth","updatedLesson","maxHeight","topic","inputs","canUpdate","features","_r1","ctx_r8","ctx_r14","ctx_r17","ctx_r19","ctx_r2","ctx_r21","StrctureIndexComponent","generalService","userId","url","search","isParent","isStudent","getUser","userData","user","getUnits","units","selectedUnitId","selectedUnitName","unit","deleteUnit","navigateByUrl","el","ctx_r20","ctx_r4","getTopicsByLessonId","topic_ar_name","maxLength","topic_en_name","p","topics","edu_topic","itemsCount","topicsSize","getTopicById","LessonID","state","addUpdateTopic","deleteTopic","_r5","ctx_r18","ctx_r29","ExamNightComponent","examNightService","getAllExamNight","countryId","educationYearId","list","addExamNight","response","deleteFile","$event","FileInputs","document","querySelectorAll","forEach","input","ctx_r24","ctx_r38","DepartmentComponent","departmentService","EducationalGroupServ","eduGroupId","returnAllDepartments","getAllEducationalGroups","eduGroupArName","eduGroupEnName","DepartmentData","Dep_id","getEducationalGroupDropdown","EduGroups","getDepartment","DepList","departmentData","addEditDepartment","Department","eduGroup_ar_name","eduGroup_en_name","addDepartment","updateDepartment","deleteDepartment","ctx_r31","ctx_r34","EducationYearComponent","eduYear_ar_ame","eduYear_en_ame","stageID","returnEduYears","stageArName","stageEnName","EduYearData","getAllEducationalYears","addEditEducationalYear","new_eduYear","stage_ar_name","group_en_name","addEduYear","updateEduYear","deleteEduYear","deleteEducationalYear","RouterModule","SubgroupsComponent","GroupsComponent","StudentGroupIndexComponent","AddStudentToGroupComponent","routes","path","component","children","redirectTo","pathMatch","EducationalSetupRoutingModule","forChild","imports","exports","CommonModule","SharedModule","NgxSpinnerModule","MaterialModule","ReactiveFormsModule","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","EducationalSetupModule","provide","useClass","useValue","declarations","ctx_r23","GroupServ","Id","functionName","getAllGroups","Groups","curPage","GroupList","addGroup","updateGroup","groupName","deleteGroup","info","ctx_r27","Group","getAllSubgroups","GroupId","Subgroups","filterPredicate","toLocaleLowerCase","getAllGroupsDropDown","groups","SubgroupList","subgroup","addSubgroup","updateSubgroup","subgroupName","deleteSubgroup","ctx_r22","studentGroupServ","toastrMsg","groupId","Email","Mobile","getAllStudentsInGroup","searchData","Page","students","StudentList","checkStudent","student","InGroup","addStudent","Name","deleteStudent","ExcelFile","uploadStudentsByExcel","replace","ctx_r33","ctx_r46","ctx_r49","getAllStudentGroups","getAllTeachers","TeacherId","CourseId","MaxLimit","StudentGroups","getAllCoursesDropDown","courses","StudentGroupList","studentGroup","updateStudentGroup","addStudentGroup","Teacher","deleteStudentGroup","environment","AsignClassRoomsService","http","yearId","baseUrl","post","ClassRoomId","delete","factory","providedIn","DepartmentService","DepartmentId","EducationDetailService","AcademicEduYearDetailId","ExamNightService","GroupService","put","StudentGroupService","studentId","EducationalGroupService","EduGroupId"],"sourceRoot":"webpack:///"}