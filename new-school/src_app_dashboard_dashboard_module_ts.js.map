{"version":3,"file":"src_app_dashboard_dashboard_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMW,MAAM,GAAW,CACrB;AACEC,MAAI,EAAE,EADR;AAEEC,YAAU,EAAE,aAFd;AAGEC,WAAS,EAAE;AAHb,CADqB,EAMrB;AACEF,MAAI,EAAE,aADR;AAEEG,WAAS,EAAEL,wGAAmBA;AAFhC,CANqB,EAWrB;AACEE,MAAI,EAAE,qCADR;AAEEG,WAAS,EAAEN,uHAA0BA;AAFvC,CAXqB,EAgBrB;AACEG,MAAI,EAAE,WADR;AAEEG,WAAS,EAAEb,2GAAuBA;AAFpC,CAhBqB,EAqBrB;AACEU,MAAI,EAAE,iBADR;AAEEG,WAAS,EAAEd,2GAAuBA;AAFpC,CArBqB,EA0BrB;AACEW,MAAI,EAAE,OADR;AAEEG,WAAS,EAAEV,4FAAgBA;AAF7B,CA1BqB,EA8BrB;AACEO,MAAI,EAAE,uBADR;AAEEG,WAAS,EAAET,8GAAsBA;AAFnC,CA9BqB,EAmCrB;AACEM,MAAI,EAAE,SADR;AAEEI,UAAQ,EAAE,CACR;AAAEJ,QAAI,EAAE,EAAR;AAAYC,cAAU,EAAE,OAAxB;AAAiCC,aAAS,EAAE;AAA5C,GADQ,EAER;AACEF,QAAI,EAAE,OADR;AAEEG,aAAS,EAAEX,6GAAqBA;AAFlC,GAFQ,EAMR;AACEQ,QAAI,EAAE,2BADR;AAEEG,aAAS,EAAEZ,sHAAwBA;AAFrC,GANQ;AAFZ,CAnCqB,EAkDrB;AACES,MAAI,EAAE,UADR;AAEEI,UAAQ,EAAE,CACR;AAAEJ,QAAI,EAAE,EAAR;AAAYC,cAAU,EAAE,OAAxB;AAAiCC,aAAS,EAAE;AAA5C,GADQ,EAER;AACEF,QAAI,EAAE,OADR;AAEEG,aAAS,EAAEP,iHAAsBA;AAFnC,GAFQ,EAMR;AACEI,QAAI,EAAE,6BADR;AAEEG,aAAS,EAAER,kIAA2BA;AAFxC,GANQ;AAFZ,CAlDqB,EAiErB;AACA;AACA;AACA;AACA;AAEA;AACEK,MAAI,EAAE,mBADR;AAEEK,cAAY,EAAE;AAAA,WACZ,wPAAmEC,IAAnE,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,sBAAT;AAAA,KADF,CADY;AAAA;AAFhB,CAvEqB,EA+ErB;AACER,MAAI,EAAE,eADR;AAEEK,cAAY,EAAE;AAAA,WACZ,6WAA2DC,IAA3D,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACE,kBAAT;AAAA,KADF,CADY;AAAA;AAFhB,CA/EqB,EAuFrB;AACET,MAAI,EAAE,iBADR;AAEEK,cAAY,EAAE;AAAA,WACZ,uRAA+DC,IAA/D,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACG,oBAAT;AAAA,KADF,CADY;AAAA;AAFhB,CAvFqB,EA8FrB;AACEV,MAAI,EAAE,iBADR;AAEEK,cAAY,EAAE;AAAA,WACZ,wOAA+DC,IAA/D,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACI,oBAAT;AAAA,KADF,CADY;AAAA;AAFhB,CA9FqB,EAsGrB;AACEX,MAAI,EAAE,UADR;AAEEK,cAAY,EAAE;AAAA,WACZ,6YAA2DC,IAA3D,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACK,wBAAT;AAAA,KADF,CADY;AAAA;AAFhB,CAtGqB,EA6GrB;AACEZ,MAAI,EAAE,WADR;AAEEK,cAAY,EAAE;AAAA,WACZ,mPAA6CC,IAA7C,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACM,eAAT;AAAA,KADF,CADY;AAAA;AAFhB,CA7GqB,EAqHrB;AACEb,MAAI,EAAE,aADR;AAEEK,cAAY,EAAE;AAAA,WACZ,4MAAiDC,IAAjD,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACO,WAAT;AAAA,KADF,CADY;AAAA;AAFhB,CArHqB;AA6HrB;AACA;AACEd,MAAI,EAAE,WADR;AAEEK,cAAY,EAAE;AAAA,WACZ,mPAA6CC,IAA7C,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACQ,eAAT;AAAA,KADF,CADY;AAAA;AAFhB,CA9HqB;AAsIrB;AACA;AACEf,MAAI,EAAE,oBADR;AAEEK,cAAY,EAAE;AAAA,WACZ,wOAA+DC,IAA/D,CACE,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACS,uBAAT;AAAA,KADF,CADY;AAAA;AAFhB,CAvIqB;AA8IrB;AACA;AACEhB,MAAI,EAAE,SADR;AAEEK,cAAY,EAAE;AAAA,WACZ,2OAAyCC,IAAzC,CAA8C,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACU,aAAT;AAAA,KAA9C,CADY;AAAA;AAFhB,CA/IqB,CAAvB;AA0JO,IAAMC,sBAAb;AAAA;AAAA;;;mBAAaA;AAAsB;;;QAAtBA;;;YAHF,CAAC9B,mEAAA,CAAsBW,MAAtB,CAAD,GACCX,0DAAYA;;;;uHAEX8B,wBAAsB;AAAAE,cAAAA,0DAAAA;AAAAC,cAFvBjC,0DAEuB;AAAA;AAFX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtKxB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;AAsCO,IAAM8C,eAAb;AAAA;AAAA;;;mBAAaA;AAAe;;;QAAfA;;;aAXA,CACT;AACEC,WAAO,EAAEL,gEADX;AAEEM,YAAQ,EAAEJ,+EAAcA;AAF1B,GADS,EAKT;AACEG,WAAO,EAAEJ,qEADX;AAEEM,YAAQ,EAAEJ,iFAAgBA;AAF5B,GALS;AASVb,YAjCQ,CACPE,0DADO,EAEPJ,6EAFO,EAGPK,wDAHO,EAIPC,gEAJO,EAKPC,+DALO,EAMPC,+EANO,EAOPE,kEAPO,EAQPD,0DARO,CAiCR;;;;uHAEUO,iBAAe;AAAAI,mBAxBxBxC,wGAwBwB,EAvBxBD,uHAuBwB,EAtBxBP,2GAsBwB,EArBxBD,2GAqBwB,EApBxBwC,2GAoBwB,EAnBxBpC,4FAmBwB,EAlBxBC,8GAkBwB,EAjBxBF,8GAiBwB,EAhBxBD,uHAgBwB,EAfxBK,kHAewB,EAdxBD,mIAcwB;AAdGyB,cApB3BE,0DAoB2B,EAnB3BJ,6EAmB2B,EAlB3BK,wDAkB2B,EAjB3BC,gEAiB2B,EAhB3BC,+DAgB2B,EAf3BC,+EAe2B,EAd3BE,kEAc2B,EAb3BD,0DAa2B;AAcH;AA3BR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCpB;AACA;AACA;AAEA;AACA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;ACsBsBmB,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAmBHA,IAAAA,4DAAAA;AAIEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAHEA,IAAAA,wDAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAUFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA+CfA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAsCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKtCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASC,8BAAT;AAA2B,KAA3B;AAGAD,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAEAA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASE,qCAAT;AAAkC,KAAlC;AAGAF,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAfFA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAQAA,IAAAA,wDAAAA;AAOFA,IAAAA,mEAAAA;;;;;AAdKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAXPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAiBFA,IAAAA,0DAAAA;;;;;AAjBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAoBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;AD5IT,IAAMzD,uBAAb;AAgCE,mCACU4D,KADV,EAEUC,EAFV,EAGSC,QAHT,EAIUC,GAJV,EAKUC,aALV,EAMUC,OANV,EAOUC,MAPV,EAO2B;AAAA;;AAAA;;AANjB;AACA;AACD;AACC;AACA;AACA;AACA;AArCV,qBAAqB,KAArB;AAKA,sBAAqB,CAArB;AAEA,oBAA2B,EAA3B;AACA,qBAAkC,EAAlC;AAeA,4BAA6B,CAAC,GAAD,EAAM,MAAN,EAAc,QAAd,EAAwB,SAAxB,CAA7B;AAgBEN,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,QAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB,CADO,CAEP;AACD;AACF,SAPH;AAQD;AACF,KAbD;AAcD;;AAvDH;AAAA;AAAA,SAYE,eAAgB;AACd,aAAO,KAAKE,MAAL,CAAYJ,GAAZ,CAAgB,UAAhB,CAAP;AACD;AAdH;AAAA;AAAA,SAeE,eAAkB;AAChB,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,YAAhB,CAAP;AACD,KAjBH,CAkBE;;AAlBF;AAAA;AAAA,SAmBE,eAAkB;AAChB,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,YAAhB,CAAP;AACD;AArBH;AAAA;AAAA,SAsBE,eAAiB;AACf,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,WAAhB,CAAP;AACD;AAxBH;AAAA;AAAA,WAyDE,oBAAQ;AAAA;;AACN,WAAKI,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AAC1BC,gBAAQ,EAAE,CAAC,CAAD,CADgB;AAE1BC,kBAAU,EAAE,CAAC,EAAD,EAAK,CAAC3B,+DAAD,EAAsBF,qGAAtB,CAAL,CAFc;AAG1B;AACAgC,kBAAU,EAAE,CAAC,EAAD,EAAK9B,+DAAL,CAJc;AAK1B+B,iBAAS,EAAE,CAAC,KAAKA,SAAN;AALe,OAAd,CAAd;AAQA,WAAKA,SAAL,GAAiB,KAAKrB,QAAL,CAAcsB,YAAd,EAAjB;AACA,WAAKpB,aAAL,CACGqB,eADH,GAEGjB,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAACC,SAAL,GAAiBD,QAAjB;AACD;AACF,OAPH;AASA,WAAKE,cAAL,CAAoB,CAApB;AACD;AA7EH;AAAA;AAAA,WA+EE,2BAAe;AAAA;;AACb,WAAK1B,QAAL,CAAcqB,SAAd,CAAwBf,SAAxB,CAAkC,UAACqB,CAAD,EAAM;AACtC,cAAI,CAACN,SAAL,GAAiBM,CAAC,CAACN,SAAnB;;AACA,cAAI,CAACO,aAAL,CAAmBC,QAAnB,CAA4BF,CAAC,CAACN,SAA9B;;AACA,cAAI,CAACK,cAAL,CAAoB,CAApB;AACD,OAJD;AAKA,WAAKI,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,WAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AAvFH;AAAA;AAAA,WAyFE,qBAAYC,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AA5FH;AAAA;AAAA,WA8FE,wBAAeC,UAAf,EAAiC;AAAA;;AAC/B,WAAKrC,OAAL,CAAasC,IAAb;AACAC,aAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKtB,SAA3B;AACA,WAAKnB,aAAL,CACG0C,uBADH,CAC+C,KAAKvB,SADpD,EAC+DmB,UAD/D,EAEGlC,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZkB,iBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BnB,QAA1B;AACA,gBAAI,CAACqB,QAAL,GAAgBrB,QAAQ,CAACsB,kBAAzB;AACA,gBAAI,CAAChB,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuB+B,QAAQ,CAACsB,kBAAhC,CAAlB;AACA,gBAAI,CAACC,UAAL,GAAkBvB,QAAQ,CAACuB,UAA3B;AACD;;AACD,cAAI,CAAC5C,OAAL,CAAa6C,IAAb;AACD,OAVH;AAWD;AA5GH;AAAA;AAAA,WA8GE,oBAAWC,MAAX,EAA+B;;;AAC7B,iBAAKC,YAAL,MAAiB,IAAjB,IAAiBC,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEtB,QAAF,CAAWoB,MAAM,CAACG,EAAlB,CAAjB;AACA,iBAAKC,cAAL,MAAmB,IAAnB,IAAmBC,aAAnB,GAAmB,MAAnB,GAAmBA,GAAEzB,QAAF,CAAWoB,MAAM,CAACM,IAAlB,CAAnB,CAF6B,CAG7B;;AACA,iBAAKC,cAAL,MAAmB,IAAnB,IAAmBC,aAAnB,GAAmB,MAAnB,GAAmBA,GAAE5B,QAAF,CAAWoB,MAAM,CAAC7B,UAAlB,CAAnB;AACA,WAAKsC,MAAL,CAAYC,aAAZ,CAA0BC,SAA1B,GAAsC,QAAtC;AACD;AApHH;AAAA;AAAA,WAsHE,sBAAaX,MAAb,EAAiC;AAAA;;AAC/B,WAAK9C,OAAL,CAAasC,IAAb;AACA,WAAKvC,aAAL,CAAmB2D,YAAnB,CAAgCZ,MAAM,CAACG,EAAvC,EAA2C9C,SAA3C,CAAqD,UAACkB,QAAD,EAAa;AAChE,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAACE,cAAL,CAAoB,CAApB;;AACA,gBAAI,CAACzB,GAAL,CAAS6D,OAAT,CAAiB,oBAAjB;AACD;;AACD,cAAI,CAAC3D,OAAL,CAAa6C,IAAb;AACD,OAPD;AAQD;AAhIH;AAAA;AAAA,WAkIE,oBAAQ;AAAA;;;;AACN,WAAKe,SAAL,GAAiB,IAAjB;;AAEA,UAAI,KAAKjD,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,YAAIwB,GAAG,GAAG,EAAV;AACAA,WAAG,CAACb,EAAJ,GAAS,WAAKF,YAAL,MAAiB,IAAjB,IAAiBC,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEf,KAA5B;AACA6B,WAAG,CAACV,IAAJ,GAAW,WAAKF,cAAL,MAAmB,IAAnB,IAAmBC,aAAnB,GAAmB,MAAnB,GAAmBA,GAAElB,KAAhC;AACA6B,WAAG,CAAC7C,UAAJ,GAAiB,WAAKoC,cAAL,MAAmB,IAAnB,IAAmBC,aAAnB,GAAmB,MAAnB,GAAmBA,GAAErB,KAAtC;AACA6B,WAAG,CAAC5C,SAAJ,GAAgB,KAAKA,SAArB,CANqB,CAQrB;;AAEA,aAAKnB,aAAL,CACGgE,eADH,CAC6CD,GAD7C,EAEG3D,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,gBAAI,CAACuC,SAAL,GAAiB,KAAjB;;AAEA,cAAIvC,QAAQ,IAAIA,QAAQ,CAAC2C,WAAT,KAAyB,GAAzC,EAA8C;AAC5C,kBAAI,CAACT,MAAL,CAAYC,aAAZ,CAA0BC,SAA1B,GAAsC,KAAtC,CAD4C,CAE5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAI,CAAClC,cAAL,CAAoB,CAApB;;AACA,kBAAI,CAACzB,GAAL,CAAS6D,OAAT,CAAiB,qCAAjB;;AACA,kBAAI,CAAChD,MAAL,CAAYsD,KAAZ,GAf4C,CAgB5C;;AACD;;AACD,gBAAI,CAACjE,OAAL,CAAa6C,IAAb;AACD,SAxBH;AAyBD;AACF;AAzKH;AAAA;AAAA,WA2KE,2BAAkBC,MAAlB,EAAsC;AAAA;;AACpC,WAAK7C,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAEgD,MAAM,CAACM;AADR;AADqB,OAD/B,EAMGgB,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACC,YAAL,CAAkBxB,MAAlB;AACd,OATH;AAUD;AAtLH;;AAAA;AAAA;;;mBAAa/G,yBAAuByD,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,sDAAAA,GAAAA,+DAAAA,CAAAA,0FAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA;AAAA;;;QAAvBzD;AAAuBwI;AAAAC;AAAA;gEA4BvBpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;wEACWH,qDAAUA;;;;;;;;;;;;;;;;ACzDzCM,MAAAA,uDAAAA;AAOAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AAC5CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAiCA,MAAAA,0DAAAA;AAC5CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAEVA,MAAAA,0DAAAA;AACFA,MAAAA,wDAAAA;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAIEA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AAEAjF,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAyCA,MAAAA,0DAAAA;AAE3CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAFFjF,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAmBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQiF,sCAAkC,CAAlC,CAAR;AAA4C,OAA5C;AAKFjF,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA5KQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBQA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAEGA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;AAIMA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQjBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAwBbA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAWFA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAcmBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiDKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAUjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwBiF,cAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5KZ;AACA;AACA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACyBsBjF,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA4BHA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA6DXA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAsBA,IAAAA,0DAAAA;;;;;AAAtBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAA0BA,IAAAA,0DAAAA;;;;;AAA1BA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAqBA,IAAAA,0DAAAA;;;;;AAArBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASkF,8BAAT;AAA2B,KAA3B;AAGAlF,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAEAA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASmF,mCAAT;AAAgC,KAAhC;AAGAnF,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAfFA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAQAA,IAAAA,wDAAAA;AAOFA,IAAAA,mEAAAA;;;;;AAdKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAXPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAiBFA,IAAAA,0DAAAA;;;;;AAjBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAoBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;AD5JT,IAAMxD,uBAAb;AA8BE,mCACU2D,KADV,EAEUC,EAFV,EAGSC,QAHT,EAIUC,GAJV,EAKU8E,WALV,EAMUC,eANV,EAOU7E,OAPV,EAQUC,MARV,EAQ2B;AAAA;;AAAA;;AAPjB;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AApCV,qBAAqB,KAArB;AAGA,qBAA+B,EAA/B;AAkBA,4BAA6B,CAAC,GAAD,EAAM,QAAN,EAAgB,QAAhB,EAA0B,MAA1B,EAAkC,SAAlC,CAA7B;AAiBEN,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,QAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYD;;AApDH;AAAA;AAAA,SAUE,eAAkB;AAChB,aAAO,KAAKE,MAAL,CAAYJ,GAAZ,CAAgB,YAAhB,CAAP;AACD;AAZH;AAAA;AAAA,SAaE,eAAsB;AACpB,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,gBAAhB,CAAP;AACD;AAfH;AAAA;AAAA,SAgBE,eAAsB;AACpB,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,gBAAhB,CAAP;AACD;AAlBH;AAAA;AAAA,SAmBE,eAAY;AACV,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,MAAhB,CAAP;AACD;AArBH;AAAA;AAAA,WAsDE,oBAAQ;AACN,WAAKI,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AAC1BP,kBAAU,EAAE,CAAC,CAAD,CADc;AAE1ByE,sBAAc,EAAE,CAAC,EAAD,EAAK,CAAC3F,+DAAD,EAAsBF,kGAAtB,CAAL,CAFU;AAG1B8F,sBAAc,EAAE,CAAC,EAAD,EAAK,CAAC5F,+DAAD,EAAsBF,kGAAtB,CAAL,CAHU;AAI1B+F,YAAI,EAAE,CAAC,IAAD;AAJoB,OAAd,CAAd;AAOA,WAAKC,eAAL,CAAqB,CAArB;AACD;AA/DH;AAAA;AAAA,WAiEE,2BAAe;AACb,WAAKtD,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,WAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AApEH;AAAA;AAAA,WAsEE,qBAAYC,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAzEH;AAAA;AAAA,WA2EE,yBAAgBC,UAAhB,EAAkC;AAAA;;AAChC,WAAKrC,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACGK,eADH,CACuC5C,UADvC,EACmD,KADnD,EAEGlC,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZkB,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BnB,QAA3B;AACA,gBAAI,CAAC6D,SAAL,GAAiB7D,QAAQ,CAAC6D,SAA1B;AACA,gBAAI,CAACvD,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuB+B,QAAQ,CAAC6D,SAAhC,CAAlB;AACA,gBAAI,CAACtC,UAAL,GAAkBvB,QAAQ,CAACuB,UAA3B;AACD;;AACD,cAAI,CAAC5C,OAAL,CAAa6C,IAAb;AACD,OAVH;AAWD;AAxFH;AAAA;AAAA,WA0FE,sBAAasC,IAAb,EAAkC;;;AAChC,iBAAKC,cAAL,MAAmB,IAAnB,IAAmBpC,aAAnB,GAAmB,MAAnB,GAAmBA,GAAEtB,QAAF,CAAWyD,IAAI,CAAClC,EAAhB,CAAnB;AACA,iBAAKoC,kBAAL,MAAuB,IAAvB,IAAuBlC,aAAvB,GAAuB,MAAvB,GAAuBA,GAAEzB,QAAF,CAAWyD,IAAI,CAACG,gBAAhB,CAAvB;AACA,iBAAKC,kBAAL,MAAuB,IAAvB,IAAuBjC,aAAvB,GAAuB,MAAvB,GAAuBA,GAAE5B,QAAF,CAAWyD,IAAI,CAACK,YAAhB,CAAvB;AACA,iBAAKC,QAAL,MAAa,IAAb,IAAaC,aAAb,GAAa,MAAb,GAAaA,GAAEhE,QAAF,CAAWyD,IAAI,CAACQ,WAAhB,CAAb;AACA,WAAKpC,MAAL,CAAYC,aAAZ,CAA0BC,SAA1B,GAAsC,QAAtC;AACD;AAhGH;AAAA;AAAA,WAkGE,wBAAe0B,IAAf,EAAoC;AAAA;;AAClC,WAAKnF,OAAL,CAAasC,IAAb;AACA,WAAKuC,eAAL,CAAqBe,cAArB,CAAoCT,IAAI,CAAClC,EAAzC,EAA6C9C,SAA7C,CAAuD,UAACkB,QAAD,EAAa;AAClE,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAAC4D,eAAL,CAAqB,CAArB;;AACA,gBAAI,CAACnF,GAAL,CAAS6D,OAAT,CAAiB,sBAAjB;AACD;;AACD,cAAI,CAAC3D,OAAL,CAAa6C,IAAb;AACD,OAPD;AAQD;AA5GH;AAAA;AAAA,WA8GE,oBAAQ;AAAA;;;;AACN,WAAKe,SAAL,GAAiB,IAAjB;;AAEA,UAAI,KAAKjD,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,YAAIwB,GAAG,GAAG,EAAV;AACAA,WAAG,CAACb,EAAJ,GAAS,WAAKmC,cAAL,MAAmB,IAAnB,IAAmBpC,aAAnB,GAAmB,MAAnB,GAAmBA,GAAEf,KAA9B;AACA6B,WAAG,CAAC0B,YAAJ,GAAmB,WAAKD,kBAAL,MAAuB,IAAvB,IAAuBpC,aAAvB,GAAuB,MAAvB,GAAuBA,GAAElB,KAA5C;AACA6B,WAAG,CAACwB,gBAAJ,GAAuB,WAAKD,kBAAL,MAAuB,IAAvB,IAAuB/B,aAAvB,GAAuB,MAAvB,GAAuBA,GAAErB,KAAhD;AACA6B,WAAG,CAAC6B,WAAJ,GAAkB,WAAKF,QAAL,MAAa,IAAb,IAAaC,aAAb,GAAa,MAAb,GAAaA,GAAEzD,KAAjC,CANqB,CAQrB;;AAEA,aAAK4C,eAAL,CACGgB,eADH,CAC+C/B,GAD/C,EAEG3D,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,gBAAI,CAACkC,MAAL,CAAYC,aAAZ,CAA0BC,SAA1B,GAAsC,KAAtC;AACA,gBAAI,CAACG,SAAL,GAAiB,KAAjB;;AACA,cAAIvC,QAAQ,IAAIA,QAAQ,CAAC2C,WAAT,KAAyB,GAAzC,EAA8C;AAC5C;AAEA,kBAAI,CAACiB,eAAL,CAAqB,CAArB;;AACA,kBAAI,CAACnF,GAAL,CAAS6D,OAAT,CAAiB,uCAAjB;;AACA,kBAAI,CAAChD,MAAL,CAAYsD,KAAZ,GAL4C,CAM5C;;AACD;;AACD,gBAAI,CAACjE,OAAL,CAAasC,IAAb;AACD,SAdH;AAeD;AACF;AA3IH;AAAA;AAAA,WA6IE,2BAAkB6C,IAAlB,EAAuC;AAAA;;AACrC,WAAKlF,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAEqF,IAAI,CAACK;AADN;AADqB,OAD/B,EAMGpB,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACyB,cAAL,CAAoBX,IAApB;AACd,OATH;AAUD;AAxJH;;AAAA;AAAA;;;mBAAanJ,yBAAuBwD,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,sDAAAA,GAAAA,+DAAAA,CAAAA,oFAAAA,GAAAA,+DAAAA,CAAAA,4FAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA;AAAA;;;QAAvBxD;AAAuBuI;AAAAC;AAAA;gEA0BvBpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;wEACWH,qDAAUA;;;;;;;;;;;;;;;;ACvDzCM,MAAAA,uDAAAA;AAOAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AAC5CA,MAAAA,uDAAAA;AAMFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAIEA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AAEAjF,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAoCA,MAAAA,0DAAAA;AACrDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAFFjF,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAmBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQiF,uCAAmC,CAAnC,CAAR;AAA6C,OAA7C;AAKFjF,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA5LQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAqBtBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUaA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAaIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAuDKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAUjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwBiF,cAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLZ;AAEA;AACA;AACA;AAIA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACyBsBjF,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAlBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAZKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAdFA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AARSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA8DfA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAcA,IAAAA,0DAAAA;;;;;AAAdA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAeA,IAAAA,0DAAAA;;;;;AAAfA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AAGFA,IAAAA,0DAAAA;;;;;;AAHEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAQFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASuG,4BAAT;AAAyB,KAAzB;;AAIAvG,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAASwG,kCAAT;AAA+B,KAA/B;;AAIAxG,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AAdJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAhBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAhBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAmBFA,IAAAA,0DAAAA;;;;;AAnBgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAsBlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;;;;;;;ADxLT,IAAMvD,wBAAb;AAgBE,oCACUgK,kBADV,EAEUjG,OAFV,EAGUkG,MAHV,EAIUjG,MAJV,EAKUkG,SALV,EAMSC,WANT,EAOUzG,KAPV,EAQUC,EARV,EAQyB;AAAA;;AAAA;;AAPf;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AAtBV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAOA,0BAA2B,CAAC,GAAD,EAAM,MAAN,EAAc,OAAd,EAAuB,SAAvB,EAAkC,SAAlC,CAA3B;AAgBED,SAAK,CAAC0G,QAAN,CAAelG,SAAf,CAAyB,UAACC,MAAD,EAAW;AAClC,WAAI,CAACkG,QAAL,GAAgBhG,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,UAAX,CAAD,CAAtB;AACD,KAFD;AAIAZ,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAAC+F,WAAL,CACG5F,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAK0F,SAAL,CAAeI,YAAf,CAA4BpG,SAA5B,CAAsC,UAACqG,IAAD,EAAS;AAC7C,WAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,KAFD;AAGA,SAAKtF,SAAL,GAAiBZ,MAAM,CAAC8F,WAAW,CAACjF,YAAZ,EAAD,CAAvB;AACD;;AA9CH;AAAA;AAAA,WAgDE,oBAAQ;AACN,WAAKuF,iBAAL,CAAuB,CAAvB;AAEA,WAAK/F,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AAC1B+F,YAAI,EAAE,CACJ,EADI,EAEJ,CACExH,+DADF,EAEEA,8DAAA,CACE,qDADF,CAFF,EAKEF,qGALF,CAFI,CADoB;AAW1B4H,iBAAS,EAAE,CAAC,EAAD,EAAK,CAAC1H,+DAAD,CAAL,CAXe;AAY1B2H,aAAK,EAAE,CAAC,EAAD,EAAK,CAAC3H,+DAAD,EAAsBA,4DAAtB,CAAL;AAZmB,OAAd,CAAd;AAcD;AAjEH;AAAA;AAAA,WAmEE,2BAAe;AAAA;;AACb,UAAI,KAAKwC,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKuE,WAAL,CAAiBlF,SAAjB,CAA2Bf,SAA3B,CAAqC,UAACqB,CAAD,EAAM;AACzC,cAAI,CAACN,SAAL,GAAiBM,CAAC,CAACN,SAAnB;;AACA,cAAI,CAACwF,iBAAL,CAAuB,CAAvB;AACD,OAHD;AAID;AA7EH;AAAA;AAAA,WA+EE,qBAAY5E,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAlFH;AAAA;AAAA,SAoFE,eAAa;AACX,aAAO,KAAKzB,MAAL,CAAYoG,QAAnB;AACD;AAtFH;AAAA;AAAA,WAwFE,2BAAkBC,IAAlB,EAA8B;AAAA;;AAC5B,WAAKrF,UAAL,GAAkB,IAAIrC,wEAAJ,CAAuB,CACvC;AACE2D,UAAE,EAAE,CADN;AAEE6D,aAAK,EAAE,WAFT;AAGEH,YAAI,EAAE,IAHR;AAIEE,iBAAS,EAAE,CAJb;AAKEP,gBAAQ,EAAE,CALZ;AAMEW,uBAAe,EAAE,IANnB;AAOEC,uBAAe,EAAE;AAPnB,OADuC,CAAvB,CAAlB;AAWA,WAAKlH,OAAL,CAAasC,IAAb;AACA,WAAK2D,kBAAL,CAAwBS,iBAAxB,CAA0CM,IAA1C,EAAgD7G,SAAhD,CACE,UAACM,GAAD,EAAyB;AACvB,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACkB,UAAL,GAAkB,IAAIrC,wEAAJ,CAAuBmB,GAAG,CAAC0G,IAA3B,CAAlB;AACA,gBAAI,CAACC,WAAL,GAAmB3G,GAAG,CAAC4G,UAAvB;AACA,gBAAI,CAAC1F,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;;AACD,cAAI,CAAC7B,OAAL,CAAa6C,IAAb;AACD,OARH;AAUD;AA/GH;AAAA;AAAA,WAiHE,oBAAQ;AAAA;;AACN,WAAKe,SAAL,GAAiB,IAAjB;AAEA,UAAI0D,MAAM,GAAgB;AACxBhB,gBAAQ,EAAE,KAAKA,QADS;AAExBK,YAAI,EAAE,KAAKY,SAAL,CAAeZ,IAAf,CAAoB1E,KAFF;AAGxB6E,aAAK,EAAE,KAAKS,SAAL,CAAeT,KAAf,CAAqB7E,KAHJ;AAIxB4E,iBAAS,EAAE,KAAKU,SAAL,CAAeV,SAAf,CAAyB5E;AAJZ,OAA1B;;AAOA,UAAI,KAAKtB,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,aAAK2D,kBAAL,CAAwBuB,mBAAxB,CAA4CF,MAA5C,EAAoDnH,SAApD,CACE,UAACM,GAAD,EAAa;AACX,cAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACrC,UAAL,CAAgBwC,IAAhB,CAAqBsD,OAArB,CAA6BhH,GAA7B;;AACA,kBAAI,CAAC2G,WAAL;AACA,kBAAI,CAACzF,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACqE,MAAL,CAAYvC,OAAZ,CAAoB,yBAApB;;AACA,kBAAI,CAAC+D,SAAL;AACD;;AACD,cAAIjH,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B,MAAI,CAACkC,MAAL,CAAYyB,KAAZ,CAAkBlH,GAAG,CAACmH,YAAtB;;AAC1B,gBAAI,CAAC5H,OAAL,CAAa6C,IAAb;AACD,SAXH;AAaD,OAfD,MAeO,KAAKqD,MAAL,CAAYyB,KAAZ,CAAkB,sBAAlB;AACR;AA3IH;AAAA;AAAA,WA6IE,2BAAkBL,MAAlB,EAAkC;AAAA;;AAChC,WAAKrH,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAEwH,MAAM,CAACX;AADR;AADqB,OAD/B,EAMGvC,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACwD,YAAL,CAAkBP,MAAlB;AACd,OATH;AAUD,KAxJH,CA0JE;;AA1JF;AAAA;AAAA,WA2JE,sBAAaA,MAAb,EAA6B;AAAA;;AAC3B,WAAKrB,kBAAL,CAAwB6B,WAAxB,CAAoCR,MAAM,CAAChB,QAA3C,EAAqDgB,MAAM,CAACrE,EAA5D,EAAgE9C,SAAhE,CACE,UAACM,GAAD,EAAa;AACX,YAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAI+D,KAAK,GAAG,MAAI,CAACpG,UAAL,CAAgBwC,IAAhB,CAAqB6D,SAArB,CAA+B,UAACxG,CAAD;AAAA,mBAAOA,CAAC,IAAI8F,MAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAAC3F,UAAL,CAAgBwC,IAAhB,CAAqB8D,MAArB,CAA4BF,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAACpG,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAIyF,MAAM,CAAChB,QAAP,IAAmB,MAAI,CAACiB,SAAL,CAAeW,EAAf,CAAkBjG,KAAzC,EAAgD,MAAI,CAACyF,SAAL;;AAEhD,gBAAI,CAACxB,MAAL,CAAYvC,OAAZ,CAAoB,4BAApB;AACD,SARD,MAQO;AACL,gBAAI,CAACuC,MAAL,CAAYyB,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAbH;AAeD;AA3KH;AAAA;AAAA,WA6KE,qBAAYL,MAAZ,EAA4B;AAAA;;AAC1B,WAAKtH,OAAL,CAAasC,IAAb;AACA,WAAK2D,kBAAL,CAAwBkC,WAAxB,CAAoCb,MAAM,CAAChB,QAA3C,EAAqDgB,MAAM,CAACrE,EAA5D,EAAgE9C,SAAhE,CACE,UAACM,GAAD,EAAa;AACX,YAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EACE,MAAI,CAACkC,MAAL,CAAYvC,OAAZ,CAAoB,4BAApB,EADF,KAEK,MAAI,CAACuC,MAAL,CAAYyB,KAAZ,CAAkB,4BAAlB;;AACL,cAAI,CAAC3H,OAAL,CAAa6C,IAAb;AACD,OANH;AAQD;AAvLH;AAAA;AAAA,WAyLE,qBAAS;AACP,WAAKlC,MAAL,CAAYsD,KAAZ;AACA,WAAKsD,SAAL,CAAetE,EAAf,CAAkBvB,QAAlB,CAA2B,CAA3B;AACA,WAAKkC,SAAL,GAAiB,KAAjB;AACD;AA7LH;;AAAA;AAAA;;;mBAAa3H,0BAAwBuD,+DAAAA,CAAAA,iGAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA;AAAA;;;QAAxBvD;AAAwBsI;AAAAC;AAAA;gEAaxBpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;;;;;;;;;;;;;;;ACrCpBG,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAEAA,MAAAA,4DAAAA;AAQEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AAC5CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAqBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAiCA,MAAAA,0DAAAA;AAC7CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAgBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,uDAAAA;AAIFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AAEAjF,MAAAA,uDAAAA;AACAA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AASFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAyCA,MAAAA,0DAAAA;AAE3CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAFFjF,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAyBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAIAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQiF,yCAAqC,CAArC,CAAR;AAA+C,OAA/C;AAMFjF,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA7NQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKEA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,gBAAAA,6DAAAA;AAKAA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAMQA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAwBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBHA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,qCAA+B,WAA/B,EAA+BiF,aAA/B;AAgBVjF,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAmBFA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAcmBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiEKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAajCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwBiF,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrNZ;AAOA;AACA;AACA;AAQA;AAIA;;;;;;;;;;;;;;;;;;;;;;ACWsBjF,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAlBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAZKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAmBPA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA/BJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAzBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAKJA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAdFA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AARSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAyBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AACAA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAbJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AARSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAkBnBA,IAAAA,uDAAAA;;;;;;;;AAMFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASwG,mBAAT;AAAoB,KAApB;AAEAxG,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA0BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAcA,IAAAA,0DAAAA;;;;;AAAdA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAeA,IAAAA,0DAAAA;;;;;AAAfA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAgBA,IAAAA,0DAAAA;;;;;AAAhBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS4I,gCAAT;AAA6B,KAA7B;;AAIA5I,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS6I,kCAAT;AAA+B,KAA/B;;AAIA7I,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;;;;;AAKFA,IAAAA,4DAAAA;;AAOEA,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AANEA,IAAAA,oEAAAA;AAGAA,IAAAA,mEAAAA,eAAAA,yDAAAA;AAFAA,IAAAA,wDAAAA,gBAAAA,6DAAAA;;;;;;AAtBJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AASFA,IAAAA,mEAAAA;;;;;AA1BKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAzBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AA6BFA,IAAAA,0DAAAA;;;;;AA7BgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAgClCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADxQT,IAAMtD,qBAAb;AAeE,iCACU+J,kBADV,EAEUjG,OAFV,EAGUkG,MAHV,EAIUjG,MAJV,EAKUkG,SALV,EAMSC,WANT,EAOUzG,KAPV,EAQUC,EARV,EAQyB;AAAA;;AAAA;;AAPf;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AArBV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAMA,0BAA2B,CAAC,GAAD,EAAM,MAAN,EAAc,OAAd,EAAuB,QAAvB,EAAiC,SAAjC,CAA3B;AAgBED,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAAC+F,WAAL,CACG5F,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAK0F,SAAL,CAAeI,YAAf,CAA4BpG,SAA5B,CAAsC,UAACqG,IAAD,EAAS;AAC7C,WAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,KAFD;AAGA,SAAKtF,SAAL,GAAiBZ,MAAM,CAAC8F,WAAW,CAACjF,YAAZ,EAAD,CAAvB;AACD;;AAzCH;AAAA;AAAA,WA2CE,oBAAQ;AACN,WAAKmH,UAAL,CAAgB,CAAhB;AAEA,WAAK3H,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CACZ;AACEqC,UAAE,EAAE,CAAC,CAAD,CADN;AAEE0D,YAAI,EAAE,CACJ,EADI,EAEJ,CACExH,+DADF,EAEEA,8DAAA,CACE,qDADF,CAFF,EAKEF,qGALF,CAFI,CAFR;AAYEsJ,cAAM,EAAE,CACN,EADM,EAEN,CACEpJ,+DADF,EAEEF,qGAFF,EAGEE,8DAAA,CAAmB,oCAAnB,CAHF,EAIE;AACAA,QAAAA,gEAAA,CAAqB,EAArB,CALF,EAMEA,gEAAA,CAAqB,EAArB,CANF,EAOEF,qGAPF,CAFM,CAZV;AAwBE6H,aAAK,EAAE,CAAC,EAAD,EAAK,CAAC3H,+DAAD,EAAsBA,4DAAtB,CAAL,CAxBT;AAyBEwJ,wBAAgB,EAAE,CAChB,EADgB,EAEhB,CAACxJ,+DAAD,EAAsBF,qGAAtB,CAFgB,CAzBpB;AA6BE2J,oBAAY,EAAE,CAAC,EAAD,EAAK,CAACzJ,+DAAD,CAAL;AA7BhB,OADY,EAgCZ;AACE0J,iBAAS,EAAE5J,oGAAA,CACT,kBADS,EAET,cAFS;AADb,OAhCY,CAAd;AAuCD;AArFH;AAAA;AAAA,WAuFE,2BAAe;AAAA;;AACb,UAAI,KAAK0C,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKuE,WAAL,CAAiBlF,SAAjB,CAA2Bf,SAA3B,CAAqC,UAACqB,CAAD,EAAM;AACzC,cAAI,CAACN,SAAL,GAAiBM,CAAC,CAACN,SAAnB;;AACA,cAAI,CAACoH,UAAL,CAAgB,CAAhB;AACD,OAHD;AAID;AAjGH;AAAA;AAAA,WAmGE,qBAAYxG,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAtGH;AAAA;AAAA,SAwGE,eAAa;AACX,aAAO,KAAKzB,MAAL,CAAYoG,QAAnB;AACD;AA1GH;AAAA;AAAA,WA4GE,oBAAWC,IAAX,EAAuB;AAAA;;AACrB,WAAKrF,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuB,CACvC;AACEwH,aAAK,EAAE,UADT;AAEEyB,cAAM,EAAE,aAFV;AAGE5B,YAAI,EAAE,IAHR;AAIEoC,cAAM,EAAE,CAJV;AAKEzC,gBAAQ,EAAE;AALZ,OADuC,CAAvB,CAAlB;AASA,WAAKtG,OAAL,CAAasC,IAAb;AACA,WAAK2D,kBAAL,CAAwBqC,UAAxB,CAAmCtB,IAAnC,EAAyC7G,SAAzC,CAAmD,UAACM,GAAD,EAAmB;AACpE,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACkB,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuBmB,GAAG,CAAC0G,IAA3B,CAAlB;AACA,gBAAI,CAACC,WAAL,GAAmB3G,GAAG,CAAC4G,UAAvB;AACA,gBAAI,CAAC1F,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;;AACD,cAAI,CAAC7B,OAAL,CAAa6C,IAAb;AACD,OAPD;AAQD;AA/HH;AAAA;AAAA,WAiIE,yBAAgByE,MAAhB,EAAmC;AACjC,WAAK3G,MAAL,CAAYqI,UAAZ,CAAuB1B,MAAvB;AACA,WAAKC,SAAL,CAAetE,EAAf,CAAkBvB,QAAlB,CAA2B4F,MAAM,CAAChB,QAAlC;AACD;AApIH;AAAA;AAAA,WAsIE,oBAAQ;AAAA;;AACN,WAAK1C,SAAL,GAAiB,IAAjB;AAEA,UAAI0D,MAAM,GAAmB;AAC3BrE,UAAE,EAAE,KAAKsE,SAAL,CAAetE,EAAf,CAAkBhB,KADK;AAE3B0E,YAAI,EAAE,KAAKY,SAAL,CAAeZ,IAAf,CAAoB1E,KAFC;AAG3BgH,kBAAU,EAAE,CAHe;AAI3BV,cAAM,EAAE,KAAKhB,SAAL,CAAegB,MAAf,CAAsBtG,KAJH;AAK3B6E,aAAK,EAAE,KAAKS,SAAL,CAAeT,KAAf,CAAqB7E,KALD;AAM3B0G,wBAAgB,EAAE,KAAKpB,SAAL,CAAeoB,gBAAf,CAAgC1G,KANvB;AAO3B2G,oBAAY,EAAE,KAAKrB,SAAL,CAAeqB,YAAf,CAA4B3G;AAPf,OAA7B;;AAUA,UAAI,KAAKtB,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,aAAK2D,kBAAL,CAAwBiD,eAAxB,CAAwC5B,MAAxC,EAAgDnH,SAAhD,CAA0D,UAACM,GAAD,EAAa;AACrE,cAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,gBAAIsD,MAAM,CAACrE,EAAP,IAAa,CAAjB,EAAoB;AAClB,oBAAI,CAACtB,UAAL,CAAgBwC,IAAhB,CAAqBsD,OAArB,CAA6BhH,GAA7B;;AACA,oBAAI,CAAC2G,WAAL;AACD,aAHD,MAGO;AACL,kBAAIW,KAAK,GAAG,MAAI,CAACpG,UAAL,CAAgBwC,IAAhB,CAAqB6D,SAArB,CACV,UAACxG,CAAD;AAAA,uBAAOA,CAAC,CAACuH,MAAF,IAAYtI,GAAG,CAACsI,MAAvB;AAAA,eADU,CAAZ;;AAGA,oBAAI,CAACpH,UAAL,CAAgBwC,IAAhB,CAAqB4D,KAArB,IAA8BtH,GAA9B;AACD;;AACD,kBAAI,CAACkB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACqE,MAAL,CAAYvC,OAAZ,CACElD,GAAG,CAACyH,EAAJ,IAAU,CAAV,GACI,yBADJ,GAEI,4BAHN;;AAKA,kBAAI,CAACR,SAAL;AACD;;AACD,cAAIjH,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACkC,MAAL,CAAYyB,KAAZ,CAAkBlH,GAAG,CAACmH,YAAtB;AACD;;AACD,gBAAI,CAAC5H,OAAL,CAAa6C,IAAb;AACD,SAvBD;AAwBD,OA1BD,MA0BO,KAAKqD,MAAL,CAAYyB,KAAZ,CAAkB,sBAAlB;AACR,KA9KH,CAgLE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArMF;AAAA;AAAA,WAuME,2BAAkBL,MAAlB,EAAqC;AAAA;;AACnC,WAAKrH,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAEwH,MAAM,CAACX;AADR;AADqB,OAD/B,EAMGvC,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACwD,YAAL,CAAkBP,MAAlB;AACd,OATH;AAUD,KAlNH,CAoNE;;AApNF;AAAA;AAAA,WAqNE,sBAAaA,MAAb,EAAgC;AAAA;;AAC9B,WAAKrB,kBAAL,CAAwB4B,YAAxB,CAAqCP,MAAM,CAAChB,QAA5C,EAAsDnG,SAAtD,CACE,UAACM,GAAD,EAAa;AACX,YAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAI+D,KAAK,GAAG,MAAI,CAACpG,UAAL,CAAgBwC,IAAhB,CAAqB6D,SAArB,CAA+B,UAACxG,CAAD;AAAA,mBAAOA,CAAC,IAAI8F,MAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAAC3F,UAAL,CAAgBwC,IAAhB,CAAqB8D,MAArB,CAA4BF,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAACpG,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAIyF,MAAM,CAAChB,QAAP,IAAmB,MAAI,CAACiB,SAAL,CAAeW,EAAf,CAAkBjG,KAAzC,EAAgD,MAAI,CAACyF,SAAL;;AAEhD,gBAAI,CAACxB,MAAL,CAAYvC,OAAZ,CAAoB,4BAApB;AACD,SARD,MAQO;AACL,gBAAI,CAACuC,MAAL,CAAYyB,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAbH;AAeD;AArOH;AAAA;AAAA,WAuOE,qBAAS;AACP,WAAKhH,MAAL,CAAYsD,KAAZ;AACA,WAAKsD,SAAL,CAAetE,EAAf,CAAkBvB,QAAlB,CAA2B,CAA3B;AACA,WAAKkC,SAAL,GAAiB,KAAjB;AACD;AA3OH;;AAAA;AAAA;;;mBAAa1H,uBAAqBsD,+DAAAA,CAAAA,iGAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA;AAAA;;;QAArBtD;AAAqBqI;AAAAC;AAAA;gEAYrBpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;;;;;;;;;;;;;;;AC5CpBG,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AAC5CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAqBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAkCFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAiCA,MAAAA,0DAAAA;AAC7CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAgBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAoCA,MAAAA,0DAAAA;AAChDA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AAKAA,MAAAA,wDAAAA;AAgBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AAEAjF,MAAAA,wDAAAA;AACAA,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAwCA,MAAAA,0DAAAA;AACzDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAFFjF,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAmCFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAIAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQiF,kCAA8B,CAA9B,CAAR;AAAwC,OAAxC;AAMFjF,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AArTQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAwBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAsCSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA4BUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACvBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAMCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeYA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAaIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAuEKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAajCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwBiF,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9SZ;AACA;AAIA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACYoBjF,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA0CRA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAoCA,IAAAA,oDAAAA;AAAmBA,IAAAA,0DAAAA;;;;;AAAnBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKpCA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS2J,0BAAT;AAAuB,KAAvB;AAGA3J,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAEAA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS4J,mCAAT;AAAgC,KAAhC;AAGA5J,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;;;;;;AAEAA,IAAAA,4DAAAA;AAOEA,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;AAPEA,IAAAA,oEAAAA;AACAA,IAAAA,wDAAAA,gBAAAA,6DAAAA;;;;;;AAnBJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAQAA,IAAAA,wDAAAA;AAQAA,IAAAA,wDAAAA;AASFA,IAAAA,mEAAAA;;;;;AAxBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAUAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AArBPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AA2BFA,IAAAA,0DAAAA;;;;;AA3BgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA8BlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADjGT,IAAMrD,gBAAb;AAsBE,4BACUwD,KADV,EAEUC,EAFV,EAGSC,QAHT,EAIUC,GAJV,EAKU8E,WALV,EAMU5E,OANV,EAOUC,MAPV,EAO2B;AAAA;;AAAA;;AANjB;AACA;AACD;AACC;AACA;AACA;AACA;AAzBV,iBAA2B,EAA3B;AAWA,4BAA6B,CAAC,GAAD,EAAM,MAAN,EAAc,SAAd,CAA7B;AAgBEN,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,QAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB,CADO,CAEP;AACD;AACF,SAPH;AAQD;AACF,KAZD;AAaD;;AA5CH;AAAA;AAAA,SAME,eAAc;AACZ,aAAO,KAAKE,MAAL,CAAYJ,GAAZ,CAAgB,QAAhB,CAAP;AACD;AARH;AAAA;AAAA,SASE,eAAgB;AACd,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,UAAhB,CAAP;AACD;AAXH;AAAA;AAAA,SAYE,eAAiB;AACf,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,WAAhB,CAAP;AACD;AAdH;AAAA;AAAA,WA8CE,oBAAQ;AAAA;;AACN,WAAKW,SAAL,GAAiB,KAAKrB,QAAL,CAAcsB,YAAd,EAAjB;AACA,WAAKR,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AAC1ByI,cAAM,EAAE,CAAC,CAAD,CADkB;AAE1BC,gBAAQ,EAAE,CAAC,IAAD,EAAO,CAACnK,+DAAD,CAAP,CAFgB;AAG1B+B,iBAAS,EAAE,CAAC,KAAKA,SAAN;AAHe,OAAd,CAAd;AAKA,WAAKlB,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACG2E,WADH,CACkC,KAAK9H,aAAL,CAAmBQ,KADrD,EAEG9B,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,cAAI,CAACrB,OAAL,CAAa6C,IAAb;;AACA,YAAIxB,QAAJ,EAAc;AACZkB,iBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BnB,QAA5B;AACA,gBAAI,CAACmI,KAAL,GAAanI,QAAb;AACA,gBAAI,CAACM,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuB+B,QAAvB,CAAlB;AACA,gBAAI,CAACM,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACD;AACF,OAVH;AAWD;AAjEH;AAAA;AAAA,WAmEE,2BAAe;AAAA;;AACb,WAAK/B,QAAL,CAAcqB,SAAd,CAAwBf,SAAxB,CAAkC,UAACqB,CAAD,EAAM;AACtC,cAAI,CAACN,SAAL,GAAiBM,CAAC,CAACN,SAAnB;;AACA,cAAI,CAACO,aAAL,CAAmBC,QAAnB,CAA4BF,CAAC,CAACN,SAA9B;;AACA,cAAI,CAAC0D,WAAL,CACG2E,WADH,CACkC,MAAI,CAAC9H,aAAL,CAAmBQ,KADrD,EAEG9B,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,gBAAI,CAACrB,OAAL,CAAa6C,IAAb;;AACA,cAAIxB,QAAJ,EAAc;AACZkB,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCnB,QAAlC;AACA,kBAAI,CAACmI,KAAL,GAAanI,QAAb;AACA,kBAAI,CAACM,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuB+B,QAAvB,CAAlB;AACA,kBAAI,CAACM,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACA,kBAAI,CAACD,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;AACF,SAXH;AAYD,OAfD;AAgBD;AApFH;AAAA;AAAA,WAsFE,qBAAYC,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAzFH;AAAA;AAAA,WA2FE,kBAASqH,IAAT,EAA8B;;;AAC5B,iBAAKC,UAAL,MAAe,IAAf,IAAe1G,aAAf,GAAe,MAAf,GAAeA,GAAEtB,QAAF,CAAW+H,IAAI,CAACxG,EAAhB,CAAf;AACA,iBAAK0G,YAAL,MAAiB,IAAjB,IAAiBxG,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEzB,QAAF,CAAW+H,IAAI,CAACH,QAAhB,CAAjB;AACA,WAAK7H,aAAL,CAAmBC,QAAnB,CAA4B+H,IAAI,CAACvI,SAAjC;AACA,WAAKqC,MAAL,CAAYC,aAAZ,CAA0BC,SAA1B,GAAsC,QAAtC;AACD;AAhGH;AAAA;AAAA,WAkGE,oBAAWgG,IAAX,EAAgC;AAAA;;AAC9B,WAAKzJ,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CAAiBgF,UAAjB,CAA4BH,IAAI,CAACxG,EAAjC,EAAqC9C,SAArC,CAA+C,UAACkB,QAAD,EAAkB;AAC/D,YAAIA,QAAQ,CAACuG,YAAT,IAAyB,SAA7B,EAAwC;AACtC;AACA,cAAIG,KAAK,GAAG,MAAI,CAACpG,UAAL,CAAgBwC,IAAhB,CAAqB6D,SAArB,CAA+B,UAAC6B,CAAD;AAAA,mBAAOA,CAAC,CAAC5G,EAAF,IAAQwG,IAAI,CAACxG,EAApB;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAACtB,UAAL,CAAgBwC,IAAhB,CAAqB8D,MAArB,CAA4BF,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAACpG,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,gBAAI,CAAC9B,GAAL,CAAS6D,OAAT,CAAiB,uBAAjB;AACD,SAND,MAMO,MAAI,CAAC7D,GAAL,CAASgK,OAAT,CAAiBzI,QAAQ,CAACuG,YAA1B;;AACP,cAAI,CAAC5H,OAAL,CAAa6C,IAAb;AACD,OATD;AAUD;AA9GH;AAAA;AAAA,WAgHE,oBAAQ;AAAA;;;;AACN,UAAI,EAAC,WAAK8G,YAAL,MAAiB,IAAjB,IAAiB3G,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEf,KAApB,CAAJ,EAA+B;AAC7B,aAAKnC,GAAL,CAASgK,OAAT,CAAiB,yBAAjB;AACA;AACD;;AAED,UAAI,KAAKnJ,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,YAAIwB,GAAG,GAAG,EAAV;AACAA,WAAG,CAACb,EAAJ,GAAS,WAAKyG,UAAL,MAAe,IAAf,IAAevG,aAAf,GAAe,MAAf,GAAeA,GAAElB,KAA1B;AACA6B,WAAG,CAACwF,QAAJ,GAAe,KAAKK,YAAL,CAAkB1H,KAAjC;AACA6B,WAAG,CAAC5C,SAAJ,GAAgB,KAAKO,aAAL,CAAmBQ,KAAnC;AACAM,eAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BsB,GAA1B;AACA,aAAKc,WAAL,CACGmF,WADH,CACqCjG,GADrC,EAEG3D,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,cAAIA,QAAQ,IAAIA,QAAQ,CAAC2C,WAAT,KAAyB,GAAzC,EAA8C;AAC5C;AAEA,gBAAI+D,KAAK,GAAG,MAAI,CAACyB,KAAL,CAAWxB,SAAX,CAAqB,UAAC6B,CAAD;AAAA,qBAAOA,CAAC,CAAC5G,EAAF,IAAQ5B,QAAQ,CAACoI,IAAT,CAAcxG,EAA7B;AAAA,aAArB,CAAZ;;AACA,gBAAI8E,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,oBAAI,CAACjI,GAAL,CAAS6D,OAAT,CAAiB,yBAAjB;;AACA,oBAAI,CAAChC,UAAL,CAAgBwC,IAAhB,CAAqB6F,IAArB,CAA0B3I,QAAQ,CAACoI,IAAnC;;AACA,oBAAI,CAAC9H,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACD,aAJD,MAIO;AACL,oBAAI,CAAC4H,KAAL,CAAWzB,KAAX,IAAoB1G,QAAQ,CAACoI,IAA7B;;AACA,oBAAI,CAAC3J,GAAL,CAAS6D,OAAT,CAAiB,yBAAjB;AACD;;AACD,kBAAI,CAAChD,MAAL,CAAYsD,KAAZ,GAZ4C,CAa5C;;AACD;;AACD,gBAAI,CAACV,MAAL,CAAYC,aAAZ,CAA0BC,SAA1B,GAAsC,KAAtC;;AACA,gBAAI,CAACzD,OAAL,CAAa6C,IAAb;AACD,SApBH;AAqBD;AACF;AAnJH;AAAA;AAAA,WAqJE,2BAAkB4G,IAAlB,EAAuC;AAAA;;AACrC,WAAKxJ,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAE2J,IAAI,CAACH;AADN;AADqB,OAD/B,EAMGlF,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC4F,UAAL,CAAgBR,IAAhB;AACd,OATH;AAUD;AAhKH;;AAAA;AAAA;;;mBAAatN,kBAAgBqD,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,qDAAAA,GAAAA,+DAAAA,CAAAA,oFAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA;AAAA;;;QAAhBrD;AAAgBoI;AAAAC;AAAA;gEAkBhBpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;wEAEWH,qDAAUA;;;;;;;;;;;;;;;;ACzCzCM,MAAAA,uDAAAA;AAOAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AAC5CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAGFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAIEA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AAEAjF,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AACjDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAFFjF,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AA6BFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AAMFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAxHQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAEAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiBtBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUaA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAaIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiDKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAUjCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGUA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAA0CA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,aAAU0K,2CAAV;AAA2C,KAA3C;AAExC1K,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAJgBA,IAAAA,uDAAAA;AAAAA,IAAAA,oEAAAA;AACZA,IAAAA,wDAAAA;AACAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATZA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAAgBA,IAAAA,oDAAAA;;AAAuCA,IAAAA,0DAAAA;AACvDA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAMFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;AAboBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA,CAAAA,yDAAAA;AAIkCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAgB9CA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAA+CA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,aAAU2K,iDAAV;AAAgD,KAAhD;AAE7C3K,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAJgBA,IAAAA,uDAAAA;AAAAA,IAAAA,oEAAAA;AACZA,IAAAA,wDAAAA;AACAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;ACxBnB,IAAMpD,sBAAb;AAaE,kCACUgO,MADV,EAEUzK,KAFV,EAGUC,EAHV,EAIUE,GAJV,EAKU8E,WALV,EAMU5E,OANV,EAMoC;AAAA;;AAAA;;AAL1B;AACA;AACA;AACA;AACA;AACA;AAjBV,qBAA+B,EAA/B;AACA,0BAAyC,EAAzC;AACA,mBAAqB,EAArB;AACA,wBAA0B,EAA1B;AACA,yBAAuC,EAAvC;AACA,uBAAwB,EAAxB;AACA,8BAA+B,EAA/B;AACA,oBAAmB,EAAnB;AACA,sBAAsB,KAAtB;AACA,8BAAqB,CAArB;AAUE,SAAKL,KAAL,CAAW0G,QAAX,CAAoBlG,SAApB,CAA8B,UAACkK,KAAD,EAAU;AACtC,WAAI,CAAChB,MAAL,GAAcgB,KAAK,CAAC9J,GAAN,CAAU,QAAV,CAAd;AACD,KAFD;AAGD;;AAxBH;AAAA;AAAA,WA0BE,oBAAQ;AACN,WAAK0E,eAAL;AACA,WAAKqF,mBAAL;AACA,WAAKC,0BAAL;AACD;AA9BH;AAAA;AAAA,WAgCE,2BAAe;AAAA;;AACb,WAAKvK,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACGK,eADH,CAC2C,CAD3C,EAC8C,IAD9C,EAEG9E,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAACmJ,cAAL,GAAsBnJ,QAAtB;;AACA,gBAAI,CAACmJ,cAAL,CAAoBC,OAApB,CAA4B,UAACC,CAAD,EAAM;AAChC,kBAAI,CAACC,kBAAL,GACE,MAAI,CAACA,kBAAL,GAA0BD,CAAC,CAACxF,SAAF,CAAY0F,MADxC;AAED,WAHD;AAID;;AACD,cAAI,CAAC5K,OAAL,CAAa6C,IAAb;AACD,OAZH;AAaD;AA/CH;AAAA;AAAA,WAiDE,sCAA0B;AAAA;;AACxB,WAAK+B,WAAL,CACGiG,kBADH,CAC6B,KAAKxB,MADlC,EAEGlJ,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ,gBAAI,CAACyJ,YAAL,GAAoBzJ,QAApB;;AACA,eAAK,IAAI0J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACD,YAAL,CAAkBF,MAAtC,EAA8CG,CAAC,EAA/C,EAAmD;AACjD,kBAAI,CAACC,kBAAL,CAAwBhB,IAAxB,CAA6B,MAAI,CAACc,YAAL,CAAkBC,CAAlB,EAAqBE,QAAlD;AACD;;AACD,gBAAI,CAACC,kBAAL;AACD;AACF,OAVH;AAWD;AA7DH;AAAA;AAAA,WA+DE,8BAAkB;AAAA;;AAChB,WAAKtG,WAAL,CAAiBsG,kBAAjB,GAA6C/K,SAA7C,CAAuD,UAACkB,QAAD,EAAa;AAClE,YAAIA,QAAJ,EAAc;AACZ,gBAAI,CAAC8J,OAAL,GAAe9J,QAAf;AACD;AACF,OAJD;AAKD;AArEH;AAAA;AAAA,WAuEE,+BAAmB;AAAA;;AACjB,WAAKrB,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACG0F,mBADH,CAC8C,KAAKjB,MADnD,EAEGlJ,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAAC+J,aAAL,GAAqB/J,QAArB;AACA,gBAAI,CAACiI,QAAL,GAAgB,MAAI,CAAC8B,aAAL,CAAmB,CAAnB,EAAsB9B,QAAtC;;AAEA,eAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACK,aAAL,CAAmBR,MAAvC,EAA+CG,CAAC,EAAhD,EAAoD;AAClD,kBAAI,CAACM,WAAL,CAAiBrB,IAAjB,CAAsB,MAAI,CAACoB,aAAL,CAAmBL,CAAnB,EAAsBO,QAAtB,CAA+BrI,EAArD;AACD;;AAED,cAAI,MAAI,CAACoI,WAAL,CAAiBT,MAAjB,KAA4B,MAAI,CAACD,kBAArC,EACE,MAAI,CAACY,UAAL,GAAkB,IAAlB,CADF,KAEK,MAAI,CAACA,UAAL,GAAkB,KAAlB,CAXO,CAYZ;AACD;;AACD,cAAI,CAACvL,OAAL,CAAa6C,IAAb;AACD,OAlBH;AAmBD;AA5FH;AAAA;AAAA,WA8FE,0BAAiBxC,UAAjB,EAAqCmL,MAArC,EAAgD;AAC9C,UAAIA,MAAM,CAACC,OAAP,KAAmB,IAAvB,EAA6B;AAC3B,aAAKJ,WAAL,CAAiBrB,IAAjB,CAAsB3J,UAAtB;AACD,OAFD,MAEO,IAAImL,MAAM,CAACC,OAAP,KAAmB,KAAvB,EAA8B;AACnC,YAAI1D,KAAK,GAAG,KAAKsD,WAAL,CAAiBrD,SAAjB,CAA2B,UAACE,EAAD;AAAA,iBAAQA,EAAE,KAAK7H,UAAf;AAAA,SAA3B,CAAZ;AACA,aAAKgL,WAAL,CAAiBpD,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B;AACD;;AAED,UAAI,KAAKsD,WAAL,CAAiBT,MAAjB,KAA4B,KAAKD,kBAArC,EACE,KAAKY,UAAL,GAAkB,IAAlB,CADF,KAEK,KAAKA,UAAL,GAAkB,KAAlB;AACN;AAzGH;AAAA;AAAA,WA2GE,uBAAcG,QAAd,EAAgCF,MAAhC,EAA2C;AACzC,UAAIA,MAAM,CAACC,OAAP,KAAmB,IAAvB,EAA6B;AAC3B,aAAKT,kBAAL,CAAwBhB,IAAxB,CAA6B0B,QAA7B;AACD,OAFD,MAEO,IAAIF,MAAM,CAACC,OAAP,KAAmB,KAAvB,EAA8B;AACnC,YAAI1D,KAAK,GAAG,KAAKiD,kBAAL,CAAwBhD,SAAxB,CAAkC,UAACE,EAAD;AAAA,iBAAQA,EAAE,KAAKwD,QAAf;AAAA,SAAlC,CAAZ;AACA,aAAKV,kBAAL,CAAwB/C,MAAxB,CAA+BF,KAA/B,EAAsC,CAAtC;AACD;;AAED,UAAI,KAAKsD,WAAL,CAAiBT,MAAjB,KAA4B,KAAKD,kBAArC,EACE,KAAKY,UAAL,GAAkB,IAAlB,CADF,KAEK,KAAKA,UAAL,GAAkB,KAAlB;AACN;AAtHH;AAAA;AAAA,WAwHE,qBAAS;AAAA;;AACP,WAAKA,UAAL,GAAkB,CAAC,KAAKA,UAAxB;;AACA,UAAI,KAAKA,UAAT,EAAqB;AACnB,aAAKf,cAAL,CAAoBC,OAApB,CAA4B,UAACC,CAAD,EAAM;AAChCA,WAAC,CAACxF,SAAF,CAAYuF,OAAZ,CAAoB,UAACjJ,CAAD,EAAM;AACxB,gBAAImK,KAAK,GAAG,MAAI,CAACN,WAAL,CAAiBO,QAAjB,CAA0BpK,CAAC,CAACyB,EAA5B,CAAZ;;AACA,gBAAI,CAAC0I,KAAL,EAAY,MAAI,CAACN,WAAL,CAAiBrB,IAAjB,CAAsBxI,CAAC,CAACyB,EAAxB;AACb,WAHD;AAID,SALD;AAMD,OAPD,MAOO;AACL,aAAKoI,WAAL,GAAmB,EAAnB;AACD;AACF;AApIH;AAAA;AAAA,WAsIE,0BAAc;AAAA;;AACZ,UAAIvH,GAAG,GAAG,EAAV;AACAA,SAAG,CAACuF,MAAJ,GAAa,KAAKA,MAAlB;AACAvF,SAAG,CAAC+H,aAAJ,GAAoB,KAAKR,WAAzB;AACAvH,SAAG,CAACgI,WAAJ,GAAkB,KAAKd,kBAAvB,CAJY,CAKZ;AACA;AACA;AACA;;AACA,WAAKhL,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACGmH,oBADH,CACyDjI,GADzD,EAEG3D,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAQ,IAAIA,QAAQ,CAAC2C,WAAT,KAAyB,GAAzC,EAA8C;AAC5C,gBAAI,CAAClE,GAAL,CAAS6D,OAAT,CAAiB,+BAAjB,EAD4C,CAE5C;;AACD;;AACD,cAAI,CAAC3D,OAAL,CAAa6C,IAAb;AACD,OARH,EAVY,CAmBZ;AACD;AA1JH;;AAAA;AAAA;;;mBAAazG,wBAAsBoD,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,qDAAAA,GAAAA,+DAAAA,CAAAA,oFAAAA,GAAAA,+DAAAA,CAAAA,0DAAAA;AAAA;;;QAAtBpD;AAAsBmI;AAAAyH;AAAAC;AAAAC;AAAAC;AAAA;ADpBnC3M,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAqCA,MAAAA,wDAAAA;AAAA,eAAUiF,eAAV;AAAqB,OAArB;AACnCjF,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,wDAAAA;AAiBAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAgBA,MAAAA,oDAAAA;AAAQA,MAAAA,0DAAAA;AACxBA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,wDAAAA;AAMFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAA0DA,MAAAA,wDAAAA;AAAA,eAASiF,oBAAT;AAAyB,OAAzB;AACxDjF,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAzDQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQsBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACZA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAI2CA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAsBSA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiB5DA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExDV;AAOA;AACA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;ACoEcA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AAGFA,IAAAA,0DAAAA;;;;;;AAHEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAQFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS4M,kCAAT;AAA+B,KAA/B;;AAIA5M,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;AALJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAQFA,IAAAA,mEAAAA;;;;;AAPKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAPPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AAUFA,IAAAA,0DAAAA;;;;;AAVgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAalCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;;;;;;;AD7GT,IAAMnD,2BAAb;AAgBE,uCACUgQ,cADV,EAEUrM,OAFV,EAGUkG,MAHV,EAIUjG,MAJV,EAKUkG,SALV,EAMSC,WANT,EAOUzG,KAPV,EAQUC,EARV,EAQyB;AAAA;;AAAA;;AAPf;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AAtBV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAOA,0BAA2B,CAAC,GAAD,EAAM,SAAN,EAAiB,QAAjB,EAA2B,SAA3B,CAA3B;AAgBED,SAAK,CAAC0G,QAAN,CAAelG,SAAf,CAAyB,UAACC,MAAD,EAAW;AAClC,WAAI,CAACkM,SAAL,GAAiBhM,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,WAAX,CAAD,CAAvB;AACD,KAFD;AAIAZ,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAAC+F,WAAL,CACG5F,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAaA,SAAK0F,SAAL,CAAeI,YAAf,CAA4BpG,SAA5B,CAAsC,UAACqG,IAAD,EAAS;AAC7C,WAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,KAFD;AAIA,SAAKtF,SAAL,GAAiBZ,MAAM,CAAC8F,WAAW,CAACjF,YAAZ,EAAD,CAAvB;AACD;;AAhDH;AAAA;AAAA,WAkDE,oBAAQ;AACN,WAAKoL,iBAAL,CAAuB,CAAvB;AAEA,WAAK5L,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AAC1B4L,eAAO,EAAE,CAAC,EAAD,EAAK,CAACrN,+DAAD,CAAL,CADiB;AAE1BsN,iBAAS,EAAE,CAAC,EAAD,EAAK,CAACtN,+DAAD,CAAL;AAFe,OAAd,CAAd;AAID;AAzDH;AAAA;AAAA,WA2DE,2BAAe;AAAA;;AACb,UAAI,KAAKwC,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKuE,WAAL,CAAiBlF,SAAjB,CAA2Bf,SAA3B,CAAqC,UAACqB,CAAD,EAAM;AACzC,cAAI,CAACN,SAAL,GAAiBM,CAAC,CAACN,SAAnB;;AACA,cAAI,CAACqL,iBAAL,CAAuB,CAAvB;AACD,OAHD;AAID;AArEH;AAAA;AAAA,WAuEE,qBAAYzK,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AA1EH;AAAA;AAAA,SA4EE,eAAa;AACX,aAAO,KAAKzB,MAAL,CAAYoG,QAAnB;AACD;AA9EH;AAAA;AAAA,WAgFE,2BAAkBC,IAAlB,EAA8B;AAAA;;AAC5B,WAAKrF,UAAL,GAAkB,IAAIrC,wEAAJ,CAAuB,CACvC;AACEoN,gBAAQ,EAAE,CADZ;AAEEC,sBAAc,EAAE,IAFlB;AAGEC,sBAAc,EAAE,IAHlB;AAIE/F,iBAAS,EAAE,CAJb;AAKEI,uBAAe,EAAE,KALnB;AAMEC,uBAAe,EAAE,MANnB;AAOEjE,UAAE,EAAE,CAPN;AAQEqJ,iBAAS,EAAE;AARb,OADuC,CAAvB,CAAlB;AAYA,WAAKtM,OAAL,CAAasC,IAAb;AACA,WAAK+J,cAAL,CAAoBQ,oBAApB,CAAyC7F,IAAzC,EAA+C7G,SAA/C,CACE,UAACM,GAAD,EAA+B;AAC7B,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACkB,UAAL,GAAkB,IAAIrC,wEAAJ,CAAuBmB,GAAG,CAAC0G,IAA3B,CAAlB;AACA,gBAAI,CAACC,WAAL,GAAmB3G,GAAG,CAAC4G,UAAvB;AACA,gBAAI,CAAC1F,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;;AACD,cAAI,CAAC7B,OAAL,CAAa6C,IAAb;AACD,OARH;AAUD;AAxGH;AAAA;AAAA,WA0GE,0BAAiBiK,OAAjB,EAA2C;AACzC,WAAKnM,MAAL,CAAYqI,UAAZ,CAAuB8D,OAAvB;AACD;AA5GH;AAAA;AAAA,WA8GE,oBAAQ;AAAA;;AACN,WAAKlJ,SAAL,GAAiB,IAAjB;AAEA,UAAIkJ,OAAO,GAAyB;AAClCJ,gBAAQ,EAAE,KAAKnF,SAAL,CAAemF,QAAf,CAAwBzK,KADA;AAElC4E,iBAAS,EAAE,KAAKU,SAAL,CAAeV,SAAf,CAAyB5E,KAFF;AAGlCqK,iBAAS,EAAE,KAAKA;AAHkB,OAApC;;AAMA,UAAI,KAAK3L,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,aAAK+J,cAAL,CAAoBU,gBAApB,CAAqCD,OAArC,EAA8C3M,SAA9C,CAAwD,UAACM,GAAD,EAAa;AACnE,cAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACrC,UAAL,CAAgBwC,IAAhB,CAAqBsD,OAArB,CAA6BhH,GAA7B;;AACA,kBAAI,CAAC2G,WAAL;AAEA,kBAAI,CAACzF,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACqE,MAAL,CAAYvC,OAAZ,CAAoB,yBAApB;;AACA,kBAAI,CAAC+D,SAAL;AACD;;AACD,cAAIjH,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACkC,MAAL,CAAYyB,KAAZ,CAAkBlH,GAAG,CAACmH,YAAtB;AACD;;AACD,gBAAI,CAAC5H,OAAL,CAAa6C,IAAb;AACD,SAbD;AAcD,OAhBD,MAgBO,KAAKqD,MAAL,CAAYyB,KAAZ,CAAkB,sBAAlB;AACR;AAxIH;AAAA;AAAA,WA0IE,2BAAkBmF,OAAlB,EAA4C;AAAA;;AAC1C,WAAK7M,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EACD,KAAK2G,OAAL,IAAgB,IAAhB,GACIqG,OAAO,CAACH,cADZ,GAEIG,OAAO,CAACF;AAJV;AADqB,OAD/B,EASGxI,WATH,GAUGjE,SAVH,CAUa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC2I,aAAL,CAAmBF,OAAnB;AACd,OAZH;AAaD,KAxJH,CA0JE;;AA1JF;AAAA;AAAA,WA2JE,uBAAcA,OAAd,EAAwC;AAAA;;AACtC,WAAKT,cAAL,CAAoBY,mBAApB,CAAwCH,OAAO,CAAC7J,EAAhD,EAAoD9C,SAApD,CACE,UAACM,GAAD,EAAa;AACX,YAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAI+D,KAAK,GAAG,MAAI,CAACpG,UAAL,CAAgBwC,IAAhB,CAAqB6D,SAArB,CAA+B,UAACxG,CAAD;AAAA,mBAAOA,CAAC,IAAIsL,OAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAACnL,UAAL,CAAgBwC,IAAhB,CAAqB8D,MAArB,CAA4BF,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAACpG,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAIiL,OAAO,CAAC7J,EAAR,IAAc,MAAI,CAACsE,SAAL,CAAeW,EAAf,CAAkBjG,KAApC,EAA2C,MAAI,CAACyF,SAAL;;AAE3C,gBAAI,CAACxB,MAAL,CAAYvC,OAAZ,CAAoB,4BAApB;AACD,SARD,MAQO;AACL,gBAAI,CAACuC,MAAL,CAAYyB,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAbH;AAeD;AA3KH;AAAA;AAAA,WA6KE,qBAAS;AACP,WAAKhH,MAAL,CAAYsD,KAAZ;AACA,WAAKsD,SAAL,CAAetE,EAAf,CAAkBvB,QAAlB,CAA2B,CAA3B;AACA,WAAKkC,SAAL,GAAiB,KAAjB;AACD;AAjLH;;AAAA;AAAA;;;mBAAavH,6BAA2BmD,+DAAAA,CAAAA,wFAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA;AAAA;;;QAA3BnD;AAA2BkI;AAAAC;AAAA;gEAa3BpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;;;;;;;;;;;;;;;AC7CpBG,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAEAA,MAAAA,4DAAAA;AAQEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,uDAAAA;AAIFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,uDAAAA;AAMFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AAEAjF,MAAAA,uDAAAA;AACAA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AASFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAgDA,MAAAA,0DAAAA;AAElDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAFFjF,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAgBFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAIAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQiF,yCAAqC,CAArC,CAAR;AAA+C,OAA/C;AAMFjF,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA1JQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKEA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,gBAAAA,6DAAAA;AAKAA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAMQA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIEA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,mCAA6B,WAA7B,EAA6BiF,aAA7B;AAOAjF,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,qCAA+B,WAA/B,EAA+BiF,aAA/B,EAA+B,aAA/B,EAA+BA,qBAA/B,EAA+B,UAA/B,EAA+B,IAA/B;AAkBVjF,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAmBFA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAcmBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAkDKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAajCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwBiF,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJZ;AAOA;AACA;AACA;AAQA;AAIA;;;;;;;;;;;;;;;;;;;;;;ACWsBjF,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAlBJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAZKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAmBPA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA/BJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAzBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAKJA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAdFA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AARSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAyBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AACAA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAbJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AARSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAkBnBA,IAAAA,uDAAAA;;;;;;;;AAMFA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASwG,mBAAT;AAAoB,KAApB;AAEAxG,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA0BIA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAcA,IAAAA,0DAAAA;;;;;AAAdA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAeA,IAAAA,0DAAAA;;;;;AAAfA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAgBA,IAAAA,0DAAAA;;;;;AAAhBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAOIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS4I,iCAAT;AAA8B,KAA9B;;AAIA5I,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;AAKFA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS6I,kCAAT;AAA+B,KAA/B;;AAIA7I,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;AAHEA,IAAAA,mEAAAA,eAAAA,yDAAAA;;;;;;;;;;;;AAKFA,IAAAA,4DAAAA;;AAOEA,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AANEA,IAAAA,oEAAAA;AAGAA,IAAAA,mEAAAA,eAAAA,yDAAAA;AAFAA,IAAAA,wDAAAA,gBAAAA,6DAAAA;;;;;;AAtBJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AASFA,IAAAA,mEAAAA;;;;;AA1BKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAzBPA,IAAAA,4DAAAA;AAKEA,IAAAA,wDAAAA;AA6BFA,IAAAA,0DAAAA;;;;;AA7BgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAgClCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADxQT,IAAMlD,sBAAb;AAeE,kCACU+P,cADV,EAEUrM,OAFV,EAGUkG,MAHV,EAIUjG,MAJV,EAKUkG,SALV,EAMSC,WANT,EAOUzG,KAPV,EAQUC,EARV,EAQyB;AAAA;;AAAA;;AAPf;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AArBV,qBAAqB,KAArB;AACA,uBAAsB,CAAtB;AAMA,0BAA2B,CAAC,GAAD,EAAM,MAAN,EAAc,OAAd,EAAuB,QAAvB,EAAiC,SAAjC,CAA3B;AAgBED,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAAC+F,WAAL,CACG5F,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYA,SAAK0F,SAAL,CAAeI,YAAf,CAA4BpG,SAA5B,CAAsC,UAACqG,IAAD,EAAS;AAC7C,WAAI,CAACC,OAAL,GAAeD,IAAI,CAACA,IAApB;AACD,KAFD;AAGA,SAAKtF,SAAL,GAAiBZ,MAAM,CAAC8F,WAAW,CAACjF,YAAZ,EAAD,CAAvB;AACD;;AAzCH;AAAA;AAAA,WA2CE,oBAAQ;AACN,WAAK+L,WAAL,CAAiB,CAAjB;AAEA,WAAKvM,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CACZ;AACEqC,UAAE,EAAE,CAAC,CAAD,CADN;AAEE0D,YAAI,EAAE,CACJ,EADI,EAEJ,CACExH,+DADF,EAEEA,8DAAA,CACE,qDADF,CAFF,EAKEF,qGALF,CAFI,CAFR;AAYEsJ,cAAM,EAAE,CACN,EADM,EAEN,CACEpJ,+DADF,EAEEF,qGAFF,EAGEE,8DAAA,CAAmB,oCAAnB,CAHF,EAIE;AACAA,QAAAA,gEAAA,CAAqB,EAArB,CALF,EAMEA,gEAAA,CAAqB,EAArB,CANF,EAOEF,qGAPF,CAFM,CAZV;AAwBE6H,aAAK,EAAE,CAAC,EAAD,EAAK,CAAC3H,+DAAD,EAAsBA,4DAAtB,CAAL,CAxBT;AAyBEwJ,wBAAgB,EAAE,CAChB,EADgB,EAEhB,CAACxJ,+DAAD,EAAsBF,qGAAtB,CAFgB,CAzBpB;AA6BE2J,oBAAY,EAAE,CAAC,EAAD,EAAK,CAACzJ,+DAAD,CAAL;AA7BhB,OADY,EAgCZ;AACE0J,iBAAS,EAAE5J,oGAAA,CACT,kBADS,EAET,cAFS;AADb,OAhCY,CAAd;AAuCD;AArFH;AAAA;AAAA,WAuFE,2BAAe;AAAA;;AACb,UAAI,KAAK0C,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;AAED,WAAKuE,WAAL,CAAiBlF,SAAjB,CAA2Bf,SAA3B,CAAqC,UAACqB,CAAD,EAAM;AACzC,cAAI,CAACN,SAAL,GAAiBM,CAAC,CAACN,SAAnB;;AACA,cAAI,CAACgM,WAAL,CAAiB,CAAjB;AACD,OAHD;AAID;AAjGH;AAAA;AAAA,WAmGE,qBAAYpL,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AAtGH;AAAA;AAAA,SAwGE,eAAa;AACX,aAAO,KAAKzB,MAAL,CAAYoG,QAAnB;AACD;AA1GH;AAAA;AAAA,WA4GE,qBAAYC,IAAZ,EAAwB;AAAA;;AACtB,WAAKrF,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuB,CACvC;AACEwH,aAAK,EAAE,UADT;AAEEyB,cAAM,EAAE,aAFV;AAGE5B,YAAI,EAAE,IAHR;AAIEoC,cAAM,EAAE,CAJV;AAKEuD,iBAAS,EAAE;AALb,OADuC,CAAvB,CAAlB;AASA,WAAKtM,OAAL,CAAasC,IAAb;AACA,WAAK+J,cAAL,CAAoBa,WAApB,CAAgClG,IAAhC,EAAsC7G,SAAtC,CAAgD,UAACM,GAAD,EAAoB;AAClE,YAAIA,GAAJ,EAAS;AACP,gBAAI,CAACkB,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuBmB,GAAG,CAAC0G,IAA3B,CAAlB;AACA,gBAAI,CAACC,WAAL,GAAmB3G,GAAG,CAAC4G,UAAvB;AACA,gBAAI,CAAC1F,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD;;AACD,cAAI,CAAC7B,OAAL,CAAa6C,IAAb;AACD,OAPD;AAQD;AA/HH;AAAA;AAAA,WAiIE,0BAAiBiK,OAAjB,EAAsC;AACpC,WAAKnM,MAAL,CAAYqI,UAAZ,CAAuB8D,OAAvB;AACA,WAAKvF,SAAL,CAAetE,EAAf,CAAkBvB,QAAlB,CAA2BoL,OAAO,CAACR,SAAnC;AACD;AApIH;AAAA;AAAA,WAsIE,oBAAQ;AAAA;;AACN,WAAK1I,SAAL,GAAiB,IAAjB;AAEA,UAAIkJ,OAAO,GAAoB;AAC7B7J,UAAE,EAAE,KAAKsE,SAAL,CAAetE,EAAf,CAAkBhB,KADO;AAE7B0E,YAAI,EAAE,KAAKY,SAAL,CAAeZ,IAAf,CAAoB1E,KAFG;AAG7BgH,kBAAU,EAAE,CAHiB;AAI7BV,cAAM,EAAE,KAAKhB,SAAL,CAAegB,MAAf,CAAsBtG,KAJD;AAK7B6E,aAAK,EAAE,KAAKS,SAAL,CAAeT,KAAf,CAAqB7E,KALC;AAM7B0G,wBAAgB,EAAE,KAAKpB,SAAL,CAAeoB,gBAAf,CAAgC1G,KANrB;AAO7B2G,oBAAY,EAAE,KAAKrB,SAAL,CAAeqB,YAAf,CAA4B3G;AAPb,OAA/B;;AAUA,UAAI,KAAKtB,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,aAAK+J,cAAL,CAAoBc,gBAApB,CAAqCL,OAArC,EAA8C3M,SAA9C,CAAwD,UAACM,GAAD,EAAa;AACnE,cAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,gBAAI8I,OAAO,CAAC7J,EAAR,IAAc,CAAlB,EAAqB;AACnB,oBAAI,CAACtB,UAAL,CAAgBwC,IAAhB,CAAqBsD,OAArB,CAA6BhH,GAA7B;;AACA,oBAAI,CAAC2G,WAAL;AACD,aAHD,MAGO;AACL,kBAAIW,KAAK,GAAG,MAAI,CAACpG,UAAL,CAAgBwC,IAAhB,CAAqB6D,SAArB,CACV,UAACxG,CAAD;AAAA,uBAAOA,CAAC,CAACuH,MAAF,IAAYtI,GAAG,CAACsI,MAAvB;AAAA,eADU,CAAZ;;AAGA,oBAAI,CAACpH,UAAL,CAAgBwC,IAAhB,CAAqB4D,KAArB,IAA8BtH,GAA9B;AACD;;AACD,kBAAI,CAACkB,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,kBAAI,CAACqE,MAAL,CAAYvC,OAAZ,CACElD,GAAG,CAACyH,EAAJ,IAAU,CAAV,GACI,yBADJ,GAEI,4BAHN;;AAKA,kBAAI,CAACR,SAAL;AACD;;AACD,cAAIjH,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,kBAAI,CAACkC,MAAL,CAAYyB,KAAZ,CAAkBlH,GAAG,CAACmH,YAAtB;AACD;;AACD,gBAAI,CAAC5H,OAAL,CAAa6C,IAAb;AACD,SAvBD;AAwBD,OA1BD,MA0BO,KAAKqD,MAAL,CAAYyB,KAAZ,CAAkB,sBAAlB;AACR;AA9KH;AAAA;AAAA,WAgLE,2BAAkBmF,OAAlB,EAAuC;AAAA;;AACrC,WAAK7M,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAEgN,OAAO,CAACnG;AADT;AADqB,OAD/B,EAMGvC,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAAC2I,aAAL,CAAmBF,OAAnB;AACd,OATH;AAUD,KA3LH,CA6LE;;AA7LF;AAAA;AAAA,WA8LE,uBAAcA,OAAd,EAAmC;AAAA;;AACjC,WAAKT,cAAL,CAAoBW,aAApB,CAAkCF,OAAO,CAACR,SAA1C,EAAqDnM,SAArD,CACE,UAACM,GAAD,EAAa;AACX,YAAIA,GAAG,CAACuD,WAAJ,IAAmB,CAAvB,EAA0B;AACxB,cAAI+D,KAAK,GAAG,MAAI,CAACpG,UAAL,CAAgBwC,IAAhB,CAAqB6D,SAArB,CAA+B,UAACxG,CAAD;AAAA,mBAAOA,CAAC,IAAIsL,OAAZ;AAAA,WAA/B,CAAZ;;AACA,gBAAI,CAACnL,UAAL,CAAgBwC,IAAhB,CAAqB8D,MAArB,CAA4BF,KAA5B,EAAmC,CAAnC;;AACA,gBAAI,CAACpG,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AAEA,cAAIiL,OAAO,CAACR,SAAR,IAAqB,MAAI,CAAC/E,SAAL,CAAeW,EAAf,CAAkBjG,KAA3C,EAAkD,MAAI,CAACyF,SAAL;;AAElD,gBAAI,CAACxB,MAAL,CAAYvC,OAAZ,CAAoB,4BAApB;AACD,SARD,MAQO;AACL,gBAAI,CAACuC,MAAL,CAAYyB,KAAZ,CAAkB,4BAAlB;AACD;AACF,OAbH;AAeD;AA9MH;AAAA;AAAA,WAgNE,qBAAS;AACP,WAAKhH,MAAL,CAAYsD,KAAZ;AACA,WAAKsD,SAAL,CAAetE,EAAf,CAAkBvB,QAAlB,CAA2B,CAA3B;AACA,WAAKkC,SAAL,GAAiB,KAAjB;AACD;AApNH;;AAAA;AAAA;;;mBAAatH,wBAAsBkD,+DAAAA,CAAAA,wFAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,iFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,kEAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA;AAAA;;;QAAtBlD;AAAsBiI;AAAAC;AAAA;gEAYtBpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;;;;;;;;;;;;;;;AC5CpBG,MAAAA,uDAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAMFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AAC5CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAqBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAkCFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAiCA,MAAAA,0DAAAA;AAC7CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAgBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAoCA,MAAAA,0DAAAA;AAChDA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AAKAA,MAAAA,wDAAAA;AAgBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAGEA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AAEAjF,MAAAA,wDAAAA;AACAA,MAAAA,oDAAAA;;AAIFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAQFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAmCA,MAAAA,0DAAAA;AACpDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAFFjF,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAmCFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAIAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQiF,mCAA+B,CAA/B,CAAR;AAAyC,OAAzC;AAMFjF,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AArTQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAwBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAsCSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA4BUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACvBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAMCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeYA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAaIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAuEKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAajCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwBiF,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3SZ;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBsBjF,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAF4CA,IAAAA,wDAAAA;AAC1CA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAQFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AANJA,IAAAA,4DAAAA;AAIEA,IAAAA,wDAAAA;AAKFA,IAAAA,0DAAAA;;;;;AALSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAuCLA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAA0CA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,aAAUuG,6CAAV;AAA2C,KAA3C;AAExCvG,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAJgBA,IAAAA,uDAAAA;AAAAA,IAAAA,oEAAAA;AACZA,IAAAA,wDAAAA;AACAA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATZA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAAgBA,IAAAA,oDAAAA;;AAAwBA,IAAAA,0DAAAA;AACxCA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAMFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;AAboBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA,CAAAA,yDAAAA;AAIkCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwCxDA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAAIA,IAAAA,oDAAAA;;AAAmCA,IAAAA,0DAAAA;AACvCA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AAAGA,IAAAA,wDAAAA;AAAA;AAAA;AAAA;AAAA,aAAS4N,2CAAT;AAAwC,KAAxC;AACD5N,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;AANMA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA,CAAAA,yDAAAA;;;;;;AAFRA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAQFA,IAAAA,0DAAAA;;;;;AARuBA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAavBA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAMFA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAAOA,IAAAA,0DAAAA;;;;;;;;AAGzDA,IAAAA,4DAAAA;AAAyCA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS6N,qCAAT;AAAkC,KAAlC;AAEvC7N,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAJFA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AAIFA,IAAAA,mEAAAA;;;;;AAJMA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAFRA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAMFA,IAAAA,0DAAAA;;;;;AANgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AASlCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADvJT,IAAMjD,0BAAb;AA2BE,sCACUoD,KADV,EAEUC,EAFV,EAGUE,GAHV,EAIUwN,WAJV,EAKSzN,QALT,EAMU+E,WANV,EAOU2I,cAPV,EAQUtN,MARV,EASUuN,QATV,EAUUxN,OAVV,EAUoC;AAAA;;AAAA;;AAT1B;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AA/BV,8BAAqB,CAArB;AACA,qBAAqB,KAArB;AACA,sBAAsB,KAAtB;AACA,oBAA+B,EAA/B,CA4BoC,CA3BpC;;AACA,0BAA0C,EAA1C;AACA,uBAAwB,EAAxB;AACA,8BAA+B,EAA/B;AAEA,qCAAgD,EAAhD;AACA,4BAA6B,CAC3B,GAD2B,EAE3B,YAF2B,EAG3B,cAH2B,EAI3B,MAJ2B,EAK3B,IAL2B,EAM3B,SAN2B,CAA7B;AAuBE,SAAKL,KAAL,CAAW0G,QAAX,CAAoBlG,SAApB,CAA8B,UAACkK,KAAD,EAAU;AACtC,WAAI,CAACtB,MAAL,GAAczI,MAAM,CAAC+J,KAAK,CAAC9J,GAAN,CAAU,QAAV,CAAD,CAApB;AACA,WAAI,CAAC8I,MAAL,GAAc/I,MAAM,CAAC+J,KAAK,CAAC9J,GAAN,CAAU,QAAV,CAAD,CAApB;AACD,KAHD;AAKAZ,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,QAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB;AACD;AACF,SANH;AAOD;AACF,KAXD;AAYD;;AAxDH;AAAA;AAAA,SA0DE,eAAgB;AACd,aAAO,KAAKE,MAAL,CAAYJ,GAAZ,CAAgB,YAAhB,CAAP;AACD;AA5DH;AAAA;AAAA,SA6DE,eAAgB;AACd,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,UAAhB,CAAP;AACD;AA/DH;AAAA;AAAA,SAgEE,eAAc;AACZ,aAAO,KAAKI,MAAL,CAAYJ,GAAZ,CAAgB,QAAhB,CAAP;AACD;AAlEH;AAAA;AAAA,WAoEE,oBAAQ;AACN,WAAKI,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AAC1B6M,kBAAU,EAAE,CAAC,EAAD,CADc;AAE1BC,gBAAQ,EAAE,CAAC,EAAD,CAFgB;AAG1BC,cAAM,EAAE,CAAC,EAAD;AAHkB,OAAd,CAAd;AAMA,WAAKzM,SAAL,GAAiBZ,MAAM,CAAC,KAAKT,QAAL,CAAcsB,YAAd,EAAD,CAAvB;AAEA,WAAKyM,sBAAL;AACA,WAAK3I,eAAL;AACA,WAAK4I,+BAAL;AACD;AAhFH;AAAA;AAAA,WAkFE,2BAAe;AACb,WAAKlM,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,WAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AArFH;AAAA;AAAA,WAuFE,qBAAYC,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AA1FH;AAAA;AAAA,WA4FE,kCAAsB;AAAA;;AACpB,WAAKpC,OAAL,CAAasC,IAAb;AACA,WAAKgL,WAAL,CACGM,sBADH,CAC8C,KAAK1M,SADnD,EAEGf,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAACqB,QAAL,GAAgBrB,QAAhB;AACD;;AACD,cAAI,CAACrB,OAAL,CAAa6C,IAAb;AACD,OARH;AASD;AAvGH;AAAA;AAAA,WAyGE,2BAAe;AAAA;;AACb,WAAK7C,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACGkJ,uBADH,CACoD,KAAKzE,MADzD,EAEGlJ,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAACmJ,cAAL,GAAsB,MAAI,CAAC+C,cAAL,CAAoBQ,OAApB,CACpB1M,QADoB,EAEpB,oBAFoB,CAAtB;;AAKA,gBAAI,CAACmJ,cAAL,CAAoBC,OAApB,CAA4B,UAACC,CAAD,EAAM;AAChC,kBAAI,CAACC,kBAAL,GAA0B,MAAI,CAACA,kBAAL,GAA0BD,CAAC,CAACsD,IAAF,CAAOpD,MAA3D;AACD,WAFD;AAGD;;AACD,cAAI,CAAC5K,OAAL,CAAa6C,IAAb;AACD,OAfH;AAgBD;AA3HH;AAAA;AAAA,WA6HE,0BAAiBxC,UAAjB,EAAqCmL,MAArC,EAAgD;AAC9C,UAAIA,MAAM,CAACC,OAAP,KAAmB,IAAvB,EAA6B;AAC3B,aAAKJ,WAAL,CAAiBrB,IAAjB,CAAsB3J,UAAtB;AACD,OAFD,MAEO,IAAImL,MAAM,CAACC,OAAP,KAAmB,KAAvB,EAA8B;AACnC,YAAI1D,KAAK,GAAG,KAAKsD,WAAL,CAAiBrD,SAAjB,CAA2B,UAACE,EAAD;AAAA,iBAAQA,EAAE,KAAK7H,UAAf;AAAA,SAA3B,CAAZ;AACA,aAAKgL,WAAL,CAAiBpD,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B;AACD;;AAED,UAAI,KAAKsD,WAAL,CAAiBT,MAAjB,KAA4B,KAAKD,kBAArC,EACE,KAAKY,UAAL,GAAkB,IAAlB,CADF,KAEK,KAAKA,UAAL,GAAkB,KAAlB;AACN;AAxIH;AAAA;AAAA,WA0IE,qBAAS;AAAA;;AACP,WAAKA,UAAL,GAAkB,CAAC,KAAKA,UAAxB;;AACA,UAAI,KAAKA,UAAT,EAAqB;AACnB,aAAKf,cAAL,CAAoBC,OAApB,CAA4B,UAACC,CAAD,EAAM;AAChCA,WAAC,CAACsD,IAAF,CAAOvD,OAAP,CAAe,UAACjJ,CAAD,EAAM;AACnB,gBAAImK,KAAK,GAAG,MAAI,CAACN,WAAL,CAAiBO,QAAjB,CAA0BpK,CAAC,CAACyB,EAA5B,CAAZ;;AACA,gBAAI,CAAC0I,KAAL,EAAY,MAAI,CAACN,WAAL,CAAiBrB,IAAjB,CAAsBxI,CAAC,CAACyB,EAAxB;AACb,WAHD;AAID,SALD;AAMD,OAPD,MAOO;AACL,aAAKoI,WAAL,GAAmB,EAAnB;AACD;AACF;AAtJH;AAAA;AAAA,WAwJE,2CAA+B;AAAA;;AAC7B,WAAKrL,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACGiJ,+BADH,CAEI,KAAK9E,MAFT,EAIG5I,SAJH,CAIa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAAC4M,yBAAL,GAAiC5M,QAAQ,CAAC6M,cAA1C;AACA,gBAAI,CAACvM,UAAL,GAAkB,IAAIrC,uEAAJ,CAAuB+B,QAAQ,CAAC6M,cAAhC,CAAlB;;AAHY,4KAIU,MAAI,CAACD,yBAJf;AAAA;;AAAA;AAIZ,gEAAsD;AAAA,kBAA7CE,SAA6C;;AAAA,iLACpCA,SAAS,CAACC,iBAD0B;AAAA;;AAAA;AACpD,uEAA6C;AAAA,sBAApCC,GAAoC;;AAC3C,wBAAI,CAACC,kBAAL,CAAwBtE,IAAxB,CAA6BqE,GAAG,CAACpL,EAAjC;AACD;AAHmD;AAAA;AAAA;AAAA;AAAA;AAIrD;AARW;AAAA;AAAA;AAAA;AAAA;AASb;;AACD,cAAI,CAACjD,OAAL,CAAa6C,IAAb;AACD,OAhBH;AAiBD;AA3KH;AAAA;AAAA,WA6KE,sBAAaC,MAAb,EAAqC;AAAA;;AACnC,WAAK9C,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACG2J,4BADH,CACgC,KAAKxF,MADrC,EAC6CjG,MAAM,CAACjC,QADpD,EAEGV,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,cAAI0J,CAAC,GAAG,MAAI,CAACpJ,UAAL,CAAgBwC,IAAhB,CAAqB6D,SAArB,CAA+B,UAACxG,CAAD;AAAA,mBAAQA,CAAC,GAAGsB,MAAZ;AAAA,WAA/B,CAAR;;AACA,gBAAI,CAACnB,UAAL,CAAgBwC,IAAhB,CAAqB8D,MAArB,CAA4B8C,CAA5B,EAA+B,CAA/B;;AACA,gBAAI,CAACpJ,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,gBAAI,CAAC9B,GAAL,CAAS6D,OAAT,CAAiB,iCAAjB;AACD;;AACD,cAAI,CAAC3D,OAAL,CAAa6C,IAAb;AACD,OAXH;AAYD;AA3LH;AAAA;AAAA,WA6LE,0BAAiBsC,IAAjB,EAA0B;AAAA;;AACxB,WAAKnF,OAAL,CAAasC,IAAb;AACA,WAAKsC,WAAL,CACG4J,uBADH,CAC2BrJ,IAAI,CAACsJ,sBADhC,EAEGtO,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAACwM,+BAAL;;AACA,gBAAI,CAAC/N,GAAL,CAAS6D,OAAT,CAAiB,mCAAjB;AACD;;AACD,cAAI,CAAC3D,OAAL,CAAa6C,IAAb;AACD,OATH;AAUD;AAzMH;AAAA;AAAA,WA2ME,oBAAQ;AAAA;;;;AACN,WAAKe,SAAL,GAAiB,IAAjB,CADM,CAEN;;AACA,UAAI,KAAKyH,WAAL,CAAiBT,MAAjB,IAA2B,CAA/B,EAAkC;AAChC,aAAK9K,GAAL,CAASgK,OAAT,CAAiB,mCAAjB;AACA;AACD;;AAED,UAAI,YAAK/G,YAAL,MAAiB,IAAjB,IAAiBC,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEf,KAAF,CAAQ2I,MAAzB,KAAmC,CAAvC,EAA0C;AACxC,aAAK9K,GAAL,CAASgK,OAAT,CAAiB,iCAAjB;AACA;AACD;;AACD,UAAI,KAAKnJ,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,YAAIwB,GAAG,GAAG,EAAV;AACAA,WAAG,CAAC4K,gBAAJ,GAAuB,KAAKrD,WAA5B;AACAvH,WAAG,CAAC2J,UAAJ,GAAiB,WAAK1K,YAAL,MAAiB,IAAjB,IAAiBI,aAAjB,GAAiB,MAAjB,GAAiBA,GAAElB,KAApC;AACA6B,WAAG,CAAC6K,UAAJ,GAAiB,EAAjB;AACA7K,WAAG,CAAC6K,UAAJ,CAAe5F,MAAf,GAAwB,KAAKA,MAA7B;AACAjF,WAAG,CAAC6K,UAAJ,CAAe9N,QAAf,GAA0B,CAA1B;AACAiD,WAAG,CAAC6K,UAAJ,CAAeC,IAAf,GAAsB,KAAKpB,QAAL,CAAcqB,SAAd,CAAwB,KAAKC,YAAL,CAAkB7M,KAA1C,CAAtB;AACA6B,WAAG,CAAC6K,UAAJ,CAAeI,EAAf,GAAoB,KAAKvB,QAAL,CAAcqB,SAAd,CAAwB,KAAKG,UAAL,CAAgB/M,KAAxC,CAApB;AAEA,aAAK2C,WAAL,CACGqK,+BADH,CACmCnL,GADnC,EAEG3D,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,gBAAI,CAACuC,SAAL,GAAiB,KAAjB;;AACA,cAAIvC,QAAJ,EAAc;AACZ;AACA,kBAAI,CAACwM,+BAAL;;AACA,kBAAI,CAAC/N,GAAL,CAAS6D,OAAT,CAAiB,+BAAjB;;AACA,kBAAI,CAAChD,MAAL,CAAYsD,KAAZ;;AACA,kBAAI,CAACoH,WAAL,GAAmB,EAAnB;AACA,kBAAI,CAACiD,kBAAL,GAA0B,EAA1B;AACA,kBAAI,CAAC/C,UAAL,GAAkB,KAAlB;AACD;;AACD,gBAAI,CAACvL,OAAL,CAAa6C,IAAb;AACD,SAdH;AAeD;AACF;AAlPH;AAAA;AAAA,WAoPE,2BAAkBC,MAAlB,EAA0C;AAAA;;AACxC,WAAK7C,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAEgD,MAAM,CAAChC;AADR;AADqB,OAD/B,EAMGsD,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACC,YAAL,CAAkBxB,MAAlB;AACd,OATH;AAUD;AA/PH;AAAA;AAAA,WAiQE,mCAA0BqC,IAA1B,EAAkD;AAAA;;AAChD,WAAKlF,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAEqF,IAAI,CAACK;AADN;AADqB,OAD/B,EAMGpB,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,OAAI,CAAC6K,gBAAL,CAAsB/J,IAAtB;AACd,OATH;AAUD;AA5QH;;AAAA;AAAA;;;mBAAa5I,4BAA0BiD,+DAAAA,CAAAA,4DAAAA,GAAAA,+DAAAA,CAAAA,wDAAAA,GAAAA,+DAAAA,CAAAA,sDAAAA,GAAAA,+DAAAA,CAAAA,oFAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,oFAAAA,GAAAA,+DAAAA,CAAAA,qFAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,sDAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA;AAAA;;;QAA1BjD;AAA0BgI;AAAAC;AAAA;gEAyB1BpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;;;;;;;;;;;;;;;AC1DpBG,MAAAA,uDAAAA;AAOAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AACXA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AACpCA,MAAAA,wDAAAA;AAGFA,MAAAA,0DAAAA;AAEAA,MAAAA,wDAAAA;AAUFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAmCA,MAAAA,0DAAAA;AAC/CA,MAAAA,uDAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,uDAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAiCA,MAAAA,0DAAAA;AAC7CA,MAAAA,uDAAAA;AACAA,MAAAA,uDAAAA;AACAA,MAAAA,uDAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAqCA,MAAAA,wDAAAA;AAAA,eAAUiF,eAAV;AAAqB,OAArB;AACnCjF,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAA0DA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AACxDjF,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAA+CA,MAAAA,0DAAAA;AACjDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAAgBA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAAhBjF,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAUFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAGFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAQFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AAEFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;;;;;AAtLQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAKUA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIaA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,KAAAA,yDAAAA;AAIPA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAC6BA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKtBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAeCA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AACIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACiBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAOrBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AACIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACiBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMrBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACZA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAI2CA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAwBrDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAWFA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQmBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAmEKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AASpBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1LzB;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACsBsBA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAdJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AASFA,IAAAA,0DAAAA;;;;;AARKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAuBHA,IAAAA,4DAAAA;AAOEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAGFA,IAAAA,4DAAAA;AAMEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AA7BJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAWAA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAvBKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAWAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQIA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAdFA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AARSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAePA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAFuCA,IAAAA,wDAAAA;AACrCA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAUFA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAwBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AATJA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAyBPA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AACAA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAVFA,IAAAA,4DAAAA;AAOEA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;;;;;AAJSA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AA6CfA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAACA,IAAAA,0DAAAA;;;;;;AACvDA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;;;;;AAAXA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKzCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAiBA,IAAAA,0DAAAA;;;;;AAAjBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAuBA,IAAAA,0DAAAA;;;;;AAAvBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAgBA,IAAAA,0DAAAA;;;;;AAAhBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;;AACFA,IAAAA,0DAAAA;;;;AADEA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;AAEFA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAkBA,IAAAA,0DAAAA;;;;;AAAlBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAKnCA,IAAAA,uDAAAA;;;;;;;;AAGIA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS6N,0BAAT;AAAuB,KAAvB;AAIA7N,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAEAA,IAAAA,4DAAAA;AAEEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA;AAAA,aAAS2P,mCAAT;AAAgC,KAAhC;AAIA3P,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;;;;;AAEAA,IAAAA,4DAAAA;AASEA,IAAAA,uDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAREA,IAAAA,oEAAAA;AAGAA,IAAAA,wDAAAA,gBAAAA,6DAAAA;;;;;;AAxBJA,IAAAA,qEAAAA;AACEA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AASAA,IAAAA,wDAAAA;AAWFA,IAAAA,mEAAAA;;;;;AA5BKA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AASAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AArBPA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AA+BFA,IAAAA,0DAAAA;;;;;AA/BgCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAkClCA,IAAAA,uDAAAA;;;;;;AACAA,IAAAA,uDAAAA;;;;;;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAFIA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;;;ADpRT,IAAMhD,mBAAb;AAyBE,+BACUoD,EADV,EAEUsG,MAFV,EAGUoH,WAHV,EAISzN,QAJT,EAKU+E,WALV,EAMU5E,OANV,EAOUC,MAPV,EAQUN,KARV,EAQ+B;AAAA;;AAAA;;AAPrB;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AA9BV,qBAAqB,KAArB;AACA,iBAA2B,EAA3B;AAGA,uBAAsB,CAAtB;AACA,iBAAgB,KAAhB;AACA,aAAY,CAAZ;AAEA,4BAA6B,CAC3B,GAD2B,EAE3B,MAF2B,EAG3B,OAH2B,EAI3B,QAJ2B,EAK3B,MAL2B,EAM3B,QAN2B,CAA7B;AAwBEA,SAAK,CAACO,aAAN,CAAoBC,SAApB,CAA8B,UAACC,MAAD,EAAW;AACvC,WAAI,CAACC,UAAL,GAAkBC,MAAM,CAACF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAD,CAAxB,CADuC,CAEvC;;AACA,UAAI,KAAI,CAACF,UAAT,EAAqB;AACnB,aAAI,CAACR,QAAL,CACGW,mBADH,CACuB,KAAI,CAACH,UAD5B,EAEGF,SAFH,CAEa,UAACM,GAAD,EAAa;AACtB,cAAIA,GAAJ,EAAS;AACP,iBAAI,CAACC,YAAL,GAAoBD,GAApB,CADO,CAEP;AACD;AACF,SAPH;AAQD;AACF,KAbD;AAcD;;AAjDH;AAAA;AAAA,WAmDE,oBAAQ;AAAA;;AACN,WAAKE,MAAL,GAAc,KAAKf,EAAL,CAAQgB,KAAR,CACZ;AACEmI,cAAM,EAAE,CAAC,CAAD,EAAI,CAAC5J,+DAAD,CAAJ,CADV;AAEEiQ,gBAAQ,EAAE,CACR,IADQ,EAER,CACEjQ,+DADF,EAEEA,8DAAA,CACE,qDADF,CAFF,EAKEF,qGALF,CAFQ,CAFZ;AAYE6H,aAAK,EAAE,CAAC,IAAD,EAAO,CAAC3H,+DAAD,EAAsBA,4DAAtB,CAAP,CAZT;AAaEkQ,aAAK,EAAE,CACL,EADK,EAEL,CACElQ,+DADF,EAEEA,8DAAA,CAAmB,wCAAnB,CAFF,EAGEA,gEAAA,CAAqB,EAArB,CAHF,EAIEA,gEAAA,CAAqB,EAArB,CAJF,EAKEF,qGALF,CAFK,CAbT;AAuBEoK,cAAM,EAAE,CAAC,IAAD,EAAO,CAAClK,+DAAD,CAAP,CAvBV;AAwBEmQ,gBAAQ,EAAE,CACR,IADQ,EAER,CACEnQ,+DADF,EAEEF,qGAFF,EAGEE,gEAAA,CAAqB,CAArB,CAHF,CAFQ,CAxBZ;AAgCEoQ,qBAAa,EAAE,CAAC,IAAD;AAhCjB,OADY,EAmCZ;AACE1G,iBAAS,EAAE5J,oGAAA,CAA2B,UAA3B,EAAuC,eAAvC;AADb,OAnCY,CAAd;AAwCA,WAAKiC,SAAL,GAAiBZ,MAAM,CAAC,KAAKT,QAAL,CAAcsB,YAAd,EAAD,CAAvB;AAEA,WAAKyD,WAAL,CACG2E,WADH,CACkC,KAAKrI,SADvC,EAEGf,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ,gBAAI,CAACmI,KAAL,GAAanI,QAAb;AACD;AACF,OANH;AAQA,WAAKmO,WAAL,CAAiB,CAAjB;AACD;AAvGH;AAAA;AAAA,SAyGE,eAAa;AACX,aAAO,KAAK7O,MAAL,CAAYoG,QAAnB;AACD;AA3GH;AAAA;AAAA,WA6GE,2BAAe;AAAA;;AACb,WAAKlH,QAAL,CAAcqB,SAAd,CAAwBf,SAAxB,CAAkC,UAACqB,CAAD,EAAM;AACtC,cAAI,CAACN,SAAL,GAAiBM,CAAC,CAACN,SAAnB;;AACA,cAAI,CAACsO,WAAL,CAAiB,CAAjB;AACD,OAHD;AAKA,WAAK7N,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,WAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AArHH;AAAA;AAAA,WAuHE,qBAAYC,KAAZ,EAAwB;AACtB,UAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,WAAKN,UAAL,CAAgBO,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;AA1HH;AAAA;AAAA,WA4HE,qBAAYC,UAAZ,EAA8B;AAAA;;AAC5B;AACA,WAAKoN,CAAL,GAASpN,UAAT;AACA,WAAKrC,OAAL,CAAasC,IAAb;AAEA,WAAKgL,WAAL,CACGkC,WADH,CAC+B,KAAKtO,SADpC,EAC+CmB,UAD/C,EAEGlC,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAACM,UAAL,GAAkB,IAAIrC,uEAAJ,CAChB+B,QAAQ,CAACsB,kBAAT,CAA4B+M,OAA5B,EADgB,CAAlB;AAGA,gBAAI,CAACtI,WAAL,GAAmB/F,QAAQ,CAAC+F,WAA5B;AACD;;AACD,cAAI,CAACpH,OAAL,CAAa6C,IAAb;AACD,OAXH;AAYD;AA7IH;AAAA;AAAA,WA+IE,kBAAS8M,IAAT,EAAyB;;;AACvB,iBAAKpI,SAAL,CAAewB,MAAf,MAAqB,IAArB,IAAqB/F,aAArB,GAAqB,MAArB,GAAqBA,GAAEtB,QAAF,CAAWiO,IAAI,CAACC,OAAhB,CAArB;AACA,iBAAKrI,SAAL,CAAe6H,QAAf,MAAuB,IAAvB,IAAuBjM,aAAvB,GAAuB,MAAvB,GAAuBA,GAAEzB,QAAF,CAAWiO,IAAI,CAACE,OAAhB,CAAvB;AACA,iBAAKtI,SAAL,CAAeT,KAAf,MAAoB,IAApB,IAAoBxD,aAApB,GAAoB,MAApB,GAAoBA,GAAE5B,QAAF,CAAWiO,IAAI,CAACG,aAAhB,CAApB;AACA,iBAAKvI,SAAL,CAAe8H,KAAf,MAAoB,IAApB,IAAoB3J,aAApB,GAAoB,MAApB,GAAoBA,GAAEhE,QAAF,CAAWiO,IAAI,CAACpH,MAAhB,CAApB;AACA,iBAAKhB,SAAL,CAAe8B,MAAf,MAAqB,IAArB,IAAqB0G,aAArB,GAAqB,MAArB,GAAqBA,GAAErO,QAAF,CAAWiO,IAAI,CAACtG,MAAhB,CAArB;AACA,iBAAK9B,SAAL,CAAe+H,QAAf,MAAuB,IAAvB,IAAuBU,aAAvB,GAAuB,MAAvB,GAAuBA,GAAEtO,QAAF,CAAWiO,IAAI,CAAChH,gBAAhB,CAAvB;AACA,iBAAKpB,SAAL,CAAegI,aAAf,MAA4B,IAA5B,IAA4BU,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEvO,QAAF,CAAWiO,IAAI,CAAChH,gBAAhB,CAA5B;AACA,WAAKpF,MAAL,CAAYC,aAAZ,CAA0BC,SAA1B,GAAsC,QAAtC;AACD;AAxJH;AAAA;AAAA,WA0JE,oBAAWkM,IAAX,EAA2B;AAAA;;AACzB,WAAKrC,WAAL,CAAiB4C,UAAjB,CAA4BP,IAAI,CAACC,OAAjC,EAA0CzP,SAA1C,CAAoD,UAACkB,QAAD,EAAa;AAC/D,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAI,CAACmO,WAAL,CAAiB,CAAjB;;AACA,gBAAI,CAACtJ,MAAL,CAAYvC,OAAZ,CAAoB,uBAApB;AACD;AACF,OAND;AAOD;AAlKH;AAAA;AAAA,WAoKE,oBAAQ;AAAA;;;;AACN,WAAKC,SAAL,GAAiB,IAAjB;;AAEA,UAAI,KAAKjD,MAAL,CAAYkD,KAAhB,EAAuB;AACrB,aAAK7D,OAAL,CAAasC,IAAb;AACA,YAAIwB,GAAG,GAAG,EAAV;AACAA,WAAG,CAAC6L,IAAJ,GAAW,EAAX;AACA7L,WAAG,CAAC6L,IAAJ,CAASC,OAAT,GAAmB,WAAKrI,SAAL,CAAewB,MAAf,MAAqB,IAArB,IAAqB/F,aAArB,GAAqB,MAArB,GAAqBA,GAAEf,KAA1C;AACA6B,WAAG,CAAC6L,IAAJ,CAASE,OAAT,GAAmB,WAAKtI,SAAL,CAAe6H,QAAf,MAAuB,IAAvB,IAAuBjM,aAAvB,GAAuB,MAAvB,GAAuBA,GAAElB,KAA5C;AACA6B,WAAG,CAAC6L,IAAJ,CAASG,aAAT,GAAyB,iBAAKvI,SAAL,MAAc,IAAd,IAAcjE,aAAd,GAAc,MAAd,GAAcA,GAAEwD,KAAhB,MAAqB,IAArB,IAAqBpB,aAArB,GAAqB,MAArB,GAAqBA,GAAEzD,KAAhD;AACA6B,WAAG,CAAC6L,IAAJ,CAASpH,MAAT,GAAkB,WAAKhB,SAAL,CAAe8H,KAAf,MAAoB,IAApB,IAAoBU,aAApB,GAAoB,MAApB,GAAoBA,GAAE9N,KAAxC;AACA6B,WAAG,CAAC6L,IAAJ,CAAStG,MAAT,GAAkB,WAAK9B,SAAL,CAAe8B,MAAf,MAAqB,IAArB,IAAqB2G,aAArB,GAAqB,MAArB,GAAqBA,GAAE/N,KAAzC;AACA6B,WAAG,CAAC6L,IAAJ,CAAShH,gBAAT,GAA4B,WAAKpB,SAAL,CAAe+H,QAAf,MAAuB,IAAvB,IAAuBW,aAAvB,GAAuB,MAAvB,GAAuBA,GAAEhO,KAArD;AAEA6B,WAAG,CAACuF,MAAJ,GAAa,WAAK9B,SAAL,CAAe8B,MAAf,MAAqB,IAArB,IAAqB8G,aAArB,GAAqB,MAArB,GAAqBA,GAAElO,KAApC;AACA6B,WAAG,CAAC5C,SAAJ,GAAgB,KAAKA,SAArB;AAEA,aAAKoM,WAAL,CACG8C,WADH,CACuCtM,GADvC,EAEG3D,SAFH,CAEa,UAACkB,QAAD,EAAa;AACtB,gBAAI,CAACuC,SAAL,GAAiB,KAAjB,CADsB,CAEtB;;AAEA,cAAIvC,QAAQ,IAAIA,QAAQ,KAAK,IAA7B,EAAmC;AACjC,gBAAIA,QAAQ,CAAC2C,WAAT,IAAwB,CAA5B,EAA+B;AAC7B,oBAAI,CAACkC,MAAL,CAAYyB,KAAZ,CAAkBtG,QAAQ,CAACuG,YAA3B;AACD,aAFD,MAEO;AACL,oBAAI,CAAC4H,WAAL,CAAiB,CAAjB;;AACA,oBAAI,CAACtJ,MAAL,CAAYvC,OAAZ,CAAoB,wCAApB;;AACA,oBAAI,CAAChD,MAAL,CAAYsD,KAAZ;;AACA,oBAAI,CAACV,MAAL,CAAYC,aAAZ,CAA0BC,SAA1B,GAAsC,KAAtC;AACD;AACF;;AACD,gBAAI,CAACzD,OAAL,CAAa6C,IAAb;AACD,SAjBH;AAkBD;AACF;AAxMH;AAAA;AAAA,WA0ME,2BAAkB8M,IAAlB,EAAkC;AAAA;;AAChC,WAAK1P,MAAL,CACGiE,IADH,CACQ3E,sHADR,EAC+B;AAC3B4E,YAAI,EAAE;AACJrE,aAAG,EAAE6P,IAAI,CAACE;AADN;AADqB,OAD/B,EAMGzL,WANH,GAOGjE,SAPH,CAOa,UAACkE,OAAD,EAAY;AACrB,YAAIA,OAAJ,EAAa,MAAI,CAACgM,UAAL,CAAgBV,IAAhB;AACd,OATH;AAUD;AArNH;;AAAA;AAAA;;;mBAAanT,qBAAmBgD,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,sDAAAA,GAAAA,+DAAAA,CAAAA,oFAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,oFAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,gEAAAA,GAAAA,+DAAAA,CAAAA,4DAAAA;AAAA;;;QAAnBhD;AAAmB+H;AAAAC;AAAA;gEAqBnBpF,sEAAYA,EAAA;gEACZC,4DAAOA,EAAA;wEAEWH,qDAAUA;;;;;;;;;;;;;;;;ACpDzCM,MAAAA,uDAAAA;AAOAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAsCA,MAAAA,0DAAAA;AACvDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AAC5CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAiBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAC9CA,MAAAA,uDAAAA;AACAA,MAAAA,wDAAAA;AAgCFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAiCA,MAAAA,0DAAAA;AAC7CA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAgBFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AAC3CA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AAAkCA,MAAAA,0DAAAA;AAEpCA,MAAAA,wDAAAA;AAGFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,oDAAAA;;AAAoCA,MAAAA,0DAAAA;AAChDA,MAAAA,uDAAAA;AAMAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,uDAAAA;AAKAA,MAAAA,wDAAAA;AAYFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAIEA,MAAAA,wDAAAA;AAAA,eAASiF,cAAT;AAAmB,OAAnB;AAEAjF,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAiBA,MAAAA,oDAAAA;;AAAgCA,MAAAA,0DAAAA;AACjDA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAWA,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AACjBA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAASiF,uBAAT;AAA4B,OAA5B;AAFFjF,MAAAA,0DAAAA;AAMFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAEEA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AACFA,MAAAA,mEAAAA;AAGAA,MAAAA,qEAAAA;AACEA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAiCFA,MAAAA,mEAAAA;AAEAA,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AAGAA,MAAAA,wDAAAA;AAKFA,MAAAA,0DAAAA;AAIAA,MAAAA,4DAAAA;AAEEA,MAAAA,wDAAAA;AAAA,eAAQiF,mCAA+B,CAA/B,CAAR;AAAyC,OAAzC;AAMFjF,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AA1TuBA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAILA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAIcA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AASTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAGTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoCSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAoBQA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,KAAAA,yDAAAA;AAGPA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAE2BA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAK5BA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAgBSA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAiBDA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAQCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAyBbA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAUaA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;AAaIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA6EKA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AACaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAajCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,oBAAAA,6DAAAA,WAAwB,QAAxB,EAAwBiF,eAAxB,EAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtTZ;;;AAKO,IAAM8L,eAAb;AAWE,2BAAoBC,IAApB,EAAoC;AAAA;;AAAhB;AAVpB,6BACEF,yEAAA,GAAsB,+CADxB;AAEA,8BAAqBA,yEAAA,GAAsB,8BAA3C;AACA,6BAAoBA,yEAAA,GAAsB,6BAA1C;AAEA,8BACEA,yEAAA,GAAsB,oCADxB,CAKoC,CAJ0B;;AAC9D,sCACEA,yEAAA,GAAsB,wCADxB,CAGoC,CAF8B;AAE1B;;AAX1C;AAAA;AAAA,WAaE,wBAAkBI,SAAlB,EAAgC;AAC9B,aAAO,KAAKF,IAAL,CAAUjQ,GAAV,CAAiB,KAAKoQ,iBAAL,GAAyB,GAAzB,GAA+BD,SAAhD,CAAP;AACD;AAfH;AAAA;AAAA,WAiBE,iCAA2BA,SAA3B,EAA6C1J,IAA7C,EAAyD;AACvD,aAAO,KAAKwJ,IAAL,CAAUjQ,GAAV,CAAiB,KAAKqQ,0BAAL,GAAkC,GAAlC,GAAwCF,SAAxC,GAAkD,GAAlD,GAAsD1J,IAAvE,CAAP;AACD;AAnBH;AAAA;AAAA,WAqBE,yBAAuBlD,GAAvB,EAA6B;AAC3B,aAAO,KAAK0M,IAAL,CAAUK,IAAV,CAAmB,KAAKC,kBAAxB,EAA4ChN,GAA5C,CAAP;AACD,KAvBH,CAwBE;AACA;AACA;AACA;AACA;AACA;;AA7BF;AAAA;AAAA,WA+BE,sBAAgBjD,QAAhB,EAAgC;AAC9B,aAAO,KAAK2P,IAAL,CAAUO,MAAV,CAAoB,KAAKC,iBAAL,GAAyB,GAAzB,GAA+BnQ,QAAnD,CAAP;AACD;AAjCH;AAAA;AAAA,WAmCE,2BAAe;AACb,aAAO,KAAK2P,IAAL,CAAUjQ,GAAV,CAAiB,KAAK0Q,kBAAtB,CAAP;AACD;AArCH;;AAAA;AAAA;;;mBAAaV,iBAAe/Q,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAf+Q;AAAeW,WAAfX,eAAe;AAAAY,cAFd;;;;;;;;;;;;;;;;;;;;;;ACHd;;;AAKO,IAAMC,gBAAb;AAIE,4BAAoBZ,IAApB,EAAoC;AAAA;;AAAhB;AAHpB,8BAAqBF,yEAAA,GAAsB,gCAA3C;AACA,6BAAoBA,yEAAA,GAAsB,+BAA1C;AAEwC;;AAJ1C;AAAA;AAAA,WAME,yBAAuBxM,GAAvB,EAA6B;AAC3B,aAAO,KAAK0M,IAAL,CAAUK,IAAV,CAAmB,KAAKQ,kBAAxB,EAA4CvN,GAA5C,CAAP;AACD,KARH,CASE;AACA;AACA;AACA;AACA;AACA;;AAdF;AAAA;AAAA,WAgBE,wBAAkBzD,UAAlB,EAAoC;AAClC,aAAO,KAAKmQ,IAAL,CAAUO,MAAV,WAAuB,KAAKO,iBAA5B,cAAiDjR,UAAjD,EAAP;AACD;AAlBH;;AAAA;AAAA;;;mBAAa+Q,kBAAgB5R,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAhB4R;AAAgBF,WAAhBE,gBAAgB;AAAAD,cAFf;;;;;;;;;;;;;;;;;;;;;;ACLd;;;AAWO,IAAMlL,kBAAb;AACE,8BAAoBuK,IAApB,EAAoC;AAAA;;AAAhB;AAAoB;;AAD1C;AAAA;AAAA,WAGE,yBAAgBe,IAAhB,EAAoC;AAClC,aAAO,KAAKf,IAAL,CAAUK,IAAV,WAAkBP,yEAAlB,4BAA8DiB,IAA9D,CAAP;AACD;AALH;AAAA;AAAA,WAOE,oBAAWvK,IAAX,EAAuB;AACrB,aAAO,KAAKwJ,IAAL,CAAUjQ,GAAV,WAAiB+P,yEAAjB,+BAAyDtJ,IAAzD,EAAP;AACD;AATH;AAAA;AAAA,WAWE,uBAAcV,QAAd,EAA8B;AAC5B,aAAO,KAAKkK,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,kCACyChK,QADzC,EAAP;AAGD;AAfH;AAAA;AAAA,WAiBE,sBAAaA,QAAb,EAA6B;AAC3B,aAAO,KAAKkK,IAAL,CAAUO,MAAV,WACFT,yEADE,qCAC4ChK,QAD5C,EAAP;AAGD;AArBH;AAAA;AAAA,WAuBE,2BAAkBA,QAAlB,EAAkC;AAChC,aAAO,KAAKkK,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,iDACwDhK,QADxD,EAAP;AAGD;AA3BH;AAAA;AAAA,WA6BE,6BAAoBiL,IAApB,EAAqC;AACnC,aAAO,KAAKf,IAAL,CAAUK,IAAV,WACFP,yEADE,uCAELiB,IAFK,CAAP;AAID;AAlCH;AAAA;AAAA,WAoCE,qBAAYA,IAAZ,EAAqB;AACnB,aAAO,KAAKf,IAAL,CAAUK,IAAV,WAAkBP,yEAAlB,yBAA2DiB,IAA3D,CAAP;AACD;AAtCH;AAAA;AAAA,WAwCE,sBAAaC,OAAb,EAA4B;AAC1B,aAAO,KAAKhB,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,qDAC4DkB,OAD5D,EAAP;AAGD;AA5CH;AAAA;AAAA,WA8CE,qBAAYlL,QAAZ,EAA8BkL,OAA9B,EAA6C;AAC3C,aAAO,KAAKhB,IAAL,CAAUO,MAAV,WACFT,yEADE,6CACoDhK,QADpD,cACgEkL,OADhE,EAAP;AAGD;AAlDH;AAAA;AAAA,WAoDE,qBAAYlL,QAAZ,EAA8BkL,OAA9B,EAA6C;AAC3C,aAAO,KAAKhB,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,wDAC+DhK,QAD/D,cAC2EkL,OAD3E,EAAP;AAGD;AAxDH;;AAAA;AAAA;;;mBAAavL,oBAAkBzG,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAlByG;AAAkBiL,WAAlBjL,kBAAkB;AAAAkL,cAFjB;;;;;;;;;;;;;;;;;;;;;;ACPd;;;AAKO,IAAMM,YAAb;AACE,wBAAoBjB,IAApB,EAAoC;AAAA;;AAAhB;AAAoB;;AAD1C;AAAA;AAAA,WAGE,qBAAetP,SAAf,EAAgC;AAC9B,aAAO,KAAKsP,IAAL,CAAUjQ,GAAV,CAAiB+P,yEAAA,GAAsB,4BAAtB,GAAmD,GAAnD,GAAuDpP,SAAxE,CAAP;AACD;AALH;AAAA;AAAA,WAOE,qBAAmB4C,GAAnB,EAAyB;AACvB,aAAO,KAAK0M,IAAL,CAAUK,IAAV,WACFP,yEADE,iCAELxM,GAFK,CAAP;AAID;AAZH;AAAA;AAAA,WAcE,oBAAWuF,MAAX,EAAyB;AACvB,aAAO,KAAKmH,IAAL,CAAUO,MAAV,CACLT,yEAAA,GAAsB,2BAAtB,GAAoD,GAApD,GAA0DjH,MADrD,CAAP;AAGD;AAlBH;AAAA;AAAA,WAoBE,yBAAmBrC,IAAnB,EAAiC0K,MAAjC,EAAgD;AAC9C,aAAO,KAAKlB,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,4CACmDtJ,IADnD,cAC2D0K,MAD3D,EAAP;AAGD;AAxBH;AAAA;AAAA,WA0BE,8BAAkB;AAChB,aAAO,KAAKlB,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,iCAAP;AAGD;AA9BH;AAAA;AAAA,WA+BE,4BAAsBjH,MAAtB,EAAoC;AAClC,aAAO,KAAKmH,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,6CACoDjH,MADpD,EAAP;AAGD;AAnCH;AAAA;AAAA,WAsCE,yBAAa;AACX,aAAO,KAAKmH,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,2BAAP;AAGD;AA1CH;AAAA;AAAA,WA4CE,6BAAuBjH,MAAvB,EAAqC;AACnC,aAAO,KAAKmH,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,wDAC+DjH,MAD/D,EAAP;AAGD;AAhDH;AAAA;AAAA,WAkDE,8BAA4BvF,GAA5B,EAAkC;AAChC,aAAO,KAAK0M,IAAL,CAAUK,IAAV,CACLP,yEAAA,GAAsB,qCADjB,EAELxM,GAFK,CAAP;AAID;AAvDH;AAAA;AAAA,WAyDE,iCAA2BuF,MAA3B,EAAyC;AACvC,aAAO,KAAKmH,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,wDAC+DjH,MAD/D,EAAP;AAGD;AA7DH;AAAA;AAAA,WA+DE,yCAAmCN,MAAnC,EAAiD;AAC/C,aAAO,KAAKyH,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,+DACsEvH,MADtE,EAAP;AAGD;AAnEH;AAAA;AAAA,WAqEE,yCAAuCjF,GAAvC,EAA6C;AAC3C,aAAO,KAAK0M,IAAL,CAAUK,IAAV,CACLP,yEAAA,GAAsB,gDADjB,EAELxM,GAFK,CAAP;AAID;AA1EH;AAAA;AAAA,WA4EE,iCAAwBzD,UAAxB,EAA0C;AACxC,aAAO,KAAKmQ,IAAL,CAAUO,MAAV,WACFT,yEADE,yDACgEjQ,UADhE,EAAP;AAGD;AAhFH;AAAA;AAAA,WAkFE,sCAA6B0I,MAA7B,EAA6ClI,QAA7C,EAA6D;AAC3D,aAAO,KAAK2P,IAAL,CAAUO,MAAV,WACFT,yEADE,4DACmEvH,MADnE,cAC6ElI,QAD7E,EAAP;AAGD;AAtFH;;AAAA;AAAA;;;mBAAa4Q,cAAYjS,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAZiS;AAAYP,WAAZO,YAAY;AAAAN,cAFX;;;;;;;;;;;;;;;;;;;;;;ACHd;;;AAKO,IAAMQ,YAAb;AAGE,wBAAoBnB,IAApB,EAAoC;AAAA;;AAAhB;AAFpB,yBAAgBF,yEAAA,GAAsB,2BAAtC;AAEwC;;AAH1C;AAAA;AAAA,WAKE,qBAAeI,SAAf,EAA+B1J,IAA/B,EAA2C;AACzC,aAAO,KAAKwJ,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,iDACwDI,SADxD,cACqE1J,IADrE,EAAP;AAGD;AATH;AAAA;AAAA,WAWE,qBAAmBlD,GAAnB,EAAyB;AACvB,aAAO,KAAK0M,IAAL,CAAUK,IAAV,CACLP,yEAAA,GAAsB,oCADjB,EAELxM,GAFK,CAAP;AAID;AAhBH;AAAA;AAAA,WAkBE,oBAAWiF,MAAX,EAAyB;AACvB,aAAO,KAAKyH,IAAL,CAAUO,MAAV,CAAiB,KAAKa,aAAL,GAAqB,GAArB,GAA2B7I,MAA5C,CAAP;AACD;AApBH;AAAA;AAAA,WAsBE,gCAA0B2H,SAA1B,EAAwC;AACtC,aAAO,KAAKF,IAAL,CAAUjQ,GAAV,WACF+P,yEADE,0DACiEI,SADjE,EAAP;AAGD;AA1BH;;AAAA;AAAA;;;mBAAaiB,cAAYnS,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAZmS;AAAYT,WAAZS,YAAY;AAAAR,cAFX;;;;;;;;;;;;;;;;;;;;;;;ACSP,IAAM5S,0BAAb;AAgBE,sCAC+CsT,MAD/C,EAEUC,EAFV,EAGUC,GAHV,EAGwB;AAAA;;AAAA;;AAFuB;AACrC;AACA;AAlBF,wBAAe,CAAf;AACA,uBAAc,KAAd;AAGA,oBAAW,EAAX;AASA,2BAAkB,CAAlB,CAKgB,CAEtB;;AACA,SAAKF,MAAL,CAAY7K,IAAZ,CAAiB7G,SAAjB,CAA2B,UAAC6R,CAAD,EAAM;AAC/B,WAAI,CAACC,UAAL,CAAgBD,CAAC,CAACE,SAAlB;AACD,KAFD;AAGD;;AAzBH;AAAA;AAAA,SAOE,eACkB;AAChB,aAAO,KAAKC,eAAZ;AACD,KAVH;AAAA,SAWE,aAAmBlQ,KAAnB,EAAgC;AAC9B,WAAKkQ,eAAL,GAAuBlQ,KAAK,GAAG,CAAR,IAAa,CAAb,GAAiBA,KAAK,GAAG,CAAzB,GAA6BA,KAApD;AACD;AAbH;AAAA;AAAA,WA2BU,4BAAgB;AAAA;;AACtB,UAAMmQ,eAAe,GAAG,KAAKN,EAAL,CAAQO,OAAR,CAAgB7O,aAAhB,CAA8B8O,aAA9B,CACtB,iCADsB,CAAxB;AAGA,UAAMC,YAAY,GAAG,KAAKT,EAAL,CAAQO,OAAR,CAAgB7O,aAAhB,CAA8B8O,aAA9B,CACnB,sCADmB,CAArB;AAGA,UAAME,eAAe,GAAG,KAAKC,QAAL,CAAc7H,MAAtC,CAPsB,CAStB;;AACA,UAAI,KAAK6H,QAAL,CAAc7H,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,aAAK6H,QAAL,CAAchI,OAAd,CAAsB,UAACiI,MAAD,EAAW;AAC/B,gBAAI,CAACX,GAAL,CAASY,WAAT,CAAqBP,eAArB,EAAsCM,MAAtC;AACD,SAFD,EAD4B,CAI5B;;;AACA,aAAKD,QAAL,CAAc7H,MAAd,GAAuB,CAAvB;AACD,OAhBqB,CAkBtB;;;AACA,UAAI,KAAK6H,QAAL,CAAc7H,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,YAAIgI,SAAS,GACX,KAAKd,EAAL,CAAQO,OAAR,CAAgB7O,aAAhB,CAA8BqP,UAA9B,CAAyC,CAAzC,EAA4CA,UAA5C,CAAuD,CAAvD,EAA0DA,UAA1D,CAAqE,CAArE,EACGA,UAFL;AAGAC,kBAAU,CAAC,YAAK;AACd,eAAK,IAAI/H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6H,SAAS,CAAChI,MAA9B,EAAsCG,CAAC,EAAvC,EAA2C;AACzC,gBAAI6H,SAAS,CAAC7H,CAAD,CAAT,CAAagI,QAAb,KAA0B,QAA9B,EAAwC;AACtC,kBAAIH,SAAS,CAAC7H,CAAD,CAAT,CAAaiI,QAAjB,EAA2B;AACzB,sBAAI,CAACjB,GAAL,CAASkB,QAAT,CACEL,SAAS,CAAC7H,CAAD,CADX,EAEE,kBAFF,EAGE,wBAHF;;AAKA,sBAAI,CAACgH,GAAL,CAASkB,QAAT,CAAkBL,SAAS,CAAC7H,CAAD,CAA3B,EAAgC,OAAhC,EAAyC,OAAzC;;AACA,sBAAI,CAACgH,GAAL,CAASkB,QAAT,CAAkBL,SAAS,CAAC7H,CAAD,CAA3B,EAAgC,QAAhC,EAA0C,KAA1C;AACD,eARD,MAQO;AACL,sBAAI,CAACgH,GAAL,CAASkB,QAAT,CACEL,SAAS,CAAC7H,CAAD,CADX,EAEE,kBAFF,EAGE,oBAHF;;AAKA,sBAAI,CAACgH,GAAL,CAASkB,QAAT,CAAkBL,SAAS,CAAC7H,CAAD,CAA3B,EAAgC,OAAhC,EAAyC,OAAzC;;AACA,sBAAI,CAACgH,GAAL,CAASkB,QAAT,CAAkBL,SAAS,CAAC7H,CAAD,CAA3B,EAAgC,QAAhC,EAA0C,KAA1C;AACD;AACF;AACF;AACF,SAtBS,CAAV;AAuBD;;AAED,UAAImI,IAAI,GAAG,KAAX;;AAEA,WAAK,IAAInI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8G,MAAL,CAAYsB,gBAAZ,EAApB,EAAoDpI,CAAC,GAAGA,CAAC,GAAG,CAA5D,EAA+D;AAC7D,YACGA,CAAC,GAAG,KAAKoH,eAAT,IACC,KAAKiB,YAAL,GAAoB,KAAKjB,eAD1B,IAECpH,CAAC,GAAG,KAAKsI,WAFX,IAGCtI,CAAC,IAAI,KAAKsI,WAAV,IAAyBtI,CAAC,IAAI,KAAKuI,SAJtC,EAKE;AACA,eAAKvB,GAAL,CAASwB,YAAT,CACEnB,eADF,EAEE,KAAKoB,YAAL,CAAkBzI,CAAlB,EAAqB,KAAK8G,MAAL,CAAYK,SAAjC,CAFF,EAGEK,YAHF;AAKD,SAXD,MAWO;AACL,cAAIxH,CAAC,GAAG,KAAKuI,SAAT,IAAsB,CAACJ,IAA3B,EAAiC;AAC/B,iBAAKnB,GAAL,CAASwB,YAAT,CACEnB,eADF,EAEE,KAAKoB,YAAL,CAAkB,KAAKC,WAAvB,EAAoC,KAAK5B,MAAL,CAAYK,SAAhD,CAFF,EAGEK,YAHF;AAKAW,gBAAI,GAAG,IAAP;AACD;AACF;AACF;AACF;AApGH;AAAA;AAAA,WAsGU,sBAAanI,CAAb,EAAqBmH,SAArB,EAAsC;AAAA;;AAC5C,UAAMwB,OAAO,GAAG,KAAK3B,GAAL,CAAS4B,aAAT,CAAuB,YAAvB,CAAhB;AACA,WAAK5B,GAAL,CAAS6B,QAAT,CAAkBF,OAAlB,EAA2B,cAA3B;AACA,WAAK3B,GAAL,CAASkB,QAAT,CAAkBS,OAAlB,EAA2B,QAA3B,EAAqC,IAArC;AAEA,UAAMG,SAAS,GAAGC,KAAK,CAAC/I,CAAD,CAAL,GAAW,KAAK0I,WAAhB,GAA8B,EAAE1I,CAAC,GAAG,CAAN,CAAhD;AACA,UAAMgJ,IAAI,GAAG,KAAKhC,GAAL,CAASiC,UAAT,CAAoBH,SAAS,GAAG,EAAhC,CAAb;AAEA,WAAK9B,GAAL,CAAS6B,QAAT,CAAkBF,OAAlB,EAA2B,iBAA3B;;AACA,cAAQ3I,CAAR;AACE,aAAKmH,SAAL;AACE,eAAKH,GAAL,CAASkC,YAAT,CAAsBP,OAAtB,EAA+B,UAA/B,EAA2C,UAA3C;AACA;;AACF,aAAK,KAAKD,WAAV;AACE,eAAK1B,GAAL,CAASmC,MAAT,CAAgBR,OAAhB,EAAyB,OAAzB,EAAkC,YAAK;AACrC,kBAAI,CAACzB,UAAL,CAAgB,MAAI,CAACmB,YAAL,GAAoB,MAAI,CAACjB,eAAzC;AACD,WAFD;AAGA;;AACF;AACE,eAAKJ,GAAL,CAASmC,MAAT,CAAgBR,OAAhB,EAAyB,OAAzB,EAAkC,YAAK;AACrC,kBAAI,CAACzB,UAAL,CAAgBlH,CAAhB;AACD,WAFD;AAGA;AAbJ;;AAgBA,WAAKgH,GAAL,CAASoC,WAAT,CAAqBT,OAArB,EAA8BK,IAA9B,EAzB4C,CA0B5C;;AACA,WAAKtB,QAAL,CAAczI,IAAd,CAAmB0J,OAAnB;;AACA,aAAOA,OAAP;AACD;AAnIH;AAAA;AAAA,WAqIU,yBAAa;AACnB,WAAKL,WAAL,GAAmB,KAAKD,YAAL,GAAoB,KAAKjB,eAAL,GAAuB,CAA9D;AACA,WAAKmB,SAAL,GAAiB,KAAKF,YAAL,GAAoB,KAAKjB,eAAL,GAAuB,CAA5D;AAEA,WAAKiC,gBAAL;AACD;AA1IH;AAAA;AAAA,WA4IU,oBAAWrJ,CAAX,EAAoB;AAC1B,WAAKqI,YAAL,GAAoBrI,CAApB;AACA,WAAK8G,MAAL,CAAYK,SAAZ,GAAwBnH,CAAxB;AACA,WAAKsJ,aAAL;AACD;AAhJH;AAAA;AAAA,WAkJS,2BAAe;AACpB,WAAKA,aAAL;AACD;AApJH;;AAAA;AAAA;;;mBAAa9V,4BAA0BiB,+DAAAA,CAAAA,qEAAAA,OAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,oDAAAA;AAAA;;;QAA1BjB;AAA0BgG;AAAA+P;AAAAC;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACbvC;;AAKO,IAAM7V,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,eAAMuD,KAAN,EAAgB;AACd,UAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACwS,OAAN,CAAc,GAAd,IAAqB,CAAC,CAAvD,EAA0D;AACxD,YAAMC,GAAG,GAAGzS,KAAK,CAAC0S,KAAN,CAAY,GAAZ,CAAZ;AACA,YAAMC,IAAI,GAAGtU,MAAM,CAACoU,GAAG,CAAC,CAAD,CAAJ,CAAnB;AACA,YAAMG,KAAK,GAAGvU,MAAM,CAACoU,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiB,CAA/B;AACA,YAAMI,IAAI,GAAGxU,MAAM,CAACoU,GAAG,CAAC,CAAD,CAAJ,CAAnB;AACA,eAAO,IAAIK,IAAJ,CAASH,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,CAAP;AACD;;AACD,UAAME,SAAS,GAAG,OAAO/S,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC8S,IAAI,CAACE,KAAL,CAAWhT,KAAX,CAAtD;AACA,aAAO6R,KAAK,CAACkB,SAAD,CAAL,GAAmB,IAAnB,GAA0B,IAAID,IAAJ,CAASC,SAAT,CAAjC;AACD;AAXH;AAAA;AAAA,WAYE,gBAAOF,IAAP,EAAmBI,aAAnB,EAAwC;AACtC,UAAIA,aAAa,IAAI,OAArB,EAA8B;AAC5B,YAAIC,GAAG,GAAGL,IAAI,CAACM,OAAL,EAAV;AACA,YAAIP,KAAK,GAAGC,IAAI,CAACO,QAAL,KAAkB,CAA9B;AACA,YAAIT,IAAI,GAAGE,IAAI,CAACQ,WAAL,EAAX;AACA,eAAO,KAAKC,SAAL,CAAeJ,GAAf,IAAsB,GAAtB,GAA4B,KAAKI,SAAL,CAAeV,KAAf,CAA5B,GAAoD,GAApD,GAA0DD,IAAjE;AACD,OALD,MAKO,IAAIM,aAAa,IAAI,YAArB,EAAmC;AACxC,YAAIL,MAAK,GAAGC,IAAI,CAACO,QAAL,KAAkB,CAA9B;;AACA,YAAIT,KAAI,GAAGE,IAAI,CAACQ,WAAL,EAAX;;AACA,eAAO,KAAKC,SAAL,CAAeV,MAAf,IAAwB,GAAxB,GAA8BD,KAArC;AACD,OAJM,MAIA;AACL,eAAOE,IAAI,CAACU,YAAL,EAAP;AACD;AACF;AAzBH;AAAA;AAAA,WA2BU,mBAAUC,CAAV,EAAmB;AACzB,aAAO,CAAC,OAAOA,CAAR,EAAWC,KAAX,CAAiB,CAAC,CAAlB,CAAP;AACD;AA7BH;;AAAA;AAAA,EAAoClB,qEAApC;;;;;8IAAa9V,kBAAciX,KAAdjX;AAAc;AAAA;;;SAAdA;AAAcwS,WAAdxS,cAAc;AAAAyS,cAFb;;AAkCP,IAAMxS,gBAAgB,GAAG;AAC9BsW,OAAK,EAAE;AACLW,aAAS,EAAE;AAAEf,WAAK,EAAE,OAAT;AAAkBD,UAAI,EAAE,SAAxB;AAAmCO,SAAG,EAAE;AAAxC;AADN,GADuB;AAI9BU,SAAO,EAAE;AACP;AACAD,aAAS,EAAE,OAFJ;AAGP;AACAE,kBAAc,EAAE,YAJT;AAKPC,iBAAa,EAAE;AAAEnB,UAAI,EAAE,SAAR;AAAmBC,WAAK,EAAE,MAA1B;AAAkCM,SAAG,EAAE;AAAvC,KALR;AAMPa,sBAAkB,EAAE;AAAEpB,UAAI,EAAE,SAAR;AAAmBC,WAAK,EAAE;AAA1B;AANb;AAJqB,CAAzB","sources":["./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/pages/users/center-branches/center-branches.component.ts","./src/app/dashboard/pages/users/center-branches/center-branches.component.html","./src/app/dashboard/pages/users/functions-setup/functions-setup.component.ts","./src/app/dashboard/pages/users/functions-setup/functions-setup.component.html","./src/app/dashboard/pages/users/parents/parents-children/parents-children.component.ts","./src/app/dashboard/pages/users/parents/parents-children/parents-children.component.html","./src/app/dashboard/pages/users/parents/parents-index/parents-index.component.ts","./src/app/dashboard/pages/users/parents/parents-index/parents-index.component.html","./src/app/dashboard/pages/users/roles/add-role/add-role.component.ts","./src/app/dashboard/pages/users/roles/add-role/add-role.component.html","./src/app/dashboard/pages/users/roles/role-functions/role-functions.component.html","./src/app/dashboard/pages/users/roles/role-functions/role-functions.component.ts","./src/app/dashboard/pages/users/teachers/add-teacher-subjects/add-teacher-subjects.component.ts","./src/app/dashboard/pages/users/teachers/add-teacher-subjects/add-teacher-subjects.component.html","./src/app/dashboard/pages/users/teachers/teachers-index/teachers-index.component.ts","./src/app/dashboard/pages/users/teachers/teachers-index/teachers-index.component.html","./src/app/dashboard/pages/users/user-branches-roles/user-branches-roles.component.ts","./src/app/dashboard/pages/users/user-branches-roles/user-branches-roles.component.html","./src/app/dashboard/pages/users/users-add-index/users-add-index.component.ts","./src/app/dashboard/pages/users/users-add-index/users-add-index.component.html","./src/app/dashboard/services/users/branches.service.ts","./src/app/dashboard/services/users/functions.service.ts","./src/app/dashboard/services/users/parent-child.service.ts","./src/app/dashboard/services/users/roles.service.ts","./src/app/dashboard/services/users/users.service.ts","./src/app/shared/directives/mat-paginator-style.directive.ts","./src/app/shared/validators/date.adapter.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { ParentsChildrenComponent } from \"./pages/users/parents/parents-children/parents-children.component\";\r\nimport { ParentsIndexComponent } from \"./pages/users/parents/parents-index/parents-index.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport { AddTeacherSubjectsComponent } from \"./pages/users/teachers/add-teacher-subjects/add-teacher-subjects.component\";\r\nimport { TeachersIndexComponent } from \"./pages/users/teachers/teachers-index/teachers-index.component\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { UsersIndexComponent } from \"./pages/users/users-add-index/users-add-index.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"users-index\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"users-index\",\r\n    component: UsersIndexComponent,\r\n  },\r\n\r\n  {\r\n    path: \"user-roles-branches/:userId/:roleId\",\r\n    component: UserBranchesRolesComponent,\r\n  },\r\n\r\n  {\r\n    path: \"functions\",\r\n    component: FunctionsSetupComponent,\r\n  },\r\n\r\n  {\r\n    path: \"center-branches\",\r\n    component: CenterBranchesComponent,\r\n  },\r\n\r\n  {\r\n    path: \"roles\",\r\n    component: AddRoleComponent,\r\n  },\r\n  {\r\n    path: \"role-fuctions/:roleId\",\r\n    component: RoleFunctionsComponent,\r\n  },\r\n\r\n  {\r\n    path: \"parents\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n      {\r\n        path: \"index\",\r\n        component: ParentsIndexComponent,\r\n      },\r\n      {\r\n        path: \"parent-children/:parentId\",\r\n        component: ParentsChildrenComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"teachers\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n      {\r\n        path: \"index\",\r\n        component: TeachersIndexComponent,\r\n      },\r\n      {\r\n        path: \"teacher-subjects/:teacherId\",\r\n        component: AddTeacherSubjectsComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  // {\r\n  //   path: \"setup\",\r\n  //   loadChildren: () =>\r\n  //     import(\"./pages/setup/setup.module\").then((m) => m.SetupModule),\r\n  // },\r\n\r\n  {\r\n    path: \"educational-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/educational-setup/educational-setup.module\").then(\r\n        (m) => m.EducationalSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"general-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/general-setup/general-setup.module\").then(\r\n        (m) => m.GeneralSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"financial-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/financial-setup/financial-setup.module\").then(\r\n        (m) => m.FinancialSetupModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"curricula-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/curricula-setup/curricula-setup.module\").then(\r\n        (m) => m.CurriculaSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"students\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/student/student-application.module\").then(\r\n        (m) => m.StudentApplicationModule\r\n      ),\r\n  },\r\n  {\r\n    path: \"financial\",\r\n    loadChildren: () =>\r\n      import(\"./pages/Financial/financial.module\").then(\r\n        (m) => m.FinancialModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"exams-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/exams-setup/exams.module\").then(\r\n        (m) => m.ExamsModule\r\n      ),\r\n  },\r\n\r\n  /* employees */\r\n  {\r\n    path: \"employees\",\r\n    loadChildren: () =>\r\n      import(\"./pages/employees/employees.module\").then(\r\n        (m) => m.EmployeesModule\r\n      ),\r\n  },\r\n\r\n  /* educational tabels */\r\n  {\r\n    path: \"educational-tabels\",\r\n    loadChildren: () =>\r\n      import(\"./pages/educational-tabels/educational-tabels.module\").then(\r\n        (m) => m.EducationalTabelsModule\r\n      ),\r\n  },\r\n  /*control*/\r\n  {\r\n    path: \"control\",\r\n    loadChildren: () =>\r\n      import(\"./pages/control/control.module\").then((m) => m.ControlModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"./../shared/shared.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MatPaginatorStyleDirective } from \"app/shared/directives/mat-paginator-style.directive\";\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { ParentsIndexComponent } from \"./pages/users/parents/parents-index/parents-index.component\";\r\nimport { ParentsChildrenComponent } from \"./pages/users/parents/parents-children/parents-children.component\";\r\nimport { UsersIndexComponent } from \"./pages/users/users-add-index/users-add-index.component\";\r\nimport { TeachersIndexComponent } from './pages/users/teachers/teachers-index/teachers-index.component';\r\nimport { AddTeacherSubjectsComponent } from './pages/users/teachers/add-teacher-subjects/add-teacher-subjects.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [\r\n    UsersIndexComponent,\r\n    UserBranchesRolesComponent,\r\n    FunctionsSetupComponent,\r\n    CenterBranchesComponent,\r\n    MatPaginatorStyleDirective,\r\n    AddRoleComponent,\r\n    RoleFunctionsComponent,\r\n    ParentsIndexComponent,\r\n    ParentsChildrenComponent,\r\n    TeachersIndexComponent,\r\n    AddTeacherSubjectsComponent,\r\n\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class DashboardModule {}\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport {\r\n  IBranchModel,\r\n  IDistrictDropModel,\r\n  IBranchesViewModel,\r\n  IAddEditBranchModel,\r\n} from \"app/dashboard/models/users/function\";\r\nimport { BranchesService } from \"app/dashboard/services/users/branches.service\";\r\n\r\n@Component({\r\n  selector: \"app-center-branches\",\r\n  templateUrl: \"./center-branches.component.html\",\r\n  styleUrls: [\"./center-branches.component.scss\"],\r\n})\r\nexport class CenterBranchesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  EduCompId: any;\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCount: number = 0;\r\n\r\n  branches: IBranchModel[] = [];\r\n  districts: IDistrictDropModel[] = [];\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchId\");\r\n  }\r\n  get branchNameCtrl() {\r\n    return this.myForm.get(\"branchName\");\r\n  }\r\n  //get addressCtrl() { return this.myForm.get('address'); }\r\n  get districtIdCtrl() {\r\n    return this.myForm.get(\"districtId\");\r\n  }\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  displayedColumns: string[] = [\"#\", \"name\", \"region\", \"actions\"];\r\n  dataSource: MatTableDataSource<IBranchModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private branchService: BranchesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //console.log(`row Functions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchId: [0],\r\n      branchName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      //address: [null],\r\n      districtId: [\"\", Validators.required],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchService\r\n      .getAllDistricts<IDistrictDropModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"districts: \", response);\r\n          this.districts = response;\r\n        }\r\n      });\r\n\r\n    this.getAllBranches(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.getAllBranches(1);\r\n    });\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllBranches(pageNumber: number) {\r\n    this.spinner.show();\r\n    console.log(\"Educom\", this.EduCompId);\r\n    this.branchService\r\n      .getAllAllCenterBranches<IBranchesViewModel>(this.EduCompId, pageNumber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"branches: \", response);\r\n          this.branches = response.centerBrnachesList;\r\n          this.dataSource = new MatTableDataSource(response.centerBrnachesList);\r\n          this.itemsCount = response.itemsCount;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editBranch(branch: IBranchModel) {\r\n    this.branchIdCtrl?.setValue(branch.Id);\r\n    this.branchNameCtrl?.setValue(branch.Name);\r\n    //this.addressCtrl?.setValue(branch.address);\r\n    this.districtIdCtrl?.setValue(branch.districtId);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeBranch(branch: IBranchModel) {\r\n    this.spinner.show();\r\n    this.branchService.deleteBranch(branch.Id).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"user: \", response);\r\n        this.getAllBranches(1);\r\n        this.msg.success(\"تم مسح الفرع بنجاح\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditBranchModel;\r\n      obj.Id = this.branchIdCtrl?.value;\r\n      obj.Name = this.branchNameCtrl?.value;\r\n      obj.districtId = this.districtIdCtrl?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n\r\n      //  console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.branchService\r\n        .addEditBranches<IAddEditBranchModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n\r\n          if (response && response.returnValue === 200) {\r\n            this.addBtn.nativeElement.innerText = \"Add\";\r\n            // console.log(\"created: \", response);\r\n\r\n            // let index = this.branches.findIndex(r => r.Id == response.Id);\r\n            // if (index === -1) {\r\n            //   this.msg.success(\"تم إنشاء الصلاحيه بنجاح\");\r\n            //   this.branches.push(response.branch);\r\n            // } else {\r\n            //   this.branches[index] = response.branch;\r\n            //   this.msg.success(\"تم تعديل الصلاحيه بنجاح\");\r\n            // }\r\n\r\n            this.getAllBranches(1);\r\n            this.msg.success(\"تم إضافه/تعديل البيانات الفرع بنجاح\");\r\n            this.myForm.reset();\r\n            //console.log(\"branches: \", this.branches);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(branch: IBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateCenterBranch\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"branchName\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        branchNameCtrl.invalid &&\r\n                        (branchNameCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          branchNameCtrl.errors?.required ||\r\n                          branchNameCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Region\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"districtId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let dis of districts\"\r\n                        [value]=\"dis.Id\"\r\n                      >\r\n                        {{ dis.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        districtIdCtrl.invalid &&\r\n                        (districtIdCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"districtIdCtrl.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.CenterBranches\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">{{ branch.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- region Column -->\r\n            <ng-container matColumnDef=\"region\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Region\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.districtName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editBranch(branch)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(branch)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllBranches($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"./../../../../shared/validators/customeValid.validator\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport {\r\n  IFunctionViewModel,\r\n  IAddEditFunctionModel,\r\n} from \"app/dashboard/models/users/function\";\r\nimport { IFunctionsModel } from \"app/dashboard/models/users/roles\";\r\nimport { FunctionsService } from \"app/dashboard/services/users/functions.service\";\r\nimport { RolesService } from \"app/dashboard/services/users/roles.service\";\r\n\r\n@Component({\r\n  selector: \"app-functions-setup\",\r\n  templateUrl: \"./functions-setup.component.html\",\r\n  styleUrls: [\"./functions-setup.component.scss\"],\r\n})\r\nexport class FunctionsSetupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  itemsCount: any;\r\n  functions: IFunctionsModel[] = [];\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  get functionIdCtrl() {\r\n    return this.myForm.get(\"functionId\");\r\n  }\r\n  get functionNameEnCtrl() {\r\n    return this.myForm.get(\"functionNameEn\");\r\n  }\r\n  get functionNameArCtrl() {\r\n    return this.myForm.get(\"functionNameAr\");\r\n  }\r\n  get linkCtrl() {\r\n    return this.myForm.get(\"link\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\"#\", \"arName\", \"enName\", \"link\", \"actions\"];\r\n  dataSource: MatTableDataSource<IFunctionsModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private functionService: FunctionsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      functionId: [0],\r\n      functionNameEn: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      functionNameAr: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      link: [null],\r\n    });\r\n\r\n    this.getAllFunctions(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllFunctions(pageNumber: number) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IFunctionViewModel>(pageNumber, false)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"functions: \", response);\r\n          this.functions = response.functions;\r\n          this.dataSource = new MatTableDataSource(response.functions);\r\n          this.itemsCount = response.itemsCount;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editFunction(func: IFunctionsModel) {\r\n    this.functionIdCtrl?.setValue(func.Id);\r\n    this.functionNameEnCtrl?.setValue(func.function_en_name);\r\n    this.functionNameArCtrl?.setValue(func.functionName);\r\n    this.linkCtrl?.setValue(func.functionURL);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeFunction(func: IFunctionsModel) {\r\n    this.spinner.show();\r\n    this.functionService.deleteFunction(func.Id).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"function: \", response);\r\n        this.getAllFunctions(1);\r\n        this.msg.success(\"تم مسح الوظيفه بنجاح\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditFunctionModel;\r\n      obj.Id = this.functionIdCtrl?.value;\r\n      obj.functionName = this.functionNameArCtrl?.value;\r\n      obj.function_en_name = this.functionNameEnCtrl?.value;\r\n      obj.functionURL = this.linkCtrl?.value;\r\n\r\n      // console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.functionService\r\n        .addEditFunction<IAddEditFunctionModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.addBtn.nativeElement.innerText = \"Add\";\r\n          this.submitted = false;\r\n          if (response && response.returnValue === 200) {\r\n            //console.log(\"created: \", response);\r\n\r\n            this.getAllFunctions(1);\r\n            this.msg.success(\"تم إضافه/تعديل البيانات الوظيفه بنجاح\");\r\n            this.myForm.reset();\r\n            // console.log(\"functions: \", this.functions);\r\n          }\r\n          this.spinner.show();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(func: IFunctionsModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeFunction(func);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateFunction\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameAr\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameArCtrl.invalid &&\r\n                        (functionNameArCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameArCtrl.errors?.required ||\r\n                          functionNameArCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameEn\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameEnCtrl.invalid &&\r\n                        (functionNameEnCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameEnCtrl.errors?.required ||\r\n                          functionNameEnCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Link\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"link\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Functions\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- arName Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.function_en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- link Column -->\r\n            <ng-container matColumnDef=\"link\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Link\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionURL }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let func\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editFunction(func)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(func)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllFunctions($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { IChildrenListVM } from \"app/dashboard/models/users/parents\";\r\nimport { ParentChildService } from \"app/dashboard/services/users/parent-child.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { IChildAddVM, IChildVM } from \"app/dashboard/models/users/parents\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-parents-children\",\r\n  templateUrl: \"./parents-children.component.html\",\r\n  styleUrls: [\"./parents-children.component.scss\"],\r\n})\r\nexport class ParentsChildrenComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  parentId: number;\r\n\r\n  displayColumns: string[] = [\"#\", \"name\", \"email\", \"EduYear\", \"actions\"];\r\n  dataSource: MatTableDataSource<IChildVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private ParentChildService: ParentChildService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    public authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.parentId = Number(params.get(\"parentId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getParentChildren(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      name: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(\r\n            /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n          ),\r\n          CustomeValidator.whiteSpace,\r\n        ],\r\n      ],\r\n      eduYearId: [\"\", [Validators.required]],\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getParentChildren(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getParentChildren(page: number) {\r\n    this.dataSource = new MatTableDataSource([\r\n      {\r\n        Id: 1,\r\n        email: \"dds@ff.cc\",\r\n        name: \"hh\",\r\n        eduYearId: 1,\r\n        parentId: 2,\r\n        eduYear_ar_name: \"Ss\",\r\n        eduYear_en_name: \"dfds\",\r\n      },\r\n    ]);\r\n    this.spinner.show();\r\n    this.ParentChildService.getParentChildren(page).subscribe(\r\n      (res: IChildrenListVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.list);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let parent: IChildAddVM = {\r\n      parentId: this.parentId,\r\n      name: this.FormCtrls.name.value,\r\n      email: this.FormCtrls.email.value,\r\n      eduYearId: this.FormCtrls.eduYearId.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.ParentChildService.AssignChildToParent(parent).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.dataSource.data.unshift(res);\r\n            this.itemsCounts++;\r\n            this.dataSource.sort = this.sort;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n            this.clearForm();\r\n          }\r\n          if (res.returnValue == 0) this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(parent: IChildVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: parent.name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteParent(parent);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Stage\r\n  deleteParent(parent: IChildVM) {\r\n    this.ParentChildService.deleteChild(parent.parentId, parent.Id).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == parent);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (parent.parentId == this.FormCtrls.id.value) this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  resendEmail(parent: IChildVM) {\r\n    this.spinner.show();\r\n    this.ParentChildService.resendEmail(parent.parentId, parent.Id).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1)\r\n          this.toastr.success(\"General.ResendSuccessfully\");\r\n        else this.toastr.error(\"General.TosterErrorMessage\");\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.AddChild\" | translate }}\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/parents/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"name\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.name.invalid &&\r\n                        (FormCtrls.name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.name.errors?.required ||\r\n                          FormCtrls.name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.name.errors?.pattern\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.email.invalid &&\r\n                        (FormCtrls.email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        Enter correct Email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-educational-year-dropdown\r\n                    [control]=\"FormCtrls.eduYearId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-educational-year-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n        <!-- <button\r\n          *ngIf=\"FormCtrls.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.Children\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- EduYear Column -->\r\n            <ng-container matColumnDef=\"EduYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\" ? ele.eduYear_ar_name : ele.eduYear_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Resend'\"\r\n                    (click)=\"resendEmail(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'GeneralSetup.resend' | translate }}\"\r\n                  >\r\n                    <i class=\"fa fa-paper-plane-o font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!-- appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getParentChildren($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ParentChildService } from \"app/dashboard/services/users/parent-child.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  AddParentModel,\r\n  IParentVM,\r\n  ParentModel,\r\n} from \"app/dashboard/models/users/parents\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-parents-index\",\r\n  templateUrl: \"./parents-index.component.html\",\r\n  styleUrls: [\"./parents-index.component.scss\"],\r\n})\r\nexport class ParentsIndexComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  displayColumns: string[] = [\"#\", \"name\", \"email\", \"mobile\", \"actions\"];\r\n  dataSource: MatTableDataSource<ParentModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private ParentChildService: ParentChildService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    public authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getParents(1);\r\n\r\n    this.myForm = this.fb.group(\r\n      {\r\n        Id: [0],\r\n        name: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n        mobile: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            CustomeValidator.whiteSpace,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n            // Validators.pattern(/^(010|011|012|015)[0-9]{8}$/),\r\n            Validators.maxLength(11),\r\n            Validators.minLength(11),\r\n            CustomeValidator.startsWith,\r\n          ],\r\n        ],\r\n        email: [\"\", [Validators.required, Validators.email]],\r\n        account_password: [\r\n          \"\",\r\n          [Validators.required, CustomeValidator.whiteSpace],\r\n        ],\r\n        confPassword: [\"\", [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\r\n          \"account_password\",\r\n          \"confPassword\"\r\n        ),\r\n      } as AbstractControlOptions\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getParents(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getParents(page: number) {\r\n    this.dataSource = new MatTableDataSource([\r\n      {\r\n        email: \"gg@dd.nn\",\r\n        mobile: \"01258541256\",\r\n        name: \"gg\",\r\n        userId: 1,\r\n        parentId: 50,\r\n      },\r\n    ]);\r\n    this.spinner.show();\r\n    this.ParentChildService.getParents(page).subscribe((res: IParentVM) => {\r\n      if (res) {\r\n        this.dataSource = new MatTableDataSource(res.list);\r\n        this.itemsCounts = res.countItems;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getParentToEdit(parent: ParentModel) {\r\n    this.myForm.patchValue(parent);\r\n    this.FormCtrls.Id.setValue(parent.parentId);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let parent: AddParentModel = {\r\n      Id: this.FormCtrls.Id.value,\r\n      name: this.FormCtrls.name.value,\r\n      userTypeId: 3,\r\n      mobile: this.FormCtrls.mobile.value,\r\n      email: this.FormCtrls.email.value,\r\n      account_password: this.FormCtrls.account_password.value,\r\n      confPassword: this.FormCtrls.confPassword.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.ParentChildService.addUpdateParent(parent).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          if (parent.Id == 0) {\r\n            this.dataSource.data.unshift(res);\r\n            this.itemsCounts++;\r\n          } else {\r\n            let index = this.dataSource.data.findIndex(\r\n              (e) => e.userId == res.userId\r\n            );\r\n            this.dataSource.data[index] = res;\r\n          }\r\n          this.dataSource.sort = this.sort;\r\n          this.toastr.success(\r\n            res.id == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n          this.clearForm();\r\n        }\r\n        if (res.returnValue == 0) {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // updateUser() {\r\n  //   this.submitted = true;\r\n  //   let valid = this.myForm.valid;\r\n  //   if (valid) {\r\n  //     this.spinner.show();\r\n  //     this.GeneralService.updateUser(\r\n  //       this.FormCtrl.Id.value,\r\n  //       this.myForm.value\r\n  //     ).subscribe((res: any) => {\r\n  //       if (res.returnValue == 1) {\r\n  //         this.myForm.reset();\r\n  //         this.submitted = false;\r\n  //         this.getParents();\r\n  //         this.toastr.success(\"Updated\");\r\n  //       }\r\n  //       if (res.returnValue == 0) {\r\n  //         this.toastr.error(res.returnString);\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  openDeleateDialog(parent: ParentModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: parent.name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteParent(parent);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Stage\r\n  deleteParent(parent: ParentModel) {\r\n    this.ParentChildService.deleteParent(parent.parentId).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == parent);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (parent.parentId == this.FormCtrls.id.value) this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.Id.value == 0\r\n            ? \"GeneralSetup.AddParent\"\r\n            : \"GeneralSetup.UpdateParent\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"name\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.name.invalid &&\r\n                        (FormCtrls.name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.name.errors?.required ||\r\n                          FormCtrls.name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.name.errors?.pattern\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.mobile.invalid &&\r\n                        (FormCtrls.mobile.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.mobile.errors?.required ||\r\n                          FormCtrls.mobile.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls?.mobile?.errors?.pattern\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.mobile.errors?.minlength ||\r\n                          FormCtrls.mobile.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.mobile.errors?.startsWith\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.email.invalid &&\r\n                        (FormCtrls.email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        Enter correct Email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Password\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"account_password\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_password.invalid &&\r\n                        (FormCtrls.account_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ConfirmPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"confPassword\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.confPassword.invalid &&\r\n                        (FormCtrls.confPassword.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.confPassword.errors?.mustMatch\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        New Password and Confirm Password not match\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.confPassword.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.Id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls.Id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"GeneralSetup.Parents\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"getParentToEdit(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Children'\"\r\n                    routerLink=\"../parent-children/{{ ele.parentId }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"{{ 'GeneralSetup.Children' | translate }}\"\r\n                  >\r\n                    <i class=\"fa fa-users font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!-- appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getParents($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { IRolesViewModel } from \"app/dashboard/models/users/roles\";\r\nimport { RolesService } from \"app/dashboard/services/users/roles.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-role\",\r\n  templateUrl: \"./add-role.component.html\",\r\n  styleUrls: [\"./add-role.component.scss\"],\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  roles: IRolesViewModel[] = [];\r\n  EduCompId: any;\r\n  get roleIdCtrl() {\r\n    return this.myForm.get(\"roleId\");\r\n  }\r\n  get roleNameCtrl() {\r\n    return this.myForm.get(\"roleName\");\r\n  }\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  displayedColumns: string[] = [\"#\", \"Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<IRolesViewModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      roleId: [0],\r\n      roleName: [null, [Validators.required]],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllRoles<IRolesViewModel[]>(this.EduCompIdCtrl.value)\r\n      .subscribe((response) => {\r\n        this.spinner.hide();\r\n        if (response) {\r\n          console.log(\"roles init: \", response);\r\n          this.roles = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.roleService\r\n        .getAllRoles<IRolesViewModel[]>(this.EduCompIdCtrl.value)\r\n        .subscribe((response) => {\r\n          this.spinner.hide();\r\n          if (response) {\r\n            console.log(\"roles after init: \", response);\r\n            this.roles = response;\r\n            this.dataSource = new MatTableDataSource(response);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editRole(role: IRolesViewModel) {\r\n    this.roleIdCtrl?.setValue(role.Id);\r\n    this.roleNameCtrl?.setValue(role.roleName);\r\n    this.EduCompIdCtrl.setValue(role.EduCompId);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeRole(role: IRolesViewModel) {\r\n    this.spinner.show();\r\n    this.roleService.deleteRole(role.Id).subscribe((response: any) => {\r\n      if (response.returnString == \"Success\") {\r\n        //  console.log(\"roles: \", response);\r\n        let index = this.dataSource.data.findIndex((r) => r.Id == role.Id);\r\n        this.dataSource.data.splice(index, 1);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.msg.success(\"تم مسح الصلاحيه بنجاح\");\r\n      } else this.msg.warning(response.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.roleNameCtrl?.value) {\r\n      this.msg.warning(\"يرجي إدخال اسم الصلاحيه\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IRolesViewModel;\r\n      obj.Id = this.roleIdCtrl?.value;\r\n      obj.roleName = this.roleNameCtrl.value;\r\n      obj.EduCompId = this.EduCompIdCtrl.value;\r\n      console.log(\"role model\", obj);\r\n      this.roleService\r\n        .addEditRole<IRolesViewModel, any>(obj)\r\n        .subscribe((response) => {\r\n          if (response && response.returnValue === 200) {\r\n            // console.log(\"created: \", response);\r\n\r\n            let index = this.roles.findIndex((r) => r.Id == response.role.Id);\r\n            if (index === -1) {\r\n              this.msg.success(\"تم إنشاء الصلاحيه بنجاح\");\r\n              this.dataSource.data.push(response.role);\r\n              this.dataSource.paginator = this.paginator;\r\n            } else {\r\n              this.roles[index] = response.role;\r\n              this.msg.success(\"تم تعديل الصلاحيه بنجاح\");\r\n            }\r\n            this.myForm.reset();\r\n            // console.log(\"roles: \", this.roles);\r\n          }\r\n          this.addBtn.nativeElement.innerText = \"Add\";\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(role: IRolesViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: role.roleName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeRole(role);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRole\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"roleName\" />\r\n                    <mat-error *ngIf=\"roleNameCtrl.errors?.required\">\r\n                      {{ \"labels.mustEnterValue\" | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Roles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let role\">{{ role.roleName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let role\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editRole(role)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(role)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/role-fuctions/{{ role.Id }}\"\r\n                    [queryParams]=\"{ parentId: functionId, functionId: fun.Id }\"\r\n                    *ngIf=\"fun.functionName === 'Functions'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"add functions\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRoleFunctions\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n\r\n              <div class=\"col-12\">\r\n                <mat-checkbox [checked]=\"allChecked\" (change)=\"SelectAll()\" color='accent' class=\"mb-1\">\r\n                  {{ \"General.SelectAll\" | translate }}\r\n                </mat-checkbox>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\" *ngFor=\"let group of groupFunctions\">\r\n                <mat-card>\r\n                  <mat-card-title>{{group.classificationName |translate}}</mat-card-title>\r\n                  <mat-card-content>\r\n                    <div class=\"row\">\r\n                      <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                      <div class=\"col-12 col-xl-6\" *ngFor=\"let func of group.functions; let i = index\">\r\n                        <mat-checkbox id=\"functions{{ func.Id }}\" (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                          [checked]=\"functionIds.includes(func.Id)\">\r\n                          {{ func.functionName | translate }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-card>\r\n                  <mat-card-title>التقارير</mat-card-title>\r\n                  <mat-card-content>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-12 col-xl-6\" *ngFor=\"let report of reports; let i = index\">\r\n                        <mat-checkbox id=\"report{{ report.ReportId }}\" (change)=\"onReportTogle(report.ReportId, $event)\"\r\n                          [checked]=\"selectedReportsIds.includes(report.ReportId)\">\r\n                          {{ report.ReportNameAr | translate }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button #addBtn mat-raised-button class=\"btn btn-primary\" (click)=\"onAddFunctions()\">\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionsModel,\r\n  IGroupFunctionsModel,\r\n  IReport,\r\n  IRoleFunctionsModel,\r\n  IAddEditRoleFunctionsModel,\r\n} from \"app/dashboard/models/users/roles\";\r\nimport { RolesService } from \"app/dashboard/services/users/roles.service\";\r\n\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-role-functions\",\r\n  templateUrl: \"./role-functions.component.html\",\r\n  styleUrls: [\"./role-functions.component.scss\"],\r\n})\r\nexport class RoleFunctionsComponent implements OnInit {\r\n  roleId: any;\r\n  functions: IFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsModel[] = [];\r\n  reports: IReport[] = [];\r\n  ownerReports: IReport[] = [];\r\n  roleFunctions: IRoleFunctionsModel[] = [];\r\n  functionIds: number[] = [];\r\n  selectedReportsIds: number[] = [];\r\n  roleName: string = \"\";\r\n  allChecked: boolean = false;\r\n  allFunctionsLength = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.roleId = param.get(\"roleId\");\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllFunctions();\r\n    this.getAllRoleFunctions();\r\n    this.getAllOwnedReportsByRoleId();\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IGroupFunctionsModel[]>(0, true)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //console.log(\"functions: \", response);\r\n          this.groupFunctions = response;\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength =\r\n              this.allFunctionsLength + g.functions.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllOwnedReportsByRoleId() {\r\n    this.roleService\r\n      .getReportsByRoleId<any[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.ownerReports = response;\r\n          for (let i = 0; i < this.ownerReports.length; i++) {\r\n            this.selectedReportsIds.push(this.ownerReports[i].ReportId);\r\n          }\r\n          this.getAllOwnedReports();\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllOwnedReports() {\r\n    this.roleService.getAllOwnedReports<any[]>().subscribe((response) => {\r\n      if (response) {\r\n        this.reports = response;\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllRoleFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllRoleFunctions<IRoleFunctionsModel[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"role functions: \", response);\r\n          this.roleFunctions = response;\r\n          this.roleName = this.roleFunctions[0].roleName;\r\n\r\n          for (let i = 0; i < this.roleFunctions.length; i++) {\r\n            this.functionIds.push(this.roleFunctions[i].function.Id);\r\n          }\r\n\r\n          if (this.functionIds.length === this.allFunctionsLength)\r\n            this.allChecked = true;\r\n          else this.allChecked = false;\r\n          //  console.log(\"edit functions IDs\", this.functionIds);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.functionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.functionIds.findIndex((id) => id === functionId);\r\n      this.functionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  onReportTogle(reportId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.selectedReportsIds.push(reportId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.selectedReportsIds.findIndex((id) => id === reportId);\r\n      this.selectedReportsIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.functions.forEach((e) => {\r\n          let found = this.functionIds.includes(e.Id);\r\n          if (!found) this.functionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.functionIds = [];\r\n    }\r\n  }\r\n\r\n  onAddFunctions() {\r\n    let obj = {} as IAddEditRoleFunctionsModel;\r\n    obj.roleId = this.roleId;\r\n    obj.functionsList = this.functionIds;\r\n    obj.reportsList = this.selectedReportsIds;\r\n    // if (obj.functionsList.length == 0) {\r\n    //   this.msg.warning(\"يجب اختيار ظيفة واحده علي الاقل\");\r\n    //   return;\r\n    //   } else {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .addEditRoleFunctions<IAddEditRoleFunctionsModel, any>(obj)\r\n      .subscribe((response) => {\r\n        if (response && response.returnValue === 200) {\r\n          this.msg.success(\"تم تعديل وظائف الصلاحيه بنجاح\");\r\n          ///  console.log(\"add/edit functions: \", response);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    //  }\r\n  }\r\n}\r\n","import { TeacherService } from \"app/dashboard/services/users/teacher.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  ISubjectTeacherAddVM,\r\n  ISubjectTeacherListVM,\r\n  ISubjectTeacherVM,\r\n} from \"app/dashboard/models/users/teacher\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-add-teacher-subjects\",\r\n  templateUrl: \"./add-teacher-subjects.component.html\",\r\n  styleUrls: [\"./add-teacher-subjects.component.scss\"],\r\n})\r\nexport class AddTeacherSubjectsComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  teacherId: number;\r\n\r\n  displayColumns: string[] = [\"#\", \"EduYear\", \"Course\", \"actions\"];\r\n  dataSource: MatTableDataSource<ISubjectTeacherVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private TeacherService: TeacherService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    public authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.teacherId = Number(params.get(\"teacherId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTeacherCourses(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      EduYear: [\"\", [Validators.required]],\r\n      courseIds: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeacherCourses(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getTeacherCourses(page: number) {\r\n    this.dataSource = new MatTableDataSource([\r\n      {\r\n        courseId: 1,\r\n        course_ar_name: \"dd\",\r\n        course_en_name: \"Aa\",\r\n        eduYearId: 2,\r\n        eduYear_ar_name: \"bjh\",\r\n        eduYear_en_name: \"gvgb\",\r\n        Id: 1,\r\n        teacherId: 3,\r\n      },\r\n    ]);\r\n    this.spinner.show();\r\n    this.TeacherService.getAllTeacherCourses(page).subscribe(\r\n      (res: ISubjectTeacherListVM) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.list);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  getTeacherToEdit(teacher: ISubjectTeacherVM) {\r\n    this.myForm.patchValue(teacher);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let teacher: ISubjectTeacherAddVM = {\r\n      courseId: this.FormCtrls.courseId.value,\r\n      eduYearId: this.FormCtrls.eduYearId.value,\r\n      teacherId: this.teacherId,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.TeacherService.addTeacherCourse(teacher).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.dataSource.data.unshift(res);\r\n          this.itemsCounts++;\r\n\r\n          this.dataSource.sort = this.sort;\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n          this.clearForm();\r\n        }\r\n        if (res.returnValue == 0) {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(teacher: ISubjectTeacherVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg:\r\n            this.curLang == \"ar\"\r\n              ? teacher.course_ar_name\r\n              : teacher.course_en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteTeacher(teacher);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Stage\r\n  deleteTeacher(teacher: ISubjectTeacherVM) {\r\n    this.TeacherService.deleteTeacherCourse(teacher.Id).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == teacher);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (teacher.Id == this.FormCtrls.id.value) this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.AddTeacherSubjects\" | translate }}\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/teachers/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-educational-year-dropdown\r\n                    [control]=\"FormCtrls.EduYear\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-educational-year-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <cources-by-year-dropdown\r\n                    [control]=\"FormCtrls.courseIds\"\r\n                    [submitted]=\"submitted\"\r\n                    [yearControl]=\"FormCtrls.EduYear\"\r\n                    [multiple]=\"true\"\r\n                  ></cources-by-year-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n        <!-- <button\r\n          *ngIf=\"FormCtrls.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"GeneralSetup.TeacherSubjects\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- EduYear Column -->\r\n            <ng-container matColumnDef=\"EduYear\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  curLang == \"ar\" ? ele.eduYear_ar_name : ele.eduYear_en_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Course Column -->\r\n            <ng-container matColumnDef=\"Course\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"EducationalSetup.Course\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.course_ar_name : ele.course_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!-- appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getTeacherCourses($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { TeacherService } from \"app/dashboard/services/users/teacher.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  AddTeacherModel,\r\n  ITeacherVM,\r\n  TeacherModel,\r\n} from \"app/dashboard/models/users/teacher\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-teachers-index\",\r\n  templateUrl: \"./teachers-index.component.html\",\r\n  styleUrls: [\"./teachers-index.component.scss\"],\r\n})\r\nexport class TeachersIndexComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curLang: string;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  displayColumns: string[] = [\"#\", \"name\", \"email\", \"mobile\", \"actions\"];\r\n  dataSource: MatTableDataSource<TeacherModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private TeacherService: TeacherService,\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private translate: TranslateService,\r\n    public authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTeachers(1);\r\n\r\n    this.myForm = this.fb.group(\r\n      {\r\n        Id: [0],\r\n        name: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n        mobile: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            CustomeValidator.whiteSpace,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n            // Validators.pattern(/^(010|011|012|015)[0-9]{8}$/),\r\n            Validators.maxLength(11),\r\n            Validators.minLength(11),\r\n            CustomeValidator.startsWith,\r\n          ],\r\n        ],\r\n        email: [\"\", [Validators.required, Validators.email]],\r\n        account_password: [\r\n          \"\",\r\n          [Validators.required, CustomeValidator.whiteSpace],\r\n        ],\r\n        confPassword: [\"\", [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\r\n          \"account_password\",\r\n          \"confPassword\"\r\n        ),\r\n      } as AbstractControlOptions\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachers(1);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getTeachers(page: number) {\r\n    this.dataSource = new MatTableDataSource([\r\n      {\r\n        email: \"gg@dd.nn\",\r\n        mobile: \"01258541256\",\r\n        name: \"gg\",\r\n        userId: 1,\r\n        teacherId: 50,\r\n      },\r\n    ]);\r\n    this.spinner.show();\r\n    this.TeacherService.getTeachers(page).subscribe((res: ITeacherVM) => {\r\n      if (res) {\r\n        this.dataSource = new MatTableDataSource(res.list);\r\n        this.itemsCounts = res.countItems;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getTeacherToEdit(teacher: TeacherModel) {\r\n    this.myForm.patchValue(teacher);\r\n    this.FormCtrls.Id.setValue(teacher.teacherId);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    let teacher: AddTeacherModel = {\r\n      Id: this.FormCtrls.Id.value,\r\n      name: this.FormCtrls.name.value,\r\n      userTypeId: 3,\r\n      mobile: this.FormCtrls.mobile.value,\r\n      email: this.FormCtrls.email.value,\r\n      account_password: this.FormCtrls.account_password.value,\r\n      confPassword: this.FormCtrls.confPassword.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.TeacherService.addUpdateTeacher(teacher).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          if (teacher.Id == 0) {\r\n            this.dataSource.data.unshift(res);\r\n            this.itemsCounts++;\r\n          } else {\r\n            let index = this.dataSource.data.findIndex(\r\n              (e) => e.userId == res.userId\r\n            );\r\n            this.dataSource.data[index] = res;\r\n          }\r\n          this.dataSource.sort = this.sort;\r\n          this.toastr.success(\r\n            res.id == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n          this.clearForm();\r\n        }\r\n        if (res.returnValue == 0) {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(teacher: TeacherModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: teacher.name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteTeacher(teacher);\r\n      });\r\n  }\r\n\r\n  // Start:Delete Stage\r\n  deleteTeacher(teacher: TeacherModel) {\r\n    this.TeacherService.deleteTeacher(teacher.teacherId).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let index = this.dataSource.data.findIndex((e) => e == teacher);\r\n          this.dataSource.data.splice(index, 1);\r\n          this.dataSource.sort = this.sort;\r\n\r\n          if (teacher.teacherId == this.FormCtrls.id.value) this.clearForm();\r\n\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else {\r\n          this.toastr.error(\"General.TosterErrorMessage\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.Id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.Id.value == 0\r\n            ? \"labels.AddTeacher\"\r\n            : \"labels.UpdateTeacher\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"name\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.name.invalid &&\r\n                        (FormCtrls.name.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.name.errors?.required ||\r\n                          FormCtrls.name.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.name.errors?.pattern\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.mobile.invalid &&\r\n                        (FormCtrls.mobile.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.mobile.errors?.required ||\r\n                          FormCtrls.mobile.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls?.mobile?.errors?.pattern\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.mobile.errors?.minlength ||\r\n                          FormCtrls.mobile.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.mobile.errors?.startsWith\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.email.invalid &&\r\n                        (FormCtrls.email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        Enter correct Email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Password\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"account_password\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_password.invalid &&\r\n                        (FormCtrls.account_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ConfirmPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"confPassword\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.confPassword.invalid &&\r\n                        (FormCtrls.confPassword.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.confPassword.errors?.mustMatch\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        New Password and Confirm Password not match\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.confPassword.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"FormCtrls?.Id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls.Id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"FormCtrls.Id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Teachers\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let ele\"\r\n                class=\"text-center px-3 actions\"\r\n              >\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"getTeacherToEdit(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Subjects'\"\r\n                    routerLink=\"../teacher-subjects/{{ ele.teacherId }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"{{ 'EducationalSetup.addCourses' | translate }}\"\r\n                  >\r\n                    <i class=\"fa fa-book font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!-- appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getTeachers($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { GroupByService } from \"./../../../../shared/services/General/group-by.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { IGroupFunctionsListVM } from \"app/dashboard/models/users/roles\";\r\nimport {\r\n  IBranchViewModel,\r\n  IUserBranchModel,\r\n  IUserBranchFunctionViewModel,\r\n  IAddUserBranchFunctionsModel,\r\n  IBranchUserModel,\r\n  IUserFunctionModel,\r\n} from \"app/dashboard/models/users/user\";\r\nimport { RolesService } from \"app/dashboard/services/users/roles.service\";\r\nimport { UsersService } from \"app/dashboard/services/users/users.service\";\r\n\r\n@Component({\r\n  selector: \"app-user-branches-roles\",\r\n  templateUrl: \"./user-branches-roles.component.html\",\r\n  styleUrls: [\"./user-branches-roles.component.scss\"],\r\n})\r\nexport class UserBranchesRolesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  userId: number;\r\n  roleId: number;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  allFunctionsLength = 0;\r\n  submitted: boolean = false;\r\n  allChecked: boolean = false;\r\n  branches: IBranchViewModel[] = [];\r\n  // functions: IRoleFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsListVM[] = [];\r\n  functionIds: number[] = [];\r\n  checkedfunctionIds: number[] = [];\r\n  rowFunctions: IRowFunctionVM[];\r\n  userBranchesWithFunctions: IUserBranchModel[] = [];\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"branchName\",\r\n    \"FunctionName\",\r\n    \"from\",\r\n    \"to\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserBranchModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: ToastrService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    private roleService: RolesService,\r\n    private groupByService: GroupByService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.userId = Number(param.get(\"userId\"));\r\n      this.roleId = Number(param.get(\"roleId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchsIds\");\r\n  }\r\n  get fromDateCtrl() {\r\n    return this.myForm.get(\"fromDate\");\r\n  }\r\n  get toDateCtrl() {\r\n    return this.myForm.get(\"toDate\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchsIds: [[]],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n    });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    this.getAllBranchesByCenter();\r\n    this.getAllFunctions();\r\n    this.getAllUserBranchesWithFunctions();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllBranchesByCenter() {\r\n    this.spinner.show();\r\n    this.userService\r\n      .getAllBranchesByCenter<IBranchViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"branches: \", response);\r\n          this.branches = response;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctionsByRoleId<IGroupFunctionsListVM[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"functions by roleId: \", response);\r\n          this.groupFunctions = this.groupByService.groupBy(\r\n            response,\r\n            \"classificationName\"\r\n          );\r\n\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength = this.allFunctionsLength + g.List.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.functionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.functionIds.findIndex((id) => id === functionId);\r\n      this.functionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.List.forEach((e) => {\r\n          let found = this.functionIds.includes(e.Id);\r\n          if (!found) this.functionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.functionIds = [];\r\n    }\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllUserBranchesWithFunctions<IUserBranchFunctionViewModel>(\r\n        this.userId\r\n      )\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //   console.log(\"brances with functions for user: \", response);\r\n          this.userBranchesWithFunctions = response.branchUserList;\r\n          this.dataSource = new MatTableDataSource(response.branchUserList);\r\n          for (let funParent of this.userBranchesWithFunctions) {\r\n            for (let fun of funParent.roleFunctionsList) {\r\n              this.checkedfunctionIds.push(fun.Id);\r\n            }\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeBranch(branch: IUserBranchModel) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserBranchRoleFunction(this.userId, branch.branchId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"remove brances with functions: \", response);\r\n          let i = this.dataSource.data.findIndex((e) => (e = branch));\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"branch has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onDeleteFunction(func: any) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserRoleFunctions(func.centerBranchUserFuncId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"remove function: \", response);\r\n          this.getAllUserBranchesWithFunctions();\r\n          this.msg.success(\"function has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // console.log(this.branchIdCtrl?.value);\r\n    if (this.functionIds.length <= 0) {\r\n      this.msg.warning(\"Must select at least one function\");\r\n      return;\r\n    }\r\n\r\n    if (this.branchIdCtrl?.value.length == 0) {\r\n      this.msg.warning(\"Must select at least one branch\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddUserBranchFunctionsModel;\r\n      obj.roleFunctionsIds = this.functionIds;\r\n      obj.branchsIds = this.branchIdCtrl?.value;\r\n      obj.branchUser = {} as IBranchUserModel;\r\n      obj.branchUser.userId = this.userId;\r\n      obj.branchUser.branchId = 0;\r\n      obj.branchUser.from = this.datePipe.transform(this.fromDateCtrl.value);\r\n      obj.branchUser.to = this.datePipe.transform(this.toDateCtrl.value);\r\n\r\n      this.roleService\r\n        .addUserBranchesAndRoleFunctions(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n          if (response) {\r\n            //console.log(\"add new branch with functions: \", response);\r\n            this.getAllUserBranchesWithFunctions();\r\n            this.msg.success(\"branch has been added success\");\r\n            this.myForm.reset();\r\n            this.functionIds = [];\r\n            this.checkedfunctionIds = [];\r\n            this.allChecked = false;\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(branch: IUserBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.branchName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n\r\n  openDeleateFunctionDialog(func: IUserFunctionModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.onDeleteFunction(func);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddUserBranchesAndRoles\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchsIds\" multiple>\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option>\r\n                      <mat-option *ngFor=\"let branch of branches\" [value]=\"branch.Id\">\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n\r\n                    <mat-hint *ngIf=\"\r\n                        branchIdCtrl.invalid &&\r\n                        (branchIdCtrl.touched || submitted)\r\n                      \" class=\"text-danger\">\r\n                      <span *ngIf=\"branchIdCtrl.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input matInput [matDatepicker]=\"fromDate\" formControlName=\"fromDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"fromDate\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input matInput [matDatepicker]=\"toDate\" formControlName=\"toDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"toDate\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-checkbox [checked]=\"allChecked\" (change)=\"SelectAll()\" color='accent'>\r\n                    {{ \"General.SelectAll\" | translate }}\r\n                  </mat-checkbox>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\" *ngFor=\"let group of groupFunctions; let i = index\">\r\n                  <mat-card>\r\n                    <mat-card-title>{{group.key |translate}}</mat-card-title>\r\n                    <mat-card-content>\r\n                      <div class=\"row\">\r\n                        <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                        <div class=\"col-12 col-xl-6\" *ngFor=\"let func of group.List; let i = index\">\r\n                          <mat-checkbox id=\"functions{{ func.Id }}\" (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                            [checked]=\"functionIds.includes(func.Id)\">\r\n                            {{ func.function.function_en_name | translate }}\r\n                          </mat-checkbox>\r\n                        </div>\r\n                      </div>\r\n                    </mat-card-content>\r\n                  </mat-card>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button #addBtn mat-raised-button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n          {{ \"General.Save\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.UserBranchesAndRoles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input matInput (keyup)=\"applyFilter($event)\" #input />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"branchName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.branchName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"FunctionName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FunctionName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <tr *ngFor=\"let func of branch.roleFunctionsList; index as i\">\r\n                  <td>{{ func.functionName | translate }}</td>\r\n                  <td>\r\n                    <a (click)=\"openDeleateFunctionDialog(func)\">\r\n                      <i class=\"fa fa-times fa fa-white\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.from | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.to | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a *ngIf=\"fun.functionName === 'Delete'\" (click)=\"openDeleateDialog(branch)\" class=\"danger p-0\"\r\n                    matTooltip=\"Delete\">\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input?.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of users\">\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { IRolesViewModel } from \"app/dashboard/models/users/roles\";\r\nimport {\r\n  IUserModel,\r\n  IUserViewModel,\r\n  IAddEditUserModel,\r\n} from \"app/dashboard/models/users/user\";\r\nimport { RolesService } from \"app/dashboard/services/users/roles.service\";\r\nimport { UsersService } from \"app/dashboard/services/users/users.service\";\r\n\r\n@Component({\r\n  selector: \"app-users\",\r\n  templateUrl: \"./users-add-index.component.html\",\r\n  styleUrls: [\"./users-add-index.component.scss\"],\r\n})\r\nexport class UsersIndexComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  EduCompId: number;\r\n  submitted: boolean = false;\r\n  roles: IRolesViewModel[] = [];\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCounts: number = 0;\r\n  items: number = 16184;\r\n  p: number = 0;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"role\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        userId: [0, [Validators.required]],\r\n        userName: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n        email: [null, [Validators.required, Validators.email]],\r\n        phone: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n            Validators.minLength(11),\r\n            Validators.maxLength(11),\r\n            CustomeValidator.startsWith,\r\n          ],\r\n        ],\r\n        roleId: [null, [Validators.required]],\r\n        password: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomeValidator.whiteSpace,\r\n            Validators.minLength(3),\r\n          ],\r\n        ],\r\n        confirmedPass: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\"password\", \"confirmedPass\"),\r\n      }\r\n    );\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    this.roleService\r\n      .getAllRoles<IRolesViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.roles = response;\r\n        }\r\n      });\r\n\r\n    this.getAllUsers(1);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllUsers(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllUsers(pageNumber: number) {\r\n    // this.itemsCounts = 0;\r\n    this.p = pageNumber;\r\n    this.spinner.show();\r\n\r\n    this.userService\r\n      .getAllUsers<IUserViewModel>(this.EduCompId, pageNumber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"users: \", response);\r\n          this.dataSource = new MatTableDataSource(\r\n            response.centerBrnachesList.reverse()\r\n          );\r\n          this.itemsCounts = response.itemsCounts;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editUser(user: IUserModel) {\r\n    this.FormCtrls.userId?.setValue(user.user_ID);\r\n    this.FormCtrls.userName?.setValue(user.ar_name);\r\n    this.FormCtrls.email?.setValue(user.account_email);\r\n    this.FormCtrls.phone?.setValue(user.mobile);\r\n    this.FormCtrls.roleId?.setValue(user.roleId);\r\n    this.FormCtrls.password?.setValue(user.account_password);\r\n    this.FormCtrls.confirmedPass?.setValue(user.account_password);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeUser(user: IUserModel) {\r\n    this.userService.deleteUser(user.user_ID).subscribe((response) => {\r\n      if (response) {\r\n        //    console.log(\"user: \", response);\r\n        this.getAllUsers(1);\r\n        this.toastr.success(\"تم مسح المستخدم بنجاح\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditUserModel;\r\n      obj.user = {} as IUserModel;\r\n      obj.user.user_ID = this.FormCtrls.userId?.value;\r\n      obj.user.ar_name = this.FormCtrls.userName?.value;\r\n      obj.user.account_email = this.FormCtrls?.email?.value;\r\n      obj.user.mobile = this.FormCtrls.phone?.value;\r\n      obj.user.roleId = this.FormCtrls.roleId?.value;\r\n      obj.user.account_password = this.FormCtrls.password?.value;\r\n\r\n      obj.roleId = this.FormCtrls.roleId?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n\r\n      this.userService\r\n        .addEditUser<IAddEditUserModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n          //  console.log(\"created: \", response);\r\n\r\n          if (response && response !== null) {\r\n            if (response.returnValue == 0) {\r\n              this.toastr.error(response.returnString);\r\n            } else {\r\n              this.getAllUsers(1);\r\n              this.toastr.success(\"تم إضافه/تعديل البيانات المستخدم بنجاح\");\r\n              this.myForm.reset();\r\n              this.addBtn.nativeElement.innerText = \"Add\";\r\n            }\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(user: IUserModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: user.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeUser(user);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.CreateUser\" | translate }} </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"userName\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.userName.invalid &&\r\n                        (FormCtrls.userName.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.userName.errors?.required ||\r\n                          FormCtrls.userName.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"phone\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.phone.invalid &&\r\n                        (FormCtrls.phone.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.phone.errors?.required ||\r\n                          FormCtrls.phone.errors?.whiteSpace ||\r\n                          FormCtrls.phone.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.phone.errors?.minlength ||\r\n                          FormCtrls.phone.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.phone.errors?.startsWith\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.email.invalid &&\r\n                        (FormCtrls.email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        Enter correct Email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Role\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"roleId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option *ngFor=\"let role of roles\" [value]=\"role.Id\">\r\n                        {{ role.roleName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.roleId.invalid &&\r\n                        (FormCtrls.roleId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.roleId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Password\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"password\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.password.invalid &&\r\n                        (FormCtrls.password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ConfirmPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"confirmedPass\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.confirmedPass.invalid &&\r\n                        (FormCtrls.confirmedPass.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.confirmedPass.errors?.mustMatch\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        New Password and Confirm Password not match\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Users\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n            <ng-container matColumnDef=\"role\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Role\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.roleName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editUser(user)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit User\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(user)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete User\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Branches'\"\r\n                    routerLink=\"../user-roles-branches/{{ user.user_ID }}/{{\r\n                      user.roleId\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Add branch and role\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllUsers($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BranchesService {\r\n  getAllBranchesURL =\r\n    environment.baseUrl + \"usermanagement/returnCenterBranchesByEduComp/\";\r\n  addEditBranchesURL = environment.baseUrl + \"usermanagement/AddEditBranch\";\r\n  deleteBranchesURL = environment.baseUrl + \"usermanagement/deleteBranch\";\r\n\r\n  getAllDistrictsURL =\r\n    environment.baseUrl + \"usermanagement/returnDistrictsList\"; // DropDownMenu\r\n  getAllAllCenterBranchesURL =\r\n    environment.baseUrl + \"usermanagement/returnAllCenterBranches\"; // /{page} => paginated\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllBranches<T>(eduCompId: any) {\r\n    return this.http.get<T>(this.getAllBranchesURL + \"/\" + eduCompId);\r\n  }\r\n\r\n  getAllAllCenterBranches<T>(eduCompId:number ,page: number) {\r\n    return this.http.get<T>(this.getAllAllCenterBranchesURL + \"/\" + eduCompId+\"/\"+page);\r\n  }\r\n\r\n  addEditBranches<T, TV>(obj: T) {\r\n    return this.http.post<TV>(this.addEditBranchesURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":18,\r\n  //     \"EduCompId\":2,\r\n  //     \"Name\":\"Test edit Branch\",\r\n  //     \"districtId\":2\r\n  // }\r\n\r\n  deleteBranch<T>(branchId: number) {\r\n    return this.http.delete<T>(this.deleteBranchesURL + \"/\" + branchId);\r\n  }\r\n\r\n  getAllDistricts<T>() {\r\n    return this.http.get<T>(this.getAllDistrictsURL);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FunctionsService {\r\n  addEditFunctionURL = environment.baseUrl + \"usermanagement/AddEditFunction\";\r\n  deleteFunctionURL = environment.baseUrl + \"usermanagement/deleteFunction\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addEditFunction<T, TV>(obj: T) {\r\n    return this.http.post<TV>(this.addEditFunctionURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":0,\r\n  //     \"functionName\":\"test عربي\",\r\n  //     \"function_en_name\":\"test Eng\",\r\n  //     \"functionURL\":\"url test\"\r\n  // }\r\n\r\n  deleteFunction<T>(functionId: number) {\r\n    return this.http.delete<T>(`${this.deleteFunctionURL}/${functionId}`);\r\n  }\r\n}\r\n","import { environment } from \"environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  AddParentModel,\r\n  IChildAddVM,\r\n} from \"app/dashboard/models/users/parents\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ParentChildService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addUpdateParent(body: AddParentModel) {\r\n    return this.http.post(`${environment.baseUrl}Parent/RegisterParent`, body);\r\n  }\r\n\r\n  getParents(page: number) {\r\n    return this.http.get(`${environment.baseUrl}Parent/return-all/${page}`);\r\n  }\r\n\r\n  getParentById(parentId: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}Parent/GetParentById/${parentId}`\r\n    );\r\n  }\r\n\r\n  deleteParent(parentId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Parent/DeleteParentById/${parentId}`\r\n    );\r\n  }\r\n\r\n  getParentChildren(parentId: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}Parent/return-children-by-parent-id/${parentId}`\r\n    );\r\n  }\r\n\r\n  AssignChildToParent(body: IChildAddVM) {\r\n    return this.http.post(\r\n      `${environment.baseUrl}child/register-child-by-parentId`,\r\n      body\r\n    );\r\n  }\r\n\r\n  updateChild(body: any) {\r\n    return this.http.post(`${environment.baseUrl}child/update-child`, body);\r\n  }\r\n\r\n  getChildData(childId: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}child/get-child-data-by-parent-child-Id/${childId}`\r\n    );\r\n  }\r\n\r\n  deleteChild(parentId: number, childId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}Parent/DeleteChildrenByParentId/${parentId}/${childId}`\r\n    );\r\n  }\r\n\r\n  resendEmail(parentId: number, childId: number) {\r\n    return this.http.get(\r\n      `${environment.baseUrl}child/resend-email-by-parentUserId-childId/${parentId}/${childId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RolesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllRoles<T>(EduCompId :number) {\r\n    return this.http.get<T>(environment.baseUrl + \"usermanagement/returnRoles\"+\"/\"+EduCompId);\r\n  }\r\n\r\n  addEditRole<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      `${environment.baseUrl}usermanagement/create-role`,\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteRole(roleId: number) {\r\n    return this.http.delete(\r\n      environment.baseUrl + \"usermanagement/deleteRole\" + \"/\" + roleId\r\n    );\r\n  }\r\n\r\n  getAllFunctions<T>(page: number, getAll: boolean) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}usermanagement/getAllFunctions/${page}/${getAll}`\r\n    );\r\n  }\r\n\r\n  getAllOwnedReports<T>() {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}Admin/get-all-reports-index`\r\n    );\r\n  }\r\n  getReportsByRoleId<T>(roleId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}Admin/get-all-reports-by-roleId/${roleId}`\r\n    );\r\n  }\r\n\r\n\r\n  getAllReports<T>() {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}Admin/get-all-reports`\r\n    );\r\n  }\r\n\r\n  getAllRoleFunctions<T>(roleId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}usermanagement/returnRoleFunctionsByRoleID/${roleId}`\r\n    );\r\n  }\r\n\r\n  addEditRoleFunctions<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.baseUrl + \"usermanagement/add-function-to-role\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  getAllFunctionsByRoleId<T>(roleId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}usermanagement/returnRoleFunctionsByRoleID/${roleId}`\r\n    );\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions<T>(userId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}usermanagement/returnAllBranchUserAllRoleFunction/${userId}`\r\n    );\r\n  }\r\n\r\n  addUserBranchesAndRoleFunctions<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.baseUrl + \"usermanagement/addUserBranchesAndRoleFunctions\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteUserRoleFunctions(functionId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}usermanagement/deleteBranchUserRoleFunction/${functionId}`\r\n    );\r\n  }\r\n\r\n  deleteUserBranchRoleFunction(userId: number, branchId: number) {\r\n    return this.http.delete(\r\n      `${environment.baseUrl}usermanagement/deleteBranchUserAllRoleFunction/${userId}/${branchId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UsersService {\r\n  deleteUserURL = environment.baseUrl + \"usermanagement/deleteUser\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllUsers<T>(eduCompId: any, page: number) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}usermanagement/returnUsersByEduComp/${eduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  addEditUser<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.baseUrl + \"usermanagement/create-user-account\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    return this.http.delete(this.deleteUserURL + \"/\" + userId);\r\n  }\r\n\r\n  getAllBranchesByCenter<T>(eduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.baseUrl}usermanagement/returnCenterBranchesByEduComp/${eduCompId}`\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  ViewContainerRef,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\n\r\n@Directive({\r\n  selector: \"[appMatPaginatorStyle]\",\r\n})\r\nexport class MatPaginatorStyleDirective {\r\n  private _currentPage = 1;\r\n  private _pageGapTxt = \"...\";\r\n  private _rangeStart;\r\n  private _rangeEnd;\r\n  private _buttons = [];\r\n\r\n  @Input()\r\n  get showTotalPages(): number {\r\n    return this._showTotalPages;\r\n  }\r\n  set showTotalPages(value: number) {\r\n    this._showTotalPages = value % 2 == 0 ? value + 1 : value;\r\n  }\r\n  private _showTotalPages = 2;\r\n\r\n  constructor(\r\n    @Host() @Self() @Optional() private readonly matPag: MatPaginator,\r\n    private vr: ViewContainerRef,\r\n    private ren: Renderer2\r\n  ) {\r\n    //Sub to rerender buttons when next page and last page is used\r\n    this.matPag.page.subscribe((v) => {\r\n      this.switchPage(v.pageIndex);\r\n    });\r\n  }\r\n\r\n  private buildPageNumbers() {\r\n    const actionContainer = this.vr.element.nativeElement.querySelector(\r\n      \"div.mat-paginator-range-actions\"\r\n    );\r\n    const nextPageNode = this.vr.element.nativeElement.querySelector(\r\n      \"button.mat-paginator-navigation-next\"\r\n    );\r\n    const prevButtonCount = this._buttons.length;\r\n\r\n    // remove buttons before creating new ones\r\n    if (this._buttons.length > 0) {\r\n      this._buttons.forEach((button) => {\r\n        this.ren.removeChild(actionContainer, button);\r\n      });\r\n      //Empty state array\r\n      this._buttons.length = 0;\r\n    }\r\n\r\n    //initialize next page and last page buttons\r\n    if (this._buttons.length == 0) {\r\n      let nodeArray =\r\n        this.vr.element.nativeElement.childNodes[0].childNodes[0].childNodes[2]\r\n          .childNodes;\r\n      setTimeout(() => {\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          if (nodeArray[i].nodeName === \"BUTTON\") {\r\n            if (nodeArray[i].disabled) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(190, 130, 130, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(255, 0, 0, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    let dots = false;\r\n\r\n    for (let i = 0; i < this.matPag.getNumberOfPages(); i = i + 1) {\r\n      if (\r\n        (i < this._showTotalPages &&\r\n          this._currentPage < this._showTotalPages &&\r\n          i > this._rangeStart) ||\r\n        (i >= this._rangeStart && i <= this._rangeEnd)\r\n      ) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(i, this.matPag.pageIndex),\r\n          nextPageNode\r\n        );\r\n      } else {\r\n        if (i > this._rangeEnd && !dots) {\r\n          this.ren.insertBefore(\r\n            actionContainer,\r\n            this.createButton(this._pageGapTxt, this.matPag.pageIndex),\r\n            nextPageNode\r\n          );\r\n          dots = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButton(i: any, pageIndex: number): any {\r\n    const linkBtn = this.ren.createElement(\"mat-button\");\r\n    this.ren.addClass(linkBtn, \"mat-mini-fab\");\r\n    this.ren.setStyle(linkBtn, \"margin\", \"1%\");\r\n\r\n    const pagingTxt = isNaN(i) ? this._pageGapTxt : +(i + 1);\r\n    const text = this.ren.createText(pagingTxt + \"\");\r\n\r\n    this.ren.addClass(linkBtn, \"mat-custom-page\");\r\n    switch (i) {\r\n      case pageIndex:\r\n        this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        break;\r\n      case this._pageGapTxt:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(this._currentPage + this._showTotalPages);\r\n        });\r\n        break;\r\n      default:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(i);\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.ren.appendChild(linkBtn, text);\r\n    //Add button to private array for state\r\n    this._buttons.push(linkBtn);\r\n    return linkBtn;\r\n  }\r\n\r\n  private initPageRange(): void {\r\n    this._rangeStart = this._currentPage - this._showTotalPages / 2;\r\n    this._rangeEnd = this._currentPage + this._showTotalPages / 2;\r\n\r\n    this.buildPageNumbers();\r\n  }\r\n\r\n  private switchPage(i: number): void {\r\n    this._currentPage = i;\r\n    this.matPag.pageIndex = i;\r\n    this.initPageRange();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.initPageRange();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { NativeDateAdapter } from \"@angular/material/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AppDateAdapter extends NativeDateAdapter {\r\n  parse(value: any): Date | null {\r\n    if (typeof value === \"string\" && value.indexOf(\"/\") > -1) {\r\n      const str = value.split(\"/\");\r\n      const year = Number(str[2]);\r\n      const month = Number(str[1]) - 1;\r\n      const date = Number(str[0]);\r\n      return new Date(year, month, date);\r\n    }\r\n    const timestamp = typeof value === \"number\" ? value : Date.parse(value);\r\n    return isNaN(timestamp) ? null : new Date(timestamp);\r\n  }\r\n  format(date: Date, displayFormat: string): string {\r\n    if (displayFormat == \"input\") {\r\n      let day = date.getDate();\r\n      let month = date.getMonth() + 1;\r\n      let year = date.getFullYear();\r\n      return this._to2digit(day) + \"/\" + this._to2digit(month) + \"/\" + year;\r\n    } else if (displayFormat == \"inputMonth\") {\r\n      let month = date.getMonth() + 1;\r\n      let year = date.getFullYear();\r\n      return this._to2digit(month) + \"/\" + year;\r\n    } else {\r\n      return date.toDateString();\r\n    }\r\n  }\r\n\r\n  private _to2digit(n: number) {\r\n    return (\"00\" + n).slice(-2);\r\n  }\r\n}\r\n\r\nexport const APP_DATE_FORMATS = {\r\n  parse: {\r\n    dateInput: { month: \"short\", year: \"numeric\", day: \"numeric\" },\r\n  },\r\n  display: {\r\n    // dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\r\n    dateInput: \"input\",\r\n    // monthYearLabel: { month: 'short', year: 'numeric', day: 'numeric' },\r\n    monthYearLabel: \"inputMonth\",\r\n    dateA11yLabel: { year: \"numeric\", month: \"long\", day: \"numeric\" },\r\n    monthYearA11yLabel: { year: \"numeric\", month: \"long\" },\r\n  },\r\n};\r\n"],"names":["RouterModule","CenterBranchesComponent","FunctionsSetupComponent","ParentsChildrenComponent","ParentsIndexComponent","AddRoleComponent","RoleFunctionsComponent","AddTeacherSubjectsComponent","TeachersIndexComponent","UserBranchesRolesComponent","UsersIndexComponent","routes","path","redirectTo","pathMatch","component","children","loadChildren","then","m","EducationalSetupModule","GeneralSetupModule","FinancialSetupModule","CurriculaSetupModule","StudentApplicationModule","FinancialModule","ExamsModule","EmployeesModule","EducationalTabelsModule","ControlModule","DashboardRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","SharedModule","MaterialModule","NgxSpinnerModule","NgbModule","MatPaginatorStyleDirective","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","DashboardModule","provide","useClass","useValue","declarations","CustomeValidator","ElementRef","Validators","MatPaginator","MatSort","MatTableDataSource","DeleteDialogComponent","i0","ctx_r27","ctx_r30","route","fb","authserv","msg","branchService","spinner","dialog","queryParamMap","subscribe","params","functionId","Number","get","getUserRowFunctions","res","rowFunctions","myForm","group","branchId","branchName","required","whiteSpace","districtId","EduCompId","getEduCompId","getAllDistricts","response","districts","getAllBranches","e","EduCompIdCtrl","setValue","dataSource","paginator","sort","event","filterValue","target","value","filter","trim","toLowerCase","pageNumber","show","console","log","getAllAllCenterBranches","branches","centerBrnachesList","itemsCount","hide","branch","branchIdCtrl","_a","Id","branchNameCtrl","_b","Name","districtIdCtrl","_c","addBtn","nativeElement","innerText","deleteBranch","success","submitted","valid","obj","addEditBranches","returnValue","reset","open","data","afterClosed","confirm","removeBranch","selectors","viewQuery","ctx","ctx_r28","ctx_r31","roleService","functionService","functionNameEn","functionNameAr","link","getAllFunctions","functions","func","functionIdCtrl","functionNameEnCtrl","function_en_name","functionNameArCtrl","functionName","linkCtrl","_d","functionURL","deleteFunction","addEditFunction","removeFunction","ctx_r29","ctx_r32","ParentChildService","toastr","translate","authService","paramMap","parentId","onLangChange","lang","curLang","getParentChildren","name","pattern","eduYearId","email","controls","page","eduYear_ar_name","eduYear_en_name","list","itemsCounts","countItems","parent","FormCtrls","AssignChildToParent","unshift","clearForm","error","returnString","deleteParent","deleteChild","index","findIndex","splice","id","resendEmail","ctx_r44","ctx_r47","getParents","mobile","maxLength","minLength","startsWith","account_password","confPassword","validator","mustMatch","userId","patchValue","userTypeId","addUpdateParent","ctx_r20","ctx_r23","roleId","roleName","getAllRoles","roles","role","roleIdCtrl","roleNameCtrl","deleteRole","r","warning","addEditRole","push","removeRole","ctx_r7","ctx_r11","router","param","getAllRoleFunctions","getAllOwnedReportsByRoleId","groupFunctions","forEach","g","allFunctionsLength","length","getReportsByRoleId","ownerReports","i","selectedReportsIds","ReportId","getAllOwnedReports","reports","roleFunctions","functionIds","function","allChecked","$event","checked","reportId","found","includes","functionsList","reportsList","addEditRoleFunctions","decls","vars","consts","template","ctx_r19","TeacherService","teacherId","getTeacherCourses","EduYear","courseIds","courseId","course_ar_name","course_en_name","getAllTeacherCourses","teacher","addTeacherCourse","deleteTeacher","deleteTeacherCourse","getTeachers","addUpdateTeacher","ctx_r37","ctx_r45","userService","groupByService","datePipe","branchsIds","fromDate","toDate","getAllBranchesByCenter","getAllUserBranchesWithFunctions","getAllFunctionsByRoleId","groupBy","List","userBranchesWithFunctions","branchUserList","funParent","roleFunctionsList","fun","checkedfunctionIds","deleteUserBranchRoleFunction","deleteUserRoleFunctions","centerBranchUserFuncId","roleFunctionsIds","branchUser","from","transform","fromDateCtrl","to","toDateCtrl","addUserBranchesAndRoleFunctions","onDeleteFunction","ctx_r48","userName","phone","password","confirmedPass","getAllUsers","p","reverse","user","user_ID","ar_name","account_email","_e","_f","_g","deleteUser","_h","addEditUser","removeUser","environment","BranchesService","http","baseUrl","eduCompId","getAllBranchesURL","getAllAllCenterBranchesURL","post","addEditBranchesURL","delete","deleteBranchesURL","getAllDistrictsURL","factory","providedIn","FunctionsService","addEditFunctionURL","deleteFunctionURL","body","childId","RolesService","getAll","UsersService","deleteUserURL","matPag","vr","ren","v","switchPage","pageIndex","_showTotalPages","actionContainer","element","querySelector","nextPageNode","prevButtonCount","_buttons","button","removeChild","nodeArray","childNodes","setTimeout","nodeName","disabled","setStyle","dots","getNumberOfPages","_currentPage","_rangeStart","_rangeEnd","insertBefore","createButton","_pageGapTxt","linkBtn","createElement","addClass","pagingTxt","isNaN","text","createText","setAttribute","listen","appendChild","buildPageNumbers","initPageRange","inputs","showTotalPages","NativeDateAdapter","indexOf","str","split","year","month","date","Date","timestamp","parse","displayFormat","day","getDate","getMonth","getFullYear","_to2digit","toDateString","n","slice","t","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel"],"sourceRoot":"webpack:///"}