{"version":3,"file":"src_app_admin_dashboard_module_ts.js","mappings":"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","sources":["./src/app/admin/dashboard-routing.module.ts","./src/app/admin/dashboard.module.ts","./src/app/admin/pages/reservation/reservation-details/reservation-details.component.ts","./src/app/admin/pages/reservation/reservation-details/reservation-details.component.html","./src/app/admin/pages/reservation/reservation-edit/reservation-edit.component.ts","./src/app/admin/pages/reservation/reservation-edit/reservation-edit.component.html","./src/app/admin/pages/reservation/reservation-index/reservation-index.component.ts","./src/app/admin/pages/reservation/reservation-index/reservation-index.component.html","./src/app/admin/pages/reservation/reservation-status/reservation-status.component.ts","./src/app/admin/pages/reservation/reservation-status/reservation-status.component.html","./src/app/admin/pages/reservation/student-discount/student-discount.component.ts","./src/app/admin/pages/reservation/student-discount/student-discount.component.html","./src/app/admin/pages/reservation/students/students-index/students-index.component.ts","./src/app/admin/pages/reservation/students/students-index/students-index.component.html","./src/app/admin/pages/users/center-branches/center-branches.component.ts","./src/app/admin/pages/users/center-branches/center-branches.component.html","./src/app/admin/pages/users/functions-setup/functions-setup.component.ts","./src/app/admin/pages/users/functions-setup/functions-setup.component.html","./src/app/admin/pages/users/roles/add-role/add-role.component.ts","./src/app/admin/pages/users/roles/add-role/add-role.component.html","./src/app/admin/pages/users/roles/role-functions/role-functions.component.html","./src/app/admin/pages/users/roles/role-functions/role-functions.component.ts","./src/app/admin/pages/users/user-branches-roles/user-branches-roles.component.ts","./src/app/admin/pages/users/user-branches-roles/user-branches-roles.component.html","./src/app/admin/pages/users/user-deparment-and-job-title/deparment-job-title.component.ts","./src/app/admin/pages/users/user-deparment-and-job-title/deparment-job-title.component.html","./src/app/admin/pages/users/users/users.component.ts","./src/app/admin/pages/users/users/users.component.html","./src/app/admin/services/Admin/manage-views.service.ts","./src/app/admin/services/Admin/subjectMaterials.service.ts","./src/app/admin/services/roles/branches.service.ts","./src/app/admin/services/roles/functions.service.ts","./src/app/admin/services/roles/roles.service.ts","./src/app/admin/services/roles/users.service.ts","./src/app/admin/services/setup/department.service.ts","./src/app/admin/services/setup/job-title.service.ts","./src/app/shared/directives/mat-paginator-style.directive.ts","./src/app/shared/services/General/group-by.service.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { UserBalanceDetailsComponent } from \"app/shared/components/user-balance-details/user-balance-details.component\";\r\nimport { IsAdminGuard } from \"app/shared/services/auth/Guards/roles/is-admin.guard\";\r\nimport { ReservationEditComponent } from \"./pages/reservation/reservation-edit/reservation-edit.component\";\r\nimport { ReservationIndexComponent } from \"./pages/reservation/reservation-index/reservation-index.component\";\r\nimport { ReservationStatusComponent } from \"./pages/reservation/reservation-status/reservation-status.component\";\r\nimport { StudentDiscountComponent } from \"./pages/reservation/student-discount/student-discount.component\";\r\nimport { StudentsIndexComponent } from \"./pages/reservation/students/students-index/students-index.component\";\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { UserDeparmentAndJobTitleComponent } from \"./pages/users/user-deparment-and-job-title/deparment-job-title.component\";\r\nimport { UsersComponent } from \"./pages/users/users/users.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"users\",\r\n    component: UsersComponent,\r\n  },\r\n\r\n  {\r\n    path: \"user-roles-branches/:userId/:roleId\",\r\n    component: UserBranchesRolesComponent,\r\n  },\r\n\r\n  {\r\n    path: \"functions\",\r\n    component: FunctionsSetupComponent,\r\n  },\r\n\r\n  {\r\n    path: \"center-branches\",\r\n    component: CenterBranchesComponent,\r\n  },\r\n\r\n  {\r\n    path: \"students-index\",\r\n    component: StudentsIndexComponent,\r\n  },\r\n  {\r\n    path: \"roles\",\r\n    component: AddRoleComponent,\r\n  },\r\n  {\r\n    path: \"role-fuctions/:roleId\",\r\n    component: RoleFunctionsComponent,\r\n  },\r\n  {\r\n    path: \"user-dep-job/:userId\",\r\n    component: UserDeparmentAndJobTitleComponent,\r\n  },\r\n\r\n  {\r\n    path: \"reservation\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n      { path: \"index\", component: ReservationIndexComponent },\r\n      {\r\n        path: \"edit-reservation/:reservationId\",\r\n        component: ReservationEditComponent,\r\n      },\r\n      {\r\n        path: \"reservation-status/:reservationId\",\r\n        component: ReservationStatusComponent,\r\n      },\r\n      {\r\n        path: \"student-discount\",\r\n        component: StudentDiscountComponent,\r\n      },\r\n      {\r\n        path: \"balance-details/:userId\",\r\n        component: UserBalanceDetailsComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"educational-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/educational-setup/educational-setup.module\").then(\r\n        (m) => m.EducationalSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/setup.module\").then((m) => m.SetupModule),\r\n  },\r\n\r\n  {\r\n    path: \"exams-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/exams-setup/exams.module\").then((m) => m.ExamsModule),\r\n  },\r\n\r\n  {\r\n    path: \"reports\",\r\n    loadChildren: () =>\r\n      import(\"./pages/reports/reports.module\").then((m) => m.ReportsModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"./../shared/shared.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\r\nimport { UsersComponent } from \"./pages/users/users/users.component\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { MatPaginatorStyleDirective } from \"app/shared/directives/mat-paginator-style.directive\";\r\nimport { ReservationIndexComponent } from \"./pages/reservation/reservation-index/reservation-index.component\";\r\nimport { ReservationEditComponent } from \"./pages/reservation/reservation-edit/reservation-edit.component\";\r\nimport { ReservationDetailsComponent } from \"./pages/reservation/reservation-details/reservation-details.component\";\r\nimport { ReservationStatusComponent } from \"./pages/reservation/reservation-status/reservation-status.component\";\r\nimport { StudentDiscountComponent } from \"./pages/reservation/student-discount/student-discount.component\";\r\nimport { StudentsIndexComponent } from \"./pages/reservation/students/students-index/students-index.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport { UserDeparmentAndJobTitleComponent } from \"./pages/users/user-deparment-and-job-title/deparment-job-title.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    UserBranchesRolesComponent,\r\n    FunctionsSetupComponent,\r\n    CenterBranchesComponent,\r\n    MatPaginatorStyleDirective,\r\n    ReservationIndexComponent,\r\n    ReservationEditComponent,\r\n    ReservationDetailsComponent,\r\n    ReservationStatusComponent,\r\n    StudentDiscountComponent,\r\n    StudentsIndexComponent,\r\n    AddRoleComponent,\r\n    RoleFunctionsComponent,\r\n    UserDeparmentAndJobTitleComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class DashboardModule {}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { IReservationVM } from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-details\",\r\n  templateUrl: \"./reservation-details.component.html\",\r\n  styleUrls: [\"./reservation-details.component.scss\"],\r\n})\r\nexport class ReservationDetailsComponent implements OnInit {\r\n  reservation: IReservationVM;\r\n\r\n  constructor(\r\n    private reservationService: ReservationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    const reservationId = data.reservationId;\r\n    this.reservationService\r\n      .ReservationDetails(reservationId)\r\n      .subscribe((res: any) => {\r\n        this.reservation = res;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<h1 mat-dialog-title>{{ \"Reservation.ReservationDetails\" | translate }}</h1>\r\n<div mat-dialog-content>\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-striped m-0\" *ngIf=\"reservation\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ \"labels.Name\" | translate }}</th>\r\n          <th>{{ \"labels.Email\" | translate }}</th>\r\n          <th>{{ \"labels.Religion\" | translate }}</th>\r\n          <th>{{ \"labels.Gender\" | translate }}</th>\r\n          <th>{{ \"labels.EducationType\" | translate }}</th>\r\n          <th>{{ \"Reservation.AreaReservation\" | translate }}</th>\r\n          <th>{{ \"labels.branchName\" | translate }}</th>\r\n          <th>{{ \"labels.Hobbies\" | translate }}</th>\r\n          <th>{{ \"labels.Competitions\" | translate }}</th>\r\n          <th>{{ \"labels.Workshops\" | translate }}</th>\r\n          <th>{{ \"labels.SchoolName\" | translate }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ reservation?.Name }}</td>\r\n\r\n          <td>{{ reservation?.Email }}</td>\r\n\r\n          <td>{{ reservation?.Religion.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.Gender.gender_ar_name }}</td>\r\n\r\n          <td>{{ reservation?.EducationType.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.Area.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.CenterBranch }}</td>\r\n\r\n          <td>{{ reservation?.Hobbies }}</td>\r\n\r\n          <td>{{ reservation?.Competitions }}</td>\r\n\r\n          <td>{{ reservation?.Workshops }}</td>\r\n\r\n          <td>\r\n            {{ reservation?.SchoolName }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-striped m-0\" *ngIf=\"reservation\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ \"labels.GuardianJob\" | translate }}</th>\r\n          <th>{{ \"labels.FatherMobile\" | translate }}</th>\r\n          <th>{{ \"labels.FatherWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.MotherMobile\" | translate }}</th>\r\n          <th>{{ \"labels.MotherWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.StudentNumber\" | translate }}</th>\r\n          <th>{{ \"labels.StudentWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.HomeTelephone\" | translate }}</th>\r\n          <th>{{ \"labels.Address\" | translate }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ reservation?.GuardianJob }}</td>\r\n\r\n          <td>{{ reservation?.FatherMobile }}</td>\r\n\r\n          <td>{{ reservation?.FatherWhatsAppNumber.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.MotherMobile }}</td>\r\n\r\n          <td>{{ reservation?.MotherWhatsAppNumber }}</td>\r\n\r\n          <td>{{ reservation?.StudentNumber }}</td>\r\n\r\n          <td>{{ reservation?.StudentWhatsAppNumber }}</td>\r\n\r\n          <td>{{ reservation?.HomeTelephon }}</td>\r\n\r\n          <td>{{ reservation?.Address }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-button\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"btn btn-danger float-right\"\r\n  >\r\n    Close\r\n  </button>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Areas,\r\n  CenterBranchesVM,\r\n  EducationalDivisionsVM,\r\n  EducationTypesVM,\r\n  GendersVM,\r\n  IFileToUpload,\r\n  IGetReservationEditVM,\r\n  ISubmitReservationEditVM,\r\n  ReligionsVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-edit\",\r\n  templateUrl: \"./reservation-edit.component.html\",\r\n  styleUrls: [\"./reservation-edit.component.scss\"],\r\n})\r\nexport class ReservationEditComponent implements OnInit {\r\n  reservationId: number;\r\n  EduCompId: any;\r\n  functionId: any;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  ProfilePicture_Path: any;\r\n  ProfilePicture: any;\r\n  Religions: ReligionsVM[];\r\n  Genders: GendersVM[];\r\n  EducationalDivisions: EducationalDivisionsVM[];\r\n  EducationTypes: EducationTypesVM[];\r\n  Areas: Areas[];\r\n  CenterBranches: CenterBranchesVM[];\r\n\r\n  constructor(\r\n    private reservationServ: ReservationService,\r\n    private fb: FormBuilder,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private authserv: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.reservationId = Number(params.get(\"reservationId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.getReservationEdit(this.reservationId);\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [this.reservationId, [Validators.required]],\r\n      Id: [\"\", [Validators.required]],\r\n      UserName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Religion: [\"\", [Validators.required]],\r\n      Gender: [\"\", [Validators.required]],\r\n      EducationTypeId: [\"\", [Validators.required]],\r\n      CenterBranchId: [\"\", [Validators.required]],\r\n      SchoolName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      EducationalDivision: [\"\", [Validators.required]],\r\n      GuardianJob: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Area: [\"\", [Validators.required]],\r\n      Address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      StudentNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      StudentWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      FatherMobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      FatherWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      MotherMobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      MotherWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      HomeTelephone: [\r\n        \"\",\r\n        [Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/)],\r\n      ],\r\n      SentviewId: [\"\", [Validators.required]],\r\n      currentYear: [\"\", [Validators.required]],\r\n      EduCompId: [\"\", [Validators.required]],\r\n      City: [\"\"],\r\n      competitions: [\"\"],\r\n      Hobbies: [\"\"],\r\n      workshops: [\"\"],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.FormCtrls?.EduCompIdCtrl.setValue(e.EduCompId);\r\n    });\r\n  }\r\n\r\n  getReservationEdit(reservationId: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getReservationEdit<IGetReservationEditVM>(reservationId, this.EduCompId)\r\n      .subscribe((res) => {\r\n        // console.log(\"ReservationEditr\", res);\r\n        this.myForm.patchValue(res.Reservation);\r\n        this.Religions = res.Religion;\r\n        this.Genders = res.Gender;\r\n        this.EducationalDivisions = res.EducationalDivision;\r\n        this.EducationTypes = res.EducationTypeId;\r\n        this.Areas = res.Area;\r\n        this.ProfilePicture = res.Reservation?.ProfilePicture_Path;\r\n        this.ProfilePicture_Path = `mozakretyapi${res.Reservation?.ProfilePicture_Path}`;\r\n        this.returnBranchesByEducTypeId(res.Reservation?.EducationTypeId);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SubmitReservation() {\r\n    if (!(this.ProfilePicture || this.ProfilePicture_Path)) {\r\n      this.toaster.warning(\"يجب اختيار صوره شخصية\");\r\n      return;\r\n    }\r\n\r\n    let data: ISubmitReservationEditVM = {\r\n      Reservation: this.myForm.value,\r\n      profilePicture: this.ProfilePicture || this.ProfilePicture_Path,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationServ.SubmitReservationEdit(data).subscribe((res: any) => {\r\n        //  console.log(res);\r\n        if (res.returnValue == 200 && res.returnString == \"Success\") {\r\n          this.toaster.success(\"تم تغير البيانات بنجاح\");\r\n        } else {\r\n          this.toaster.error(res.returnString, res.returnValue);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  returnBranchesByEducTypeId(typeId: any) {\r\n    this.CenterBranches = [];\r\n    this.reservationServ\r\n      .returnBranchesByEducTypeId<CenterBranchesVM[]>(typeId, this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CenterBranches = res;\r\n      });\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.ProfilePicture_Path = fileReder;\r\n        this.ProfilePicture = data;\r\n      };\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"Reservation.ReservationData\" | translate }} -\r\n      {{ FormCtrls.UserName?.value }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"Reservation.ReservationData\" | translate }}\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"UserName\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.UserName.invalid &&\r\n                    (FormCtrls.UserName.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.UserName.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.UserName.errors?.bigZero\">\r\n                    {{ \"labels.MustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Religion\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"Religion\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let Religion of Religions\"\r\n                    [value]=\"Religion.Id\"\r\n                  >\r\n                    {{ Religion.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Religion.invalid &&\r\n                    (FormCtrls.Religion.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Religion.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-2 col-12\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                mat-raised-button\r\n                (click)=\"fileInput.click()\"\r\n              >\r\n                {{ \"labels.ProfilePicture\" | translate }}\r\n              </button>\r\n              <input\r\n                hidden\r\n                (change)=\"onChange($event)\"\r\n                #fileInput\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                id=\"file\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"col-md-2 col-12\">\r\n              <div class=\"media\">\r\n                <img\r\n                  class=\"rounded mr-3\"\r\n                  [src]=\"ProfilePicture_Path\"\r\n                  width=\"70\"\r\n                  height=\"70\"\r\n                  alt=\"avatar\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Gender\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"Gender\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }} </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let Gender of Genders\"\r\n                    [value]=\"Gender.gender_id\"\r\n                  >\r\n                    {{ Gender.gender_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Gender.invalid &&\r\n                    (FormCtrls.Gender.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Gender.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.EducationType\" | translate }}\r\n                </mat-label>\r\n                <mat-select\r\n                  formControlName=\"EducationTypeId\"\r\n                  (selectionChange)=\"\r\n                    returnBranchesByEducTypeId(FormCtrls.EducationTypeId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let EducationType of EducationTypes\"\r\n                    [value]=\"EducationType.Id\"\r\n                  >\r\n                    {{ EducationType.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.EducationTypeId.invalid &&\r\n                    (FormCtrls.EducationTypeId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.EducationTypeId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.CenterBranch\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"CenterBranchId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }} </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let CenterBranche of CenterBranches\"\r\n                    [value]=\"CenterBranche.Id\"\r\n                  >\r\n                    {{ CenterBranche.Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.CenterBranchId.invalid &&\r\n                    (FormCtrls.CenterBranchId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.CenterBranchId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.SchoolName\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"SchoolName\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.SchoolName.invalid &&\r\n                    (FormCtrls.SchoolName.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.SchoolName.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.SchoolName.errors?.whiteSpace\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.EducationalDivision\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"EducationalDivision\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let EducationalDivision of EducationalDivisions\"\r\n                    [value]=\"EducationalDivision.Id\"\r\n                  >\r\n                    {{ EducationalDivision.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.EducationalDivision.invalid &&\r\n                    (FormCtrls.EducationalDivision.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.EducationalDivision.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.GuardianJob\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"GuardianJob\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.GuardianJob.invalid &&\r\n                    (FormCtrls.GuardianJob.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.GuardianJob.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.GuardianJob.errors?.whiteSpace\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.StudentNumber\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"StudentNumber\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.StudentNumber.invalid &&\r\n                    (FormCtrls.StudentNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.StudentNumber.errors?.maxlength ||\r\n                      FormCtrls.StudentNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.StudentWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"StudentWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.StudentWhatsAppNumber.invalid &&\r\n                    (FormCtrls.StudentWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.required\"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.StudentWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.StudentWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.HomeTelephone\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"HomeTelephone\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.HomeTelephone.invalid &&\r\n                    (FormCtrls.HomeTelephone.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.HomeTelephone.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.FatherMobile\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"FatherMobile\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FatherMobile.invalid &&\r\n                    (FormCtrls.FatherMobile.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FatherMobile.errors?.maxlength ||\r\n                      FormCtrls.FatherMobile.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.FatherWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"FatherWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FatherWhatsAppNumber.invalid &&\r\n                    (FormCtrls.FatherWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FatherWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.FatherWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.MotherMobile\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"MotherMobile\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.MotherMobile.invalid &&\r\n                    (FormCtrls.MotherMobile.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.MotherMobile.errors?.maxlength ||\r\n                      FormCtrls.MotherMobile.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.MotherWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"MotherWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.MotherWhatsAppNumber.invalid &&\r\n                    (FormCtrls.MotherWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.MotherWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.MotherWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"Reservation.AreaReservation\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"Area\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let area of Areas\" [value]=\"area.Id\">\r\n                    {{ area.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Area.invalid &&\r\n                    (FormCtrls.Area.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Area.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.Address\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"Address\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Address.invalid &&\r\n                    (FormCtrls.Address.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Address.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.Address.errors?.whiteSpace\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitReservation()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<ngx-spinner></ngx-spinner>\r\n","import { NgxSpinnerModule, NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Status,\r\n  city,\r\n  StudentGroupVM,\r\n  IReservationVM,\r\n  IGetReservationListVM,\r\n  ISearchReservationVM,\r\n  IAreaVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ReservationDetailsComponent } from \"../reservation-details/reservation-details.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-index\",\r\n  templateUrl: \"./reservation-index.component.html\",\r\n  styleUrls: [\"./reservation-index.component.scss\"],\r\n})\r\nexport class ReservationIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  // Branches: CenterBranchesVM[];\r\n  //  Dates: any;\r\n  Status: Status[];\r\n  Cities: city[];\r\n  Areas: IAreaVM[];\r\n  Reservations: IReservationVM[];\r\n  groups: StudentGroupVM[];\r\n  itemsCount: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"accountName\",\r\n    \"code\",\r\n    \"branch\",\r\n    \"mobile\",\r\n    \"status\",\r\n    \"group\",\r\n    \"discount\",\r\n    \"date\",\r\n    \"note\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IReservationVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private reservationService: ReservationService,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.myForm = this.fb.group({\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      branchId: [],\r\n      email: [\"\", Validators.email],\r\n      name: [\"\"],\r\n      mobile: [\"\"],\r\n      code: [\"\"],\r\n      groupId: [\"\"],\r\n      statusId: [\"\"],\r\n      cityId: [\"\"],\r\n      currentYear: [1],\r\n      page: [],\r\n    });\r\n\r\n    //this.returnBranchesByEduCompId();\r\n    this.getGroupsByEduCompId();\r\n    this.returnStatus();\r\n    this.getArea();\r\n    this.getReservationsList(1);\r\n  }\r\n\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchId\");\r\n  }\r\n\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  get currentYearCtrl() {\r\n    return this.myForm.get(\"currentYear\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n      this.branchIdCtrl.setValue(e.branchId);\r\n      this.getReservationsList(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getReservationsList(p) {\r\n    this.page?.setValue(p);\r\n\r\n    // if (!this.branchIdCtrl.value || this.branchIdCtrl.value == \"null\") {\r\n    //   this.toaster.warning(\"You Must Select Branch\");\r\n    //   return;\r\n    // }\r\n\r\n    if (!this.EduCompIdCtrl.value || this.EduCompIdCtrl.value == \"null\") {\r\n      this.toaster.warning(\"You Must Select Center\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationService\r\n        .getReservationsList<ISearchReservationVM, IGetReservationListVM>(\r\n          this.myForm.value\r\n        )\r\n        .subscribe((res: any) => {\r\n          //console.log(\"Reservations\", res);\r\n          this.Reservations = res.list;\r\n          this.dataSource = new MatTableDataSource(res.list);\r\n          this.itemsCount = res.itemsCount;\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getGroupsByEduCompId() {\r\n    this.SubjectMaterialsService.getGroupsByEduCompId<StudentGroupVM[]>(\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.groups = res.lstEduCompGroups;\r\n      }\r\n    });\r\n  }\r\n\r\n  returnStatus() {\r\n    this.reservationService.returnStatus<Status[]>().subscribe((res) => {\r\n      this.Status = res;\r\n    });\r\n  }\r\n\r\n  // returnCities() {\r\n  //   this.reservationService.returnCities<city[]>().subscribe((res) => {\r\n  //     this.Cities = res;\r\n  //   });\r\n  // }\r\n\r\n  getArea() {\r\n    this.reservationService.getArea<IAreaVM[]>().subscribe((res) => {\r\n      this.Areas = res;\r\n    });\r\n  }\r\n\r\n  ReservationDetailsDialog(reservationId: number): void {\r\n    this.dialog\r\n      .open(ReservationDetailsComponent, {\r\n        data: {\r\n          reservationId: reservationId,\r\n        },\r\n        minWidth: \"90vw\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe();\r\n  }\r\n\r\n  Reset() {\r\n    this.myForm.reset();\r\n    this.EduCompIdCtrl.setValue(this.EduCompId);\r\n    this.branchIdCtrl.setValue(this.branchId);\r\n    this.currentYearCtrl.setValue(1);\r\n  }\r\n\r\n  // returnBranchesByEduCompId() {\r\n  //   this.reservationService\r\n  //     .returnBranchesByEduCompId<CenterBranchesVM[]>(this.EduCompId)\r\n  //     .subscribe((res: any) => {\r\n  //       this.Branches = res;\r\n  //     });\r\n  // }\r\n\r\n  // Return Avaliable Dates By BranchId\r\n  // GetAvaliableDatesByBranchId(branchId: any) {\r\n  //   if (branchId) {\r\n  //     this.reservationServ\r\n  //       .GetAvaliableDatesByBranchId(branchId, true, true)\r\n  //       .subscribe((res: any) => {\r\n  //         this.Dates = res;\r\n  //       });\r\n  //   } else {\r\n  //     this.Dates = [];\r\n  //   }\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"name\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.CenterCode\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"code\" formControlName=\"code\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label\r\n                      >{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let branch of Branches\"\r\n                        [value]=\"branch.Id\"\r\n                      >\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{ group.groupName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"statusId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let status of Status\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{ status.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Reservation.AreaReservation\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"cityId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option *ngFor=\"let area of Areas\" [value]=\"area.Id\">\r\n                        {{ area.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group formControlName=\"currentYear\" class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button [value]=\"0\">\r\n                        {{ \"labels.CurrentYear\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button [value]=\"1\"\r\n                        >{{ \"labels.NextYear\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getReservationsList(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n\r\n        <button mat-raised-button class=\"btn btn-warning\" (click)=\"Reset()\">\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ReservationList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- accountName Column -->\r\n            <ng-container matColumnDef=\"accountName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.AccountName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.UserName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CenterCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CenterCode }}</td>\r\n            </ng-container>\r\n\r\n            <!-- branch Column -->\r\n            <ng-container matColumnDef=\"branch\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CenterBranchName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.StudentNumber }}</td>\r\n            </ng-container>\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Status?.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let reservation\">\r\n                <span *ngFor=\"let group of reservation?.Group\">\r\n                  - {{ group.studyingGroup?.groupName }} <br />\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- discount Column -->\r\n            <ng-container matColumnDef=\"discount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.Discount?.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- date Column -->\r\n            <ng-container matColumnDef=\"date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.ReservationDate | NewDate }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Status?.Notes }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let reservation\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    routerLink=\"/dashboard/reservation/edit-reservation/{{\r\n                      reservation?.Id\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/reservation/reservation-status/{{\r\n                      reservation?.Id\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Status'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Change Status\"\r\n                  >\r\n                    <i class=\"ft-settings font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Discount'\"\r\n                    routerLink=\"/dashboard/reservation/student-discount/{{\r\n                      reservation?.Status?.userId\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Change Discount\"\r\n                  >\r\n                    <i class=\"fa fa-money font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                  <a\r\n                    (click)=\"ReservationDetailsDialog(reservation.Id)\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Details'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Details\"\r\n                  >\r\n                    <i class=\"ft-alert-circle font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getReservationsList($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Status,\r\n  StudentStatusListVM,\r\n  StudentGroupVM,\r\n  StatusReasons,\r\n  CenterBranchesVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-status\",\r\n  templateUrl: \"./reservation-status.component.html\",\r\n  styleUrls: [\"./reservation-status.component.scss\"],\r\n})\r\nexport class ReservationStatusComponent implements OnInit {\r\n  reservationId: number;\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: any;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  AcceptReservation: any;\r\n  userName: string = \"\";\r\n  itemsCount: any;\r\n  statuses: Status[];\r\n  studyingGroups: StudentGroupVM[];\r\n  Reasons: StatusReasons[];\r\n  CenterBranches: CenterBranchesVM[];\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get Id() {\r\n    return this.myForm.get(\"EduCompUser_Status.Id\");\r\n  }\r\n\r\n  get statusId() {\r\n    return this.myForm.get(\"EduCompUser_Status.statusId\");\r\n  }\r\n\r\n  get groupId() {\r\n    return this.myForm.get(\"EduCompUser_Status.groupId\");\r\n  }\r\n\r\n  get note() {\r\n    return this.myForm.get(\"EduCompUser_Status.note\");\r\n  }\r\n\r\n  get EduCompUserId() {\r\n    return this.myForm.get(\"EduCompUser_Status.EduCompUserId\");\r\n  }\r\n\r\n  get statusReasonId() {\r\n    return this.myForm.get(\"EduCompUser_Status.statusReasonId\");\r\n  }\r\n\r\n  get CenterBranchId() {\r\n    return this.myForm.get(\"EduCompUser_Status.CenterBranchId\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"code\",\r\n    \"status\",\r\n    \"reason\",\r\n    \"group\",\r\n    \"from\",\r\n    \"to\",\r\n    \"note\",\r\n  ];\r\n  dataSource: MatTableDataSource<StudentStatusListVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private reservationServ: ReservationService,\r\n    private toaster: ToastrService,\r\n    private authservice: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.reservationId = Number(params.get(\"reservationId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authservice.getEduCompId();\r\n    this.branchId = this.authservice.getBranchId();\r\n    this.getStudentStatus(this.reservationId, this.EduCompId);\r\n    this.returnBranchesByEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      EduCompUser_Status: this.fb.group({\r\n        Id: [\"\", Validators.required],\r\n        statusId: [\"\", Validators.required],\r\n        groupId: [\"\"],\r\n        note: [\"\"],\r\n        EduCompUserId: [\"\"],\r\n        statusReasonId: [\"\"],\r\n        CenterBranchId: [\"\"],\r\n      }),\r\n      studentUserId: [\"\", Validators.required],\r\n      Code: [\"\"],\r\n      reserveId: [\"\"],\r\n      EduCompId: [\"\"],\r\n      AcceptReservation: [\"\"],\r\n    });\r\n\r\n    this.FormCtrls.AcceptReservation?.setValue(this.AcceptReservation);\r\n    this.FormCtrls.EduCompId?.setValue(this.EduCompId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authservice.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentStatus(this.reservationId, e.EduCompId);\r\n      this.EduCompUserId.setValue(e.EduCompId);\r\n    });\r\n\r\n    this.authservice.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n      this.CenterBranchId.setValue(e.branchId);\r\n    });\r\n\r\n    this.dataSource.paginator! = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getStudentStatus(reservationId: any, EduCompId: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .GetStudentStatus(reservationId, EduCompId)\r\n      .subscribe((res: any) => {\r\n        // console.log('GetStudentStatus', res);\r\n        this.getReasonsByStatusId(res.EduCompUser_Status.statusId);\r\n\r\n        this.statuses = res.statuses;\r\n        this.studyingGroups = res.studyingGroups;\r\n        this.myForm.patchValue(res);\r\n        this.FormCtrls.studentUserId.setValue(res.studentUserId);\r\n        this.userName = res.userName;\r\n        this.FormCtrls.AcceptReservation?.setValue(this.AcceptReservation);\r\n        this.ReservationStatusPaging(1);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SubmitReservationStatus(event: any) {\r\n    this.CenterBranchId.setValue(this.branchId);\r\n\r\n    if (!this.CenterBranchId?.value) {\r\n      this.toaster.warning(\"يجب اختيار فرع\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      event.target.disabled = true;\r\n      this.spinner.show();\r\n      this.reservationServ\r\n        .SubmitReservationStatus(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          event.target.disabled = false;\r\n          if (res.returnValue == 200 && res.returnString == \"Success\") {\r\n            this.toaster.success(\"تم حفظ التغيرات بنجاح\");\r\n            this.ReservationStatusPaging(1);\r\n            this.getStudentStatus(this.reservationId, this.EduCompId); //retrieving the latest EduCompUserStatus Id\r\n          } else {\r\n            this.toaster.error(res.returnString, res.returnValue);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  ReservationStatusPaging(page: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .ReservationStatusPaging(page, this.EduCompUserId?.value)\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource(res.list);\r\n        this.itemsCount = res.itemsCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getReasonsByStatusId(StatusId: any) {\r\n    this.Reasons = [];\r\n    this.statusReasonId?.setValue(\"\");\r\n    if (StatusId) {\r\n      this.reservationServ\r\n        .getReasonsByStatusId<StatusReasons[]>(StatusId)\r\n        .subscribe((res) => {\r\n          this.Reasons = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  returnBranchesByEduCompId() {\r\n    this.CenterBranches = [];\r\n    this.reservationServ\r\n      .returnBranchesByEduCompId<CenterBranchesVM[]>(this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CenterBranches = res;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"labels.StudentStatusEdit\" | translate }} - {{ userName }}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"labels.StudentStatusEdit\" | translate }}\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" [value]=\"userName\" readonly=\"\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.CenterCode\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"Code\" formControlName=\"Code\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <ng-container formGroupName=\"EduCompUser_Status\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                  <mat-select\r\n                    formControlName=\"statusId\"\r\n                    (selectionChange)=\"getReasonsByStatusId(statusId?.value)\"\r\n                  >\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let status of statuses\"\r\n                      [value]=\"status.Id\"\r\n                    >\r\n                      {{ status.Ar_Name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                  <mat-select formControlName=\"groupId\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let group of studyingGroups\"\r\n                      [value]=\"group.Id\"\r\n                    >\r\n                      {{ group.groupName }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div\r\n                class=\"col-md-4 col-12\"\r\n                *ngIf=\"\r\n                  statusId?.value == 2 ||\r\n                  statusId?.value == 4 ||\r\n                  statusId?.value == 5\r\n                \"\r\n              >\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Reason\" | translate }} </mat-label>\r\n                  <mat-select formControlName=\"statusReasonId\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let reason of Reasons\"\r\n                      [value]=\"reason.Id\"\r\n                    >\r\n                      {{ reason.reasonText }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-8\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                  <textarea matInput type=\"text\" formControlName=\"note\">\r\n                  </textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitReservationStatus($event)\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.StudentStatus\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CenterCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Status?.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- reason Column -->\r\n            <ng-container matColumnDef=\"reason\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Reason\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.reasonText }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.groupName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- from Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let data\">\r\n                {{ data?.FromDate | NewDate }} {{ data?.FromDate | Time }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- to Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let data\">\r\n                {{ data?.ToDate | NewDate }} {{ data?.ToDate | Time }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Note }}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"ReservationStatusPaging($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { ManageViewsService } from \"./../../../services/Admin/manage-views.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  CustomDiscountDropMV,\r\n  IStudentCustomDiscountsMV,\r\n  StudentCustomDiscountsListMV,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-student-discount\",\r\n  templateUrl: \"./student-discount.component.html\",\r\n  styleUrls: [\"./student-discount.component.scss\"],\r\n})\r\nexport class StudentDiscountComponent implements OnInit {\r\n  userId: any;\r\n  functionId: any;\r\n  EduCompId: any;\r\n  myForm!: FormGroup;\r\n  searchForm!: FormGroup;\r\n  userName: string = \" \";\r\n  CustomDiscountList: CustomDiscountDropMV[];\r\n  // StudentCustomDiscountsList: StudentCustomDiscountsListMV[];\r\n\r\n  displayedColumns: string[] = [\"#\", \"name\", \"discount\", \"teacher\", \"note\"];\r\n  dataSource: MatTableDataSource<StudentCustomDiscountsListMV>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private reservationServ: ReservationService,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private authservice: AuthService,\r\n    private ManageViewsService: ManageViewsService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // this.route.paramMap.subscribe((params) => {\r\n    //   this.userId = params.get(\"userId\");\r\n    // });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authservice.getEduCompId();\r\n    // this.getStudentCustomDiscount();\r\n    this.getCustomDiscount();\r\n    //  this.getStudentCustomDiscountsList();\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [this.userId, Validators.required],\r\n      customDiscountId: [\"\", Validators.required],\r\n      note: [\"\"],\r\n    });\r\n  }\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.authservice.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getCustomDiscount();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.userId = res.userId;\r\n        this.getStudentCustomDiscount();\r\n        this.getStudentCustomDiscountsList();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  updateStudentCustomDiscount() {\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationServ\r\n        .updateStudentCustomDiscount(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          this.getStudentCustomDiscountsList();\r\n          this.toaster.success(\"تم التغيير\");\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getStudentCustomDiscount() {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getStudentCustomDiscount<IStudentCustomDiscountsMV>(this.userId)\r\n      .subscribe((res) => {\r\n        console.log(\"getStudentCustomDiscount\", res);\r\n        if (res != null) {\r\n          this.userName = res.User.ar_name;\r\n          this.FormCtrls.userId.setValue(res.User.user_ID);\r\n          this.FormCtrls.customDiscountId.setValue(res.Discount?.Id || \"\");\r\n          this.FormCtrls.note.setValue(res.note);\r\n        } else {\r\n          this.toaster.warning(\"Student not found\");\r\n          this.userName = \"\";\r\n          this.myForm.reset();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getStudentCustomDiscountsList() {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getStudentCustomDiscountsList<StudentCustomDiscountsListMV[]>(\r\n        this.userId\r\n      )\r\n      .subscribe((res) => {\r\n        this.dataSource = new MatTableDataSource(res);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getCustomDiscount() {\r\n    this.reservationServ\r\n      .getCustomDiscount<CustomDiscountDropMV[]>(this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CustomDiscountList = res;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"labels.UpdateDiscount\" | translate }} - {{ userName }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.SearchStudent\" | translate }}\r\n        <!-- <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button> -->\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <!--\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"labels.UpdateDiscount\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" [value]=\"userName\" readonly=\"\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.DiscountType\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"customDiscountId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let CustomDiscount of CustomDiscountList\"\r\n                    [value]=\"CustomDiscount?.Id\"\r\n                  >\r\n                    {{ CustomDiscount.PreviewName }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                <textarea matInput type=\"text\" formControlName=\"note\">\r\n                </textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"updateStudentCustomDiscount()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"this.dataSource?.data?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Discount\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.UserDetails?.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- discount Column -->\r\n            <ng-container matColumnDef=\"discount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.CustomDiscountDetails?.Ar_Name }} -\r\n                {{ ele?.CustomDiscountDetails?.Amount }} %\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- teacher Column -->\r\n            <ng-container matColumnDef=\"teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Teacher }}</td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.note }}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            >>\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { SearchStudentsService } from \"app/admin/services/Admin/searchStudents.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport {\r\n  studyingGroupsDropVM,\r\n  statutsDropVM,\r\n  student,\r\n} from \"app/shared/models/general/general\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { studentVM } from \"app/admin/models/admin/student-group\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\n@Component({\r\n  selector: \"app-students-index\",\r\n  templateUrl: \"./students-index.component.html\",\r\n  styleUrls: [\"./students-index.component.scss\"],\r\n})\r\nexport class StudentsIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  functionId: number;\r\n  groups: studyingGroupsDropVM[] = [];\r\n  Statuts: statutsDropVM[] = [];\r\n\r\n  students: student[] = [];\r\n  myForm!: FormGroup;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"name\",\r\n    \"code\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<studentVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  userId: any = null;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private SearchStudentsService: SearchStudentsService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private authserv: AuthService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // route.queryParamMap.subscribe((params) => {\r\n    //   this.functionId = Number(params.get(\"functionId\"));\r\n    //   if (this.functionId) {\r\n    //     this.authserv\r\n    //       .getUserRowFunctions(this.functionId)\r\n    //       .subscribe((res: any) => {\r\n    //         if (res) {\r\n    //           this.rowFunctions = res;\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      queryStringEm: [\"\", Validators.email],\r\n      queryStringCo: [\"\"],\r\n      queryStringPhoneNumber: [\"\"],\r\n      queryStringMozakretyCode: [\"\"],\r\n      statusId: [\"\"],\r\n      studyingGroup: [\"\"],\r\n      page: [\"\"],\r\n    });\r\n    //this.getGroupsByEduCompId();\r\n    this.getStudentsByEduCompId(1);\r\n    this.getStudentGroupsAndStatuts();\r\n  }\r\n\r\n  //Get Students ByEduCompId\r\n  getStudentsByEduCompId(p: number) {\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    this.p = p;\r\n    this.spinner.show();\r\n    this.SearchStudentsService.getStudentsByEduCompId(\r\n      this.EduCompId,\r\n      this.myForm.value\r\n    ).subscribe((res: any) => {\r\n      console.log(\"getStudents\", res);\r\n      this.students = res.lists;\r\n      console.log(\"hello\", res.lists);\r\n      this.dataSource = new MatTableDataSource(res.lists);\r\n      this.itemsCount = res.totalCount;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //Get Students ByEduCompId\r\n  getStudentGroupsAndStatuts() {\r\n    this.spinner.show();\r\n    this.SearchStudentsService.getStudentGroupsAndStatuts(\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      this.groups = res.studyingGroups;\r\n      this.Statuts = res.status;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentGroupsAndStatuts();\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.getStudentsByEduCompId(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  deleteStudent(user_ID: number) {\r\n    let confirmed = confirm(\"Are you sure?\");\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.SearchStudentsService.deleteStudent(\r\n        this.EduCompId,\r\n        user_ID\r\n      ).subscribe((res: any) => {\r\n        console.log(\"deleteStudent\", res);\r\n        if (res.returnValue == 1) {\r\n          let i = this.students.findIndex((e) => e.user_ID == user_ID);\r\n          console.log(i);\r\n          this.students.splice(i, 1);\r\n          this.toastr.success(\"تم الحذف\");\r\n        } else console.log(\"Error:\", res);\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getUserId(userId: any) {\r\n    this.userId = userId;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"queryStringEm\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"queryStringPhoneNumber\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.MozakrtyCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"code\"\r\n                      formControlName=\"queryStringMozakretyCode\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.CenterCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"code\"\r\n                      formControlName=\"queryStringCo\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{ group.groupName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"statusId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let status of Statuts\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{ status.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getStudentsByEduCompId(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Students\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                <a\r\n                  routerLink=\"/dashboard/reservation/balance-details/{{\r\n                    student?.user_ID\r\n                  }}\"\r\n                  [queryParams]=\"{ functionId: functionId }\"\r\n                  class=\"success p-0\"\r\n                  matTooltip=\"رصيد الطالب \"\r\n                >\r\n                  <i class=\"fa fa-money font-medium-3 mr-2\"></i>\r\n                </a>\r\n                <ng-container *ngFor=\"let fun of rowFunctions\"> </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getStudentsByEduCompId($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IAddEditBranchModel,\r\n  IBranchesViewModel,\r\n  IBranchModel,\r\n  IDistrictDropModel,\r\n} from \"app/admin/models/roles/function\";\r\nimport { BranchesService } from \"app/admin/services/roles/branches.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-center-branches\",\r\n  templateUrl: \"./center-branches.component.html\",\r\n  styleUrls: [\"./center-branches.component.scss\"],\r\n})\r\nexport class CenterBranchesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  EduCompId: any;\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n  itemsCount: number = 0;\r\n\r\n  branches: IBranchModel[] = [];\r\n  districts: IDistrictDropModel[] = [];\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchId\");\r\n  }\r\n  get branchNameCtrl() {\r\n    return this.myForm.get(\"branchName\");\r\n  }\r\n  //get addressCtrl() { return this.myForm.get('address'); }\r\n  get districtIdCtrl() {\r\n    return this.myForm.get(\"districtId\");\r\n  }\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  displayedColumns: string[] = [\"#\", \"name\", \"region\", \"actions\"];\r\n  dataSource: MatTableDataSource<IBranchModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private branchService: BranchesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //console.log(`row Functions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchId: [0],\r\n      branchName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      //address: [null],\r\n      districtId: [\"\", Validators.required],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchService\r\n      .getAllDistricts<IDistrictDropModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"districts: \", response);\r\n          this.districts = response;\r\n        }\r\n      });\r\n\r\n    this.getAllBranches(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.getAllBranches(1);\r\n    });\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllBranches(pageNumber: number) {\r\n    this.spinner.show();\r\n    console.log(\"Educom\", this.EduCompId);\r\n    this.branchService\r\n      .getAllAllCenterBranches<IBranchesViewModel>(this.EduCompId, pageNumber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"branches: \", response);\r\n          this.branches = response.centerBrnachesList;\r\n          this.dataSource = new MatTableDataSource(response.centerBrnachesList);\r\n          this.itemsCount = response.itemsCount;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editBranch(branch: IBranchModel) {\r\n    this.branchIdCtrl?.setValue(branch.Id);\r\n    this.branchNameCtrl?.setValue(branch.Name);\r\n    //this.addressCtrl?.setValue(branch.address);\r\n    this.districtIdCtrl?.setValue(branch.districtId);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeBranch(branch: IBranchModel) {\r\n    this.spinner.show();\r\n    this.branchService.deleteBranch(branch.Id).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"user: \", response);\r\n        this.getAllBranches(1);\r\n        this.msg.success(\"تم مسح الفرع بنجاح\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditBranchModel;\r\n      obj.Id = this.branchIdCtrl?.value;\r\n      obj.Name = this.branchNameCtrl?.value;\r\n      obj.districtId = this.districtIdCtrl?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n\r\n      //  console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.branchService\r\n        .addEditBranches<IAddEditBranchModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n\r\n          if (response && response.returnValue === 200) {\r\n            this.addBtn.nativeElement.innerText = \"Add\";\r\n            // console.log(\"created: \", response);\r\n\r\n            // let index = this.branches.findIndex(r => r.Id == response.Id);\r\n            // if (index === -1) {\r\n            //   this.msg.success(\"تم إنشاء الصلاحيه بنجاح\");\r\n            //   this.branches.push(response.branch);\r\n            // } else {\r\n            //   this.branches[index] = response.branch;\r\n            //   this.msg.success(\"تم تعديل الصلاحيه بنجاح\");\r\n            // }\r\n\r\n            this.getAllBranches(1);\r\n            this.msg.success(\"تم إضافه/تعديل البيانات الفرع بنجاح\");\r\n            this.myForm.reset();\r\n            //console.log(\"branches: \", this.branches);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(branch: IBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateCenterBranch\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"branchName\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        branchNameCtrl.invalid &&\r\n                        (branchNameCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          branchNameCtrl.errors?.required ||\r\n                          branchNameCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Region\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"districtId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let dis of districts\"\r\n                        [value]=\"dis.Id\"\r\n                      >\r\n                        {{ dis.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        districtIdCtrl.invalid &&\r\n                        (districtIdCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"districtIdCtrl.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.CenterBranches\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">{{ branch.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- region Column -->\r\n            <ng-container matColumnDef=\"region\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Region\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.districtName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editBranch(branch)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(branch)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllBranches($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"./../../../../shared/validators/customeValid.validator\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionViewModel,\r\n  IAddEditFunctionModel,\r\n} from \"app/admin/models/roles/function\";\r\nimport { IFunctionsModel } from \"app/admin/models/roles/roles\";\r\nimport { FunctionsService } from \"app/admin/services/roles/functions.service\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-functions-setup\",\r\n  templateUrl: \"./functions-setup.component.html\",\r\n  styleUrls: [\"./functions-setup.component.scss\"],\r\n})\r\nexport class FunctionsSetupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  itemsCount: any;\r\n  functions: IFunctionsModel[] = [];\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  get functionIdCtrl() {\r\n    return this.myForm.get(\"functionId\");\r\n  }\r\n  get functionNameEnCtrl() {\r\n    return this.myForm.get(\"functionNameEn\");\r\n  }\r\n  get functionNameArCtrl() {\r\n    return this.myForm.get(\"functionNameAr\");\r\n  }\r\n  get linkCtrl() {\r\n    return this.myForm.get(\"link\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\"#\", \"arName\", \"enName\", \"link\", \"actions\"];\r\n  dataSource: MatTableDataSource<IFunctionsModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private functionService: FunctionsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      functionId: [0],\r\n      functionNameEn: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      functionNameAr: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      link: [null],\r\n    });\r\n\r\n    this.getAllFunctions(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllFunctions(pageNumber: number) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IFunctionViewModel>(pageNumber, false)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"functions: \", response);\r\n          this.functions = response.functions;\r\n          this.dataSource = new MatTableDataSource(response.functions);\r\n          this.itemsCount = response.itemsCount;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editFunction(func: IFunctionsModel) {\r\n    this.functionIdCtrl?.setValue(func.Id);\r\n    this.functionNameEnCtrl?.setValue(func.function_en_name);\r\n    this.functionNameArCtrl?.setValue(func.functionName);\r\n    this.linkCtrl?.setValue(func.functionURL);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeFunction(func: IFunctionsModel) {\r\n    this.spinner.show();\r\n    this.functionService.deleteFunction(func.Id).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"function: \", response);\r\n        this.getAllFunctions(1);\r\n        this.msg.success(\"تم مسح الوظيفه بنجاح\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditFunctionModel;\r\n      obj.Id = this.functionIdCtrl?.value;\r\n      obj.functionName = this.functionNameArCtrl?.value;\r\n      obj.function_en_name = this.functionNameEnCtrl?.value;\r\n      obj.functionURL = this.linkCtrl?.value;\r\n\r\n      // console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.functionService\r\n        .addEditFunction<IAddEditFunctionModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.addBtn.nativeElement.innerText = \"Add\";\r\n          this.submitted = false;\r\n          if (response && response.returnValue === 200) {\r\n            //console.log(\"created: \", response);\r\n\r\n            this.getAllFunctions(1);\r\n            this.msg.success(\"تم إضافه/تعديل البيانات الوظيفه بنجاح\");\r\n            this.myForm.reset();\r\n            // console.log(\"functions: \", this.functions);\r\n          }\r\n          this.spinner.show();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(func: IFunctionsModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeFunction(func);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateFunction\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameAr\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameArCtrl.invalid &&\r\n                        (functionNameArCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameArCtrl.errors?.required ||\r\n                          functionNameArCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameEn\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameEnCtrl.invalid &&\r\n                        (functionNameEnCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameEnCtrl.errors?.required ||\r\n                          functionNameEnCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Link\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"link\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Functions\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- arName Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.function_en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- link Column -->\r\n            <ng-container matColumnDef=\"link\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Link\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionURL }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let func\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editFunction(func)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(func)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllFunctions($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { IRolesViewModel } from \"app/admin/models/roles/roles\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-add-role\",\r\n  templateUrl: \"./add-role.component.html\",\r\n  styleUrls: [\"./add-role.component.scss\"],\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  roles: IRolesViewModel[] = [];\r\n  EduCompId: any;\r\n  get roleIdCtrl() {\r\n    return this.myForm.get(\"roleId\");\r\n  }\r\n  get roleNameCtrl() {\r\n    return this.myForm.get(\"roleName\");\r\n  }\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  displayedColumns: string[] = [\"#\", \"Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<IRolesViewModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      roleId: [0],\r\n      roleName: [null, [Validators.required]],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n    this.spinner.show();\r\n    this.roleService.getAllRoles<IRolesViewModel[]>(this.EduCompIdCtrl.value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      if (response) {\r\n          console.log(\"roles init: \", response);\r\n        this.roles = response;\r\n        this.dataSource = new MatTableDataSource(response);\r\n        this.dataSource.paginator = this.paginator;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.roleService.getAllRoles<IRolesViewModel[]>(this.EduCompIdCtrl.value).subscribe((response) => {\r\n        this.spinner.hide();\r\n        if (response) {\r\n            console.log(\"roles after init: \", response);\r\n          this.roles = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      });\r\n    });\r\n   \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editRole(role: IRolesViewModel) {\r\n    this.roleIdCtrl?.setValue(role.Id);\r\n    this.roleNameCtrl?.setValue(role.roleName);\r\n  this.EduCompIdCtrl.setValue(role.EduCompId);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeRole(role: IRolesViewModel) {\r\n    this.spinner.show();\r\n    this.roleService.deleteRole(role.Id).subscribe((response: any) => {\r\n      if (response.returnString == \"Success\") {\r\n        //  console.log(\"roles: \", response);\r\n        let index = this.dataSource.data.findIndex((r) => r.Id == role.Id);\r\n        this.dataSource.data.splice(index, 1);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.msg.success(\"تم مسح الصلاحيه بنجاح\");\r\n      } else this.msg.warning(response.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.roleNameCtrl?.value) {\r\n      this.msg.warning(\"يرجي إدخال اسم الصلاحيه\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IRolesViewModel;\r\n      obj.Id = this.roleIdCtrl?.value;\r\n      obj.roleName = this.roleNameCtrl.value;\r\nobj.EduCompId=this.EduCompIdCtrl.value;\r\nconsole.log(\"role model\",obj);\r\n      this.roleService\r\n        .addEditRole<IRolesViewModel, any>(obj)\r\n        .subscribe((response) => {\r\n          if (response && response.returnValue === 200) {\r\n            // console.log(\"created: \", response);\r\n\r\n            let index = this.roles.findIndex((r) => r.Id == response.role.Id);\r\n            if (index === -1) {\r\n              this.msg.success(\"تم إنشاء الصلاحيه بنجاح\");\r\n              this.dataSource.data.push(response.role);\r\n              this.dataSource.paginator = this.paginator;\r\n            } else {\r\n              this.roles[index] = response.role;\r\n              this.msg.success(\"تم تعديل الصلاحيه بنجاح\");\r\n            }\r\n            this.myForm.reset();\r\n            // console.log(\"roles: \", this.roles);\r\n          }\r\n          this.addBtn.nativeElement.innerText = \"Add\";\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(role: IRolesViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: role.roleName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeRole(role);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRole\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"roleName\" />\r\n                    <mat-error *ngIf=\"roleNameCtrl.errors?.required\">\r\n                      {{ \"labels.mustEnterValue\" | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Roles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let role\">{{ role.roleName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let role\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editRole(role)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(role)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/role-fuctions/{{ role.Id }}\"\r\n                    [queryParams]=\"{ parentId: functionId, functionId: fun.Id }\"\r\n                    *ngIf=\"fun.functionName === 'Functions'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"add functions\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRoleFunctions\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <mat-checkbox\r\n                  [checked]=\"allChecked\"\r\n                  (change)=\"SelectAll()\"\r\n                  color=\"accent\"\r\n                  class=\"mb-1\"\r\n                >\r\n                  {{ \"General.SelectAll\" | translate }}\r\n                </mat-checkbox>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\" *ngFor=\"let group of groupFunctions\">\r\n                <mat-card>\r\n                  <mat-card-title>{{\r\n                    group.classificationName | translate\r\n                  }}</mat-card-title>\r\n                  <mat-card-content>\r\n                    <div class=\"row\">\r\n                      <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                      <div\r\n                        class=\"col-12 col-xl-6\"\r\n                        *ngFor=\"let func of group.functions; let i = index\"\r\n                      >\r\n                        <mat-checkbox\r\n                          id=\"functions{{ func.Id }}\"\r\n                          (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                          [checked]=\"functionIds.includes(func.Id)\"\r\n                        >\r\n                          {{ func.functionName | translate }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onAddFunctions()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionsModel,\r\n  IRoleFunctionsModel,\r\n  IAddEditRoleFunctionsModel,\r\n  IGroupFunctionsModel,\r\n} from \"app/admin/models/roles/roles\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-role-functions\",\r\n  templateUrl: \"./role-functions.component.html\",\r\n  styleUrls: [\"./role-functions.component.scss\"],\r\n})\r\nexport class RoleFunctionsComponent implements OnInit {\r\n  roleId: any;\r\n  functions: IFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsModel[] = [];\r\n  roleFunctions: IRoleFunctionsModel[] = [];\r\n  functionIds: number[] = [];\r\n  roleName: string = \"\";\r\n  allChecked: boolean = false;\r\n  allFunctionsLength = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.roleId = param.get(\"roleId\");\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllFunctions();\r\n    this.getAllRoleFunctions();\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IGroupFunctionsModel[]>(0, true)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //console.log(\"functions: \", response);\r\n          this.groupFunctions = response;\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength =\r\n              this.allFunctionsLength + g.functions.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllRoleFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllRoleFunctions<IRoleFunctionsModel[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"role functions: \", response);\r\n          this.roleFunctions = response;\r\n          this.roleName = this.roleFunctions[0].roleName;\r\n\r\n          for (let i = 0; i < this.roleFunctions.length; i++) {\r\n            this.functionIds.push(this.roleFunctions[i].function.Id);\r\n          }\r\n\r\n          if (this.functionIds.length === this.allFunctionsLength)\r\n            this.allChecked = true;\r\n          else this.allChecked = false;\r\n          //  console.log(\"edit functions IDs\", this.functionIds);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.functionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.functionIds.findIndex((id) => id === functionId);\r\n      this.functionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.functions.forEach((e) => {\r\n          let found = this.functionIds.includes(e.Id);\r\n          if (!found) this.functionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.functionIds = [];\r\n    }\r\n  }\r\n\r\n  onAddFunctions() {\r\n    let obj = {} as IAddEditRoleFunctionsModel;\r\n    obj.roleId = this.roleId;\r\n    obj.functionsList = this.functionIds;\r\n    // if (obj.functionsList.length == 0) {\r\n    //   this.msg.warning(\"يجب اختيار ظيفة واحده علي الاقل\");\r\n    //   return;\r\n    //   } else {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .addEditRoleFunctions<IAddEditRoleFunctionsModel, any>(obj)\r\n      .subscribe((response) => {\r\n        if (response && response.returnValue === 200) {\r\n          this.msg.success(\"تم تعديل وظائف الصلاحيه بنجاح\");\r\n          ///  console.log(\"add/edit functions: \", response);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    //  }\r\n  }\r\n}\r\n","import { GroupByService } from \"./../../../../shared/services/General/group-by.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IGroupFunctionsListVM,\r\n  IRoleFunctionsModel,\r\n} from \"app/admin/models/roles/roles\";\r\nimport {\r\n  IBranchViewModel,\r\n  IUserBranchModel,\r\n  IUserBranchFunctionViewModel,\r\n  IUserFunctionModel,\r\n  IAddUserBranchFunctionsModel,\r\n  IBranchUserModel,\r\n  IUserModel,\r\n} from \"app/admin/models/roles/user\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { UsersService } from \"app/admin/services/roles/users.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-user-branches-roles\",\r\n  templateUrl: \"./user-branches-roles.component.html\",\r\n  styleUrls: [\"./user-branches-roles.component.scss\"],\r\n})\r\nexport class UserBranchesRolesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  userId: number;\r\n  roleId: number;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  allFunctionsLength = 0;\r\n  submitted: boolean = false;\r\n  allChecked: boolean = false;\r\n  branches: IBranchViewModel[] = [];\r\n  // functions: IRoleFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsListVM[] = [];\r\n  functionIds: number[] = [];\r\n  checkedfunctionIds: number[] = [];\r\n  rowFunctions: IRowFunctionVM[];\r\n  userBranchesWithFunctions: IUserBranchModel[] = [];\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"branchName\",\r\n    \"FunctionName\",\r\n    \"from\",\r\n    \"to\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserBranchModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: ToastrService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    private roleService: RolesService,\r\n    private groupByService: GroupByService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.userId = Number(param.get(\"userId\"));\r\n      this.roleId = Number(param.get(\"roleId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchsIds\");\r\n  }\r\n  get fromDateCtrl() {\r\n    return this.myForm.get(\"fromDate\");\r\n  }\r\n  get toDateCtrl() {\r\n    return this.myForm.get(\"toDate\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchsIds: [[]],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n    });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    this.getAllBranchesByCenter();\r\n    this.getAllFunctions();\r\n    this.getAllUserBranchesWithFunctions();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllBranchesByCenter() {\r\n    this.spinner.show();\r\n    this.userService\r\n      .getAllBranchesByCenter<IBranchViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"branches: \", response);\r\n          this.branches = response;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctionsByRoleId<IGroupFunctionsListVM[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"functions by roleId: \", response);\r\n          this.groupFunctions = this.groupByService.groupBy(\r\n            response,\r\n            \"classificationName\"\r\n          );\r\n\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength = this.allFunctionsLength + g.List.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.functionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.functionIds.findIndex((id) => id === functionId);\r\n      this.functionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.List.forEach((e) => {\r\n          let found = this.functionIds.includes(e.Id);\r\n          if (!found) this.functionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.functionIds = [];\r\n    }\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllUserBranchesWithFunctions<IUserBranchFunctionViewModel>(\r\n        this.userId\r\n      )\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //   console.log(\"brances with functions for user: \", response);\r\n          this.userBranchesWithFunctions = response.branchUserList;\r\n          this.dataSource = new MatTableDataSource(response.branchUserList);\r\n          for (let funParent of this.userBranchesWithFunctions) {\r\n            for (let fun of funParent.roleFunctionsList) {\r\n              this.checkedfunctionIds.push(fun.Id);\r\n            }\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeBranch(branch: IUserBranchModel) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserBranchRoleFunction(this.userId, branch.branchId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"remove brances with functions: \", response);\r\n          let i = this.dataSource.data.findIndex((e) => e == branch);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"branch has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onDeleteFunction(func: any) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserRoleFunctions(func.centerBranchUserFuncId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"remove function: \", response);\r\n          this.getAllUserBranchesWithFunctions();\r\n          this.msg.success(\"function has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // console.log(this.branchIdCtrl?.value);\r\n    if (this.functionIds.length <= 0) {\r\n      this.msg.warning(\"Must select at least one function\");\r\n      return;\r\n    }\r\n\r\n    if (this.branchIdCtrl?.value.length == 0) {\r\n      this.msg.warning(\"Must select at least one branch\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddUserBranchFunctionsModel;\r\n      obj.roleFunctionsIds = this.functionIds;\r\n      obj.branchsIds = this.branchIdCtrl?.value;\r\n      obj.branchUser = {} as IBranchUserModel;\r\n      obj.branchUser.userId = this.userId;\r\n      obj.branchUser.branchId = 0;\r\n      obj.branchUser.from = this.datePipe.transform(this.fromDateCtrl.value);\r\n      obj.branchUser.to = this.datePipe.transform(this.toDateCtrl.value);\r\n\r\n      this.roleService\r\n        .addUserBranchesAndRoleFunctions(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n          if (response) {\r\n            //console.log(\"add new branch with functions: \", response);\r\n            this.getAllUserBranchesWithFunctions();\r\n            this.msg.success(\"branch has been added success\");\r\n            this.myForm.reset();\r\n            this.functionIds = [];\r\n            this.checkedfunctionIds = [];\r\n            this.allChecked = false;\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(branch: IUserBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.branchName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n\r\n  openDeleateFunctionDialog(func: IUserFunctionModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.onDeleteFunction(func);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddUserBranchesAndRoles\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\"  >\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label\r\n                      >{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchsIds\" multiple>\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let branch of branches\"\r\n                        [value]=\"branch.Id\"\r\n                      >\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        branchIdCtrl.invalid &&\r\n                        (branchIdCtrl.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"branchIdCtrl.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-checkbox\r\n                    [checked]=\"allChecked\"\r\n                    (change)=\"SelectAll()\"\r\n                    color=\"accent\"\r\n                  >\r\n                    {{ \"General.SelectAll\" | translate }}\r\n                  </mat-checkbox>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"col-md-4 col-12\"\r\n                  *ngFor=\"let group of groupFunctions; let i = index\"\r\n                >\r\n                  <mat-card>\r\n                    <mat-card-title>{{ group.key | translate }}</mat-card-title>\r\n                    <mat-card-content>\r\n                      <div class=\"row\">\r\n                        <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                        <div\r\n                          class=\"col-12 col-xl-6\"\r\n                          *ngFor=\"let func of group.List; let i = index\"\r\n                        >\r\n                          <mat-checkbox\r\n                            id=\"functions{{ func.Id }}\"\r\n                            (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                            [checked]=\"functionIds.includes(func.Id)\"\r\n                          >\r\n                            {{ func.function.function_en_name | translate }}\r\n                          </mat-checkbox>\r\n                        </div>\r\n                      </div>\r\n                    </mat-card-content>\r\n                  </mat-card>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Save\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.UserBranchesAndRoles\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input matInput (keyup)=\"applyFilter($event)\" #input />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"branchName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.branchName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"FunctionName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FunctionName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <tr *ngFor=\"let func of branch.roleFunctionsList; index as i\">\r\n                  <td>{{ func.functionName | translate }}</td>\r\n                  <td>\r\n                    <a (click)=\"openDeleateFunctionDialog(func)\">\r\n                      <i class=\"fa fa-times fa fa-white\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.from | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.to | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(branch)\"\r\n                    class=\"danger p-0\"\r\n                     matTooltip=\"Delete\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input?.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  GetJob,\r\n  GetJobDepartment,\r\n  JobTitleByDepartment,\r\n  JopDepViewModel,\r\n} from \"app/admin/models/setup/job-title-by-department\";\r\nimport { DepartmentService } from \"app/admin/services/setup/department.service\";\r\nimport { JopTitleDepartmentService } from \"app/admin/services/setup/job-title-department.service\";\r\nimport { JobTitleService } from \"app/admin/services/setup/job-title.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { UpdateDateComponent } from \"app/shared/components/dialogs/update-date/update-date.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\nimport { IDepartmentModel } from \"../../../models/setup/department\";\r\nimport { AuthService } from \"./../../../../shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-deparment-jop-title\",\r\n  templateUrl: \"./deparment-job-title.component.html\",\r\n  styleUrls: [\"./deparment-job-title.component.scss\"],\r\n})\r\nexport class UserDeparmentAndJobTitleComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  curLang: string;\r\n  itemsCounts: number = 0;\r\n  departments: IDepartmentModel[] = [];\r\n  joblist: GetJob[] = [];\r\n  alljoblist: GetJobDepartment[] = [];\r\n  displayedColumns: string[] = [\r\n    \"id\",\r\n    \"EnglishDepartmentName\",\r\n\r\n    \"ArabicDepartmentName\",\r\n    \"JobTitle\",\r\n    \"options\",\r\n  ];\r\n  dataSource: MatTableDataSource<JobTitleByDepartment>;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  currentDate = new Date();\r\n\r\n  functionId: number;\r\n  EduCompId: number;\r\n  functionParentId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions = [\r\n  //   { functionName: \"Edit\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"UpdateArticalJob\" },\r\n  //   { functionName: \"DeleteArticalJob\" },\r\n  // ];\r\n  userId: number;\r\n  username: string;\r\n  jopTitle = [];\r\n  dep_id: number = 0;\r\n  pageNum: number = 0;\r\n  initTable: boolean = true;\r\n  deptsForUser: JobTitleByDepartment[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private _serjopTitlebyDepartment: JopTitleDepartmentService,\r\n    private toastr: ToastrService,\r\n    private _Serdep: DepartmentService,\r\n    private _serjob: JobTitleService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    public authserv: AuthService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    //get userid\r\n    route.paramMap.subscribe((params) => {\r\n      this.userId = Number(params.get(\"userId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.functionParentId = Number(params.get(\"parentId\"));\r\n      this.username = params.get(\"username\");\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getall(1);\r\n    this.getDepartmentsDropDown();\r\n    this.myForm = this.fb.group({\r\n      dept_id: [0, [Validators.required]],\r\n      job_departments: [\r\n        {\r\n          value: \"\",\r\n          disabled: true,\r\n        },\r\n        [Validators.required],\r\n      ],\r\n      from_date: [null],\r\n      to_date: [null],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.dataSource.sort = this.sort;\r\n    // this.dataSource.paginator = this.paginator;\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getDepartmentsDropDown();\r\n    });\r\n  }\r\n\r\n  get departmentCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(e: string) {\r\n    this.dataSource.filter = e.trim().toLowerCase();\r\n  }\r\n\r\n  customFilter() {\r\n    this.dataSource.filterPredicate = (data: JobTitleByDepartment, filter) => {\r\n      return (\r\n        data.dept_ar_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.dept_en_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.job_departments\r\n          ?.map((d) => d.job_ar_name)\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1 ||\r\n        data.job_departments\r\n          ?.map((d) => d.job_en_name)\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1\r\n      );\r\n    };\r\n  }\r\n\r\n  getDepartmentsDropDown() {\r\n    this._Serdep\r\n      .getDepartmentsDropDown(this.EduCompId)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          this.departments = res;\r\n        }\r\n      });\r\n  }\r\n\r\n  getJobTitleByDepartment(id: number) {\r\n    this.departmentCtrl[\"job_departments\"]?.setValue(\"\");\r\n    if (this.departmentCtrl[\"dept_id\"]?.value) {\r\n      this._serjob\r\n        //id=> id department\r\n        .getJobTitleByDepartment<GetJob>(id)\r\n        .subscribe((res: any) => {\r\n          if (res) {\r\n            this.joblist = res;\r\n\r\n            this.departmentCtrl[\"job_departments\"].enable();\r\n          } else this.departmentCtrl[\"job_departments\"].disable();\r\n        });\r\n    }\r\n  }\r\n\r\n  getall(page: number) {\r\n    this.pageNum = page;\r\n    this.spinner.show();\r\n    return this._serjopTitlebyDepartment\r\n      .getJopTitlebyDepartment<JopDepViewModel>(this.userId, page)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.dataSource = new MatTableDataSource(\r\n            data.userDepartmentJobtitleList\r\n          );\r\n          this.itemsCounts = data.itemsCounts;\r\n          this.deptsForUser = data.userDepartmentJobtitleList;\r\n          // console.log(this.deptsForUser)\r\n          this.initTableItems();\r\n          this.customFilter();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  initTableItems() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"job_departments\":\r\n          return this.curLang == \"ar\"\r\n            ? item.job_departments[0]?.job_ar_name\r\n            : item.job_departments[0]?.job_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n    // paginator\r\n    if (this.initTable) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.initTable = false;\r\n    }\r\n  }\r\n\r\n  addAll() {\r\n    if (\r\n      this.departmentCtrl[\"to_date\"].value &&\r\n      this.departmentCtrl[\"from_date\"].value >\r\n        this.departmentCtrl[\"to_date\"].value\r\n    ) {\r\n      this.toastr.error(\"تاريخ بداية الفترة أكبر من تاريخ نهاية الفترة\");\r\n    } else {\r\n      this.submitted = true;\r\n      const model = {\r\n        user_id: this.userId,\r\n        jobTitle_dept_id: this.departmentCtrl[\"job_departments\"].value,\r\n        from_date: this.datePipe.transform(\r\n          this.myForm.value.from_date ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.myForm.value.to_date),\r\n      };\r\n      // console.log(\"ff\", model);\r\n      if (this.myForm.valid) {\r\n        this.spinner.show();\r\n        this._serjopTitlebyDepartment\r\n          .addJopTitlebyDepartment(model)\r\n          .subscribe((res: any) => {\r\n            if (res.returnValue == 1) {\r\n              console.log(\"cc\", model);\r\n              this.submitted = false;\r\n              this.getall(this.pageNum);\r\n              this.toastr.success(\"تم حفظ الداتا بنجاح\");\r\n              this.myForm.reset();\r\n              this.departmentCtrl[\"dept_id\"]?.setValue(0);\r\n              // console.log(this.myForm.value);\r\n            } else this.toastr.error(res.returnString);\r\n          });\r\n      }\r\n      this.spinner.hide();\r\n    }\r\n  }\r\n\r\n  updetAll() {\r\n    if (\r\n      this.departmentCtrl[\"to_date\"].value &&\r\n      this.departmentCtrl[\"from_date\"].value >\r\n        this.departmentCtrl[\"to_date\"].value\r\n    ) {\r\n      this.toastr.error(\"تاريخ بداية الفترة أكبر من تاريخ نهاية الفترة\");\r\n    } else {\r\n      this.submitted = true;\r\n      let allDepJobIds: number[] = this.departmentCtrl[\"job_departments\"].value;\r\n      this.deptsForUser.forEach((dep) => {\r\n        if (dep.dept_id != this.dep_id) {\r\n          dep.job_departments.forEach((job) =>\r\n            allDepJobIds.push(job.dep_job_id)\r\n          );\r\n        }\r\n      });\r\n      // console.log(allDepJobIds)\r\n      const model = {\r\n        user_id: this.userId,\r\n        jobTitle_dept_id: allDepJobIds,\r\n        from_date: this.datePipe.transform(this.myForm.value.from_date),\r\n        to_date: this.datePipe.transform(this.myForm.value.to_date),\r\n      };\r\n      if (this.myForm.valid) {\r\n        this.spinner.show();\r\n        this._serjopTitlebyDepartment\r\n          .editAllDeparment(model, this.departmentCtrl[\"dept_id\"].value)\r\n          .subscribe((res: any) => {\r\n            if (res.returnValue == 1) {\r\n              this.submitted = false;\r\n              this.getall(this.pageNum);\r\n              this.toastr.success(\"تم حفظ الداتا بنجاح\");\r\n              this.myForm.reset();\r\n              this.departmentCtrl[\"dept_id\"].setValue(0);\r\n              this.dep_id = 0;\r\n            } else this.toastr.error(res.returnString);\r\n          });\r\n      }\r\n      this.spinner.hide();\r\n    }\r\n  }\r\n\r\n  editAll(department: JobTitleByDepartment) {\r\n    //  this.myForm.patchValue(department);\r\n    this.dep_id = department.dept_id;\r\n    this.departmentCtrl[\"dept_id\"].setValue(department.dept_id);\r\n    this.getJobTitleByDepartment(this.departmentCtrl[\"dept_id\"].value);\r\n    this.departmentCtrl[\"job_departments\"]?.setValue(\r\n      department.job_departments.map((j) => j.dep_job_id)\r\n    );\r\n  }\r\n\r\n  editDate(editjobTitle: GetJobDepartment) {\r\n    this.dialog\r\n      .open(UpdateDateComponent, {\r\n        data: {\r\n          user_dept_job_id: editjobTitle.user_dept_job_id,\r\n          from_date: editjobTitle.from_date,\r\n          to_date: editjobTitle.to_date,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n        if (res) this.getall(this.pageNum);\r\n      });\r\n  }\r\n\r\n  deleteUserDeptJobTitle(depId: JobTitleByDepartment) {\r\n    this._serjopTitlebyDepartment\r\n      .deleteUserDeptJobTitle(this.userId, depId.dept_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e == depId);\r\n          this.dataSource.data.splice(i, 1);\r\n          //this.dataSource.paginator = this.paginator;\r\n          this.translate\r\n            .get(\"categories.toasterdeleteSucses\")\r\n            .subscribe((data) => {\r\n              this.toastr.success(data);\r\n              this.getall(this.pageNum);\r\n              this.myForm.reset();\r\n              this.departmentCtrl[\"dept_id\"]?.setValue(0);\r\n              this.submitted = false;\r\n            });\r\n        } else this.toastr.error(res.returnString);\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(depId: JobTitleByDepartment): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? depId.dept_en_name : depId.dept_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUserDeptJobTitle(depId);\r\n      });\r\n  }\r\n\r\n  deleteJopTitle(jopid: GetJobDepartment) {\r\n    this._serjopTitlebyDepartment\r\n      .deleteJopTitle(jopid.user_dept_job_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.translate\r\n            .get(\"categories.toasterdeleteSucses\")\r\n            .subscribe((data) => {\r\n              this.toastr.success(data);\r\n              this.getall(this.pageNum);\r\n              this.myForm.reset();\r\n              this.departmentCtrl[\"dept_id\"]?.setValue(0);\r\n              this.submitted = false;\r\n            });\r\n        } else this.toastr.error(res.returnString);\r\n      });\r\n  }\r\n\r\n  openDeleateDialogJop(jopid: GetJobDepartment): void {\r\n    // console.log(\"id\", jopid.user_dept_job_id);\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.curLang == \"ar\" ? jopid.job_ar_name : jopid.job_en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJopTitle(jopid);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<mat-card>\r\n  <mat-card-title>\r\n    <span *ngIf=\"dep_id == 0\">\r\n      {{ \"jobTitlebyDepartment.adddepartment\" | translate | titlecase }} -\r\n      {{ username }}\r\n    </span>\r\n\r\n    <span *ngIf=\"dep_id > 0\">\r\n      {{ \"jobTitlebyDepartment.update\" | translate | titlecase }} -\r\n      {{ username }}\r\n    </span>\r\n    <a\r\n      mat-raised-button\r\n      routerLink=\"/dashboard/users\"\r\n      [queryParams]=\"{\r\n        functionId: functionParentId\r\n      }\"\r\n      class=\"btn btn-warning bg-light-warning float-right\"\r\n    >\r\n      {{ \"General.Back\" | translate }}\r\n    </a>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"jobTitlebyDepartment.adddepartment\" | translate }}\r\n                </mat-label>\r\n                <mat-select\r\n                  formControlName=\"dept_id\"\r\n                  (selectionChange)=\"\r\n                    getJobTitleByDepartment(departmentCtrl['dept_id'].value)\r\n                  \"\r\n                >\r\n                  <mat-option>\r\n                    {{ \"jobTitlebyDepartment.Choose\" | translate }}\r\n                  </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let department of departments\"\r\n                    [value]=\"department.id\"\r\n                  >\r\n                    {{\r\n                      currentLang == \"ar\"\r\n                        ? department.ar_name\r\n                        : department.en_name\r\n                    }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    departmentCtrl['dept_id']?.invalid &&\r\n                    (departmentCtrl['dept_id']?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"departmentCtrl['dept_id']?.errors?.required\">\r\n                    {{ \"jobTitlebyDepartment.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"jobTitlebyDepartment.addJopTitle\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"job_departments\" multiple>\r\n                  <mat-option>\r\n                    {{ \"jobTitlebyDepartment.Choose\" | translate }}\r\n                  </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let jobTitle of joblist\"\r\n                    [value]=\"jobTitle.id\"\r\n                  >\r\n                    {{\r\n                      currentLang == \"ar\"\r\n                        ? jobTitle.jobTitleArName\r\n                        : jobTitle.jobTitleEnName\r\n                    }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    departmentCtrl['job_departments']?.invalid &&\r\n                    (departmentCtrl['job_departments']?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"departmentCtrl['job_departments']?.errors?.required\"\r\n                  >\r\n                    {{ \"jobTitlebyDepartment.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"jobTitlebyDepartment.FromDate\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  [matDatepicker]=\"fromDate\"\r\n                  formControlName=\"from_date\"\r\n                />\r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"fromDate\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-datepicker #fromDate></mat-datepicker>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    departmentCtrl['from_date']?.invalid &&\r\n                    (departmentCtrl['from_date']?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"departmentCtrl['from_date']?.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"jobTitlebyDepartment.toDate\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  [matDatepicker]=\"toDate\"\r\n                  formControlName=\"to_date\"\r\n                />\r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"toDate\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-datepicker #toDate></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <mat-card-actions align=\"end\">\r\n            <button\r\n              mat-raised-button\r\n              class=\"btn btn-primary\"\r\n              *ngIf=\"dep_id == 0\"\r\n              (click)=\"addAll()\"\r\n            >\r\n              {{ \"jobTitlebyDepartment.add\" | translate }}\r\n            </button>\r\n          </mat-card-actions>\r\n          <mat-card-actions align=\"end\">\r\n            <button\r\n              mat-raised-button\r\n              class=\"btn btn-primary\"\r\n              *ngIf=\"dep_id > 0\"\r\n              (click)=\"updetAll()\"\r\n            >\r\n              {{ \"jobTitlebyDepartment.update\" | translate }}\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n<!--  -->\r\n<mat-card>\r\n  <mat-card-title>\r\n    {{ \"jobTitlebyDepartment.department\" | translate | titlecase }}\r\n  </mat-card-title>\r\n  <mat-card-content class=\"container-fluid\">\r\n    <mat-form-field appearance=\"standard\">\r\n      <mat-label>{{ \"jobTitlebyDepartment.filter\" | translate }}</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" #input />\r\n    </mat-form-field>\r\n    <div class=\"mat-elevation-z8 f-w\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <ng-container matColumnDef=\"id\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n          <td mat-cell *matCellDef=\"let element; index as i\">\r\n            {{ i + 1 }}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"ArabicDepartmentName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"jobTitlebyDepartment.ArabicDepartmentName\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.dept_ar_name }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"EnglishDepartmentName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"jobTitlebyDepartment.EnglishDepartmentName\" | translate }}\r\n          </th>\r\n\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.dept_en_name }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"JobTitle\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"jobTitlebyDepartment.allJobTitle\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <table class=\"table table-sm\">\r\n              <thead class=\"thead-dark\">\r\n                <tr>\r\n                  <th scope=\"col\">\r\n                    {{ \"jobTitlebyDepartment.ArabicJopTileName\" | translate }}\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    {{ \"jobTitlebyDepartment.EnglishJopTileName\" | translate }}\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    {{ \"jobTitlebyDepartment.FromDate\" | translate }}\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    {{ \"jobTitlebyDepartment.ToDate\" | translate }}\r\n                  </th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  *ngFor=\"let department of element.job_departments; index as i\"\r\n                >\r\n                  <td>\r\n                    {{ department.job_ar_name }}\r\n                  </td>\r\n\r\n                  <td>\r\n                    {{ department.job_en_name }}\r\n                  </td>\r\n                  <td>{{ department.from_date | date: \"dd-MM-yyyy\" }}</td>\r\n                  <td>{{ department.to_date | date: \"dd-MM-yyyy\" }}</td>\r\n                  <td>\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'DeleteArticalJob'\"\r\n                        (click)=\"openDeleateDialogJop(department)\"\r\n                        class=\"danger p-0\"\r\n                         matTooltip=\"{{ fun.function_en_name }}\"\r\n                      >\r\n                        <i\r\n                          class=\"fa fa-times fa fa-white\"\r\n                          aria-hidden=\"true\"\r\n                        ></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        (click)=\"editDate(department)\"\r\n                        *ngIf=\"fun.functionName === 'UpdateArticalJob'\"\r\n                        class=\"success p-0\"\r\n                         matTooltip=\"{{ fun.function_en_name }}\"\r\n                      >\r\n                        <i\r\n                          class=\"ft-edit-2 font-medium-3 mr-2\"\r\n                          aria-hidden=\"true\"\r\n                        ></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"options\">\r\n          <th mat-header-cell *matHeaderCellDef></th>\r\n\r\n          <td mat-cell *matCellDef=\"let element\" class=\"text-center px-2\">\r\n            <ng-container *ngFor=\"let fun of rowFunctions\">\r\n              <a\r\n                *ngIf=\"fun.functionName === 'Edit'\"\r\n                (click)=\"editAll(element)\"\r\n                class=\"success p-0\"\r\n                 matTooltip=\"{{ fun.function_en_name }}\"\r\n              >\r\n                <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n              </a>\r\n\r\n              <a\r\n                *ngIf=\"fun.functionName === 'Delete'\"\r\n                (click)=\"openDeleateDialog(element)\"\r\n                class=\"danger p-0\"\r\n                 matTooltip=\"{{ fun.function_en_name }}r\"\r\n              >\r\n                <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n              </a>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">\r\n            No data matching the filter \"{{ input.value }}\"\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[10]\"\r\n    (page)=\"getall($event.pageIndex + 1)\"\r\n    [length]=\"itemsCounts\"\r\n    [pageSize]=\"10\"\r\n    showFirstLastButtons\r\n    aria-label=\"Select page of departments\"\r\n  ></mat-paginator>\r\n</mat-card>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IRolesViewModel } from \"app/admin/models/roles/roles\";\r\nimport {\r\n  IAddEditUserModel,\r\n  IUserModel,\r\n  IUserViewModel,\r\n} from \"app/admin/models/roles/user\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { UsersService } from \"app/admin/services/roles/users.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-users\",\r\n  templateUrl: \"./users.component.html\",\r\n  styleUrls: [\"./users.component.scss\"],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  EduCompId: number;\r\n  submitted: boolean = false;\r\n  // // roles: IRolesViewModel[] = [];\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCounts: number = 0;\r\n  items: number = 16184;\r\n  p: number = 0;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"email\",\r\n    \"mobile\",\r\n    // \"role\",\r\n    \"code\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    // // private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        userId: [0, [Validators.required]],\r\n        userName: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n        email: [null, [Validators.required, Validators.email]],\r\n        phone: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n            Validators.minLength(11),\r\n            Validators.maxLength(11),\r\n            CustomeValidator.startsWith,\r\n          ],\r\n        ],\r\n        // // roleId: [null, [Validators.required]],\r\n        password: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomeValidator.whiteSpace,\r\n            Validators.minLength(3),\r\n          ],\r\n        ],\r\n        confirmedPass: [null],\r\n        code: [null, [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\"password\", \"confirmedPass\"),\r\n      }\r\n    );\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    // // this.roleService\r\n    // //   .getAllRoles<IRolesViewModel[]>(this.EduCompId)\r\n    // //   .subscribe((response) => {\r\n    // //     if (response) {\r\n    // //       this.roles = response;\r\n    // //     }\r\n    // //   });\r\n\r\n    this.getAllUsers(1);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllUsers(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllUsers(pageNumber: number) {\r\n    // this.itemsCounts = 0;\r\n    this.p = pageNumber;\r\n    this.spinner.show();\r\n\r\n    this.userService\r\n      .getAllUsers<IUserViewModel>(this.EduCompId, pageNumber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"users: \", response);\r\n          this.dataSource = new MatTableDataSource(response.centerBrnachesList);\r\n          this.itemsCounts = response.itemsCounts;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editUser(user: IUserModel) {\r\n    // this.myForm.patchValue(user);\r\n    this.FormCtrls.userId?.setValue(user.user_ID);\r\n    this.FormCtrls.userName?.setValue(user.ar_name);\r\n    this.FormCtrls.email?.setValue(user.account_email);\r\n    this.FormCtrls.phone?.setValue(user.mobile);\r\n    this.FormCtrls.code?.setValue(user.code);\r\n    // this.FormCtrls.roleId?.setValue(user.roleId);\r\n    // this.FormCtrls.password?.setValue(user.account_password);\r\n    // this.FormCtrls.confirmedPass?.setValue(user.account_password);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeUser(user: IUserModel) {\r\n    this.userService.deleteUser(user.user_ID).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"user: \", response);\r\n        this.getAllUsers(1);\r\n        this.toastr.success(\"تم مسح المستخدم بنجاح\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditUserModel;\r\n      obj.user = {} as IUserModel;\r\n      obj.user.user_ID = this.FormCtrls.userId?.value;\r\n      obj.user.ar_name = this.FormCtrls.userName?.value;\r\n      obj.user.account_email = this.FormCtrls?.email?.value;\r\n      obj.user.mobile = this.FormCtrls.phone?.value;\r\n      // obj.user.roleId = this.FormCtrls.roleId?.value;\r\n      obj.user.account_password = this.FormCtrls.password?.value;\r\n      obj.code = this.FormCtrls.code?.value;\r\n\r\n      // obj.roleId = this.FormCtrls.roleId?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n      this.userService\r\n        .addEditUser<IAddEditUserModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n          //  console.log(\"created: \", response);\r\n\r\n          if (response && response !== null) {\r\n            if (response.returnValue == 0) {\r\n              this.toastr.error(response.returnString);\r\n            } else {\r\n              this.getAllUsers(1);\r\n              this.toastr.success(\"تم إضافه/تعديل البيانات المستخدم بنجاح\");\r\n              this.myForm.reset();\r\n              this.addBtn.nativeElement.innerText = \"Add\";\r\n            }\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(user: IUserModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: user.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeUser(user);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateEmployee\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"userName\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.userName.invalid &&\r\n                        (FormCtrls.userName.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.userName.errors?.required ||\r\n                          FormCtrls.userName.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"phone\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.phone.invalid &&\r\n                        (FormCtrls.phone.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.phone.errors?.required ||\r\n                          FormCtrls.phone.errors?.whiteSpace ||\r\n                          FormCtrls.phone.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.phone.errors?.minlength ||\r\n                          FormCtrls.phone.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.phone.errors?.startsWith\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.email.invalid &&\r\n                        (FormCtrls.email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        Enter correct Email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Role -->\r\n\r\n                <!-- <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Role\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"roleId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option *ngFor=\"let role of roles\" [value]=\"role.Id\">\r\n                        {{ role.roleName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.roleId.invalid &&\r\n                        (FormCtrls.roleId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.roleId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Password\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"password\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.password.invalid &&\r\n                        (FormCtrls.password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ConfirmPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"confirmedPass\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.confirmedPass.invalid &&\r\n                        (FormCtrls.confirmedPass.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.confirmedPass.errors?.mustMatch\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        New Password and Confirm Password not match\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Code\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"code\" />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.code.invalid &&\r\n                        (FormCtrls.code.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.code.errors?.required ||\r\n                          FormCtrls.code.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Employees\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n\r\n            <!-- <ng-container matColumnDef=\"role\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n               {{ \"labels.Role\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.roleName }}</td>\r\n            </ng-container> -->\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editUser(user)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit Employees\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(user)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete Employees\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Branches'\"\r\n                    routerLink=\"../user-dep-job/{{ user.user_ID }}\"\r\n                    [queryParams]=\"{\r\n                      parentId: functionId,\r\n                      functionId: fun.Id,\r\n                      username: user.ar_name\r\n                    }\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"add Employees job\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllUsers($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ManageViewsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  searchStudent(EduCompId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/searchUSer/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  resetViews(EduCompId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/resetViewsCount/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  addExceptionalViews(EduCompId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/ExceptionalViewsResetCount/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ISearchMaterialVM } from \"app/admin/models/admin/educations\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class SubjectMaterialsService {\r\n  getParts2URL = environment.apiURL + \"Admin/returnMaterialPartsByMaterialId/\";\r\n  AttendanceURL = environment.apiURL + \"Admin/postOfflineLectureView/\";\r\n  materialsattacAttendeesURL =\r\n    environment.apiURL + \"MaterialsAttach/offline-lecture-attendees/\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addEditMaterial<T>(data: T) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/AddSubjectMaterialForm`,\r\n      data\r\n    );\r\n  }\r\n\r\n  getMaterialById<T>(subjectId: any, materialId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/showSubjectMaterialView/${subjectId}/${materialId}`\r\n    );\r\n  }\r\n\r\n  updateMaterialForm(EduCompId: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/AddSubjectMaterialForm/${EduCompId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteMaterial(materialId: any) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}Admin/RemoveMaterial/${materialId}`\r\n    );\r\n  }\r\n\r\n  publishMaterial(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/PublishDepublishhMaterial/${materialId}`\r\n    );\r\n  }\r\n\r\n  getGroupsByEduCompId<T>(EduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnListEduCompIdGroupByEduCompID/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  returnSearchedUnitsBySubjectId<T>(subjectId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnSearchedUnitsBySubjectId/${subjectId}`\r\n    );\r\n  }\r\n\r\n  returnSearchedLessonsByUnitId<T>(UnitId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnSearchedLessonsByUnitId/${UnitId}`\r\n    );\r\n  }\r\n\r\n  searcheMaterial<T>(data: ISearchMaterialVM) {\r\n    return this.http.post<T>(\r\n      `${environment.apiURL}Admin/returnSearchedMaterialViewResult`,\r\n      data\r\n    );\r\n  }\r\n\r\n  showVideoByMaterialId(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/showVideoByMaterialId/${materialId}`\r\n    );\r\n  }\r\n\r\n  dawnloadLectureAttendees(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/offlineLectureAttendees/${materialId}`\r\n    );\r\n  }\r\n\r\n  getMaterialParts(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/materialPartsTable/${materialId}`\r\n    );\r\n  }\r\n\r\n  getPartById<T>(partId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/getMaterialPartByID/${partId}`\r\n    );\r\n  }\r\n\r\n  addPart(data: any) {\r\n    return this.http.post(environment.apiURL + \"Admin/AddMaterialPart\", data);\r\n  }\r\n\r\n  // updatePart(data: any) {\r\n  //   return this.http.post(this.updatePartURL, data);\r\n  // }\r\n\r\n  deletePart(partId: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/RemoveMaterialPart/${partId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  getMaterialAttaches(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/materialAttachsTable/${materialId}`\r\n    );\r\n  }\r\n\r\n  addAttach(data: any) {\r\n    return this.http.post(environment.apiURL + \"Admin/AddMaterialAttach\", data);\r\n  }\r\n\r\n  deleteAttach(AttachId: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/RemoveMaterialAttach/${AttachId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  getExamsAndTemplates(subjectId: number) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/showMaterialQuiz/${subjectId}`\r\n    );\r\n  }\r\n\r\n  getMaterialQuizes<T>(materialId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnExamsByMaterialId/${materialId}`\r\n    );\r\n  }\r\n\r\n  addMaterialQuiz(materialIdHiddenQuiz: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/AddQuizForm/${materialIdHiddenQuiz}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteMaterialQuiz(Id: any) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}Admin/RemoveMaterialQuiz/${Id}`\r\n    );\r\n  }\r\n\r\n  AddPopQuestion(materialId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/AddPopQuestion/${materialId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  getPopQuestions(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/returnMaterialPopQuestionsByMaterialId/${materialId}`\r\n    );\r\n  }\r\n\r\n  deletePopQuestion(id: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/DeleteMaterialPopQuestion/${id}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  UploadStudentAttendance(LectureID: any, attendance: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/postOfflineLectureAttendees/${attendance}/${LectureID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  offlineLectureAttendeesTable<T>(LectureID: any, page: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/offlineLectureAttendeesTable/${LectureID}/${page}`\r\n    );\r\n  }\r\n\r\n  searchAttendanceManual(data: any) {\r\n    return this.http.post(\r\n      environment.apiURL + \"Admin/offlineLectureAttendees\",\r\n      data\r\n    );\r\n  }\r\n\r\n  updateAttendanceManual(data: any) {\r\n    return this.http.post(\r\n      environment.apiURL + \"Admin/editOfflineLectureAttendeeState\",\r\n      data\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BranchesService {\r\n  getAllBranchesURL =\r\n    environment.apiURL + \"usermanagement/returnCenterBranchesByEduComp/\";\r\n  addEditBranchesURL = environment.apiURL + \"usermanagement/AddEditBranch\";\r\n  deleteBranchesURL = environment.apiURL + \"usermanagement/deleteBranch\";\r\n\r\n  getAllDistrictsURL =\r\n    environment.apiURL + \"usermanagement/returnDistrictsList\"; // DropDownMenu\r\n  getAllAllCenterBranchesURL =\r\n    environment.apiURL + \"usermanagement/returnAllCenterBranches\"; // /{page} => paginated\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllBranches<T>(eduCompId: any) {\r\n    return this.http.get<T>(this.getAllBranchesURL + \"/\" + eduCompId);\r\n  }\r\n\r\n  getAllAllCenterBranches<T>(eduCompId:number ,page: number) {\r\n    return this.http.get<T>(this.getAllAllCenterBranchesURL + \"/\" + eduCompId+\"/\"+page);\r\n  }\r\n\r\n  addEditBranches<T, TV>(obj: T) {\r\n    return this.http.post<TV>(this.addEditBranchesURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":18,\r\n  //     \"EduCompId\":2,\r\n  //     \"Name\":\"Test edit Branch\",\r\n  //     \"districtId\":2\r\n  // }\r\n\r\n  deleteBranch<T>(branchId: number) {\r\n    return this.http.delete<T>(this.deleteBranchesURL + \"/\" + branchId);\r\n  }\r\n\r\n  getAllDistricts<T>() {\r\n    return this.http.get<T>(this.getAllDistrictsURL);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FunctionsService {\r\n  addEditFunctionURL = environment.apiURL + \"usermanagement/AddEditFunction\";\r\n  deleteFunctionURL = environment.apiURL + \"usermanagement/deleteFunction\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addEditFunction<T, TV>(obj: T) {\r\n    return this.http.post<TV>(this.addEditFunctionURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":0,\r\n  //     \"functionName\":\"test عربي\",\r\n  //     \"function_en_name\":\"test Eng\",\r\n  //     \"functionURL\":\"url test\"\r\n  // }\r\n\r\n  deleteFunction<T>(functionId: number) {\r\n    return this.http.delete<T>(this.deleteFunctionURL + \"/\" + functionId);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RolesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllRoles<T>(EduCompId :number) {\r\n    return this.http.get<T>(environment.apiURL + \"usermanagement/returnRoles\"+\"/\"+EduCompId);\r\n  }\r\n\r\n  addEditRole<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      `${environment.apiURL}usermanagement/create-role`,\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteRole(roleId: number) {\r\n    return this.http.delete(\r\n      environment.apiURL + \"usermanagement/deleteRole\" + \"/\" + roleId\r\n    );\r\n  }\r\n\r\n  getAllFunctions<T>(page: number, getAll: boolean) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/getAllFunctions/${page}/${getAll}`\r\n    );\r\n  }\r\n\r\n  getAllRoleFunctions<T>(roleId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnRoleFunctionsByRoleID/${roleId}`\r\n    );\r\n  }\r\n\r\n  addEditRoleFunctions<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.apiURL + \"usermanagement/add-function-to-role\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  getAllFunctionsByRoleId<T>(roleId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnRoleFunctionsByRoleID/${roleId}`\r\n    );\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions<T>(userId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnAllBranchUserAllRoleFunction/${userId}`\r\n    );\r\n  }\r\n\r\n  addUserBranchesAndRoleFunctions<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.apiURL + \"usermanagement/addUserBranchesAndRoleFunctions\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteUserRoleFunctions(functionId: number) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}usermanagement/deleteBranchUserRoleFunction/${functionId}`\r\n    );\r\n  }\r\n\r\n  deleteUserBranchRoleFunction(userId: number, branchId: number) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}usermanagement/deleteBranchUserAllRoleFunction/${userId}/${branchId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UsersService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllUsers<T>(eduCompId: any, page: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnUsersByEduComp/${eduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  addEditUser<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.apiURL + \"usermanagement/create-user-account\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}usermanagement/deleteUser/${userId}`\r\n    );\r\n  }\r\n\r\n  getAllBranchesByCenter<T>(eduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnCenterBranchesByEduComp/${eduCompId}`\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DepartmentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllDepartments<T>(page: number, EduCompId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Department/getDepartments/${EduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  getDepartmentsDropDown<T>(EduCompId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Department/getAllDepartments/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  // addEditDepartment<T, TV>(obj: T) {\r\n\r\n  //   return this.http.post<TV>(`${environment.apiURL}Department/PostDepartments`, obj);\r\n  // }\r\n\r\n  getDepartmentById<T>(id: number) {\r\n    return this.http.get<T>(`${environment.apiURL}Department/${id}`);\r\n  }\r\n\r\n  addDepartment<T>(department: T) {\r\n    return this.http.post<T>(\r\n      `${environment.apiURL}Department/PostDepartments`,\r\n      department\r\n    );\r\n  }\r\n\r\n  editDepartment<T>(department: T, id: number) {\r\n    return this.http.put<T>(\r\n      `${environment.apiURL}Department/PutOneDepartments/${id}`,\r\n      department\r\n    );\r\n  }\r\n\r\n  deleteDepartment(departmentId: number) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}Department/DeleteOneDepartments/${departmentId}`\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { IJobTitleSearchVM } from \"app/admin/models/setup/job-title\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobTitleService {\r\n  constructor(private _HttpClient: HttpClient) {}\r\n\r\n  getAllJobTitles(data: IJobTitleSearchVM,eduCompId:number,page:number) {\r\n    return this._HttpClient.post(\r\n      `${environment.apiURL}jobTitle/getAllJobTitle/${eduCompId}/${page}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  addJobTitle<T>(jobTitle: T) {\r\n    return this._HttpClient.post<T>(\r\n      `${environment.apiURL}jobTitle/PostJobTitle`,\r\n      jobTitle\r\n    );\r\n  }\r\n\r\n  updateJobTitles<T>(jobTitle: T, id: number) {\r\n    return this._HttpClient.put<T>(\r\n      `${environment.apiURL}jobTitle/PutJobTitle/${id}`,\r\n      jobTitle\r\n    );\r\n  }\r\n\r\n  deleteJobTitles(id: number) {\r\n    return this._HttpClient.delete(\r\n      `${environment.apiURL}jobTitle/DeleteJobTitle/${id}`\r\n    );\r\n  }\r\n\r\n  getJobTitleByDepartment<T>(id: number) {\r\n    return this._HttpClient.get<T>(\r\n      `${environment.apiURL}jobTitle/getJobTitlesByDepartmentId/${id}`\r\n    );\r\n  }\r\n\r\n  getSpecificJobTitlesByDepartmentIds(ids: any) {\r\n    return this._HttpClient.post(\r\n      `${environment.apiURL}jobTitle/getSpecificJobTitlesByDepartmentIds`,\r\n      ids\r\n    );\r\n  }\r\n\r\n  deleteJobTitleDepartment(id: number) {\r\n    return this._HttpClient.delete(\r\n      `${environment.apiURL}jobTitle/DeleteDepartmentOfJobTitle/${id}`\r\n    );\r\n  }\r\n\r\n  update_JobTitle_Department<T>(body: T, id: number) {\r\n    return this._HttpClient.put(\r\n      `${environment.apiURL}jobTitle/EditDepartmentOfJobTitle/${id}`,\r\n      body\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  ViewContainerRef,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\n\r\n@Directive({\r\n  selector: \"[appMatPaginatorStyle]\",\r\n})\r\nexport class MatPaginatorStyleDirective {\r\n  private _currentPage = 1;\r\n  private _pageGapTxt = \"...\";\r\n  private _rangeStart;\r\n  private _rangeEnd;\r\n  private _buttons = [];\r\n\r\n  @Input()\r\n  get showTotalPages(): number {\r\n    return this._showTotalPages;\r\n  }\r\n  set showTotalPages(value: number) {\r\n    this._showTotalPages = value % 2 == 0 ? value + 1 : value;\r\n  }\r\n  private _showTotalPages = 2;\r\n\r\n  constructor(\r\n    @Host() @Self() @Optional() private readonly matPag: MatPaginator,\r\n    private vr: ViewContainerRef,\r\n    private ren: Renderer2\r\n  ) {\r\n    //Sub to rerender buttons when next page and last page is used\r\n    this.matPag.page.subscribe((v) => {\r\n      this.switchPage(v.pageIndex);\r\n    });\r\n  }\r\n\r\n  private buildPageNumbers() {\r\n    const actionContainer = this.vr.element.nativeElement.querySelector(\r\n      \"div.mat-paginator-range-actions\"\r\n    );\r\n    const nextPageNode = this.vr.element.nativeElement.querySelector(\r\n      \"button.mat-paginator-navigation-next\"\r\n    );\r\n    const prevButtonCount = this._buttons.length;\r\n\r\n    // remove buttons before creating new ones\r\n    if (this._buttons.length > 0) {\r\n      this._buttons.forEach((button) => {\r\n        this.ren.removeChild(actionContainer, button);\r\n      });\r\n      //Empty state array\r\n      this._buttons.length = 0;\r\n    }\r\n\r\n    //initialize next page and last page buttons\r\n    if (this._buttons.length == 0) {\r\n      let nodeArray =\r\n        this.vr.element.nativeElement.childNodes[0].childNodes[0].childNodes[2]\r\n          .childNodes;\r\n      setTimeout(() => {\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          if (nodeArray[i].nodeName === \"BUTTON\") {\r\n            if (nodeArray[i].disabled) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(190, 130, 130, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(255, 0, 0, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    let dots = false;\r\n\r\n    for (let i = 0; i < this.matPag.getNumberOfPages(); i = i + 1) {\r\n      if (\r\n        (i < this._showTotalPages &&\r\n          this._currentPage < this._showTotalPages &&\r\n          i > this._rangeStart) ||\r\n        (i >= this._rangeStart && i <= this._rangeEnd)\r\n      ) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(i, this.matPag.pageIndex),\r\n          nextPageNode\r\n        );\r\n      } else {\r\n        if (i > this._rangeEnd && !dots) {\r\n          this.ren.insertBefore(\r\n            actionContainer,\r\n            this.createButton(this._pageGapTxt, this.matPag.pageIndex),\r\n            nextPageNode\r\n          );\r\n          dots = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButton(i: any, pageIndex: number): any {\r\n    const linkBtn = this.ren.createElement(\"mat-button\");\r\n    this.ren.addClass(linkBtn, \"mat-mini-fab\");\r\n    this.ren.setStyle(linkBtn, \"margin\", \"1%\");\r\n\r\n    const pagingTxt = isNaN(i) ? this._pageGapTxt : +(i + 1);\r\n    const text = this.ren.createText(pagingTxt + \"\");\r\n\r\n    this.ren.addClass(linkBtn, \"mat-custom-page\");\r\n    switch (i) {\r\n      case pageIndex:\r\n        this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        break;\r\n      case this._pageGapTxt:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(this._currentPage + this._showTotalPages);\r\n        });\r\n        break;\r\n      default:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(i);\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.ren.appendChild(linkBtn, text);\r\n    //Add button to private array for state\r\n    this._buttons.push(linkBtn);\r\n    return linkBtn;\r\n  }\r\n\r\n  private initPageRange(): void {\r\n    this._rangeStart = this._currentPage - this._showTotalPages / 2;\r\n    this._rangeEnd = this._currentPage + this._showTotalPages / 2;\r\n\r\n    this.buildPageNumbers();\r\n  }\r\n\r\n  private switchPage(i: number): void {\r\n    this._currentPage = i;\r\n    this.matPag.pageIndex = i;\r\n    this.initPageRange();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.initPageRange();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GroupByService {\r\n  constructor() {}\r\n\r\n  //group response data by DayName\r\n  groupBy(collection: any[], property: string): any[] {\r\n    if (!collection) {\r\n      // return null;\r\n    }\r\n    const groupedCollection = collection.reduce((previous, current) => {\r\n      if (!previous[current[property]]) {\r\n        previous[current[property]] = [current];\r\n      } else {\r\n        previous[current[property]].push(current);\r\n      }\r\n      return previous;\r\n    }, {});\r\n    return Object.keys(groupedCollection).map((key) => ({\r\n      key,\r\n      List: groupedCollection[key],\r\n    }));\r\n  }\r\n}\r\n"],"names":["RouterModule","UserBalanceDetailsComponent","ReservationEditComponent","ReservationIndexComponent","ReservationStatusComponent","StudentDiscountComponent","StudentsIndexComponent","CenterBranchesComponent","FunctionsSetupComponent","AddRoleComponent","RoleFunctionsComponent","UserBranchesRolesComponent","UserDeparmentAndJobTitleComponent","UsersComponent","routes","path","component","children","redirectTo","pathMatch","loadChildren","then","m","EducationalSetupModule","SetupModule","ExamsModule","ReportsModule","DashboardRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","SharedModule","MaterialModule","NgxSpinnerModule","NgbModule","MatPaginatorStyleDirective","ReservationDetailsComponent","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","DashboardModule","provide","useClass","useValue","declarations","MAT_DIALOG_DATA","i0","reservationService","data","reservationId","ReservationDetails","subscribe","res","reservation","selectors","decls","vars","consts","template","Validators","CustomeValidator","reservationServ","fb","toaster","route","spinner","authserv","paramMap","params","Number","get","queryParamMap","functionId","EduCompId","getEduCompId","getReservationEdit","myForm","group","userId","required","Id","UserName","whiteSpace","Religion","Gender","EducationTypeId","CenterBranchId","SchoolName","EducationalDivision","GuardianJob","Area","Address","StudentNumber","maxLength","minLength","pattern","startsWith","StudentWhatsAppNumber","FatherMobile","FatherWhatsAppNumber","MotherMobile","MotherWhatsAppNumber","HomeTelephone","SentviewId","currentYear","City","competitions","Hobbies","workshops","controls","e","FormCtrls","_a","EduCompIdCtrl","setValue","show","patchValue","Reservation","Religions","Genders","EducationalDivisions","EducationTypes","Areas","ProfilePicture","ProfilePicture_Path","_b","returnBranchesByEducTypeId","_c","hide","warning","value","profilePicture","valid","SubmitReservationEdit","returnValue","returnString","success","error","typeId","CenterBranches","event","fileName","target","files","name","fileSize","size","fileType","type","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","result","FileAsBase64","_r3","ctx","MatPaginator","MatSort","MatTableDataSource","ctx_r58","SubjectMaterialsService","dialog","getUserRowFunctions","rowFunctions","branchId","getBranchId","email","mobile","code","groupId","statusId","cityId","page","getGroupsByEduCompId","returnStatus","getArea","getReservationsList","branchIdCtrl","dataSource","paginator","sort","filterValue","filter","trim","toLowerCase","p","Reservations","list","itemsCount","retunValue","groups","lstEduCompGroups","Status","open","minWidth","afterClosed","reset","currentYearCtrl","viewQuery","authservice","getStudentStatus","returnBranchesByEduCompId","EduCompUser_Status","note","EduCompUserId","statusReasonId","studentUserId","Code","reserveId","AcceptReservation","GetStudentStatus","getReasonsByStatusId","statuses","studyingGroups","userName","ReservationStatusPaging","disabled","SubmitReservationStatus","StatusId","Reasons","ctx_r23","ManageViewsService","getCustomDiscount","searchForm","sentCode","sentCenterCode","sentMobile","sentEmail","InCenter","customDiscountId","searchStudent","getStudentCustomDiscount","getStudentCustomDiscountsList","updateStudentCustomDiscount","console","log","User","ar_name","user_ID","Discount","CustomDiscountList","toastr","SearchStudentsService","queryStringEm","queryStringCo","queryStringPhoneNumber","queryStringMozakretyCode","studyingGroup","getStudentsByEduCompId","getStudentGroupsAndStatuts","students","lists","totalCount","Statuts","status","confirmed","confirm","deleteStudent","i","findIndex","splice","ElementRef","DeleteDialogComponent","ctx_r27","ctx_r30","msg","branchService","branchName","districtId","getAllDistricts","response","districts","getAllBranches","pageNumber","getAllAllCenterBranches","branches","centerBrnachesList","branch","branchNameCtrl","Name","districtIdCtrl","addBtn","nativeElement","innerText","deleteBranch","submitted","obj","addEditBranches","removeBranch","ctx_r28","ctx_r31","roleService","functionService","functionNameEn","functionNameAr","link","getAllFunctions","functions","func","functionIdCtrl","functionNameEnCtrl","function_en_name","functionNameArCtrl","functionName","linkCtrl","_d","functionURL","deleteFunction","addEditFunction","removeFunction","ctx_r20","roleId","roleName","getAllRoles","roles","role","roleIdCtrl","roleNameCtrl","deleteRole","index","r","addEditRole","push","removeRole","ctx_r6","router","param","getAllRoleFunctions","groupFunctions","forEach","g","allFunctionsLength","length","roleFunctions","functionIds","function","allChecked","$event","checked","id","found","includes","functionsList","addEditRoleFunctions","ctx_r29","ctx_r37","ctx_r45","userService","groupByService","datePipe","branchsIds","fromDate","toDate","getAllBranchesByCenter","getAllUserBranchesWithFunctions","getAllFunctionsByRoleId","groupBy","List","userBranchesWithFunctions","branchUserList","funParent","roleFunctionsList","fun","checkedfunctionIds","deleteUserBranchRoleFunction","deleteUserRoleFunctions","centerBranchUserFuncId","roleFunctionsIds","branchUser","from","transform","fromDateCtrl","to","toDateCtrl","addUserBranchesAndRoleFunctions","onDeleteFunction","UpdateDateComponent","ctx_r32","ctx_r46","ctx_r50","ctx_r59","ctx_r63","translate","_serjopTitlebyDepartment","_Serdep","_serjob","Date","onLangChange","lang","curLang","functionParentId","username","getall","getDepartmentsDropDown","dept_id","job_departments","from_date","to_date","filterPredicate","dept_ar_name","toLocaleLowerCase","indexOf","dept_en_name","map","d","job_ar_name","join","job_en_name","departments","departmentCtrl","getJobTitleByDepartment","joblist","enable","disable","pageNum","getJopTitlebyDepartment","userDepartmentJobtitleList","itemsCounts","deptsForUser","initTableItems","customFilter","sortingDataAccessor","item","property","initTable","model","user_id","jobTitle_dept_id","currentDate","addJopTitlebyDepartment","allDepJobIds","dep","dep_id","job","dep_job_id","editAllDeparment","department","j","editjobTitle","user_dept_job_id","depId","deleteUserDeptJobTitle","jopid","deleteJopTitle","ctx_r43","phone","password","confirmedPass","validator","mustMatch","getAllUsers","user","account_email","_e","deleteUser","account_password","_f","_g","addEditUser","removeUser","environment","http","body","post","apiURL","factory","providedIn","subjectId","materialId","delete","UnitId","partId","AttachId","materialIdHiddenQuiz","LectureID","attendance","BranchesService","eduCompId","getAllBranchesURL","getAllAllCenterBranchesURL","addEditBranchesURL","deleteBranchesURL","getAllDistrictsURL","FunctionsService","addEditFunctionURL","deleteFunctionURL","RolesService","getAll","UsersService","DepartmentService","put","departmentId","JobTitleService","_HttpClient","jobTitle","ids","matPag","vr","ren","v","switchPage","pageIndex","_showTotalPages","actionContainer","element","querySelector","nextPageNode","prevButtonCount","_buttons","button","removeChild","nodeArray","childNodes","setTimeout","nodeName","setStyle","dots","getNumberOfPages","_currentPage","_rangeStart","_rangeEnd","insertBefore","createButton","_pageGapTxt","linkBtn","createElement","addClass","pagingTxt","isNaN","text","createText","setAttribute","listen","appendChild","buildPageNumbers","initPageRange","inputs","showTotalPages","GroupByService","collection","groupedCollection","reduce","previous","current","Object","keys","key"],"sourceRoot":"webpack:///"}