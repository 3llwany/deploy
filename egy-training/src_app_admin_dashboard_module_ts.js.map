{"version":3,"file":"src_app_admin_dashboard_module_ts.js","mappings":"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CE,WAAR,IAAuB,EADxB,IAECF,OAAO,CAACE,WAAR,IAAuB3Q,SAFzB,KAGAyQ,OAAO,CAACI,YAAR,KAAyB,IAHzB,IAIAJ,OAAO,CAACpa,IAAR,IAAgB,IALlB,EAME;UACA,KAAKoD,MAAL,CAAYyD,OAAZ,CAAoB,0BAApB;UACA;QACD,CAjJ2C,CAmJ5C;;;QACA,IACE,CAAC8T,OAAO,CAACL,WAAR,KAAwB,IAAxB,IACCK,OAAO,CAACL,WAAR,IAAuB,EADxB,IAECK,OAAO,CAACL,WAAR,IAAuB3Q,SAFzB,KAGAgR,OAAO,CAACH,YAAR,KAAyB,IAHzB,IAIAG,OAAO,CAAC3a,IAAR,IAAgB,IALlB,EAME;UACA,KAAKoD,MAAL,CAAYyD,OAAZ,CAAoB,0BAApB;UACA;QACD,CATD,MASO;UACL,IAAI,KAAK4S,UAAL,GAAkB,CAAtB,EAAyB;YACvB,KAAKwD,eAAL,CAAqBlM,SAArB;UACD,CAFD,MAEO;YACL,KAAKmM,cAAL,CAAoBnM,SAApB;UACD;QACF,CAnK2C,CAqK5C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MACD;IACF,CAvWH,CAyWE;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;;EA1aF;IAAA;IAAA,OA4aE,wBAAeA,SAAf,EAAkD;MAAA;;MAChD;MACA,IAAI,KAAKrL,MAAL,CAAYoB,KAAhB,EAAuB;QACrB,KAAKrD,OAAL,CAAasD,IAAb;QACA,KAAKgF,WAAL,CACGoR,WADH,CACuCpM,SADvC,EAEG5M,SAFH,CAEa,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","sources":["./src/app/admin/dashboard-routing.module.ts","./src/app/admin/dashboard.module.ts","./src/app/admin/pages/dashboard/dashboard.component.ts","./src/app/admin/pages/dashboard/dashboard.component.html","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/add-main-data/add-main-data.component.ts","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/add-main-data/add-main-data.component.html","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/add-material-parts/add-material-parts.component.ts","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/add-material-parts/add-material-parts.component.html","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/mat-parts-index/mat-parts-index.component.ts","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/mat-parts-index/mat-parts-index.component.html","./src/app/admin/pages/exams-setup/exams/add-exam/add-exam.component.ts","./src/app/admin/pages/exams-setup/exams/add-exam/add-exam.component.html","./src/app/admin/pages/exams-setup/exams/add-questions-index/add-questions-index.component.ts","./src/app/admin/pages/exams-setup/exams/add-questions-index/add-questions-index.component.html","./src/app/admin/pages/exams-setup/exams/add-sub-question/add-sub-question.component.ts","./src/app/admin/pages/exams-setup/exams/add-sub-question/add-sub-question.component.html","./src/app/admin/pages/exams-setup/exams/save-exam-dialog/save-exam-dialog.component.ts","./src/app/admin/pages/exams-setup/exams/save-exam-dialog/save-exam-dialog.component.html","./src/app/admin/pages/reservation/reservation-details/reservation-details.component.ts","./src/app/admin/pages/reservation/reservation-details/reservation-details.component.html","./src/app/admin/pages/reservation/reservation-edit/reservation-edit.component.ts","./src/app/admin/pages/reservation/reservation-edit/reservation-edit.component.html","./src/app/admin/pages/reservation/reservation-index/reservation-index.component.ts","./src/app/admin/pages/reservation/reservation-index/reservation-index.component.html","./src/app/admin/pages/reservation/reservation-status/reservation-status.component.ts","./src/app/admin/pages/reservation/reservation-status/reservation-status.component.html","./src/app/admin/pages/reservation/student-discount/student-discount.component.ts","./src/app/admin/pages/reservation/student-discount/student-discount.component.html","./src/app/admin/pages/reservation/students/students-index/students-index.component.ts","./src/app/admin/pages/reservation/students/students-index/students-index.component.html","./src/app/admin/pages/setup/Department/department.component.ts","./src/app/admin/pages/setup/Department/department.component.html","./src/app/admin/pages/setup/announcement-index/announcement-index.component.ts","./src/app/admin/pages/setup/announcement-index/announcement-index.component.html","./src/app/admin/pages/setup/announcement-setup/announcement-setup.component.ts","./src/app/admin/pages/setup/announcement-setup/announcement-setup.component.html","./src/app/admin/pages/setup/articles-setup/articles.component.ts","./src/app/admin/pages/setup/articles-setup/articles.component.html","./src/app/admin/pages/setup/categories/add-category/add-category.component.ts","./src/app/admin/pages/setup/categories/add-category/add-category.component.html","./src/app/admin/pages/setup/categories/categries-view/categorie.component.ts","./src/app/admin/pages/setup/categories/categries-view/categorie.component.html","./src/app/admin/pages/setup/courses/add-course/add-course.component.ts","./src/app/admin/pages/setup/courses/add-course/add-course.component.html","./src/app/admin/pages/setup/courses/add-users-to-course/add-users-to-course.component.ts","./src/app/admin/pages/setup/courses/add-users-to-course/add-users-to-course.component.html","./src/app/admin/pages/setup/courses/course-index/course-index.component.ts","./src/app/admin/pages/setup/courses/course-index/course-index.component.html","./src/app/admin/pages/setup/courses/course-objectives/course-objectives.component.ts","./src/app/admin/pages/setup/courses/course-objectives/course-objectives.component.html","./src/app/admin/pages/setup/courses/course-requestes/course-requestes.component.ts","./src/app/admin/pages/setup/courses/course-requestes/course-requestes.component.html","./src/app/admin/pages/setup/courses/course-structure/add-unit-attachment/add-unit-attachment.component.ts","./src/app/admin/pages/setup/courses/course-structure/add-unit-attachment/add-unit-attachment.component.html","./src/app/admin/pages/setup/courses/course-structure/add-unit/add-unit.component.ts","./src/app/admin/pages/setup/courses/course-structure/add-unit/add-unit.component.html","./src/app/admin/pages/setup/courses/course-structure/exams-integration/exams-integration.component.ts","./src/app/admin/pages/setup/courses/course-structure/exams-integration/exams-integration.component.html","./src/app/admin/pages/setup/courses/course-structure/structure-index/structure-index.component.ts","./src/app/admin/pages/setup/courses/course-structure/structure-index/structure-index.component.html","./src/app/admin/pages/setup/courses/edit-options-dialog/edit-options-dialog.component.ts","./src/app/admin/pages/setup/courses/edit-options-dialog/edit-options-dialog.component.html","./src/app/admin/pages/setup/courses/teaching-requests/teaching-requests.component.html","./src/app/admin/pages/setup/courses/teaching-requests/teaching-requests.component.ts","./src/app/admin/pages/setup/diploma/add-diploma/add-diploma.component.ts","./src/app/admin/pages/setup/diploma/add-diploma/add-diploma.component.html","./src/app/admin/pages/setup/diploma/diploma/diploma.component.ts","./src/app/admin/pages/setup/diploma/diploma/diploma.component.html","./src/app/admin/pages/setup/exceptional-views/exceptional-views.component.ts","./src/app/admin/pages/setup/exceptional-views/exceptional-views.component.html","./src/app/admin/pages/setup/generate-balance-codes/generate-balance-codes.component.ts","./src/app/admin/pages/setup/generate-balance-codes/generate-balance-codes.component.html","./src/app/admin/pages/setup/gifts-category/gifts-category-add/gifts-category-add.component.ts","./src/app/admin/pages/setup/gifts-category/gifts-category-add/gifts-category-add.component.html","./src/app/admin/pages/setup/gifts-category/gifts-category-index/gifts-category-index.component.ts","./src/app/admin/pages/setup/gifts-category/gifts-category-index/gifts-category-index.component.html","./src/app/admin/pages/setup/gifts/gifts-add/gifts-add.component.ts","./src/app/admin/pages/setup/gifts/gifts-add/gifts-add.component.html","./src/app/admin/pages/setup/gifts/gifts-index/gifts-index.component.ts","./src/app/admin/pages/setup/gifts/gifts-index/gifts-index.component.html","./src/app/admin/pages/setup/job-titles/job-title/job-title.component.ts","./src/app/admin/pages/setup/job-titles/job-title/job-title.component.html","./src/app/admin/pages/setup/job-titles/update-job-department/update-job-department.component.ts","./src/app/admin/pages/setup/job-titles/update-job-department/update-job-department.component.html","./src/app/admin/pages/setup/manage-views/manage-views.component.ts","./src/app/admin/pages/setup/manage-views/manage-views.component.html","./src/app/admin/pages/setup/manual-cash-payment/manual-cash-payment.component.ts","./src/app/admin/pages/setup/manual-cash-payment/manual-cash-payment.component.html","./src/app/admin/pages/setup/points-setup/points-setup.component.ts","./src/app/admin/pages/setup/points-setup/points-setup.component.html","./src/app/admin/pages/setup/question-student-settings/question-student-settings.component.ts","./src/app/admin/pages/setup/question-student-settings/question-student-settings.component.html","./src/app/admin/pages/setup/send-singular-whatsapp-msg/send-singular-whatsapp-msg.component.ts","./src/app/admin/pages/setup/send-singular-whatsapp-msg/send-singular-whatsapp-msg.component.html","./src/app/admin/pages/setup/send-whatsapp-msg/send-whatsapp-msg.component.ts","./src/app/admin/pages/setup/send-whatsapp-msg/send-whatsapp-msg.component.html","./src/app/admin/pages/setup/setup-routing.module.ts","./src/app/admin/pages/setup/setup.module.ts","./src/app/admin/pages/users/center-branches/center-branches.component.ts","./src/app/admin/pages/users/center-branches/center-branches.component.html","./src/app/admin/pages/users/functions-setup/functions-setup.component.ts","./src/app/admin/pages/users/functions-setup/functions-setup.component.html","./src/app/admin/pages/users/roles/add-role/add-role.component.ts","./src/app/admin/pages/users/roles/add-role/add-role.component.html","./src/app/admin/pages/users/roles/role-functions/role-functions.component.html","./src/app/admin/pages/users/roles/role-functions/role-functions.component.ts","./src/app/admin/pages/users/user-branches-roles/user-branches-roles.component.ts","./src/app/admin/pages/users/user-branches-roles/user-branches-roles.component.html","./src/app/admin/pages/users/user-deparment-and-job-title/deparment-job-title.component.ts","./src/app/admin/pages/users/user-deparment-and-job-title/deparment-job-title.component.html","./src/app/admin/pages/users/users/users.component.ts","./src/app/admin/pages/users/users/users.component.html","./src/app/admin/services/Admin/cash-payment.service.ts","./src/app/admin/services/Admin/exams.service.ts","./src/app/admin/services/Admin/manage-views.service.ts","./src/app/admin/services/Admin/points.service.ts","./src/app/admin/services/Admin/setup/articles.service.ts","./src/app/admin/services/Admin/subjectMaterials.service.ts","./src/app/admin/services/roles/branches.service.ts","./src/app/admin/services/roles/functions.service.ts","./src/app/admin/services/roles/roles.service.ts","./src/app/admin/services/roles/users.service.ts","./src/app/admin/services/setup/categories.service.ts","./src/app/admin/services/whatsApp/whats-app.service.ts","./src/app/shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component.ts","./src/app/shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component.html","./src/app/shared/directives/mat-paginator-style.directive.ts","./src/app/shared/enums/res-message.ts","./src/app/shared/services/General/group-by.service.ts","./src/app/shared/services/formValidation.service.ts"],"sourcesContent":["import {NgModule} from \"@angular/core\";\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {UserBalanceDetailsComponent} from \"app/shared/components/user-balance-details/user-balance-details.component\";\r\nimport {IsAdminGuard} from \"app/shared/services/auth/Guards/roles/is-admin.guard\";\r\nimport {ReservationEditComponent} from \"./pages/reservation/reservation-edit/reservation-edit.component\";\r\nimport {ReservationIndexComponent} from \"./pages/reservation/reservation-index/reservation-index.component\";\r\nimport {ReservationStatusComponent} from \"./pages/reservation/reservation-status/reservation-status.component\";\r\nimport {StudentDiscountComponent} from \"./pages/reservation/student-discount/student-discount.component\";\r\nimport {StudentsIndexComponent} from \"./pages/reservation/students/students-index/students-index.component\";\r\nimport {CenterBranchesComponent} from \"./pages/users/center-branches/center-branches.component\";\r\nimport {FunctionsSetupComponent} from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport {AddRoleComponent} from \"./pages/users/roles/add-role/add-role.component\";\r\nimport {RoleFunctionsComponent} from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport {UserBranchesRolesComponent} from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport {\r\n  UserDeparmentAndJobTitleComponent\r\n} from \"./pages/users/user-deparment-and-job-title/deparment-job-title.component\";\r\nimport {UsersComponent} from \"./pages/users/users/users.component\";\r\nimport {DashboardComponent} from \"app/admin/pages/dashboard/dashboard.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: DashboardComponent,\r\n    data: {\r\n      breadcrumb: {\r\n        label: \"Navbar.Dashboard\",\r\n        view: \"dashboard\",\r\n      },\r\n    },\r\n  },\r\n\r\n\r\n  {\r\n    path: \"users\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n        data: {\r\n          breadcrumb: {\r\n            label: \"labels.Users\",\r\n            disable: true,\r\n          },\r\n          view: \"user-index\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"index\",\r\n        component: UsersComponent,\r\n        data: {\r\n          breadcrumb: \"labels.Employees\",\r\n          view: \"user-index\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"user-roles-branches/:userId/:roleId\",\r\n        component: UserBranchesRolesComponent,\r\n        data: {\r\n          view: \"user-roles\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"functions\",\r\n        component: FunctionsSetupComponent,\r\n      },\r\n\r\n      {\r\n        path: \"center-branches\",\r\n        component: CenterBranchesComponent,\r\n        data: {\r\n          breadcrumb: \"labels.Branch\",\r\n          view: \"center-branches\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"students-index\",\r\n        component: StudentsIndexComponent,\r\n      },\r\n      {\r\n        path: \"roles\",\r\n        component: AddRoleComponent,\r\n        data: {\r\n          breadcrumb: \"Navbar.Roles\",\r\n          view: \"roles\",\r\n        },\r\n      },\r\n      {\r\n        path: \"role-fuctions/:roleId\",\r\n        component: RoleFunctionsComponent,\r\n        data: {\r\n          breadcrumb: \"labels.AddRoleFunctions\",\r\n          view: \"role-functions\",\r\n        },\r\n      },\r\n      {\r\n        path: \"user-dep-job/:userId\",\r\n        component: UserDeparmentAndJobTitleComponent,\r\n        data: {\r\n          breadcrumb: \"jobTitlebyDepartment.adddepartment\",\r\n          view: \"user-dep-job\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"reservation\",\r\n    children: [\r\n      {path: \"\", redirectTo: \"index\", pathMatch: \"full\"},\r\n      {path: \"index\", component: ReservationIndexComponent},\r\n      {\r\n        path: \"edit-reservation/:reservationId\",\r\n        component: ReservationEditComponent,\r\n      },\r\n      {\r\n        path: \"reservation-status/:reservationId\",\r\n        component: ReservationStatusComponent,\r\n      },\r\n      {\r\n        path: \"student-discount\",\r\n        component: StudentDiscountComponent,\r\n      },\r\n      {\r\n        path: \"balance-details/:userId\",\r\n        component: UserBalanceDetailsComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"educational-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/educational-setup/educational-setup.module\").then(\r\n        (m) => m.EducationalSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/setup.module\").then((m) => m.SetupModule),\r\n    data: {\r\n      breadcrumb: {\r\n        label: \"Navbar.Setup\",\r\n        disable: true,\r\n      },\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"exams-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/exams-setup/exams.module\").then((m) => m.ExamsModule),\r\n    data: {\r\n      breadcrumb: \"Navbar.ExamsSetup\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"reports\",\r\n    loadChildren: () =>\r\n      import(\"./pages/reports/reports.module\").then((m) => m.ReportsModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"./../shared/shared.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\r\nimport { UsersComponent } from \"./pages/users/users/users.component\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { MatPaginatorStyleDirective } from \"app/shared/directives/mat-paginator-style.directive\";\r\nimport { ReservationIndexComponent } from \"./pages/reservation/reservation-index/reservation-index.component\";\r\nimport { ReservationEditComponent } from \"./pages/reservation/reservation-edit/reservation-edit.component\";\r\nimport { ReservationDetailsComponent } from \"./pages/reservation/reservation-details/reservation-details.component\";\r\nimport { ReservationStatusComponent } from \"./pages/reservation/reservation-status/reservation-status.component\";\r\nimport { StudentDiscountComponent } from \"./pages/reservation/student-discount/student-discount.component\";\r\nimport { StudentsIndexComponent } from \"./pages/reservation/students/students-index/students-index.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport { UserDeparmentAndJobTitleComponent } from \"./pages/users/user-deparment-and-job-title/deparment-job-title.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { SetupModule } from \"./pages/setup/setup.module\";\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    SetupModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    UserBranchesRolesComponent,\r\n    FunctionsSetupComponent,\r\n    CenterBranchesComponent,\r\n    MatPaginatorStyleDirective,\r\n    ReservationIndexComponent,\r\n    ReservationEditComponent,\r\n    ReservationDetailsComponent,\r\n    ReservationStatusComponent,\r\n    StudentDiscountComponent,\r\n    StudentsIndexComponent,\r\n    AddRoleComponent,\r\n    RoleFunctionsComponent,\r\n    UserDeparmentAndJobTitleComponent,\r\n    DashboardComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class DashboardModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>dashboard works!</p>\r\n<ngx-skeleton-loader count=\"5\" appearance=\"circle\"></ngx-skeleton-loader>\r\n","import {DatePipe} from \"@angular/common\";\r\nimport {Component, Inject, OnInit} from \"@angular/core\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {\r\n  IAddMaterailVM,\r\n  IGetMaterialVM,\r\n  lesson,\r\n  teacherBySubEduComp,\r\n  unit,\r\n} from \"app/admin/models/admin/educations\";\r\nimport {StudentGroupVM} from \"app/admin/models/admin/reservation\";\r\nimport {\r\n  IUnitDataGeneralRequest\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport {CourseService} from \"app/admin/services/Admin/setup/course.service\";\r\nimport {SubjectMaterialsService} from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport {SubjectsService} from \"app/admin/services/Admin/subjects.service\";\r\nimport {RadioButtonModel} from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport {AppStrings} from \"app/shared/data/app-strings\";\r\nimport {IRowFunctionVM} from \"app/shared/models/general/general\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {LanguageService} from \"app/shared/services/language.service\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {CustomeValidator} from \"app/shared/validators/customeValid.validator\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-add-material-main-data\",\r\n  templateUrl: \"./add-main-data.component.html\",\r\n  styleUrls: [\"./add-main-data.component.scss\"],\r\n})\r\nexport class AddMaterialMainDataComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: number;\r\n  parentId: number;\r\n  courseName: string;\r\n  rowFunctions: IRowFunctionVM[];\r\n  subjectId: any;\r\n  unitId: number;\r\n  materialId: any;\r\n  subject_ar_name: string;\r\n  // sava last data in database not in form\r\n  materialName: string;\r\n  order: number;\r\n  isMandatory: boolean;\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  Teachers: teacherBySubEduComp[] = [];\r\n  units: unit[];\r\n  Lessons: lesson[];\r\n  groups: StudentGroupVM[];\r\n  getGroupsValue: any[] = [];\r\n\r\n  // attachFile: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private SubjectsService: SubjectsService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private courseService: CourseService,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private datePipe: DatePipe,\r\n    private languageService: LanguageService,\r\n    public appStrings: AppStrings,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddMaterialMainDataComponent>\r\n  ) {\r\n    this.subjectId = data.subjectId;\r\n    this.unitId = data.unitId;\r\n    this.materialId = data.materialId;\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      // this.materialId = params.get(\"materialId\");\r\n      // this.subjectId = params.get(\"courseId\");\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // this.parentId = Number(params.get(\"parentId\"));\r\n      // this.courseName = params.get(\"courseName\");\r\n\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n\r\n      // this.returnSearchedUnitsBySubjectId();\r\n    });\r\n\r\n    // this.getSubjectByID(this.subjectId);\r\n\r\n    // on closing dialog by clicking outside dialog\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    let data: IUnitDataGeneralRequest = null;\r\n    if (this.materialId) {\r\n      data = {\r\n        id: this.materialId,\r\n        ar_name: this.materialName,\r\n        type: this.appStrings.stageLecture,\r\n        order: this.order,\r\n        isMandatory: this.isMandatory,\r\n      };\r\n    }\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n    // this.getTeacherByEduCompId();\r\n    // this.getGroupsByEduCompId();\r\n\r\n    this.myForm = this.fb.group(\r\n      {\r\n        subjectId: [this.subjectId, [Validators.required]], //+\r\n        EditedMaterialId: [this.materialId], //+\r\n        //  teacherUserId: [\"\"], // Validators.required\r\n        //  selectedItemType: [1], // Validators.required\r\n        // selectedItemId: [\"\"], // Validators.required\r\n        materialName: [\"\", [Validators.required, CustomeValidator.whiteSpace]], //+\r\n        // onlyCode: [false, Validators.required],\r\n        //  CustomDiscountApplied: [false, Validators.required],\r\n        //  CodeIsPurchasable: [false, Validators.required],\r\n        IsOnline: [1, [Validators.required]], //+\r\n        num_views: [0], //online //+\r\n        // attachFile: [null], //+\r\n        // studentGroupIDs: [], //ofline\r\n        // address: [\"\"], //ofline\r\n        // materialPrice: [0], //onlyCode=false\r\n        // priceDiscount: [\"\"], //onlyCode=false\r\n        // codePrice: [\"\"], //onlyCode=true\r\n        // priceDiscountType: [\"null\", [CustomeValidator.minusNum]],\r\n        fromDate: [\"\", [Validators.required]], //+\r\n        toDate: [\"\"], //+\r\n        //  unitId: [\"\"],\r\n        // lessonId: [\"\"],\r\n        orderNum: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n        isMandatory: [true, [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"fromDate\", \"toDate\"),\r\n      }\r\n    );\r\n    //this.onlyCodeValidators();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      //   this.getTeacherByEduCompId();\r\n      //   this.getGroupsByEduCompId();\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.materialId != null) {\r\n      this.getMaterialById();\r\n    }\r\n  }\r\n\r\n  //add Material Form\r\n  addEditMaterial() {\r\n    this.submitted = true;\r\n    // let type = this.FormCtrl.selectedItemType?.value;\r\n    // let selectedItemId;\r\n    // if (type == 1) selectedItemId = this.subjectId;\r\n    // else if (type == 2) selectedItemId = this.FormCtrl.unitId?.value;\r\n    // else if (type == 3) selectedItemId = this.FormCtrl.lessonId?.value;\r\n    // this.FormCtrl.selectedItemId?.setValue(selectedItemId);\r\n    // if (\r\n    //   this.FormCtrl.IsOnline.value == 2 &&\r\n    //   !this.FormCtrl.studentGroupIDs?.value?.length\r\n    // ) {\r\n    //   this.toastr.warning(\"Must Choose Group!\");\r\n    //   return;\r\n    // }\r\n    if (\r\n      this.FormCtrl.IsOnline.value == 1 &&\r\n      Number(this.FormCtrl.num_views?.value) < 0\r\n    ) {\r\n      this.toastr.warning(\"Material.noOfViesMsgError\");\r\n      return;\r\n    }\r\n\r\n    // console.log(this.myForm);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let data: IAddMaterailVM = {\r\n        EditedMaterialId: this.materialId,\r\n        isOnline: this.FormCtrl.IsOnline?.value,\r\n        // attachFile: this.FormCtrl.attachFile?.value,\r\n        subjectId: this.subjectId,\r\n        unitID: this.unitId,\r\n        num_views: this.FormCtrl.num_views?.value,\r\n        materialName: this.FormCtrl.materialName?.value,\r\n        toDate: this.datePipe.transform(this.FormCtrl.toDate?.value),\r\n        fromDate: this.datePipe.transform(this.FormCtrl.fromDate?.value),\r\n        orderNum: this.FormCtrl.orderNum.value,\r\n        isMandatory: this.FormCtrl.isMandatory.value,\r\n      };\r\n      this.SubjectMaterialsService.addEditMaterial<IAddMaterailVM>(\r\n        data\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          //console.log(res);\r\n          this.materialId == null\r\n            ? this.toastr.success(\"General.AddSuccessfully\")\r\n            : this.toastr.success(\"General.UpdateSuccessfully\");\r\n\r\n          this.materialName = data.materialName;\r\n          this.order = data.orderNum;\r\n          this.isMandatory = data.isMandatory;\r\n\r\n          this.submitted = false;\r\n          this.materialId = res.Id;\r\n          this.onCloseDialog();\r\n          this.router.navigate([\"/dashboard/setup/course/structure-lectures\"], {\r\n            queryParams: {\r\n              materialId: res.Id,\r\n              functionId: this.functionId,\r\n              subjectId: this.subjectId,\r\n            },\r\n            //  queryParamsHandling: \"merge\",\r\n          });\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getMaterialById() {\r\n    this.spinner.show();\r\n    this.SubjectMaterialsService.getMaterialById<IGetMaterialVM>(\r\n      this.subjectId,\r\n      this.materialId\r\n    ).subscribe((res) => {\r\n      //  console.log(res);\r\n      if (res.retunValue == 1) {\r\n        this.myForm.patchValue(res.model);\r\n        this.FormCtrl.num_views.setValue(0);\r\n        this.materialName = res.model.materialName;\r\n        // this.attachFile = res.model?.videoPath;\r\n        // this.FormCtrl.attachFile.setValue(res.model?.videoPath);\r\n        // this.FormCtrl.CustomDiscountApplied.setValue(\r\n        //   res.model.CustomDiscountApplied || false\r\n        // );\r\n        // if (res.model?.selectedItemType == 2)\r\n        //   this.FormCtrl.unitId.setValue(res.model.selectedItemId);\r\n        // else if (res.model.selectedItemType == 3) {\r\n        //   //this.returnSearchedLessonsByUnitId()\r\n        //   this.FormCtrl.lessonId.setValue(res.model.selectedItemId);\r\n        // }\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // imageUrl() {\r\n  //   if (!this.FormCtrl.attachFile?.value?.FileAsBase64)\r\n  //     return `${environment.apiURL}${this.FormCtrl.attachFile?.value}`;\r\n  //   else return this.FormCtrl.attachFile?.value.FileAsBase64;\r\n  // }\r\n\r\n  //Attache File\r\n  // onChange(event: any) {\r\n  //   let fileName = <string>event.target.files[0].name;\r\n  //   let fileSize = <number>event.target.files[0].size;\r\n  //   let fileType = <File>event.target.files[0].type;\r\n  //   let LastModified = <number>event.target.files[0].lastModified;\r\n  //   let LastModifiedDate = <Date>event.target.files[0].lastModifiedDate;\r\n\r\n  //   if (event.target.files) {\r\n  //     var reader = new FileReader();\r\n  //     reader.readAsDataURL(event.target.files[0]);\r\n  //     reader.onload = (event: any) => {\r\n  //       let fileReder = event.target.result;\r\n  //       let data = {\r\n  //         FileAsBase64: fileReder,\r\n  //         name: fileName,\r\n  //         size: fileSize,\r\n  //         type: fileType,\r\n  //         LastModified: LastModified,\r\n  //         LastModifiedDate: LastModifiedDate,\r\n  //       };\r\n  //       console.log(data);\r\n  //       if (fileSize < 5000000) {\r\n  //         this.FormCtrl.attachFile.setValue(data);\r\n  //       } else this.toastr.warning(\"File is to large, accept Max 5mb\");\r\n  //     };\r\n  //   }\r\n  // }\r\n\r\n  getGroupsByEduCompId() {\r\n    this.SubjectMaterialsService.getGroupsByEduCompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        if (res.retunValue == 1) {\r\n          this.groups = res.lstEduCompGroups;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // getSubjectByID(id: any) {\r\n  //   this.courseService.getCourseById(id).subscribe((res: ICourseGetVM) => {\r\n  //     if (res.id != null) {\r\n  //       this.subject_ar_name =\r\n  //          this.languageService.isArabic ? res.subCourse_ar_name : res.subCourse_en_name;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  getTeacherByEduCompId() {\r\n    this.spinner.show();\r\n    this.SubjectsService.getTeacherBySubjectAndEduCompId(\r\n      this.EduCompId,\r\n      this.subjectId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.Teachers = res.teachers;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  returnSearchedUnitsBySubjectId() {\r\n    this.SubjectMaterialsService.returnSearchedUnitsBySubjectId<unit[]>(\r\n      this.subjectId\r\n    ).subscribe((res) => {\r\n      this.units = res;\r\n    });\r\n  }\r\n\r\n  returnSearchedLessonsByUnitId(unitId: any) {\r\n    this.SubjectMaterialsService.returnSearchedLessonsByUnitId<lesson[]>(\r\n      unitId\r\n    ).subscribe((res) => {\r\n      this.Lessons = res;\r\n    });\r\n  }\r\n\r\n  //onlyCode Validators\r\n  // onlyCodeValidators() {\r\n  //   let online = this.FormCtrl.codePrice.value;\r\n  //   if (online == false) {\r\n  //     this.FormCtrl.codePrice.reset();\r\n  //     this.FormCtrl.codePrice.clearValidators();\r\n  //     this.FormCtrl.materialPrice.setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.minusNum,\r\n  //     ]);\r\n  //   }\r\n\r\n  //   if (online == true) {\r\n  //     this.FormCtrl.materialPrice.reset();\r\n  //     this.FormCtrl.materialPrice.clearValidators();\r\n  //     this.FormCtrl.codePrice.setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.minusNum,\r\n  //     ]);\r\n  //   }\r\n\r\n  //   this.FormCtrl.materialPrice.updateValueAndValidity();\r\n  //   this.FormCtrl.codePrice.updateValueAndValidity();\r\n  // }\r\n\r\n  isMandatoryRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: \"labels.Yes\",\r\n      value: true,\r\n    },\r\n    {\r\n      label: \"noOptional\",\r\n      value: false,\r\n    },\r\n  ];\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<p mat-dialog-title class=\"mb-2\">\r\n  <page-title addTitle=\"course.AddLecture\" editTitle=\"course.UpdateLecture\" [id]=\"materialId ?? 0\"></page-title>\r\n  <i [mat-dialog-close]=\"false\" class=\"fas fa-times-circle closeIcon float-right\"></i>\r\n</p>\r\n<progress-bar\r\n  [percentage]=\"100\"\r\n  class=\"dark-blue\"\r\n></progress-bar>\r\n\r\n<div class=\"mt-3\">\r\n  <!--  <mat-card-title>{{ \"labels.MainData\" | translate }}</mat-card-title>-->\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 mb-2\">\r\n        <app-input\r\n          [control]=\"FormCtrl.materialName\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.Name\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-2\">\r\n        <app-datepicker\r\n          [control]=\"FormCtrl.fromDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.FromDate\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-2\">\r\n        <app-datepicker\r\n          [control]=\"FormCtrl.toDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.ToDate\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-2\">\r\n        <app-input\r\n          [control]=\"FormCtrl.orderNum\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.Order\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-2\">\r\n        <app-radio-button\r\n          [control]=\"FormCtrl.isMandatory\"\r\n          [radioList]=\"isMandatoryRadioList\"\r\n          label=\"isRequired\"\r\n        ></app-radio-button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <div mat-dialog-actions>\r\n    <button class=\"orange-btn radius-btn w-100\" (click)=\"addEditMaterial()\">\r\n      {{ \"General.Done\" | translate }}\r\n    </button>\r\n  </div>\r\n\r\n\r\n  <!-- <mat-dialog-actions align=\"end\">\r\n  </mat-dialog-actions> -->\r\n\r\n  <!-- add-material-parts -->\r\n\r\n  <!--  <mat-card-title>-->\r\n  <!--    {{ \"labels.MaterialParts\" | translate }}-->\r\n  <!--  </mat-card-title>-->\r\n  <!--      <app-add-material-parts-->\r\n  <!--        [materialId]=\"materialId\"-->\r\n  <!--        (closeDialog)=\"onCloseDialog()\"-->\r\n  <!--      >-->\r\n  <!--      </app-add-material-parts>-->\r\n\r\n</div>\r\n\r\n","import {Component, Inject, Input, OnInit} from \"@angular/core\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {IGetPartVM, IPartVM} from \"app/admin/models/admin/educations\";\r\nimport {SubjectMaterialsService} from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport {CustomeValidator} from \"app/shared/validators/customeValid.validator\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {AppConstants} from \"app/shared/data/app_constants\";\r\nimport {defaultInputAppearance, InputAppearance} from \"app/shared/enums/mat-theme.enum\";\r\n\r\n@Component({\r\n  selector: \"app-add-material-parts\",\r\n  templateUrl: \"./add-material-parts.component.html\",\r\n  styleUrls: [\"./add-material-parts.component.scss\"],\r\n})\r\nexport class AddMaterialPartsComponent implements OnInit {\r\n  // @Input(\"materialId\") materialId: any;\r\n  // @Output(\"closeDialog\") closeDialog = new EventEmitter();\r\n  materialId: any\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  appearance: InputAppearance = defaultInputAppearance;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private spinner: NgxSpinnerService,\r\n    public dialog: MatDialog,\r\n    public dialogRef: MatDialogRef<AddMaterialPartsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IPartVM\r\n  ) {\r\n    this.materialId = data.materialId\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      materialId: [this.materialId, Validators.required],\r\n      Id: [0],\r\n      videoTypeId: [\"\", Validators.required],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Path: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      SecondaryPath: [\"\"],\r\n      view_percentage: [90, [Validators.required, CustomeValidator.minusNum]],\r\n      description: [null],\r\n    });\r\n\r\n    if (this.materialId != null || this.materialId != undefined) {\r\n      this.FormCtrl.materialId?.setValue(this.materialId);\r\n      if (this.data.Id) this.myForm.patchValue(this.data);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.materialId != null || this.materialId != undefined) {\r\n      this.FormCtrl?.materialId?.setValue(this.materialId);\r\n    }\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm?.controls;\r\n  }\r\n\r\n  // get Part ById\r\n  getPartById(id: any) {\r\n    this.spinner.show();\r\n    this.SubjectMaterialsService.getPartById<IGetPartVM>(id).subscribe(\r\n      (res) => {\r\n        // console.log(\"Part\", res);\r\n        this.myForm.patchValue(res.MaterialPart);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // Start: add Subject\r\n  addPart() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.SubjectMaterialsService.addPart(this.myForm.value).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.dialogRef.close(true)\r\n            if (this.FormCtrl.Id.value == 0)\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            else this.toastr.success(\"General.UpdateSuccessfully\");\r\n\r\n            this.myForm.reset();\r\n            this.FormCtrl.Id?.setValue(0);\r\n            this.FormCtrl.videoTypeId?.setValue(\"\");\r\n            this.FormCtrl.materialId?.setValue(this.materialId);\r\n            this.FormCtrl.view_percentage?.setValue(90);\r\n            this.submitted = false;\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<p mat-dialog-title class=\"mb-4\">\r\n  <page-title addTitle=\"addVideo\" editTitle=\"editVideo\" [id]=\"FormCtrl.Id.value ?? 0\"></page-title>\r\n  <i [mat-dialog-close]=\"false\" class=\"fas fa-times-circle closeIcon float-right\"></i>\r\n</p>\r\n\r\n<div class=\"mt-3\">\r\n  <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 mb-3\">\r\n        <app-input [control]=\"FormCtrl.Name\"\r\n                   [submitted]=\"submitted\"\r\n                   label=\"labels.Name\"\r\n                   type=\"text\">\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-3\">\r\n        <mat-label class=\"input-label\">{{ \"labels.Type\" | translate }} </mat-label>\r\n        <mat-form-field [appearance]=\"appearance\">\r\n          <mat-select formControlName=\"videoTypeId\">\r\n            <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n            <mat-option [value]=\"1\">VideoCipher</mat-option>\r\n            <mat-option [value]=\"2\">Vimeo</mat-option>\r\n            <mat-option [value]=\"3\">SproutVideo</mat-option>\r\n          </mat-select>\r\n          <mat-hint>\r\n            <input-validation-msg\r\n              [control]=\"FormCtrl.videoTypeId\"\r\n              [submitted]=\"submitted\"\r\n              [isSelect]=\"true\"\r\n            ></input-validation-msg>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-3\">\r\n        <app-input [control]=\"FormCtrl.Path\"\r\n                   [submitted]=\"submitted\"\r\n                   label=\"labels.Link\"\r\n                   type=\"text\">\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-3\" *ngIf=\"FormCtrl.videoTypeId.value == 3\">\r\n        <app-input [control]=\"FormCtrl.SecondaryPath\"\r\n                   [submitted]=\"submitted\"\r\n                   label=\"labels.Link\"\r\n                   type=\"text\">\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-3\">\r\n        <app-input [control]=\"FormCtrl.view_percentage\"\r\n                   [submitted]=\"submitted\"\r\n                   label=\"labels.ConfirmViewPercentage\"\r\n                   type=\"number\">\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12 mb-3\">\r\n        <app-text-editor [control]=\"FormCtrl.description\"\r\n                         [submitted]=\"submitted\"\r\n                         label=\"VideoDescription\">\r\n        </app-text-editor>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div mat-dialog-actions>\r\n    <button class=\"orange-btn radius-btn w-100\" (click)=\"addPart()\" [disabled]=\"\r\n      FormCtrl.materialId.value == undefined ||\r\n      FormCtrl.materialId.value == null\r\n    \">\r\n      {{ \"General.Next\" | translate }}\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IPartVM} from \"app/admin/models/admin/educations\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {SubjectMaterialsService} from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {DeleteDialogComponent} from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {SvgManager} from \"app/shared/data/svg-manager\";\r\nimport {\r\n  AddMaterialPartsComponent\r\n} from \"app/admin/pages/educational-setup/EducationalSubject/add-materials/add-material-parts/add-material-parts.component\";\r\n\r\n@Component({\r\n  selector: 'app-mat-parts-index',\r\n  templateUrl: './mat-parts-index.component.html',\r\n  styleUrls: ['./mat-parts-index.component.scss']\r\n})\r\nexport class MatPartsIndexComponent implements OnInit {\r\n  materialId: any;\r\n  functionId: any;\r\n  subjectId: any;\r\n  parts: IPartVM[] = [];\r\n  svgManager = new SvgManager();\r\n  isLoaded: boolean = false\r\n\r\n  constructor(private toastr: MessagesService,\r\n              private SubjectMaterialsService: SubjectMaterialsService,\r\n              private spinner: NgxSpinnerService,\r\n              private route: ActivatedRoute,\r\n              private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.materialId = Number(params.get(\"materialId\"));\r\n      this.subjectId = Number(params.get(\"subjectId\"));\r\n    });\r\n    if (this.materialId > 0) {\r\n      this.getMaterialParts();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getMaterialParts() {\r\n    this.isLoaded = false;\r\n    this.SubjectMaterialsService.getMaterialParts(this.materialId).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          //  console.log(\"Parts\", res);\r\n          this.parts = res.MaterialParts;\r\n          this.isLoaded = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  deletePart(part: IPartVM) {\r\n    this.spinner.show();\r\n    this.SubjectMaterialsService.deletePart(part.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.parts.indexOf(part);\r\n        this.parts.splice(i, 1);\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(part: IPartVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: part.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletePart(part);\r\n      });\r\n  }\r\n\r\n\r\n  openCreationDialog(part: IPartVM) {\r\n    this.dialog\r\n      .open(AddMaterialPartsComponent, {\r\n        data: part ?? {materialId: this.materialId},\r\n        width: \"500px\"\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.getMaterialParts();\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n\r\n<mat-card class=\"admin-index-card\">\r\n  <mat-card-title class=\"px-2\">\r\n    <page-title title=\"course.AddLecture\"></page-title>\r\n\r\n  </mat-card-title>\r\n  <mat-card-subtitle class=\"px-2 mt-1\">\r\n    Add general information about the course:\r\n  </mat-card-subtitle>\r\n  <hr>\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n\r\n      <!--  START: Videos List   -->\r\n      <div class=\"col-12 mt-3 stage-content\">\r\n        <ng-container *ngIf=\"isLoaded; else loader\">\r\n          <div class=\"row px-1 justify-content-between\">\r\n            <div class=\"col-12 col-lg-6\" *ngFor=\"let part of parts\">\r\n              <div class=\"stage-content-row row\">\r\n\r\n\r\n              <span class=\"icon col-1 p-0 m-0\">\r\n                <img [src]=\"svgManager.video_content\"\r\n                     height=\"35\"\r\n                     width=\"35\"\r\n                     class=\"mr-2 avatar\"\r\n                     alt=\"icon\">\r\n              </span>\r\n\r\n                <div class=\"name col-7 p-0 m-0\">\r\n                  {{ part.Name }}\r\n                </div>\r\n\r\n                <div class=\"time col-2 p-0 m-0\">\r\n                  {{ part.view_percentage }} %\r\n                </div>\r\n\r\n                <div class=\"action text-center col-2 p-0 m-0\">\r\n                  <a\r\n                    (click)=\"openCreationDialog(part)\"\r\n                    class=\"dark-blue mr-2\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"fas fa-pen font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    (click)=\"openDeleateDialog(part)\"\r\n                    class=\"danger\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"fa fa-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-12 col-lg-6 px-0 mb-2\">\r\n              <button class=\"dashed-btn\" (click)=\"openCreationDialog(null)\">\r\n                <i class=\"ft-plus-circle\"></i>\r\n                <p> {{ \"addVideo\" | translate }}</p>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n\r\n  <mat-card-actions align=\"end\" class=\"pr-3 pt-0\">\r\n    <button routerLink=\"/dashboard/setup/course/course-structure/{{subjectId}}\"\r\n            [queryParams]=\"{functionId:functionId}\"\r\n            class=\"dark-blue-btn radius-btn cancel-btn\">\r\n          <span class=\"text-btn\">\r\n            {{ \"General.Back\" | translate }}\r\n          </span>\r\n    </button>\r\n\r\n    <button class=\"orange-btn radius-btn next-btn\"\r\n            routerLink=\"/dashboard/setup/course/index\"\r\n            [queryParams]=\"{functionId:functionId}\">\r\n          <span class=\"text-btn\">\r\n            {{ \"General.Submit\" | translate }}\r\n          </span>\r\n    </button>\r\n  </mat-card-actions>\r\n\r\n</mat-card>\r\n\r\n<ng-template #loader>\r\n  <div class=\"row px-1 justify-content-between\">\r\n    <div class=\"col-12 col-lg-6 px-0 mb-2\" *ngFor=\"let item of [1, 2, 3, 4]\">\r\n      <ngx-skeleton-loader\r\n        [theme]=\"{\r\n              height: '50px',\r\n              margin: '0px',\r\n              borderRadius: '10px'\r\n            }\"\r\n      ></ngx-skeleton-loader>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { DatePipe, Location } from \"@angular/common\";\r\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef,\r\n} from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IUnitDataGeneralRequest } from \"app/admin/models/admin/setup/course\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { RadioButtonModel } from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { AppStrings } from \"app/shared/data/app-strings\";\r\nimport { AppConstants } from \"app/shared/data/app_constants\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable, forkJoin } from \"rxjs\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { AuthService } from \"../../../../../shared/services/auth/auth.service\";\r\nimport {\r\n  IAddExamGroupHeaderModel,\r\n  IEditExamGroupHeaderModel,\r\n  IExamGroupHeaderModel,\r\n  IExamModel,\r\n} from \"../../../../models/admin/AddExamGroupHeader\";\r\nimport {\r\n  IAddEditExamHeaderModel,\r\n  IAddEditExamModel,\r\n  IExamResponseInDetails,\r\n} from \"../../../../models/admin/addEditExam\";\r\nimport {\r\n  ICountrieDropModel,\r\n  IDiscountTypeModel,\r\n  IEducationYearDropModel,\r\n  IExamTypeModel,\r\n  ILessionModel,\r\n  IStageDropModel,\r\n  ISubjectDropModel,\r\n  IUnitModel,\r\n} from \"../../../../models/admin/exam\";\r\nimport { ExamsService } from \"../../../../services/Admin/exams.service\";\r\nimport { AddSubQuestionComponent } from \"../add-sub-question/add-sub-question.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-exam\",\r\n  templateUrl: \"./add-exam.component.html\",\r\n  styleUrls: [\"./add-exam.component.scss\"],\r\n})\r\nexport class AddExamComponent implements OnInit {\r\n  functionId: number;\r\n  parentId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  EduCompId: any;\r\n  branchId: any;\r\n  countries: ICountrieDropModel[] = [];\r\n  stages: IStageDropModel[] = [];\r\n  educationYears: IEducationYearDropModel[] = [];\r\n  subjects: ISubjectDropModel[] = [];\r\n  teachers: teacherByEduCompId[];\r\n  examTypes: IExamTypeModel[] = [];\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n  discountTypes: IDiscountTypeModel[] = [];\r\n\r\n  examGroups: any[] = [];\r\n  examHeaders: any[] = [];\r\n  filteredExamGroups: Observable<any[]>;\r\n  filteredExamHeaders: Observable<any[]>;\r\n\r\n  GroupsHeadersList: IExamGroupHeaderModel[] = [];\r\n  type: number;\r\n  subId: number;\r\n  unitId: number;\r\n  examGroupHeaderIdToEdit: number = 0;\r\n  // sava last data in database not in form\r\n  exam_ar_name: string;\r\n  order: number;\r\n  isMandatory: boolean;\r\n\r\n  myForm!: FormGroup;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"questionNumber\",\r\n    \"questionType\",\r\n    \"question_title\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IExamGroupHeaderModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  GroupHeadersForm!: FormGroup;\r\n  submitted = false;\r\n  itemsCount: any;\r\n  GroupHeadsubmitted = false;\r\n  examId: number = 0;\r\n  editGroupHeaderMode: boolean = false;\r\n  isRepeatableExam: boolean = false;\r\n  isSendWhats: boolean = false;\r\n  examGroupHeaderId: any = 0;\r\n\r\n  constructor(\r\n    public location: Location,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private examService: ExamsService,\r\n    // private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private msg: MessagesService,\r\n    private generalService: GeneralService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    public appStrings: AppStrings,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddExamComponent>,\r\n    private appConstants: AppConstants\r\n  ) {\r\n    this.type = data.type;\r\n    this.subId = data.subjectId;\r\n    this.unitId = data.unitId;\r\n    // route.paramMap.subscribe((params) => {\r\n    //   this.type = Number(params.get(\"typeId\"));\r\n    // });\r\n    // route.paramMap.subscribe((params) => {\r\n    //   this.subId = Number(params.get(\"courseId\"));\r\n    // });\r\n\r\n    this.examId = data.examId;\r\n    if (this.examId > 0) {\r\n      this.getExamById();\r\n      this.getAllGroupHeaderByExamId();\r\n    }\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      // this.examId = Number(params.get(\"examId\"));\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.parentId = Number(params.get(\"parentId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        // countryId: [\"\"],\r\n        // stageId: [\"\"],\r\n        // educationYearId: [\"\"],\r\n        // subjectId: [\"\", [Validators.required]],\r\n        // teacherUserId: [\"\", [Validators.required]],\r\n        // examTypeId: [\"\", [Validators.required]],\r\n        // unitId: [\"\"],\r\n        // lessionId: [\"\"],\r\n        examName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        // examHours: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        // examMinutes: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        examDuration: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(this.appConstants.hourMinutesPattern),\r\n          ],\r\n        ],\r\n        // examPrice: [0, [Validators.required, CustomeValidator.minusNum]],\r\n        // discount: [\"\"],\r\n        // discountType: [\"\"],\r\n        fromDate: [\"\"],\r\n        toDate: [\"\"],\r\n        formHour: [\"\"],\r\n        toHours: [\"\"],\r\n        // resualtDate: [\"\"],\r\n        // resualtTime: [\"\"],\r\n        // canSellIndividually: [true, Validators.required],\r\n        isRepeatable: [true, Validators.required],\r\n        repeatNumbers: [1000],\r\n        // repeatingPrice: [0],\r\n        // hasCustomDiscount: [false, Validators.required],\r\n        // sendWhatsAppMsg: [false, Validators.required],\r\n        // isPublish: [0],\r\n        degreeToPass: [\r\n          \"\",\r\n          [Validators.required, CustomeValidator.minusNum, Validators.max(100)],\r\n        ],\r\n        order: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n        isMandatory: [true, [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"fromDate\", \"toDate\"),\r\n      }\r\n    );\r\n\r\n    this.GroupHeadersForm = this.fb.group({\r\n      examGroup: [\"السؤال الاول\", Validators.required],\r\n      examHeader: [\"اختر  الإجابة الصحيحة\", Validators.required],\r\n      examContent: [null],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.FormCtrl.stageId?.disable();\r\n    this.FormCtrl.educationYearId?.disable();\r\n    this.FormCtrl.subjectId?.disable();\r\n    this.FormCtrl.teacherUserId?.disable();\r\n    this.FormCtrl.unitId?.disable();\r\n    this.FormCtrl.lessionId?.disable();\r\n\r\n    this.getAllCountieres();\r\n    this.getAllExamTypes();\r\n    this.getAllQuestionGroups();\r\n    this.getAllQuestionHeaders();\r\n\r\n    this.examTypeValidator();\r\n    this.RepeatableValidator();\r\n\r\n    // on closing dialog by clicking outside dialog\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    let data: IUnitDataGeneralRequest = null;\r\n    if (this.examId) {\r\n      data = {\r\n        id: this.examId,\r\n        ar_name: this.exam_ar_name,\r\n        type: this.appStrings.stageExam,\r\n        order: this.order,\r\n        isMandatory: this.isMandatory,\r\n      };\r\n    }\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.examId > 0) this.getExamById();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  // filter question group\r\n  private filter_question_group(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examGroups.filter((option) =>\r\n      option.question_group_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  // filter question header\r\n  private filter_question_header(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examHeaders.filter((option) =>\r\n      option.question_head_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n  get GroupHeadersFormCtrl() {\r\n    return this.GroupHeadersForm.controls;\r\n  }\r\n\r\n  getExamById() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getExamById<IExamResponseInDetails>(this.examId)\r\n      .subscribe((response) => {\r\n        // console.log(\"getExamById\", response);\r\n        if (response) {\r\n          // this.FormCtrl.stageId?.enable();\r\n          // this.FormCtrl.educationYearId?.enable();\r\n          // this.FormCtrl.subjectId?.enable();\r\n          // this.FormCtrl.teacherUserId?.enable();\r\n          // this.FormCtrl.unitId?.enable();\r\n          // this.FormCtrl.lessionId?.enable();\r\n\r\n          this.FormCtrl.toHours?.setValue(response?.toHour);\r\n          // this.FormCtrl.isPublish?.setValue(response?.isPublish);\r\n          // this.FormCtrl.discount?.setValue(response?.Discount);\r\n          this.FormCtrl.examName?.setValue(response?.exam_ar_name);\r\n          this.exam_ar_name = response?.exam_ar_name;\r\n          this.FormCtrl.formHour?.setValue(response?.fromHour);\r\n          // this.FormCtrl.examPrice?.setValue(response?.price);\r\n          // this.FormCtrl.resualtTime?.setValue(response?.ResultTime);\r\n          // this.FormCtrl.discountType?.setValue(response?.DiscountType);\r\n          // this.FormCtrl.isRepeatable?.setValue(response?.repeatableExam);\r\n          // this.isRepeatableExam = response?.repeatableExam;\r\n          // this.FormCtrl.repeatNumbers?.setValue(response?.repeatableExam_Count);\r\n          // this.FormCtrl.sendWhatsAppMsg?.setValue(response?.SendWhatsApp);\r\n          // this.isSendWhats = response?.SendWhatsApp;\r\n          // this.FormCtrl.hasCustomDiscount?.setValue(response?.Discount > 0);\r\n          this.FormCtrl.canSellIndividually?.setValue(\r\n            response?.Individually_Purchased\r\n          );\r\n          // this.FormCtrl.countryId?.setValue(response.countryId);\r\n          //  this.FormCtrl.examTypeId?.setValue(response.examTypeId);\r\n          // this.FormCtrl.repeatingPrice?.setValue(response.StudentRepeatExamCost);\r\n\r\n          let exam_minute = response.exam_period_minute % 60;\r\n          let exam_hour = (response.exam_period_minute - exam_minute) / 60;\r\n          // this.FormCtrl.examMinutes?.setValue(exam_minute);\r\n          // this.FormCtrl.examHours?.setValue(exam_hour);\r\n          this.FormCtrl.examDuration?.setValue(`${exam_hour}:${exam_minute}`);\r\n\r\n          // if (response.Lesson_ID != null) this.FormCtrl.examTypeId?.setValue(1);\r\n          // if (response?.Unit_ID != null && response.Lesson_ID == null)\r\n          //   this.FormCtrl.examTypeId?.setValue(2);\r\n\r\n          if (\r\n            response?.Subject_ID != null\r\n            // response?.Unit_ID == null &&\r\n            // response.Lesson_ID == null\r\n          )\r\n            if (\r\n              response?.Subject_ID == null &&\r\n              // response?.Unit_ID == null &&\r\n              // response.Lesson_ID == null &&\r\n              response.quiz == 1\r\n            )\r\n              // this.FormCtrl.examTypeId?.setValue(3);\r\n\r\n              this.FormCtrl.examTypeId?.setValue(4);\r\n\r\n          this.FormCtrl.fromDate?.setValue(response.Avilable_Date_From);\r\n          this.FormCtrl.toDate?.setValue(response.Avilable_Date_To);\r\n          // this.FormCtrl.resualtDate?.setValue(response.ResultDate);\r\n\r\n          // this.FormCtrl.countryId?.setValue(1);\r\n          // this.onSelectCountry();\r\n          // this.FormCtrl.stageId?.setValue(response.stageId);\r\n          // this.onSelectStages();\r\n          // this.FormCtrl.educationYearId?.setValue(response.eduYearId);\r\n          // this.onSelectEducationYears();\r\n          // this.FormCtrl.subjectId?.setValue(response?.main_subject_id);\r\n          // this.onSelectSubjects();\r\n          // this.FormCtrl.teacherUserId?.setValue(response?.teacherUserId);\r\n          // this.FormCtrl.unitId?.setValue(response?.Unit_ID);\r\n\r\n          // this.onSelectUnit();\r\n          // this.FormCtrl.lessionId?.setValue(response?.Lesson_ID);\r\n\r\n          // this.FormCtrl.stageId?.setValue(response.stageId);\r\n          // this.FormCtrl.educationYearId?.setValue(response.eduYearId);\r\n          // this.FormCtrl.teacherUserId?.setValue(response?.teacherUserId);\r\n          // this.FormCtrl.unitId?.setValue(response?.Unit_ID);\r\n\r\n          this.FormCtrl.degreeToPass?.setValue(response.percentageToPass);\r\n          this.FormCtrl.order?.setValue(response.orderNum);\r\n          this.order = response.orderNum;\r\n          this.FormCtrl.isMandatory?.setValue(response.isMandatory);\r\n          this.isMandatory = response.isMandatory;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllGroupHeaderByExamId() {\r\n    this.examService\r\n      .getAllGroupHeaderByExamId<IExamGroupHeaderModel>(this.examId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"groupsHeadersLit : \", response);\r\n          this.GroupsHeadersList = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.itemsCount = response.length;\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllQuestionGroups() {\r\n    this.examService.getAllQuestionGroups<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examGroups = response;\r\n        //  console.log(\"examGroups\", this.examGroups);\r\n        this.filteredExamGroups =\r\n          this.GroupHeadersFormCtrl.examGroup?.valueChanges.pipe(\r\n            startWith(\"\"),\r\n            map((value) => this.filter_question_group(value || \"\"))\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllQuestionHeaders() {\r\n    this.examService.getAllQuestionHeaders<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examHeaders = response;\r\n        this.filteredExamHeaders =\r\n          this.GroupHeadersFormCtrl.examHeader?.valueChanges.pipe(\r\n            startWith(\"\"),\r\n            map((value) => this.filter_question_header(value || \"\"))\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    // todo .. check for mandatory firlds\r\n    let exam: IAddEditExamModel = {\r\n      id: this.examId,\r\n      Avilable_Date_From: this.datePipe.transform(\r\n        this.FormCtrl.fromDate?.value\r\n      ),\r\n      Avilable_Date_To: this.datePipe.transform(this.FormCtrl.toDate.value),\r\n      // CustomDiscountApplied: this.FormCtrl.hasCustomDiscount?.value,\r\n      // Discount: this.FormCtrl.discount?.value,\r\n      // DiscountType: this.FormCtrl.discountType?.value,\r\n      EduCompId: this.EduCompId,\r\n      // Individually_Purchased: this.FormCtrl.canSellIndividually?.value,\r\n      // ResultDate: this.datePipe.transform(this.FormCtrl.resualtDate.value),\r\n      // ResultTime: this.FormCtrl.resualtTime?.value,\r\n      // SendWhatsApp: this.FormCtrl.sendWhatsAppMsg?.value,\r\n      // StudentRepeatExamCost: this.FormCtrl.repeatingPrice?.value,\r\n      exam_ar_name: this.FormCtrl.examName?.value,\r\n      fromHour: this.FormCtrl.formHour?.value,\r\n      // lesson_ID: this.FormCtrl.lessionId?.value,\r\n      // price: this.FormCtrl.examPrice?.value,\r\n      repeatableExam: this.FormCtrl.isRepeatable?.value,\r\n      repeatableExam_Count: this.FormCtrl.repeatNumbers?.value,\r\n      Subject_ID: this.subId,\r\n      Unit_ID: this.unitId,\r\n      // teacherUserId: this.FormCtrl.teacherUserId?.value,\r\n      // teacher_subject_id: this.FormCtrl.subjectId?.value,\r\n      toHour: this.FormCtrl.toHours?.value,\r\n      // unit_ID: this.FormCtrl.unitId?.value,\r\n      // exam_hour: this.FormCtrl.examHours?.value,\r\n      // exam_minute: this.FormCtrl.examMinutes?.value,\r\n      // isPublish: this.FormCtrl.isPublish?.value,\r\n      percentageToPass: this.FormCtrl.degreeToPass.value,\r\n      orderNum: this.FormCtrl.order.value,\r\n      isMandatory: this.FormCtrl.isMandatory.value,\r\n      exam_type_id: this.type,\r\n    };\r\n\r\n    let toAddEdit: IAddEditExamHeaderModel = {\r\n      // exam_hour: this.FormCtrl.examHours?.value,\r\n      // exam_minute: this.FormCtrl.examMinutes?.value,\r\n      exam_hour: Number(this.FormCtrl.examDuration.value.split(\":\")[0]),\r\n      exam_minute: Number(this.FormCtrl.examDuration.value.split(\":\")[1]),\r\n      // exam_type_id: this.type,\r\n      exam: exam,\r\n    };\r\n\r\n    console.log(\"toAdd \", toAddEdit);\r\n\r\n    // if exam id = 0 the end point will add >> if the exam id > 0 the end point will edit\r\n    this.addExam(toAddEdit);\r\n  }\r\n\r\n  addExam(toAddEdit: IAddEditExamHeaderModel) {\r\n    let validGroupHeadersForm = this.GroupHeadersForm.valid;\r\n\r\n    this.submitted = true;\r\n    if (this.examId == 0 && !validGroupHeadersForm) {\r\n      this.GroupHeadsubmitted = true;\r\n    } else {\r\n      // if (\r\n      //   this.FormCtrl.hasCustomDiscount?.value == true &&\r\n      //   this.FormCtrl.repeatNumbers.value <= 0\r\n      // ) {\r\n      //   this.msg.warning(\"يجب ادخال عدد مرات التكرار\");\r\n      //   return;\r\n      // }\r\n\r\n      // if (\r\n      //   this.FormCtrl.hasCustomDiscount?.value == true &&\r\n      //   this.FormCtrl.repeatingPrice.value < 0\r\n      // ) {\r\n      //   this.msg.warning(\"يجب ادخال سعر تجديد الامتحان \");\r\n      //   return;\r\n      // }\r\n\r\n      if (this.myForm.valid) {\r\n        this.spinner.show();\r\n        this.examService\r\n          .addExam<IAddEditExamHeaderModel, any>(toAddEdit)\r\n          .subscribe((response) => {\r\n            if (response.returnValue == 1 && response.examId > 0) {\r\n              console.log(\"addExam\", response);\r\n              let isAdd = this.examId == 0 ? true : false;\r\n\r\n              isAdd\r\n                ? this.msg.success(\"General.AddSuccessfully\")\r\n                : this.msg.success(\"General.UpdateSuccessfully\");\r\n\r\n              this.exam_ar_name = toAddEdit.exam.exam_ar_name;\r\n              this.order = toAddEdit.exam.orderNum;\r\n              this.isMandatory = toAddEdit.exam.isMandatory;\r\n              this.examId = response.examId;\r\n\r\n              // this.router.navigate([], {\r\n              //   queryParams: {\r\n              //     examId: response.examId,\r\n              //   },\r\n              //   queryParamsHandling: \"merge\",\r\n              // });\r\n\r\n              if (isAdd) this.onAddExamGroupHeader();\r\n              else {\r\n                this.spinner.hide();\r\n                this.onCloseDialog();\r\n                this.router.navigate(\r\n                  [\r\n                    `/dashboard/setup/course/structure-exam/${this.examId}/${this.GroupsHeadersList[0].id}/${this.subId}`,\r\n                  ],\r\n                  {\r\n                    queryParams: {\r\n                      fanctionId: this.functionId,\r\n                    },\r\n                  }\r\n                );\r\n              }\r\n\r\n              this.submitted = false;\r\n              // this.examId=0;\r\n              // this.myForm.reset();\r\n            } else {\r\n              this.msg.error(response?.returnString);\r\n              this.spinner.hide();\r\n            }\r\n          });\r\n      } else this.msg.error(\"General.FormNotValid\");\r\n    }\r\n  }\r\n\r\n  onAddExamGroupHeader() {\r\n    // let sameGroupWithSameHeader = this.GroupsHeadersList.find(\r\n    //   (gh) =>\r\n    //     gh.group_name == this.GroupHeadersFormCtrl.examGroup?.value &&\r\n    //     gh.head_name == this.GroupHeadersFormCtrl.examHeader?.value\r\n    // );\r\n    let sameGroupWithSameHeader = this.dataSource?.data?.find(\r\n      (gh) =>\r\n        gh.group_name == this.GroupHeadersFormCtrl.examGroup?.value &&\r\n        gh.head_name == this.GroupHeadersFormCtrl.examHeader?.value\r\n    );\r\n\r\n    if (sameGroupWithSameHeader) {\r\n      this.msg.info(\"Cannot add the same header with same group\");\r\n      return;\r\n    }\r\n\r\n    let tempExam: IExamModel = {\r\n      id: this.examId,\r\n    };\r\n\r\n    let ToAddExamGroupHeader: IAddExamGroupHeaderModel = {\r\n      exam_question_group_text: this.GroupHeadersFormCtrl.examGroup?.value,\r\n      exam_question_head_title: this.GroupHeadersFormCtrl.examContent?.value,\r\n      exam_question_head_text: this.GroupHeadersFormCtrl.examHeader?.value,\r\n      exam: tempExam,\r\n    };\r\n\r\n    if (this.GroupHeadersForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addExamGroupHeader<IAddExamGroupHeaderModel, any>(ToAddExamGroupHeader)\r\n        .subscribe((headerResponse) => {\r\n          if (headerResponse) {\r\n            //  console.log('addExamGroupHeader', headerResponse);\r\n            this.getAllGroupHeaderByExamId();\r\n            //   this.msg.success(\"General.AddSuccessfully\");\r\n            let tempExcamGroupHeader = {\r\n              Id: headerResponse.exam_question_head_id,\r\n              group_name: this.GroupHeadersFormCtrl.examGroup?.value,\r\n              head_name: this.GroupHeadersFormCtrl.examHeader?.value,\r\n              question_title: this.GroupHeadersFormCtrl.examContent?.value,\r\n            };\r\n\r\n            //   this.GroupsHeadersList.push(tempExcamGroupHeader);\r\n\r\n            // console.log(\"this.GroupsHeadersList\", this.GroupsHeadersList);\r\n\r\n            this.GroupHeadersFormCtrl.examContent?.setValue(null);\r\n            this.spinner.hide();\r\n\r\n            this.onCloseDialog();\r\n            this.router.navigate(\r\n              [\r\n                `/dashboard/setup/course/structure-exam/${this.examId}/${tempExcamGroupHeader.Id}/${this.subId}`,\r\n              ],\r\n              {\r\n                queryParams: {\r\n                  fanctionId: this.functionId,\r\n                },\r\n              }\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      if (this.examId == 0) this.msg.error(\"General.FormNotValid\");\r\n    }\r\n  }\r\n\r\n  getExamHeadById(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.editGroupHeaderMode = true;\r\n    this.examGroupHeaderIdToEdit = examGroupHeader.id;\r\n    this.GroupHeadersFormCtrl.examGroup?.setValue(\r\n      examGroupHeader?.questionNumber\r\n    );\r\n    this.GroupHeadersFormCtrl.examContent?.setValue(\r\n      examGroupHeader?.question_title\r\n    );\r\n    this.GroupHeadersFormCtrl.examHeader?.setValue(\r\n      examGroupHeader?.questionType\r\n    );\r\n  }\r\n\r\n  editExamGroupHead() {\r\n    let toEdit: IEditExamGroupHeaderModel = {\r\n      exam_question_head_id: this.examGroupHeaderIdToEdit,\r\n      group: this.GroupHeadersFormCtrl.examGroup?.value,\r\n      head: this.GroupHeadersFormCtrl.examHeader?.value,\r\n      title: this.GroupHeadersFormCtrl.examContent?.value,\r\n    };\r\n\r\n    // console.log('toEdit', toEdit);\r\n    this.spinner.show();\r\n    this.examService\r\n      .editExamGroupHeader<IEditExamGroupHeaderModel, any>(toEdit)\r\n      .subscribe((editResponse) => {\r\n        if (editResponse) {\r\n          //   console.log('editResponse', editResponse);\r\n\r\n          let toReplace = this.dataSource.data.find(\r\n            (gh) => gh.id == this.examGroupHeaderIdToEdit\r\n          );\r\n\r\n          if (toReplace) {\r\n            toReplace.questionNumber = toEdit.group;\r\n            toReplace.questionType = toEdit.head;\r\n            toReplace.question_title =\r\n              this.GroupHeadersFormCtrl.examContent?.value;\r\n          }\r\n\r\n          this.editGroupHeaderMode = false;\r\n          this.GroupHeadersFormCtrl.examContent?.setValue(null);\r\n          this.msg.success(\"General.UpdateSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamGroupHead(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.spinner.show();\r\n    this.examService\r\n      .deleteExamGroupHeader(examGroupHeader.id)\r\n      .subscribe((deleteResponse: any) => {\r\n        // console.log('deleteResponse', deleteResponse);\r\n        if (deleteResponse.returnValue == 1) {\r\n          let todeleteIndex = this.dataSource.data.findIndex(\r\n            (gh) => gh == examGroupHeader\r\n          );\r\n\r\n          this.dataSource.data.splice(todeleteIndex, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"General.DeleteSuccessfully\");\r\n        } else this.msg.error(deleteResponse.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(examGroupHeader: IExamGroupHeaderModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: examGroupHeader.questionNumber,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeExamGroupHead(examGroupHeader);\r\n      });\r\n  }\r\n\r\n  addSubQuestionDialog(groupHeader: IExamGroupHeaderModel): void {\r\n    console.log(groupHeader);\r\n    this.dialog\r\n      .open(AddSubQuestionComponent, {\r\n        data: {\r\n          examId: this.examId,\r\n          examGroupHeaderId: groupHeader.id,\r\n          subjectId: this.subId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) {\r\n        }\r\n      });\r\n  }\r\n\r\n  addSubQuestion(examGroupHeaderId: number) {\r\n    this.examGroupHeaderId = examGroupHeaderId;\r\n    let obj: any = {\r\n      examGroupHeaderId: examGroupHeaderId,\r\n      subjectId: this.FormCtrl.subjectId?.value,\r\n      unitId: this.FormCtrl.unitId?.value,\r\n      lessonId: this.FormCtrl.lessionId?.value,\r\n    };\r\n  }\r\n\r\n  getAllExamTypes() {\r\n    this.examService\r\n      .getAllExamType<IExamTypeModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.examTypes = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectExamType() {\r\n    //  console.log('exam type: ', this.FormCtrl.examTypeId?.value);\r\n\r\n    if (this.FormCtrl.examTypeId?.value == 1) {\r\n      this.FormCtrl.unitId?.enable();\r\n      this.FormCtrl.lessionId?.enable();\r\n    } else if (this.FormCtrl.examTypeId?.value == 2) {\r\n      this.FormCtrl.unitId?.enable();\r\n      this.FormCtrl.lessionId?.disable();\r\n    } else {\r\n      this.FormCtrl.unitId?.disable();\r\n      this.FormCtrl.lessionId?.disable();\r\n    }\r\n  }\r\n\r\n  getAllCountieres() {\r\n    this.examService\r\n      .getAllCountries<ICountrieDropModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //console.log(\"COUNTIRES: \", response);\r\n          this.countries = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectCountry() {\r\n    // this.FormCtrl.stageId?.setValue(\"\");\r\n    // this.FormCtrl.educationYearId?.setValue(\"\");\r\n    // this.FormCtrl.subjectId?.setValue(\"\");\r\n    // this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.countryId?.value) {\r\n      //   console.log('SELECTED country: ', this.FormCtrl.countryId?.value);\r\n      this.examService\r\n        .getAllStages<IStageDropModel[]>(this.FormCtrl.countryId?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.stages = response;\r\n            //console.log(\"STAGES:\", response);\r\n            this.FormCtrl.stageId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.stageId?.disable();\r\n      this.FormCtrl.educationYearId?.disable();\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectStages() {\r\n    // console.log('onSelectStages: ', this.FormCtrl.stageId?.value);\r\n    this.FormCtrl.educationYearId?.setValue(\"\");\r\n    this.FormCtrl.subjectId?.setValue(\"\");\r\n    this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.stageId?.value) {\r\n      this.examService\r\n        .getAllEducationYears<IEducationYearDropModel[]>(\r\n          this.FormCtrl.stageId?.value\r\n        )\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.educationYears = response;\r\n            //console.log(\"YEARS:\", response);\r\n            this.FormCtrl.educationYearId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.educationYearId?.disable();\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectEducationYears() {\r\n    //   console.log('onSelectEducationYears: ', this.FormCtrl.educationYearId?.value);\r\n    this.FormCtrl.subjectId?.setValue(\"\");\r\n    this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.educationYearId?.value) {\r\n      this.examService\r\n        .getAllSubjects<ISubjectDropModel[]>(\r\n          this.FormCtrl.educationYearId?.value\r\n        )\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.subjects = response;\r\n            //console.log(\"SUBJECTS:\", response);\r\n            this.FormCtrl.subjectId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectSubjects() {\r\n    // console.log('onSelectSubjects: ', this.FormCtrl.subjectId?.value);\r\n    //   this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.subjectId?.value) {\r\n      forkJoin([\r\n        this.generalService.getTeacherBySubjectAndEduCompId(\r\n          this.EduCompId,\r\n          this.FormCtrl.subjectId?.value\r\n        ),\r\n        this.examService.getAllUnitsBySublectId<any[]>(\r\n          this.FormCtrl.subjectId?.value\r\n        ),\r\n      ]).subscribe((results: any) => {\r\n        this.teachers = results[0].teachers;\r\n        this.units = results[1];\r\n        this.FormCtrl.teacherUserId?.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectUnit() {\r\n    if (this.FormCtrl.unitId?.value != null) {\r\n      this.examService\r\n        .getAllLessonsByUnitId<any>(this.FormCtrl.unitId?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.lessions = response;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  examTypeValidator() {\r\n    let examTypeId = this.FormCtrl.examTypeId?.value;\r\n    if (examTypeId == 1) {\r\n      this.FormCtrl.unitId?.setValidators([Validators.required]);\r\n      this.FormCtrl.lessionId?.setValidators([Validators.required]);\r\n    } else if (examTypeId == 2) {\r\n      this.FormCtrl.unitId?.setValidators([Validators.required]);\r\n      this.FormCtrl.lessionId?.clearValidators();\r\n      this.FormCtrl.lessionId?.reset();\r\n    } else {\r\n      this.FormCtrl.unitId?.clearValidators();\r\n      this.FormCtrl.unitId?.reset();\r\n      this.FormCtrl.lessionId?.clearValidators();\r\n      this.FormCtrl.lessionId?.reset();\r\n    }\r\n    this.FormCtrl.unitId?.updateValueAndValidity();\r\n    this.FormCtrl.lessionId?.updateValueAndValidity();\r\n  }\r\n\r\n  RepeatableValidator() {\r\n    let CustomDiscount = this.FormCtrl.hasCustomDiscount?.value;\r\n    if (CustomDiscount == true) {\r\n      this.FormCtrl.repeatNumbers?.setValidators([Validators.required]);\r\n      this.FormCtrl.repeatingPrice?.setValidators([Validators.required]);\r\n    } else if (CustomDiscount == false) {\r\n      this.FormCtrl.repeatNumbers?.clearValidators();\r\n      this.FormCtrl.repeatingPrice?.clearValidators();\r\n      this.FormCtrl.repeatNumbers?.reset();\r\n      this.FormCtrl.repeatingPrice?.reset();\r\n    }\r\n    this.FormCtrl.repeatNumbers?.updateValueAndValidity();\r\n    this.FormCtrl.repeatingPrice?.updateValueAndValidity();\r\n  }\r\n\r\n  isMandatoryRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: \"labels.Yes\",\r\n      value: true,\r\n    },\r\n    {\r\n      label: \"noOptional\",\r\n      value: false,\r\n    },\r\n  ];\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- Add Exam -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n\r\n<!-- <h1 mat-dialog-title class=\"mb-1\">\r\n  <span *ngIf=\"examId == 0 && type == 3\">\r\n    {{ \"Navbar.newexam\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"examId == 0 && type == 5\">\r\n    {{ \"Navbar.newesurvay\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"examId > 0\">\r\n    <span *ngIf=\"type == 3\">{{ \"labels.EditExam\" | translate }}</span>\r\n    <span *ngIf=\"type == 5\">{{ \"labels.EditSurvey\" | translate }}</span>\r\n\r\n    - {{ exam_ar_name }}\r\n  </span> -->\r\n<!-- <a\r\n    mat-raised-button\r\n    routerLink=\"../\"\r\n    [queryParams]=\"{\r\n      functionId: functionId,\r\n      parentId: parentId\r\n    }\"\r\n    class=\"btn btn-warning bg-light-warning float-right\"\r\n  >\r\n    {{ \"General.Back\" | translate }}\r\n  </a> -->\r\n<!-- </h1> -->\r\n\r\n<p mat-dialog-title class=\"mb-2\">\r\n  <page-title\r\n    addTitle=\"course.AddExam\"\r\n    editTitle=\"labels.EditExam\"\r\n    [id]=\"examId\"\r\n  ></page-title>\r\n\r\n  <i\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"fas fa-times-circle closeIcon float-right\"\r\n  ></i>\r\n</p>\r\n<progress-bar [percentage]=\"100\" class=\"dark-blue\"></progress-bar>\r\n\r\n<mat-dialog-content class=\"mtop-30\">\r\n  <!-- <mat-tab-group mat-align-tabs=\"start\" class=\"no-margin-tab\">\r\n    <mat-tab label=\"{{ 'labels.Step1' | translate }}\"> -->\r\n  <!-- <mat-card-title>{{ \"labels.MainData\" | translate }}</mat-card-title> -->\r\n\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Country\" | translate }} </mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectCountry()\"\r\n                formControlName=\"countryId\"\r\n              >\r\n                <mat-option value=\"\">\r\n                  {{ \"labels.Country\" | translate }}\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let country of countries\"\r\n                  [value]=\"country.country_id\"\r\n                >\r\n                  {{ country.country_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.countryId?.invalid &&\r\n                  (FormCtrl.countryId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"myForm.FormCtrl.countryId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n      <!--\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Navbar.EducationalStage\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectStages()\"\r\n                formControlName=\"stageId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Navbar.EducationalStage\" | translate\r\n                }}</mat-option>\r\n                <mat-option *ngFor=\"let stage of stages\" [value]=\"stage.id\">\r\n                  {{ stage.stage_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.stageId?.invalid && (FormCtrl.stageId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"myForm.FormCtrl.stageId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.EducationalYear\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectEducationYears()\"\r\n                formControlName=\"educationYearId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"labels.EducationalYear\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let year of educationYears\"\r\n                  [value]=\"year.id\"\r\n                >\r\n                  {{ year.Educational_year_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.educationYearId?.invalid &&\r\n                  (FormCtrl.educationYearId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.educationYearId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.Subjects\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectSubjects()\"\r\n                formControlName=\"subjectId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Material.Subjects\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let sub of subjects\"\r\n                  [value]=\"sub.subject_id\"\r\n                >\r\n                  {{ sub.subject_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.subjectId?.invalid &&\r\n                  (FormCtrl.subjectId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.subjectId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n      <!--\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.Teacher\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectSubjects()\"\r\n                formControlName=\"teacherUserId\"\r\n              >\r\n                <mat-option>\r\n                  {{ \"Material.Teacher\" | translate }}\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let teacher of teachers\"\r\n                  [value]=\"teacher.teacherUserId\"\r\n                >\r\n                  {{ teacher.teacher_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.teacherUserId?.invalid &&\r\n                  (FormCtrl.teacherUserId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.teacherUserId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.ExamType\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectExamType(); examTypeValidator()\"\r\n                formControlName=\"examTypeId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Material.ExamType\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let type of examTypes\"\r\n                  [value]=\"type.exam_type_id\"\r\n                >\r\n                  {{ type.exam_ar_type_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.examTypeId?.invalid &&\r\n                  (FormCtrl.examTypeId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.examTypeId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectUnit()\"\r\n                formControlName=\"unitId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"labels.Unit\" | translate\r\n                }}</mat-option>\r\n                <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n                  {{ unit.unit_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.unitId?.invalid && (FormCtrl.unitId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.unitId?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n              <mat-select formControlName=\"lessionId\">\r\n                <mat-option value=\"\">{{\r\n                  \"labels.Lesson\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  [value]=\"lession.id\"\r\n                  *ngFor=\"let lession of lessions\"\r\n                >\r\n                  {{ lession.lesson_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.lessionId?.invalid &&\r\n                  (FormCtrl.lessionId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.lessionId?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.examName\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.ExamNm\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12 time-input\">\r\n        <app-input\r\n          [control]=\"FormCtrl.examDuration\"\r\n          [submitted]=\"submitted\"\r\n          label=\"Exam.examDuration\"\r\n          placeholder=\"hh:mm\"\r\n          materialIcon=\"access_time_filled\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!-- <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.examHours\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.ExamHours\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.examMinutes\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.ExamMinute\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div> -->\r\n\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.ExamPrice\" | translate }} </mat-label>\r\n              <input matInput type=\"number\" formControlName=\"examPrice\" />\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.examPrice?.invalid &&\r\n                  (FormCtrl.examPrice?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.examPrice?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </mat-label>\r\n              <input matInput type=\"number\" formControlName=\"discount\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"labels.DiscountType\" | translate }}\r\n              </mat-label>\r\n              <mat-select formControlName=\"discountType\">\r\n                <mat-option value=\"\"\r\n                  >{{ \"General.Choose\" | translate }}\r\n                </mat-option>\r\n                <mat-option value=\"1\">عام</mat-option>\r\n                <mat-option value=\"2\">خاص</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"FormCtrl.fromDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.FromDate\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"FormCtrl.toDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.ToDate\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.formHour\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.FromTime\"\r\n          type=\"time\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.toHours\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.ToTime\"\r\n          type=\"time\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!-- resualtDate -->\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label> {{ \"labels.ExamResultDate\" | translate }}</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"resualtDate\"\r\n                formControlName=\"resualtDate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"resualtDate\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #resualtDate></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.examResultTime\" | translate }}</mat-label>\r\n              <input matInput type=\"time\" formControlName=\"resualtTime\" />\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n      <!-- can Sell Individually -->\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.SellExamOnly\" | translate }}\r\n            </mat-label>\r\n            <mat-radio-group formControlName=\"canSellIndividually\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n      <!-- isRepeatable -->\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.RepeatedExam\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"isRepeatable\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button\r\n                  [value]=\"false\"\r\n                  (change)=\"RepeatableValidator()\"\r\n                >\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button\r\n                  [value]=\"true\"\r\n                  (change)=\"RepeatableValidator()\"\r\n                >\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n      <!-- send WhatsApp Msg -->\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"sendWhatsAppMsg\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n      <!-- Custom Discount -->\r\n      <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.CustomDiscount\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"hasCustomDiscount\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n      <!-- <ng-container *ngIf=\"FormCtrl.isRepeatable?.value == true\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.repeatNumbers\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"repeatNumbers\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.repeatNumbers?.invalid &&\r\n                    (FormCtrl.repeatNumbers?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.repeatNumbers?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.repeatNumbers?.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.repeatingPrice\" | translate }}</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  formControlName=\"repeatingPrice\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.repeatingPrice?.invalid &&\r\n                    (FormCtrl.repeatingPrice?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.repeatingPrice?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.repeatingPrice?.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </ng-container> -->\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.degreeToPass\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.passPercentage\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.order\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.Order\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12 mtop-15\">\r\n        <app-radio-button\r\n          [control]=\"FormCtrl.isMandatory\"\r\n          [radioList]=\"isMandatoryRadioList\"\r\n          label=\"isRequired\"\r\n        ></app-radio-button>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12 mtop-15\">\r\n        <button class=\"orange-btn radius-btn w-100\" (click)=\"onSubmit()\">\r\n          {{ (examId == 0 ? \"General.Create\" : \"General.Update\") | translate }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <!-- <mat-card-actions align=\"end\">\r\n    <button\r\n      mat-raised-button\r\n      (click)=\"onCloseDialog()\"\r\n      class=\"btn btn-warning bg-light-warning\"\r\n    >\r\n      {{ \"General.Close\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      (click)=\"onSubmit()\"\r\n      mat-raised-button\r\n      cdkFocusInitial\r\n      class=\"btn btn-info bg-light-info\"\r\n    >\r\n      <i class=\"fa fa-plus mr-1\" *ngIf=\"examId == 0\"></i>\r\n      {{ (examId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n    </button>\r\n  </mat-card-actions> -->\r\n  <!-- </mat-tab> -->\r\n\r\n  <!-- add-questions -->\r\n  <!-- <mat-tab label=\"{{ 'labels.Step2' | translate }}\">\r\n      <app-add-edit-sub-question\r\n        [examId]=\"examId\"\r\n        [examGroupHeaderId]=\"GroupsHeadersList[0]?.id || 0\"\r\n        [subjectId]=\"subId\"\r\n        (closeDialog)=\"onCloseDialog()\"\r\n      ></app-add-edit-sub-question>\r\n    </mat-tab>\r\n  </mat-tab-group> -->\r\n</mat-dialog-content>\r\n\r\n<!-- </mat-card>\r\n  </div>\r\n</div> -->\r\n\r\n<!-- START: ADD/EDIT EXAM GROUP AND HEADER -->\r\n<!-- <span>{{ \"labels.addSurveyGroups\" | translate }}</span> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>{{ \"labels.addGxamGroups\" | translate }}</span>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"GroupHeadersForm\" class=\"form-horizontal\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.َQuestionNumber\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examGroup\"\r\n                  [matAutocomplete]=\"autoExamGroup\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamGroup=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamGroups | async\"\r\n                    [value]=\"val.question_group_ar_name\"\r\n                  >\r\n                    {{ val.question_group_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.examGroup?.invalid &&\r\n                    (FormCtrl.examGroup?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.examGroup?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.QuestionHeader\" | translate }}</mat-label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examHeader\"\r\n                  [matAutocomplete]=\"autoExamHeader\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamHeader=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamHeaders | async\"\r\n                    [value]=\"val.question_head_ar_name\"\r\n                  >\r\n                    {{ val.question_head_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.examHeader?.invalid &&\r\n                    (FormCtrl.examHeader?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.examHeader?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{\r\n                  \"labels.َQuestionContent\" | translate\r\n                }}</mat-label>\r\n                <textarea\r\n                  matInput\r\n                  formControlName=\"examContent\"\r\n                  cols=\"20\"\r\n                ></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"examId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"\r\n            GroupsHeadersList.length > 0 && !editGroupHeaderMode && examId > 0\r\n          \"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onAddExamGroupHeader()\"\r\n        >\r\n          {{ \"labels.AddQuestion\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"editGroupHeaderMode\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"editExamGroupHead()\"\r\n        >\r\n          {{ \"labels.UpdateQuestion\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n\r\n<!-- <div class=\"row\" *ngIf=\"GroupsHeadersList.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.QuestionsGroup\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"mat-elevation-z8 f-w\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"#\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n                  <td mat-cell *matCellDef=\"let i = index\">\r\n                    {{ i + 1 }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"questionNumber\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionNumber\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionNumber }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"questionType\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.QuestionHeader\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionType }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"question_title\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionContent\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.question_title }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    actions\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let groupHeader\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'EditGroup'\"\r\n                        (click)=\"getExamHeadById(groupHeader)\"\r\n                        class=\"success p-0\"\r\n                        matTooltip=\"Edit Group\"\r\n                      >\r\n                        <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'DeleteGroup'\"\r\n                        (click)=\"openDeleateDialog(groupHeader)\"\r\n                        class=\"danger p-0\"\r\n                        matTooltip=\"Delete Group\"\r\n                      >\r\n                        <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'addSubQuestion'\"\r\n                        (click)=\"addSubQuestionDialog(groupHeader)\"\r\n                        class=\"info p-0\"\r\n                        matTooltip=\"Add sub question\"\r\n                      >\r\n                        <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                  mat-row\r\n                  *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                  <td class=\"mat-cell\" colspan=\"4\">\r\n                    No data matching the filter \"{{ input.value }}\"\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n\r\n              <mat-paginator\r\n                [pageSizeOptions]=\"[10]\"\r\n                showFirstLastButtons\r\n                aria-label=\"Select page of users\"\r\n              >\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n","import { startWith } from \"rxjs/operators\";\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  IAddEditQuestionMcqModel,\r\n  IAddedTextExamResponse,\r\n  IMcqChoices,\r\n  IQuestionDetailsForEditModel,\r\n  IQuestionForGridModel,\r\n  examQuestionImage,\r\n} from \"app/admin/models/admin/AddEditQuestionModel\";\r\nimport { ILessionModel, IUnitModel } from \"app/admin/models/admin/exam\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { SvgManager } from \"app/shared/data/svg-manager\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { SaveExamDialogComponent } from \"../save-exam-dialog/save-exam-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-add-questions-index\",\r\n  templateUrl: \"./add-questions-index.component.html\",\r\n  styleUrls: [\"./add-questions-index.component.scss\"],\r\n})\r\nexport class AddQuestionsIndexComponent implements OnInit, AfterViewInit {\r\n  examId: number;\r\n  examGroupHeaderId: number = 0;\r\n  subjectId: number = 0;\r\n\r\n  unitId: number = 0;\r\n  lessonId: number = 0;\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n\r\n  questionsInGrid: IQuestionForGridModel[] = [];\r\n\r\n  questionId: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  educationCompanyId: any;\r\n  oneIsCorrect: boolean = false;\r\n  twoIsCorrect: boolean = false;\r\n  threeIsCorrect: boolean = false;\r\n  fourIsCorrect: boolean = false;\r\n  questionFile: any = null;\r\n  answerOneFile: any = null;\r\n  answerTwoFile: any = null;\r\n  answerThreeFile: any = null;\r\n  answerFourFile: any = null;\r\n  perfectAnswerAttach_preview: any = null;\r\n\r\n  functionId: number;\r\n\r\n  selectedQuesIndex: number = 0;\r\n  currentQuestionToEdit: IQuestionDetailsForEditModel;\r\n  changeCurrentCorrectAnswer: boolean;\r\n  notSavedQuestionData;\r\n\r\n  svgManager = new SvgManager();\r\n\r\n  @ViewChild(\"editor\") editor: ElementRef;\r\n  editorWidth: number = 0;\r\n  editorFooterWidth: number = 0;\r\n\r\n  constructor(\r\n    private ar: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private examService: ExamsService,\r\n    public authserv: AuthService,\r\n    public toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    public uploadFileService: UploadFileService,\r\n    public languageService: LanguageService,\r\n    private router: Router,\r\n    private dialog: MatDialog\r\n  ) {\r\n    ar.paramMap.subscribe((params) => {\r\n      this.examId = Number(params.get(\"examId\"));\r\n      this.examGroupHeaderId = Number(params.get(\"examGroupHeaderId\"));\r\n      this.subjectId = Number(params.get(\"subjectId\"));\r\n      if (this.examGroupHeaderId != 0) this.getAllQuestionsByHeadId();\r\n      // console.log(this.examId, this.examGroupHeaderId, this.subjectId);\r\n    });\r\n\r\n    this.ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.getEditorWidth();\r\n    }, 3000);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      mainQuestion: [null],\r\n      questionTypeId: [2, Validators.required],\r\n      questionImage: [null],\r\n      remove_image: [false],\r\n      // unitId: [null],\r\n      // lessionId: [null],\r\n      exam_question_text: [null],\r\n      questionPerfectAnswer: [null],\r\n      perfect_answer_attach: [null],\r\n      questionMark: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      answerOneId: [null],\r\n      answerOne: [null],\r\n      answerOneIsCorrect: [null],\r\n      answerOneImage: [null],\r\n      answerTwoId: [null],\r\n      answerTwo: [null],\r\n      answerTwoIsCorrect: [null],\r\n      answerTwoImage: [null],\r\n      answerThreeId: [null],\r\n      answerThree: [null],\r\n      answerThreeIsCorrect: [null],\r\n      answerThreeImage: [null],\r\n      answerFourId: [null],\r\n      answerFour: [null],\r\n      answerFourIsCorrect: [null],\r\n      answerFourImage: [null],\r\n      answerOneRemove_image: [false],\r\n      answerTwoRemove_image: [false],\r\n      answerThreeRemove_image: [false],\r\n      answerFourRemove_image: [false],\r\n    });\r\n    //remove_image: d.remove_image,\r\n    this.educationCompanyId = this.authserv.getEduCompId();\r\n    this.questionTypeValidation();\r\n  }\r\n\r\n  // ngOnChanges(changes: SimpleChanges): void {\r\n  //   if (changes.examGroupHeaderId?.currentValue > 0)\r\n  //     this.getAllQuestionsByHeadId();\r\n  // }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //get all question for this header\r\n  getAllQuestionsByHeadId(status: number = 0) {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getAllQuestionsByHeadId<IQuestionForGridModel[]>(this.examGroupHeaderId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"getAllQuestionsByHeadId\", response);\r\n          this.questionsInGrid = [];\r\n          response.map(\r\n            (ques) =>\r\n              (ques.correctIndex = ques.AnswersIds.findIndex(\r\n                (answerId) => answerId == ques.CorrectAnswerId\r\n              ))\r\n          );\r\n          this.questionsInGrid = response;\r\n          if (this.questionsInGrid.length == 0 /* || status == 0 */) {\r\n            this.pushNewQuestion();\r\n          } else if (this.questionsInGrid.length > 0 && status == 0) {\r\n            this.questionId = this.questionsInGrid[0].ExamQuestId;\r\n            this.getQuestionForEditByID(this.questionId);\r\n          }\r\n          this.handleStatusAfterSubmit(status);\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  questionTypeValidation() {\r\n    if (this.FormCtrl.questionTypeId?.value === 1) {\r\n      // console.log(\"PerfectAnswer is required\");\r\n      // this.FormCtrl.questionPerfectAnswer?.setValidators(Validators.required);\r\n    } else {\r\n      // console.log(\"PerfectAnswer is not required\");\r\n      this.FormCtrl.questionPerfectAnswer?.clearAsyncValidators();\r\n      this.FormCtrl.questionPerfectAnswer?.reset();\r\n    }\r\n    this.FormCtrl.questionPerfectAnswer?.updateValueAndValidity();\r\n  }\r\n\r\n  // status = 0 > save only || status = 1 > save then go to prev ques\r\n  // status = 2 > save then go to next ques || status = 3 >> go to last question (not saved)\r\n  // status = 4 > save then push new question || status = 5 > save then return to structure page\r\n  // status = 6 > save then put data of unsaved question in form\r\n  // status = 7 > save then push unsaved question in the list and get data of new selected question (old question)\r\n  onSubmit(status: number = 0, quesIdToSelect: number = 0) {\r\n    this.submitted = true;\r\n    // if (this.FormCtrl.questionTypeId?.value == 1) {\r\n    //   // مقالي\r\n\r\n    //   let image: examQuestionImage = this.questionFile || null;\r\n    //   // let image: examQuestionImage = this.questionFile || null {\r\n    //   //   FileAsBase64: this.questionFile.FileAsBase64 || null,\r\n    //   //   name: this.questionFile.name,\r\n    //   //   size: this.questionFile.size,\r\n    //   //   type: this.questionFile.type,\r\n    //   // };\r\n    //   let questionImagePath = this.FormCtrl.questionImage;\r\n\r\n    //   let toAddEdit: IAddEditQuestionTextModel = {\r\n    //     exam_question_main_question: this.FormCtrl.mainQuestion?.value,\r\n    //     exam_question_mark: this.FormCtrl.questionMark?.value,\r\n    //     exam_question_perfect_answer:\r\n    //       this.FormCtrl.questionPerfectAnswer?.value,\r\n    //     //   perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n    //     exam_question_text: this.FormCtrl.exam_question_text?.value,\r\n    //     exam_question_type_id: this.FormCtrl.questionTypeId?.value,\r\n    //     exam_selected_question_head_id: this.examGroupHeaderId,\r\n    //     exam_selected_subject_id: this.subjectId,\r\n    //     exam_question_image: image,\r\n    //     remove_image: this.FormCtrl.remove_image?.value,\r\n    //     exam_question_id: this.questionId,\r\n    //   };\r\n    //   console.log(\"toAddEdit_Text_question=> \", toAddEdit);\r\n    //   if (\r\n    //     !this.FormCtrl.exam_question_text?.value &&\r\n    //     image == null &&\r\n    //     questionImagePath == null\r\n    //   ) {\r\n    //     this.toastr.warning(\"Exam.QuestionMsgError\");\r\n    //     return;\r\n    //   } else {\r\n    //     if (this.questionId > 0) {\r\n    //       this.editTextQuestion(toAddEdit);\r\n    //     } else {\r\n    //       this.addTextQuestion(toAddEdit);\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    // MCQ\r\n    if (this.FormCtrl.questionTypeId?.value == 2) {\r\n      let image: examQuestionImage = this.questionFile || null;\r\n      let questionImagePath = this.FormCtrl.questionImage.value;\r\n      // let image: examQuestionImage = {\r\n      //   FileAsBase64: this.questionFile.FileAsBase64 || null,\r\n      //   name: this.questionFile.name,\r\n      //   size: this.questionFile.size,\r\n      //   type: this.questionFile.type,\r\n      // };\r\n\r\n      let imageOne: examQuestionImage = this.answerOneFile || null;\r\n      // let imageOne: examQuestionImage = {\r\n      //   FileAsBase64: this.answerOneFile.FileAsBase64 || null,\r\n      //   name: this.answerOneFile.name,\r\n      //   size: this.answerOneFile.size,\r\n      //   type: this.answerOneFile.type,\r\n      // };\r\n\r\n      let choice1: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerOneId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerOne?.value,\r\n        is_correct:\r\n          this.FormCtrl.answerOneIsCorrect.value === 0 ||\r\n          this.FormCtrl.answerOneIsCorrect.value\r\n            ? true\r\n            : false,\r\n        choice_image: imageOne,\r\n        remove_image: this.FormCtrl.answerOneRemove_image?.value,\r\n        path: this.FormCtrl.answerOneImage?.value,\r\n      };\r\n\r\n      let imageTwo: examQuestionImage = this.answerTwoFile || null;\r\n      // let imageTwo: examQuestionImage = {\r\n      //   FileAsBase64: this.answerTwoFile.FileAsBase64 || null,\r\n      //   name: this.answerTwoFile.name,\r\n      //   size: this.answerTwoFile.size,\r\n      //   type: this.answerTwoFile.type,\r\n      // };\r\n\r\n      let choice2: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerTwoId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerTwo?.value,\r\n        is_correct: this.FormCtrl.answerTwoIsCorrect?.value ? true : false,\r\n        choice_image: imageTwo,\r\n        remove_image: this.FormCtrl.answerTwoRemove_image?.value,\r\n        path: this.FormCtrl.answerTwoImage?.value,\r\n      };\r\n\r\n      let imageThree: examQuestionImage = this.answerThreeFile || null;\r\n      // let imageThree: examQuestionImage = {\r\n      //   FileAsBase64: this.answerThreeFile.FileAsBase64 || null,\r\n      //   name: this.answerThreeFile.name,\r\n      //   size: this.answerThreeFile.size,\r\n      //   type: this.answerThreeFile.type,\r\n      // };\r\n\r\n      let choice3: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerThreeId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerThree?.value,\r\n        is_correct: this.FormCtrl.answerThreeIsCorrect?.value ? true : false,\r\n        choice_image: imageThree,\r\n        remove_image: this.FormCtrl.answerThreeRemove_image?.value,\r\n        path: this.FormCtrl.answerThreeImage?.value,\r\n      };\r\n\r\n      let imageFour: examQuestionImage = this.answerFourFile || null;\r\n      // let imageFour: examQuestionImage = {\r\n      //   FileAsBase64: this.answerFourFile.FileAsBase64 || null,\r\n      //   name: this.answerFourFile.name,\r\n      //   size: this.answerFourFile.size,\r\n      //   type: this.answerFourFile.type,\r\n      // };\r\n\r\n      let choice4: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerFourId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerFour?.value,\r\n        is_correct: this.FormCtrl.answerFourIsCorrect?.value ? true : false,\r\n        choice_image: imageFour,\r\n        remove_image: this.FormCtrl.answerFourRemove_image?.value,\r\n        path: this.FormCtrl.answerFourImage?.value,\r\n      };\r\n\r\n      let toAddEdit: IAddEditQuestionMcqModel = {\r\n        exam_question_main_question: this.FormCtrl.mainQuestion?.value,\r\n        exam_question_mark: this.FormCtrl.questionMark?.value,\r\n        exam_question_perfect_answer:\r\n          this.FormCtrl.questionPerfectAnswer?.value,\r\n        //perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n        exam_question_text: this.FormCtrl.exam_question_text?.value,\r\n        exam_question_type_id: this.FormCtrl.questionTypeId?.value,\r\n        exam_selected_question_head_id: this.examGroupHeaderId,\r\n        exam_selected_subject_id: this.subjectId,\r\n        exam_question_image: image,\r\n        remove_image: this.FormCtrl.remove_image?.value,\r\n        exam_question_id: this.questionId,\r\n        mcq_choices: [choice1, choice2, choice3, choice4],\r\n      };\r\n\r\n      // console.log(\"toAddEdit_mcq_question=> \", toAddEdit);\r\n      // if no question Text or img\r\n      if (\r\n        (toAddEdit.exam_question_text === null ||\r\n          toAddEdit.exam_question_text == \"\" ||\r\n          toAddEdit.exam_question_text == undefined) &&\r\n        toAddEdit.exam_question_image === null &&\r\n        questionImagePath === null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if no correct answer\r\n      // if (\r\n      //   !choice1.is_correct &&\r\n      //   !choice2.is_correct &&\r\n      //   !choice3.is_correct &&\r\n      //   !choice4.is_correct\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.MustChooseCorrectAnswer\");\r\n      //   return;\r\n      // }\r\n      let choices: IMcqChoices[] = [choice1, choice2, choice3, choice4];\r\n      let correctChoiceDone: Boolean = false;\r\n      choices.forEach((choice) => {\r\n        if (\r\n          choice.is_correct &&\r\n          (choice.choice_text || choice.choice_image || choice.path)\r\n        )\r\n          correctChoiceDone = true;\r\n      });\r\n      if (!correctChoiceDone) {\r\n        this.toastr.warning(\"Exam.MustChooseCorrectAnswer\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 1 no text or img\r\n      if (\r\n        (choice1.choice_text === null ||\r\n          choice1.choice_text == \"\" ||\r\n          choice1.choice_text == undefined) &&\r\n        choice1.choice_image === null &&\r\n        choice1.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionOneMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 2 no text or img\r\n      if (\r\n        (choice2.choice_text === null ||\r\n          choice2.choice_text == \"\" ||\r\n          choice2.choice_text == undefined) &&\r\n        choice2.choice_image === null &&\r\n        choice2.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionTwoMsgError\");\r\n        return;\r\n      } else {\r\n        if (this.questionId > 0) {\r\n          this.editMcqQuestion(toAddEdit, status, quesIdToSelect);\r\n        } else {\r\n          this.addMcqQuestion(toAddEdit, status);\r\n        }\r\n      }\r\n\r\n      // if mcq 3 no text or img\r\n      // if (\r\n      //   choice3.choice_text === null &&\r\n      //   choice3.choice_image === null &&\r\n      //   choice3.path == null\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.QuestionThreeMsgError\");\r\n      //   return;\r\n      // }\r\n\r\n      // if mcq 4 no text or img\r\n      // if (\r\n      //   choice4.choice_text === null &&\r\n      //   choice4.choice_image === null &&\r\n      //   choice4.path == null\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.QuestionFourMsgError\");\r\n      //   return;\r\n      // } else {\r\n      //   if (this.questionId > 0) {\r\n      //     this.editMcqQuestion(toAddEdit);\r\n      //   } else {\r\n      //     this.addMcqQuestion(toAddEdit);\r\n      //   }\r\n      // }\r\n    }\r\n  }\r\n\r\n  // addTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n  //   //  console.log('on add ', toAddEdit);\r\n  //   this.spinner.show();\r\n  //   this.examService\r\n  //     .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n  //     .subscribe((response: any) => {\r\n  //       // console.log('respooooooonse', response);\r\n\r\n  //       if (response.returnValue == 200) {\r\n  //         this.getAllQuestionsByHeadId();\r\n\r\n  //         this.FormCtrl.mainQuestion?.setValue(null);\r\n  //         this.FormCtrl.questionMark?.setValue(null);\r\n  //         this.FormCtrl.questionTypeId?.setValue(null);\r\n  //         this.FormCtrl.questionImage?.setValue(null);\r\n  //         this.FormCtrl.exam_question_text?.setValue(null);\r\n  //         this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n  //         this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n  //         this.FormCtrl.unitId?.setValue(null);\r\n  //         this.FormCtrl.lessonId?.setValue(null);\r\n  //         this.myForm.reset();\r\n  //         this.resetFileInputs();\r\n  //       } else {\r\n  //         this.toastr.error(response.returnString);\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  // editTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n  //   //  console.log('tooEdiiiiiiit', toAddEdit);\r\n  //   this.spinner.show();\r\n  //   this.examService\r\n  //     .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n  //     .subscribe((response) => {\r\n  //       //  console.log('ediiiiiitResponse', response);\r\n  //       if (response) {\r\n  //         let toEdit = this.questionsInGrid.find(\r\n  //           (q: any) => q.Id == this.questionId\r\n  //         );\r\n\r\n  //         if (toEdit) {\r\n  //           toEdit.Text = this.FormCtrl.exam_question_text?.value;\r\n  //           toEdit.QuestionTypeAr = \"مقال\";\r\n  //           toEdit.Image = this.FormCtrl.questionImage?.value;\r\n  //         }\r\n\r\n  //         this.FormCtrl.mainQuestion?.setValue(null);\r\n  //         this.FormCtrl.questionMark?.setValue(null);\r\n  //         this.FormCtrl.questionTypeId?.setValue(null);\r\n  //         this.FormCtrl.questionImage?.setValue(null);\r\n  //         this.FormCtrl.exam_question_text?.setValue(null);\r\n  //         this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n  //         this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n\r\n  //         this.FormCtrl.unitId?.setValue(null);\r\n  //         this.FormCtrl.lessonId?.setValue(null);\r\n\r\n  //         this.myForm.reset();\r\n  //         this.resetFileInputs();\r\n\r\n  //         this.questionId = 0; // return to add mode\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  addMcqQuestion(toAddEdit: IAddEditQuestionMcqModel, status: number) {\r\n    // console.log('on add ', toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n        .subscribe((response: any) => {\r\n          // console.log('respooooooonse', response);\r\n\r\n          if (response.returnValue == 200) {\r\n            this.getAllQuestionsByHeadId(status);\r\n\r\n            this.FormCtrl.mainQuestion?.setValue(null);\r\n            this.FormCtrl.questionMark?.setValue(null);\r\n            this.FormCtrl.questionTypeId?.setValue(null);\r\n            this.FormCtrl.questionImage?.setValue(null);\r\n            this.FormCtrl.exam_question_text?.setValue(null);\r\n            this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n            this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n            // this.FormCtrl.unitId?.setValue(null);\r\n            // this.FormCtrl.lessonId?.setValue(null);\r\n\r\n            this.clearForm();\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            this.toastr.error(response.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  editMcqQuestion(\r\n    toAddEdit: IAddEditQuestionMcqModel,\r\n    status: number,\r\n    quesIdToSelect: number\r\n  ) {\r\n    //console.log(\"editMcqQuestion\", toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n        .subscribe((response) => {\r\n          //  console.log(\"editMcqQuestion\", response);\r\n          if (response) {\r\n            this.questionId = quesIdToSelect;\r\n            this.getAllQuestionsByHeadId(status);\r\n            this.FormCtrl.mainQuestion?.setValue(null);\r\n            this.FormCtrl.questionMark?.setValue(null);\r\n            this.FormCtrl.questionTypeId?.setValue(null);\r\n            this.FormCtrl.questionImage?.setValue(null);\r\n            this.FormCtrl.exam_question_text?.setValue(null);\r\n            this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n            this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n            this.oneIsCorrect = false;\r\n            this.twoIsCorrect = false;\r\n            this.threeIsCorrect = false;\r\n            this.fourIsCorrect = false;\r\n            // this.FormCtrl.unitId?.setValue(null);\r\n            // this.FormCtrl.lessonId?.setValue(null);\r\n\r\n            this.clearForm();\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  handleStatusAfterSubmit(status: number) {\r\n    // if there is non saved question save it\r\n    if (this.notSavedQuestionData && [1, 2, 6, 7].includes(status)) {\r\n      let newData: IQuestionForGridModel = {\r\n        ExamQuestId: 0,\r\n        mark: this.notSavedQuestionData.questionMark,\r\n        Text: this.notSavedQuestionData.exam_question_text,\r\n        ChoiceCounts: this.noOfInsertedAnswers(false),\r\n        Image: this.notSavedQuestionData.questionImage,\r\n        correctIndex: this.getCorrectAnswerIndexFromForm(false),\r\n      };\r\n      this.questionsInGrid.push(newData);\r\n    }\r\n\r\n    if (status == 1) this.goToPrevQuestion();\r\n    else if (status == 2) this.goToNextQuestion();\r\n    else if (status == 3) {\r\n      this.pushNewQuestion();\r\n      this.goToNotSavedQuestion(true);\r\n    } else if (status == 4) {\r\n      this.pushNewQuestion();\r\n      this.currentQuestionToEdit = null;\r\n      this.questionId = 0;\r\n      this.clearForm();\r\n    } else if (status == 5)\r\n      this.router.navigate(\r\n        [`/dashboard/setup/course/course-structure/${this.subjectId}`],\r\n        {\r\n          queryParams: {\r\n            functionId: this.functionId,\r\n          },\r\n        }\r\n      );\r\n    else if (status == 6) {\r\n      this.myForm.patchValue(this.notSavedQuestionData);\r\n      this.displayQuestionImageInEditor();\r\n      this.currentQuestionToEdit = null;\r\n    } else if (status == 7) this.getQuestionForEditByID(this.questionId);\r\n  }\r\n\r\n  getQuestionForEditByID(questionId: number) {\r\n    //  console.log('questionIddddddddddddddd', questionId);\r\n    this.spinner.show();\r\n    this.examService\r\n      .getQuestionForEditByID<IQuestionDetailsForEditModel>(questionId)\r\n      .subscribe((response) => {\r\n        // console.log(\"getQuestionForEditByID\", response);\r\n        if (response) {\r\n          this.currentQuestionToEdit = response;\r\n          this.changeCurrentCorrectAnswer = false;\r\n          this.FormCtrl.mainQuestion?.setValue(response.main_question);\r\n          this.FormCtrl.questionMark?.setValue(response.mark);\r\n          this.FormCtrl.exam_question_text?.setValue(response.question_text);\r\n          this.FormCtrl.questionImage?.setValue(\r\n            response?.attach_path != null\r\n              ? this.uploadFileService.previewPicture(response?.attach_path)\r\n              : null\r\n          );\r\n          this.displayQuestionImageInEditor();\r\n          // this.questionFile.FileAsBase64 = response.attach_path;\r\n          this.FormCtrl.questionTypeId?.setValue(response.question_type_id);\r\n          this.questionId = questionId;\r\n\r\n          // this.FormCtrl.questionPerfectAnswer?.setValue(\r\n          //   response.perfect_answer\r\n          // );\r\n          // this.FormCtrl.perfect_answer_attach?.setValue(\r\n          //   `mozakretyapi${response?.prefect_answer_attach_path}`\r\n          // );\r\n\r\n          if (response.question_type_id == 2) {\r\n            this.FormCtrl.answerOneId?.setValue(response.MCQ_Choices[0]?.Id);\r\n            this.FormCtrl.answerOne?.setValue(response.MCQ_Choices[0]?.Text);\r\n            this.FormCtrl.answerOneImage?.setValue(\r\n              response?.MCQ_Choices[0]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[0]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            // this.FormCtrl.answerOneImage?.setValue(response.MCQ_Choices[0].Image);\r\n            //  this.answerOneFile.FileAsBase64 = response.MCQ_Choices[0].Image;\r\n            this.FormCtrl.answerOneIsCorrect?.setValue(\r\n              response.MCQ_Choices[0]?.Is_Correct\r\n            );\r\n            this.oneIsCorrect = response.MCQ_Choices[0]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerTwoId?.setValue(response.MCQ_Choices[1]?.Id);\r\n            this.FormCtrl.answerTwo?.setValue(response.MCQ_Choices[1]?.Text);\r\n            this.FormCtrl.answerTwoImage?.setValue(\r\n              response?.MCQ_Choices[1]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[1]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            //  this.FormCtrl.answerTwoImage?.setValue(response.MCQ_Choices[1].Image);\r\n            // this.answerTwoFile.FileAsBase64 = response.MCQ_Choices[1].Image;\r\n            this.FormCtrl.answerTwoIsCorrect?.setValue(\r\n              response.MCQ_Choices[1]?.Is_Correct\r\n            );\r\n            this.twoIsCorrect = response.MCQ_Choices[1]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerThreeId?.setValue(response.MCQ_Choices[2]?.Id);\r\n            this.FormCtrl.answerThree?.setValue(response.MCQ_Choices[2]?.Text);\r\n            this.FormCtrl.answerThreeImage?.setValue(\r\n              response?.MCQ_Choices[2]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[2]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            // this.FormCtrl.answerThreeImage?.setValue(response.MCQ_Choices[2].Image);\r\n            //  this.answerThreeFile.FileAsBase64 = response.MCQ_Choices[2].Image;\r\n            this.FormCtrl.answerThreeIsCorrect?.setValue(\r\n              response.MCQ_Choices[2]?.Is_Correct\r\n            );\r\n            this.threeIsCorrect = response.MCQ_Choices[2]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerFourId?.setValue(response.MCQ_Choices[3]?.Id);\r\n            this.FormCtrl.answerFour?.setValue(response.MCQ_Choices[3]?.Text);\r\n            this.FormCtrl.answerFourImage?.setValue(\r\n              response?.MCQ_Choices[3]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[3]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            //  this.FormCtrl.answerFourImage?.setValue(response.MCQ_Choices[3].Image);\r\n            //  this.answerFourFile.FileAsBase64 = response.MCQ_Choices[3].Image;\r\n            this.FormCtrl.answerFourIsCorrect?.setValue(\r\n              response.MCQ_Choices[3]?.Is_Correct\r\n            );\r\n            this.fourIsCorrect = response.MCQ_Choices[3]?.Is_Correct;\r\n          }\r\n\r\n          // console.log(\"answer 1\", this.oneIsCorrect);\r\n          // console.log(\"answer 2\", this.twoIsCorrect);\r\n          // console.log(\"answer 3\", this.threeIsCorrect);\r\n          // console.log(\"answer 4\", this.fourIsCorrect);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamQuestion(questionId: number) {\r\n    let confirmed = confirm(\"هل انت متأكد من الحذف\");\r\n    // console.log('questionId', questionId);\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .deleteExamQuestion<any>(questionId)\r\n        .subscribe((response) => {\r\n          // console.log('deleteResponse', response);\r\n          if (response.returnString === \"Done\") {\r\n            let toDeleteIndex = this.questionsInGrid.findIndex(\r\n              (q: any) => q.Id == questionId\r\n            );\r\n            this.questionsInGrid.splice(toDeleteIndex, 1);\r\n          } else this.toastr.info(response.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  importFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.FormCtrl.questionImage.setValue(file.FileAsBase64);\r\n        this.questionFile = file;\r\n        this.displayQuestionImageInEditor();\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  displayQuestionImageInEditor() {\r\n    this.removeEditorImg();\r\n\r\n    if (this.FormCtrl.questionImage.value) {\r\n      const img = document.createElement(\"img\");\r\n      img.src = this.FormCtrl.questionImage.value;\r\n      img.alt = \"img\";\r\n      img.style.maxWidth = \"220px\";\r\n      img.style.height = \"160px\";\r\n      img.style.borderRadius = \"10px\";\r\n      img.style.margin = \"16px\";\r\n      img.id = \"question-editor-img\";\r\n\r\n      const toolbarContainer = document.querySelector(\".ql-toolbar\");\r\n      if (toolbarContainer) {\r\n        toolbarContainer.parentNode.insertBefore(img, toolbarContainer);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeEditorImg() {\r\n    let prevImg = document.getElementById(\"question-editor-img\");\r\n    if (prevImg) prevImg.remove();\r\n  }\r\n\r\n  importOneFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerOneFile = file;\r\n        this.FormCtrl.answerOneImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importTwoFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerTwoFile = file;\r\n        this.FormCtrl.answerTwoImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importThreeFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerThreeFile = file;\r\n        this.FormCtrl.answerThreeImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importFourFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerFourFile = file;\r\n        this.FormCtrl.answerFourImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  // perfectAnswerAttach(event: any) {\r\n  //   this.uploadFileService.uploadFile(event).then((file) => {\r\n  //     setTimeout(() => {\r\n  //       this.perfectAnswerAttach_preview = file;\r\n  //       this.FormCtrl.perfect_answer_attach.setValue(file);\r\n  //     }, 100);\r\n  //   });\r\n  // }\r\n\r\n  // getAllUnitsBySublectId() {\r\n  //   this.examService\r\n  //     .getAllUnitsBySublectId<any[]>(this.subjectId)\r\n  //     .subscribe((results) => {\r\n  //       this.units = results;\r\n  //       // console.log('this.units', this.units);\r\n  //     });\r\n  // }\r\n\r\n  // getAllLessonsByUnitId() {\r\n  //   this.examService\r\n  //     .getAllLessonsByUnitId<any>(this.FormCtrl.unitId?.value)\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         this.lessions = response;\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  onSelectCorrect(answerNumber: number) {\r\n    this.changeCurrentCorrectAnswer = true;\r\n    // console.log(\"answer is Correct\", answerNumber);\r\n    if (answerNumber === 0) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(true);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 1) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(true);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 2) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(true);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 3) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(true);\r\n    }\r\n  }\r\n\r\n  resetFileInputs() {\r\n    const FileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n    FileInputs.forEach((input: any) => {\r\n      input.value = null;\r\n    });\r\n    this.questionFile = null;\r\n    this.answerOneFile = null;\r\n    this.answerTwoFile = null;\r\n    this.answerThreeFile = null;\r\n    this.answerFourFile = null;\r\n  }\r\n  removeQuestionImg() {\r\n    this.FormCtrl.remove_image.setValue(true);\r\n    this.FormCtrl.questionImage.setValue(null);\r\n    this.questionFile = null;\r\n  }\r\n\r\n  answerOneRemove_image() {\r\n    this.FormCtrl.answerOneRemove_image.setValue(true);\r\n    this.FormCtrl.answerOneImage.setValue(null);\r\n    this.answerOneFile = null;\r\n  }\r\n\r\n  answerTwoRemove_image() {\r\n    this.FormCtrl.answerTwoRemove_image.setValue(true);\r\n    this.FormCtrl.answerTwoImage.setValue(null);\r\n    this.answerTwoFile = null;\r\n  }\r\n\r\n  answerThreeRemove_image() {\r\n    this.FormCtrl.answerThreeRemove_image.setValue(true);\r\n    this.FormCtrl.answerThreeImage.setValue(null);\r\n    this.FormCtrl.answerThreeFile = null;\r\n  }\r\n\r\n  answerFourRemove_image() {\r\n    this.FormCtrl.answerFourRemove_image.setValue(true);\r\n    this.FormCtrl.answerFourImage.setValue(null);\r\n    this.answerFourFile = null;\r\n  }\r\n\r\n  incrementMark() {\r\n    let newMark = Number(this.FormCtrl.questionMark.value) + 1;\r\n    this.FormCtrl.questionMark.setValue(!newMark ? 1 : newMark);\r\n  }\r\n\r\n  decrementMark() {\r\n    let newMark = Number(this.FormCtrl.questionMark.value) - 1;\r\n    this.FormCtrl.questionMark.setValue(newMark <= 0 ? 1 : newMark);\r\n  }\r\n\r\n  noOfInsertedAnswers(fromForm: boolean = true): number {\r\n    let no = 0;\r\n    if (fromForm) {\r\n      if (this.FormCtrl.answerOne?.value || this.FormCtrl.answerOneImage.value)\r\n        no++;\r\n      if (this.FormCtrl.answerTwo?.value || this.FormCtrl.answerTwoImage.value)\r\n        no++;\r\n      if (\r\n        this.FormCtrl.answerThree?.value ||\r\n        this.FormCtrl.answerThreeImage.value\r\n      )\r\n        no++;\r\n      if (\r\n        this.FormCtrl.answerFour?.value ||\r\n        this.FormCtrl.answerFourImage.value\r\n      )\r\n        no++;\r\n    } else {\r\n      if (\r\n        this.notSavedQuestionData.answerOne ||\r\n        this.notSavedQuestionData.answerOneImage\r\n      )\r\n        no++;\r\n      if (\r\n        this.notSavedQuestionData.answerTwo ||\r\n        this.notSavedQuestionData.answerTwoImage\r\n      )\r\n        no++;\r\n      if (\r\n        this.notSavedQuestionData.answerThree ||\r\n        this.notSavedQuestionData.answerThreeImage\r\n      )\r\n        no++;\r\n      if (\r\n        this.notSavedQuestionData.answerFour ||\r\n        this.notSavedQuestionData.answerFourImage\r\n      )\r\n        no++;\r\n    }\r\n    return no;\r\n  }\r\n\r\n  onSelectQuestion(index: number, newQuestionId: number) {\r\n    if (newQuestionId != this.questionId) {\r\n      // save new question data\r\n      if (this.questionId == 0) {\r\n        this.saveLastQuestion();\r\n        this.getQuestionForEditByID(newQuestionId);\r\n      } else if (newQuestionId == 0 && this.questionId > 0) {\r\n        // this.removeEditorImg();\r\n        if (!this.isCurrentQuesHasNoUpdates()) {\r\n          this.onSubmit(6);\r\n        } else {\r\n          this.myForm.patchValue(this.notSavedQuestionData);\r\n          this.displayQuestionImageInEditor();\r\n          this.currentQuestionToEdit = null;\r\n        }\r\n      } else if (newQuestionId > 0 && this.questionId > 0) {\r\n        if (!this.isCurrentQuesHasNoUpdates()) {\r\n          this.onSubmit(7, newQuestionId);\r\n        } else this.getQuestionForEditByID(newQuestionId);\r\n      }\r\n      // get selected one\r\n      this.questionId = newQuestionId;\r\n      this.selectedQuesIndex = index;\r\n    }\r\n  }\r\n\r\n  handelPrevAndNext(isPrev: boolean) {\r\n    if (this.isCurrentQuesHasNoUpdates() || !this.currentQuestionToEdit) {\r\n      // prev\r\n      if (isPrev) {\r\n        if (this.questionId == 0) this.saveLastQuestion();\r\n        this.goToPrevQuestion();\r\n      }\r\n      // next\r\n      else this.goToNextQuestion();\r\n    } else this.onSubmit(isPrev ? 1 : 2);\r\n  }\r\n\r\n  saveLastQuestion() {\r\n    this.notSavedQuestionData = this.myForm.value;\r\n    let newData: IQuestionForGridModel = {\r\n      ExamQuestId: 0,\r\n      mark: this.FormCtrl.questionMark?.value,\r\n      Text: this.FormCtrl.exam_question_text?.value,\r\n      ChoiceCounts: this.noOfInsertedAnswers(),\r\n      Image: this.FormCtrl.questionImage?.value,\r\n      correctIndex: this.getCorrectAnswerIndexFromForm(),\r\n    };\r\n    this.questionsInGrid[this.questionsInGrid.length - 1] = newData;\r\n  }\r\n\r\n  goToPrevQuestion() {\r\n    let prevQuestionId =\r\n      this.questionsInGrid[--this.selectedQuesIndex].ExamQuestId;\r\n    this.getQuestionForEditByID(prevQuestionId);\r\n  }\r\n\r\n  goToNextQuestion() {\r\n    this.removeEditorImg();\r\n    let nextQuestionId =\r\n      this.questionsInGrid[++this.selectedQuesIndex].ExamQuestId;\r\n    if (nextQuestionId > 0) this.getQuestionForEditByID(nextQuestionId);\r\n    else {\r\n      this.goToNotSavedQuestion(false);\r\n    }\r\n  }\r\n\r\n  isCurrentQuesHasNoUpdates() {\r\n    if (this.currentQuestionToEdit)\r\n      return (\r\n        this.currentQuestionToEdit.mark == this.FormCtrl.questionMark?.value &&\r\n        this.currentQuestionToEdit.question_text ==\r\n          this.FormCtrl.exam_question_text?.value &&\r\n        this.currentQuestionToEdit.MCQ_Choices[0]?.Text ==\r\n          this.FormCtrl.answerOne?.value &&\r\n        this.currentQuestionToEdit.MCQ_Choices[1]?.Text ==\r\n          this.FormCtrl.answerTwo?.value &&\r\n        this.currentQuestionToEdit.MCQ_Choices[2]?.Text ==\r\n          this.FormCtrl.answerThree?.value &&\r\n        this.currentQuestionToEdit.MCQ_Choices[3]?.Text ==\r\n          this.FormCtrl.answerFour?.value &&\r\n        !this.changeCurrentCorrectAnswer &&\r\n        !this.FormCtrl.questionImage.value?.includes(\"data:image\") &&\r\n        !this.FormCtrl.answerOneImage.value?.includes(\"data:\") &&\r\n        !this.FormCtrl.answerTwoImage.value?.includes(\"data:\") &&\r\n        !this.FormCtrl.answerThreeImage.value?.includes(\"data:\") &&\r\n        !this.FormCtrl.answerFourImage.value?.includes(\"data:\")\r\n      );\r\n    else return false;\r\n  }\r\n\r\n  addNewQuestion() {\r\n    // when there is no unsaved question\r\n    if (!this.notSavedQuestionData) {\r\n      if (this.isCurrentQuesHasNoUpdates()) {\r\n        this.pushNewQuestion();\r\n        this.currentQuestionToEdit = null;\r\n        this.questionId = 0;\r\n        this.clearForm();\r\n      } else this.onSubmit(4);\r\n    }\r\n    // when there is an unsaved question\r\n    else {\r\n      // save new question\r\n      if (this.questionId == 0) this.onSubmit(4);\r\n      // last question not saved but it is not the selected one\r\n      else if (this.questionId > 0) {\r\n        // go to last question && submit\r\n        if (this.isCurrentQuesHasNoUpdates()) {\r\n          this.goToNotSavedQuestion(true);\r\n        } else this.onSubmit(3);\r\n      }\r\n    }\r\n  }\r\n\r\n  saveExam() {\r\n    if (this.notSavedQuestionData) {\r\n      if (this.questionId == 0) this.onSubmit(5);\r\n      // last question not saved but it is not the selected one\r\n      else if (this.questionId > 0) {\r\n        // go to last question && submit\r\n        if (this.isCurrentQuesHasNoUpdates()) {\r\n          this.goToNotSavedQuestion(true);\r\n        } else this.onSubmit(3);\r\n      }\r\n    } else {\r\n      if (this.isCurrentQuesHasNoUpdates()) {\r\n        // navigate to structure\r\n        this.router.navigate(\r\n          [`/dashboard/setup/course/course-structure/${this.subjectId}`],\r\n          {\r\n            queryParams: {\r\n              functionId: this.functionId,\r\n            },\r\n          }\r\n        );\r\n      } else this.onSubmit(5);\r\n    }\r\n  }\r\n\r\n  openSubmitDialog() {\r\n    this.dialog\r\n      .open(SaveExamDialogComponent, {\r\n        minWidth: \"30vw\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((save: boolean) => {\r\n        if (save) this.saveExam();\r\n      });\r\n  }\r\n\r\n  pushNewQuestion() {\r\n    this.removeEditorImg();\r\n    this.questionsInGrid.push({\r\n      ExamQuestId: 0,\r\n      Image: null,\r\n      Text: \"---\",\r\n      correctIndex: null,\r\n      mark: null,\r\n      ChoiceCounts: null,\r\n    });\r\n    this.selectedQuesIndex = this.questionsInGrid.length - 1;\r\n  }\r\n\r\n  getCorrectAnswerIndexFromForm(fromForm: boolean = true) {\r\n    if (fromForm) {\r\n      if (this.FormCtrl.answerOneIsCorrect.value) return 0;\r\n      if (this.FormCtrl.answerTwoIsCorrect.value) return 1;\r\n      if (this.FormCtrl.answerThreeIsCorrect.value) return 2;\r\n      if (this.FormCtrl.answerFourIsCorrect.value) return 3;\r\n    } else {\r\n      if (this.notSavedQuestionData.answerOneIsCorrect) return 0;\r\n      if (this.notSavedQuestionData.answerTwoIsCorrect) return 1;\r\n      if (this.notSavedQuestionData.answerThreeIsCorrect) return 2;\r\n      if (this.notSavedQuestionData.answerFourIsCorrect) return 3;\r\n    }\r\n  }\r\n\r\n  goToNotSavedQuestion(submit: boolean) {\r\n    this.selectedQuesIndex = this.questionsInGrid.length - 1;\r\n    this.myForm.patchValue(this.notSavedQuestionData);\r\n    this.displayQuestionImageInEditor();\r\n    this.currentQuestionToEdit = null;\r\n    this.questionId = 0;\r\n    if (submit) this.onSubmit();\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    // set type msq\r\n    this.FormCtrl.questionTypeId.setValue(2);\r\n    this.resetFileInputs();\r\n    this.submitted = false;\r\n    // this.questionId = 0;\r\n  }\r\n\r\n  getEditorWidth() {\r\n    if (this.editor?.nativeElement) {\r\n      this.editorWidth = this.editor.nativeElement.offsetWidth;\r\n    } else this.editorWidth = 0;\r\n\r\n    this.editorFooterWidth =\r\n      this.editor.nativeElement.querySelector(\".ql-toolbar\")?.offsetWidth;\r\n\r\n    // console.log(this.editorWidth, this.editorFooterWidth);\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onWindowResize(event) {\r\n    this.getEditorWidth();\r\n  }\r\n\r\n  ifImageNeedFileService(image: string) {\r\n    return image.startsWith(\"data:\") ? false : true;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-7 col-12\">\r\n    <mat-card class=\"admin-index-card add-question\">\r\n      <mat-card-title class=\"px-2\">\r\n        <page-title\r\n          title=\"labels.CreateExam\"\r\n          subTitle=\"Exam.writeQuestionsTextAndMarkCorrectAnswer\"\r\n        ></page-title>\r\n      </mat-card-title>\r\n\r\n      <div class=\"card-container\">\r\n        <mat-card-content class=\"container-fluid\">\r\n          <form [formGroup]=\"myForm\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 mbottom-24 editor-container\" #editor>\r\n                <app-text-editor\r\n                  [control]=\"FormCtrl.exam_question_text\"\r\n                  [submitted]=\"submitted\"\r\n                  label=\"labels.Question\"\r\n                  [numberWithLabel]=\"selectedQuesIndex + 1\"\r\n                  placeholder=\"Exam.writeTheQuestion\"\r\n                ></app-text-editor>\r\n\r\n                <div\r\n                  class=\"editor-footer\"\r\n                  [style.width.px]=\"editorWidth - editorFooterWidth - 60\"\r\n                >\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      [src]=\"svgManager.img_icon\"\r\n                      width=\"20\"\r\n                      height=\"16\"\r\n                      class=\"input-img-icon\"\r\n                      (click)=\"questionImage.click()\"\r\n                    />\r\n                    <input\r\n                      hidden\r\n                      #questionImage\r\n                      class=\"form-control\"\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      name=\"questionImage\"\r\n                      (change)=\"importFile($event)\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div\r\n                    [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\"\r\n                    class=\"number-btns\"\r\n                  >\r\n                    <mat-label>{{ \"labels.Degree\" | translate }}</mat-label>\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <mat-icon matPrefix (click)=\"decrementMark()\">\r\n                        remove_circle\r\n                      </mat-icon>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        [formControl]=\"FormCtrl.questionMark\"\r\n                      />\r\n                      <mat-icon matSuffix (click)=\"incrementMark()\">\r\n                        add_circle\r\n                      </mat-icon>\r\n                      <mat-hint>\r\n                        <input-validation-msg\r\n                          [control]=\"FormCtrl.questionMark\"\r\n                          [submitted]=\"submitted\"\r\n                        >\r\n                        </input-validation-msg>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <ng-container *ngIf=\"FormCtrl.questionTypeId?.value == 2\">\r\n                <!-- answer one -->\r\n                <div class=\"col-12\">\r\n                  <div class=\"input-with-radio\">\r\n                    <!-- Question Pic -->\r\n                    <div class=\"answer-img\">\r\n                      <img\r\n                        [src]=\"svgManager.img_icon\"\r\n                        width=\"20\"\r\n                        height=\"16\"\r\n                        *ngIf=\"!FormCtrl.answerOneImage?.value\"\r\n                        class=\"input-img-icon\"\r\n                        (click)=\"fileInput1.click()\"\r\n                      />\r\n                      <input\r\n                        hidden\r\n                        #fileInput1\r\n                        class=\"form-control\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        name=\"answerOneImage\"\r\n                        (change)=\"importOneFile($event)\"\r\n                      />\r\n                      <img\r\n                        *ngIf=\"FormCtrl.answerOneImage?.value\"\r\n                        [src]=\"FormCtrl.answerOneImage?.value\"\r\n                        class=\"card-img\"\r\n                        width=\"72\"\r\n                        height=\"55\"\r\n                        (click)=\"fileInput1.click()\"\r\n                      />\r\n                    </div>\r\n\r\n                    <app-input\r\n                      [control]=\"FormCtrl.answerOne\"\r\n                      [submitted]=\"submitted\"\r\n                      placeholder=\"labels.Answer1\"\r\n                    ></app-input>\r\n\r\n                    <mat-radio-group\r\n                      formControlName=\"answerOneIsCorrect\"\r\n                      *ngIf=\"!FormCtrl.answerOneIsCorrect.value\"\r\n                    >\r\n                      <mat-radio-button\r\n                        [value]=\"0\"\r\n                        [checked]=\"FormCtrl.answerOneIsCorrect.value\"\r\n                        (click)=\"onSelectCorrect(0)\"\r\n                      >\r\n                      </mat-radio-button>\r\n                    </mat-radio-group>\r\n                    <i\r\n                      class=\"fas fa-check\"\r\n                      *ngIf=\"FormCtrl.answerOneIsCorrect.value\"\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- answer Two -->\r\n                <div class=\"col-12\">\r\n                  <div class=\"input-with-radio\">\r\n                    <!-- Question Pic -->\r\n                    <div class=\"answer-img\">\r\n                      <img\r\n                        [src]=\"svgManager.img_icon\"\r\n                        width=\"20\"\r\n                        height=\"16\"\r\n                        *ngIf=\"!FormCtrl.answerTwoImage?.value\"\r\n                        class=\"input-img-icon\"\r\n                        (click)=\"fileInput2.click()\"\r\n                      />\r\n                      <input\r\n                        hidden\r\n                        #fileInput2\r\n                        class=\"form-control\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        name=\"answerTwoImage\"\r\n                        (change)=\"importTwoFile($event)\"\r\n                      />\r\n                      <img\r\n                        *ngIf=\"FormCtrl.answerTwoImage?.value\"\r\n                        [src]=\"FormCtrl.answerTwoImage?.value\"\r\n                        class=\"card-img\"\r\n                        width=\"72\"\r\n                        height=\"55\"\r\n                        (click)=\"fileInput2.click()\"\r\n                      />\r\n                    </div>\r\n\r\n                    <app-input\r\n                      [control]=\"FormCtrl.answerTwo\"\r\n                      [submitted]=\"submitted\"\r\n                      placeholder=\"labels.Answer2\"\r\n                    ></app-input>\r\n\r\n                    <mat-radio-group\r\n                      formControlName=\"answerTwoIsCorrect\"\r\n                      *ngIf=\"!FormCtrl.answerTwoIsCorrect.value\"\r\n                    >\r\n                      <mat-radio-button\r\n                        [value]=\"1\"\r\n                        [checked]=\"FormCtrl.answerTwoIsCorrect.value\"\r\n                        (click)=\"onSelectCorrect(1)\"\r\n                      >\r\n                      </mat-radio-button>\r\n                    </mat-radio-group>\r\n                    <i\r\n                      class=\"fas fa-check\"\r\n                      *ngIf=\"FormCtrl.answerTwoIsCorrect.value\"\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- answer Three -->\r\n                <div class=\"col-12\">\r\n                  <div class=\"input-with-radio\">\r\n                    <!-- Question Pic -->\r\n                    <div class=\"answer-img\">\r\n                      <img\r\n                        [src]=\"svgManager.img_icon\"\r\n                        width=\"20\"\r\n                        height=\"16\"\r\n                        *ngIf=\"!FormCtrl.answerThreeImage?.value\"\r\n                        class=\"input-img-icon\"\r\n                        (click)=\"fileInput3.click()\"\r\n                      />\r\n                      <input\r\n                        hidden\r\n                        #fileInput3\r\n                        class=\"form-control\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        name=\"answerThreeImage\"\r\n                        (change)=\"importThreeFile($event)\"\r\n                      />\r\n                      <img\r\n                        *ngIf=\"FormCtrl.answerThreeImage?.value\"\r\n                        [src]=\"FormCtrl.answerThreeImage?.value\"\r\n                        class=\"card-img\"\r\n                        width=\"72\"\r\n                        height=\"55\"\r\n                        (click)=\"fileInput3.click()\"\r\n                      />\r\n                    </div>\r\n\r\n                    <app-input\r\n                      [control]=\"FormCtrl.answerThree\"\r\n                      [submitted]=\"submitted\"\r\n                      placeholder=\"labels.Answer3\"\r\n                    ></app-input>\r\n\r\n                    <mat-radio-group\r\n                      formControlName=\"answerThreeIsCorrect\"\r\n                      *ngIf=\"!FormCtrl.answerThreeIsCorrect.value\"\r\n                    >\r\n                      <mat-radio-button\r\n                        [value]=\"2\"\r\n                        [checked]=\"FormCtrl.answerThreeIsCorrect.value\"\r\n                        (click)=\"onSelectCorrect(2)\"\r\n                      >\r\n                      </mat-radio-button>\r\n                    </mat-radio-group>\r\n                    <i\r\n                      class=\"fas fa-check\"\r\n                      *ngIf=\"FormCtrl.answerThreeIsCorrect.value\"\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- answer Four -->\r\n                <div class=\"col-12\">\r\n                  <div class=\"input-with-radio\">\r\n                    <!-- Question Pic -->\r\n                    <div class=\"answer-img\">\r\n                      <img\r\n                        [src]=\"svgManager.img_icon\"\r\n                        width=\"20\"\r\n                        height=\"16\"\r\n                        *ngIf=\"!FormCtrl.answerFourImage?.value\"\r\n                        class=\"input-img-icon\"\r\n                        (click)=\"fileInput4.click()\"\r\n                      />\r\n                      <input\r\n                        hidden\r\n                        #fileInput4\r\n                        class=\"form-control\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        name=\"answerFourImage\"\r\n                        (change)=\"importFourFile($event)\"\r\n                      />\r\n                      <img\r\n                        *ngIf=\"FormCtrl.answerFourImage?.value\"\r\n                        [src]=\"FormCtrl.answerFourImage?.value\"\r\n                        class=\"card-img\"\r\n                        width=\"72\"\r\n                        height=\"55\"\r\n                        (click)=\"fileInput4.click()\"\r\n                      />\r\n                    </div>\r\n\r\n                    <app-input\r\n                      [control]=\"FormCtrl.answerFour\"\r\n                      [submitted]=\"submitted\"\r\n                      placeholder=\"labels.Answer4\"\r\n                    ></app-input>\r\n\r\n                    <mat-radio-group\r\n                      formControlName=\"answerFourIsCorrect\"\r\n                      *ngIf=\"!FormCtrl.answerFourIsCorrect.value\"\r\n                    >\r\n                      <mat-radio-button\r\n                        [value]=\"3\"\r\n                        [checked]=\"FormCtrl.answerFourIsCorrect.value\"\r\n                        (click)=\"onSelectCorrect(3)\"\r\n                      >\r\n                      </mat-radio-button>\r\n                    </mat-radio-group>\r\n                    <i\r\n                      class=\"fas fa-check\"\r\n                      *ngIf=\"FormCtrl.answerFourIsCorrect.value\"\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions class=\"pt-0\">\r\n          <button\r\n            class=\"dark-blue-outline-btn radius-btn float-left\"\r\n            *ngIf=\"selectedQuesIndex > 0\"\r\n            (click)=\"handelPrevAndNext(true)\"\r\n          >\r\n            <i\r\n              class=\"fas\"\r\n              [ngClass]=\"\r\n                languageService.isArabic\r\n                  ? 'fa-chevron-right'\r\n                  : 'fa-chevron-left'\r\n              \"\r\n            ></i>\r\n            <span class=\"text-btn\">\r\n              {{ \"Exam.prevQuestion\" | translate }}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            class=\"dark-blue-btn radius-btn float-right\"\r\n            *ngIf=\"selectedQuesIndex < questionsInGrid.length - 1\"\r\n            (click)=\"handelPrevAndNext(false)\"\r\n          >\r\n            <span class=\"text-btn\">\r\n              {{ \"Exam.nextQuestion\" | translate }}\r\n            </span>\r\n            <i\r\n              class=\"fas\"\r\n              [ngClass]=\"\r\n                languageService.isArabic\r\n                  ? 'fa-chevron-left'\r\n                  : 'fa-chevron-right'\r\n              \"\r\n            ></i>\r\n          </button>\r\n        </mat-card-actions>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"col-md-5 col-12\">\r\n    <mat-card class=\"admin-index-card questions\">\r\n      <mat-card-title class=\"px-2\">\r\n        <page-title\r\n          title=\"labels.Questions\"\r\n          subTitle=\"Exam.haveCompleteOverview\"\r\n        ></page-title>\r\n      </mat-card-title>\r\n\r\n      <div class=\"card-container\">\r\n        <mat-card-content class=\"container-fluid\">\r\n          <table>\r\n            <!-- <tbody> -->\r\n            <tr\r\n              class=\"ques-view\"\r\n              *ngFor=\"let ques of questionsInGrid; let i = index\"\r\n              [class.active]=\"i == selectedQuesIndex\"\r\n              (click)=\"onSelectQuestion(i, ques.ExamQuestId)\"\r\n            >\r\n              <ng-container *ngIf=\"i != selectedQuesIndex\">\r\n                <td>\r\n                  <span class=\"no-ques\">{{ i + 1 }}</span>\r\n                </td>\r\n                <td>\r\n                  <span class=\"text-degree\">\r\n                    <span class=\"ques-img\" *ngIf=\"ques.Image && !ques.Text\">\r\n                      <img\r\n                        [src]=\"\r\n                          ifImageNeedFileService(ques.Image)\r\n                            ? uploadFileService.previewPicture(ques.Image)\r\n                            : ques.Image\r\n                        \"\r\n                        height=\"38\"\r\n                        width=\"50\"\r\n                      />\r\n                    </span>\r\n                    <span class=\"ques-text\" [innerHTML]=\"ques.Text\">\r\n                      <!-- {{ ques.Text }} -->\r\n                    </span>\r\n                    <span class=\"ques-degree\">\r\n                      {{ ques.mark }} {{ \"Exam.points\" | translate }}\r\n                    </span>\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span class=\"ques-answers\">\r\n                    <span\r\n                      *ngFor=\"\r\n                        let ele of [].constructor(ques.ChoiceCounts);\r\n                        let answerIndex = index\r\n                      \"\r\n                      [class.onlyOne]=\"ques.ChoiceCounts == 1\"\r\n                      [class.correct]=\"ques.correctIndex == answerIndex\"\r\n                    >\r\n                      {{ answerIndex + 1 }}\r\n                    </span>\r\n                  </span>\r\n                  <span *ngIf=\"ques.ChoiceCounts == 0\">\r\n                    <img\r\n                      [src]=\"svgManager.exclamation\"\r\n                      height=\"18\"\r\n                      width=\"18\"\r\n                    />\r\n                  </span>\r\n                </td>\r\n                <td class=\"icon\">\r\n                  <i class=\"fas fa-check\"></i>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"i == selectedQuesIndex\">\r\n                <td>\r\n                  <span class=\"no-ques\">{{ i + 1 }}</span>\r\n                </td>\r\n                <td>\r\n                  <span class=\"text-degree\">\r\n                    <span\r\n                      class=\"ques-img\"\r\n                      *ngIf=\"\r\n                        FormCtrl.questionImage?.value &&\r\n                        !FormCtrl.exam_question_text?.value\r\n                      \"\r\n                    >\r\n                      <img\r\n                        [src]=\"FormCtrl.questionImage?.value\"\r\n                        height=\"38\"\r\n                        width=\"50\"\r\n                      />\r\n                    </span>\r\n                    <span\r\n                      class=\"ques-text\"\r\n                      [innerHTML]=\"FormCtrl.exam_question_text?.value\"\r\n                    >\r\n                      <!-- {{ ques.Text }} -->\r\n                    </span>\r\n                    <span class=\"ques-degree\">\r\n                      {{ FormCtrl.questionMark?.value ?? 0 }}\r\n                      {{ \"Exam.points\" | translate }}\r\n                    </span>\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span class=\"ques-answers\">\r\n                    <span\r\n                      *ngFor=\"\r\n                        let ele of [].constructor(noOfInsertedAnswers());\r\n                        let answerIndex = index\r\n                      \"\r\n                      [class.onlyOne]=\"noOfInsertedAnswers() == 1\"\r\n                      [class.correct]=\"\r\n                        getCorrectAnswerIndexFromForm() == answerIndex\r\n                      \"\r\n                    >\r\n                      {{ answerIndex + 1 }}\r\n                    </span>\r\n                  </span>\r\n                  <span *ngIf=\"noOfInsertedAnswers() == 0\">\r\n                    <img\r\n                      [src]=\"svgManager.exclamation\"\r\n                      height=\"18\"\r\n                      width=\"18\"\r\n                    />\r\n                  </span>\r\n                </td>\r\n                <td class=\"icon\"></td>\r\n              </ng-container>\r\n            </tr>\r\n            <!-- </tbody> -->\r\n          </table>\r\n\r\n          <div class=\"mtop-13\">\r\n            <button class=\"dashed-btn\" (click)=\"addNewQuestion()\">\r\n              {{ \"addNewQuestion\" | translate }}\r\n            </button>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-actions class=\"pt-0\">\r\n          <button class=\"orange-btn radius-btn\" (click)=\"openSubmitDialog()\">\r\n            <span class=\"text-btn\">\r\n              {{ \"Exam.saveExam\" | translate }}\r\n            </span>\r\n          </button>\r\n        </mat-card-actions>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  IQuestionForGridModel,\r\n  examQuestionImage,\r\n  IAddEditQuestionTextModel,\r\n  IMcqChoices,\r\n  IAddEditQuestionMcqModel,\r\n  IAddedTextExamResponse,\r\n  IQuestionDetailsForEditModel,\r\n} from \"app/admin/models/admin/AddEditQuestionModel\";\r\nimport { IUnitModel, ILessionModel } from \"app/admin/models/admin/exam\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-edit-sub-question\",\r\n  templateUrl: \"./add-sub-question.component.html\",\r\n  styleUrls: [\"./add-sub-question.component.scss\"],\r\n})\r\nexport class AddSubQuestionComponent implements OnInit {\r\n  // examId: number;\r\n  // examGroupHeaderId: number;\r\n  // subjectId: number;\r\n  @Input(\"examId\") examId: number;\r\n  @Input(\"examGroupHeaderId\") examGroupHeaderId: number = 0;\r\n  @Input(\"subjectId\") subjectId: number = 0;\r\n  @Output(\"closeDialog\") closeDialog = new EventEmitter();\r\n\r\n  unitId: number = 0;\r\n  lessonId: number = 0;\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n\r\n  questionsInGrid: IQuestionForGridModel[] = [];\r\n\r\n  questionId: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  educationCompanyId: any;\r\n  oneIsCorrect: boolean = false;\r\n  twoIsCorrect: boolean = false;\r\n  threeIsCorrect: boolean = false;\r\n  fourIsCorrect: boolean = false;\r\n  questionFile: any = null;\r\n  answerOneFile: any = null;\r\n  answerTwoFile: any = null;\r\n  answerThreeFile: any = null;\r\n  answerFourFile: any = null;\r\n  perfectAnswerAttach_preview: any = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private examService: ExamsService,\r\n    public authserv: AuthService,\r\n    public toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    public uploadFileService: UploadFileService // @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    // this.examId = data.examId;\r\n    // this.examGroupHeaderId = data.examGroupHeaderId;\r\n    // this.subjectId = data.subjectId;\r\n    if (this.examGroupHeaderId != 0) this.getAllQuestionsByHeadId();\r\n    // if (this.subjectId != 0) this.getAllUnitsBySublectId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      mainQuestion: [null],\r\n      questionTypeId: [2, Validators.required],\r\n      questionImage: [null],\r\n      remove_image: [false],\r\n      // unitId: [null],\r\n      // lessionId: [null],\r\n      exam_question_text: [null],\r\n      questionPerfectAnswer: [null],\r\n      perfect_answer_attach: [null],\r\n      questionMark: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      answerOneId: [null],\r\n      answerOne: [null],\r\n      answerOneIsCorrect: [null],\r\n      answerOneImage: [null],\r\n      answerTwoId: [null],\r\n      answerTwo: [null],\r\n      answerTwoIsCorrect: [null],\r\n      answerTwoImage: [null],\r\n      answerThreeId: [null],\r\n      answerThree: [null],\r\n      answerThreeIsCorrect: [null],\r\n      answerThreeImage: [null],\r\n      answerFourId: [null],\r\n      answerFour: [null],\r\n      answerFourIsCorrect: [null],\r\n      answerFourImage: [null],\r\n      answerOneRemove_image: [false],\r\n      answerTwoRemove_image: [false],\r\n      answerThreeRemove_image: [false],\r\n      answerFourRemove_image: [false],\r\n    });\r\n    //remove_image: d.remove_image,\r\n    this.educationCompanyId = this.authserv.getEduCompId();\r\n    this.questionTypeValidation();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.examGroupHeaderId?.currentValue > 0)\r\n      this.getAllQuestionsByHeadId();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //get all question for this header\r\n  getAllQuestionsByHeadId() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getAllQuestionsByHeadId<IQuestionForGridModel[]>(this.examGroupHeaderId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"getAllQuestionsByHeadId\", response);\r\n          this.questionsInGrid = [];\r\n          this.questionsInGrid = response;\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  questionTypeValidation() {\r\n    if (this.FormCtrl.questionTypeId?.value === 1) {\r\n      // console.log(\"PerfectAnswer is required\");\r\n      // this.FormCtrl.questionPerfectAnswer?.setValidators(Validators.required);\r\n    } else {\r\n      // console.log(\"PerfectAnswer is not required\");\r\n      this.FormCtrl.questionPerfectAnswer?.clearAsyncValidators();\r\n      this.FormCtrl.questionPerfectAnswer?.reset();\r\n    }\r\n    this.FormCtrl.questionPerfectAnswer?.updateValueAndValidity();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // if (this.FormCtrl.questionTypeId?.value == 1) {\r\n    //   // مقالي\r\n\r\n    //   let image: examQuestionImage = this.questionFile || null;\r\n    //   // let image: examQuestionImage = this.questionFile || null {\r\n    //   //   FileAsBase64: this.questionFile.FileAsBase64 || null,\r\n    //   //   name: this.questionFile.name,\r\n    //   //   size: this.questionFile.size,\r\n    //   //   type: this.questionFile.type,\r\n    //   // };\r\n    //   let questionImagePath = this.FormCtrl.questionImage;\r\n\r\n    //   let toAddEdit: IAddEditQuestionTextModel = {\r\n    //     exam_question_main_question: this.FormCtrl.mainQuestion?.value,\r\n    //     exam_question_mark: this.FormCtrl.questionMark?.value,\r\n    //     exam_question_perfect_answer:\r\n    //       this.FormCtrl.questionPerfectAnswer?.value,\r\n    //     //   perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n    //     exam_question_text: this.FormCtrl.exam_question_text?.value,\r\n    //     exam_question_type_id: this.FormCtrl.questionTypeId?.value,\r\n    //     exam_selected_question_head_id: this.examGroupHeaderId,\r\n    //     exam_selected_subject_id: this.subjectId,\r\n    //     exam_question_image: image,\r\n    //     remove_image: this.FormCtrl.remove_image?.value,\r\n    //     exam_question_id: this.questionId,\r\n    //   };\r\n    //   console.log(\"toAddEdit_Text_question=> \", toAddEdit);\r\n    //   if (\r\n    //     !this.FormCtrl.exam_question_text?.value &&\r\n    //     image == null &&\r\n    //     questionImagePath == null\r\n    //   ) {\r\n    //     this.toastr.warning(\"Exam.QuestionMsgError\");\r\n    //     return;\r\n    //   } else {\r\n    //     if (this.questionId > 0) {\r\n    //       this.editTextQuestion(toAddEdit);\r\n    //     } else {\r\n    //       this.addTextQuestion(toAddEdit);\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    // MCQ\r\n    if (this.FormCtrl.questionTypeId?.value == 2) {\r\n      let image: examQuestionImage = this.questionFile || null;\r\n      let questionImagePath = this.FormCtrl.questionImage.value;\r\n      // let image: examQuestionImage = {\r\n      //   FileAsBase64: this.questionFile.FileAsBase64 || null,\r\n      //   name: this.questionFile.name,\r\n      //   size: this.questionFile.size,\r\n      //   type: this.questionFile.type,\r\n      // };\r\n\r\n      let imageOne: examQuestionImage = this.answerOneFile || null;\r\n      // let imageOne: examQuestionImage = {\r\n      //   FileAsBase64: this.answerOneFile.FileAsBase64 || null,\r\n      //   name: this.answerOneFile.name,\r\n      //   size: this.answerOneFile.size,\r\n      //   type: this.answerOneFile.type,\r\n      // };\r\n\r\n      let choice1: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerOneId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerOne?.value,\r\n        is_correct:\r\n          this.FormCtrl.answerOneIsCorrect.value === 0 ||\r\n          this.FormCtrl.answerOneIsCorrect.value\r\n            ? true\r\n            : false,\r\n        choice_image: imageOne,\r\n        remove_image: this.FormCtrl.answerOneRemove_image?.value,\r\n        path: this.FormCtrl.answerOneImage?.value,\r\n      };\r\n\r\n      let imageTwo: examQuestionImage = this.answerTwoFile || null;\r\n      // let imageTwo: examQuestionImage = {\r\n      //   FileAsBase64: this.answerTwoFile.FileAsBase64 || null,\r\n      //   name: this.answerTwoFile.name,\r\n      //   size: this.answerTwoFile.size,\r\n      //   type: this.answerTwoFile.type,\r\n      // };\r\n\r\n      let choice2: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerTwoId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerTwo?.value,\r\n        is_correct: this.FormCtrl.answerTwoIsCorrect?.value ? true : false,\r\n        choice_image: imageTwo,\r\n        remove_image: this.FormCtrl.answerTwoRemove_image?.value,\r\n        path: this.FormCtrl.answerTwoImage?.value,\r\n      };\r\n\r\n      let imageThree: examQuestionImage = this.answerThreeFile || null;\r\n      // let imageThree: examQuestionImage = {\r\n      //   FileAsBase64: this.answerThreeFile.FileAsBase64 || null,\r\n      //   name: this.answerThreeFile.name,\r\n      //   size: this.answerThreeFile.size,\r\n      //   type: this.answerThreeFile.type,\r\n      // };\r\n\r\n      let choice3: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerThreeId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerThree?.value,\r\n        is_correct: this.FormCtrl.answerThreeIsCorrect?.value ? true : false,\r\n        choice_image: imageThree,\r\n        remove_image: this.FormCtrl.answerThreeRemove_image?.value,\r\n        path: this.FormCtrl.answerThreeImage?.value,\r\n      };\r\n\r\n      let imageFour: examQuestionImage = this.answerFourFile || null;\r\n      // let imageFour: examQuestionImage = {\r\n      //   FileAsBase64: this.answerFourFile.FileAsBase64 || null,\r\n      //   name: this.answerFourFile.name,\r\n      //   size: this.answerFourFile.size,\r\n      //   type: this.answerFourFile.type,\r\n      // };\r\n\r\n      let choice4: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerFourId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerFour?.value,\r\n        is_correct: this.FormCtrl.answerFourIsCorrect?.value ? true : false,\r\n        choice_image: imageFour,\r\n        remove_image: this.FormCtrl.answerFourRemove_image?.value,\r\n        path: this.FormCtrl.answerFourImage?.value,\r\n      };\r\n\r\n      let toAddEdit: IAddEditQuestionMcqModel = {\r\n        exam_question_main_question: this.FormCtrl.mainQuestion?.value,\r\n        exam_question_mark: this.FormCtrl.questionMark?.value,\r\n        exam_question_perfect_answer:\r\n          this.FormCtrl.questionPerfectAnswer?.value,\r\n        //perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n        exam_question_text: this.FormCtrl.exam_question_text?.value,\r\n        exam_question_type_id: this.FormCtrl.questionTypeId?.value,\r\n        exam_selected_question_head_id: this.examGroupHeaderId,\r\n        exam_selected_subject_id: this.subjectId,\r\n        exam_question_image: image,\r\n        remove_image: this.FormCtrl.remove_image?.value,\r\n        exam_question_id: this.questionId,\r\n        mcq_choices: [choice1, choice2, choice3, choice4],\r\n      };\r\n\r\n      console.log(\"toAddEdit_mcq_question=> \", toAddEdit);\r\n      // if no question Text or img\r\n      if (\r\n        (toAddEdit.exam_question_text === null ||\r\n          toAddEdit.exam_question_text == \"\" ||\r\n          toAddEdit.exam_question_text == undefined) &&\r\n        toAddEdit.exam_question_image === null &&\r\n        questionImagePath === null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if no correct answer\r\n      // if (\r\n      //   !choice1.is_correct &&\r\n      //   !choice2.is_correct &&\r\n      //   !choice3.is_correct &&\r\n      //   !choice4.is_correct\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.MustChooseCorrectAnswer\");\r\n      //   return;\r\n      // }\r\n      let choices: IMcqChoices[] = [choice1, choice2, choice3, choice4];\r\n      let correctChoiceDone: Boolean = false;\r\n      choices.forEach((choice) => {\r\n        if (\r\n          choice.is_correct &&\r\n          (choice.choice_text || choice.choice_image || choice.path)\r\n        )\r\n          correctChoiceDone = true;\r\n      });\r\n      if (!correctChoiceDone) {\r\n        this.toastr.warning(\"Exam.MustChooseCorrectAnswer\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 1 no text or img\r\n      if (\r\n        (choice1.choice_text === null ||\r\n          choice1.choice_text == \"\" ||\r\n          choice1.choice_text == undefined) &&\r\n        choice1.choice_image === null &&\r\n        choice1.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionOneMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 2 no text or img\r\n      if (\r\n        (choice2.choice_text === null ||\r\n          choice2.choice_text == \"\" ||\r\n          choice2.choice_text == undefined) &&\r\n        choice2.choice_image === null &&\r\n        choice2.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionTwoMsgError\");\r\n        return;\r\n      } else {\r\n        if (this.questionId > 0) {\r\n          this.editMcqQuestion(toAddEdit);\r\n        } else {\r\n          this.addMcqQuestion(toAddEdit);\r\n        }\r\n      }\r\n\r\n      // if mcq 3 no text or img\r\n      // if (\r\n      //   choice3.choice_text === null &&\r\n      //   choice3.choice_image === null &&\r\n      //   choice3.path == null\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.QuestionThreeMsgError\");\r\n      //   return;\r\n      // }\r\n\r\n      // if mcq 4 no text or img\r\n      // if (\r\n      //   choice4.choice_text === null &&\r\n      //   choice4.choice_image === null &&\r\n      //   choice4.path == null\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.QuestionFourMsgError\");\r\n      //   return;\r\n      // } else {\r\n      //   if (this.questionId > 0) {\r\n      //     this.editMcqQuestion(toAddEdit);\r\n      //   } else {\r\n      //     this.addMcqQuestion(toAddEdit);\r\n      //   }\r\n      // }\r\n    }\r\n  }\r\n\r\n  // addTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n  //   //  console.log('on add ', toAddEdit);\r\n  //   this.spinner.show();\r\n  //   this.examService\r\n  //     .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n  //     .subscribe((response: any) => {\r\n  //       // console.log('respooooooonse', response);\r\n\r\n  //       if (response.returnValue == 200) {\r\n  //         this.getAllQuestionsByHeadId();\r\n\r\n  //         this.FormCtrl.mainQuestion?.setValue(null);\r\n  //         this.FormCtrl.questionMark?.setValue(null);\r\n  //         this.FormCtrl.questionTypeId?.setValue(null);\r\n  //         this.FormCtrl.questionImage?.setValue(null);\r\n  //         this.FormCtrl.exam_question_text?.setValue(null);\r\n  //         this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n  //         this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n  //         this.FormCtrl.unitId?.setValue(null);\r\n  //         this.FormCtrl.lessonId?.setValue(null);\r\n  //         this.myForm.reset();\r\n  //         this.resetFileInputs();\r\n  //       } else {\r\n  //         this.toastr.error(response.returnString);\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  // editTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n  //   //  console.log('tooEdiiiiiiit', toAddEdit);\r\n  //   this.spinner.show();\r\n  //   this.examService\r\n  //     .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n  //     .subscribe((response) => {\r\n  //       //  console.log('ediiiiiitResponse', response);\r\n  //       if (response) {\r\n  //         let toEdit = this.questionsInGrid.find(\r\n  //           (q: any) => q.Id == this.questionId\r\n  //         );\r\n\r\n  //         if (toEdit) {\r\n  //           toEdit.Text = this.FormCtrl.exam_question_text?.value;\r\n  //           toEdit.QuestionTypeAr = \"مقال\";\r\n  //           toEdit.Image = this.FormCtrl.questionImage?.value;\r\n  //         }\r\n\r\n  //         this.FormCtrl.mainQuestion?.setValue(null);\r\n  //         this.FormCtrl.questionMark?.setValue(null);\r\n  //         this.FormCtrl.questionTypeId?.setValue(null);\r\n  //         this.FormCtrl.questionImage?.setValue(null);\r\n  //         this.FormCtrl.exam_question_text?.setValue(null);\r\n  //         this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n  //         this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n\r\n  //         this.FormCtrl.unitId?.setValue(null);\r\n  //         this.FormCtrl.lessonId?.setValue(null);\r\n\r\n  //         this.myForm.reset();\r\n  //         this.resetFileInputs();\r\n\r\n  //         this.questionId = 0; // return to add mode\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  addMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    // console.log('on add ', toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n        .subscribe((response: any) => {\r\n          // console.log('respooooooonse', response);\r\n\r\n          if (response.returnValue == 200) {\r\n            this.getAllQuestionsByHeadId();\r\n\r\n            this.FormCtrl.mainQuestion?.setValue(null);\r\n            this.FormCtrl.questionMark?.setValue(null);\r\n            this.FormCtrl.questionTypeId?.setValue(null);\r\n            this.FormCtrl.questionImage?.setValue(null);\r\n            this.FormCtrl.exam_question_text?.setValue(null);\r\n            this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n            this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n            // this.FormCtrl.unitId?.setValue(null);\r\n            // this.FormCtrl.lessonId?.setValue(null);\r\n\r\n            this.myForm.reset();\r\n            // set type msq\r\n            this.FormCtrl.questionTypeId.setValue(2);\r\n            this.resetFileInputs();\r\n            this.submitted = false;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            this.toastr.error(response.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  editMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    //console.log(\"editMcqQuestion\", toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n        .subscribe((response) => {\r\n          //  console.log(\"editMcqQuestion\", response);\r\n          if (response) {\r\n            this.getAllQuestionsByHeadId();\r\n            this.FormCtrl.mainQuestion?.setValue(null);\r\n            this.FormCtrl.questionMark?.setValue(null);\r\n            this.FormCtrl.questionTypeId?.setValue(null);\r\n            this.FormCtrl.questionImage?.setValue(null);\r\n            this.FormCtrl.exam_question_text?.setValue(null);\r\n            this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n            this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n            this.oneIsCorrect = false;\r\n            this.twoIsCorrect = false;\r\n            this.threeIsCorrect = false;\r\n            this.fourIsCorrect = false;\r\n            // this.FormCtrl.unitId?.setValue(null);\r\n            // this.FormCtrl.lessonId?.setValue(null);\r\n\r\n            this.myForm.reset();\r\n            // set type msq\r\n            this.FormCtrl.questionTypeId.setValue(2);\r\n            this.resetFileInputs();\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.submitted = false;\r\n\r\n            this.questionId = 0; // return to add mode\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getQuestionForEditByID(questionId: number) {\r\n    //  console.log('questionIddddddddddddddd', questionId);\r\n    this.spinner.show();\r\n    this.examService\r\n      .getQuestionForEditByID<IQuestionDetailsForEditModel>(questionId)\r\n      .subscribe((response) => {\r\n        console.log(\"getQuestionForEditByID\", response);\r\n        if (response) {\r\n          this.FormCtrl.mainQuestion?.setValue(response.main_question);\r\n          this.FormCtrl.questionMark?.setValue(response.mark);\r\n          this.FormCtrl.exam_question_text?.setValue(response.question_text);\r\n          this.FormCtrl.questionImage?.setValue(\r\n            response?.attach_path != null\r\n              ? this.uploadFileService.previewPicture(response?.attach_path)\r\n              : null\r\n          );\r\n          // this.questionFile.FileAsBase64 = response.attach_path;\r\n          this.FormCtrl.questionTypeId?.setValue(response.question_type_id);\r\n          this.questionId = questionId;\r\n\r\n          // this.FormCtrl.questionPerfectAnswer?.setValue(\r\n          //   response.perfect_answer\r\n          // );\r\n          // this.FormCtrl.perfect_answer_attach?.setValue(\r\n          //   `mozakretyapi${response?.prefect_answer_attach_path}`\r\n          // );\r\n\r\n          if (response.question_type_id == 2) {\r\n            this.FormCtrl.answerOneId?.setValue(response.MCQ_Choices[0]?.Id);\r\n            this.FormCtrl.answerOne?.setValue(response.MCQ_Choices[0]?.Text);\r\n            this.FormCtrl.answerOneImage?.setValue(\r\n              response?.MCQ_Choices[0]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[0]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            // this.FormCtrl.answerOneImage?.setValue(response.MCQ_Choices[0].Image);\r\n            //  this.answerOneFile.FileAsBase64 = response.MCQ_Choices[0].Image;\r\n            this.FormCtrl.answerOneIsCorrect?.setValue(\r\n              response.MCQ_Choices[0]?.Is_Correct\r\n            );\r\n            this.oneIsCorrect = response.MCQ_Choices[0]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerTwoId?.setValue(response.MCQ_Choices[1]?.Id);\r\n            this.FormCtrl.answerTwo?.setValue(response.MCQ_Choices[1]?.Text);\r\n            this.FormCtrl.answerTwoImage?.setValue(\r\n              response?.MCQ_Choices[1]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[1]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            //  this.FormCtrl.answerTwoImage?.setValue(response.MCQ_Choices[1].Image);\r\n            // this.answerTwoFile.FileAsBase64 = response.MCQ_Choices[1].Image;\r\n            this.FormCtrl.answerTwoIsCorrect?.setValue(\r\n              response.MCQ_Choices[1]?.Is_Correct\r\n            );\r\n            this.twoIsCorrect = response.MCQ_Choices[1]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerThreeId?.setValue(response.MCQ_Choices[2]?.Id);\r\n            this.FormCtrl.answerThree?.setValue(response.MCQ_Choices[2]?.Text);\r\n            this.FormCtrl.answerThreeImage?.setValue(\r\n              response?.MCQ_Choices[2]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[2]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            // this.FormCtrl.answerThreeImage?.setValue(response.MCQ_Choices[2].Image);\r\n            //  this.answerThreeFile.FileAsBase64 = response.MCQ_Choices[2].Image;\r\n            this.FormCtrl.answerThreeIsCorrect?.setValue(\r\n              response.MCQ_Choices[2]?.Is_Correct\r\n            );\r\n            this.threeIsCorrect = response.MCQ_Choices[2]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerFourId?.setValue(response.MCQ_Choices[3]?.Id);\r\n            this.FormCtrl.answerFour?.setValue(response.MCQ_Choices[3]?.Text);\r\n            this.FormCtrl.answerFourImage?.setValue(\r\n              response?.MCQ_Choices[3]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[3]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            //  this.FormCtrl.answerFourImage?.setValue(response.MCQ_Choices[3].Image);\r\n            //  this.answerFourFile.FileAsBase64 = response.MCQ_Choices[3].Image;\r\n            this.FormCtrl.answerFourIsCorrect?.setValue(\r\n              response.MCQ_Choices[3]?.Is_Correct\r\n            );\r\n            this.fourIsCorrect = response.MCQ_Choices[3]?.Is_Correct;\r\n          }\r\n\r\n          // console.log(\"answer 1\", this.oneIsCorrect);\r\n          // console.log(\"answer 2\", this.twoIsCorrect);\r\n          // console.log(\"answer 3\", this.threeIsCorrect);\r\n          // console.log(\"answer 4\", this.fourIsCorrect);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamQuestion(questionId: number) {\r\n    let confirmed = confirm(\"هل انت متأكد من الحذف\");\r\n    // console.log('questionId', questionId);\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .deleteExamQuestion<any>(questionId)\r\n        .subscribe((response) => {\r\n          // console.log('deleteResponse', response);\r\n          if (response.returnString === \"Done\") {\r\n            let toDeleteIndex = this.questionsInGrid.findIndex(\r\n              (q: any) => q.Id == questionId\r\n            );\r\n            this.questionsInGrid.splice(toDeleteIndex, 1);\r\n          } else this.toastr.info(response.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  importFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.FormCtrl.questionImage.setValue(file.FileAsBase64);\r\n        this.questionFile = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importOneFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerOneFile = file;\r\n        this.FormCtrl.answerOneImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importTwoFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerTwoFile = file;\r\n        this.FormCtrl.answerTwoImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importThreeFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerThreeFile = file;\r\n        this.FormCtrl.answerThreeImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importFourFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerFourFile = file;\r\n        this.FormCtrl.answerFourImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  // perfectAnswerAttach(event: any) {\r\n  //   this.uploadFileService.uploadFile(event).then((file) => {\r\n  //     setTimeout(() => {\r\n  //       this.perfectAnswerAttach_preview = file;\r\n  //       this.FormCtrl.perfect_answer_attach.setValue(file);\r\n  //     }, 100);\r\n  //   });\r\n  // }\r\n\r\n  // getAllUnitsBySublectId() {\r\n  //   this.examService\r\n  //     .getAllUnitsBySublectId<any[]>(this.subjectId)\r\n  //     .subscribe((results) => {\r\n  //       this.units = results;\r\n  //       // console.log('this.units', this.units);\r\n  //     });\r\n  // }\r\n\r\n  // getAllLessonsByUnitId() {\r\n  //   this.examService\r\n  //     .getAllLessonsByUnitId<any>(this.FormCtrl.unitId?.value)\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         this.lessions = response;\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  onSelectCorrect(answerNumber: number) {\r\n    console.log(\"answer is Correct\", answerNumber);\r\n    if (answerNumber === 0) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(0);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 1) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(1);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 2) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(2);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 3) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(3);\r\n    }\r\n  }\r\n\r\n  resetFileInputs() {\r\n    const FileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n    FileInputs.forEach((input: any) => {\r\n      input.value = null;\r\n    });\r\n    this.questionFile = null;\r\n    this.answerOneFile = null;\r\n    this.answerTwoFile = null;\r\n    this.answerThreeFile = null;\r\n    this.answerFourFile = null;\r\n  }\r\n  removeQuestionImg() {\r\n    this.FormCtrl.remove_image.setValue(true);\r\n    this.FormCtrl.questionImage.setValue(null);\r\n    this.questionFile = null;\r\n  }\r\n\r\n  answerOneRemove_image() {\r\n    this.FormCtrl.answerOneRemove_image.setValue(true);\r\n    this.FormCtrl.answerOneImage.setValue(null);\r\n    this.answerOneFile = null;\r\n  }\r\n\r\n  answerTwoRemove_image() {\r\n    this.FormCtrl.answerTwoRemove_image.setValue(true);\r\n    this.FormCtrl.answerTwoImage.setValue(null);\r\n    this.answerTwoFile = null;\r\n  }\r\n\r\n  answerThreeRemove_image() {\r\n    this.FormCtrl.answerThreeRemove_image.setValue(true);\r\n    this.FormCtrl.answerThreeImage.setValue(null);\r\n    this.FormCtrl.answerThreeFile = null;\r\n  }\r\n\r\n  answerFourRemove_image() {\r\n    this.FormCtrl.answerFourRemove_image.setValue(true);\r\n    this.FormCtrl.answerFourImage.setValue(null);\r\n    this.answerFourFile = null;\r\n  }\r\n}\r\n","<!-- <div>\r\n  <div class=\"btn btn-default\" (click)=\"onCancel()\">اغلاق</div>\r\n</div> -->\r\n<!-- <h1 mat-dialog-title>{{ \"labels.addSubQuestion\" | translate }}</h1> -->\r\n<mat-card-title>\r\n  <span>{{ \"labels.AddQuestion\" | translate }}</span>\r\n</mat-card-title>\r\n\r\n<div mat-dialog-content class=\"exam-model-box\">\r\n  <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.mainQuestion\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.mainQuestion\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!-- <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.QuestionType\" | translate }}\r\n          </mat-label>\r\n          <mat-select\r\n            formControlName=\"questionTypeId\"\r\n            (selectionChange)=\"questionTypeValidation()\"\r\n          > -->\r\n      <!-- <mat-option>\r\n              {{ \"General.Choose\" | translate }}\r\n            </mat-option> -->\r\n      <!-- <mat-option [value]=\"1\">\r\n              {{ \"labels.Article\" | translate }}\r\n            </mat-option>\r\n\r\n            <mat-option [value]=\"2\">\r\n              {{ \"labels.Mcq\" | translate }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              FormCtrl.questionTypeId?.invalid &&\r\n              (FormCtrl.questionTypeId?.touched || submitted)\r\n            \"\r\n          >\r\n            <span *ngIf=\"FormCtrl.questionTypeId?.errors?.required\">\r\n              {{ \"labels.MustChoosevalue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div> -->\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.questionMark\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.QuestionMark\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!--\r\n    <div class=\"col-md-6 col-12\" *ngIf=\"unitId == 0\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n        <mat-select\r\n          formControlName=\"unitId\"\r\n          (selectionChange)=\"getAllLessonsByUnitId()\"\r\n        >\r\n          <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n          <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n            {{ unit.unit_ar_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-12\" *ngIf=\"lessonId == 0\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n        <mat-select formControlName=\"lessionId\">\r\n          <mat-option>\r\n            {{ \"General.Choose\" | translate }}\r\n          </mat-option>\r\n          <mat-option *ngFor=\"let lesson of lessions\" [value]=\"lesson.id\">\r\n            {{ lesson.lesson_ar_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div> -->\r\n\r\n      <!-- question text -->\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.exam_question_text\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.question_ar_text\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!-- question text Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>{{ \"labels.question_ar_text\" | translate }} </mat-label>\r\n        <quill-editor\r\n          formControlName=\"exam_question_text\"\r\n          [placeholder]=\"'labels.question_ar_text' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <div class=\"col-12\">\r\n        <!-- Question Picture -->\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              name=\"questionImage\"\r\n              accept=\"image/*\"\r\n              (change)=\"importFile($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-1\" *ngIf=\"FormCtrl.questionImage.value\">\r\n            <button\r\n              mat-mini-fab\r\n              color=\"warn\"\r\n              class=\"mr-1\"\r\n              title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n              (click)=\"removeQuestionImg()\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-7 col-11\">\r\n            <div class=\"question-img\">\r\n              <img\r\n                class=\"img-fluid\"\r\n                [class.hideImg]=\"!FormCtrl.questionImage?.value\"\r\n                [src]=\"FormCtrl.questionImage?.value\"\r\n                class=\"coverPhoto\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Perfect Answer  -->\r\n      <!-- <div class=\"col-12\" *ngIf=\"FormCtrl.questionTypeId?.value == 1\">\r\n        <app-input\r\n          [control]=\"FormCtrl.questionPerfectAnswer\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.perfect_answer\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div> -->\r\n\r\n      <!--  perfect Answer Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>\r\n          {{ \"labels.perfect_answer\" | translate }}\r\n        </mat-label>\r\n        <quill-editor\r\n          formControlName=\"questionPerfectAnswer\"\r\n          [placeholder]=\"'labels.perfect_answer' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <!-- perfect answer attach-->\r\n      <!-- <div class=\"col-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.perfectAnswerAttach\" | translate }}\r\n            </mat-label>\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              accept=\"xlsx,.xls,image/*,audio/*,.pdf\"\r\n              (change)=\"perfectAnswerAttach($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-md-8 col-12\">\r\n            <div class=\"question-img\">\r\n              <iframe\r\n                [src]=\"FormCtrl.perfect_answer_attach.value | safe\"\r\n                width=\"100%\"\r\n                class=\"border-0 img-fluid\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n\r\n    <hr />\r\n\r\n    <ng-container *ngIf=\"FormCtrl.questionTypeId?.value == 2\" class=\"row\">\r\n      <!-- answer one -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerOneIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"0\"\r\n            [checked]=\"FormCtrl.answerOneIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(0)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (1)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerOne\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer  one Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (1) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerOne\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (1)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerOneImage\"\r\n                    (change)=\"importOneFile($event)\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-1\" *ngIf=\"FormCtrl.answerOneImage.value\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    class=\"mr-1\"\r\n                    title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n                    (click)=\"answerOneRemove_image()\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-md-7 col-11\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [class.hideImg]=\"!FormCtrl.answerOneImage?.value\"\r\n                      [src]=\"FormCtrl.answerOneImage?.value\"\r\n                      class=\"coverPhoto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Two -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerTwoIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"1\"\r\n            [checked]=\"FormCtrl.answerTwoIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(1)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (2)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerTwo\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer two Editor-->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (2) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerTwo\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (2)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerTwoImage\"\r\n                    (change)=\"importTwoFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-1\" *ngIf=\"FormCtrl.answerTwoImage.value\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    class=\"mr-1\"\r\n                    title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n                    (click)=\"answerTwoRemove_image()\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-md-7 col-11\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [class.hideImg]=\"!FormCtrl.answerTwoImage?.value\"\r\n                      [src]=\"FormCtrl.answerTwoImage?.value\"\r\n                      class=\"coverPhoto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Three -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerThreeIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"2\"\r\n            [checked]=\"FormCtrl.answerThreeIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(2)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (3)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerThree\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer three  Editor-->\r\n              <!--\r\n              <mat-label> {{ \"labels.AnswerText\" | translate }} (3) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerThree\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (3)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerThreeImage\"\r\n                    (change)=\"importThreeFile($event)\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-1\" *ngIf=\"FormCtrl.answerThreeImage.value\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    class=\"mr-1\"\r\n                    title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n                    (click)=\"answerThreeRemove_image()\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-md-7 col-11\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [class.hideImg]=\"!FormCtrl.answerThreeImage?.value\"\r\n                      [src]=\"FormCtrl.answerThreeImage?.value\"\r\n                      class=\"coverPhoto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Four -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerFourIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"3\"\r\n            [checked]=\"FormCtrl.answerFourIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(3)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (4)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerFour\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer four Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (4) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerFour\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (4)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerFourImage\"\r\n                    (change)=\"importFourFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-1\" *ngIf=\"FormCtrl.answerFourImage.value\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    class=\"mr-1\"\r\n                    title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n                    (click)=\"answerFourRemove_image()\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-md-7 col-11\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [class.hideImg]=\"!FormCtrl.answerFourImage?.value\"\r\n                      [src]=\"FormCtrl.answerFourImage?.value\"\r\n                      class=\"coverPhoto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </ng-container>\r\n\r\n    <mat-card-actions class=\"col-12\" align=\"end\">\r\n      <button\r\n        mat-raised-button\r\n        class=\"btn btn-warning bg-light-warning\"\r\n        *ngIf=\"questionId > 0\"\r\n        (click)=\"\r\n          myForm.reset(); questionId = 0; FormCtrl.questionTypeId.setValue(2)\r\n        \"\r\n      >\r\n        {{ \"General.Reset\" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-info bg-light-info\"\r\n        [disabled]=\"examGroupHeaderId == 0\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"questionId == 0\"\r\n      >\r\n        <i class=\"fa fa-plus\"></i>\r\n        {{ \"General.Add\" | translate }}\r\n      </button>\r\n      <!-- <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"resetFileInputs()\"\r\n      >\r\n        reset\r\n      </button> -->\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"onSubmit()\"\r\n        id=\"editQuestionButton\"\r\n        class=\"btn btn-info bg-light-info\"\r\n        *ngIf=\"questionId > 0\"\r\n      >\r\n        {{ \"General.Update\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n\r\n    <div class=\"col-md-12\">\r\n      <div class=\"full-wid-table\" style=\"overflow: hidden !important\">\r\n        <table\r\n          class=\"table table-striped table-hover table-full-width rtl\"\r\n          id=\"sotbmod\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>{{ \"labels.question_ar_text\" | translate }}</th>\r\n              <th>{{ \"labels.QuestionImage\" | translate }}</th>\r\n              <th>{{ \"labels.QuestionType\" | translate }}</th>\r\n              <th>­</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"addedExamQuestionsHolder\">\r\n            <tr id=\"ExamQuestion-2626853\" *ngFor=\"let ques of questionsInGrid\">\r\n              <td>{{ ques.ExamQuestId }}</td>\r\n              <td>\r\n                {{ ques.Text }}\r\n              </td>\r\n              <td>\r\n                <a\r\n                  *ngIf=\"ques.Image; else noImg\"\r\n                  [href]=\"ques.Image\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <img\r\n                    [src]=\"uploadFileService.previewPicture(ques.Image)\"\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                  />\r\n                  <!-- عرض -->\r\n                </a>\r\n                <!-- <span #noImg>لايوجد صورة</span> -->\r\n              </td>\r\n              <td>{{ ques.QuestionTypeAr }}</td>\r\n              <td>\r\n                <button\r\n                  (click)=\"getQuestionForEditByID(ques.ExamQuestId)\"\r\n                  mat-mini-fab\r\n                  color=\"primary\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n\r\n                <button\r\n                  (click)=\"removeExamQuestion(ques.ExamQuestId)\"\r\n                  mat-mini-fab\r\n                  color=\"warn\"\r\n                >\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-dialog-actions align=\"end\">\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"closeDialog.emit()\"\r\n        class=\"btn btn-warning bg-light-warning\"\r\n      >\r\n        {{ \"General.Close\" | translate }}\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n</div>\r\n\r\n<!-- <ngx-spinner></ngx-spinner> -->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-save-exam-dialog\",\r\n  templateUrl: \"./save-exam-dialog.component.html\",\r\n  styleUrls: [\"./save-exam-dialog.component.scss\"],\r\n})\r\nexport class SaveExamDialogComponent implements OnInit {\r\n  constructor(public dialogRef: MatDialogRef<SaveExamDialogComponent>) {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<p mat-dialog-title class=\"mb-2\">\r\n  <page-title title=\"Exam.saveExam?\"></page-title>\r\n\r\n  <i\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"fas fa-times-circle closeIcon float-right\"\r\n  ></i>\r\n</p>\r\n\r\n<mat-dialog-content>\r\n  <div class=\"sub-title\">\r\n    {{ \"Exam.youCanReturnAnyTimeAndEditOrAddQuestions\" | translate }}\r\n  </div>\r\n\r\n  <button class=\"orange-btn radius-btn w-100\" [mat-dialog-close]=\"true\">\r\n    <span class=\"text-btn\">\r\n      {{ \"General.Save\" | translate }}\r\n    </span>\r\n  </button>\r\n\r\n  <button class=\"dark-blue-btn radius-btn w-100\" [mat-dialog-close]=\"false\">\r\n    <span class=\"text-btn\">\r\n      {{ \"General.cancel\" | translate }}\r\n    </span>\r\n  </button>\r\n</mat-dialog-content>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { IReservationVM } from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-details\",\r\n  templateUrl: \"./reservation-details.component.html\",\r\n  styleUrls: [\"./reservation-details.component.scss\"],\r\n})\r\nexport class ReservationDetailsComponent implements OnInit {\r\n  reservation: IReservationVM;\r\n\r\n  constructor(\r\n    private reservationService: ReservationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    const reservationId = data.reservationId;\r\n    this.reservationService\r\n      .ReservationDetails(reservationId)\r\n      .subscribe((res: any) => {\r\n        this.reservation = res;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<h1 mat-dialog-title>{{ \"Reservation.ReservationDetails\" | translate }}</h1>\r\n<div mat-dialog-content>\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-striped m-0\" *ngIf=\"reservation\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ \"labels.Name\" | translate }}</th>\r\n          <th>{{ \"labels.Email\" | translate }}</th>\r\n          <th>{{ \"labels.Religion\" | translate }}</th>\r\n          <th>{{ \"labels.Gender\" | translate }}</th>\r\n          <th>{{ \"labels.EducationType\" | translate }}</th>\r\n          <th>{{ \"Reservation.AreaReservation\" | translate }}</th>\r\n          <th>{{ \"labels.branchName\" | translate }}</th>\r\n          <th>{{ \"labels.Hobbies\" | translate }}</th>\r\n          <th>{{ \"labels.Competitions\" | translate }}</th>\r\n          <th>{{ \"labels.Workshops\" | translate }}</th>\r\n          <th>{{ \"labels.SchoolName\" | translate }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ reservation?.Name }}</td>\r\n\r\n          <td>{{ reservation?.Email }}</td>\r\n\r\n          <td>{{ reservation?.Religion.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.Gender.gender_ar_name }}</td>\r\n\r\n          <td>{{ reservation?.EducationType.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.Area.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.CenterBranch }}</td>\r\n\r\n          <td>{{ reservation?.Hobbies }}</td>\r\n\r\n          <td>{{ reservation?.Competitions }}</td>\r\n\r\n          <td>{{ reservation?.Workshops }}</td>\r\n\r\n          <td>\r\n            {{ reservation?.SchoolName }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-striped m-0\" *ngIf=\"reservation\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ \"labels.GuardianJob\" | translate }}</th>\r\n          <th>{{ \"labels.FatherMobile\" | translate }}</th>\r\n          <th>{{ \"labels.FatherWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.MotherMobile\" | translate }}</th>\r\n          <th>{{ \"labels.MotherWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.StudentNumber\" | translate }}</th>\r\n          <th>{{ \"labels.StudentWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.HomeTelephone\" | translate }}</th>\r\n          <th>{{ \"labels.Address\" | translate }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ reservation?.GuardianJob }}</td>\r\n\r\n          <td>{{ reservation?.FatherMobile }}</td>\r\n\r\n          <td>{{ reservation?.FatherWhatsAppNumber.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.MotherMobile }}</td>\r\n\r\n          <td>{{ reservation?.MotherWhatsAppNumber }}</td>\r\n\r\n          <td>{{ reservation?.StudentNumber }}</td>\r\n\r\n          <td>{{ reservation?.StudentWhatsAppNumber }}</td>\r\n\r\n          <td>{{ reservation?.HomeTelephon }}</td>\r\n\r\n          <td>{{ reservation?.Address }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-button\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"btn btn-danger float-right\"\r\n  >\r\n    Close\r\n  </button>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Areas,\r\n  CenterBranchesVM,\r\n  EducationalDivisionsVM,\r\n  EducationTypesVM,\r\n  GendersVM,\r\n  IFileToUpload,\r\n  IGetReservationEditVM,\r\n  ISubmitReservationEditVM,\r\n  ReligionsVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-edit\",\r\n  templateUrl: \"./reservation-edit.component.html\",\r\n  styleUrls: [\"./reservation-edit.component.scss\"],\r\n})\r\nexport class ReservationEditComponent implements OnInit {\r\n  reservationId: number;\r\n  EduCompId: any;\r\n  functionId: any;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  ProfilePicture_Path: any;\r\n  ProfilePicture: any;\r\n  Religions: ReligionsVM[];\r\n  Genders: GendersVM[];\r\n  EducationalDivisions: EducationalDivisionsVM[];\r\n  EducationTypes: EducationTypesVM[];\r\n  Areas: Areas[];\r\n  CenterBranches: CenterBranchesVM[];\r\n\r\n  constructor(\r\n    private reservationServ: ReservationService,\r\n    private fb: FormBuilder,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private authserv: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.reservationId = Number(params.get(\"reservationId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.getReservationEdit(this.reservationId);\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [this.reservationId, [Validators.required]],\r\n      Id: [\"\", [Validators.required]],\r\n      UserName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Religion: [\"\", [Validators.required]],\r\n      Gender: [\"\", [Validators.required]],\r\n      EducationTypeId: [\"\", [Validators.required]],\r\n      CenterBranchId: [\"\", [Validators.required]],\r\n      SchoolName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      EducationalDivision: [\"\", [Validators.required]],\r\n      GuardianJob: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Area: [\"\", [Validators.required]],\r\n      Address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      StudentNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      StudentWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      FatherMobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      FatherWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      MotherMobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      MotherWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      HomeTelephone: [\r\n        \"\",\r\n        [Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/)],\r\n      ],\r\n      SentviewId: [\"\", [Validators.required]],\r\n      currentYear: [\"\", [Validators.required]],\r\n      EduCompId: [\"\", [Validators.required]],\r\n      City: [\"\"],\r\n      competitions: [\"\"],\r\n      Hobbies: [\"\"],\r\n      workshops: [\"\"],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.FormCtrls?.EduCompIdCtrl.setValue(e.EduCompId);\r\n    });\r\n  }\r\n\r\n  getReservationEdit(reservationId: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getReservationEdit<IGetReservationEditVM>(reservationId, this.EduCompId)\r\n      .subscribe((res) => {\r\n        // console.log(\"ReservationEditr\", res);\r\n        this.myForm.patchValue(res.Reservation);\r\n        this.Religions = res.Religion;\r\n        this.Genders = res.Gender;\r\n        this.EducationalDivisions = res.EducationalDivision;\r\n        this.EducationTypes = res.EducationTypeId;\r\n        this.Areas = res.Area;\r\n        this.ProfilePicture = res.Reservation?.ProfilePicture_Path;\r\n        this.ProfilePicture_Path = `mozakretyapi${res.Reservation?.ProfilePicture_Path}`;\r\n        this.returnBranchesByEducTypeId(res.Reservation?.EducationTypeId);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SubmitReservation() {\r\n    if (!(this.ProfilePicture || this.ProfilePicture_Path)) {\r\n      this.toaster.warning(\"يجب اختيار صوره شخصية\");\r\n      return;\r\n    }\r\n\r\n    let data: ISubmitReservationEditVM = {\r\n      Reservation: this.myForm.value,\r\n      profilePicture: this.ProfilePicture || this.ProfilePicture_Path,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationServ.SubmitReservationEdit(data).subscribe((res: any) => {\r\n        //  console.log(res);\r\n        if (res.returnValue == 200 && res.returnString == \"Success\") {\r\n          this.toaster.success(\"تم تغير البيانات بنجاح\");\r\n        } else {\r\n          this.toaster.error(res.returnString, res.returnValue);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  returnBranchesByEducTypeId(typeId: any) {\r\n    this.CenterBranches = [];\r\n    this.reservationServ\r\n      .returnBranchesByEducTypeId<CenterBranchesVM[]>(typeId, this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CenterBranches = res;\r\n      });\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.ProfilePicture_Path = fileReder;\r\n        this.ProfilePicture = data;\r\n      };\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"Reservation.ReservationData\" | translate }} -\r\n      {{ FormCtrls.UserName?.value }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"Reservation.ReservationData\" | translate }}\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"UserName\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.UserName.invalid &&\r\n                    (FormCtrls.UserName.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.UserName.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.UserName.errors?.bigZero\">\r\n                    {{ \"labels.MustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Religion\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"Religion\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let Religion of Religions\"\r\n                    [value]=\"Religion.Id\"\r\n                  >\r\n                    {{ Religion.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Religion.invalid &&\r\n                    (FormCtrls.Religion.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Religion.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-2 col-12\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                mat-raised-button\r\n                (click)=\"fileInput.click()\"\r\n              >\r\n                {{ \"labels.ProfilePicture\" | translate }}\r\n              </button>\r\n              <input\r\n                hidden\r\n                (change)=\"onChange($event)\"\r\n                #fileInput\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                id=\"file\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"col-md-2 col-12\">\r\n              <div class=\"media\">\r\n                <img\r\n                  class=\"rounded mr-3\"\r\n                  [src]=\"ProfilePicture_Path\"\r\n                  width=\"70\"\r\n                  height=\"70\"\r\n                  alt=\"avatar\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Gender\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"Gender\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }} </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let Gender of Genders\"\r\n                    [value]=\"Gender.gender_id\"\r\n                  >\r\n                    {{ Gender.gender_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Gender.invalid &&\r\n                    (FormCtrls.Gender.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Gender.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.EducationType\" | translate }}\r\n                </mat-label>\r\n                <mat-select\r\n                  formControlName=\"EducationTypeId\"\r\n                  (selectionChange)=\"\r\n                    returnBranchesByEducTypeId(FormCtrls.EducationTypeId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let EducationType of EducationTypes\"\r\n                    [value]=\"EducationType.Id\"\r\n                  >\r\n                    {{ EducationType.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.EducationTypeId.invalid &&\r\n                    (FormCtrls.EducationTypeId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.EducationTypeId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.CenterBranch\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"CenterBranchId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }} </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let CenterBranche of CenterBranches\"\r\n                    [value]=\"CenterBranche.Id\"\r\n                  >\r\n                    {{ CenterBranche.Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.CenterBranchId.invalid &&\r\n                    (FormCtrls.CenterBranchId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.CenterBranchId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.SchoolName\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"SchoolName\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.SchoolName.invalid &&\r\n                    (FormCtrls.SchoolName.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.SchoolName.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.SchoolName.errors?.whiteSpace\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.EducationalDivision\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"EducationalDivision\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let EducationalDivision of EducationalDivisions\"\r\n                    [value]=\"EducationalDivision.Id\"\r\n                  >\r\n                    {{ EducationalDivision.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.EducationalDivision.invalid &&\r\n                    (FormCtrls.EducationalDivision.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.EducationalDivision.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.GuardianJob\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"GuardianJob\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.GuardianJob.invalid &&\r\n                    (FormCtrls.GuardianJob.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.GuardianJob.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.GuardianJob.errors?.whiteSpace\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.StudentNumber\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"StudentNumber\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.StudentNumber.invalid &&\r\n                    (FormCtrls.StudentNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.StudentNumber.errors?.maxlength ||\r\n                      FormCtrls.StudentNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.StudentWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"StudentWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.StudentWhatsAppNumber.invalid &&\r\n                    (FormCtrls.StudentWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.required\"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.StudentWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.StudentWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.HomeTelephone\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"HomeTelephone\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.HomeTelephone.invalid &&\r\n                    (FormCtrls.HomeTelephone.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.HomeTelephone.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.FatherMobile\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"FatherMobile\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FatherMobile.invalid &&\r\n                    (FormCtrls.FatherMobile.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FatherMobile.errors?.maxlength ||\r\n                      FormCtrls.FatherMobile.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.FatherWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"FatherWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FatherWhatsAppNumber.invalid &&\r\n                    (FormCtrls.FatherWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FatherWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.FatherWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.MotherMobile\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"MotherMobile\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.MotherMobile.invalid &&\r\n                    (FormCtrls.MotherMobile.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.MotherMobile.errors?.maxlength ||\r\n                      FormCtrls.MotherMobile.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.MotherWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"MotherWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.MotherWhatsAppNumber.invalid &&\r\n                    (FormCtrls.MotherWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.MotherWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.MotherWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"Reservation.AreaReservation\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"Area\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let area of Areas\" [value]=\"area.Id\">\r\n                    {{ area.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Area.invalid &&\r\n                    (FormCtrls.Area.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Area.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.Address\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"Address\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Address.invalid &&\r\n                    (FormCtrls.Address.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Address.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.Address.errors?.whiteSpace\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitReservation()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<!-- <ngx-spinner></ngx-spinner> -->\r\n","import { NgxSpinnerModule, NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Status,\r\n  city,\r\n  StudentGroupVM,\r\n  IReservationVM,\r\n  IGetReservationListVM,\r\n  ISearchReservationVM,\r\n  IAreaVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ReservationDetailsComponent } from \"../reservation-details/reservation-details.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-index\",\r\n  templateUrl: \"./reservation-index.component.html\",\r\n  styleUrls: [\"./reservation-index.component.scss\"],\r\n})\r\nexport class ReservationIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  // Branches: CenterBranchesVM[];\r\n  //  Dates: any;\r\n  Status: Status[];\r\n  Cities: city[];\r\n  Areas: IAreaVM[];\r\n  Reservations: IReservationVM[];\r\n  groups: StudentGroupVM[];\r\n  itemsCount: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"accountName\",\r\n    \"code\",\r\n    \"branch\",\r\n    \"mobile\",\r\n    \"status\",\r\n    \"group\",\r\n    \"discount\",\r\n    \"date\",\r\n    \"note\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IReservationVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private reservationService: ReservationService,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.myForm = this.fb.group({\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      branchId: [],\r\n      email: [\"\", Validators.email],\r\n      name: [\"\"],\r\n      mobile: [\"\"],\r\n      code: [\"\"],\r\n      groupId: [\"\"],\r\n      statusId: [\"\"],\r\n      cityId: [\"\"],\r\n      currentYear: [1],\r\n      page: [],\r\n    });\r\n\r\n    //this.returnBranchesByEduCompId();\r\n    this.getGroupsByEduCompId();\r\n    this.returnStatus();\r\n    this.getArea();\r\n    this.getReservationsList(1);\r\n  }\r\n\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchId\");\r\n  }\r\n\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  get currentYearCtrl() {\r\n    return this.myForm.get(\"currentYear\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n      this.branchIdCtrl.setValue(e.branchId);\r\n      this.getReservationsList(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getReservationsList(p) {\r\n    this.page?.setValue(p);\r\n\r\n    // if (!this.branchIdCtrl.value || this.branchIdCtrl.value == \"null\") {\r\n    //   this.toaster.warning(\"You Must Select Branch\");\r\n    //   return;\r\n    // }\r\n\r\n    if (!this.EduCompIdCtrl.value || this.EduCompIdCtrl.value == \"null\") {\r\n      this.toaster.warning(\"You Must Select Center\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationService\r\n        .getReservationsList<ISearchReservationVM, IGetReservationListVM>(\r\n          this.myForm.value\r\n        )\r\n        .subscribe((res: any) => {\r\n          //console.log(\"Reservations\", res);\r\n          this.Reservations = res.list;\r\n          this.dataSource = new MatTableDataSource(res.list);\r\n          this.itemsCount = res.itemsCount;\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getGroupsByEduCompId() {\r\n    this.SubjectMaterialsService.getGroupsByEduCompId<StudentGroupVM[]>(\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.groups = res.lstEduCompGroups;\r\n      }\r\n    });\r\n  }\r\n\r\n  returnStatus() {\r\n    this.reservationService.returnStatus<Status[]>().subscribe((res) => {\r\n      this.Status = res;\r\n    });\r\n  }\r\n\r\n  // returnCities() {\r\n  //   this.reservationService.returnCities<city[]>().subscribe((res) => {\r\n  //     this.Cities = res;\r\n  //   });\r\n  // }\r\n\r\n  getArea() {\r\n    this.reservationService.getArea<IAreaVM[]>().subscribe((res) => {\r\n      this.Areas = res;\r\n    });\r\n  }\r\n\r\n  ReservationDetailsDialog(reservationId: number): void {\r\n    this.dialog\r\n      .open(ReservationDetailsComponent, {\r\n        data: {\r\n          reservationId: reservationId,\r\n        },\r\n        minWidth: \"90vw\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe();\r\n  }\r\n\r\n  Reset() {\r\n    this.myForm.reset();\r\n    this.EduCompIdCtrl.setValue(this.EduCompId);\r\n    this.branchIdCtrl.setValue(this.branchId);\r\n    this.currentYearCtrl.setValue(1);\r\n  }\r\n\r\n  // returnBranchesByEduCompId() {\r\n  //   this.reservationService\r\n  //     .returnBranchesByEduCompId<CenterBranchesVM[]>(this.EduCompId)\r\n  //     .subscribe((res: any) => {\r\n  //       this.Branches = res;\r\n  //     });\r\n  // }\r\n\r\n  // Return Avaliable Dates By BranchId\r\n  // GetAvaliableDatesByBranchId(branchId: any) {\r\n  //   if (branchId) {\r\n  //     this.reservationServ\r\n  //       .GetAvaliableDatesByBranchId(branchId, true, true)\r\n  //       .subscribe((res: any) => {\r\n  //         this.Dates = res;\r\n  //       });\r\n  //   } else {\r\n  //     this.Dates = [];\r\n  //   }\r\n  // }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"name\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.CenterCode\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"code\" formControlName=\"code\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label\r\n                      >{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let branch of Branches\"\r\n                        [value]=\"branch.Id\"\r\n                      >\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{ group.groupName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"statusId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let status of Status\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{ status.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Reservation.AreaReservation\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"cityId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option *ngFor=\"let area of Areas\" [value]=\"area.Id\">\r\n                        {{ area.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group formControlName=\"currentYear\" class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button [value]=\"0\">\r\n                        {{ \"labels.CurrentYear\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button [value]=\"1\"\r\n                        >{{ \"labels.NextYear\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getReservationsList(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n\r\n        <button mat-raised-button class=\"btn btn-warning\" (click)=\"Reset()\">\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ReservationList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- accountName Column -->\r\n            <ng-container matColumnDef=\"accountName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.AccountName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.UserName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CenterCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CenterCode }}</td>\r\n            </ng-container>\r\n\r\n            <!-- branch Column -->\r\n            <ng-container matColumnDef=\"branch\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CenterBranchName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.StudentNumber }}</td>\r\n            </ng-container>\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Status?.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let reservation\">\r\n                <span *ngFor=\"let group of reservation?.Group\">\r\n                  - {{ group.studyingGroup?.groupName }} <br />\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- discount Column -->\r\n            <ng-container matColumnDef=\"discount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.Discount?.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- date Column -->\r\n            <ng-container matColumnDef=\"date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.ReservationDate | NewDate }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Status?.Notes }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let reservation\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    routerLink=\"/dashboard/reservation/edit-reservation/{{\r\n                      reservation?.Id\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/reservation/reservation-status/{{\r\n                      reservation?.Id\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Status'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Change Status\"\r\n                  >\r\n                    <i class=\"ft-settings font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Discount'\"\r\n                    routerLink=\"/dashboard/reservation/student-discount/{{\r\n                      reservation?.Status?.userId\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Change Discount\"\r\n                  >\r\n                    <i class=\"fa fa-money font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                  <a\r\n                    (click)=\"ReservationDetailsDialog(reservation.Id)\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Details'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Details\"\r\n                  >\r\n                    <i class=\"ft-alert-circle font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getReservationsList($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Status,\r\n  StudentStatusListVM,\r\n  StudentGroupVM,\r\n  StatusReasons,\r\n  CenterBranchesVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-status\",\r\n  templateUrl: \"./reservation-status.component.html\",\r\n  styleUrls: [\"./reservation-status.component.scss\"],\r\n})\r\nexport class ReservationStatusComponent implements OnInit {\r\n  reservationId: number;\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: any;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  AcceptReservation: any;\r\n  userName: string = \"\";\r\n  itemsCount: any;\r\n  statuses: Status[];\r\n  studyingGroups: StudentGroupVM[];\r\n  Reasons: StatusReasons[];\r\n  CenterBranches: CenterBranchesVM[];\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get Id() {\r\n    return this.myForm.get(\"EduCompUser_Status.Id\");\r\n  }\r\n\r\n  get statusId() {\r\n    return this.myForm.get(\"EduCompUser_Status.statusId\");\r\n  }\r\n\r\n  get groupId() {\r\n    return this.myForm.get(\"EduCompUser_Status.groupId\");\r\n  }\r\n\r\n  get note() {\r\n    return this.myForm.get(\"EduCompUser_Status.note\");\r\n  }\r\n\r\n  get EduCompUserId() {\r\n    return this.myForm.get(\"EduCompUser_Status.EduCompUserId\");\r\n  }\r\n\r\n  get statusReasonId() {\r\n    return this.myForm.get(\"EduCompUser_Status.statusReasonId\");\r\n  }\r\n\r\n  get CenterBranchId() {\r\n    return this.myForm.get(\"EduCompUser_Status.CenterBranchId\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"code\",\r\n    \"status\",\r\n    \"reason\",\r\n    \"group\",\r\n    \"from\",\r\n    \"to\",\r\n    \"note\",\r\n  ];\r\n  dataSource: MatTableDataSource<StudentStatusListVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private reservationServ: ReservationService,\r\n    private toaster: ToastrService,\r\n    private authservice: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.reservationId = Number(params.get(\"reservationId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authservice.getEduCompId();\r\n    this.branchId = this.authservice.getBranchId();\r\n    this.getStudentStatus(this.reservationId, this.EduCompId);\r\n    this.returnBranchesByEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      EduCompUser_Status: this.fb.group({\r\n        Id: [\"\", Validators.required],\r\n        statusId: [\"\", Validators.required],\r\n        groupId: [\"\"],\r\n        note: [\"\"],\r\n        EduCompUserId: [\"\"],\r\n        statusReasonId: [\"\"],\r\n        CenterBranchId: [\"\"],\r\n      }),\r\n      studentUserId: [\"\", Validators.required],\r\n      Code: [\"\"],\r\n      reserveId: [\"\"],\r\n      EduCompId: [\"\"],\r\n      AcceptReservation: [\"\"],\r\n    });\r\n\r\n    this.FormCtrls.AcceptReservation?.setValue(this.AcceptReservation);\r\n    this.FormCtrls.EduCompId?.setValue(this.EduCompId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authservice.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentStatus(this.reservationId, e.EduCompId);\r\n      this.EduCompUserId.setValue(e.EduCompId);\r\n    });\r\n\r\n    this.authservice.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n      this.CenterBranchId.setValue(e.branchId);\r\n    });\r\n\r\n    this.dataSource.paginator! = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getStudentStatus(reservationId: any, EduCompId: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .GetStudentStatus(reservationId, EduCompId)\r\n      .subscribe((res: any) => {\r\n        // console.log('GetStudentStatus', res);\r\n        this.getReasonsByStatusId(res.EduCompUser_Status.statusId);\r\n\r\n        this.statuses = res.statuses;\r\n        this.studyingGroups = res.studyingGroups;\r\n        this.myForm.patchValue(res);\r\n        this.FormCtrls.studentUserId.setValue(res.studentUserId);\r\n        this.userName = res.userName;\r\n        this.FormCtrls.AcceptReservation?.setValue(this.AcceptReservation);\r\n        this.ReservationStatusPaging(1);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SubmitReservationStatus(event: any) {\r\n    this.CenterBranchId.setValue(this.branchId);\r\n\r\n    if (!this.CenterBranchId?.value) {\r\n      this.toaster.warning(\"يجب اختيار فرع\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      event.target.disabled = true;\r\n      this.spinner.show();\r\n      this.reservationServ\r\n        .SubmitReservationStatus(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          event.target.disabled = false;\r\n          if (res.returnValue == 200 && res.returnString == \"Success\") {\r\n            this.toaster.success(\"تم حفظ التغيرات بنجاح\");\r\n            this.ReservationStatusPaging(1);\r\n            this.getStudentStatus(this.reservationId, this.EduCompId); //retrieving the latest EduCompUserStatus Id\r\n          } else {\r\n            this.toaster.error(res.returnString, res.returnValue);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  ReservationStatusPaging(page: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .ReservationStatusPaging(page, this.EduCompUserId?.value)\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource(res.list);\r\n        this.itemsCount = res.itemsCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getReasonsByStatusId(StatusId: any) {\r\n    this.Reasons = [];\r\n    this.statusReasonId?.setValue(\"\");\r\n    if (StatusId) {\r\n      this.reservationServ\r\n        .getReasonsByStatusId<StatusReasons[]>(StatusId)\r\n        .subscribe((res) => {\r\n          this.Reasons = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  returnBranchesByEduCompId() {\r\n    this.CenterBranches = [];\r\n    this.reservationServ\r\n      .returnBranchesByEduCompId<CenterBranchesVM[]>(this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CenterBranches = res;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"labels.StudentStatusEdit\" | translate }} - {{ userName }}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"labels.StudentStatusEdit\" | translate }}\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" [value]=\"userName\" readonly=\"\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.CenterCode\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"Code\" formControlName=\"Code\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <ng-container formGroupName=\"EduCompUser_Status\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                  <mat-select\r\n                    formControlName=\"statusId\"\r\n                    (selectionChange)=\"getReasonsByStatusId(statusId?.value)\"\r\n                  >\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let status of statuses\"\r\n                      [value]=\"status.Id\"\r\n                    >\r\n                      {{ status.Ar_Name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                  <mat-select formControlName=\"groupId\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let group of studyingGroups\"\r\n                      [value]=\"group.Id\"\r\n                    >\r\n                      {{ group.groupName }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div\r\n                class=\"col-md-4 col-12\"\r\n                *ngIf=\"\r\n                  statusId?.value == 2 ||\r\n                  statusId?.value == 4 ||\r\n                  statusId?.value == 5\r\n                \"\r\n              >\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Reason\" | translate }} </mat-label>\r\n                  <mat-select formControlName=\"statusReasonId\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let reason of Reasons\"\r\n                      [value]=\"reason.Id\"\r\n                    >\r\n                      {{ reason.reasonText }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-8\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                  <textarea matInput type=\"text\" formControlName=\"note\">\r\n                  </textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitReservationStatus($event)\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.StudentStatus\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CenterCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Status?.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- reason Column -->\r\n            <ng-container matColumnDef=\"reason\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Reason\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.reasonText }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.groupName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- from Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let data\">\r\n                {{ data?.FromDate | NewDate }} {{ data?.FromDate | Time }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- to Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let data\">\r\n                {{ data?.ToDate | NewDate }} {{ data?.ToDate | Time }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Note }}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"ReservationStatusPaging($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- <ngx-spinner></ngx-spinner> -->\r\n","import { ManageViewsService } from \"./../../../services/Admin/manage-views.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  CustomDiscountDropMV,\r\n  IStudentCustomDiscountsMV,\r\n  StudentCustomDiscountsListMV,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-student-discount\",\r\n  templateUrl: \"./student-discount.component.html\",\r\n  styleUrls: [\"./student-discount.component.scss\"],\r\n})\r\nexport class StudentDiscountComponent implements OnInit {\r\n  userId: any;\r\n  functionId: any;\r\n  EduCompId: any;\r\n  myForm!: FormGroup;\r\n  searchForm!: FormGroup;\r\n  userName: string = \" \";\r\n  CustomDiscountList: CustomDiscountDropMV[];\r\n  // StudentCustomDiscountsList: StudentCustomDiscountsListMV[];\r\n\r\n  displayedColumns: string[] = [\"#\", \"name\", \"discount\", \"teacher\", \"note\"];\r\n  dataSource: MatTableDataSource<StudentCustomDiscountsListMV>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private reservationServ: ReservationService,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private authservice: AuthService,\r\n    private ManageViewsService: ManageViewsService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // this.route.paramMap.subscribe((params) => {\r\n    //   this.userId = params.get(\"userId\");\r\n    // });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authservice.getEduCompId();\r\n    // this.getStudentCustomDiscount();\r\n    this.getCustomDiscount();\r\n    //  this.getStudentCustomDiscountsList();\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [this.userId, Validators.required],\r\n      customDiscountId: [\"\", Validators.required],\r\n      note: [\"\"],\r\n    });\r\n  }\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.authservice.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getCustomDiscount();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.userId = res.userId;\r\n        this.getStudentCustomDiscount();\r\n        this.getStudentCustomDiscountsList();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  updateStudentCustomDiscount() {\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationServ\r\n        .updateStudentCustomDiscount(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          this.getStudentCustomDiscountsList();\r\n          this.toaster.success(\"تم التغيير\");\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getStudentCustomDiscount() {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getStudentCustomDiscount<IStudentCustomDiscountsMV>(this.userId)\r\n      .subscribe((res) => {\r\n        console.log(\"getStudentCustomDiscount\", res);\r\n        if (res != null) {\r\n          this.userName = res.User.ar_name;\r\n          this.FormCtrls.userId.setValue(res.User.user_ID);\r\n          this.FormCtrls.customDiscountId.setValue(res.Discount?.Id || \"\");\r\n          this.FormCtrls.note.setValue(res.note);\r\n        } else {\r\n          this.toaster.warning(\"Student not found\");\r\n          this.userName = \"\";\r\n          this.myForm.reset();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getStudentCustomDiscountsList() {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getStudentCustomDiscountsList<StudentCustomDiscountsListMV[]>(\r\n        this.userId\r\n      )\r\n      .subscribe((res) => {\r\n        this.dataSource = new MatTableDataSource(res);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getCustomDiscount() {\r\n    this.reservationServ\r\n      .getCustomDiscount<CustomDiscountDropMV[]>(this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CustomDiscountList = res;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"labels.UpdateDiscount\" | translate }} - {{ userName }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.SearchStudent\" | translate }}\r\n        <!-- <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button> -->\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <!--\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"labels.UpdateDiscount\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" [value]=\"userName\" readonly=\"\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.DiscountType\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"customDiscountId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let CustomDiscount of CustomDiscountList\"\r\n                    [value]=\"CustomDiscount?.Id\"\r\n                  >\r\n                    {{ CustomDiscount.PreviewName }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                <textarea matInput type=\"text\" formControlName=\"note\">\r\n                </textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"updateStudentCustomDiscount()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"this.dataSource?.data?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Discount\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.UserDetails?.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- discount Column -->\r\n            <ng-container matColumnDef=\"discount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.CustomDiscountDetails?.Ar_Name }} -\r\n                {{ ele?.CustomDiscountDetails?.Amount }} %\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- teacher Column -->\r\n            <ng-container matColumnDef=\"teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Teacher }}</td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.note }}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            >>\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- <ngx-spinner></ngx-spinner> -->\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { SearchStudentsService } from \"app/admin/services/Admin/searchStudents.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport {\r\n  studyingGroupsDropVM,\r\n  statutsDropVM,\r\n  student,\r\n} from \"app/shared/models/general/general\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { studentVM } from \"app/admin/models/admin/student-group\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\n@Component({\r\n  selector: \"app-students-index\",\r\n  templateUrl: \"./students-index.component.html\",\r\n  styleUrls: [\"./students-index.component.scss\"],\r\n})\r\nexport class StudentsIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  functionId: number;\r\n  groups: studyingGroupsDropVM[] = [];\r\n  Statuts: statutsDropVM[] = [];\r\n\r\n  students: student[] = [];\r\n  myForm!: FormGroup;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"name\",\r\n    \"code\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<studentVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  userId: any = null;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private SearchStudentsService: SearchStudentsService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private authserv: AuthService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // route.queryParamMap.subscribe((params) => {\r\n    //   this.functionId = Number(params.get(\"functionId\"));\r\n    //   if (this.functionId) {\r\n    //     this.authserv\r\n    //       .getUserRowFunctions(this.functionId)\r\n    //       .subscribe((res: any) => {\r\n    //         if (res) {\r\n    //           this.rowFunctions = res;\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      queryStringEm: [\"\", Validators.email],\r\n      queryStringCo: [\"\"],\r\n      queryStringPhoneNumber: [\"\"],\r\n      queryStringMozakretyCode: [\"\"],\r\n      statusId: [\"\"],\r\n      studyingGroup: [\"\"],\r\n      page: [\"\"],\r\n    });\r\n    //this.getGroupsByEduCompId();\r\n    this.getStudentsByEduCompId(1);\r\n    this.getStudentGroupsAndStatuts();\r\n  }\r\n\r\n  //Get Students ByEduCompId\r\n  getStudentsByEduCompId(p: number) {\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    this.p = p;\r\n    this.spinner.show();\r\n    this.SearchStudentsService.getStudentsByEduCompId(\r\n      this.EduCompId,\r\n      this.myForm.value\r\n    ).subscribe((res: any) => {\r\n      console.log(\"getStudents\", res);\r\n      this.students = res.lists;\r\n      console.log(\"hello\", res.lists);\r\n      this.dataSource = new MatTableDataSource(res.lists);\r\n      this.itemsCount = res.totalCount;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //Get Students ByEduCompId\r\n  getStudentGroupsAndStatuts() {\r\n    this.spinner.show();\r\n    this.SearchStudentsService.getStudentGroupsAndStatuts(\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      this.groups = res.studyingGroups;\r\n      this.Statuts = res.status;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentGroupsAndStatuts();\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.getStudentsByEduCompId(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  deleteStudent(user_ID: number) {\r\n    let confirmed = confirm(\"Are you sure?\");\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.SearchStudentsService.deleteStudent(\r\n        this.EduCompId,\r\n        user_ID\r\n      ).subscribe((res: any) => {\r\n        console.log(\"deleteStudent\", res);\r\n        if (res.returnValue == 1) {\r\n          let i = this.students.findIndex((e) => e.user_ID == user_ID);\r\n          console.log(i);\r\n          this.students.splice(i, 1);\r\n          this.toastr.success(\"تم الحذف\");\r\n        } else console.log(\"Error:\", res);\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getUserId(userId: any) {\r\n    this.userId = userId;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"queryStringEm\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"queryStringPhoneNumber\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.MozakrtyCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"code\"\r\n                      formControlName=\"queryStringMozakretyCode\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.CenterCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"code\"\r\n                      formControlName=\"queryStringCo\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{ group.groupName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"statusId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let status of Statuts\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{ status.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getStudentsByEduCompId(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Students\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                <a\r\n                  routerLink=\"/dashboard/reservation/balance-details/{{\r\n                    student?.user_ID\r\n                  }}\"\r\n                  [queryParams]=\"{ functionId: functionId }\"\r\n                  class=\"success p-0\"\r\n                  matTooltip=\"رصيد الطالب \"\r\n                >\r\n                  <i class=\"fa fa-money font-medium-3 mr-2\"></i>\r\n                </a>\r\n                <ng-container *ngFor=\"let fun of rowFunctions\"> </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getStudentsByEduCompId($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {LanguageService} from \"app/shared/services/language.service\";\r\nimport {\r\n  IDepartmentModel,\r\n  IDepartmentViewModel,\r\n} from \"app/admin/models/setup/department\";\r\nimport {Component, OnInit, ViewChild, ElementRef, Input} from \"@angular/core\";\r\nimport {DepartmentService} from \"app/admin/services/setup/department.service\";\r\nimport {FormGroup, FormBuilder, Validators} from \"@angular/forms\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {DeleteDialogComponent} from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {CustomeValidator} from \"app/shared/validators/customeValid.validator\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {defaultRes, IRowFunctionVM} from \"app/shared/models/general/general\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {ResMessage} from \"app/shared/enums/res-message\";\r\n\r\n@Component({\r\n  selector: \"app-department\",\r\n  templateUrl: \"./department.component.html\",\r\n  styleUrls: [\"./department.component.scss\"],\r\n})\r\nexport class DepartmentComponent implements OnInit {\r\n  @Input() showAddOnly: boolean = false;\r\n  departments: IDepartmentModel[];\r\n  myForm: FormGroup;\r\n  displayedColumns: string[] = [\"en_name\", \"ar_name\", \"action\"];\r\n  dataSource: MatTableDataSource<IDepartmentModel>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  submitted: boolean = false;\r\n  isLoaded: boolean = false;\r\n  // @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  constructor(\r\n    private departmentService: DepartmentService,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllDepartments(this.curPage);\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllDepartments(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllDepartments(page: number) {\r\n    this.curPage = page;\r\n    this.isLoaded = false;\r\n    this.departmentService\r\n      .getAllDepartments<IDepartmentViewModel>(page, this.EduCompId)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.depratmentsList);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n          this.isLoaded = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let data = {} as IDepartmentModel;\r\n      data.id = this.FormCtrls.id.value;\r\n      data.ar_name = this.FormCtrls.ar_name.value;\r\n      data.en_name = this.FormCtrls.en_name.value;\r\n      data.EduCompId = this.EduCompId;\r\n\r\n      this.spinner.show();\r\n      if (data.id == 0) this.addDepartment(data);\r\n      else this.updateDepartment(data, data.id);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  addDepartment(data: IDepartmentModel) {\r\n    this.departmentService.addDepartment(data).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.getAllDepartments(1); // first page after add\r\n        this.dataSource.paginator = this.paginator;\r\n        this.toastr.success(\"General.AddSuccessfully\");\r\n        this.clearForm();\r\n      } else this.toastr.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  updateDepartment(data: IDepartmentModel, id: number) {\r\n    this.departmentService.editDepartment(data, id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.getAllDepartments(this.curPage); // current page after update\r\n        this.toastr.success(\"General.UpdateSuccessfully\");\r\n        this.clearForm();\r\n      } else this.toastr.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //start edit\r\n  getDepartmentById(department: IDepartmentModel) {\r\n    this.myForm.patchValue(department);\r\n  }\r\n\r\n  // start delete\r\n  deleteDepartment(department: IDepartmentModel) {\r\n    this.spinner.show();\r\n    this.departmentService\r\n      .deleteDepartment(department.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getAllDepartments(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getAllDepartments(this.curPage);\r\n          }\r\n          if (department.id == this.FormCtrls.id.value) this.clearForm();\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(department: IDepartmentModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? department.ar_name ?? department.en_name\r\n            : department.en_name ?? department.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteDepartment(department);\r\n      });\r\n  }\r\n\r\n  // end delete\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n\r\n  getDataFromHR() {\r\n    this.spinner.show();\r\n    this.departmentService.getDataFromHR(this.EduCompId)\r\n      .subscribe((res: defaultRes | any) => {\r\n        this.spinner.hide();\r\n        if (res.List) {\r\n          this.getAllDepartments(1);\r\n          this.toastr.success('copyHrSuccess');\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- <div class=\"row\"> -->\r\n<!--   <div class=\"col-12\"> -->\r\n<!--     <mat-card> -->\r\n<!--       <mat-card-title *ngIf=\"FormCtrls.id.value == 0\"> -->\r\n<!--         {{ \"Departments.addDepartment\" | translate }} -->\r\n<!--       </mat-card-title> -->\r\n<!--       <mat-card-title *ngIf=\"FormCtrls.id.value > 0\"> -->\r\n<!--         {{ \"Departments.updateDepartment\" | translate }} -->\r\n<!--       </mat-card-title> -->\r\n\r\n<!--       <mat-card-content class=\"container-fluid\"> -->\r\n<!--         <div class=\"row\"> -->\r\n<!--           <div class=\"col-12\"> -->\r\n<!--             <form [formGroup]=\"myForm\"> -->\r\n<!--               <div class=\"row\"> -->\r\n<!--                 <div class=\"col-md-6 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"FormCtrls.en_name\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.enName\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 <div class=\"col-md-6 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"FormCtrls.ar_name\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.arName\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n<!--               </div> -->\r\n<!--             </form> -->\r\n<!--           </div> -->\r\n<!--         </div> -->\r\n<!--       </mat-card-content> -->\r\n\r\n<!--       <mat-card-actions align=\"end\"> -->\r\n<!--         <button -->\r\n<!--           #addBtn -->\r\n<!--           mat-raised-button -->\r\n<!--           class=\"btn btn-info bg-light-info\" -->\r\n<!--           type=\"submit\" -->\r\n<!--           (click)=\"onSubmit()\" -->\r\n<!--         > -->\r\n<!--           <span *ngIf=\"FormCtrls.id.value == 0\"> -->\r\n<!--             <i class=\"fa fa-plus mr-1\"></i> -->\r\n<!--             {{ \"General.Add\" | translate }} -->\r\n<!--           </span> -->\r\n<!--           <span *ngIf=\"FormCtrls.id.value > 0\"> -->\r\n<!--             {{ \"General.Update\" | translate }} -->\r\n<!--           </span> -->\r\n<!--         </button> -->\r\n\r\n<!--         <button -->\r\n<!--           *ngIf=\"FormCtrls.id.value > 0\" -->\r\n<!--           mat-raised-button -->\r\n<!--           class=\"btn btn-warning\" -->\r\n<!--           (click)=\"clearForm()\" -->\r\n<!--         > -->\r\n<!--           {{ \"General.Reset\" | translate }} -->\r\n<!--         </button> -->\r\n<!--       </mat-card-actions> -->\r\n<!--     </mat-card> -->\r\n<!--   </div> -->\r\n<!-- </div> -->\r\n\r\n<mat-card class=\"admin-index-card\" *ngIf=\"!showAddOnly\">\r\n  <mat-card-title>\r\n    <page-title title=\"Departments.allDept\"></page-title>\r\n    <button class=\"orange-btn radius-btn integration-btn float-right d-inline-block mx-1 mb-2\"\r\n            (click)=\"getDataFromHR()\">\r\n      {{ \"getFromHr\" | translate }}\r\n    </button>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content>\r\n    <!--     <mat-form-field appearance=\"standard\"> -->\r\n    <!--       <mat-label>{{ \"General.Search\" | translate }}</mat-label> -->\r\n    <!--       <input -->\r\n    <!--         matInput -->\r\n    <!--         (keyup)=\"applyFilter($event)\" -->\r\n    <!--         placeholder=\"Ex.ium\" -->\r\n    <!--         #input -->\r\n    <!--       /> -->\r\n    <!--     </mat-form-field> -->\r\n\r\n    <div class=\"mat-elevation-z8 f-w\" *ngIf=\"isLoaded;else loading\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <ng-container matColumnDef=\"#\">\r\n          <th mat-header-cell *matHeaderCellDef>#</th>\r\n          <td mat-cell *matCellDef=\"let element; index as i\">\r\n            {{ i + 1 }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"en_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.enName\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let dept\">{{ dept.en_name }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"ar_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.arName\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let dept\">{{ dept.ar_name }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef>action</th>\r\n          <td mat-cell *matCellDef=\"let dept\">\r\n            <ng-container *ngFor=\"let fun of rowFunctions\">\r\n<!--               <a -->\r\n              <!--                 *ngIf=\"fun.functionName === 'Edit'\" -->\r\n              <!--                 (click)=\"getDepartmentById(dept)\" -->\r\n              <!--                 class=\"dark-blue\" -->\r\n              <!--                 matTooltip=\"{{ 'General.Edit' | translate }}\" -->\r\n              <!--               > -->\r\n              <!--                 <i class=\"fas fa-pen font-medium-3 mr-2\"></i> -->\r\n              <!--               </a> -->\r\n\r\n              <a\r\n                *ngIf=\"fun.functionName === 'Delete'\"\r\n                (click)=\"openDeleateDialog(dept)\"\r\n                class=\"danger\"\r\n                matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n              >\r\n                <i class=\"fa fa-trash font-medium-3 mr-2\"></i>\r\n              </a>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <!--           <td class=\"mat-cell\" colspan=\"4\"> -->\r\n          <!--             No data matching the filter \"{{ input.value }}\" -->\r\n          <!--           </td> -->\r\n        </tr>\r\n      </table>\r\n\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[10]\"\r\n        (page)=\"getAllDepartments($event.pageIndex + 1)\"\r\n        [length]=\"itemsCounts\"\r\n        [pageSize]=\"10\"\r\n        showFirstLastButtons\r\n        aria-label=\"Select page of departments\"\r\n        nex\r\n      >\r\n      </mat-paginator>\r\n    </div>\r\n    <ng-template #loading>\r\n      <app-table-skeleton\r\n        [displayedColumns]=\"displayedColumns\"\r\n      ></app-table-skeleton>\r\n    </ng-template>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AnnouncementVM } from \"app/admin/models/admin/AnnouncementVM\";\r\nimport { AnnouncementService } from \"app/admin/services/Admin/announcement.service\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\n@Component({\r\n  selector: \"app-announcement-index\",\r\n  templateUrl: \"./announcement-index.component.html\",\r\n  styleUrls: [\"./announcement-index.component.css\"],\r\n})\r\nexport class AnnouncementIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  EduCompId: any;\r\n  Teachers: teacherByEduCompId[] = [];\r\n  displayedColumns: string[] = [\r\n    \"announcementText\",\r\n    \"fromDate\",\r\n    \"toDate\",\r\n    \"img\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<AnnouncementVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authserv: AuthService,\r\n    private dialog: MatDialog,\r\n    private GeneralService: GeneralService,\r\n    private announcementService: AnnouncementService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngOnInit() {\r\n    console.log(\"helo\");\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      teacherUserId: [\"\"],\r\n      EduCompId: [this.EduCompId],\r\n      page: [\"\"],\r\n    });\r\n    this.getTeachersByEducompId();\r\n    // this.getTeacherAnnouncement(1);\r\n  }\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.getTeacherAnnouncement(1);\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getTeacherAnnouncement(p: number) {\r\n    console.log(this.myForm.controls[\"teacherUserId\"].value);\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    this.p = p;\r\n    this.spinner.show();\r\n    //console.log(\"form value\",this.myForm.value);\r\n    if (this.myForm.controls[\"teacherUserId\"].value != \"\") {\r\n      this.announcementService\r\n        .getAllAnnouncements(this.myForm.controls[\"teacherUserId\"].value)\r\n        .subscribe((res: any) => {\r\n          // console.log(\"groups\", res);\r\n          this.dataSource = new MatTableDataSource(res);\r\n          this.itemsCount = res.length;\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n  getTeachersByEducompId() {\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n      }\r\n    );\r\n  }\r\n  openDeleateDialog(group: AnnouncementVM): void {\r\n    // this.dialog\r\n    //   .open(DeleteDialogComponent, {\r\n    //     data: {\r\n    //       msg: group.Name,\r\n    //     },\r\n    //   })\r\n    //   .afterClosed()\r\n    //   .subscribe((confirm) => {\r\n    //     if (confirm) this.removeGroup(group);\r\n    //   });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <mat-card>\r\n            <mat-card-title>\r\n                {{ \"General.Search\" | translate }}\r\n                <a mat-raised-button routerLink=\"../announcement-setup\" [queryParams]=\"{\r\n          functionId: functionId\r\n        }\" class=\"btn btn-info bg-light-info float-right\">\r\n                    <i class=\"fa fa-plus\"></i> {{ \"labels.AddAnnounce\" | translate }}\r\n                </a>\r\n                <a mat-raised-button (click)=\"getTeacherAnnouncement(1)\" class=\"btn btn-info float-right\">\r\n                    <i class=\"fa fa-search mr-1\"></i> {{ \"General.Search\" | translate }}\r\n                </a>\r\n            </mat-card-title>\r\n            <mat-card-content class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <form [formGroup]=\"myForm\" >\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 col-12\">\r\n                                    <mat-form-field appearance=\"legacy\">\r\n                                        <mat-label>\r\n                                            {{ \"Material.Teacher\" | translate }}\r\n                                        </mat-label>\r\n                                        <mat-select formControlName=\"teacherUserId\">\r\n                                            <mat-option value=\"\">\r\n                                                {{ \"Material.Teacher\" | translate }}</mat-option>\r\n                                            <mat-option *ngFor=\"let teach of Teachers\" [value]=\"teach.teacherUserId\">\r\n                                                {{ teach.teacher_ar_name }}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <mat-card>\r\n            <mat-card-title>\r\n                {{ \"labels.Announcement\" | translate }}\r\n            </mat-card-title>\r\n\r\n            <mat-card-content>\r\n                <mat-form-field appearance=\"standard\">\r\n                    <mat-label>Filter</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input />\r\n                </mat-form-field>\r\n                <div class=\"mat-elevation-z8 f-w\">\r\n                    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                        <ng-container matColumnDef=\"fromDate\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                {{ \"labels.FromDate\"| translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">{{ ele.From_Date }}</td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"toDate\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                {{ \"labels.ToDate\"| translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">{{ ele.To_Date }}</td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"announcementText\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                {{ \"labels.Announcement\"| translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">{{ ele.Announcement_Text }}</td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"img\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                {{ \"labels.AnnouncePicture\" | translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">\r\n                                <a href=\"mozakretyapi/{{ ele.attach_path }}\" target=\"_blank\">\r\n                                    <img class=\"card-img-top  img-fluid imgtablesize\" src=\"mozakretyapi/{{ ele.attach_path }}\" [alt]=\"\" />\r\n                                </a>\r\n\r\n                            </td>\r\n\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"actions\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n                            <td mat-cell *matCellDef=\"let announce\">\r\n                                    <button\r\n                  mat-mini-fab\r\n\r\n                   matTooltip=\"Edit\"\r\n                  routerLink=\"../announcement-setup\"\r\n                  [queryParams]=\"{\r\n                    announceId: announce.Id,\r\n                    functionId: functionId\r\n                  }\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n                            </td>\r\n                        </ng-container>\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n                        <tr class=\"mat-row\" *matNoDataRow>\r\n                            <td class=\"mat-cell\" colspan=\"4\">\r\n                                No data matching the filter \"{{ input.value }}\"\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <mat-paginator\r\n                    [pageSizeOptions]=\"[10]\"\r\n                    (page)=\"getTeacherAnnouncement($event.pageIndex + 1)\"\r\n                    [length]=\"itemsCount\"\r\n                     [pageSize]=\"10\"\r\n                     showFirstLastButtons\r\n                     aria-label=\"Select page of users\">\r\n                    </mat-paginator>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { teacherBySubEduComp } from \"app/admin/models/admin/educations\";\r\nimport { AnnouncementService } from \"app/admin/services/Admin/announcement.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: 'app-announcement-setup',\r\n  templateUrl: './announcement-setup.component.html',\r\n  styleUrls: ['./announcement-setup.component.css']\r\n})\r\nexport class AnnouncementSetupComponent implements OnInit {\r\n  announceId:number=0;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  myForm!: FormGroup;\r\n  picturePath?: any;\r\n  Teachers: teacherBySubEduComp[];\r\n  submitted = false;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private announcementService:AnnouncementService\r\n  ) { \r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.announceId = Number(params.get(\"announceId\"));\r\n      if (this.announceId > 0) {\r\n        this.getAnnounceById(this.announceId);\r\n      }\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  EduCompId:any;\r\n\r\n  getAnnounceById(announceId: number) {\r\n    this.announcementService.getAnnounceById(announceId).subscribe((res: any) => {\r\n       console.log(\"getGroupById\", res);\r\n       this.announceId = res.Id;\r\n       this.FormCtrls.Id.setValue(res.Id);\r\n      this.FormCtrls.fromDate.setValue(res.From_Date);\r\n      this.FormCtrls.toDate.setValue(res.To_Date);\r\n      this.FormCtrls.teacherUserId.setValue(res.teacherUserId);\r\n      this.FormCtrls.announcementText.setValue(res.announcement_text);\r\n      this.FormCtrls.announcementPicture.setValue(res.attach_path);\r\n      this.picturePath = `mozakretyapi${res.attach_path}`;\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      Id: \"\",\r\n      announcementText:[],\r\n      announcementPicture:[\"\"],\r\n      fromDate:[,Validators.required],\r\n      toDate:[,Validators.required],\r\n      teacherUserId:[],\r\n      eduCompId:[this.EduCompId]\r\n    });\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n  }\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    \r\n    if (EduCompId) {\r\n      this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n        (res: any) => {\r\n          console.log(\"teachers\",res.lstTeachers);\r\n          this.Teachers = res.lstTeachers;\r\n        }\r\n      );\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n  onSubmit()\r\n  {\r\n    this.submitted = true;\r\n    if(this.FormCtrls.fromDate.value>this.FormCtrls.toDate.value)\r\n    {\r\n      this.msg.error(\"تاريخ بداية الفترة أكبر من تاريخ نهاية الفترة\");\r\n      return;\r\n    }\r\n    if(!this.FormCtrls.announcementText.value && !this.FormCtrls.announcementPicture.value)\r\n    {\r\n      this.msg.error(\"يجب ادخال صيغة الاعلان أو صورة الاعلان أو كلاهما\");\r\n      return;\r\n    }\r\n    if(this.announceId==0)\r\n    {\r\n    if (this.myForm.valid) {\r\n      \r\n      this.FormCtrls.fromDate.setValue(this.datePipe.transform(this.FormCtrls.fromDate.value));\r\n      this.FormCtrls.toDate.setValue(this.datePipe.transform(this.FormCtrls.toDate.value));\r\n      this.announcementService.addAnnouncement(this.myForm.value).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.msg.success(\"تم اضافة الاعلان بنجاح\");\r\n         // this.returnProfile();\r\n        } else if (res.returnValue == 2) {\r\n          this.msg.error(\"خطأ أثناء اضافة الاعلان\");\r\n        }\r\n        this.submitted = false;\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n  else\r\n  {\r\n    if (this.myForm.valid) {\r\n      this.FormCtrls.Id.setValue(this.announceId);\r\n      this.FormCtrls.fromDate.setValue(this.datePipe.transform(this.FormCtrls.fromDate.value));\r\n      this.FormCtrls.toDate.setValue(this.datePipe.transform(this.FormCtrls.toDate.value));\r\n      this.announcementService.addAnnouncement(this.myForm.value).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.msg.success(\"تم تعديل الاعلان بنجاح\");\r\n         // this.returnProfile();\r\n        } else if (res.returnValue == 2) {\r\n          this.msg.error(\"خطأ أثناء تعديل الاعلان\");\r\n        }\r\n        this.submitted = false;\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n  }\r\n\r\n  onChange(event: any)\r\n  {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.FormCtrls.announcementPicture.setValue(data);\r\n        this.picturePath = fileReder;\r\n      };\r\n    }\r\n\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"announceId == 0\">\r\n          {{ \"labels.AddAnnounce\" | translate }}\r\n        </span>\r\n        <span *ngIf=\"announceId > 0\">\r\n          {{ \"labels.EditAnnounce\" | translate }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../announcement-index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"media\">\r\n          <img\r\n            src=\"{{ picturePath }}\"\r\n            alt=\"No Image\"\r\n            class=\"users-avatar-shadow avatar mr-3 rounded-circle\"\r\n            height=\"64\"\r\n            width=\"64\"\r\n          />\r\n          <div class=\"media-body\">\r\n            <div\r\n              class=\"d-flex flex-sm-row flex-column justify-content-start px-0 mb-sm-2\"\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-sm bg-light-primary mb-1 mb-sm-0\"\r\n                mat-raised-button\r\n                (click)=\"fileInput.click()\"\r\n              >\r\n                {{ \"labels.AnnouncePicture\" | translate }}\r\n              </button>\r\n              <input\r\n                hidden\r\n                (change)=\"onChange($event)\"\r\n                #fileInput\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                id=\"file\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"teacherUserId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of Teachers\"\r\n                        [value]=\"teacher.teacherUserId\"\r\n                      >\r\n                        {{ teacher.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.teacherUserId.invalid &&\r\n                        (FormCtrls.teacherUserId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.teacherId.errors?.required\">\r\n                        Must Choose a value\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\"></div>\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.fromDate.invalid &&\r\n                        (FormCtrls.fromDate.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.fromDate.errors?.required\">\r\n                        You must choose a value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.toDate.invalid &&\r\n                        (FormCtrls.toDate.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.toDate.errors?.required\">\r\n                        You must choose a value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Announcement\" | translate }}\r\n                    </mat-label>\r\n                    <textarea\r\n                      matInput\r\n                      cols=\"20\"\r\n                      formControlName=\"announcementText\"\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" *ngIf=\"announceId > 0\">\r\n        <button\r\n          *ngIf=\"announceId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"OnSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"announceId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { ArticlesService } from \"app/admin/services/Admin/setup/articles.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { EditJobTitleDatesComponent } from \"app/shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component\";\r\nimport {\r\n  IAddEditArticleModel,\r\n  IArticleJobTitleGetVM,\r\n  IArticleModel,\r\n  IArticleViewModel,\r\n} from \"app/admin/models/admin/setup/articles\";\r\nimport { IJobTitleDatesEditVM } from \"app/admin/models/setup/job-title\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-articles\",\r\n  templateUrl: \"./articles.component.html\",\r\n  styleUrls: [\"./articles.component.scss\"],\r\n})\r\nexport class ArticlesSetupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  currentDate = new Date();\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"title\",\r\n    \"department\",\r\n    \"jobTitle\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IArticleModel>;\r\n  initTable: boolean = true;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private articleService: ArticlesService,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public languageService: LanguageService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        id: [0],\r\n        title: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        ArticleContent: [\"\", [Validators.required]],\r\n        depJobIds: [{ value: \"\", disabled: true }, [Validators.required]],\r\n        departmentId: [\"\", [Validators.required]],\r\n        from_date: [null],\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n\r\n    this.getAllArticles(this.curPage);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllArticles(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"department\":\r\n          return this.languageService.isArabic\r\n            ? item.department.ar_name ?? item.department?.en_name\r\n            : item.department?.en_name ?? item.department?.ar_name;\r\n        case \"jobTitle\":\r\n          return this.languageService.isArabic\r\n            ? item.jobTitle[0]?.ar_name ?? item.jobTitle[0]?.en_name\r\n            : item.jobTitle[0]?.en_name ?? item.jobTitle[0]?.ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAllArticles(curPageber: number) {\r\n    this.curPage = curPageber;\r\n    this.spinner.show();\r\n    this.articleService\r\n      .getAllArticles<IArticleViewModel>(curPageber, this.EduCompId)\r\n      // .getAllArticles<IArticleViewModel>(this.EduCompId, curPageber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.dataSource = new MatTableDataSource(response.ArticleList);\r\n          this.itemsCounts = response.countItems;\r\n          // console.log(\"articles: >> \", response);\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let article = {} as IAddEditArticleModel;\r\n      article.EduCompId = this.EduCompId;\r\n      article.title = this.FormCtrls.title?.value;\r\n      article.ArticleContent = this.FormCtrls.ArticleContent?.value;\r\n      article.depJobIds = this.FormCtrls.depJobIds?.value;\r\n      article.from_date = this.datePipe.transform(\r\n        this.FormCtrls.from_date?.value ?? this.currentDate\r\n      );\r\n      article.to_date = this.datePipe.transform(this.FormCtrls.to_date?.value);\r\n      // console.log(\"edit or add => \", article);\r\n\r\n      this.spinner.show();\r\n      ////////////////// add & edit article\r\n      this.FormCtrls.id?.value == 0\r\n        ? this.addArticle(article)\r\n        : this.updateArticle(article);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  addArticle(article: IAddEditArticleModel) {\r\n    this.articleService\r\n      .addArticle<IAddEditArticleModel, any>(article)\r\n      .subscribe((response) => {\r\n        if (response && response !== null) {\r\n          if (response.returnValue == 0) {\r\n            this.toastr.error(response.returnString);\r\n          } else {\r\n            this.getAllArticles(1);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n            this.clearForm();\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateArticle(article: IAddEditArticleModel) {\r\n    this.articleService\r\n      .editArticle<IAddEditArticleModel, any>(article, this.FormCtrls.id?.value)\r\n      .subscribe((response) => {\r\n        if (response && response !== null) {\r\n          if (response.returnValue == 0) {\r\n            this.toastr.error(response.returnString);\r\n          } else {\r\n            this.getAllArticles(this.curPage);\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.clearForm();\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editArticle(article: IArticleModel) {\r\n    // console.log(article);\r\n    this.myForm.patchValue(article);\r\n    this.FormCtrls.departmentId?.setValue(article.department.id);\r\n    this.FormCtrls.depJobIds?.setValue(article.jobTitle.map((j) => j.depJobId));\r\n  }\r\n\r\n  openDeleateDialog(article: IArticleModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: article.title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeArticle(article);\r\n      });\r\n  }\r\n\r\n  removeArticle(article: IArticleModel) {\r\n    this.articleService.deleteArticle(article.id).subscribe((response: any) => {\r\n      if (response.returnValue == 1) {\r\n        // console.log(\"articlr to delete\", response);\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllArticles(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllArticles(this.curPage);\r\n        }\r\n        if (article.id == this.FormCtrls.id.value) this.clearForm();\r\n      } else this.toastr.error(response.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  editJobTitleDates(\r\n    jobTitle_articleId: number,\r\n    jobtitle: IJobTitleDatesEditVM\r\n  ) {\r\n    this.articleService\r\n      .editJobTitleArticle<IJobTitleDatesEditVM, any>(\r\n        jobTitle_articleId,\r\n        jobtitle\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.returnValue == 1) {\r\n          this.getAllArticles(this.curPage);\r\n          this.toastr.success(\"General.UpdateSuccessfully\");\r\n        } else this.toastr.error(response.returnString);\r\n      });\r\n  }\r\n\r\n  openUpdateJobTitleDialog(jobTitle: IArticleJobTitleGetVM) {\r\n    // console.log(jobTitle);\r\n    this.dialog\r\n      .open(EditJobTitleDatesComponent, {\r\n        data: {\r\n          jobTitle: jobTitle,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(response.jobTitle);\r\n          this.editJobTitleDates(jobTitle.jobTitle_article, response.jobTitle);\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleteJobtitleDialog(jobTitle: IArticleJobTitleGetVM) {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? jobTitle.ar_name ?? jobTitle.en_name\r\n            : jobTitle.en_name ?? jobTitle.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeJobtitleArticle(jobTitle.jobTitle_article);\r\n      });\r\n  }\r\n\r\n  removeJobtitleArticle(jobTitle_article: number) {\r\n    this.articleService\r\n      .deleteJobTitleArticle(jobTitle_article)\r\n      .subscribe((response: any) => {\r\n        if (response.returnValue == 1) {\r\n          this.getAllArticles(this.curPage);\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else this.toastr.error(response.returnString);\r\n      });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Article -->\r\n      <mat-card-title *ngIf=\"FormCtrls.id.value == 0\">\r\n        {{ \"articles.addArticle\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"FormCtrls.id.value > 0\">\r\n        {{ \"articles.updateArticle\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- title -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.title\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"articles.title\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- depertment -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <department-dropdown\r\n                    [control]=\"FormCtrls.departmentId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></department-dropdown>\r\n                </div>\r\n\r\n                <!-- job title -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <job-title-by-department-dropdown\r\n                    [control]=\"FormCtrls.depJobIds\"\r\n                    [departmentControl]=\"FormCtrls.departmentId\"\r\n                    [submitted]=\"submitted\"\r\n                    [multiple]=\"true\"\r\n                  ></job-title-by-department-dropdown>\r\n                </div>\r\n\r\n                <!-- From date  -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"FormCtrls.from_date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.FromDate\"\r\n                  ></app-datepicker>\r\n                </div>\r\n\r\n                <!-- To date  -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"FormCtrls.to_date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.ToDate\"\r\n                  ></app-datepicker>\r\n                </div>\r\n\r\n                <!-- content -->\r\n                <div class=\"col-12\">\r\n                  <app-textarea\r\n                    [control]=\"FormCtrls.ArticleContent\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"articles.content\"\r\n                    rows=\"2\"\r\n                  ></app-textarea>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"FormCtrls.id.value == 0\"></i>\r\n          {{\r\n            (FormCtrls.id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"articles.articles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- title Column -->\r\n            <ng-container matColumnDef=\"title\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"articles.title\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.title }}</td>\r\n            </ng-container>\r\n\r\n            <!-- department Column -->\r\n            <ng-container matColumnDef=\"department\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"articles.department\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  languageService.isArabic\r\n                    ? ele.department?.ar_name ?? ele.department?.en_name\r\n                    : ele.department?.en_name ?? ele.department?.ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- job title Column -->\r\n            <ng-container matColumnDef=\"jobTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"articles.jobtitle\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <table\r\n                  class=\"table table-sm mb-1\"\r\n                  *ngIf=\"ele.jobTitle?.length > 0\"\r\n                >\r\n                  <thead class=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.Name\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.FromDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.ToDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let jobTitle of ele.jobTitle; index as i\">\r\n                      <td>\r\n                        {{\r\n                          languageService.isArabic\r\n                            ? jobTitle.ar_name ?? jobTitle.en_name\r\n                            : jobTitle.en_name ?? jobTitle.ar_name\r\n                        }}\r\n                      </td>\r\n                      <td>{{ jobTitle.from_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>{{ jobTitle.to_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>\r\n                        <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                          <a\r\n                            *ngIf=\"fun.functionName === 'UpdateArticalJob'\"\r\n                            (click)=\"openUpdateJobTitleDialog(jobTitle)\"\r\n                            class=\"success p-0\"\r\n                          >\r\n                            <i class=\"ft-edit-2 mr-2\"></i>\r\n                          </a>\r\n\r\n                          <a\r\n                            *ngIf=\"fun.functionName === 'DeleteArticalJob'\"\r\n                            (click)=\"openDeleteJobtitleDialog(jobTitle)\"\r\n                            class=\"danger p-0\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-times fa fa-white\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </a>\r\n                        </ng-container>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let article\" class=\"text-center\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editArticle(article)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(article)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllArticles($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of articles\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from \"@angular/core\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CategorieRequest} from \"app/admin/models/setup/categories\";\r\nimport {CategoriesService} from \"app/admin/services/setup/categories.service\";\r\nimport {UploadFileService} from \"app/shared/services/General/upload-file.service\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {LanguageService} from \"app/shared/services/language.service\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {CustomeValidator} from \"app/shared/validators/customeValid.validator\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {FileModel} from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-add-category\",\r\n  templateUrl: \"./add-category.component.html\",\r\n  styleUrls: [\"./add-category.component.scss\"],\r\n})\r\nexport class AddCategoryComponent implements OnInit {\r\n  form!: FormGroup;\r\n  submitted: boolean = false;\r\n  EduCompId: number;\r\n  @Input() showAddOnly: boolean = false;\r\n  addSubCat: boolean = false;\r\n  SubCat_Names: string[] = [];\r\n  selectedIcon;\r\n  removeImage: number = 0;\r\n  functionId: number = 0;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _serviceCategories: CategoriesService,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    public fileService: UploadFileService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public languageService: LanguageService\r\n  ) {\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    //  this.showAddOnly = data?.showAddOnly ?? false;\r\n    route.queryParamMap.subscribe(param => {\r\n      this.functionId = Number(param.get('functionId'))\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getCategories(this.curPage);\r\n    this.form = this.fb.group({\r\n      id: [0],\r\n      Cat_Name: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n      SubCat_Name: [null],\r\n      File: [null],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  addSubCategory() {\r\n    this.addSubCat = true;\r\n  }\r\n\r\n  saveNewSubCategory() {\r\n    if (this.form.value.SubCat_Name) {\r\n      let Name = this.form.value.SubCat_Name;\r\n      this.SubCat_Names.push(Name);\r\n      this.addSubCat = false;\r\n      this.FormCtrls.SubCat_Name.setValue(null);\r\n    }\r\n  }\r\n\r\n  RemoveFile() {\r\n    this.removeImage = 1;\r\n    if (this.FormCtrls.File) this.FormCtrls.File.setValue(null);\r\n  }\r\n\r\n  Create() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: CategorieRequest = {\r\n        Cat_Name: this.form.value.Cat_Name,\r\n        File: this.form.value.File,\r\n        Sub_Names: this.SubCat_Names,\r\n      };\r\n\r\n      this.spinner.show();\r\n      this._serviceCategories.addCategories(model).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.clearForm();\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.SubCat_Names = [];\r\n    this.submitted = false;\r\n    this.addSubCat = false;\r\n  }\r\n\r\n  onSelectIcon(event) {\r\n    const imgSrc = event.target.src;\r\n    this.fileService\r\n      .convertImgToBase64(imgSrc)\r\n      .then((file: FileModel) => {\r\n        this.FormCtrls.File.setValue(file);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error on select icon:\", error);\r\n      });\r\n  }\r\n\r\n  iconsList = [\r\n    {\r\n      id: 0,\r\n      path: \"assets/gif/category-1.gif\",\r\n    },\r\n    {\r\n      id: 1,\r\n      path: \"assets/gif/category-2.gif\",\r\n    },\r\n    {\r\n      id: 2,\r\n      path: \"assets/gif/category-3.gif\",\r\n    },\r\n    {\r\n      id: 3,\r\n      path: \"assets/gif/category-4.gif\",\r\n    },\r\n    {\r\n      id: 4,\r\n      path: \"assets/gif/category-5.gif\",\r\n    },\r\n    {\r\n      id: 5,\r\n      path: \"assets/gif/category-6.gif\",\r\n    },\r\n  ];\r\n}\r\n\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<mat-card class=\"admin-index-card\">\r\n  <mat-card-title>\r\n    <page-title parentTitle=\"categories.categories\" title=\"addNew\" parentTitleLink=\"/dashboard/setup/categories\"\r\n                [parentLinkParams]=\"{ functionId: functionId }\"></page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content class=\"mt-4\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <!-- Left col -->\r\n        <div class=\"col-md-6 col-lg-3 col-12\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrls.Cat_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.CatName\"\r\n              ></app-input>\r\n            </div>\r\n\r\n            <!-- Icons List-->\r\n            <div class=\"col-12\">\r\n              <mat-label class=\"input-label\">\r\n                {{ \"labels.CatIcon\" | translate }}</mat-label\r\n              >\r\n              <div class=\"iconsContainer\">\r\n                <div class=\"iconsScrolledWrapper\">\r\n                  <img\r\n                    *ngFor=\"let icon of iconsList\"\r\n                    src=\"{{ icon.path }}\"\r\n                    alt=\"icon\"\r\n                    class=\"iconImg\"\r\n                    [class.selected]=\"selectedIcon == icon.id\"\r\n                    (click)=\"selectedIcon = icon.id; onSelectIcon($event)\"\r\n                  />\r\n                  <!--  -->\r\n                </div>\r\n\r\n                <app-button-file-input-new\r\n                  [control]=\"FormCtrls.File\"\r\n                  accept=\"image/*\"\r\n                  htmlId=\"cover-photo\"\r\n                  [removeFile]=\"removeImage\"\r\n                >\r\n                </app-button-file-input-new>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Gap -->\r\n        <div class=\"col-md-1 d-none d-lg-block\"></div>\r\n\r\n        <!-- Right col -->\r\n        <div class=\"col-md-6 col-lg-3 col-12 col-md-push-1\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div class=\"subcatscontainer\">\r\n                <mat-label class=\"input-label\">\r\n                  {{ \"labels.subCategories\" | translate }}</mat-label\r\n                >\r\n                <ul class=\"list-group customeLG\">\r\n                  <ng-container *ngIf=\"SubCat_Names?.length > 0; else empty\">\r\n                    <li\r\n                      class=\"list-group-item\"\r\n                      *ngFor=\"let SubCat_Name of SubCat_Names\"\r\n                    >\r\n                      {{ SubCat_Name }}\r\n                    </li>\r\n                  </ng-container>\r\n                  <ng-template #empty>\r\n                    <li class=\"list-group-item customebg\">\r\n                      {{ \"General.emptysubcategories\" | translate }}\r\n                    </li>\r\n                  </ng-template>\r\n\r\n                  <li class=\"list-group-item hasInput\" *ngIf=\"addSubCat\">\r\n                    <app-input\r\n                      [control]=\"FormCtrls.SubCat_Name\"\r\n                      [submitted]=\"submitted\"\r\n                    ></app-input>\r\n                  </li>\r\n                  <li class=\"list-group-item hasBtn\" *ngIf=\"!addSubCat\">\r\n                    <button\r\n                      class=\"btn btn-transparent\"\r\n                      (click)=\"addSubCategory()\"\r\n                    >\r\n                      {{ \"labels.addSubCategory\" | translate }}\r\n                      &nbsp;\r\n                      <i class=\"icon-plus\"></i>\r\n                    </button>\r\n                  </li>\r\n                  <li class=\"list-group-item hasBtn\" *ngIf=\"addSubCat\">\r\n                    <button\r\n                      class=\"btn btn-transparent\"\r\n                      (click)=\"saveNewSubCategory()\"\r\n                    >\r\n                      {{ \"General.Save\" | translate }}\r\n                      &nbsp;\r\n                      <i class=\"icon-plus\"></i>\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n\r\n  <mat-card-actions align=\"end\">\r\n    <button class=\"orange-btn radius-btn big-padding\" (click)=\"Create()\">\r\n      <span class=\"text-btn\">\r\n        {{ \"labels.saveCat\" | translate | titlecase }}\r\n      </span>\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {TranslateService} from \"@ngx-translate/core\";\r\nimport {CategorieResponse, CategoriesModel,} from \"app/admin/models/setup/categories\";\r\nimport {CategoriesService} from \"app/admin/services/setup/categories.service\";\r\nimport {UploadFileService} from \"app/shared/services/General/upload-file.service\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {defaultRes} from \"app/shared/models/general/general\";\r\nimport {ResMessage} from \"app/shared/enums/res-message\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-categorie\",\r\n  templateUrl: \"./categorie.component.html\",\r\n  styleUrls: [\"./categorie.component.scss\"],\r\n})\r\nexport class CategorieComponent implements OnInit {\r\n  categories: CategoriesModel[];\r\n  curLang: string;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    public authService: AuthService,\r\n    public fileService: UploadFileService,\r\n    public categorieservice: CategoriesService,\r\n    private route: ActivatedRoute,\r\n    private messagesService: MessagesService,\r\n  ) {\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    if (this.authService.isAdmin()) this.geAll();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.geAll();\r\n    });\r\n  }\r\n\r\n\r\n  geAll() {\r\n    // this.spinner.show();\r\n    this.categorieservice\r\n      .getCategories()\r\n      .subscribe((res: CategorieResponse) => {\r\n        this.categories = res.MainCategories;\r\n        this.isLoaded = true;\r\n        //  this.spinner.hide();\r\n      });\r\n  }\r\n\r\n\r\n  getDataFromHR() {\r\n    this.spinner.show();\r\n    this.categorieservice.getDataFromHR(this.EduCompId)\r\n      .subscribe((res: defaultRes) => {\r\n        this.spinner.hide();\r\n        if (res.returnValue == ResMessage.success) {\r\n          this.geAll();\r\n          this.messagesService.success('copyHrSuccess');\r\n        }\r\n      });\r\n  }\r\n\r\n  sendDataToHR() {\r\n    this.spinner.show();\r\n    this.categorieservice.sendDataToHR(this.EduCompId)\r\n      .subscribe((res: defaultRes) => {\r\n        this.spinner.hide();\r\n        if (res.returnValue == ResMessage.success) {\r\n          // this.geAll();\r\n          this.messagesService.success('sendHrSuccess');\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<mat-card class=\"admin-index-card\">\r\n  <mat-card-title>\r\n    <page-title title=\"categories.categories\"></page-title>\r\n\r\n    <create-new-btn\r\n      label=\"categories.category\"\r\n      class=\"float-right float-right d-inline-block mx-1 mb-2 mt--5\"\r\n      url=\"/dashboard/setup/add-category\"\r\n      [params]=\"{\r\n        functionId: functionId\r\n      }\"\r\n    >\r\n    </create-new-btn>\r\n\r\n    <button\r\n      class=\"orange-btn radius-btn integration-btn float-right d-inline-block mx-1 mb-2\"\r\n      (click)=\"getDataFromHR()\"\r\n    >\r\n      {{ \"getFromHr\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      class=\"orange-btn radius-btn integration-btn float-right d-inline-block mx-1 mb-2\"\r\n      (click)=\"sendDataToHR()\"\r\n    >\r\n      {{ \"sendToHr\" | translate }}\r\n    </button>\r\n  </mat-card-title>\r\n  <mat-card-content>\r\n    <ng-container *ngIf=\"isLoaded; else loading\">\r\n      <ng-container *ngIf=\"categories?.length > 0; else empty\">\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col-6 col-md-4 col-lg-3 col-xl-2\"\r\n            *ngFor=\"let categorie of categories\"\r\n          >\r\n            <mat-card class=\"cat-box\">\r\n              <img\r\n                [src]=\"fileService.previewPicture( categorie.attach_path)\"\r\n                alt=\"{{ categorie.name }} /icon\"\r\n                class=\"cat-img\"\r\n              />\r\n              <p class=\"cat-name roboto-medium\">{{ categorie.name }}</p>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-6 col-md-4 col-lg-3 col-xl-2\">\r\n            <button\r\n              class=\"dashed-btn\"\r\n              [queryParams]=\"{ functionId: functionId }\"\r\n              routerLink=\"/dashboard/setup/add-category\"\r\n            >\r\n              <i class=\"ft-plus-circle\"></i>\r\n              <p>{{ \"addNew\" | translate }}</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <ng-template #loading>\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"col-xl-5 col-lg-3 col-md-4 col-sm-6 col-12\"\r\n          *ngFor=\"let ele of [].constructor(5)\"\r\n        >\r\n          <app-card-skeleton [height]=\"200\"></app-card-skeleton>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #empty>\r\n      <span class=\"alert bg-light-warning\">\r\n        {{ \"General.emptycategories\" | translate }}\r\n      </span>\r\n    </ng-template>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IJobTitleByDeptVM } from \"app/admin/models/setup/job-title\";\r\n\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  ICourseAddEditVM,\r\n  ICourseGetVM,\r\n  IDeptCourseAddEditVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport {\r\n  CategoriesModel,\r\n  ISubCategoryModel,\r\n} from \"app/admin/models/setup/categories\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { CategoriesService } from \"app/admin/services/setup/categories.service\";\r\nimport { JobTitleService } from \"app/admin/services/setup/job-title.service\";\r\nimport { RadioButtonModel } from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { AppAssets } from \"app/shared/data/app-assets\";\r\nimport { AppConstants } from \"app/shared/data/app_constants\";\r\nimport {\r\n  InputAppearance,\r\n  defaultInputAppearance,\r\n} from \"app/shared/enums/mat-theme.enum\";\r\nimport { OriginalFileModel } from \"app/shared/models/general/general\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { forkJoin } from \"rxjs\";\r\nimport { CategorieComponent } from \"../../categories/categries-view/categorie.component\";\r\nimport { DiplomaComponent } from \"../../diploma/diploma/diploma.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-course\",\r\n  templateUrl: \"./add-course.component.html\",\r\n  styleUrls: [\"./add-course.component.scss\"],\r\n})\r\nexport class AddCourseComponent implements OnInit {\r\n  functionId: number;\r\n  courseId: number = 0;\r\n  mandatoryJobTitles: IJobTitleByDeptVM[];\r\n  recommendedJobTitles: IJobTitleByDeptVM[];\r\n  mainCategories: CategoriesModel[];\r\n  subCategories: ISubCategoryModel[];\r\n  isLoadedMainCategories: boolean = false;\r\n\r\n  submitted: boolean = false;\r\n  course: ICourseGetVM;\r\n  imageChange: boolean = false;\r\n  removeImage: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n  eduCompId: number;\r\n  currentDate = new Date();\r\n  backBtnUrl: string;\r\n\r\n  showAddDiplomaButton: true;\r\n  showAddCategoryButton: true;\r\n  reloadDiploma: boolean = false;\r\n\r\n  appearance: InputAppearance = defaultInputAppearance;\r\n  stepIndex: number = 0;\r\n\r\n  isLoadedBasic: boolean = true;\r\n  isLoadedRecommended: boolean = true;\r\n  displayedColumns: string[] = [\"course.department\", \"course.jobTitle\", \"all\"];\r\n  dataSourceBasic: MatTableDataSource<IJobTitleByDeptVM>;\r\n  dataSourceRecommended: MatTableDataSource<IJobTitleByDeptVM>;\r\n\r\n  savedFile: OriginalFileModel;\r\n  whatWillLearn: string[] = [];\r\n  addWhatWillLearn: boolean = false;\r\n\r\n  constructor(\r\n    private courseServ: CourseService,\r\n    private jobServ: JobTitleService,\r\n    private categoriesService: CategoriesService,\r\n    private ar: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    public fileService: UploadFileService,\r\n    private spinner: NgxSpinnerService,\r\n    private authserv: AuthService,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    public languageService: LanguageService,\r\n    private dialog: MatDialog,\r\n    public appAssets: AppAssets,\r\n    private appConstants: AppConstants\r\n  ) {\r\n    forkJoin([\r\n      this.authserv.chechAuthorization(\"categories\"),\r\n      this.authserv.chechAuthorization(\"diploma\"),\r\n    ]).subscribe((results: any) => {\r\n      if (results[0].returnValue == 1) {\r\n        this.showAddCategoryButton = results[0].returnString;\r\n      }\r\n      if (results[1].returnValue == 1) {\r\n        this.showAddDiplomaButton = results[1].returnString;\r\n      }\r\n    });\r\n\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    ar.paramMap.subscribe((params) => {\r\n      let isFromRequestPage = Number(params.get(\"isFromRequestPage\"));\r\n      // console.log(isFromRequestPage);\r\n      this.backBtnUrl =\r\n        isFromRequestPage == 1\r\n          ? \"/dashboard/setup/course/teaching-request\"\r\n          : \"/dashboard/setup/course/index\";\r\n\r\n      let id = Number(params.get(\"courseId\"));\r\n      // get course in edit\r\n      if (id) {\r\n        this.courseId = id;\r\n        spinner.show();\r\n        this.courseServ\r\n          .getCourseById<ICourseGetVM>(this.courseId)\r\n          .subscribe((res) => {\r\n            // console.log(\"getCourseById\", res);\r\n            if (res) {\r\n              this.course = res;\r\n              this.myForm.patchValue(this.course);\r\n              // attach\r\n              this.FormCtrls.subCourse_attach?.setValue(\r\n                this.course.attach_path\r\n              );\r\n              if (res.attach_path)\r\n                this.savedFile = {\r\n                  name: this.course.attach_name,\r\n                  size: this.course.attach_size,\r\n                  LastModifiedDate: this.course.attach_date,\r\n                  type: \"image/\",\r\n                };\r\n              // categories\r\n              let mainCatId = this.course.course_categories[0].main_catId;\r\n              this.FormCtrls.mainCategoryId?.setValue(mainCatId);\r\n              this.onChaneMainCategory(mainCatId, true);\r\n              // duration\r\n              this.FormCtrls.courseDuration?.setValue(\r\n                `${Math.floor(this.course.subCourseMinutes / 60)}:${\r\n                  this.course.subCourseMinutes % 60\r\n                }`\r\n              );\r\n              // put jobTitles of the same department in one array\r\n              let depts = [];\r\n              this.course.department?.forEach((d) => {\r\n                let index = depts.findIndex((i) => i.id == d.id);\r\n                if (index == -1) depts.push(d);\r\n                else depts[index].jobTitle.push(d.jobTitle[0]);\r\n              });\r\n              this.course.department = depts;\r\n              this.whatWillLearn = this.course.learning_outcomes ?? [];\r\n              // this.FormCtrls.learningOutcomes.setValue(\r\n              //   res.learning_outcomes.join(\"\")\r\n              // );\r\n              // console.log(this.course);\r\n\r\n              let mandatoryDepartment = [];\r\n              let recommendedDepartment = [];\r\n              let mandatoryJobTitles = [];\r\n              let recommendedJobTitles = [];\r\n              this.course.department?.forEach((dept) => {\r\n                dept.jobTitle?.forEach((job) => {\r\n                  // mandatory\r\n                  if (job.is_mandatory) {\r\n                    mandatoryDepartment.push(dept.id);\r\n\r\n                    mandatoryJobTitles.push(job.depJobId);\r\n                    this.mandatoryDeptCtrl.setValue(mandatoryDepartment);\r\n                    this.onSelectDepartment(job.is_mandatory, true);\r\n                    this.mandatoryJobCtrl.setValue(mandatoryJobTitles);\r\n                  } else {\r\n                    //recommended\r\n                    recommendedDepartment.push(dept.id);\r\n                    recommendedJobTitles.push(job.depJobId);\r\n                    this.recommendedDeptCtrl.setValue(recommendedDepartment);\r\n                    this.onSelectDepartment(job.is_mandatory, true);\r\n                    this.recommendedJobCtrl.setValue(recommendedJobTitles);\r\n                  }\r\n                });\r\n\r\n                /* if (dept.is_mandatory == true) {\r\n                  // department\r\n\r\n                  mandatoryDepartment.push(dept.id);\r\n                  this.mandatoryDeptCtrl.setValue(mandatoryDepartment);\r\n                  this.onSelectDepartment(dept.is_mandatory);\r\n                  // job titles\r\n                  jobTitles = [];\r\n                  dept.jobTitle?.forEach((job) => {\r\n                    jobTitles.push(job.depJobId);\r\n                  });\r\n                  this.mandatoryJobCtrl.setValue(jobTitles);\r\n                } else {\r\n                  // department\r\n\r\n                  recommendedDepartment.push(dept.id);\r\n                  this.recommendedDeptCtrl.setValue(recommendedDepartment);\r\n                  this.onSelectDepartment(dept.is_mandatory);\r\n                  // job titles\r\n                  jobTitles = [];\r\n                  dept.jobTitle?.forEach((j) => jobTitles.push(j.depJobId));\r\n                  this.recommendedJobCtrl.setValue(jobTitles);\r\n                } */\r\n              });\r\n\r\n              if (isFromRequestPage == 1) {\r\n                this.FormCtrls.isArabic.setValue(false);\r\n                this.FormCtrls.isEnglish.setValue(false);\r\n              }\r\n              // console.log(this.myForm.value);\r\n              spinner.hide();\r\n            }\r\n            // console.log(this.course);\r\n          });\r\n      }\r\n    });\r\n\r\n    this.eduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  //#region oninit\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        subCourse_ar_name: [\r\n          \"\",\r\n          [Validators.required, CustomeValidator.whiteSpace],\r\n        ],\r\n        subCourse_en_name: [\r\n          \"\",\r\n          [Validators.required, CustomeValidator.whiteSpace],\r\n        ],\r\n        Diploma_id: [null],\r\n        mainCategoryId: [[], [Validators.required]], // not multi\r\n        subCategoryIds: [\r\n          {\r\n            value: [],\r\n            disabled: true,\r\n          },\r\n          [Validators.required],\r\n        ],\r\n        subjectPromoVideoPath: [\"\"], //[Validators.required, CustomeValidator.noSpace]\r\n        subCourse_attach: [null /* , [Validators.required] */],\r\n        mandatoryFor: this.fb.group({\r\n          department: [\"\", [Validators.required]],\r\n          jobTitle: [\r\n            /* {\r\n              value: [],\r\n              disabled: true,\r\n            } */ [],\r\n            [Validators.required],\r\n          ],\r\n        }),\r\n        recommendedFor: this.fb.group({\r\n          department: [\"\", [Validators.required]],\r\n          jobTitle: [\r\n            /* {\r\n              value: [],\r\n              disabled: true,\r\n            } */ [],\r\n            [Validators.required],\r\n          ],\r\n        }),\r\n        subjectDescription: [\"\"], //[Validators.required]\r\n        // courseGoal: [\"\"], //[Validators.required]\r\n        // eduCompId: [this.eduCompId],\r\n        from_date: [null], // [Validators.required]\r\n        to_date: [null],\r\n        isArabic: [false, [Validators.required]],\r\n        isEnglish: [false, [Validators.required]],\r\n        isFollow: [false, [Validators.required]],\r\n        courseDuration: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(this.appConstants.hourMinutesPattern),\r\n          ],\r\n        ],\r\n        // courseMinutes: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        CourseCertificate: [false, [Validators.required]],\r\n        learningOutcomes: [\"\"],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n\r\n    this.FormCtrls.subCourse_attach.valueChanges.subscribe((attach) => {\r\n      if (attach) {\r\n        this.removeImage = 0;\r\n        this.imageChange = true;\r\n      }\r\n    });\r\n\r\n    this.mandatoryDeptCtrl.valueChanges.subscribe((mandatoryDeptId) => {\r\n      this.onSelectDepartment(true);\r\n    });\r\n    this.recommendedDeptCtrl.valueChanges.subscribe((recommendedDeptId) => {\r\n      this.onSelectDepartment(false);\r\n    });\r\n\r\n    this.getAllCategories();\r\n  }\r\n  //#endregion\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.eduCompId = e.EduCompId;\r\n      this.getAllCategories();\r\n    });\r\n  }\r\n\r\n  //#region categories\r\n  getAllCategories() {\r\n    this.categoriesService.getCategories().subscribe((res) => {\r\n      if (res) this.mainCategories = res.MainCategories;\r\n      this.isLoadedMainCategories = true;\r\n    });\r\n  }\r\n\r\n  getAllSubCategories(mainCategoryIds: number) {\r\n    this.spinner.show();\r\n    this.categoriesService\r\n      .getAllSubCategoriesByMainId(mainCategoryIds)\r\n      .subscribe((res) => {\r\n        if (res) this.subCategories = res.SubCategories;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  //#endregion\r\n\r\n  //#region on changes // if no categoryId get of all selected\r\n  onChaneMainCategory(\r\n    mainCategoryId: number,\r\n    isStartEditMode: boolean = false\r\n  ) {\r\n    // let currentSelectedIds: number[] = this.FormCtrls.mainCategoryId.value;\r\n    // on select only\r\n    // if (mainCategoryId > 0) {\r\n    //   // select\r\n    //   if (!this.isCategorySelected(mainCategoryId)) {\r\n    //     currentSelectedIds.push(mainCategoryId);\r\n    //   }\r\n    //   // deselect\r\n    //   else {\r\n    //     let index = currentSelectedIds.findIndex((id) => id == mainCategoryId);\r\n    //     currentSelectedIds.splice(index, 1);\r\n    //   }\r\n    //   this.FormCtrls.mainCategoryId.setValue(currentSelectedIds);\r\n    // }\r\n\r\n    if (!this.isCategorySelected(mainCategoryId) || isStartEditMode) {\r\n      this.FormCtrls.mainCategoryId.setValue(mainCategoryId);\r\n\r\n      this.FormCtrls.subCategoryIds.setValue(null);\r\n      if (mainCategoryId > 0) {\r\n        this.getAllSubCategories(mainCategoryId);\r\n        this.FormCtrls.subCategoryIds.enable();\r\n        if (isStartEditMode)\r\n          this.FormCtrls.subCategoryIds.setValue(\r\n            this.course.course_categories.map((ele) => ele.id)\r\n          );\r\n      } else {\r\n        this.FormCtrls.subCategoryIds.disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  isCategorySelected(mainCategoryId: number) {\r\n    // let currentSelectedIds: number[] = this.FormCtrls.mainCategoryId.value;\r\n    // return currentSelectedIds?.includes(mainCategoryId);\r\n    return this.FormCtrls.mainCategoryId.value == mainCategoryId;\r\n  }\r\n\r\n  onChangeIsFollow(isFollow: boolean) {\r\n    // console.log(isFollow);\r\n    if (isFollow) {\r\n      this.FormCtrls?.Diploma_id?.setValidators([Validators.required]);\r\n      this.FormCtrls?.Diploma_id?.updateValueAndValidity();\r\n    } else {\r\n      this.FormCtrls?.Diploma_id?.clearValidators();\r\n      this.FormCtrls?.Diploma_id?.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  onChangeLanguage(event: MatCheckboxChange, languageNo: number) {\r\n    if (languageNo == 1) this.FormCtrls.isArabic.setValue(event.checked);\r\n    else if (languageNo == 2) this.FormCtrls.isEnglish.setValue(event.checked);\r\n  }\r\n\r\n  onSelectDepartment(mandatory: boolean, fromGetCourse: boolean = false) {\r\n    // change mandatory\r\n    if (mandatory) {\r\n      this.isLoadedBasic = false;\r\n      // get jobTitles\r\n      this.mandatoryJobCtrl?.setValue(\"\");\r\n      if (this.mandatoryDeptCtrl?.value.length > 0) {\r\n        this.jobServ\r\n          .getSpecificJobTitlesByDepartmentIds({\r\n            ids: this.mandatoryDeptCtrl?.value,\r\n          })\r\n          .subscribe((response: IJobTitleByDeptVM[]) => {\r\n            if (response) {\r\n              this.mandatoryJobTitles = response;\r\n              response.map((ele) => (ele.checked = false));\r\n              this.dataSourceBasic = new MatTableDataSource(response);\r\n              this.isAllCheckboxSelectedBasic = false;\r\n              this.isLoadedBasic = true;\r\n              if (fromGetCourse) {\r\n                this.dataSourceBasic.data.forEach(\r\n                  (ele) =>\r\n                    (ele.checked = this.mandatoryJobCtrl.value.includes(ele.id))\r\n                );\r\n              }\r\n              this.updateContentOfTables(true, true);\r\n            }\r\n          });\r\n        // this.mandatoryJobCtrl?.enable();\r\n      } else {\r\n        // this.mandatoryJobCtrl?.disable();\r\n        this.mandatoryJobTitles = [];\r\n        this.dataSourceBasic = new MatTableDataSource([]);\r\n        this.isLoadedBasic = true;\r\n      }\r\n    }\r\n    // change recommended\r\n    else {\r\n      this.isLoadedRecommended = false;\r\n      // get jobTitles\r\n      this.recommendedJobCtrl?.setValue(\"\");\r\n      if (this.recommendedDeptCtrl?.value.length > 0) {\r\n        this.jobServ\r\n          .getSpecificJobTitlesByDepartmentIds({\r\n            ids: this.recommendedDeptCtrl?.value,\r\n          })\r\n          .subscribe((response: IJobTitleByDeptVM[]) => {\r\n            if (response) {\r\n              this.recommendedJobTitles = response;\r\n              response.map((ele) => (ele.checked = false));\r\n              this.dataSourceRecommended = new MatTableDataSource(response);\r\n              this.isAllCheckboxSelectedRecommended = false;\r\n              this.isLoadedRecommended = true;\r\n              if (fromGetCourse) {\r\n                this.dataSourceRecommended.data.forEach(\r\n                  (ele) =>\r\n                    (ele.checked = this.recommendedJobCtrl.value.includes(\r\n                      ele.id\r\n                    ))\r\n                );\r\n              }\r\n              this.updateContentOfTables(true, true);\r\n            }\r\n          });\r\n        // this.recommendedJobCtrl?.enable();\r\n      } else {\r\n        // this.recommendedJobCtrl?.disable();\r\n        this.recommendedJobTitles = [];\r\n        this.dataSourceRecommended = new MatTableDataSource([]);\r\n        this.isLoadedRecommended = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  //////////////////////////////////////////// on change select in table\r\n\r\n  isAllCheckboxSelectedBasic: boolean = false;\r\n  isAllCheckboxSelectedRecommended: boolean = false;\r\n\r\n  changeCheckbox(checkboxValue: boolean, index: number, isBasicTable: boolean) {\r\n    // basic\r\n    if (isBasicTable) {\r\n      this.dataSourceBasic.data[index].checked = checkboxValue;\r\n    }\r\n    // recommended\r\n    else {\r\n      this.dataSourceRecommended.data[index].checked = checkboxValue;\r\n    }\r\n    this.updateSelectAllChackBox(isBasicTable);\r\n    this.updateJobFormValue(isBasicTable);\r\n    this.updateContentOfTables(isBasicTable);\r\n  }\r\n\r\n  updateSelectAllChackBox(\r\n    isBasicTable: boolean,\r\n    isRecommedned: boolean = !isBasicTable\r\n  ) {\r\n    // basic\r\n    if (isBasicTable) {\r\n      this.isAllCheckboxSelectedBasic = this.dataSourceBasic.data.every(\r\n        (ele) => ele.checked\r\n      );\r\n    }\r\n    // recommended\r\n    if (isRecommedned) {\r\n      this.isAllCheckboxSelectedRecommended =\r\n        this.dataSourceRecommended.data.every((ele) => ele.checked);\r\n    }\r\n  }\r\n\r\n  selectAll(checkboxValue: boolean, isBasicTable: boolean) {\r\n    // basic\r\n    if (isBasicTable) {\r\n      this.isAllCheckboxSelectedBasic = checkboxValue;\r\n      this.dataSourceBasic.data.forEach((ele) => {\r\n        ele.checked = checkboxValue;\r\n      });\r\n    }\r\n    // recommended\r\n    else {\r\n      this.isAllCheckboxSelectedRecommended = checkboxValue;\r\n      this.dataSourceRecommended.data.forEach((ele) => {\r\n        ele.checked = checkboxValue;\r\n      });\r\n    }\r\n    this.updateJobFormValue(isBasicTable);\r\n    this.updateContentOfTables(isBasicTable);\r\n  }\r\n\r\n  // change value of form control\r\n  updateJobFormValue(isBasicTable: boolean) {\r\n    // basic\r\n    if (isBasicTable) {\r\n      let selectedIds = this.dataSourceBasic?.data\r\n        .filter((ele) => ele.checked)\r\n        .map((ele) => ele.id);\r\n      this.mandatoryJobCtrl.setValue(selectedIds ?? []);\r\n    }\r\n    // recommended\r\n    else {\r\n      let selectedIds = this.dataSourceRecommended?.data\r\n        .filter((ele) => ele.checked)\r\n        .map((ele) => ele.id);\r\n      this.recommendedJobCtrl.setValue(selectedIds ?? []);\r\n    }\r\n  }\r\n\r\n  // ex >> not to display selected basic jobs in recommended table\r\n  updateContentOfTables(\r\n    isBasicTable: boolean,\r\n    isRecommendedTable: boolean = !isBasicTable\r\n  ) {\r\n    // remove selected in basic from recommended\r\n    if (isBasicTable) {\r\n      this.dataSourceRecommended = new MatTableDataSource(\r\n        this.recommendedJobTitles?.filter(\r\n          (ele) => !this.mandatoryJobCtrl.value.includes(ele.id)\r\n        ) ?? []\r\n      );\r\n    }\r\n    // remove selected in basic from recommended\r\n    if (isRecommendedTable) {\r\n      // remove selected in basic from recommended\r\n      this.dataSourceBasic = new MatTableDataSource(\r\n        this.mandatoryJobTitles?.filter(\r\n          (ele) => !this.recommendedJobCtrl.value.includes(ele.id)\r\n        ) ?? []\r\n      );\r\n    }\r\n    this.updateSelectAllChackBox(true, true);\r\n  }\r\n\r\n  saveNewLearn() {\r\n    if (this.myForm.value.learningOutcomes) {\r\n      let Name = this.myForm.value.learningOutcomes;\r\n      this.whatWillLearn.push(Name);\r\n      this.addWhatWillLearn = false;\r\n      this.FormCtrls.learningOutcomes.setValue(null);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region add & edit api\r\n  addCourse(course: ICourseAddEditVM) {\r\n    // console.log(course);\r\n    this.spinner.show();\r\n    this.courseServ\r\n      .addCourse<ICourseAddEditVM, any>(course)\r\n      .subscribe((res) => {\r\n        if (res?.returnValue == 1) {\r\n          this.msg.success(\"General.AddSuccessfully\");\r\n          this.router.navigate([\"dashboard/setup/course/\"], {\r\n            queryParams: {\r\n              functionId: this.functionId,\r\n            },\r\n          });\r\n        } else this.msg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateCourse(course: ICourseAddEditVM) {\r\n    if (!this.imageChange) course.subCourse_attach = null;\r\n    // console.log(course);\r\n    this.spinner.show();\r\n    this.courseServ\r\n      .updateCourse<ICourseAddEditVM, any>(this.courseId, course)\r\n      .subscribe((res) => {\r\n        if (res?.returnValue == 1) {\r\n          this.msg.success(\"General.UpdateSuccessfully\");\r\n          this.router.navigate([this.backBtnUrl], {\r\n            queryParams: {\r\n              functionId: this.functionId,\r\n            },\r\n          });\r\n        } else this.msg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    // console.log(this.myForm.value);\r\n    this.submitted = true;\r\n    if (!this.FormCtrls?.isArabic.value && !this.FormCtrls.isEnglish.value) {\r\n      this.msg.warning(\"General.MustChooseLanguage\");\r\n      return;\r\n    } else if (!this.myForm.valid || this.whatWillLearn.length == 0) {\r\n      // this.msg.error(\"course.enterDataMsg\");\r\n      this.msg.error(\"General.FormNotValid\");\r\n\r\n      // if (!this.FormCtrls?.subCourse_attach.value) {\r\n      //   this.msg.warning(\"General.MustChoosePicture\");\r\n      //   return;\r\n      // }\r\n    } else {\r\n      let course: ICourseAddEditVM = {\r\n        subCourse_ar_name: this.FormCtrls.subCourse_ar_name.value,\r\n        subCourse_en_name: this.FormCtrls.subCourse_en_name.value,\r\n        Diploma_id: this.FormCtrls.Diploma_id.value,\r\n        from_date: this.datePipe.transform(\r\n          this.FormCtrls.from_date?.value ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.FormCtrls.to_date?.value),\r\n        subCourseDepJobTitle: [],\r\n        subCourse_attach: this.FormCtrls.subCourse_attach.value,\r\n        promoLink: this.FormCtrls.subjectPromoVideoPath.value,\r\n        subjectDescription: this.FormCtrls.subjectDescription.value,\r\n        eduCompId: this.eduCompId,\r\n        isArabic: this.FormCtrls.isArabic.value,\r\n        isEnglish: this.FormCtrls.isEnglish.value,\r\n        isFollow: this.FormCtrls.isFollow.value,\r\n        courseHours: Number(this.FormCtrls.courseDuration.value.split(\":\")[0]),\r\n        courseMinutes: Number(\r\n          this.FormCtrls.courseDuration.value.split(\":\")[1]\r\n        ),\r\n        courseCertificate: this.FormCtrls.CourseCertificate.value,\r\n        remove_image: this.removeImage,\r\n        learningOutComes: this.whatWillLearn,\r\n        // learningOutComes: this.FormCtrls.learningOutcomes.value\r\n        //   .trim()\r\n        //   .split(\"</p>\"),\r\n        // .split(/\\<\\/p\\>|\\<\\/ul\\>/)\r\n        subCategoryIds: this.FormCtrls.subCategoryIds.value,\r\n      };\r\n      // course.learningOutComes = course.learningOutComes\r\n      //   .map((ele) => {\r\n      //     if (ele.startsWith(\"<p\")) ele = ele + \"</p>\";\r\n      //     // else if (ele.startsWith(\"<ul\")) ele = ele + \"</ul>\";\r\n      //     return ele;\r\n      //   })\r\n      //   .filter((ele) => !ele.includes(\"<br>\") && ele != \"\");\r\n\r\n      let depJodIds: IDeptCourseAddEditVM[] = [];\r\n      this.mandatoryJobCtrl?.value.forEach((depJobId) => {\r\n        depJodIds.push({\r\n          is_mandatory: 1,\r\n          depJobId: depJobId,\r\n        });\r\n      });\r\n      this.recommendedJobCtrl?.value.forEach((depJobId) => {\r\n        depJodIds.push({\r\n          is_mandatory: 0,\r\n          depJobId: depJobId,\r\n        });\r\n      });\r\n      course.subCourseDepJobTitle = depJodIds;\r\n\r\n      // console.log(course);\r\n\r\n      // add or edit\r\n      if (this.courseId == 0) this.addCourse(course);\r\n      else this.updateCourse(course);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region add new dialogs\r\n  openAddCategoryDialog() {\r\n    this.dialog\r\n      .open(CategorieComponent, {\r\n        data: {\r\n          showAddOnly: true,\r\n        },\r\n        minWidth: \"60vw\",\r\n        disableClose: true,\r\n      })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.getAllCategories();\r\n      });\r\n  }\r\n\r\n  openAddDeplomaDialog() {\r\n    this.dialog\r\n      .open(DiplomaComponent, {\r\n        data: {\r\n          showAddOnly: true,\r\n        },\r\n        disableClose: true,\r\n      })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.reloadDiploma = !this.reloadDiploma;\r\n      });\r\n  }\r\n  //#endregion\r\n\r\n  //#region contronls & remove file\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get mandatoryDeptCtrl() {\r\n    return this.myForm.get(\"mandatoryFor.department\");\r\n  }\r\n\r\n  get mandatoryJobCtrl() {\r\n    return this.myForm.get(\"mandatoryFor.jobTitle\");\r\n  }\r\n\r\n  get recommendedDeptCtrl() {\r\n    return this.myForm.get(\"recommendedFor.department\");\r\n  }\r\n\r\n  get recommendedJobCtrl() {\r\n    return this.myForm.get(\"recommendedFor.jobTitle\");\r\n  }\r\n\r\n  RemoveFile() {\r\n    this.removeImage = 1;\r\n    if (this.course) this.course.attach_path = null;\r\n    this.FormCtrls.subCourse_attach.setValue(null);\r\n  }\r\n  //#endregion\r\n\r\n  //#region radio btns\r\n  // certificateRadioList: RadioButtonModel[] = [\r\n  //   {\r\n  //     label: \"labels.Yes\",\r\n  //     value: true,\r\n  //   },\r\n  //   {\r\n  //     label: \"labels.No\",\r\n  //     value: false,\r\n  //   },\r\n  // ];\r\n\r\n  followDiplomaRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: \"course.Independent\",\r\n      value: false,\r\n    },\r\n    {\r\n      label: \"course.InDiploma\",\r\n      value: true,\r\n    },\r\n  ];\r\n  //#endregion\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- Add Course -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"admin-index-card add-course-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          parentTitle=\"course.courses\"\r\n          addTitle=\"addNew\"\r\n          editTitle=\"Edit\"\r\n          [id]=\"courseId\"\r\n          [subTitle]=\"\r\n            stepIndex == 0\r\n              ? 'course.fillTheGeneralInformationAboutNewCouse'\r\n              : stepIndex == 1\r\n              ? 'course.addLearningOutcomes'\r\n              : 'course.selectTargetDepartmentsJobTitles'\r\n          \"\r\n          [parentTitleLink]=\"backBtnUrl\"\r\n          [parentLinkParams]=\"{ functionId: functionId }\"\r\n        ></page-title>\r\n\r\n        <!-- <a\r\n          mat-raised-button\r\n          [routerLink]=\"backBtnUrl\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a> -->\r\n      </mat-card-title>\r\n\r\n      <div style=\"margin-bottom: 20px\">\r\n        <progress-bar\r\n          [percentage]=\"stepIndex == 0 ? 33.3 : stepIndex == 1 ? 66.6 : 100\"\r\n          class=\"dark-blue\"\r\n        ></progress-bar>\r\n      </div>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <!--#region step one  -->\r\n        <div class=\"row\" [class.hidden]=\"stepIndex != 0\">\r\n          <div class=\"col-12 p-0\">\r\n            <form [formGroup]=\"myForm\" class=\"overflow-hidden\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-label class=\"input-label d-inline-block mbottom-6\">\r\n                    {{ \"course.selectCourseCategory\" | translate | titlecase }}\r\n                  </mat-label>\r\n                  <div\r\n                    class=\"categories-cards\"\r\n                    appScrollableHorizontal\r\n                    *ngIf=\"isLoadedMainCategories; else loadingCategories\"\r\n                  >\r\n                    <div\r\n                      class=\"item\"\r\n                      *ngFor=\"let category of mainCategories\"\r\n                      (click)=\"onChaneMainCategory(category.id)\"\r\n                      [class.selected]=\"isCategorySelected(category.id)\"\r\n                    >\r\n                      <span>\r\n                        <img\r\n                          [src]=\"\r\n                            fileService.previewPicture(category.attach_path)\r\n                          \"\r\n                          (error)=\"\r\n                            fileService.onError($event, appAssets.categoryNoImg)\r\n                          \"\r\n                          width=\"64\"\r\n                          height=\"64\"\r\n                        />\r\n                      </span>\r\n                      <span class=\"text roboto-bold d-block\">\r\n                        {{ category.name }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <mat-hint class=\"hint-error\">\r\n                    <input-validation-msg\r\n                      [control]=\"FormCtrls.mainCategoryId\"\r\n                      [submitted]=\"submitted\"\r\n                      [isSelect]=\"true\"\r\n                    ></input-validation-msg>\r\n                  </mat-hint>\r\n\r\n                  <ng-template #loadingCategories>\r\n                    <div\r\n                      class=\"row overflow-hidden flex-nowrap\"\r\n                      style=\"gap: 16px\"\r\n                    >\r\n                      <div\r\n                        *ngFor=\"let ele of [].constructor(8)\"\r\n                        style=\"min-width: 130px\"\r\n                      >\r\n                        <app-card-skeleton [height]=\"107\"></app-card-skeleton>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>\r\n\r\n                <div class=\"col-lg-11 col-12\">\r\n                  <div class=\"row\">\r\n                    <!-- english name -->\r\n                    <div class=\"col-lg-4 col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"FormCtrls.subCourse_en_name\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"labels.enName\"\r\n                      ></app-input>\r\n                    </div>\r\n\r\n                    <!-- arabic name -->\r\n                    <div class=\"col-lg-4 col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"FormCtrls.subCourse_ar_name\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"labels.arName\"\r\n                      ></app-input>\r\n                    </div>\r\n\r\n                    <!-- sub categories -->\r\n                    <div\r\n                      class=\"col-lg-4 col-md-6 col-12\"\r\n                      [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\"\r\n                    >\r\n                      <!-- <div class=\"row\">\r\n                        <div class=\"col-10\"> -->\r\n                      <mat-label class=\"input-label\">\r\n                        {{ \"categories.subCategory\" | translate }}\r\n                      </mat-label>\r\n                      <mat-form-field [appearance]=\"appearance\">\r\n                        <mat-select formControlName=\"subCategoryIds\" multiple>\r\n                          <ng-container\r\n                            *ngFor=\"let subCategory of subCategories\"\r\n                          >\r\n                            <!-- <mat-option [value]=\"subCategory.sub_sub_id\">\r\n                              {{ subCategory.sub_cat_name }} /\r\n                              {{ subCategory.main_cat_name }}\r\n                            </mat-option> -->\r\n                            <mat-option [value]=\"subCategory.id\">\r\n                              {{ subCategory.name }}\r\n                            </mat-option>\r\n                          </ng-container>\r\n                        </mat-select>\r\n\r\n                        <mat-hint>\r\n                          <input-validation-msg\r\n                            [control]=\"FormCtrls.subCategoryIds\"\r\n                            [submitted]=\"submitted\"\r\n                            [isSelect]=\"true\"\r\n                          ></input-validation-msg>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                      <!-- </div>\r\n                        <div class=\"col-2 p-0\">\r\n                          <a\r\n                            *ngIf=\"showAddCategoryButton\"\r\n                            class=\"btn btn-danger\"\r\n                            matTooltip=\"{{\r\n                              'categories.add category' | translate\r\n                            }}\"\r\n                            (click)=\"openAddCategoryDialog()\"\r\n                          >\r\n                            {{ \"General.Add\" | translate }}\r\n                          </a>\r\n                        </div>\r\n                      </div> -->\r\n                    </div>\r\n\r\n                    <!-- promo link -->\r\n                    <div class=\"col-lg-4 col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"FormCtrls.subjectPromoVideoPath\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"course.promo\"\r\n                      ></app-input>\r\n                    </div>\r\n\r\n                    <!-- cover photo -->\r\n                    <div class=\"col-lg-4 col-md-6 col-12\">\r\n                      <!-- <div class=\"h-100 row align-items-center evenly py-2\"> -->\r\n                      <!-- <span class=\"mt-1 mr-2 float-right\">\r\n                          <img\r\n                            [class.hideImg]=\"\r\n                              !FormCtrls?.subCourse_attach?.value &&\r\n                              !course?.attach_path\r\n                            \"\r\n                            [src]=\"\r\n                              fileService.previewPicture(\r\n                                imageChange\r\n                                  ? FormCtrls?.subCourse_attach?.value\r\n                                  : course?.attach_path\r\n                              )\r\n                            \"\r\n                            class=\"coverPhoto\"\r\n                            alt=\"{{ 'course.coverPhoto' | translate }}\"\r\n                          />\r\n                        </span> -->\r\n\r\n                      <app-button-file-input-new\r\n                        [control]=\"FormCtrls.subCourse_attach\"\r\n                        accept=\"image/*\"\r\n                        htmlId=\"cover-photo\"\r\n                        upperLabel=\"course.coverPhoto\"\r\n                        icon=\"fas fa-cloud-upload-alt\"\r\n                        [removeFile]=\"removeImage\"\r\n                        (onDelete)=\"RemoveFile()\"\r\n                        [fileObject]=\"savedFile\"\r\n                        (onChange)=\"savedFile = null\"\r\n                      ></app-button-file-input-new>\r\n                      <!-- </div> -->\r\n                    </div>\r\n\r\n                    <!-- diploma -->\r\n                    <div class=\"col-lg-4 col-md-6 col-12 ptop-20\">\r\n                      <app-radio-button\r\n                        [control]=\"FormCtrls.isFollow\"\r\n                        [radioList]=\"followDiplomaRadioList\"\r\n                        (onChange)=\"onChangeIsFollow($event)\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"course.existence\"\r\n                      ></app-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-4 col-md-6 col-12\">\r\n                      <!-- <div class=\"row\">\r\n                        <div class=\"col-10\"> -->\r\n                      <diploma-dropdown\r\n                        [disable]=\"!FormCtrls?.isFollow.value\"\r\n                        [control]=\"FormCtrls.Diploma_id\"\r\n                        [submitted]=\"submitted\"\r\n                        [reload]=\"reloadDiploma\"\r\n                      ></diploma-dropdown>\r\n                    </div>\r\n                    <!--  <div class=\"col-2 p-0\">\r\n                          <button\r\n                            *ngIf=\"\r\n                              FormCtrls?.isFollow.value && showAddDiplomaButton\r\n                            \"\r\n                            class=\"btn btn-danger\"\r\n                            matTooltip=\"{{ 'course.AddDiploma' | translate }}\"\r\n                            (click)=\"openAddDeplomaDialog()\"\r\n                          >\r\n                            {{ \"General.Add\" | translate }}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div> -->\r\n\r\n                    <!-- course duration -->\r\n                    <div class=\"col-lg-4 col-md-6 col-12 time-input\">\r\n                      <app-input\r\n                        [control]=\"FormCtrls.courseDuration\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"course.courseDuration\"\r\n                        placeholder=\"hh:mm\"\r\n                        materialIcon=\"access_time_filled\"\r\n                      ></app-input>\r\n                    </div>\r\n\r\n                    <!-- languages of course -->\r\n                    <div class=\"col-lg-4 col-md-6 col-12 ptop-20\">\r\n                      <div class=\"row m-0\" style=\"gap: 5px 10px\">\r\n                        <label\r\n                          class=\"radio-label roboto-bold label-check d-flex align-items-center text-capitalize\"\r\n                        >\r\n                          {{ \"course.Languages\" | translate }}\r\n                        </label>\r\n                        <div class=\"flex-grow-1 radio-group\">\r\n                          <section class=\"row justify-content-around\">\r\n                            <mat-checkbox\r\n                              [checked]=\"FormCtrls.isArabic.value\"\r\n                              (change)=\"onChangeLanguage($event, 1)\"\r\n                            >\r\n                              {{ \"course.Arabic\" | translate | titlecase }}\r\n                            </mat-checkbox>\r\n                            <mat-checkbox\r\n                              [checked]=\"FormCtrls.isEnglish.value\"\r\n                              (change)=\"onChangeLanguage($event, 2)\"\r\n                            >\r\n                              {{ \"course.English\" | translate | titlecase }}\r\n                            </mat-checkbox>\r\n                          </section>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- course hours -->\r\n                    <!-- <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"FormCtrls.courseHours\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"course.CourseHours\"\r\n                        type=\"number\"\r\n                      ></app-input>\r\n                    </div> -->\r\n\r\n                    <!-- course minutes -->\r\n                    <!-- <div class=\"col-md-6 col-12\">\r\n                      <app-input\r\n                        [control]=\"FormCtrls.courseMinutes\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"course.CourseMinutes\"\r\n                        type=\"number\"\r\n                      ></app-input>\r\n                    </div> -->\r\n\r\n                    <!-- description -->\r\n                    <div class=\"col-lg-8 col-md-6 col-12\">\r\n                      <app-text-editor\r\n                        [control]=\"FormCtrls.subjectDescription\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"course.courseDetails\"\r\n                      ></app-text-editor>\r\n                      <!-- <app-textarea\r\n                        [control]=\"FormCtrls.subjectDescription\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"course.courseDetails\"\r\n                        rows=\"7\"\r\n                      ></app-textarea> -->\r\n                    </div>\r\n\r\n                    <!-- goal  -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <app-input\r\n                        [control]=\"FormCtrls.courseGoal\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"course.goal\"\r\n                        type=\"text\"\r\n                      ></app-input>\r\n                    </div> -->\r\n\r\n                    <div class=\"col-lg-4 col-md-6 col-12\">\r\n                      <div class=\"row\">\r\n                        <!-- From date  -->\r\n                        <div class=\"col-12\">\r\n                          <app-datepicker\r\n                            [control]=\"FormCtrls?.from_date\"\r\n                            [submitted]=\"submitted\"\r\n                            label=\"labels.FromDate\"\r\n                          ></app-datepicker>\r\n                        </div>\r\n\r\n                        <!-- To date  -->\r\n                        <div class=\"col-12\">\r\n                          <app-datepicker\r\n                            [control]=\"FormCtrls?.to_date\"\r\n                            [submitted]=\"submitted\"\r\n                            label=\"labels.ToDate\"\r\n                          ></app-datepicker>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- certification -->\r\n                    <div class=\"col-lg-4 col-md-6 col-12 mtop-20 certificate\">\r\n                      <slide-toggle\r\n                        [control]=\"FormCtrls.CourseCertificate\"\r\n                        label=\"course.HasCertificate\"\r\n                        [submitted]=\"submitted\"\r\n                      ></slide-toggle>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <!--#endregion -->\r\n\r\n        <!--#region step two  -->\r\n        <div class=\"row second-step\" [class.hidden]=\"stepIndex != 1\">\r\n          <div class=\"col-12 p-0\">\r\n            <form [formGroup]=\"myForm\">\r\n              <mat-label class=\"input-label\">\r\n                {{ \"course.employeeWillLearn\" | translate }}\r\n              </mat-label>\r\n\r\n              <ul class=\"list-group customeLG\">\r\n                <li class=\"list-group-item\" *ngFor=\"let learn of whatWillLearn\">\r\n                  {{ learn }}\r\n                </li>\r\n\r\n                <li class=\"list-group-item hasInput\" *ngIf=\"addWhatWillLearn\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.learningOutcomes\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-input>\r\n                </li>\r\n\r\n                <li class=\"list-group-item hasBtn\" *ngIf=\"!addWhatWillLearn\">\r\n                  <button\r\n                    class=\"btn btn-transparent\"\r\n                    (click)=\"addWhatWillLearn = true\"\r\n                  >\r\n                    {{ \"course.addNewOutcome\" | translate }}\r\n                    &nbsp;\r\n                    <i class=\"icon-plus\"></i>\r\n                  </button>\r\n                </li>\r\n                <li class=\"list-group-item hasBtn\" *ngIf=\"addWhatWillLearn\">\r\n                  <button class=\"btn btn-transparent\" (click)=\"saveNewLearn()\">\r\n                    {{ \"General.Save\" | translate }}\r\n                    &nbsp;\r\n                    <i class=\"icon-plus\"></i>\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n\r\n              <!-- <div class=\"col-lg-4 col-md-6 col-12\">\r\n                  <app-text-editor\r\n                    [control]=\"FormCtrls.learningOutcomes\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.learningOutcomes\"\r\n                  ></app-text-editor>\r\n                  <app-textarea\r\n                    [control]=\"FormCtrls.learningOutcomes\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.learningOutcomes\"\r\n                    rows=\"7\"\r\n                  ></app-textarea>\r\n                </div> -->\r\n\r\n              <mat-hint class=\"hint-error\">\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"submitted && whatWillLearn.length == 0\"\r\n                >\r\n                  {{ \"course.EnterOneOneLearningOutcome\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <!--#endregion -->\r\n\r\n        <!--#region step three  -->\r\n        <div class=\"row second-step\" [class.hidden]=\"stepIndex != 2\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row overflow-hidden pbottom-2\">\r\n                <div class=\"col-md col-12 basic-jobs\">\r\n                  <!-- mandatory -->\r\n                  <h5>{{ \"course.basicFor\" | translate }}</h5>\r\n\r\n                  <div formGroupName=\"mandatoryFor\" class=\"row\">\r\n                    <div class=\"col-sm-7 col-12\">\r\n                      <department-dropdown\r\n                        [control]=\"mandatoryDeptCtrl\"\r\n                        [submitted]=\"submitted\"\r\n                        [multiple]=\"true\"\r\n                      ></department-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                      <mat-label class=\"input-label job-title-label\">\r\n                        {{ \"JobTitle.alljob\" | translate }}\r\n                      </mat-label>\r\n\r\n                      <div\r\n                        class=\"mat-elevation-z8 f-w\"\r\n                        appScrollableHorizontal\r\n                        *ngIf=\"isLoadedBasic; else loadingBasic\"\r\n                      >\r\n                        <table mat-table [dataSource]=\"dataSourceBasic\" matSort>\r\n                          <ng-container matColumnDef=\"course.department\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                              {{ \"course.department\" | translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">\r\n                              {{\r\n                                languageService.isArabic\r\n                                  ? ele.departmentArName\r\n                                  : ele.departmentEnName\r\n                              }}\r\n                            </td>\r\n                          </ng-container>\r\n\r\n                          <!-- joined employees Column -->\r\n                          <ng-container matColumnDef=\"course.jobTitle\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                              {{ \"course.jobTitle\" | translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">\r\n                              {{\r\n                                languageService.isArabic\r\n                                  ? ele.jobTitleArName\r\n                                  : ele.jobTitleEnName\r\n                              }}\r\n                            </td>\r\n                          </ng-container>\r\n\r\n                          <!-- actions Column -->\r\n                          <ng-container matColumnDef=\"all\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                              <mat-checkbox\r\n                                *ngIf=\"\r\n                                  dataSourceBasic?.data?.length > 0;\r\n                                  else noData\r\n                                \"\r\n                                class=\"mright-8 mleft-8\"\r\n                                labelPosition=\"before\"\r\n                                [checked]=\"isAllCheckboxSelectedBasic\"\r\n                                (change)=\"selectAll($event.checked, true)\"\r\n                              >\r\n                                {{ \"all\" | translate }}\r\n                              </mat-checkbox>\r\n                              <ng-template #noData>\r\n                                {{ \"all\" | translate }}\r\n                              </ng-template>\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele; let i = index\">\r\n                              <!-- [(ngModel)]=\"ele.checked\"\r\n                                [checked]=\"ele.checked\"\r\n                                [name]=\"ele.id\" -->\r\n                              <mat-checkbox\r\n                                class=\"td-checkbox\"\r\n                                [checked]=\"ele.checked\"\r\n                                (change)=\"\r\n                                  changeCheckbox($event.checked, i, true)\r\n                                \"\r\n                              ></mat-checkbox>\r\n                            </td>\r\n                          </ng-container>\r\n\r\n                          <tr\r\n                            mat-header-row\r\n                            *matHeaderRowDef=\"displayedColumns\"\r\n                          ></tr>\r\n                          <tr\r\n                            mat-row\r\n                            *matRowDef=\"let row; columns: displayedColumns\"\r\n                          ></tr>\r\n                        </table>\r\n\r\n                        <mat-hint class=\"hint-error\">\r\n                          <input-validation-msg\r\n                            [control]=\"mandatoryJobCtrl\"\r\n                            [submitted]=\"submitted\"\r\n                            [isSelect]=\"true\"\r\n                          ></input-validation-msg>\r\n                        </mat-hint>\r\n                      </div>\r\n\r\n                      <ng-template #loadingBasic>\r\n                        <app-table-skeleton\r\n                          [displayedColumns]=\"displayedColumns\"\r\n                        ></app-table-skeleton>\r\n                      </ng-template>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-md col-12 recommended-jobs\">\r\n                  <!-- recommended -->\r\n                  <h5>{{ \"course.recommendedFor\" | translate }}</h5>\r\n\r\n                  <div formGroupName=\"recommendedFor\" class=\"row\">\r\n                    <div class=\"col-sm-7 col-12\">\r\n                      <department-dropdown\r\n                        [control]=\"recommendedDeptCtrl\"\r\n                        [submitted]=\"submitted\"\r\n                        [multiple]=\"true\"\r\n                      ></department-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                      <mat-label class=\"input-label job-title-label\">\r\n                        {{ \"JobTitle.alljob\" | translate }}\r\n                      </mat-label>\r\n\r\n                      <div\r\n                        class=\"mat-elevation-z8 f-w\"\r\n                        appScrollableHorizontal\r\n                        *ngIf=\"isLoadedRecommended; else loadingRecommended\"\r\n                      >\r\n                        <table\r\n                          mat-table\r\n                          [dataSource]=\"dataSourceRecommended\"\r\n                          matSort\r\n                        >\r\n                          <ng-container matColumnDef=\"course.department\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                              {{ \"course.department\" | translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">\r\n                              {{\r\n                                languageService.isArabic\r\n                                  ? ele.departmentArName\r\n                                  : ele.departmentEnName\r\n                              }}\r\n                            </td>\r\n                          </ng-container>\r\n\r\n                          <!-- joined employees Column -->\r\n                          <ng-container matColumnDef=\"course.jobTitle\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                              {{ \"course.jobTitle\" | translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">\r\n                              {{\r\n                                languageService.isArabic\r\n                                  ? ele.jobTitleArName\r\n                                  : ele.jobTitleEnName\r\n                              }}\r\n                            </td>\r\n                          </ng-container>\r\n\r\n                          <!-- actions Column -->\r\n                          <ng-container matColumnDef=\"all\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                              <mat-checkbox\r\n                                *ngIf=\"\r\n                                  dataSourceRecommended?.data?.length > 0;\r\n                                  else noData\r\n                                \"\r\n                                class=\"mright-8 mleft-8\"\r\n                                labelPosition=\"before\"\r\n                                [checked]=\"isAllCheckboxSelectedRecommended\"\r\n                                (change)=\"selectAll($event.checked, false)\"\r\n                              >\r\n                                {{ \"all\" | translate }}\r\n                              </mat-checkbox>\r\n                              <ng-template #noData>\r\n                                {{ \"all\" | translate }}\r\n                              </ng-template>\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele; let i = index\">\r\n                              <mat-checkbox\r\n                                class=\"td-checkbox\"\r\n                                [checked]=\"ele.checked\"\r\n                                (change)=\"\r\n                                  changeCheckbox($event.checked, i, false)\r\n                                \"\r\n                              ></mat-checkbox>\r\n                            </td>\r\n                          </ng-container>\r\n\r\n                          <tr\r\n                            mat-header-row\r\n                            *matHeaderRowDef=\"displayedColumns\"\r\n                          ></tr>\r\n                          <tr\r\n                            mat-row\r\n                            *matRowDef=\"let row; columns: displayedColumns\"\r\n                          ></tr>\r\n                        </table>\r\n\r\n                        <mat-hint class=\"hint-error\">\r\n                          <input-validation-msg\r\n                            [control]=\"recommendedJobCtrl\"\r\n                            [submitted]=\"submitted\"\r\n                            [isSelect]=\"true\"\r\n                          ></input-validation-msg>\r\n                        </mat-hint>\r\n                      </div>\r\n\r\n                      <ng-template #loadingRecommended>\r\n                        <app-table-skeleton\r\n                          [displayedColumns]=\"displayedColumns\"\r\n                        ></app-table-skeleton>\r\n                      </ng-template>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions\r\n        align=\"end\"\r\n        class=\"pt-0\"\r\n        [ngStyle]=\"{\r\n          'margin-top': stepIndex == 0 ? '-50px' : '0'\r\n        }\"\r\n      >\r\n        <button\r\n          class=\"dark-blue-btn radius-btn cancel-btn\"\r\n          [routerLink]=\"backBtnUrl\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          *ngIf=\"stepIndex == 0\"\r\n        >\r\n          <span class=\"text-btn\">\r\n            {{ \"General.cancel\" | translate }}\r\n          </span>\r\n        </button>\r\n\r\n        <button\r\n          class=\"dark-blue-btn radius-btn cancel-btn\"\r\n          (click)=\"stepIndex = stepIndex - 1\"\r\n          *ngIf=\"stepIndex > 0\"\r\n        >\r\n          <span class=\"text-btn\">\r\n            {{ \"General.Back\" | translate }}\r\n          </span>\r\n        </button>\r\n\r\n        <button\r\n          class=\"orange-btn radius-btn next-btn\"\r\n          (click)=\"stepIndex = stepIndex + 1\"\r\n          *ngIf=\"stepIndex < 2\"\r\n        >\r\n          <span class=\"text-btn\">\r\n            {{ \"General.Next\" | translate }}\r\n          </span>\r\n        </button>\r\n\r\n        <button\r\n          class=\"orange-btn radius-btn next-btn\"\r\n          (click)=\"onSubmit()\"\r\n          *ngIf=\"stepIndex == 2\"\r\n        >\r\n          <span class=\"text-btn\">\r\n            {{\r\n              (courseId == 0 ? \"General.Create\" : \"General.Update\") | translate\r\n            }}\r\n          </span>\r\n        </button>\r\n      </mat-card-actions>\r\n      <div class=\"clearfix\"></div>\r\n      <!--#endregion -->\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IAddEditUserVM,\r\n  ICourseGetVM,\r\n  IGetUserCheckVM,\r\n  IGetUsersVM,\r\n  IuserAddFile,\r\n  IUserListGetVM,\r\n  searchUserVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-users-to-course\",\r\n  templateUrl: \"./add-users-to-course.component.html\",\r\n  styleUrls: [\"./add-users-to-course.component.scss\"],\r\n})\r\nexport class AddUsersToCourseComponent implements OnInit {\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  curPage: number = 1;\r\n  EduCompId: number;\r\n  itemCount: number = 0;\r\n  courseId: number = 0;\r\n  courseArName: string;\r\n  courseEnName: string;\r\n\r\n  dataSource: MatTableDataSource<IUserListGetVM>;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"account_email\",\r\n    \"mobile\",\r\n    \"actions\",\r\n  ];\r\n  myForm!: FormGroup;\r\n  // lastUserIdSearch: number;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private authserv: AuthService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private courseService: CourseService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    public languageService: LanguageService,\r\n    public fileService: UploadFileService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.courseId = Number(params.get(\"courseId\"));\r\n\r\n      this.courseService\r\n        .getCourseById<ICourseGetVM>(this.courseId)\r\n        .subscribe((res) => {\r\n          if (res) {\r\n            this.courseArName = res.subCourse_ar_name;\r\n            this.courseEnName = res.subCourse_en_name;\r\n          }\r\n        });\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.fb.group({\r\n      // page: [1],\r\n      // subCourseId: [this.courseId],\r\n      // EduCompId: [this.EduCompId],\r\n      account_email: [null],\r\n      mobile: [null],\r\n      code: [null],\r\n      excelFile: [null],\r\n    });\r\n\r\n    this.getAllUsers(this.curPage);\r\n  }\r\n\r\n  // get EduCompIdCtrl() {\r\n  //   return this.myForm.get(\"EduCompId\");\r\n  // }\r\n  // get courseIdCtrl() {\r\n  //   return this.myForm.get(\"subCourseId\");\r\n  // }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      // this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.getAllUsers(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n\r\n    // this.authserv.branchId.subscribe((e) => {\r\n    //   this.getAllUsers(1);\r\n    // });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"name\":\r\n          return this.languageService.isArabic\r\n            ? item.ar_name ?? item.en_name\r\n            : item.en_name ?? item.ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllUsers(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.courseService\r\n      .getAllUsers<IGetUsersVM>(page, this.courseId)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.userList);\r\n          this.itemCount = res.countItems;\r\n          this.startSortingTable();\r\n          // console.log(\"Users\", res.subUserList);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  checkIfUserExist() {\r\n    if (\r\n      !this.formCtls.account_email.value &&\r\n      !this.formCtls.mobile.value &&\r\n      !this.formCtls.code.value\r\n    ) {\r\n      this.toastr.warning(\"course.enterOneField\");\r\n      return;\r\n    }\r\n\r\n    let obj: searchUserVM = {\r\n      account_email: this.formCtls.account_email.value?.trim() || null,\r\n      mobile: this.formCtls.mobile.value?.trim() || null,\r\n      code: this.formCtls.code.value || null,\r\n    };\r\n\r\n    this.spinner.show();\r\n    this.courseService\r\n      .checkUser<searchUserVM, IGetUserCheckVM>(obj, this.EduCompId)\r\n      .subscribe((user: IGetUserCheckVM) => {\r\n        // console.log(\"check user\", user);\r\n        if (user) {\r\n          // this.lastUserIdSearch = user.userId;\r\n          this.toastr.info(\"course.existUser\");\r\n        } else {\r\n          this.toastr.info(\"course.notExistUser\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  addUser() {\r\n    if (\r\n      !this.formCtls.account_email.value &&\r\n      !this.formCtls.mobile.value &&\r\n      !this.formCtls.code.value\r\n    ) {\r\n      this.toastr.warning(\"course.enterOneField\");\r\n      return;\r\n    }\r\n\r\n    let obj: searchUserVM = {\r\n      account_email: this.formCtls.account_email.value?.trim() || null,\r\n      mobile: this.formCtls.mobile.value?.trim() || null,\r\n      code: this.formCtls.code.value || null,\r\n    };\r\n    // console.log(\"form values add\", this.myForm.value);\r\n\r\n    this.spinner.show();\r\n    this.courseService\r\n      .checkUser<searchUserVM, IGetUserCheckVM>(obj, this.EduCompId)\r\n      .subscribe((user: IGetUserCheckVM) => {\r\n        // console.log(\"check user\", user);\r\n        if (!user) {\r\n          this.toastr.warning(\"course.notExistUser\");\r\n          this.spinner.hide();\r\n          return;\r\n        } else {\r\n          let obj: IAddEditUserVM = {\r\n            userId: user.userId,\r\n            subject_id: this.courseId,\r\n          };\r\n          // this.spinner.show();\r\n          this.courseService\r\n            .addUser<IAddEditUserVM, any>(obj)\r\n            .subscribe((res: any) => {\r\n              // console.log('adduser', res);\r\n              if (res.returnValue == 0) this.toastr.error(res.returnString);\r\n              else {\r\n                this.myForm.reset();\r\n                this.getAllUsers(1); // first page after add\r\n                this.dataSource.paginator = this.paginator;\r\n                this.toastr.success(\"General.AddSuccessfully\");\r\n              }\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(user: IUserListGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? user.ar_name ?? user.en_name\r\n            : user.en_name ?? user.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUser(user);\r\n      });\r\n  }\r\n\r\n  deleteUser(user: IUserListGetVM) {\r\n    this.spinner.show();\r\n    this.courseService.deleteUser(user.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllUsers(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllUsers(this.curPage);\r\n        }\r\n      } else this.toastr.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  uploadUsersByExcel() {\r\n    if (this.formCtls.excelFile.value == null) {\r\n      this.toastr.warning(\"course.excelSheet\");\r\n      return;\r\n    } else {\r\n      this.spinner.show();\r\n      this.courseService\r\n        .uploadUsersByExcel<IuserAddFile>({\r\n          uploadedFile: this.formCtls.excelFile.value,\r\n          subject_id: this.courseId,\r\n        })\r\n        .subscribe((res: any) => {\r\n          // console.log(res);\r\n          if (\r\n            res?.returnValue == 1 ||\r\n            (res?.isSendAllSuccess == false && res?.errors.length == 0)\r\n          ) {\r\n            this.toastr.success(\"General.UploadSuccessfully\");\r\n            this.getAllUsers(1); // first page after add\r\n            this.dataSource.paginator = this.paginator;\r\n          } else if (res?.returnValue == 0)\r\n            this.toastr.error(res?.returnString);\r\n          else if (res?.isSendAllSuccess == false) {\r\n            this.toastr.error(res?.errors[0]);\r\n            this.getAllUsers(1); // first page after add\r\n            this.dataSource.paginator = this.paginator;\r\n          } else if (res?.isUploaded == false)\r\n            this.toastr.error(res?.errors[0]);\r\n          this.spinner.hide();\r\n\r\n          this.formCtls.excelFile.setValue(null);\r\n          this.fileService.resetFileById(\"excel-file\");\r\n        });\r\n    }\r\n  }\r\n\r\n  get formCtls() {\r\n    return this.myForm.controls;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"course.AddEmployeeToCourse\" | translate }} -\r\n        {{\r\n          languageService.isArabic\r\n            ? courseArName ?? courseEnName\r\n            : courseEnName ?? courseArName\r\n        }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/setup/course/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"checkIfUserExist()\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtls.account_email\"\r\n                    label=\"labels.Email\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtls.mobile\"\r\n                    label=\"labels.MobileNo\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtls.code\"\r\n                    label=\"labels.Code\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-file-input\r\n                    [control]=\"formCtls.excelFile\"\r\n                    accept=\".xls, .xlsx\"\r\n                    htmlId=\"excel-file\"\r\n                    label=\"labels.ExcelSheet\"\r\n                  ></app-file-input>\r\n\r\n                  <p class=\"info\">\r\n                    {{ \"labels.MustHasColCodes\" | translate }}\r\n                    '<strong>code</strong>'\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"addUser()\"\r\n          class=\"btn btn-info bg-light-info\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n\r\n        <button\r\n          mat-raised-button\r\n          type=\"button\"\r\n          (click)=\"uploadUsersByExcel()\"\r\n          class=\"btn btn-info bg-light-info\"\r\n        >\r\n          <i class=\"fa fa-upload mr-1\"></i>\r\n          {{ \"General.Upload\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  languageService.isArabic\r\n                    ? ele.ar_name ?? ele.en_name\r\n                    : ele.en_name ?? ele.ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"account_email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.MobileNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"text-center\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllUsers($event.pageIndex + 1)\"\r\n            [length]=\"itemCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewChild} from \"@angular/core\";\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {ICourseGetIndexVM, ICourseGetModel, ISearchCourse,} from \"app/admin/models/admin/setup/course\";\r\nimport {CourseService} from \"app/admin/services/Admin/setup/course.service\";\r\nimport {DeleteDialogComponent} from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {AppAssets} from \"app/shared/data/app-assets\";\r\nimport {defaultRes, IRowFunctionVM} from \"app/shared/models/general/general\";\r\nimport {UploadFileService} from \"app/shared/services/General/upload-file.service\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {LanguageService} from \"app/shared/services/language.service\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {EditOptionsDialogComponent} from \"../edit-options-dialog/edit-options-dialog.component\";\r\nimport {ResMessage} from \"app/shared/enums/res-message\";\r\n\r\n@Component({\r\n  selector: \"app-course-index\",\r\n  templateUrl: \"./course-index.component.html\",\r\n  styleUrls: [\"./course-index.component.scss\"],\r\n})\r\nexport class CourseIndexComponent implements OnInit {\r\n  EduCompId: number;\r\n  departmentId: number;\r\n  jobId: number;\r\n  totalItems: number;\r\n\r\n  displayedColumns: string[] = [\r\n    // \"#\",\r\n    \"attach_path\",\r\n    \"CourseName\",\r\n    \"category\",\r\n    \"subCategory\",\r\n    \"instructor\",\r\n    // \"department\",\r\n    \"numberOfEmployees\",\r\n    \"actions\",\r\n  ];\r\n  // displayedColumns: string[] = [];\r\n\r\n  // lists from api\r\n  // mandatoryColomns: string[] = [];\r\n  // optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<ICourseGetIndexVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  myForm!: FormGroup;\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Edit\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"UpdateArticalJob\" },\r\n  //   { functionName: \"DeleteArticalJob\" },\r\n  // ];\r\n\r\n  displayedColumnsSkeleton: string[] = [\r\n    \"course.cover\",\r\n    \"labels.CourseName\",\r\n    \"categories.category\",\r\n    \"categories.subCategory\",\r\n    \"instructor\",\r\n    \"joinedEmployees\",\r\n    \"Actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private courseServ: CourseService,\r\n    private fb: FormBuilder,\r\n    private ar: ActivatedRoute,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    private dialog: MatDialog,\r\n    public fileService: UploadFileService,\r\n    public languageService: LanguageService,\r\n    public appAssets: AppAssets,\r\n    private messagesService: MessagesService,\r\n  ) {\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.eduCompId);\r\n    this.myForm = this.fb.group({\r\n      departmentId: [null],\r\n      jobId: [\r\n        {\r\n          value: null,\r\n          disabled: true,\r\n        },\r\n      ],\r\n      diplomaId: [null],\r\n      courseName: [null],\r\n      page: [1],\r\n    });\r\n\r\n    // initialize dataSource | get all courses\r\n    this.getAllCourses(this.page.value);\r\n  }\r\n\r\n  // editColumnsToView(index: number, selected: boolean) {\r\n  //   if (selected)\r\n  //     this.displayedColumns.splice(\r\n  //       this.displayedColumns.length - 1,\r\n  //       0,\r\n  //       this.optionalColomns[index]\r\n  //     );\r\n  //   else {\r\n  //     let indexInTable = this.displayedColumns.findIndex(\r\n  //       (ele) => ele == this.optionalColomns[index]\r\n  //     );\r\n  //     this.displayedColumns.splice(indexInTable, 1);\r\n  //   }\r\n  // }\r\n  // selectColumnsToView(values: number[]) {\r\n  //   this.displayedColumns = this.mandatoryColomns.slice();\r\n  //   // values > array of selected index in optional columns\r\n  //   values.forEach((index) =>\r\n  //     this.displayedColumns.splice(\r\n  //       this.displayedColumns.length - 1,\r\n  //       0,\r\n  //       this.optionalColomns[index]\r\n  //     )\r\n  //   );\r\n  // }\r\n\r\n  /* applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  } */\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllCourses(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  /* customFilter() {\r\n    this.dataSource.filterPredicate = (data: ICourseGetIndexVM, filter) => {\r\n      return (\r\n        data.subCourse_en_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.subCourse_ar_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        // data.promoLink?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        // data.courseDescreption?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.department\r\n          ?.map((d) => (this.languageService.isArabic ? d.ar_name : d.en_name))\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1 ||\r\n        data.department\r\n          ?.map((d) =>\r\n            d.jobTitle?.map((j) =>\r\n              this.languageService.isArabic ? j.ar_name : j.en_name\r\n            )\r\n          )\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1\r\n      );\r\n    };\r\n  } */\r\n\r\n  startSortingTable() {\r\n    // sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"category\":\r\n          return item.category[0].cat_name;\r\n        case \"subCategory\":\r\n          return item.subCategory[0].sub_cat_name;\r\n        case \"instructor\":\r\n          return item.instructors[0].first_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAllCourses(p: number) {\r\n    this.isLoaded = false;\r\n    this.page?.setValue(p);\r\n\r\n    let searchData: ISearchCourse = {\r\n      depId: this.FormCtrls.departmentId.value || 0,\r\n      jobId: this.FormCtrls.jobId.value || 0,\r\n      // course\r\n      subCourseName:\r\n        this.FormCtrls.courseName.value?.trim().toLowerCase() || null,\r\n      // diploma\r\n      diploma_id: this.FormCtrls.diplomaId.value || 0,\r\n      page: this.page.value,\r\n      eduCompId: this.EduCompId || 0,\r\n    };\r\n    // console.log(searchData);\r\n\r\n    // this.spinner.show();\r\n    this.courseServ\r\n      .getAllCoursesBySearch<ICourseGetModel>(searchData)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          let courses = response.subCourseList;\r\n          // put jobTitles of the same department in one array\r\n          courses = courses?.map((course) => {\r\n            /* let depts = [];\r\n            course.department?.forEach((d) => {\r\n              let index = depts.findIndex((i) => i.id == d.id);\r\n              if (index == -1) depts.push(d);\r\n              else depts[index].jobTitle.push(d.jobTitle[0]);\r\n            });\r\n            course.department = depts; */\r\n            let subIds: number[] = [];\r\n            course.subCategory = [];\r\n            course.category?.forEach((category) => {\r\n              category.Sub_Category.forEach((subCategory) => {\r\n                if (!subIds.includes(subCategory.id)) {\r\n                  course.subCategory.push(subCategory);\r\n                  subIds.push(subCategory.id);\r\n                }\r\n              });\r\n            });\r\n            return course;\r\n          });\r\n          // console.log(courses);\r\n\r\n          this.dataSource = new MatTableDataSource(courses);\r\n          this.totalItems = response.countItems;\r\n          // this.customFilter();\r\n          this.startSortingTable();\r\n\r\n          // get optional & mandatory columns\r\n          // this.mandatoryColomns = response.requiredSubjectProperties;\r\n          // this.optionalColomns = response.optionalSubjectProperties;\r\n          // initial table columns\r\n          // if (this.displayedColumns.length == 0)\r\n          //   this.displayedColumns = this.mandatoryColomns.slice();\r\n        }\r\n        this.isLoaded = true;\r\n        // this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleteDialog(course: ICourseGetIndexVM): void {\r\n    let courseName = this.languageService.isArabic\r\n      ? course.subCourse_ar_name ?? course.subCourse_en_name\r\n      : course.subCourse_en_name ?? course.subCourse_ar_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: courseName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeCourse(course.id);\r\n      });\r\n  }\r\n\r\n  removeCourse(id: number) {\r\n    this.spinner.show();\r\n    this.courseServ.removeCourse(id).subscribe((res: any) => {\r\n      if (res) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.page.value > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllCourses(this.page.value - 1);\r\n          this.paginator.pageIndex = this.page.value - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllCourses(this.page.value);\r\n        }\r\n      } else this.msg.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // openUpdateJobTitleDialog(jobTitle: ICourseJobTitleGetVM) {\r\n  //   // console.log(jobTitle);\r\n  //   this.dialog\r\n  //     .open(EditJobTitleDatesComponent, {\r\n  //       data: {\r\n  //         jobTitle: jobTitle,\r\n  //       },\r\n  //     })\r\n  //     .afterClosed()\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         // console.log(response.jobTitle);\r\n  //         this.editJobTitleDates(jobTitle.jobTitleCourseId, response.jobTitle);\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // editJobTitleDates(\r\n  //   jobTitle_articleId: number,\r\n  //   jobtitle: IJobTitleDatesEditVM\r\n  // ) {\r\n  //   this.spinner.show();\r\n  //   this.courseServ\r\n  //     .updateJobTitleCourse<IJobTitleDatesEditVM, any>(\r\n  //       jobTitle_articleId,\r\n  //       jobtitle\r\n  //     )\r\n  //     .subscribe((response) => {\r\n  //       if (response.returnValue == 1) {\r\n  //         this.getAllCourses(this.page.value);\r\n  //         this.msg.success(\"General.UpdateSuccessfully\");\r\n  //       } else this.msg.error(response?.returnString);\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  // openDeleteJobtitleDialog(jobTitle: ICourseJobTitleGetVM) {\r\n  //   this.dialog\r\n  //     .open(DeleteDialogComponent, {\r\n  //       data: {\r\n  //         msg: this.languageService.isArabic\r\n  //           ? jobTitle.ar_name ?? jobTitle.en_name\r\n  //           : jobTitle.en_name ?? jobTitle.ar_name,\r\n  //       },\r\n  //     })\r\n  //     .afterClosed()\r\n  //     .subscribe((confirm) => {\r\n  //       if (confirm) this.removeJobtitleArticle(jobTitle.jobTitleCourseId);\r\n  //     });\r\n  // }\r\n\r\n  // removeJobtitleArticle(jobTitleCourseId: number) {\r\n  //   this.spinner.show();\r\n  //   this.courseServ\r\n  //     .removeJobTitleCourse(jobTitleCourseId)\r\n  //     .subscribe((response: any) => {\r\n  //       if (response.returnValue == 1) {\r\n  //         this.getAllCourses(this.page.value);\r\n  //         this.msg.success(\"General.DeleteSuccessfully\");\r\n  //       } else this.msg.error(response?.returnString);\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n\r\n  resetSearch() {\r\n    this.myForm.reset();\r\n    this.FormCtrls?.jobId.disable();\r\n    this.getAllCourses(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  openEditOptionsDialog(courseId: number) {\r\n    this.dialog\r\n      .open(EditOptionsDialogComponent, {\r\n        data: {\r\n          courseId: courseId,\r\n        },\r\n        width: \"35vh\",\r\n        minWidth: \"380px\",\r\n        panelClass: \"dialog-radius\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n      });\r\n  }\r\n\r\n  getDataFromHR() {\r\n    this.spinner.show();\r\n    this.courseServ.getDataFromHR(this.EduCompId)\r\n      .subscribe((res: defaultRes) => {\r\n        this.spinner.hide();\r\n        if (res.returnValue == ResMessage.success) {\r\n          this.getAllCourses(this.page.value);\r\n          this.messagesService.success('copyHrSuccess');\r\n        }\r\n      });\r\n  }\r\n\r\n  sendDataToHR() {\r\n    this.spinner.show();\r\n    this.courseServ.sendDataToHR(this.EduCompId)\r\n      .subscribe((res: defaultRes) => {\r\n        this.spinner.hide();\r\n        if (res.returnValue == ResMessage.success) {\r\n          // this.getAllCourses(this.page.value);\r\n          this.messagesService.success('sendHrSuccess');\r\n        }\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"admin-index-card\">\r\n      <mat-card-title>\r\n\r\n        <page-title title=\"course.courses\"></page-title>\r\n\r\n        <create-new-btn label=\"course.course\"\r\n                        class=\"float-right d-inline-block mb-2 mx-1 mt--5\"\r\n                        url=\"/dashboard/setup/course/add-course\"\r\n                        [params]=\"{\r\n            functionId: functionId\r\n          }\">\r\n        </create-new-btn>\r\n\r\n        <button class=\"orange-btn radius-btn integration-btn float-right d-inline-block mx-1 mb-2\"\r\n                (click)=\"getDataFromHR()\">\r\n          {{ \"getFromHr\" | translate }}\r\n        </button>\r\n\r\n        <button class=\"orange-btn radius-btn integration-btn float-right d-inline-block mx-1 mb-2\"\r\n                (click)=\"sendDataToHR()\">\r\n          {{ \"sendToHr\" | translate }}\r\n        </button>\r\n\r\n\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field> -->\r\n\r\n        <div\r\n          class=\"mat-elevation-z8 f-w\"\r\n          appScrollableHorizontal\r\n          *ngIf=\"isLoaded; else loading\"\r\n        >\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n            <!-- cover photo Column -->\r\n            <ng-container matColumnDef=\"attach_path\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"text-center\">\r\n                {{ \"course.cover\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\" class=\"text-center\">\r\n                <img\r\n                  class=\"cover\"\r\n                  [src]=\"fileService.previewPicture(course.attach_path)\"\r\n                  (error)=\"\r\n                    fileService.onError($event, appAssets.homeCourseNoImg)\r\n                  \"\r\n                />\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- course name Column -->\r\n            <ng-container matColumnDef=\"CourseName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CourseName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{\r\n                languageService.isArabic\r\n                  ? course.subCourse_ar_name ?? course.subCourse_en_name\r\n                  : course.subCourse_en_name ?? course.subCourse_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- category Column -->\r\n            <ng-container matColumnDef=\"category\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"categories.category\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <ng-container\r\n                  *ngFor=\"let category of course.category; let last = last\"\r\n                >\r\n                  <div class=\"d-inline-block\">\r\n                    <img\r\n                      class=\"category-icon\"\r\n                      [src]=\"fileService.previewPicture(category.attach)\"\r\n                      (error)=\"\r\n                        fileService.onError($event, appAssets.categoryNoImg)\r\n                      \"\r\n                      width=\"18\"\r\n                      height=\"18\"\r\n                    />\r\n                    <span> {{ category.cat_name }} </span>\r\n                    <span *ngIf=\"!last\">,</span>\r\n                  </div>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- sub Category Column -->\r\n            <ng-container matColumnDef=\"subCategory\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"categories.subCategory\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <ng-container\r\n                  *ngFor=\"\r\n                    let subCategory of course.subCategory;\r\n                    let last = last\r\n                  \"\r\n                >\r\n                  {{ subCategory.sub_cat_name }}\r\n                  <span *ngIf=\"!last\">,</span>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- instructor Column -->\r\n            <ng-container matColumnDef=\"instructor\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"instructor\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <ng-container\r\n                  *ngFor=\"let instructor of course.instructors; let last = last\"\r\n                >\r\n                  {{ instructor.first_name + \" \" + instructor.last_name }}\r\n                  <span *ngIf=\"!last\">,</span>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- joined employees Column -->\r\n            <ng-container matColumnDef=\"numberOfEmployees\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"joinedEmployees\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\" class=\"text-center\">\r\n                {{ course.numberOfEmployees }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"openEditOptionsDialog(course.id)\"\r\n                    class=\"dark-blue\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"fas fa-pen font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(course)\"\r\n                    class=\"danger\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"fa fa-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <!--               <td class=\"mat-cell\" colspan=\"6\"> -->\r\n              <!--                 No data matching the filter \"{{ input.value }}\" -->\r\n              <!--               </td> -->\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            [pageSize]=\"10\"\r\n            (page)=\"getAllCourses($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of courses\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n\r\n        <ng-template #loading>\r\n          <app-table-skeleton\r\n            [displayedColumns]=\"displayedColumnsSkeleton\"\r\n          ></app-table-skeleton>\r\n        </ng-template>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport {\r\n  ICourseObjectiveAddEditVM,\r\n  ICourseObjectiveVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-objectives\",\r\n  templateUrl: \"./course-objectives.component.html\",\r\n  styleUrls: [\"./course-objectives.component.scss\"],\r\n})\r\nexport class CourseObjectivesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  courseId: number = 0;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  displayColumns: string[] = [\"#\", \"whatYouLearn\", \"actions\"];\r\n  dataSource: MatTableDataSource<ICourseObjectiveVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    public languageService: LanguageService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private courseService: CourseService\r\n  ) {\r\n    this.route.paramMap.subscribe(\r\n      (pram) => (this.courseId = Number(pram.get(\"courseId\")))\r\n    );\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      subjectObjectiveId: [0],\r\n      whatYouLearn: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    this.getAllCourseObjectives(this.curPage);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      // this.getAllCourseObjectives(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editCourseObjective(courseObjective: ICourseObjectiveAddEditVM) {\r\n    this.myForm.patchValue(courseObjective);\r\n  }\r\n\r\n  // Return Course Objective\r\n  getAllCourseObjectives(page: number) {\r\n    this.spinner.show();\r\n    this.courseService\r\n      .getAllCourseObjectives(this.courseId, page)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.courseList);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let courseObjective: ICourseObjectiveAddEditVM = {\r\n        subject_id: this.courseId,\r\n        id: this.FormCtrls.subjectObjectiveId.value,\r\n        what_learn: this.FormCtrls.whatYouLearn.value,\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.courseService\r\n        .addEditCourseObjective(courseObjective)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            if (courseObjective.id == 0) {\r\n              this.getAllCourseObjectives(1); // first page after add\r\n              this.dataSource.paginator = this.paginator;\r\n            } else {\r\n              this.getAllCourseObjectives(this.curPage); // current page after update\r\n            }\r\n\r\n            this.toastr.success(\r\n              courseObjective.id == 0\r\n                ? \"General.AddSuccessfully\"\r\n                : \"General.UpdateSuccessfully\"\r\n            );\r\n\r\n            this.clearForm();\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleteDialog(courseObjective: ICourseObjectiveVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: courseObjective.subjectObjectiveId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteCourseObjective(courseObjective);\r\n      });\r\n  }\r\n\r\n  // Delete Course Objective\r\n  deleteCourseObjective(courseObjective: ICourseObjectiveVM) {\r\n    this.spinner.show();\r\n    this.courseService\r\n      .deleteCourseObjective(courseObjective.subjectObjectiveId)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getAllCourseObjectives(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getAllCourseObjectives(this.curPage);\r\n          }\r\n\r\n          if (\r\n            courseObjective.subjectObjectiveId ==\r\n            this.FormCtrls.subjectObjectiveId.value\r\n          )\r\n            this.clearForm();\r\n        } else this.toastr.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.subjectObjectiveId.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.subjectObjectiveId.value == 0\r\n            ? \"course.AddCourseObjective\"\r\n            : \"course.UpdateCourseObjective\"\r\n          ) | translate\r\n        }}\r\n\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/setup/course/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.whatYouLearn\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.whatYouWillLearn\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i\r\n            class=\"fa fa-plus mr-1\"\r\n            *ngIf=\"FormCtrls?.subjectObjectiveId?.value == 0\"\r\n          ></i>\r\n          {{\r\n            (FormCtrls?.subjectObjectiveId?.value == 0\r\n              ? \"General.Add\"\r\n              : \"General.Update\"\r\n            ) | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.subjectObjectiveId.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"course.CourseObjectives\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- CourseObjective Column -->\r\n            <ng-container matColumnDef=\"whatYouLearn\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.whatYouWillLearn\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.whatYouLearn }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"text-center\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editCourseObjective(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"3\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllCourseObjectives($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IsearchModel,\r\n  RequestData,\r\n} from \"app/admin/models/admin/course-request\";\r\nimport { CourseAndTeachingRequestService } from \"app/admin/services/Admin/course-teaching-request.service\";\r\nimport { AppAssets } from \"app/shared/data/app-assets\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-employee-requestes\",\r\n  templateUrl: \"./course-requestes.component.html\",\r\n  styleUrls: [\"./course-requestes.component.scss\"],\r\n})\r\nexport class CourseRequestComponent implements OnInit {\r\n  totalItems: number = 0;\r\n  // myForm: FormGroup;\r\n  EduCompId: any;\r\n\r\n  // approveList: RadioButtonModel[] = [\r\n  //   {\r\n  //     label: \"labels.Approve\",\r\n  //     value: true,\r\n  //   },\r\n  //   {\r\n  //     label: \"labels.NotApprove\",\r\n  //     value: false,\r\n  //   },\r\n  // ];\r\n\r\n  displayedColumns: string[] = [\r\n    // \"#\",\r\n    \"employee_name\",\r\n    \"courseName\",\r\n    \"reasonOfRequest\",\r\n    \"numberOfDays\",\r\n    \"status\",\r\n    // \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<RequestData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  functionId: number;\r\n\r\n  displayedColumnsSkeleton: string[] = [\r\n    \"labels.Employee\",\r\n    \"course.course\",\r\n    \"labels.Reason\",\r\n    \"labels.period\",\r\n    \"Actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    // private fb: FormBuilder,\r\n    private courseAndTeachingRequestService: CourseAndTeachingRequestService,\r\n    private authserv: AuthService,\r\n    private tostar: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private languageService: LanguageService,\r\n    private ar: ActivatedRoute,\r\n    public fileService: UploadFileService,\r\n    public appAssets: AppAssets\r\n  ) {\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.myForm = this.fb.group({\r\n    //   mobile: [null],\r\n    //   code: [null],\r\n    //   email: [null],\r\n    //   department: [null],\r\n    //   jobTitle: [null],\r\n    //   course: [null],\r\n    //   approve: [],\r\n    // });\r\n\r\n    this.getAllRequests(1);\r\n  }\r\n\r\n  // get FormCtrls() {\r\n  //   return this.myForm.controls;\r\n  // }\r\n\r\n  // applyFilter(event: Event) {\r\n  //   const filterValue = (event.target as HTMLInputElement).value;\r\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  // }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllRequests(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAllRequests(page: number) {\r\n    this.isLoaded = false;\r\n    let data: IsearchModel = {\r\n      page: page,\r\n      EduCompId: this.EduCompId,\r\n      mobile: /* this.FormCtrls.mobile.value?.trim() */ null,\r\n      code: /* this.FormCtrls.code.value?.trim().toLowerCase() */ null,\r\n      account_email:\r\n        /* this.FormCtrls.email.value?.trim().toLowerCase() */ null,\r\n      approvement: /* this.FormCtrls.approve.value */ null,\r\n      courseId: /* this.FormCtrls.course.value */ null,\r\n    };\r\n\r\n    // this.spinner.show();\r\n    this.courseAndTeachingRequestService\r\n      .getAllCourseRequests(data)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.Requests);\r\n          this.totalItems = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.isLoaded = true;\r\n        // this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  approveCourseRequest(request: RequestData, status: boolean) {\r\n    this.spinner.show();\r\n    this.courseAndTeachingRequestService\r\n      .ApproveCourseRequest(request.id, status)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((ele) => ele == request);\r\n          this.dataSource.data[i].status = status;\r\n          this.tostar.success(\"General.UpdateSuccessfully\");\r\n        } else this.tostar.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  // resetSearch() {\r\n  //   this.myForm.reset();\r\n  //   this.getAllRequests(1);\r\n  //   this.dataSource.paginator = this.paginator;\r\n  // }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"courseName\":\r\n          return this.languageService.isArabic\r\n            ? item.course_ar_name ?? item.course_en_name\r\n            : item.course_en_name ?? item.course_ar_name;\r\n        case \"employee_name\":\r\n          return item.employee_first_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12 mb-3\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllRequests(1); dataSource.paginator = paginator\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.mobile\"\r\n                    label=\"labels.MobileNo\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.email\"\r\n                    label=\"labels.Email\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.code\"\r\n                    label=\"labels.Code\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <department-dropdown\r\n                    [control]=\"FormCtrls.department\"\r\n                  ></department-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <job-title-by-department-dropdown\r\n                    [control]=\"FormCtrls.jobTitle\"\r\n                    [departmentControl]=\"FormCtrls.department\"\r\n                  ></job-title-by-department-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <courses-by-dep-job-title\r\n                    [control]=\"FormCtrls.course\"\r\n                    [jobTitleControl]=\"FormCtrls.jobTitle\"\r\n                  ></courses-by-dep-job-title>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-radio-button\r\n                    [control]=\"FormCtrls.approve\"\r\n                    [radioList]=\"approveList\"\r\n                  ></app-radio-button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"admin-index-card Learning-requests-index\">\r\n      <mat-card-title>\r\n        <page-title title=\"Navbar.LearningRequests\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <!-- <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field> -->\r\n\r\n        <div class=\"mat-elevation-z8 f-w\" *ngIf=\"isLoaded; else loading\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <!-- <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container> -->\r\n\r\n            <!-- employee Name Column -->\r\n            <ng-container matColumnDef=\"employee_name\">\r\n              <th mat-header-cell *matHeaderCellDef >\r\n                {{ \"labels.Employee\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <img\r\n                  class=\"learning-request-index-img\"\r\n                  [src]=\"fileService.previewPicture(ele.employee_photo)\"\r\n                  (error)=\"\r\n                    fileService.onError($event, appAssets.no_user_profile)\r\n                  \"\r\n                  width=\"40\"\r\n                  height=\"40\"\r\n                />\r\n                {{ ele.employee_first_name + \" \" + ele.employee_last_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- course Name Column -->\r\n            <ng-container matColumnDef=\"courseName\">\r\n              <th mat-header-cell *matHeaderCellDef >\r\n                {{ \"course.course\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span\r\n                  *ngIf=\"\r\n                    ele.diploma_ar_name || ele.diploma_en_name;\r\n                    else course\r\n                  \"\r\n                >\r\n                  <span class=\"diploma-text\">\r\n                    {{ \"course.Diploma\" | translate }} :\r\n                  </span>\r\n                  {{\r\n                    languageService.isArabic\r\n                      ? ele.diploma_ar_name ?? ele.diploma_en_name\r\n                      : ele.diploma_en_name ?? ele.diploma_ar_name\r\n                  }}\r\n                </span>\r\n                <ng-template #course>\r\n                  {{\r\n                    languageService.isArabic\r\n                      ? ele.course_ar_name ?? ele.course_en_name\r\n                      : ele.course_en_name ?? ele.course_ar_name\r\n                  }}\r\n                </ng-template>\r\n\r\n                {{\r\n                  languageService.isArabic\r\n                    ? ele.course_ar_name ?? ele.course_en_name\r\n                    : ele.course_en_name ?? ele.course_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Reason Column -->\r\n            <ng-container matColumnDef=\"reasonOfRequest\">\r\n              <th mat-header-cell *matHeaderCellDef >\r\n                {{ \"labels.Reason\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span>\r\n                  {{ ele.reasonOfRequest }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- duration Column -->\r\n            <ng-container matColumnDef=\"numberOfDays\">\r\n              <th mat-header-cell *matHeaderCellDef >\r\n                {{ \"labels.period\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span>\r\n                  {{ ele.numberOfDays }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef >\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span class=\"warning\" *ngIf=\"ele.status == null\">\r\n                  {{ \"labels.Pendeing\" | translate }}\r\n                </span>\r\n                <span class=\"success\" *ngIf=\"ele.status == true\">\r\n                  {{ \"labels.Approve\" | translate }}\r\n                </span>\r\n                <span class=\"danger\" *ngIf=\"ele.status == false\">\r\n                  {{ \"labels.NotApprove\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"text-center\">\r\n                <!-- {{ \"labels.Status\" | translate }} -->\r\n                Actions\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngIf=\"ele.status == null\">\r\n                  <div style=\"display: flex; gap: 5px 16px\">\r\n                    <app-approve-btn\r\n                      class=\"flex-grow-1\"\r\n                      (onClick)=\"approveCourseRequest(ele, true)\"\r\n                    ></app-approve-btn>\r\n                    <app-reject-btn\r\n                      class=\"flex-grow-1\"\r\n                      (onClick)=\"approveCourseRequest(ele, false)\"\r\n                    ></app-reject-btn>\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"ele.status == true\">\r\n                  <span class=\"badge badge-success\">\r\n                    {{ \"labels.Approved\" | translate }}\r\n                    <!-- <i class=\"fas fa-check\"></i> -->\r\n                  </span>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"ele.status == false\">\r\n                  <span class=\"badge badge-danger\">\r\n                    {{ \"labels.rejected\" | translate }}\r\n                    <!-- <i class=\"fas fa-times\"></i> -->\r\n                  </span>\r\n                </ng-container>\r\n\r\n                <!-- <mat-radio-group>\r\n                  <mat-radio-button\r\n                    [value]=\"true\"\r\n                    [checked]=\"ele.status == true\"\r\n                    (click)=\"approveCourseRequest(ele, true)\"\r\n                    class=\"mr-2\"\r\n                  >\r\n                    {{ \"labels.Approve\" | translate }}\r\n                  </mat-radio-button>\r\n\r\n                  <mat-radio-button\r\n                    [value]=\"false\"\r\n                    [checked]=\"ele.status == false\"\r\n                    (click)=\"approveCourseRequest(ele, false)\"\r\n                  >\r\n                    {{ \"labels.NotApprove\" | translate }}\r\n                  </mat-radio-button>\r\n                </mat-radio-group> -->\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllRequests($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n\r\n        <ng-template #loading>\r\n          <app-table-skeleton\r\n            [displayedColumns]=\"displayedColumnsSkeleton\"\r\n          ></app-table-skeleton>\r\n        </ng-template>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {\r\n  IUnitAttachmentAddEditVM,\r\n  IUnitAttachmentGetVM,\r\n  IUnitDataGeneralRequest,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { AppStrings } from \"app/shared/data/app-strings\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { OriginalFileModel } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-add-unit-attachment\",\r\n  templateUrl: \"./add-unit-attachment.component.html\",\r\n  styleUrls: [\"./add-unit-attachment.component.scss\"],\r\n})\r\nexport class AddUnitAttachmentComponent implements OnInit {\r\n  unitId: number = 0;\r\n  subject_id: number;\r\n  attachmentId: number = 0;\r\n  attach: IUnitAttachmentGetVM;\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  EduCompId: any;\r\n  functionId: number;\r\n\r\n  savedFile: OriginalFileModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private courseService: CourseService,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private languageService: LanguageService,\r\n    public uploadFileService: UploadFileService,\r\n    public appStrings: AppStrings,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddUnitAttachmentComponent>\r\n  ) {\r\n    this.unitId = data.unitId;\r\n    this.subject_id = data.subject_id;\r\n    this.attachmentId = data.attachmentId;\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [this.attachmentId],\r\n      file_ar_name: [\"\", [Validators.required]],\r\n      file_en_name: [\"\", [Validators.required]],\r\n      attachFile: [null, [Validators.required]],\r\n      // attach_path: [null],\r\n      orderNum: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n\r\n    if (this.attachmentId > 0) this.getAttachmentById();\r\n\r\n    // on closing dialog by clicking outside dialog\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    let data: IUnitDataGeneralRequest = null;\r\n    if (this.attachmentId) {\r\n      data = {\r\n        id: this.attachmentId,\r\n        ar_name: this.attach.file_ar_name,\r\n        en_name: this.attach.file_en_name,\r\n        type: this.appStrings.stageAttach,\r\n        order: this.attach.orderNum,\r\n      };\r\n    }\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getAttachmentById() {\r\n    this.spinner.show();\r\n    this.courseService\r\n      .getUnitAttachmentById(this.attachmentId)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.myForm.patchValue(res.fileEduUnit[0]);\r\n          this.formCtrls.attachFile.setValue(res.fileEduUnit[0].attach_path);\r\n          this.attach = res.fileEduUnit[0];\r\n          // console.log(this.myForm.value);\r\n          // if (res.fileEduUnit[0].attach_path)\r\n          //   this.savedFile = {\r\n          //     name: res.fileEduUnit[0].attach_name,\r\n          //     size: res.fileEduUnit[0].attach_size,\r\n          //     LastModifiedDate: res.fileEduUnit[0].attach_date,\r\n          //     type: \"application/pdf\",\r\n          //   };\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // if (\r\n    //   this.formCtrls.attachFile.value == null &&\r\n    // //   this.formCtrls.attach_path.value == null\r\n    // ) {\r\n    //   this.toastr.warning(\"labels.MustSelectFile\");\r\n    //   return;\r\n    // }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let data: IUnitAttachmentAddEditVM = {\r\n        id: this.formCtrls.id.value,\r\n        ar_name: this.formCtrls.file_ar_name.value,\r\n        en_name: this.formCtrls.file_en_name.value,\r\n        subject_id: this.subject_id,\r\n        unit_id: this.unitId,\r\n        File: this.formCtrls.attachFile.value,\r\n        orderNum: this.formCtrls.orderNum.value,\r\n      };\r\n      this.courseService.addEditUnitAttachment(data).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          data.id == 0\r\n            ? this.toastr.success(\"General.AddSuccessfully\")\r\n            : this.toastr.success(\"General.UpdateSuccessfully\");\r\n          // this.myForm.reset();\r\n          // this.uploadFileService.resetFileById(\"unit-attach\");\r\n          this.submitted = false;\r\n          // this.myForm.patchValue(res.File_Edu_Unit[0]);\r\n          // this.attach = res.File_Edu_Unit[0];\r\n          // this.formCtrls.attachFile.setValue(res.File_Edu_Unit[0].attach_path);\r\n          // this.attachmentId = this.formCtrls.id.value;\r\n          this.attachmentId = res.File_Edu_Unit[0].id;\r\n          this.formCtrls.id.setValue(this.attachmentId);\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<p mat-dialog-title class=\"mb-2\">\r\n  <page-title\r\n    addTitle=\"course.AddFile\"\r\n    editTitle=\"course.UpdateFile\"\r\n    [id]=\"attachmentId\"\r\n  ></page-title>\r\n\r\n  <i\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"fas fa-times-circle closeIcon float-right\"\r\n  ></i>\r\n</p>\r\n<progress-bar [percentage]=\"100\" class=\"dark-blue\"></progress-bar>\r\n\r\n<mat-dialog-content class=\"mtop-30\">\r\n  <form [formGroup]=\"myForm\" class=\"mbottom-20\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.file_en_name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.enName\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.file_ar_name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.arName\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.orderNum\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.Order\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-button-file-input-new\r\n          [control]=\"formCtrls.attachFile\"\r\n          [submitted]=\"submitted\"\r\n          accept=\".pdf\"\r\n          htmlId=\"unit-attach\"\r\n          upperLabel=\"uploadFile\"\r\n          icon=\"fas fa-cloud-upload-alt\"\r\n          [fileObject]=\"savedFile\"\r\n          (onChange)=\"savedFile = null\"\r\n        ></app-button-file-input-new>\r\n      </div>\r\n\r\n      <!-- <div class=\"col-12\">\r\n        <app-file-input\r\n          [control]=\"formCtrls.attachFile\"\r\n          [submitted]=\"submitted\"\r\n          accept=\".pdf\"\r\n          htmlId=\"unit-attach\"\r\n        ></app-file-input>\r\n      </div> -->\r\n\r\n      <!-- <div class=\"col-12 center\" *ngIf=\"formCtrls.attachFile?.value\">\r\n        <span class=\"mt-1 mr-2\">\r\n          <embed\r\n            [src]=\"\r\n              uploadFileService.previewPicture(formCtrls.attachFile?.value)\r\n                | safe\r\n            \"\r\n            [type]=\"'application/pdf'\"\r\n            frameborder=\"0\"\r\n          />\r\n        </span>\r\n      </div> -->\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <!-- <button\r\n    mat-raised-button\r\n    (click)=\"onCloseDialog()\"\r\n    class=\"btn btn-warning bg-light-warning\"\r\n  >\r\n    {{ \"General.Close\" | translate }}\r\n  </button> -->\r\n\r\n  <!-- <button\r\n    (click)=\"onSubmit()\"\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-info bg-light-info\"\r\n  >\r\n    <i class=\"fa fa-plus mr-1\" *ngIf=\"attachmentId == 0\"></i>\r\n    {{ (attachmentId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n  </button> -->\r\n\r\n  <button class=\"orange-btn radius-btn w-100 mbottom-16\" (click)=\"onSubmit()\">\r\n    {{ (attachmentId == 0 ? \"General.Done\" : \"General.Update\") | translate }}\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {\r\n  currentSubject,\r\n  IAddedUnitVM,\r\n  IAddUpdateUnitVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { SubjectsService } from \"app/admin/services/Admin/subjects.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-unit\",\r\n  templateUrl: \"./add-unit.component.html\",\r\n  styleUrls: [\"./add-unit.component.scss\"],\r\n})\r\nexport class AddUnitComponent implements OnInit {\r\n  unitId: number;\r\n  unit_name: string;\r\n  subjectId: number;\r\n  coverPath = \"https://via.placeholder.com/150\";\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private subjectsService: SubjectsService,\r\n    public uploadFileService: UploadFileService,\r\n    private languageService: LanguageService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddUnitComponent>\r\n  ) {\r\n    this.subjectId = data.subjectId;\r\n    this.unitId = data.unitId;\r\n    if (this.unitId > 0) this.getUnitById();\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [this.unitId],\r\n      unit_ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      unit_en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      unitDescription: [\"\"],\r\n      thumbnailPic: [null],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get Unit ById\r\n  getUnitById() {\r\n    this.spinner.show();\r\n    this.subjectsService.getUnitById(this.unitId).subscribe((res: any) => {\r\n      if (res.addedUnit) {\r\n        this.myForm.patchValue(res.addedUnit);\r\n        this.FormCtrls.thumbnailPic.setValue(\r\n          res.addedUnit.unitThumb?.attach_path\r\n        );\r\n        this.unit_name = res.addedUnit.unit_ar_name;\r\n        this.subjectId = res.addedUnit.subjectid;\r\n        // this.coverPath = res.addedUnit.unitThumb?.attach_path;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // Start: add Unit\r\n  addUpdateUnit() {\r\n    this.submitted = true;\r\n    let body = {} as IAddUpdateUnitVM;\r\n\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let addedUnit = {} as IAddedUnitVM;\r\n      let currentSubject = {} as currentSubject;\r\n\r\n      addedUnit.id = this.FormCtrls.id?.value;\r\n      addedUnit.unit_ar_name = this.FormCtrls.unit_ar_name?.value;\r\n      addedUnit.unit_en_name = this.FormCtrls.unit_en_name?.value;\r\n      addedUnit.unitDescription = this.FormCtrls.unitDescription?.value;\r\n      addedUnit.thumbnailPic = this.FormCtrls.thumbnailPic?.value;\r\n      currentSubject.subject_id = this.subjectId;\r\n      body.addedUnit = addedUnit;\r\n      body.currentSubject = currentSubject;\r\n      this.subjectsService.addUpdateUnit(body).subscribe((res) => {\r\n        if (res) {\r\n          this.dialogRef.close(res);\r\n          this.unitId == 0\r\n            ? this.msg.success(\"General.AddSuccessfully\")\r\n            : this.msg.success(\"General.UpdateSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  onChange(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      // this.coverPath = file.FileAsBase64;\r\n      this.FormCtrls.thumbnailPic.setValue(file);\r\n    });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<p mat-dialog-title class=\"mb-2 border-0\">\r\n  <page-title addTitle=\"course.AddStage\" editTitle=\"course.UpdateStage\" [id]=\"unitId ?? 0\"></page-title>\r\n  <i [mat-dialog-close]=\"false\" class=\"fas fa-times-circle closeIcon float-right\"></i>\r\n</p>\r\n\r\n\r\n<div class=\"mt-3\">\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-9\">\r\n        <div class=\"media\">\r\n          <img\r\n            class=\"rounded mr-3\"\r\n            [src]=\"\r\n              uploadFileService.previewPicture(FormCtrls.thumbnailPic.value) ??\r\n              coverPath\r\n            \"\r\n            width=\"70\"\r\n            height=\"70\"\r\n            alt=\"avatar\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3 d-flex align-items-center\">\r\n        <app-button-file-input\r\n          [control]=\"FormCtrls.thumbnailPic\"\r\n          [submitted]=\"submitted\"\r\n          accept=\"image/*\"\r\n          htmlId=\"file\"\r\n          label=\"course.coverPhoto\"\r\n          [showIcon]=\"false\"\r\n        ></app-button-file-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrls.unit_ar_name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.arName\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrls.unit_en_name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.enName\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-textarea\r\n          [control]=\"FormCtrls.unitDescription\"\r\n          [submitted]=\"submitted\"\r\n          label=\"course.description\"\r\n          rows=\"2\"\r\n        ></app-textarea>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<mat-card-actions align=\"end\">\r\n  <button class=\"orange-btn radius-btn w-25\" (click)=\"addUpdateUnit()\">\r\n    {{ (unitId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n  </button>\r\n</mat-card-actions>\r\n\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {NgxSpinnerService} from \"ngx-spinner\";\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {CopyExamsToHRRequest, ExamsService} from \"app/admin/services/Admin/exams.service\";\nimport {forkJoin} from \"rxjs\";\nimport {LanguageService} from \"app/shared/services/language.service\";\nimport {ResMessage} from \"app/shared/enums/res-message\";\nimport {defaultRes} from \"app/shared/models/general/general\";\nimport {MessagesService} from \"app/shared/services/messages.service\";\nimport {defaultInputAppearance, InputAppearance} from \"app/shared/enums/mat-theme.enum\";\n\ninterface EgyExamsModel {\n  Egy_ar_exam: string;\n  Egy_en_exam: string;\n  exam_id: number;\n}\n\ninterface EgyimplementationModel {\n  Imp_From_Date: string;\n  Imp_ID: number;\n  Imp_To_Date: string;\n\n}\n\n\n@Component({\n  selector: 'app-exams-integration',\n  templateUrl: './exams-integration.component.html',\n  styleUrls: ['./exams-integration.component.scss']\n})\n\nexport class ExamsIntegrationComponent implements OnInit {\n  subjectId: any;\n  form!: FormGroup;\n  EduCompId: any;\n  exams: EgyExamsModel[];\n  implementationList: EgyimplementationModel[];\n  submitted: boolean = false\n  appearance: InputAppearance = defaultInputAppearance;\n\n  get impIdCtrl() {\n    return this.form.get(\"impId\");\n  }\n\n  get examIdsCtrl() {\n    return this.form.get(\"examIds\");\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private examsService: ExamsService,\n    public authserv: AuthService,\n    public langService: LanguageService,\n    private toastr: MessagesService,\n    @Inject(MAT_DIALOG_DATA) public data: { subjectId: number, unitId: number },\n    private dialogRef: MatDialogRef<ExamsIntegrationComponent>\n  ) {\n    this.subjectId = data.subjectId;\n    this.EduCompId = this.authserv.getEduCompId();\n    spinner.show()\n    forkJoin([\n      this.examsService.getImplemenationsByCourseID(this.subjectId, this.EduCompId),\n      this.examsService.getExamByCourseId(this.subjectId)\n    ]).subscribe((res: any) => {\n      spinner.hide()\n      let implementation: { returnValue: number, ImplementationList: EgyimplementationModel[] } = res[0];\n      let exam: { returnValue: number, EgyExams: EgyExamsModel[] } = res[1];\n\n      if (implementation?.returnValue == ResMessage.success) {\n        this.implementationList = implementation?.ImplementationList\n      }\n\n      if (exam?.returnValue == ResMessage.success) {\n        this.exams = exam?.EgyExams\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      impId: [null, Validators.required],\n      examIds: [null, Validators.required],\n      eduCompId: [this.EduCompId, Validators.required],\n    });\n  }\n\n\n  copyExamsToHR() {\n    this.submitted = true;\n    if (this.form.valid) {\n      this.spinner.show();\n      let body: CopyExamsToHRRequest = {\n        EduComp: this.EduCompId,\n        impID: this.impIdCtrl.value,\n        ExamsIDs: this.examIdsCtrl.value\n      };\n      this.examsService.copyExamsToHR(body).subscribe((res: defaultRes) => {\n        if (res.returnValue == ResMessage.success) {\n          this.toastr.success('sendHrSuccess');\n          this.spinner.hide();\n          this.dialogRef.close();\n        }\n      })\n    } else this.toastr.error(\"General.FormNotValid\");\n\n  }\n}\n","<!-- <ngx-spinner></ngx-spinner> -->\n<p mat-dialog-title class=\"mb-2 border-0\">\n  <page-title title=\"examIntegration\"></page-title>\n  <i [mat-dialog-close]=\"false\" class=\"fas fa-times-circle closeIcon float-right\"></i>\n</p>\n\n\n<div class=\"mt-3\">\n  <form [formGroup]=\"form\">\n    <div class=\"row\">\n      <div class=\"col-12 mb-4\">\n        <mat-label class=\"input-label\"> {{ 'Implementations' | translate}} </mat-label>\n        <mat-form-field [appearance]=\"appearance\">\n          <mat-select [formControl]=\"impIdCtrl\">\n            <mat-option *ngFor=\"let implementation of implementationList\" [value]=\"implementation.Imp_ID\">\n              {{ implementation.Imp_From_Date }} - {{ implementation.Imp_To_Date }}\n            </mat-option>\n          </mat-select>\n\n          <mat-hint>\n            <input-validation-msg\n              [control]=\"impIdCtrl\"\n              [submitted]=\"submitted\"\n              [isSelect]=\"true\"\n            ></input-validation-msg>\n          </mat-hint>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-12 mb-2\">\n        <mat-label class=\"input-label\"> {{ 'Navbar.Exams' | translate}} </mat-label>\n        <mat-form-field [appearance]=\"appearance\">\n\n          <mat-select multiple [formControl]=\"examIdsCtrl\" placeholder=\"{{'Navbar.Exams' | translate}}\">\n            <mat-option *ngFor=\"let exam of exams\" [value]=\"exam.exam_id\">\n              {{ langService.isArabic\n              ? exam.Egy_ar_exam ?? exam.Egy_en_exam\n              : exam.Egy_en_exam ?? exam.Egy_ar_exam }}\n            </mat-option>\n          </mat-select>\n\n          <mat-hint>\n            <input-validation-msg\n              [control]=\"examIdsCtrl\"\n              [submitted]=\"submitted\"\n              [isSelect]=\"true\"\n            ></input-validation-msg>\n          </mat-hint>\n\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n<mat-card-actions align=\"end\">\n  <button class=\"orange-btn radius-btn w-100\" (click)=\"copyExamsToHR()\">\n    {{ \"General.Save\" | translate }}\n  </button>\n</mat-card-actions>\n\n\n","import {CourseService} from \"app/admin/services/Admin/setup/course.service\";\r\nimport {Component, OnInit, TemplateRef, ViewChild} from \"@angular/core\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {AddUnitComponent} from \"app/admin/pages/setup/courses/course-structure/add-unit/add-unit.component\";\r\nimport {DeleteDialogComponent} from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {IRowFunctionVM} from \"app/shared/models/general/general\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {\r\n  AddMaterialMainDataComponent\r\n} from \"app/admin/pages/educational-setup/EducationalSubject/add-materials/add-main-data/add-main-data.component\";\r\nimport {unit} from \"app/admin/models/admin/educations\";\r\nimport {SubjectsService} from \"app/admin/services/Admin/subjects.service\";\r\nimport {AddExamComponent} from \"app/admin/pages/exams-setup/exams/add-exam/add-exam.component\";\r\nimport {AddUnitAttachmentComponent} from \"../add-unit-attachment/add-unit-attachment.component\";\r\nimport {ExamsService} from \"app/admin/services/Admin/exams.service\";\r\nimport {SubjectMaterialsService} from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ICourseGetVM, IUnitDataGeneralVM} from \"app/admin/models/admin/setup/course\";\r\nimport {AppStrings} from \"app/shared/data/app-strings\";\r\nimport {LanguageService} from \"app/shared/services/language.service\";\r\nimport {SvgManager} from \"app/shared/data/svg-manager\";\r\nimport {AppAssets} from \"app/shared/data/app-assets\";\r\nimport {\r\n  ExamsIntegrationComponent\r\n} from \"app/admin/pages/setup/courses/course-structure/exams-integration/exams-integration.component\";\r\n\r\n@Component({\r\n  selector: \"app-structure-index\",\r\n  templateUrl: \"./structure-index.component.html\",\r\n  styleUrls: [\"./structure-index.component.scss\"],\r\n})\r\nexport class StructureIndexComponent implements OnInit {\r\n  units: unit[] = [];\r\n  // contain exam , lectures , attachments\r\n  unitData: IUnitDataGeneralVM[] = [];\r\n  subjectId: number;\r\n  selectedUnitId: number;\r\n  selectedUnitName: string;\r\n  selectedUnitIndex: number = 0;\r\n\r\n  EduCompId: number;\r\n  // branchId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  svgManager = new SvgManager();\r\n  assets = new AppAssets();\r\n  selectedCreationItem: string;\r\n  @ViewChild('dialogTemplate') dialogTemplate!: TemplateRef<any>;\r\n  isLoaded: boolean = false;\r\n  isCourseLoaded: boolean = false;\r\n  course: ICourseGetVM;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private subjectsService: SubjectsService,\r\n    private courseService: CourseService,\r\n    private examService: ExamsService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private router: Router,\r\n    public authserv: AuthService,\r\n    private msg: MessagesService,\r\n    private langService: LanguageService,\r\n    private dialog: MatDialog,\r\n    public appStrings: AppStrings\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.subjectId = Number(params.get(\"courseId\"));\r\n      this.courseService.getCourseById(this.subjectId).subscribe((res: ICourseGetVM) => {\r\n        this.course = res;\r\n        this.isCourseLoaded = true;\r\n      })\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUnits();\r\n  }\r\n\r\n  //Get Subject Structre\r\n  getUnits() {\r\n    this.spinner.show();\r\n    this.subjectsService.getUnits(this.subjectId).subscribe((res: unit[]) => {\r\n      if (res.length > 0) {\r\n        this.units = res;\r\n        this.changeSelectedUnit(res[0], 0);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get lectures & exams & attachments of selected unit\r\n  getSelectedUnitData() {\r\n    this.isLoaded = false;\r\n    this.courseService.getAllUnitData(this.selectedUnitId).subscribe((res) => {\r\n      if (res) {\r\n        this.isLoaded = true;\r\n        this.unitData = res.model;\r\n        this.sortUnitDataByOrder();\r\n        // console.log(\"selected unit data\", this.unitData);\r\n      }\r\n    });\r\n  }\r\n\r\n  changeSelectedUnit(unit: unit, index: number) {\r\n    this.selectedUnitIndex = index > this.units.length - 1 ? 0 : index;\r\n    if (!unit) unit = this.units[this.selectedUnitIndex];\r\n\r\n    this.unitData = [];\r\n    this.selectedUnitId = unit.id;\r\n    this.selectedUnitName = this.langService.isArabic\r\n      ? unit.unit_ar_name\r\n      : unit.unit_en_name;\r\n    this.getSelectedUnitData();\r\n  }\r\n\r\n  openAddEditUnitDialog(unitId: number): void {\r\n    this.dialog\r\n      .open(AddUnitComponent, {\r\n        data: {\r\n          unitId: unitId > 0 ? unitId : 0,\r\n          subjectId: this.subjectId,\r\n        },\r\n        width: \"500px\",\r\n        panelClass: 'dialog-radius'\r\n        // minHeight: \"60vh\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((unit: unit) => {\r\n        if (unit?.id > 0) {\r\n          let i = this.units.findIndex((e) => e.id == unit.id);\r\n          i < 0 ? this.units.push(unit) : (this.units[i] = unit);\r\n          // if name of selected unit changed\r\n          if (unit?.id == this.selectedUnitId || this.units.length == 1) {\r\n            this.selectedUnitName = this.langService.isArabic\r\n              ? unit.unit_ar_name\r\n              : unit.unit_en_name;\r\n            // if the first unit to add\r\n            this.selectedUnitId = unit.id;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleteUnitDialog(unit: unit): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.langService.isArabic\r\n            ? unit.unit_ar_name\r\n            : unit.unit_en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUnit(unit);\r\n      });\r\n  }\r\n\r\n  deleteUnit(unit: unit) {\r\n    this.spinner.show();\r\n    this.subjectsService.deleteUnit(unit.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.units.indexOf(unit);\r\n        this.units.splice(i, 1);\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        if (unit.id == this.selectedUnitId)\r\n          this.changeSelectedUnit(null, this.selectedUnitIndex);\r\n      } else this.msg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  /////////////// lecture | exam | attach\r\n\r\n  editUnitData(data: IUnitDataGeneralVM) {\r\n    if (data.type == this.appStrings.stageLecture)\r\n      this.openAddEditLectureDialog(data.id);\r\n    else if (data.type == this.appStrings.stageExam)\r\n      this.openAddEditExamDialog(data.id);\r\n    else if (data.type == this.appStrings.stageAttach)\r\n      this.openAddEditAttachmentDialog(data.id);\r\n  }\r\n\r\n  openAddEditLectureDialog(lectureId: number): void {\r\n    this.dialog\r\n      .open(AddMaterialMainDataComponent, {\r\n        data: {\r\n          subjectId: this.subjectId,\r\n          unitId: this.selectedUnitId,\r\n          // material id > edit\r\n          materialId: lectureId > 0 ? lectureId : null,\r\n        },\r\n        minHeight: \"70vh\",\r\n        width: \"500px\"\r\n      })\r\n      .afterClosed()\r\n      .subscribe((lecture: IUnitDataGeneralVM) => {\r\n        this.getSelectedUnitData();\r\n        //if (lecture) this.afterCloseUnitDataDialogs(lecture);\r\n      });\r\n  }\r\n\r\n  openAddEditExamDialog(examId: number): void {\r\n    this.dialog\r\n      .open(AddExamComponent, {\r\n        data: {\r\n          subjectId: this.subjectId,\r\n          unitId: this.selectedUnitId,\r\n          type: 3,\r\n          // edit\r\n          examId: examId > 0 ? examId : 0,\r\n        },\r\n        // minWidth: \"60vw\",\r\n        maxHeight: \"99vh\",\r\n        // panelClass: \"no-padding-dialog\",\r\n        width: \"700px\",\r\n        autoFocus: false,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((exam: IUnitDataGeneralVM) => {\r\n        this.getSelectedUnitData();\r\n        // if (exam) this.afterCloseUnitDataDialogs(exam);\r\n      });\r\n  }\r\n\r\n  openAddEditAttachmentDialog(attachmentId: number): void {\r\n    this.dialog\r\n      .open(AddUnitAttachmentComponent, {\r\n        data: {\r\n          subject_id: this.subjectId,\r\n          unitId: this.selectedUnitId,\r\n          attachmentId: attachmentId,\r\n        },\r\n        maxHeight: \"99vh\",\r\n        width: \"500px\",\r\n        autoFocus: false,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((attachment: IUnitDataGeneralVM) => {\r\n        this.getSelectedUnitData();\r\n        // if (attachment) this.afterCloseUnitDataDialogs(attachment);\r\n      });\r\n  }\r\n\r\n  afterCloseUnitDataDialogs(data: IUnitDataGeneralVM) {\r\n    let i = this.unitData.findIndex((e) => e.id == data.id);\r\n    i < 0 ? this.unitData.push(data) : (this.unitData[i] = data);\r\n    this.sortUnitDataByOrder();\r\n  }\r\n\r\n  openDeleteUnitDataDialog(data: IUnitDataGeneralVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.langService.isEnglish\r\n            ? data.ar_name ?? data.en_name\r\n            : data.en_name ?? data.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUnitData(data);\r\n      });\r\n  }\r\n\r\n  deleteUnitData(data: IUnitDataGeneralVM) {\r\n    let api: Observable<Object>;\r\n    if (data.type == this.appStrings.stageLecture)\r\n      api = this.SubjectMaterialsService.deleteMaterial(data.id);\r\n    else if (data.type == this.appStrings.stageExam)\r\n      api = this.examService.deleteExam(data.id);\r\n    else if (data.type == this.appStrings.stageAttach)\r\n      api = this.courseService.deleteUnitAttachment(data.id);\r\n\r\n    this.spinner.show();\r\n    api.subscribe((response: any) => {\r\n      // if (response.data == -9) this.msg.error(response?.returnString);\r\n      if (response.data == 1 || response.returnValue == 1) {\r\n        let deletedIndex = this.unitData.findIndex((ele) => ele == data);\r\n        this.unitData.splice(deletedIndex, 1);\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n      } else this.msg.success(response?.returnString ?? \"General.error\");\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  sortUnitDataByOrder() {\r\n    this.unitData = this.unitData.sort((a, b) => a.order - b.order);\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.id;\r\n  }\r\n\r\n  getFileIcon(type): string {\r\n    if (type == this.appStrings.stageLecture) return this.svgManager.folder;\r\n    if (type == this.appStrings.stageExam) return this.svgManager.exam_content;\r\n    if (type == this.appStrings.stageAttach) return this.svgManager.pdf;\r\n  }\r\n\r\n  openCreationDialog(): void {\r\n    this.selectedCreationItem = null;\r\n    this.dialog.open(this.dialogTemplate, {\r\n      panelClass: 'dialog-radius'\r\n    })\r\n      .afterClosed()\r\n      .subscribe(data => {\r\n      });\r\n  }\r\n\r\n\r\n  next() {\r\n    if (this.selectedCreationItem) this.dialog.closeAll();\r\n\r\n    if (this.selectedCreationItem == this.appStrings.stageLecture)\r\n      this.openAddEditLectureDialog(null);\r\n\r\n    else if (this.selectedCreationItem == this.appStrings.stageExam)\r\n      this.openAddEditExamDialog(0);\r\n\r\n    else if (this.selectedCreationItem == this.appStrings.stageAttach)\r\n      this.openAddEditAttachmentDialog(0);\r\n  }\r\n\r\n\r\n  examIntegrationDialog() {\r\n    this.dialog.open(ExamsIntegrationComponent, {\r\n      data: {\r\n        subjectId: this.subjectId,\r\n        unitId: this.selectedUnitId,\r\n      },\r\n      panelClass: 'dialog-radius',\r\n      width: \"40%\"\r\n    })\r\n      .afterClosed()\r\n      .subscribe(data => {\r\n      });\r\n\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n\r\n<mat-card class=\"admin-index-card\">\r\n  <mat-card-title class=\"px-2\">\r\n    <page-title *ngIf=\"isCourseLoaded;else courseLoader\"\r\n                [title]=\"\r\n                langService?.isArabic\r\n                ?course.subCourse_ar_name\r\n                :course.subCourse_en_name\">\r\n    </page-title>\r\n    <button class=\"orange-btn radius-btn integration-btn float-right d-inline-block mx-1 mb-2\"\r\n            (click)=\"examIntegrationDialog()\">\r\n      {{ \"examIntegration\" | translate }}\r\n    </button>\r\n    <ng-template #courseLoader>\r\n      <ngx-skeleton-loader\r\n        [theme]=\"{\r\n              height: '20px',\r\n              width:'100px',\r\n              margin: '0px',\r\n              borderRadius: '10px'\r\n            }\"\r\n      ></ngx-skeleton-loader>\r\n    </ng-template>\r\n\r\n    <!-- Back -->\r\n    <!--    <a-->\r\n    <!--      class=\"btn btn-secondary\"-->\r\n    <!--      routerLink=\"/dashboard/setup/course\"-->\r\n    <!--      [queryParams]=\"{-->\r\n    <!--          functionId: functionId-->\r\n    <!--        }\"-->\r\n    <!--    >-->\r\n    <!--      {{ \"General.Back\" | translate }}-->\r\n    <!--    </a>-->\r\n\r\n  </mat-card-title>\r\n  <mat-card-subtitle class=\"px-2 mt-1\">\r\n    {{ \"AddGeneralInfCourse\" |translate }}\r\n  </mat-card-subtitle>\r\n\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 mt-2\">\r\n        <!-- START: Units Nav tabs  (Stages List)-->\r\n        <div class=\"stage-header\">\r\n           <span *ngFor=\"let unit of units; index as i; trackBy: track\"\r\n                 (click)=\"changeSelectedUnit(unit, i)\"\r\n                 class=\"stage mx-2\"\r\n                 [class.active]=\"selectedUnitId==unit.id\">\r\n              {{\r\n             this.langService.isArabic\r\n               ? (unit.unit_ar_name ?? unit.unit_en_name)\r\n               : (unit.unit_en_name ?? unit.unit_ar_name)\r\n             }}\r\n           </span>\r\n\r\n          <!-- Add Unit button  (add stage)-->\r\n          <span (click)=\"openAddEditUnitDialog(0)\"\r\n                class=\"stage add-stage mx-2\">\r\n            {{ \"course.AddStage\" | translate }}\r\n            <i class=\"ft-plus-circle\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!--  START: Stage content (exams, Videos, Files)   -->\r\n      <div class=\"col-12 mt-3 stage-content\">\r\n        <ng-container *ngIf=\"isLoaded; else loader\">\r\n          <div class=\"row px-1 justify-content-between\">\r\n            <div class=\"col-12 col-lg-6\" *ngFor=\"let data of unitData\">\r\n              <div class=\"stage-content-row row\">\r\n\r\n\r\n              <span class=\"icon col-1 p-0 m-0\">\r\n                <img [src]=\"getFileIcon(data.type)\"\r\n                     height=\"35\"\r\n                     width=\"35\"\r\n                     class=\"mr-2 avatar\"\r\n                     alt=\"icon\">\r\n              </span>\r\n\r\n                <div class=\"name col-7 p-0 m-0\" [class.isLecture]=\"data.type == appStrings.stageLecture\"\r\n                     [routerLink]=\"data.type == appStrings.stageLecture?'/dashboard/setup/course/structure-lectures':null\"\r\n                     [queryParams]=\"{\r\n                                       materialId: data.id,\r\n                                       functionId: functionId,\r\n                                       subjectId: subjectId\r\n              }\">\r\n                  {{\r\n                  this.langService.isArabic\r\n                    ? (data.ar_name ?? data.en_name)\r\n                    : (data.en_name ?? data.ar_name)\r\n                  }}\r\n                </div>\r\n\r\n                <div class=\"time col-2 p-0 m-0\">\r\n                <span *ngIf=\"data.type == appStrings.stageLecture\">\r\n<!--                    {{ \"Material.Lecture\" | translate }}-->\r\n                </span>\r\n\r\n                  <span *ngIf=\"data.type == appStrings.stageExam\">\r\n                   {{ data.questionsCount }} {{ \"labels.Questions\" | translate }}\r\n                </span>\r\n\r\n                  <span *ngIf=\"data.type == appStrings.stageAttach\">\r\n                    {{(data.size / 1000000).toFixed(2)    }} MB\r\n                </span>\r\n                </div>\r\n\r\n                <div class=\"action text-center col-2 p-0 m-0\">\r\n                  <a\r\n                    (click)=\"editUnitData(data)\"\r\n                    class=\"dark-blue mr-2\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"fas fa-pen font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    (click)=\"openDeleteUnitDataDialog(data)\"\r\n                    class=\"danger\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"fa fa-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-12 col-lg-6 px-0 mb-2\">\r\n              <button class=\"dashed-btn\" (click)=\"openCreationDialog()\">\r\n                <i class=\"ft-plus-circle\"></i>\r\n                <p> {{ \"addStageData\" | translate }}</p>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n\r\n  <mat-card-actions align=\"end\" class=\"pr-3 pt-0\">\r\n    <button routerLink=\"/dashboard/setup/course/edit-course/{{ subjectId }}/0\"\r\n            [queryParams]=\"{ functionId:functionId}\"\r\n            class=\"dark-blue-btn radius-btn cancel-btn\">\r\n          <span class=\"text-btn\">\r\n            {{ \"General.Back\" | translate }}\r\n          </span>\r\n    </button>\r\n\r\n    <button class=\"orange-btn radius-btn next-btn\"\r\n            routerLink=\"/dashboard/setup/course/index\"\r\n            [queryParams]=\"{ functionId:functionId}\">\r\n          <span class=\"text-btn\">\r\n            {{ \"General.Submit\" | translate }}\r\n          </span>\r\n    </button>\r\n  </mat-card-actions>\r\n\r\n</mat-card>\r\n\r\n\r\n<ng-template #dialogTemplate>\r\n  <p mat-dialog-title>\r\n    <page-title title=\"General.Add\"></page-title>\r\n    <i [mat-dialog-close]=\"false\" class=\"fas fa-times-circle closeIcon float-right\"></i>\r\n  </p>\r\n  <progress-bar\r\n    [percentage]=\"50\"\r\n    class=\"dark-blue\"\r\n  ></progress-bar>\r\n  <div mat-dialog-content>\r\n\r\n    <div class=\"create-data-dialog mb-3 mt-4\">\r\n\r\n      <!-- Video -->\r\n      <div class=\"create-data-dialog-box\"\r\n           (click)=\"selectedCreationItem = appStrings.stageLecture\"\r\n           [class.active]=\"selectedCreationItem == appStrings.stageLecture\">\r\n        <img [src]=\"assets.add_folder\"\r\n             width=\"85\"\r\n             height=\"85\">\r\n        <p> {{ \"Material.Lecture\" | translate }} </p>\r\n      </div>\r\n\r\n      <!-- Exam Quiz -->\r\n      <div class=\"create-data-dialog-box\"\r\n           (click)=\"selectedCreationItem = appStrings.stageExam\"\r\n           [class.active]=\"selectedCreationItem == appStrings.stageExam\">\r\n        <img [src]=\"assets.quiz\"\r\n             width=\"85\"\r\n             height=\"85\">\r\n        <p>\r\n          {{ \"quiz\" | translate }}\r\n        </p>\r\n      </div>\r\n\r\n      <!--  Attach   -->\r\n      <div class=\"create-data-dialog-box\"\r\n           (click)=\"selectedCreationItem = appStrings.stageAttach\"\r\n           [class.active]=\"selectedCreationItem == appStrings.stageAttach\">\r\n        <img [src]=\"assets.add_file\"\r\n             width=\"85\"\r\n             height=\"85\">\r\n        <p>\r\n          {{ \"file\" | translate }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button class=\"orange-btn radius-btn w-100\" (click)=\"next()\">\r\n      {{ \"General.Next\" | translate }}\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #loader>\r\n  <div class=\"row px-1 justify-content-between\">\r\n    <div class=\"col-12 col-lg-6 px-0 mb-2\" *ngFor=\"let item of [1, 2, 3, 4]\">\r\n      <ngx-skeleton-loader\r\n        [theme]=\"{\r\n              height: '50px',\r\n              margin: '0px',\r\n              borderRadius: '10px'\r\n            }\"\r\n      ></ngx-skeleton-loader>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { SvgManager } from \"app/shared/data/svg-manager\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-edit-options-dialog\",\r\n  templateUrl: \"./edit-options-dialog.component.html\",\r\n  styleUrls: [\"./edit-options-dialog.component.scss\"],\r\n})\r\nexport class EditOptionsDialogComponent implements OnInit {\r\n  functionId: number;\r\n\r\n  svgManager = new SvgManager();\r\n  rowFunctions: IRowFunctionVM[];\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private ar: ActivatedRoute,\r\n    public authserv: AuthService,\r\n    public dialogRef: MatDialogRef<EditOptionsDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { courseId: number }\r\n  ) {\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n            this.isLoaded = true;\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  navigate(isGeneralData: boolean) {\r\n    this.dialogRef.close();\r\n\r\n    // navigate to edit course general data\r\n    if (isGeneralData)\r\n      this.router.navigate(\r\n        [`dashboard/setup/course/edit-course/${this.data.courseId}/0`],\r\n        {\r\n          queryParams: {\r\n            functionId: this.functionId,\r\n          },\r\n        }\r\n      );\r\n    // navigate to edit course structure\r\n    else\r\n      this.router.navigate(\r\n        [`dashboard/setup/course/course-structure/${this.data.courseId}`],\r\n        {\r\n          queryParams: {\r\n            functionId: this.functionId,\r\n          },\r\n        }\r\n      );\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div mat-dialog-content class=\"edit-course-dialog\">\r\n  <div class=\"header\">\r\n    <h1 class=\"roboto-bold\">\r\n      {{ \"course.editCourse\" | translate }}\r\n    </h1>\r\n\r\n    <i class=\"fas fa-times-circle\" mat-dialog-close></i>\r\n  </div>\r\n\r\n  <div class=\"w-100\" *ngIf=\"isLoaded; else loading\">\r\n    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n      <div\r\n        class=\"card-option mbottom-20\"\r\n        (click)=\"navigate(true)\"\r\n        *ngIf=\"fun.functionName === 'Edit'\"\r\n      >\r\n        <img [src]=\"svgManager.edit_general\" />\r\n\r\n        <div>\r\n          <div class=\"title roboto-bold\">\r\n            {{ \"editGeneralInformation\" | translate }}\r\n          </div>\r\n          <div class=\"sub-title\">\r\n            {{ \"mainDataAndTargetEmployees\" | translate }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"card-option\"\r\n        (click)=\"navigate(false)\"\r\n        *ngIf=\"fun.functionName === 'CourseStructure'\"\r\n      >\r\n        <img [src]=\"svgManager.edit_structure\" />\r\n\r\n        <div>\r\n          <div class=\"title roboto-bold\">\r\n            {{ \"editCourseContent\" | translate }}\r\n          </div>\r\n          <div class=\"sub-title\">{{ \"videosExamsAndFiles\" | translate }}</div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <ng-template #loading>\r\n    <div *ngFor=\"let item of [1, 2]\">\r\n      <app-card-skeleton [height]=\"64\"></app-card-skeleton>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12 mb-3\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllRequests(1); dataSource.paginator = paginator\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"myFormCtrl.mobile\"\r\n                    label=\"labels.MobileNo\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"myFormCtrl.email\"\r\n                    label=\"labels.Email\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"myFormCtrl.code\"\r\n                    label=\"labels.Code\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <department-dropdown\r\n                    [control]=\"myFormCtrl.department\"\r\n                  ></department-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <job-title-by-department-dropdown\r\n                    [control]=\"myFormCtrl.jobTitle\"\r\n                    [departmentControl]=\"myFormCtrl.department\"\r\n                  ></job-title-by-department-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <courses-by-dep-job-title\r\n                    [control]=\"myFormCtrl.course\"\r\n                    [jobTitleControl]=\"myFormCtrl.jobTitle\"\r\n                  ></courses-by-dep-job-title>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-radio-button\r\n                    [control]=\"myFormCtrl.approve\"\r\n                    [radioList]=\"approveList\"\r\n                  ></app-radio-button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"admin-index-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"Navbar.TeachRequests\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content\r\n        style=\"\r\n          max-height: calc(100vh - 246px);\r\n          overflow-y: scroll;\r\n          overflow-x: hidden;\r\n        \"\r\n      >\r\n        <div class=\"row pbottom-10\" style=\"gap: 20px 0\" *ngIf=\"isLoaded; else loading\">\r\n          <div class=\"col-md-6 col-12\" *ngFor=\"let request of teachingRequests\">\r\n            <mat-card class=\"request-card\">\r\n              <div class=\"header\">\r\n                <div class=\"img\">\r\n                  <img\r\n                    [src]=\"fileService.previewPicture(request.employee_photo)\"\r\n                    (error)=\"\r\n                      fileService.onError($event, appAssets.no_user_profile)\r\n                    \"\r\n                    width=\"60\"\r\n                    height=\"60\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"header-details\">\r\n                  <div class=\"name-job\">\r\n                    <div class=\"name\">\r\n                      {{\r\n                        request.employee_first_name +\r\n                          \" \" +\r\n                          request.employee_last_name\r\n                      }}\r\n                    </div>\r\n                    <div class=\"job\">{{ request.jobTitle }}</div>\r\n                  </div>\r\n                  <div class=\"days\">\r\n                    <i class=\"far fa-clock\"></i>\r\n\r\n                    <ng-container *ngIf=\"request.dayCounts == 0; else notToday\">\r\n                      <span>\r\n                        {{ \"today\" | translate }}\r\n                      </span>\r\n                    </ng-container>\r\n\r\n                    <ng-template #notToday>\r\n                      <span *ngIf=\"languageService.isArabic\">\r\n                        {{ \"ago\" | translate }}\r\n                      </span>\r\n                      <span> {{ request.dayCounts }} </span>\r\n                      <span>\r\n                        {{\r\n                          (request.dayCounts == 1 ? \"day\" : \"days\") | translate\r\n                        }}\r\n                      </span>\r\n                      <span *ngIf=\"!languageService.isArabic\">\r\n                        {{ \"ago\" | translate }}\r\n                      </span>\r\n                    </ng-template>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"content\">\r\n                <div class=\"content-row\">\r\n                  <span class=\"title\">\r\n                    {{ \"labels.CourseName\" | translate }}&nbsp;:\r\n                  </span>\r\n                  <span class=\"value\">\r\n                    {{\r\n                      languageService.isArabic\r\n                        ? request.course_ar_name ?? request.course_en_name\r\n                        : request.course_en_name ?? request.course_ar_name\r\n                    }}\r\n                  </span>\r\n                </div>\r\n                <div class=\"content-row\">\r\n                  <span class=\"title\"\r\n                    >{{ \"labels.period\" | translate }}&nbsp;:</span\r\n                  >\r\n                  <span class=\"value\">\r\n                    {{ request.numberOfDays }}\r\n                  </span>\r\n                </div>\r\n                <div class=\"content-row\">\r\n                  <span class=\"title\"\r\n                    >{{ \"course.details\" | translate }}&nbsp;:</span\r\n                  >\r\n                  <span class=\"value\">\r\n                    {{ request.details }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"card-btns\">\r\n                <ng-container *ngIf=\"request.status == null\">\r\n                  <app-reject-btn\r\n                    class=\"flex-grow-1\"\r\n                    (onClick)=\"approveTeachigRequest(request, false)\"\r\n                  ></app-reject-btn>\r\n                  <app-approve-btn\r\n                    class=\"flex-grow-1\"\r\n                    (onClick)=\"approveTeachigRequest(request, true)\"\r\n                  ></app-approve-btn>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"request.status == true\">\r\n                  <span class=\"badge badge-success\">\r\n                    {{ \"labels.Approved\" | translate }}\r\n                    <!-- <i class=\"fas fa-check\"></i> -->\r\n                  </span>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"request.status == false\">\r\n                  <span class=\"badge badge-danger\">\r\n                    {{ \"labels.rejected\" | translate }}\r\n                    <!-- <i class=\"fas fa-times\"></i> -->\r\n                  </span>\r\n                </ng-container>\r\n              </div>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n\r\n        <ng-template #loading>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\" *ngFor=\"let ele of [].constructor(2)\">\r\n              <app-card-skeleton [height]=\"260\"></app-card-skeleton>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field> -->\r\n\r\n        <!-- <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"employee_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EmployeeName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.employee_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"courseName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CourseName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  languageService.isArabic\r\n                    ? ele.course_ar_name ?? ele.course_en_name\r\n                    : ele.course_en_name ?? ele.course_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"details\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.courseDetails\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span>\r\n                  {{ ele.details }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"numberOfDays\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.numberOfDays\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span>\r\n                  {{ ele.numberOfDays }}\r\n                </span>\r\n              </td>\r\n            </ng-container> -->\r\n\r\n        <!-- <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span class=\"warning\" *ngIf=\"ele.status == null\">\r\n                  {{ \"labels.Pendeing\" | translate }}\r\n                </span>\r\n                <span class=\"success\" *ngIf=\"ele.status == true\">\r\n                  {{ \"labels.Approve\" | translate }}\r\n                </span>\r\n                <span class=\"danger\" *ngIf=\"ele.status == false\">\r\n                  {{ \"labels.NotApprove\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container> -->\r\n\r\n        <!-- status Column -->\r\n        <!-- <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <mat-radio-group>\r\n                  <mat-radio-button\r\n                    [value]=\"true\"\r\n                    [checked]=\"ele.status == true\"\r\n                    (click)=\"approveTeachigRequest(ele, true)\"\r\n                    class=\"mr-2\"\r\n                  >\r\n                    {{ \"labels.Approve\" | translate }}\r\n                  </mat-radio-button>\r\n\r\n                  <mat-radio-button\r\n                    [value]=\"false\"\r\n                    [checked]=\"ele.status == false\"\r\n                    (click)=\"approveTeachigRequest(ele, false)\"\r\n                  >\r\n                    {{ \"labels.NotApprove\" | translate }}\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllRequests($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div> -->\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  IsearchModel,\r\n  RequestData,\r\n} from \"app/admin/models/admin/course-request\";\r\nimport { CourseAndTeachingRequestService } from \"app/admin/services/Admin/course-teaching-request.service\";\r\nimport { AppAssets } from \"app/shared/data/app-assets\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-teaching-requests\",\r\n  templateUrl: \"./teaching-requests.component.html\",\r\n  styleUrls: [\"./teaching-requests.component.scss\"],\r\n})\r\nexport class TeachingRequestsComponent implements OnInit {\r\n  // totalItems: number = 0;\r\n  // myForm: FormGroup;\r\n  EduCompId: any;\r\n\r\n  // approveList: RadioButtonModel[] = [\r\n  //   {\r\n  //     label: \"labels.Approve\",\r\n  //     value: true,\r\n  //   },\r\n  //   {\r\n  //     label: \"labels.NotApprove\",\r\n  //     value: false,\r\n  //   },\r\n  // ];\r\n\r\n  teachingRequests: RequestData[];\r\n  isLoaded: boolean = false;\r\n\r\n  // displayedColumns: string[] = [\r\n  //   \"#\",\r\n  //   \"employee_name\",\r\n  //   \"courseName\",\r\n  //   \"details\",\r\n  //   \"numberOfDays\",\r\n  //   \"status\",\r\n  //   // \"actions\",\r\n  // ];\r\n  // dataSource: MatTableDataSource<RequestData>;\r\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  // @ViewChild(MatSort) sort: MatSort;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    // private fb: FormBuilder,\r\n    private courseAndTeachingRequestService: CourseAndTeachingRequestService,\r\n    private authserv: AuthService,\r\n    private tostar: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    public languageService: LanguageService,\r\n    private router: Router,\r\n    private ar: ActivatedRoute,\r\n    public fileService: UploadFileService,\r\n    public appAssets: AppAssets\r\n  ) {\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.myForm = this.fb.group({\r\n    //   mobile: [null],\r\n    //   code: [null],\r\n    //   email: [null],\r\n    //   department: [null],\r\n    //   jobTitle: [null],\r\n    //   course: [null],\r\n    //   approve: [],\r\n    // });\r\n\r\n    this.getAllRequests(/* 1 */);\r\n  }\r\n\r\n  // get myFormCtrl() {\r\n  //   return this.myForm.controls;\r\n  // }\r\n\r\n  // applyFilter(event: Event) {\r\n  //   const filterValue = (event.target as HTMLInputElement).value;\r\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  // }\r\n\r\n  ngAfterViewInit() {\r\n    // if (this.dataSource) {\r\n    //   this.dataSource.paginator = this.paginator;\r\n    //   this.startSortingTable();\r\n    // }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllRequests(/* 1 */);\r\n      // this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAllRequests(/* page: number */) {\r\n    let data: IsearchModel = {\r\n      // page: page,\r\n      EduCompId: this.EduCompId,\r\n      mobile: /* this.myFormCtrl.mobile.value?.trim() */ null,\r\n      code: /* this.myFormCtrl.code.value?.trim().toLowerCase() */ null,\r\n      account_email:\r\n        /* this.myFormCtrl.email.value?.trim().toLowerCase() */ null,\r\n      approvement: /* this.myFormCtrl.approve.value */ null,\r\n      courseId: /* this.myFormCtrl.course.value */ null,\r\n    };\r\n\r\n    // this.spinner.show();\r\n    this.courseAndTeachingRequestService\r\n      .getAllTeachingRequests(data)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          // this.dataSource = new MatTableDataSource(res.Requests);\r\n          this.teachingRequests = res.Requests;\r\n          // this.totalItems = res.countItems;\r\n          // this.startSortingTable();\r\n        }\r\n        this.isLoaded = true;\r\n        // this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  approveTeachigRequest(request: RequestData, status: boolean) {\r\n    // console.log(request, status);\r\n    this.spinner.show();\r\n    this.courseAndTeachingRequestService\r\n      .ApproveTeachingRequest(request.id, status)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.teachingRequests.findIndex((ele) => ele == request);\r\n          this.teachingRequests[i].status = status;\r\n          // let i = this.dataSource.data.findIndex((ele) => ele == request);\r\n          // this.dataSource.data[i].status = status;\r\n          this.tostar.success(\"General.UpdateSuccessfully\");\r\n        } else this.tostar.error(res?.returnString);\r\n        if (res.courseId && status == true)\r\n          this.router.navigate(\r\n            [`dashboard/setup/course/edit-course/${res.courseId}/1`],\r\n            {\r\n              queryParams: {\r\n                functionId: this.functionId,\r\n              },\r\n            }\r\n          );\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  // resetSearch() {\r\n  //   this.myForm.reset();\r\n  //   this.getAllRequests(1);\r\n  //   this.dataSource.paginator = this.paginator;\r\n  // }\r\n\r\n  // startSortingTable() {\r\n  //   // custom sort\r\n  //   this.dataSource.sortingDataAccessor = (item, property) => {\r\n  //     switch (property) {\r\n  //       case \"courseName\":\r\n  //         return this.languageService.isArabic\r\n  //           ? item.course_ar_name ?? item.course_en_name\r\n  //           : item.course_en_name ?? item.course_ar_name;\r\n  //       default:\r\n  //         return item[property];\r\n  //     }\r\n  //   };\r\n  //   this.dataSource.sort = this.sort;\r\n  // }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  IDiplomaAddEditVM,\r\n  IDiplomaDetailsModel,\r\n  IDiplomaEditRequest,\r\n  IDiplomaGetVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  InputAppearance,\r\n  defaultInputAppearance,\r\n} from \"app/shared/enums/mat-theme.enum\";\r\nimport {\r\n  CategoriesModel,\r\n  subCategoriesModel,\r\n} from \"app/admin/models/setup/categories\";\r\nimport { CategoriesService } from \"app/admin/services/setup/categories.service\";\r\nimport { OriginalFileModel } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-diploma-index\",\r\n  templateUrl: \"./add-diploma.component.html\",\r\n  styleUrls: [\"./add-diploma.component.scss\"],\r\n})\r\nexport class AddDiplomaComponent implements OnInit {\r\n  DiplomaId: number = 0;\r\n  myForm!: FormGroup;\r\n  submitted: boolean = false;\r\n  addOutcome: boolean = false;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  mainCategories: CategoriesModel[];\r\n  subCategories: subCategoriesModel[];\r\n  dipOutcomes: string[] = [];\r\n  appearance: InputAppearance = defaultInputAppearance;\r\n  stepIndex: number = 0;\r\n  backBtnUrl: string;\r\n  Diploma: IDiplomaDetailsModel;\r\n  savedFile: OriginalFileModel;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private courseServ: CourseService,\r\n    private categoriesService: CategoriesService,\r\n    private fb: FormBuilder,\r\n    private ar: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    route: ActivatedRoute\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n    route.paramMap.subscribe((params) => {\r\n      this.DiplomaId = Number(params.get(\"id\"));\r\n      if (this.DiplomaId > 0) this.getDiplomaById();\r\n    });\r\n  }\r\n\r\n  onDeleteImg() {\r\n    this.FormCtrls.diploma_attach?.setValue(null);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n\r\n    this.myForm = this.fb.group({\r\n      ar_name: [null, [Validators.required]],\r\n      en_name: [null, [Validators.required]],\r\n      eduCompId: [null],\r\n      promoLink: [null, [Validators.required]],\r\n      diplomaDescreption: [null, [Validators.required]],\r\n      diploma_attach: [null, [Validators.required]],\r\n      subCategoryIds: [null, [Validators.required]], // [16, 17]\r\n      category_ids: [null],\r\n      learningOutcomeName: [null],\r\n    });\r\n    this.getAllCategories();\r\n  }\r\n  addoutcomes() {\r\n    this.addOutcome = true;\r\n  }\r\n  saveNewOutcomes() {\r\n    if (this.FormCtrls.learningOutcomeName.value) {\r\n      let Name = this.FormCtrls.learningOutcomeName.value;\r\n      this.dipOutcomes.push(Name);\r\n      this.addOutcome = false;\r\n      this.FormCtrls.learningOutcomeName.setValue(null);\r\n    }\r\n  }\r\n  getAllCategories() {\r\n    this.categoriesService.getCategories().subscribe((res) => {\r\n      if (res) this.mainCategories = res.MainCategories;\r\n    });\r\n  }\r\n  getDiplomaById() {\r\n    this.courseServ\r\n      .getDiplomaById<IDiplomaDetailsModel>(this.DiplomaId)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.Diploma = res;\r\n          this.myForm.patchValue(this.Diploma);\r\n          this.FormCtrls.ar_name?.setValue(this.Diploma.diploma_ar_name);\r\n          this.FormCtrls.en_name?.setValue(this.Diploma.diploma_en_name);\r\n          this.FormCtrls.diploma_attach?.setValue(this.Diploma.attach_path);\r\n          this.FormCtrls.promoLink?.setValue(this.Diploma.promo_link);\r\n          this.FormCtrls.diplomaDescreption?.setValue(this.Diploma.description);\r\n          // this.dipOutcomes?.concat(this.Diploma.learning_outcomes);\r\n          this.dipOutcomes = this.Diploma.learning_outcomes;\r\n          let mainCatIdVar = this.Diploma.diploma_category[0].mainCatId;\r\n          this.FormCtrls.category_ids?.setValue(mainCatIdVar);\r\n          this.getAllSubCategories(mainCatIdVar);\r\n          let selectedSubCatIds: number[] = []; // [16, 17, 18]\r\n          res.diploma_category.forEach((e) => {\r\n            selectedSubCatIds.push(e.id);\r\n          });\r\n          this.FormCtrls.subCategoryIds.setValue(selectedSubCatIds);\r\n          // this.categoriesService\r\n          //   .getSubCategoriesByMainId(mainCatIdVar)\r\n          //   .subscribe((res) => {\r\n          //     if (res) this.subCategories = res.SubCategories;\r\n          //     // this.spinner.hide();\r\n          //   });\r\n        }\r\n      });\r\n  }\r\n  onChangeMainCategory() {\r\n    let mainCategoryId = this.FormCtrls.category_ids.value;\r\n    // console.log(mainCategoryId);\r\n    this.FormCtrls.subCategoryIds.setValue(null);\r\n    if (mainCategoryId > 0) {\r\n      this.getAllSubCategories(mainCategoryId);\r\n      // console.log(this.FormCtrls.subCategoryIds);\r\n      this.FormCtrls.subCategoryIds.enable();\r\n    } else {\r\n      this.FormCtrls.subCategoryIds.disable();\r\n    }\r\n  }\r\n  getAllSubCategories(mainCategoryId: number) {\r\n    // this.spinner.show();\r\n    this.categoriesService\r\n      .getSubCategoriesByMainId(mainCategoryId)\r\n      .subscribe((res) => {\r\n        if (res) this.subCategories = res.SubCategories;\r\n        // this.spinner.hide();\r\n      });\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let Diploma: IDiplomaAddEditVM = {\r\n        ar_name: this.FormCtrls.ar_name.value,\r\n        en_name: this.FormCtrls.en_name.value,\r\n        diploma_attach: this.FormCtrls.diploma_attach.value,\r\n        promoLink: this.FormCtrls.promoLink.value,\r\n        LearningOutComes: this.dipOutcomes,\r\n        subCategoryIds: this.FormCtrls.subCategoryIds.value,\r\n        diplomaDescreption: this.FormCtrls.diplomaDescreption.value,\r\n        eduCompId: this.EduCompId,\r\n      };\r\n      // add or edit\r\n      if (this.DiplomaId == 0) this.addDiploma(Diploma);\r\n      else this.updateDiploma(Diploma);\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  addDiploma(Diploma: IDiplomaAddEditVM) {\r\n    this.courseServ\r\n      .addDiploma<IDiplomaAddEditVM, any>(Diploma)\r\n      .subscribe((res) => {\r\n        if (res?.returnValue == 1) {\r\n          this.msg.success(\"General.AddSuccessfully\");\r\n          this.clearForm();\r\n        } else {\r\n          this.msg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateDiploma(Diploma: IDiplomaAddEditVM) {\r\n    this.courseServ\r\n      .updateDiploma<IDiplomaAddEditVM, any>(this.DiplomaId, Diploma)\r\n      .subscribe((res) => {\r\n        if (res?.returnValue == 1) {\r\n          this.msg.success(\"General.UpdateSuccessfully\");\r\n          // this.clearForm();\r\n        } else {\r\n          this.msg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  toEditDiploma(Diploma: IDiplomaDetailsModel) {\r\n    this.DiplomaId = Diploma.id;\r\n    this.myForm.patchValue(Diploma);\r\n    // this.FormCtrls.ar_name?.setValue(this.Diploma.diploma_ar_name);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n    this.DiplomaId = 0;\r\n    this.dipOutcomes = null;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"admin-index-card\">\r\n      <mat-card-title class=\"px-2\">\r\n        <page-title\r\n          parentTitle=\"course.Diplomas\"\r\n          addTitle=\"course.AddDiploma\"\r\n          editTitle=\"course.EditDiploma\"\r\n          parentTitleLink=\"/dashboard/setup/diploma/index\"\r\n          [parentLinkParams]=\"{ functionId: functionId }\"\r\n          [id]=\"DiplomaId\"\r\n          [subTitle]=\"\r\n            stepIndex == 0\r\n              ? 'labels.fillTheGeneralInformationAboutNewDiploma'\r\n              : stepIndex == 1\r\n              ? 'course.addLearningOutcomes'\r\n              : ''\r\n          \"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n      <div style=\"margin-bottom: 20px\">\r\n        <progress-bar\r\n          [percentage]=\"stepIndex == 0 ? 50 : stepIndex == 1 ? 100 : 100\"\r\n          class=\"dark-blue\"\r\n        ></progress-bar>\r\n      </div>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\" [class.hidden]=\"stepIndex != 0\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.arName\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.enName\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label class=\"input-label\">\r\n                    {{ \"labels.cover-photo\" | translate }}</mat-label\r\n                  >\r\n                  <app-button-file-input-new\r\n                    [control]=\"FormCtrls.diploma_attach\"\r\n                    accept=\"image/*\"\r\n                    (onDelete)=\"onDeleteImg()\"\r\n                  >\r\n                  </app-button-file-input-new>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.promoLink\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.promoLink\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label class=\"input-label\">\r\n                    {{ \"categories.category\" | translate }}\r\n                  </mat-label>\r\n                  <mat-form-field [appearance]=\"appearance\">\r\n                    <mat-select\r\n                      formControlName=\"category_ids\"\r\n                      (selectionChange)=\"onChangeMainCategory()\"\r\n                    >\r\n                      <mat-option [value]=\"null\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <ng-container *ngFor=\"let category of mainCategories\">\r\n                        <mat-option [value]=\"category.id\">\r\n                          {{ category.name }}\r\n                        </mat-option>\r\n                      </ng-container>\r\n                    </mat-select>\r\n\r\n                    <mat-hint>\r\n                      <input-validation-msg\r\n                        [control]=\"FormCtrls.category_ids\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\"\r\n                      ></input-validation-msg>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label class=\"input-label\">\r\n                    {{ \"categories.subCategory\" | translate }}\r\n                  </mat-label>\r\n                  <mat-form-field [appearance]=\"appearance\">\r\n                    <mat-select formControlName=\"subCategoryIds\" multiple>\r\n                      <mat-option [value]=\"null\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <ng-container *ngFor=\"let subCategory of subCategories\">\r\n                        <mat-option [value]=\"subCategory.id\">\r\n                          {{ subCategory.name }}\r\n                        </mat-option>\r\n                      </ng-container>\r\n                    </mat-select>\r\n\r\n                    <mat-hint>\r\n                      <input-validation-msg\r\n                        [control]=\"FormCtrls.subCategoryIds\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\"\r\n                      ></input-validation-msg>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-text-editor\r\n                    [control]=\"FormCtrls.diplomaDescreption\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.diplomaDescreption\"\r\n                  ></app-text-editor>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"row second-step\" [class.hidden]=\"stepIndex != 1\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"subcatscontainer\">\r\n                    <mat-label class=\"input-label\">\r\n                      {{ \"course.employeeWillLearn\" | translate }}</mat-label\r\n                    >\r\n                    <ul class=\"list-group customeLG\">\r\n                      <ng-container *ngIf=\"dipOutcomes?.length > 0; else empty\">\r\n                        <li\r\n                          class=\"list-group-item\"\r\n                          *ngFor=\"let outcome of dipOutcomes\"\r\n                        >\r\n                          {{ outcome }}\r\n                        </li>\r\n                      </ng-container>\r\n                      <ng-template #empty>\r\n                        <li class=\"list-group-item customebg\">\r\n                          {{ \"labels.emptyLearningOutcomes\" | translate }}\r\n                        </li>\r\n                      </ng-template>\r\n\r\n                      <li class=\"list-group-item hasInput\" *ngIf=\"addOutcome\">\r\n                        <app-input\r\n                          [control]=\"FormCtrls.learningOutcomeName\"\r\n                          [submitted]=\"submitted\"\r\n                        ></app-input>\r\n                      </li>\r\n                      <li class=\"list-group-item hasBtn\" *ngIf=\"!addOutcome\">\r\n                        <button\r\n                          class=\"btn btn-transparent\"\r\n                          (click)=\"addoutcomes()\"\r\n                        >\r\n                          {{ \"labels.addNewOutcome\" | translate }}\r\n                          &nbsp;\r\n                          <i class=\"icon-plus\"></i>\r\n                        </button>\r\n                      </li>\r\n                      <li class=\"list-group-item hasBtn\" *ngIf=\"addOutcome\">\r\n                        <button\r\n                          class=\"btn btn-transparent\"\r\n                          (click)=\"saveNewOutcomes()\"\r\n                        >\r\n                          {{ \"General.Save\" | translate }}\r\n                          &nbsp;\r\n                          <i class=\"icon-plus\"></i>\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" class=\"pt-0\">\r\n        <button\r\n          class=\"dark-blue-btn radius-btn cancel-btn\"\r\n          routerLink=\"/dashboard/setup/diploma/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          *ngIf=\"stepIndex == 0\"\r\n        >\r\n          <span class=\"text-btn\">\r\n            {{ \"General.cancel\" | translate }}\r\n          </span>\r\n        </button>\r\n\r\n        <button\r\n          class=\"dark-blue-btn radius-btn cancel-btn\"\r\n          (click)=\"stepIndex = stepIndex - 1\"\r\n          *ngIf=\"stepIndex > 0\"\r\n        >\r\n          <span class=\"text-btn\">\r\n            {{ \"General.Back\" | translate }}\r\n          </span>\r\n        </button>\r\n\r\n        <button\r\n          class=\"orange-btn radius-btn next-btn\"\r\n          (click)=\"stepIndex = stepIndex + 1\"\r\n          *ngIf=\"stepIndex < 1\"\r\n        >\r\n          <span class=\"text-btn\">\r\n            {{ \"General.Next\" | translate }}\r\n          </span>\r\n        </button>\r\n\r\n        <button\r\n          class=\"orange-btn radius-btn next-btn\"\r\n          (click)=\"onSubmit()\"\r\n          *ngIf=\"stepIndex == 1\"\r\n        >\r\n          <span class=\"text-btn\">\r\n            {{\r\n              (DiplomaId == 0 ? \"General.saveDiploma\" : \"General.Update\")\r\n                | translate\r\n            }}\r\n          </span>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {Component, Inject, OnInit, Optional,} from \"@angular/core\";\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef,} from \"@angular/material/dialog\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {IRowFunctionVM} from \"app/shared/models/general/general\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\n\r\nimport {DeleteDialogComponent} from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {IDiplomaGetVM, IMyDiplomasMV,} from \"app/admin/models/admin/setup/course\";\r\nimport {CourseService} from \"app/admin/services/Admin/setup/course.service\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {LanguageService} from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-diploma\",\r\n  templateUrl: \"./diploma.component.html\",\r\n  styleUrls: [\"./diploma.component.scss\"],\r\n})\r\nexport class DiplomaComponent implements OnInit {\r\n  rowFunctions: IRowFunctionVM[];\r\n  diplomaList: IMyDiplomasMV[];\r\n  EduCompId: number;\r\n  functionId: number;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private courseServ: CourseService,\r\n    route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private languageService: LanguageService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n    @Optional() public dialogRef: MatDialogRef<DiplomaComponent>\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n    this.getAllDiplomas();\r\n  }\r\n\r\n  getAllDiplomas() {\r\n    this.courseServ\r\n      // .getAllDiplomas<IDiplomaGetModel>(this.curPage)\r\n      .getAllDiploma()\r\n      .subscribe((response: IMyDiplomasMV[]) => {\r\n        if (response) {\r\n          this.isLoaded = true;\r\n          this.diplomaList = response;\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  openDeleteDialog(Diploma: IDiplomaGetVM): void {\r\n    let courseName = this.languageService.isArabic\r\n      ? Diploma.diploma_ar_name\r\n      : Diploma.diploma_en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: courseName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeDiploma(Diploma.id);\r\n      });\r\n  }\r\n\r\n  removeDiploma(id: number) {\r\n    this.spinner.show();\r\n    this.courseServ.removeDiploma(id).subscribe((response) => {\r\n      if (response) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        this.getAllDiplomas();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"admin-index-card\">\r\n      <mat-card-title class=\"px-2\">\r\n        <page-title title=\"course.Diplomas\"></page-title>\r\n\r\n        <create-new-btn url=\"/dashboard/setup/diploma/add\"\r\n                        [params]=\"{functionId: functionId}\"\r\n                        label=\"course.createDiploma\"\r\n                        class=\"float-right d-inline-block mb-2 mx-1 mt--5\"\r\n                        [hideDefaultTitle]=\"true\">\r\n        </create-new-btn>\r\n\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\" *ngIf=\"isLoaded; else loading\">\r\n          <div class=\"col-lg-3 col-md-4 col-12 mb-3\"\r\n               *ngFor=\"let diploma of diplomaList\">\r\n            <app-diploma-card [diploma]=\"diploma\"\r\n                              [isAdmin]=\"true\"\r\n                              [rowFunctions]=\"rowFunctions\"\r\n                              [functionId]=\"functionId\"\r\n                              (onDelete)=\"openDeleteDialog(diploma)\">\r\n            </app-diploma-card>\r\n          </div>\r\n\r\n          <div class=\"col-lg-3 col-md-4 col-12 mb-3\">\r\n            <button class=\"dashed-btn\"\r\n                    style=\"height: 290px\"\r\n                    routerLink=\"/dashboard/setup/diploma/add\"\r\n                    [queryParams]=\"{functionId: functionId}\">\r\n              <i class=\"ft-plus-circle\"></i>\r\n              <p> {{ \"addNew\" | translate }}</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <ng-template #loading>\r\n          <div class=\"row\">\r\n            <div\r\n              class=\"col-lg-3 col-md-4 col-sm-6 col-12\"\r\n              *ngFor=\"let ele of [].constructor(4)\"\r\n            >\r\n              <app-card-skeleton [height]=\"290\"></app-card-skeleton>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { ManageViewsService } from \"app/admin/services/Admin/manage-views.service\";\r\nimport {\r\n  teacherByEduCompId,\r\n  GeneralDropdownVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-exceptional-views\",\r\n  templateUrl: \"./exceptional-views.component.html\",\r\n  styleUrls: [\"./exceptional-views.component.scss\"],\r\n})\r\nexport class ExceptionalViewsComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[];\r\n  stages: GeneralDropdownVM[];\r\n  years: GeneralDropdownVM[];\r\n  subjects: GeneralDropdownVM[];\r\n  units: GeneralDropdownVM[];\r\n  lessons: GeneralDropdownVM[];\r\n  lectures: GeneralDropdownVM[];\r\n  materials: GeneralDropdownVM[];\r\n  EduCompId: number;\r\n  branchId: number;\r\n  searchForm!: FormGroup;\r\n  resetForm!: FormGroup;\r\n  submitted = false;\r\n  email?: string = \"\";\r\n  username?: string = \"\";\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private ManageViewsService: ManageViewsService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private CashPaymentService: CashPaymentService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.resetForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [\"\", [Validators.required]],\r\n      itemTypeId: [15],\r\n      paymentMethod: [\"\", [Validators.required]],\r\n      extraViews: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      paidAmount: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      toDate: [\"\", [Validators.required]],\r\n      resetTemplate: [false],\r\n      teacherUserId: [\"\"],\r\n      stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n    });\r\n  }\r\n\r\n  get resetFormCtrl() {\r\n    return this.resetForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.email = res.email;\r\n        this.username = res.username;\r\n        this.resetFormCtrl.userId.setValue(res.userId);\r\n        this.resetFormCtrl.yearId.setValue(res.yearId);\r\n      } else {\r\n        this.toastr.error(res.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  addExceptionalViews() {\r\n    this.submitted = true;\r\n    if (!this.resetFormCtrl.itemTypeId.value) {\r\n      this.toastr.warning(\"Must Select \");\r\n    }\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.ManageViewsService.addExceptionalViews(\r\n        this.EduCompId,\r\n        this.resetForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.resetForm.reset();\r\n          this.searchForm.reset();\r\n          this.toastr.success(\"تم إضافة المشاهدات\");\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  getSubjectByTeacherId() {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.subjects = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.yearId.value) {\r\n      this.GeneralService.getSubjectByTeacherId(\r\n        this.resetFormCtrl.teacherUserId.value,\r\n        this.resetFormCtrl.yearId.value\r\n      ).subscribe((res: any) => {\r\n        this.subjects = res.lsts;\r\n      });\r\n    }\r\n  }\r\n\r\n  //  getStageByTeacherId(teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.teacherUserId.value) {\r\n  //     this.EducationalService.getStageByTeacherId(teacherId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //  getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.stageId.value) {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //      });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.yearId.value) {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId: teacherId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.subjectId.value) {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n      // this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.unitId.value) {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      // this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLessonWithEnded(lessonId: any, teacherId: any) {\r\n    this.CashPaymentService.GetItemsByLessonWithEnded(\r\n      this.EduCompId,\r\n      lessonId,\r\n      this.resetFormCtrl?.itemTypeId.value,\r\n      teacherId,\r\n      true\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    this.CashPaymentService.GetItemsByUnit(\r\n      this.EduCompId,\r\n      unitId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    this.CashPaymentService.GetItemsBySubject(\r\n      this.EduCompId,\r\n      subjectId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ManageViews\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ExceptionalViews\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"resetFormCtrl.userId.value\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Student\" | translate }} - {{ username }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"resetForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"itemTypeId\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"15\">\r\n                    {{ \"Material.Lecture\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"16\">\r\n                    {{ \"labels.Exam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"3\">\r\n                    {{ \"labels.Template\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"username\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"email\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\" *ngIf=\"resetFormCtrl.itemTypeId.value == 3\">\r\n              <mat-radio-group formControlName=\"resetTemplate\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.DeleteTemplate\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.DeleteStudentAnswers\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"teacherUserId\"\r\n                  (selectionChange)=\"getSubjectByTeacherId()\"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <!--\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"stageId\"\r\n                  (selectionChange)=\"\r\n                    getYearsByStageId(resetFormCtrl.stageId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let stage of stages\"\r\n                    [value]=\"stage.Value\"\r\n                  >\r\n                    {{ stage.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"yearId\"\r\n                  (selectionChange)=\"\r\n                    getSubjectsByYearId(\r\n                      resetFormCtrl.yearId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year.Value\">\r\n                    {{ year.Text_Ar }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"subjectId\"\r\n                  (selectionChange)=\"\r\n                    getUnitsBySubjectId(resetFormCtrl.subjectId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let subject of subjects\"\r\n                    [value]=\"subject.Value\"\r\n                  >\r\n                    {{ subject.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"unitId\"\r\n                  (selectionChange)=\"\r\n                    getLessonsByUnitId(resetFormCtrl.unitId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let unit of units\" [value]=\"unit.Value\">\r\n                    {{ unit.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"lessonId\"\r\n                  (selectionChange)=\"\r\n                    GetItemsByLessonWithEnded(\r\n                      resetFormCtrl.lessonId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let lesson of lessons\"\r\n                    [value]=\"lesson.Value\"\r\n                  >\r\n                    {{ lesson.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Material.Lecture\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"itemId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let material of materials\"\r\n                    [value]=\"material.Value\"\r\n                  >\r\n                    {{ material.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.itemId.invalid &&\r\n                    (resetFormCtrl.itemId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.itemId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Balance.PaymentMethod\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"paymentMethod\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option [value]=\"1\">\r\n                    {{ \"Balance.Balance\" | translate }}</mat-option\r\n                  >\r\n                  <mat-option [value]=\"2\">\r\n                    {{ \"Balance.ManualPayment\" | translate }}</mat-option\r\n                  >\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paymentMethod.invalid &&\r\n                    (resetFormCtrl.paymentMethod.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paymentMethod.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.NumberViews\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"extraViews\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.extraViews.invalid &&\r\n                    (resetFormCtrl.extraViews.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Amount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"paidAmount\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paidAmount.invalid &&\r\n                    (resetFormCtrl.paidAmount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                <input\r\n                  matInput\r\n                  [matDatepicker]=\"toDate\"\r\n                  formControlName=\"toDate\"\r\n                />\r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"toDate\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-datepicker #toDate></mat-datepicker>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.toDate.invalid &&\r\n                    (resetFormCtrl.toDate.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.toDate.errors?.required\">\r\n                    You must choose a Date.\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"addExceptionalViews()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { GenerateCodesService } from \"../../../services/Admin/generate-codes.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { teacherBySubEduComp } from \"app/admin/models/admin/educations\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IGenerateBalanceCodesVM } from \"app/admin/models/admin/admin\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-generate-balance-codes\",\r\n  templateUrl: \"./generate-balance-codes.component.html\",\r\n  styleUrls: [\"./generate-balance-codes.component.scss\"],\r\n})\r\nexport class GenerateBalanceCodesComponent implements OnInit {\r\n  EduCompId: number;\r\n  branchId: number;\r\n  Teachers: teacherBySubEduComp[];\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private generateCodesService: GenerateCodesService,\r\n    private authService: AuthService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    public fileService: UploadFileService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n    this.myForm = this.fb.group({\r\n      teacherId: [\"\", Validators.required],\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      Amount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      Price: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId(e.EduCompId);\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  GenerateBalanceCodes() {\r\n    this.submitted = true;\r\n    this.FormCtrls.EduCompId.setValue(this.EduCompId);\r\n    let data: IGenerateBalanceCodesVM = {\r\n      Amount: this.FormCtrls.Amount.value,\r\n      Price: this.FormCtrls.Price.value,\r\n      teacherId: this.FormCtrls.teacherId.value,\r\n      EduCompId: this.EduCompId,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.generateCodesService\r\n        .GenerateBalanceCodes<IGenerateBalanceCodesVM>(data)\r\n        .subscribe((res: any) => {\r\n          //  console.log(\"GenerateBalanceCodes\", res);\r\n          this.submitted = false;\r\n          if (res.returnValue == 1) {\r\n            this.fileService.downloadFile(res.path);\r\n            this.myForm.reset();\r\n          } else this.toastr.error(res.returnString, \"Codes Not Generated !\");\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    if (EduCompId) {\r\n      this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n        (res: any) => {\r\n          this.Teachers = res.lstTeachers;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title\r\n        >{{ \"Navbar.GenerateBalanceCodes\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"teacherId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.teacherId.invalid &&\r\n                    (FormCtrls.teacherId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.teacherId.errors?.required\">\r\n                    Must Choose a value\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.CodesCount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"Amount\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Amount.invalid &&\r\n                    (FormCtrls.Amount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.Amount.errors?.required ||\r\n                      FormCtrls.Amount.errors?.bigZero\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.CodePrice\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"Price\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Price.invalid &&\r\n                    (FormCtrls.Price.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.Price.errors?.required ||\r\n                      FormCtrls.Price.errors?.bigZero\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"GenerateBalanceCodes()\"\r\n        >\r\n          {{ \"General.Generate\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<!-- <ngx-spinner></ngx-spinner> -->\r\n","import {Component, Inject, OnInit} from \"@angular/core\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {TranslateService} from \"@ngx-translate/core\";\r\nimport {GiftsService} from \"app/admin/services/Admin/gifts.service\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {giftCategoryViewModel} from \"app/admin/models/admin/gifts\";\r\n\r\n@Component({\r\n  selector: \"app-gifts-category-add\",\r\n  templateUrl: \"./gifts-category-add.component.html\",\r\n  styleUrls: [\"./gifts-category-add.component.scss\"],\r\n})\r\nexport class GiftsCategoryAddComponent implements OnInit {\r\n  giftcategoryId: number = 0;\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  currentLang: string;\r\n  EduCompId: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authserv: AuthService,\r\n    private giftsService: GiftsService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: ToastrService,\r\n    public dialogRef: MatDialogRef<GiftsCategoryAddComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public gift: giftCategoryViewModel\r\n  ) {\r\n    this.giftcategoryId = gift?.id ?? 0;\r\n  }\r\n\r\n  get engNameCtrl() {\r\n    return this.myForm.get(\"englishName\");\r\n  }\r\n\r\n  get arbNameCtrl() {\r\n    return this.myForm.get(\"arabicName\");\r\n  }\r\n\r\n  get IdCtrl() {\r\n    return this.myForm.get(\"id\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      id: [null],\r\n      englishName: [null, Validators.required],\r\n      arabicName: [null, Validators.required],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n\r\n    if (this.giftcategoryId > 0) {\r\n      this.IdCtrl.setValue(this.gift.id);\r\n      this.arbNameCtrl.setValue(this.gift.arabicName);\r\n      this.engNameCtrl.setValue(this.gift.englishName);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    let valid = this.myForm.valid;\r\n    if (valid) {\r\n      this.spinner.show();\r\n      this.giftsService\r\n        .addEditCategory(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.dialogRef.close(true);\r\n            if (this.IdCtrl.value == 0) {\r\n              if (this.currentLang == \"ar\") {\r\n                this.msg.success(\"تم إضافة الفئة\");\r\n              } else {\r\n                this.msg.success(\"Gift Category Added \");\r\n              }\r\n            } else {\r\n              if (this.currentLang == \"ar\") {\r\n                this.msg.success(\"تم تعديل الفئة\");\r\n              } else {\r\n                this.msg.success(\"Gift Category Updated \");\r\n              }\r\n            }\r\n          } else {\r\n            if (this.currentLang == \"ar\") {\r\n              this.msg.success(\"هذا الاسم موجود مسبقا \");\r\n            } else {\r\n              this.msg.success(\"This name is already exist\");\r\n            }\r\n          }\r\n\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"mb-2\">\r\n  <p mat-dialog-title>\r\n    <page-title title=\"Gifts.AddNewGiftCategory\"></page-title>\r\n    <i [mat-dialog-close]=\"false\" class=\"fas fa-times-circle closeIcon float-right\"></i>\r\n  </p>\r\n  <div mat-dialog-content style=\"min-height:200px \">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input [control]=\"engNameCtrl\"\r\n                         [submitted]=\"submitted\"\r\n                         label=\"Gifts.EnglishName\">\r\n              </app-input>\r\n\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <app-input [control]=\"arbNameCtrl\"\r\n                         [submitted]=\"submitted\"\r\n                         label=\"Gifts.ArabicName\">\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div mat-dialog-actions>\r\n    <button class=\"orange-btn radius-btn w-100 \"\r\n            (click)=\"submit()\">\r\n      {{ (giftcategoryId > 0 ? \"Gifts.UpdateGiftCategory\" : \"Gifts.SaveGiftCategory\") | translate }}\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n\r\n","import {Component, OnInit, ViewChild} from \"@angular/core\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {diftCategoryAddEditVM, giftCategoryViewModel,} from \"app/admin/models/admin/gifts\";\r\nimport {GiftsService} from \"app/admin/services/Admin/gifts.service\";\r\nimport {DeleteDialogComponent} from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {IRowFunctionVM} from \"app/shared/models/general/general\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {LanguageService} from \"app/shared/services/language.service\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {CustomeValidator} from \"app/shared/validators/customeValid.validator\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {\r\n  GiftsCategoryAddComponent\r\n} from \"app/admin/pages/setup/gifts-category/gifts-category-add/gifts-category-add.component\";\r\n\r\n@Component({\r\n  selector: \"app-gifts-category-index\",\r\n  templateUrl: \"./gifts-category-index.component.html\",\r\n  styleUrls: [\"./gifts-category-index.component.scss\"],\r\n})\r\nexport class GiftsCategoryIndexComponent implements OnInit {\r\n  form!: FormGroup;\r\n  curPage: number = 1;\r\n  itemsCount: any;\r\n  functionId: number;\r\n  submitted: boolean = false;\r\n  EduCompId: any;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // giftCategory: giftCategoryViewModel[] = [];\r\n  dataSource: MatTableDataSource<giftCategoryViewModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns: string[] = [\r\n    // \"#\",\r\n    \"englishName\",\r\n    \"arabicName\",\r\n    \"actions\",\r\n  ];\r\n\r\n  displayedColumnsSkeleton: string[] = [\r\n    // \"#\",\r\n    \"course.englishName\",\r\n    \"course.arabicName\",\r\n    \"Actions\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private giftsService: GiftsService,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private dialog: MatDialog,\r\n    private toastr: MessagesService,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      id: [0],\r\n      englishName: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n      arabicName: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    this.getGiftsCategoryAll(this.curPage);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getGiftsCategoryAll(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    /* if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    } */\r\n  }\r\n\r\n  getGiftsCategoryButton(page: number) {\r\n    if (!this.FormCtrls.arabicName.value && !this.FormCtrls.englishName.value) {\r\n      this.toastr.warning(\"Gifts.enterOneField\");\r\n      return;\r\n    } else {\r\n      //  this.getGiftsCategorySearch(page);\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n  }\r\n\r\n  // getGiftsCategorySearch(page: number) {\r\n  //   let searchData: diftCategorySearchVM = {\r\n  //     englishName: this.FormCtrls?.englishName.value?.trim().toLowerCase(),\r\n  //     arabicName: this.FormCtrls?.arabicName.value?.trim().toLowerCase(),\r\n  //     eduCompId: this.EduCompId,\r\n  //   };\r\n  //   // \"\" convert to null\r\n  //   Object.keys(searchData).forEach((key, index) => {\r\n  //     if (searchData[key] == \"\") searchData[key] = null;\r\n  //   });\r\n  //\r\n  //   this.curPage = page;\r\n  //   this.spinner.show();\r\n  //   this.giftsService\r\n  //     .getCategoriesSearch(page, searchData)\r\n  //     .subscribe((res: any) => {\r\n  //       if (res) {\r\n  //         // this.giftCategory = res.giftcategoryList;\r\n  //         // console.log(\"categories\", this.giftCategory);\r\n  //         this.dataSource = new MatTableDataSource(res.giftcategoryList);\r\n  //         this.itemsCount = res.countItems;\r\n  //         this.dataSource.sort = this.sort;\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  getGiftsCategoryAll(page: number) {\r\n    this.curPage = page;\r\n    // this.spinner.show();\r\n    this.giftsService\r\n      .getCategoriesAll(this.EduCompId, page)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          // this.giftCategory = res.giftcategoryList;\r\n          // console.log(\"categories\", this.giftCategory);\r\n          this.dataSource = new MatTableDataSource(res.giftcategoryList);\r\n          this.itemsCount = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.isLoaded = true;\r\n        // this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  toEditGiftCategory(giftCategory: giftCategoryViewModel) {\r\n    this.form.patchValue(giftCategory);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let giftCategory: diftCategoryAddEditVM = {\r\n        id: this.FormCtrls.id.value,\r\n        eduCompId: this.EduCompId,\r\n        arabicName: this.FormCtrls.arabicName.value,\r\n        englishName: this.FormCtrls.englishName.value,\r\n      };\r\n\r\n      this.spinner.show();\r\n      // console.log(\"form data\", this.myForm.value);\r\n      this.giftsService.addEditCategory(giftCategory).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          if (giftCategory.id == 0) {\r\n            this.getGiftsCategoryAll(1); // first page after add\r\n            this.dataSource.paginator = this.paginator;\r\n          } else {\r\n            this.getGiftsCategoryAll(this.curPage); // current page after update\r\n          }\r\n\r\n          this.toastr.success(\r\n            giftCategory.id == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n\r\n          this.clearForm();\r\n        } else this.toastr.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleteDialog(giftCategory: giftCategoryViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? giftCategory.arabicName ?? giftCategory.englishName\r\n            : giftCategory.englishName ?? giftCategory.arabicName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeGiftCategory(giftCategory);\r\n      });\r\n  }\r\n\r\n  removeGiftCategory(giftCategory: giftCategoryViewModel) {\r\n    this.spinner.show();\r\n    this.giftsService\r\n      .RemoveGiftCategory(giftCategory.id)\r\n      .subscribe((response: any) => {\r\n        if (response.returnValue == 2)\r\n          this.toastr.error(\"Gifts.giftCategoryDeleteError\");\r\n        else {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getGiftsCategoryAll(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getGiftsCategoryAll(this.curPage);\r\n          }\r\n          if (giftCategory.id == this.FormCtrls.id.value) this.clearForm();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.clearForm();\r\n    this.getGiftsCategoryAll(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  openAddDialog(giftCategory: giftCategoryViewModel) {\r\n    this.dialog.open(GiftsCategoryAddComponent, {\r\n      data: giftCategory,\r\n      panelClass: \"dialog-radius\",\r\n      minHeight: \"30%\"\r\n    }).afterClosed()\r\n      .subscribe((confirm) => {\r\n        console.log(confirm)\r\n        if (confirm) this.getGiftsCategoryAll(this.curPage);\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<mat-card class=\"admin-index-card gift-categories-index\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-10 col-lg-8 col-12\">\r\n      <mat-card-title class=\"px-2\">\r\n        <page-title title=\"Gifts.GiftsCategories\"></page-title>\r\n\r\n        <create-new-btn\r\n          label=\"Gifts.addNewGiftCategory\"\r\n          class=\"float-right d-inline-block mx-1 mt--5 mb-2\"\r\n          (onClick)=\"openAddDialog(null)\"\r\n          [hideDefaultTitle]=\"true\"\r\n        ></create-new-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <div class=\"mat-elevation-z8 f-w\" *ngIf=\"isLoaded; else loading\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"englishName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.englishName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let giftcategory\">\r\n                {{ giftcategory.englishName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name Column -->\r\n            <ng-container matColumnDef=\"arabicName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.arabicName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let giftcategory\">\r\n                {{ giftcategory.arabicName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n              <td mat-cell *matCellDef=\"let giftcategory\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"openAddDialog(giftcategory)\"\r\n                    class=\"dark-blue\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"fas fa-pen font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(giftcategory)\"\r\n                    class=\"danger\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"fa fa-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                <!-- No data matching the filter \"{{ input.value }}\" -->\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator [pageSizeOptions]=\"[10]\"\r\n                         (page)=\"getGiftsCategoryAll($event.pageIndex + 1)\"\r\n                         [length]=\"itemsCount\"\r\n                         [pageSize]=\"10\"\r\n                         showFirstLastButtons\r\n                         aria-label=\"Select page of users\">\r\n          </mat-paginator>\r\n        </div>\r\n\r\n        <ng-template #loading>\r\n          <app-table-skeleton [displayedColumns]=\"displayedColumnsSkeleton\"></app-table-skeleton>\r\n        </ng-template>\r\n      </mat-card-content>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  addgiftViewModel,\r\n  giftGalleryViewModel,\r\n} from \"app/admin/models/admin/gifts\";\r\nimport { GiftsService } from \"app/admin/services/Admin/gifts.service\";\r\nimport { AppAssets } from \"app/shared/data/app-assets\";\r\nimport {\r\n  InputAppearance,\r\n  defaultInputAppearance,\r\n} from \"app/shared/enums/mat-theme.enum\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-gifts-add\",\r\n  templateUrl: \"./gifts-add.component.html\",\r\n  styleUrls: [\"./gifts-add.component.scss\"],\r\n})\r\nexport class GiftsAddComponent implements OnInit {\r\n  functionId: number;\r\n  submitted = false;\r\n  giftId: number = 0;\r\n  EduCompId: any;\r\n  appearance: InputAppearance = defaultInputAppearance;\r\n  rowFunctions: IRowFunctionVM[];\r\n  myForm!: FormGroup;\r\n  currentLang: string;\r\n  giftArName: string;\r\n  giftEnName: string;\r\n  giftCategory: any[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private giftsService: GiftsService,\r\n    private languageService: LanguageService,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    public fileService: UploadFileService,\r\n    private router: Router,\r\n    public appAssets: AppAssets,\r\n    public dialogRef: MatDialogRef<GiftsAddComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public gift: giftGalleryViewModel\r\n  ) {\r\n    console.log(gift);\r\n    this.route.paramMap.subscribe((params) => {\r\n      // this.giftId = Number(params.get(\"giftId\"));\r\n      this.giftId = gift.id;\r\n      if (this.giftId > 0) {\r\n        this.getGiftById(this.giftId);\r\n      }\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  getAllGiftCategory() {\r\n    this.giftsService\r\n      .getGiftCategoryDropDown(this.EduCompId)\r\n      .subscribe((response: any) => {\r\n        if (response) {\r\n          this.giftCategory = response;\r\n          // console.log(this.giftCategory);\r\n        }\r\n      });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get engNameCtrl() {\r\n    return this.myForm.get(\"englishName\");\r\n  }\r\n  get arbNameCtrl() {\r\n    return this.myForm.get(\"arabicName\");\r\n  }\r\n  get categoryCtrl() {\r\n    return this.myForm.get(\"giftsCategoryId\");\r\n  }\r\n  get pointsCtrl() {\r\n    return this.myForm.get(\"points\");\r\n  }\r\n  get qtyCtrl() {\r\n    return this.myForm.get(\"qty\");\r\n  }\r\n  get descriptionCtrl() {\r\n    return this.myForm.get(\"description\");\r\n  }\r\n  get IdCtrl() {\r\n    return this.myForm.get(\"id\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.fb.group({\r\n      id: [\"\"],\r\n      giftPicture: [null],\r\n      englishName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      arabicName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      giftsCategoryId: [\"\", Validators.required],\r\n      points: [\"\", Validators.required],\r\n      qty: [\"\", Validators.required],\r\n      description: [\"\"],\r\n      // EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    // this.myForm.patchValue(this.gift);\r\n    this.getAllGiftCategory();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllGiftCategory();\r\n    });\r\n  }\r\n\r\n  OnSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let gift: addgiftViewModel = {\r\n        id: this.FormCtrls.id.value,\r\n        arabicName: this.FormCtrls.arabicName.value,\r\n        englishName: this.FormCtrls.englishName.value,\r\n        giftsCategoryId: this.FormCtrls.giftsCategoryId.value,\r\n        points: this.FormCtrls.points.value,\r\n        qty: this.FormCtrls.qty.value,\r\n        description: this.FormCtrls.description.value,\r\n        giftPicture: this.FormCtrls.giftPicture.value,\r\n        eduCompId: this.EduCompId,\r\n      };\r\n      // console.log(this.myForm.value);\r\n\r\n      this.spinner.show();\r\n      // console.log(\"form data\", this.myForm.value);\r\n      this.giftsService.addGift(gift).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.msg.success(\r\n            this.IdCtrl.value == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n          this.router.navigate([\"dashboard/setup/gift-index/\"], {\r\n            queryParams: {\r\n              functionId: this.functionId,\r\n            },\r\n          });\r\n        } else this.msg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  getGiftById(giftId: number) {\r\n    this.giftsService.getGiftById(giftId).subscribe((res: any) => {\r\n      this.giftArName = res.arabicName;\r\n      this.giftEnName = res.englishName;\r\n\r\n      // this.giftId = res.Id;\r\n      this.IdCtrl?.setValue(this.giftId);\r\n      // console.log(\"idc\", this.IdCtrl.value);\r\n      this.engNameCtrl.setValue(res?.englishName);\r\n      this.arbNameCtrl.setValue(res?.arabicName);\r\n      this.categoryCtrl.setValue(res?.GiftCategoryId);\r\n      this.pointsCtrl.setValue(res?.points);\r\n      this.qtyCtrl.setValue(res?.qty);\r\n      this.descriptionCtrl.setValue(res?.description);\r\n      this.FormCtrls.giftPicture.setValue(res.attach_path);\r\n      console.log(this.FormCtrls.giftPicture);\r\n    });\r\n  }\r\n\r\n  DeletePic() {\r\n    if (this.FormCtrls.giftPicture.value.FileAsBase64)\r\n      return this.removeImage();\r\n\r\n    this.spinner.show();\r\n    this.giftsService.deleteAttach(this.IdCtrl.value).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        this.removeImage();\r\n      } else this.msg.error(res);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  removeImage() {\r\n    this.FormCtrls.giftPicture.setValue(null);\r\n    this.fileService.resetFileById(\"gift-photo\");\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"media mb-1\">\r\n          <img\r\n            [src]=\"\r\n              fileService.previewPicture(FormCtrls.giftPicture.value) ??\r\n              appAssets.noCoverPath\r\n            \"\r\n            alt=\"No Image\"\r\n            class=\"users-avatar-shadow avatar mr-3 rounded\"\r\n            height=\"150\"\r\n            width=\"150\"\r\n          />\r\n          <div class=\"media-body\">\r\n            <div\r\n              class=\"d-flex flex-sm-row flex-column justify-content-start px-0 mb-sm-2\"\r\n            >\r\n              <app-button-file-input\r\n                [control]=\"FormCtrls.giftPicture\"\r\n                accept=\"image/*\"\r\n                htmlId=\"gift-photo\"\r\n                label=\"Gifts.GiftPic\"\r\n                [showIcon]=\"false\"\r\n              ></app-button-file-input>\r\n\r\n              <button\r\n                *ngIf=\"FormCtrls.giftPicture.value\"\r\n                type=\"button\"\r\n                class=\"btn btn-sm bg-light-danger mb-1 mb-sm-0\"\r\n                mat-raised-button\r\n                (click)=\"DeletePic()\"\r\n              >\r\n                {{ \"Gifts.DeleteGiftPic\" | translate }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                 <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.englishName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.enName\"\r\n                  ></app-input>\r\n                </div> -->\r\n\r\n<!-- <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.arabicName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.arName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Gifts.GiftsCategory\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"giftsCategoryId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let item of giftCategory\"\r\n                        [value]=\"item.Id\"\r\n                      >\r\n                        {{\r\n                          languageService.isArabic\r\n                            ? item.ArbName ?? item.EngName\r\n                            : item.EngName ?? item.ArbName\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>\r\n                      <input-validation-msg\r\n                        [control]=\"FormCtrls?.giftsCategoryId\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\"\r\n                      >\r\n                      </input-validation-msg>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.points\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"Gifts.points\"\r\n                    type=\"number\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.qty\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"Gifts.qty\"\r\n                    type=\"number\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-textarea\r\n                    [control]=\"FormCtrls.description\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"Gifts.description\"\r\n                    rows=\"2\"\r\n                  ></app-textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"giftId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"OnSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"giftId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"OnSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n<div class=\"mb-2\">\r\n  <p mat-dialog-title>\r\n    <page-title title=\"Gifts.AddGift\"></page-title>\r\n    <i\r\n      [mat-dialog-close]=\"false\"\r\n      class=\"fas fa-times-circle closeIcon float-right\"\r\n    ></i>\r\n  </p>\r\n  <div mat-dialog-content style=\"min-height: 200px\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrls.englishName\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.enName\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrls.arabicName\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.arName\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-label class=\"input-label\">\r\n                {{ \"Gifts.GiftsCategory\" | translate }}\r\n              </mat-label>\r\n              <mat-form-field [appearance]=\"appearance\">\r\n                <mat-select formControlName=\"giftsCategoryId\">\r\n                  <mat-option>\r\n                    {{ \"General.Choose\" | translate }}\r\n                  </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let item of giftCategory\"\r\n                    [value]=\"item.Id\"\r\n                  >\r\n                    {{\r\n                      languageService.isArabic\r\n                        ? item.ArbName ?? item.EngName\r\n                        : item.EngName ?? item.ArbName\r\n                    }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint>\r\n                  <input-validation-msg\r\n                    [control]=\"FormCtrls?.giftsCategoryId\"\r\n                    [submitted]=\"submitted\"\r\n                    [isSelect]=\"true\"\r\n                  >\r\n                  </input-validation-msg>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrls.points\"\r\n                [submitted]=\"submitted\"\r\n                label=\"Gifts.points\"\r\n                type=\"number\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrls.qty\"\r\n                [submitted]=\"submitted\"\r\n                label=\"Gifts.qty\"\r\n                type=\"number\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-label class=\"input-label\">\r\n                {{ \"Gifts.GiftPic\" | translate }}</mat-label\r\n              >\r\n              <app-button-file-input-new\r\n                [control]=\"FormCtrls.giftPicture\"\r\n                accept=\"image/*\"\r\n              >\r\n              </app-button-file-input-new>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <app-textarea\r\n                [control]=\"FormCtrls.description\"\r\n                [submitted]=\"submitted\"\r\n                label=\"Gifts.description\"\r\n                rows=\"1\"\r\n              ></app-textarea>\r\n              <!-- <app-text-editor\r\n                [control]=\"FormCtrls.description\"\r\n                [submitted]=\"submitted\"\r\n                label=\"Gifts.description\"\r\n              ></app-text-editor> -->\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div mat-dialog-actions align=\"end\">\r\n    <button class=\"orange-btn radius-btn big-padding\" (click)=\"OnSubmit()\">\r\n      {{ (giftId > 0 ? \"General.Update\" : \"General.Add\") | translate }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  giftGalleryViewModel,\r\n  giftViewModel,\r\n  IGiftGalleryModel,\r\n  IGiftGalleryResponse,\r\n} from \"app/admin/models/admin/gifts\";\r\nimport { GiftsService } from \"app/admin/services/Admin/gifts.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { GiftsAddComponent } from \"../gifts-add/gifts-add.component\";\r\n\r\n@Component({\r\n  selector: \"app-gifts-index\",\r\n  templateUrl: \"./gifts-index.component.html\",\r\n  styleUrls: [\"./gifts-index.component.scss\"],\r\n})\r\nexport class GiftsIndexComponent implements OnInit {\r\n  functionId: number;\r\n  myForm!: FormGroup;\r\n  itemsCount: any;\r\n  rowFunctions: IRowFunctionVM[];\r\n  //curPage: number = 1;\r\n  EduCompId: any;\r\n  // gifts: giftViewModel[] = [];\r\n  dataSource: MatTableDataSource<giftViewModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  giftCategory: any[];\r\n  gifts: IGiftGalleryModel[];\r\n  isLoaded: boolean = false;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"englishName\",\r\n    \"arabicName\",\r\n    \"qty\",\r\n    \"giftCategory\",\r\n    \"points\",\r\n    \"description\",\r\n    \"actions\",\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private giftsService: GiftsService,\r\n    private dialog: MatDialog,\r\n    private toastr: MessagesService,\r\n    private authserv: AuthService,\r\n    public languageService: LanguageService,\r\n    public deviceService: DeviceDetectorService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //    console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.fb.group({\r\n      // page: [1],\r\n      englishName: [null],\r\n      arabicName: [null],\r\n      giftsCategoryId: [null],\r\n      points: [null],\r\n      // EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    // this.getAllGiftCategory();\r\n    this.getGiftsAll();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      //  this.getAllGiftCategory();\r\n      this.getGiftsAll();\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"giftCategory\":\r\n          return this.languageService.isArabic\r\n            ? item.arbGiftCategory ?? item.engGiftCategory\r\n            : item.engGiftCategory ?? item.arbGiftCategory;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    /* if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    } */\r\n  }\r\n\r\n  // getAllGiftCategory() {\r\n  //   this.giftsService\r\n  //     .getGiftCategoryDropDown(this.EduCompId)\r\n  //     .subscribe((response: any) => {\r\n  //       if (response) {\r\n  //         this.giftCategory = response;\r\n  //         // console.log(this.giftCategory);\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  getGiftsButton(page: number) {\r\n    if (\r\n      !this.FormCtrls.arabicName.value &&\r\n      !this.FormCtrls.englishName.value &&\r\n      !this.FormCtrls.giftsCategoryId.value &&\r\n      !this.FormCtrls.points.value\r\n    ) {\r\n      this.toastr.warning(\"Gifts.enterOneField\");\r\n      return;\r\n    } else {\r\n      //  this.getGiftsSearch(page);\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n  }\r\n\r\n  // getGiftsSearch(page: number) {\r\n  //   let searchData: giftSearchModel = {\r\n  //     englishName: this.FormCtrls?.englishName.value?.trim().toLowerCase(),\r\n  //     arabicName: this.FormCtrls?.arabicName.value?.trim().toLowerCase(),\r\n  //     giftsCategoryId: this.FormCtrls?.giftsCategoryId.value,\r\n  //     points: this.FormCtrls?.points.value,\r\n  //   };\r\n  //   // \"\" convert to null\r\n  //   Object.keys(searchData).forEach((key, index) => {\r\n  //     if (searchData[key] == \"\") searchData[key] = null;\r\n  //   });\r\n  //\r\n  //   this.curPage = page;\r\n  //   this.spinner.show();\r\n  //   this.giftsService\r\n  //     .getGiftsSearch(this.EduCompId, page, searchData)\r\n  //     .subscribe((res: any) => {\r\n  //       if (res) {\r\n  //         // this.gifts = res.giftsList;\r\n  //         // console.log(\"categories\", this.gifts);\r\n  //         this.dataSource = new MatTableDataSource(res.giftsList);\r\n  //         this.itemsCount = res.countItems;\r\n  //         this.startSortingTable();\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  getGiftsAll() {\r\n    // this.curPage = page;\r\n    // this.spinner.show();\r\n    this.giftsService\r\n      .getAllGifts(this.EduCompId)\r\n      .subscribe((res: IGiftGalleryResponse) => {\r\n        if (res) {\r\n          // this.gifts = res.giftList;\r\n          // console.log(\"gifts\", res.giftList);\r\n          // this.dataSource = new MatTableDataSource(res.giftList);\r\n          this.gifts = res.giftList;\r\n          // this.itemsCount = res.countItems;\r\n          //  this.startSortingTable();\r\n        }\r\n        this.isLoaded = true;\r\n        // this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  // openDeleteDialog(gift: giftViewModel): void {\r\n  //   this.dialog\r\n  //     .open(DeleteDialogComponent, {\r\n  //       data: {\r\n  //         msg: this.languageService.isArabic\r\n  //           ? gift.arabicName ?? gift.englishName\r\n  //           : gift.englishName ?? gift.arabicName,\r\n  //       },\r\n  //     })\r\n  //     .afterClosed()\r\n  //     .subscribe((confirm) => {\r\n  //       if (confirm) this.removeGiftCategory(gift);\r\n  //     });\r\n  // }\r\n  //\r\n  // removeGiftCategory(gift: giftViewModel) {\r\n  //   this.spinner.show();\r\n  //   this.giftsService.RemoveGift(gift.id).subscribe((response: any) => {\r\n  //     if (response.returnValue == 2) {\r\n  //       this.toastr.error(\"Gifts.giftDeleteError\");\r\n  //     } else {\r\n  //       this.toastr.success(\"General.DeleteSuccessfully\");\r\n  //       this.getGiftsAll();\r\n  //       // if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n  //       //   // if last item in list: get previous page\r\n  //       //   this.getGiftsAll(this.curPage - 1);\r\n  //       //   this.paginator.pageIndex = this.curPage - 1;\r\n  //       // } else {\r\n  //       //   // if not last item in list: get current page\r\n  //       //   this.getGiftsAll(this.curPage);\r\n  //       // }\r\n  //     }\r\n  //     this.spinner.hide();\r\n  //   });\r\n  // }\r\n  openAddDialog(gift: IGiftGalleryModel) {\r\n    this.dialog\r\n      .open(GiftsAddComponent, {\r\n        data: gift,\r\n        panelClass: \"dialog-radius\",\r\n        minHeight: \"30%\",\r\n        width: \"50%\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        console.log(confirm);\r\n        if (confirm) this.getGiftsAll();\r\n      });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.myForm.reset();\r\n    this.getGiftsAll();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  openEditDialog(gift: giftGalleryViewModel) {\r\n    this.dialog\r\n      .open(GiftsAddComponent, {\r\n        data: gift,\r\n        panelClass: \"dialog-radius\",\r\n        minHeight: \"30%\",\r\n        width: \"50%\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        console.log(confirm);\r\n        if (confirm) this.getGiftsAll();\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"admin-index-card\">\r\n      <mat-card-title class=\"px-2\">\r\n        <page-title title=\"Gifts.GiftsGallery\"></page-title>\r\n\r\n        <create-new-btn\r\n          (click)=\"openAddDialog(null)\"\r\n          label=\"Gifts.AddGift\"\r\n          [hideDefaultTitle]=\"true\"\r\n          class=\"float-right float-right d-inline-block mx-1 mb-2 mt--5\"\r\n        >\r\n        </create-new-btn>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\" *ngIf=\"isLoaded; else loading\">\r\n          <div\r\n            class=\"col-xl-5 col-lg-3 col-md-4 col-sm-6 col-12 mb-3\"\r\n            *ngFor=\"let gift of gifts\"\r\n          >\r\n            <app-gift-card\r\n              [gift]=\"gift\"\r\n              [isAdmin]=\"true\"\r\n              (onEdit)=\"openEditDialog($event)\"\r\n            >\r\n            </app-gift-card>\r\n          </div>\r\n\r\n          <div\r\n            class=\"col-xl-5 col-lg-4 col-sm-6 col-12 mb-3\"\r\n            [class.px-25]=\"deviceService.isDesktop()\"\r\n          >\r\n            <button\r\n              class=\"dashed-btn\"\r\n              style=\"height: 285px\"\r\n              (click)=\"openAddDialog(null)\"\r\n            >\r\n              <i class=\"ft-plus-circle\"></i>\r\n              <p>{{ \"addNew\" | translate }}</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <ng-template #loading>\r\n          <div class=\"row\">\r\n            <div\r\n              class=\"col-xl-5 col-lg-3 col-md-4 col-sm-6 col-12\"\r\n              *ngFor=\"let ele of [].constructor(5)\"\r\n            >\r\n              <app-card-skeleton [height]=\"320\"></app-card-skeleton>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {DatePipe} from \"@angular/common\";\r\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControlOptions,\r\n} from \"@angular/forms\";\r\nimport {JobTitleService} from \"app/admin/services/setup/job-title.service\";\r\nimport {\r\n  IAddEditJobTitleVM,\r\n  GetJobTitleVM,\r\n  IJobTitleDepartmentVM,\r\n  JobTitleViewModel,\r\n  IJobTitleSearchVM,\r\n} from \"app/admin/models/setup/job-title\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {DeleteDialogComponent} from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {CustomeValidator} from \"app/shared/validators/customeValid.validator\";\r\nimport {UpdateJobDepartmentComponent} from \"../update-job-department/update-job-department.component\";\r\nimport {defaultRes, IRowFunctionVM} from \"app/shared/models/general/general\";\r\nimport {LanguageService} from \"app/shared/services/language.service\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {ResMessage} from \"app/shared/enums/res-message\";\r\nimport {DepartmentService} from \"app/admin/services/setup/department.service\";\r\n\r\n@Component({\r\n  selector: \"app-job-title\",\r\n  templateUrl: \"./job-title.component.html\",\r\n  styleUrls: [\"./job-title.component.scss\"],\r\n})\r\nexport class JobTitleComponent implements OnInit {\r\n  jobTitles: JobTitleViewModel[];\r\n  myForm: FormGroup;\r\n  // departmentDates: FormGroup;\r\n  currentDate = new Date();\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  submitted: boolean = false;\r\n  isLoaded: boolean = false;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  jobTitleList = [];\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"en_name\",\r\n    \"ar_name\",\r\n    \"department\",\r\n    \"action\",\r\n  ];\r\n  dataSource: MatTableDataSource<GetJobTitleVM>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private jobTitleService: JobTitleService,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public languageService: LanguageService,\r\n    private departmentService: DepartmentService,\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJobTitles(this.curPage);\r\n\r\n    this.myForm = this.fb.group(\r\n      {\r\n        id: [0, Validators.required],\r\n        ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        departmentsIds: [null, Validators.required],\r\n        from_date: [null], //[Validators.required]\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n\r\n    // this.departmentDates = this.fb.group({\r\n    //   departments: this.fb.array([]),\r\n    // });\r\n  }\r\n\r\n  get formCtrl() {\r\n    return this.myForm?.controls;\r\n  }\r\n\r\n  // get departmentDatesCtrl() {\r\n  //   return this.departmentDates.get(\"departments\") as FormArray;\r\n  // }\r\n  resetSearch() {\r\n    this.clearForm();\r\n    this.getAllJobTitles(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllJobTitles(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"department\":\r\n          return this.languageService.isArabic\r\n            ? item.departments[0]?.ar_name ?? item.departments[0]?.en_name\r\n            : item.departments[0]?.en_name ?? item.departments[0]?.ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllJobTitles(page: number) {\r\n    this.isLoaded = false;\r\n    this.curPage = page;\r\n    let data: IJobTitleSearchVM = {\r\n      job_ar_name: this.formCtrl?.ar_name.value?.trim().toLowerCase(),\r\n      job_en_name: this.formCtrl?.en_name.value?.trim().toLowerCase(),\r\n      dep_ids: this.formCtrl?.departmentsIds.value,\r\n      fromDate: this.datePipe.transform(this.formCtrl?.from_date.value),\r\n      toDate: this.datePipe.transform(this.formCtrl?.to_date.value),\r\n    };\r\n\r\n    this.jobTitleService\r\n      .getAllJobTitles(data, this.EduCompId, page)\r\n      .subscribe((res: JobTitleViewModel) => {\r\n        if (res) {\r\n          // console.log(res);\r\n          this.dataSource = new MatTableDataSource(res.jobTitle_list);\r\n          this.itemsCounts = res.countItems;\r\n          this.startSortingTable();\r\n          this.isLoaded = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  getJobTitleToEdit(JobTitle: GetJobTitleVM) {\r\n    this.myForm.patchValue(JobTitle);\r\n    let departmentsIds: number[] = [];\r\n    JobTitle.departments.forEach((e) => {\r\n      departmentsIds?.push(e.id);\r\n      //this.departmentDatesCtrl.push(this.fb.group(e));\r\n    });\r\n    this.formCtrl.departmentsIds.setValue(departmentsIds);\r\n  }\r\n\r\n  addJobTitle() {\r\n    this.submitted = true;\r\n    // if (this.formCtrl.from_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select From Date\");\r\n    //   return;\r\n    // }\r\n    // if (this.formCtrl.to_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select To Date\");\r\n    //   return;\r\n    // }\r\n    if (this.myForm.valid) {\r\n      let JobTitle: IAddEditJobTitleVM = {\r\n        id: this.formCtrl.id.value,\r\n        EduCompId: this.EduCompId,\r\n        ar_name: this.formCtrl.ar_name.value,\r\n        en_name: this.formCtrl.en_name.value,\r\n        departmentsIds: this.formCtrl.departmentsIds.value,\r\n        from_date: this.datePipe.transform(\r\n          this.formCtrl.from_date.value ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.formCtrl.to_date.value),\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.jobTitleService.addJobTitle(JobTitle).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.clearForm();\r\n          this.getAllJobTitles(1); // first page after add\r\n          this.dataSource.paginator = this.paginator;\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  updateJobTitles() {\r\n    this.submitted = true;\r\n    // if (this.formCtrl.from_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select From Date\");\r\n    //   return;\r\n    // }\r\n    // if (this.formCtrl.to_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select To Date\");\r\n    //   return;\r\n    // }\r\n    if (this.myForm.valid) {\r\n      let JobTitle = {} as IAddEditJobTitleVM;\r\n      JobTitle.EduCompId = this.EduCompId;\r\n      JobTitle.ar_name = this.formCtrl.ar_name.value;\r\n      JobTitle.en_name = this.formCtrl.en_name.value;\r\n      JobTitle.departmentsIds = this.formCtrl.departmentsIds.value;\r\n      JobTitle.from_date = this.datePipe.transform(\r\n        this.formCtrl.from_date.value ?? this.currentDate\r\n      );\r\n      JobTitle.to_date = this.datePipe.transform(this.formCtrl.to_date.value);\r\n\r\n      this.spinner.show();\r\n      this.jobTitleService\r\n        .updateJobTitles(JobTitle, this.formCtrl.id.value)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.clearForm();\r\n            this.getAllJobTitles(this.curPage); // current page after update\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // updateJobTitle() {\r\n  //   this.submitted = true;\r\n  //   let JobTitle: IUpdateJobTitleVM = {\r\n  //     id: this.formCtrl.id.value,\r\n  //     ar_name: this.formCtrl.ar_name.value,\r\n  //     en_name: this.formCtrl.en_name.value,\r\n  //     departments: this.departmentDatesCtrl.value,\r\n  //   };\r\n  //   if (this.myForm.valid) {\r\n  //     this.spinner.show();\r\n  //     this.jobTitleService\r\n  //       .editJobTitles(JobTitle, JobTitle.id)\r\n  //       .subscribe((res: any) => {\r\n  //         if (res.returnValue == 1) {\r\n  //           this.getAllJobTitles(1);\r\n  //           this.myForm.reset();\r\n  //           this.formCtrl.id.setValue(0);\r\n  //           this.submitted = false;\r\n  //           this.departmentDatesCtrl.clear();\r\n  //           this.toastr.success(\"تم تعديل البيانات بنجاح\");\r\n  //         } else this.toastr.warning(res.returnString);\r\n  //       });\r\n  //     this.spinner.hide();\r\n  //   }\r\n  // }\r\n\r\n  // onSelectDepartment($event) {\r\n  //   $event.value.forEach((id) => {\r\n  //     let idFounded = this.departmentDatesCtrl.value.find(\r\n  //       (date) => date.id == id\r\n  //     );\r\n  //     if (idFounded == undefined) {\r\n  //       let dep = this.departments.find((e) => e.id == id);\r\n  //       let item: IJobTitleDepartmentEditVM = {\r\n  //         id: dep.id,\r\n  //         ar_name: dep.ar_name,\r\n  //         from_date: null,\r\n  //         to_date: null,\r\n  //       };\r\n  //       this.departmentDatesCtrl.push(this.fb.group(item));\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // onDeselectDepartment(index: number, id: number) {\r\n  //   this.departmentDatesCtrl.removeAt(index);\r\n  //   let indexOfId = this.formCtrl.departmentsIds.value.findIndex(\r\n  //     (e) => e == id\r\n  //   );\r\n  //   this.formCtrl.departmentsIds.value.splice(indexOfId, 1);\r\n  // }\r\n\r\n  deleteJobTitle(jobTitle: GetJobTitleVM) {\r\n    this.spinner.show();\r\n    this.jobTitleService.deleteJobTitles(jobTitle.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (jobTitle.id == this.formCtrl.id.value) this.clearForm();\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllJobTitles(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllJobTitles(this.curPage);\r\n        }\r\n      } else this.toastr.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  deleteJobTitleDepartment(department: IJobTitleDepartmentVM) {\r\n    this.spinner.show();\r\n    this.jobTitleService\r\n      .deleteJobTitleDepartment(department.job_title_dep_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.getAllJobTitles(this.curPage);\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateDapartmentDialog(department: IJobTitleDepartmentVM): void {\r\n    this.dialog\r\n      .open(UpdateJobDepartmentComponent, {\r\n        data: {\r\n          department,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updated) => {\r\n        if (updated) this.getAllJobTitles(this.curPage);\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(jobTitle: GetJobTitleVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? jobTitle.ar_name ?? jobTitle.en_name\r\n            : jobTitle.en_name ?? jobTitle.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJobTitle(jobTitle);\r\n      });\r\n  }\r\n\r\n  openDeleatedepartmentDialog(department: IJobTitleDepartmentVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? department.ar_name ?? department.en_name\r\n            : department.en_name ?? department.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJobTitleDepartment(department);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrl.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  getDataFromHR() {\r\n    this.spinner.show();\r\n    this.departmentService.getDataFromHR(this.EduCompId)\r\n      .subscribe((res: defaultRes | any) => {\r\n        this.spinner.hide();\r\n        if (res.List) {\r\n          this.getAllJobTitles(this.curPage);\r\n          this.toastr.success('copyHrSuccess');\r\n        }\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- <div class=\"row\"> -->\r\n<!--   <div class=\"col-12\"> -->\r\n<!--     <mat-card> -->\r\n<!--       <mat-card-title> -->\r\n<!--         {{ -->\r\n<!--           (formCtrl.id?.value == 0 -->\r\n<!--             ? \"JobTitle.addJobTitle\" -->\r\n<!--             : \"JobTitle.updateJobTitle\" -->\r\n<!--           ) | translate -->\r\n<!--         }} -->\r\n\r\n<!--         <button -->\r\n<!--           mat-raised-button -->\r\n<!--           (click)=\"getAllJobTitles(1); dataSource.paginator = paginator\" -->\r\n<!--           class=\"btn btn-info float-right\" -->\r\n<!--         > -->\r\n<!--           <i class=\"fa fa-search mr-1\"></i> -->\r\n<!--           {{ \"General.Search\" | translate }} -->\r\n<!--         </button> -->\r\n\r\n<!--         <button -->\r\n<!--           mat-raised-button -->\r\n<!--           (click)=\"resetSearch()\" -->\r\n<!--           class=\"btn btn-warning float-right\" -->\r\n<!--         > -->\r\n<!--           {{ \"General.Reset\" | translate }} -->\r\n<!--         </button> -->\r\n<!--       </mat-card-title> -->\r\n<!--       &lt;!&ndash; <mat-card-title *ngIf=\"formCtrl.id.value > 0\"> -->\r\n<!--         {{ \"JobTitle.updateJobTitle\" | translate }} -->\r\n<!--       </mat-card-title> &ndash;&gt; -->\r\n\r\n<!--       <mat-card-content class=\"container-fluid\"> -->\r\n<!--         <div class=\"row\"> -->\r\n<!--           <div class=\"col-12\"> -->\r\n<!--             <form [formGroup]=\"myForm\"> -->\r\n<!--               <div class=\"row\"> -->\r\n<!--                 &lt;!&ndash; english name &ndash;&gt; -->\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"formCtrl.en_name\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.enName\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 &lt;!&ndash; arabic name &ndash;&gt; -->\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"formCtrl.ar_name\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.arName\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 &lt;!&ndash; depertment &ndash;&gt; -->\r\n<!--                 &lt;!&ndash;  (selectionChange)=\"onSelectDepartment($event)\" &ndash;&gt; -->\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <department-dropdown -->\r\n<!--                     [control]=\"formCtrl.departmentsIds\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     [multiple]=\"true\" -->\r\n<!--                   ></department-dropdown> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 &lt;!&ndash; Show Date If Add &ndash;&gt; -->\r\n<!--                 &lt;!&ndash; *ngIf=\"formCtrl.id.value == 0\" &ndash;&gt; -->\r\n<!--                 <ng-container> -->\r\n<!--                   &lt;!&ndash; From date  &ndash;&gt; -->\r\n<!--                   <div class=\"col-md-4 col-12\"> -->\r\n<!--                     <app-datepicker -->\r\n<!--                       [control]=\"formCtrl.from_date\" -->\r\n<!--                       [submitted]=\"submitted\" -->\r\n<!--                       label=\"labels.FromDate\" -->\r\n<!--                     ></app-datepicker> -->\r\n<!--                   </div> -->\r\n\r\n<!--                   &lt;!&ndash; to date &ndash;&gt; -->\r\n<!--                   <div class=\"col-md-4 col-12\"> -->\r\n<!--                     <app-datepicker -->\r\n<!--                       [control]=\"formCtrl.to_date\" -->\r\n<!--                       [submitted]=\"submitted\" -->\r\n<!--                       label=\"labels.ToDate\" -->\r\n<!--                     ></app-datepicker> -->\r\n<!--                   </div> -->\r\n<!--                 </ng-container> -->\r\n\r\n<!--                 &lt;!&ndash; Show Departments dates If update &ndash;&gt; -->\r\n<!--                 &lt;!&ndash; <ng-container *ngIf=\"formCtrl.id.value > 0\"> -->\r\n<!--                   <form [formGroup]=\"departmentDates\" class=\"col-12\"> -->\r\n<!--                     <ul class=\"list-group\" formArrayName=\"departments\"> -->\r\n<!--                       <li -->\r\n<!--                         class=\"list-group-item\" -->\r\n<!--                         *ngFor=\" -->\r\n<!--                           let department of departmentDatesCtrl.controls; -->\r\n<!--                           let i = index -->\r\n<!--                         \" -->\r\n<!--                       > -->\r\n<!--                         <div class=\"row\" [formGroupName]=\"i\"> -->\r\n<!--                           <mat-card-subtitle> -->\r\n<!--                             {{ -->\r\n<!--                               languageService.isArabic -->\r\n<!--                                 ? department.value.ar_name -->\r\n<!--                                 : department.value.en_name -->\r\n<!--                             }} -->\r\n\r\n<!--                             <button -->\r\n<!--                               (click)=\" -->\r\n<!--                                 onDeselectDepartment(i, department.value.id) -->\r\n<!--                               \" -->\r\n<!--                               mat-raised-button -->\r\n<!--                               class=\"btn btn-danger btn-sm float-right\" -->\r\n<!--                             > -->\r\n<!--                               {{ \"General.Delete\" | translate }} -->\r\n<!--                             </button> -->\r\n<!--                           </mat-card-subtitle> -->\r\n<!--                           <input type=\"hidden\" formControlName=\"id\" /> -->\r\n\r\n<!--                           <div class=\"col-md-6 col-12\"> -->\r\n<!--                             <mat-form-field appearance=\"legacy\"> -->\r\n<!--                               <mat-label> -->\r\n<!--                                 {{ \"labels.FromDate\" | translate }}</mat-label -->\r\n<!--                               > -->\r\n<!--                               <input -->\r\n<!--                                 matInput -->\r\n<!--                                 [matDatepicker]=\"fromDate2\" -->\r\n<!--                                 formControlName=\"from_date\" -->\r\n<!--                               /> -->\r\n<!--                               <mat-datepicker-toggle -->\r\n<!--                                 matSuffix -->\r\n<!--                                 [for]=\"fromDate2\" -->\r\n<!--                               > -->\r\n<!--                               </mat-datepicker-toggle> -->\r\n<!--                               <mat-datepicker #fromDate2></mat-datepicker> -->\r\n<!--                             </mat-form-field> -->\r\n<!--                           </div> -->\r\n\r\n<!--                           <div class=\"col-md-6 col-12\"> -->\r\n<!--                             <mat-form-field appearance=\"legacy\"> -->\r\n<!--                               <mat-label> -->\r\n<!--                                 {{ \"labels.ToDate\" | translate }}</mat-label -->\r\n<!--                               > -->\r\n<!--                               <input -->\r\n<!--                                 matInput -->\r\n<!--                                 [matDatepicker]=\"toDate2\" -->\r\n<!--                                 formControlName=\"to_date\" -->\r\n<!--                               /> -->\r\n<!--                               <mat-datepicker-toggle matSuffix [for]=\"toDate2\"> -->\r\n<!--                               </mat-datepicker-toggle> -->\r\n<!--                               <mat-datepicker #toDate2></mat-datepicker> -->\r\n<!--                             </mat-form-field> -->\r\n<!--                           </div> -->\r\n<!--                         </div> -->\r\n<!--                       </li> -->\r\n<!--                     </ul> -->\r\n<!--                   </form> -->\r\n<!--                 </ng-container> &ndash;&gt; -->\r\n<!--               </div> -->\r\n<!--             </form> -->\r\n<!--           </div> -->\r\n<!--         </div> -->\r\n<!--       </mat-card-content> -->\r\n\r\n<!--       <mat-card-actions align=\"end\"> -->\r\n<!--         <button -->\r\n<!--           *ngIf=\"formCtrl.id?.value == 0\" -->\r\n<!--           mat-raised-button -->\r\n<!--           class=\"btn btn-info bg-light-info\" -->\r\n<!--           type=\"submit\" -->\r\n<!--           (click)=\"addJobTitle()\" -->\r\n<!--         > -->\r\n<!--           <i class=\"fa fa-plus mr-1\"></i> -->\r\n<!--           {{ \"General.Add\" | translate }} -->\r\n<!--         </button> -->\r\n\r\n<!--         <button -->\r\n<!--           *ngIf=\"formCtrl.id.value > 0\" -->\r\n<!--           mat-raised-button -->\r\n<!--           class=\"btn btn-info bg-light-info\" -->\r\n<!--           type=\"submit\" -->\r\n<!--           (click)=\"updateJobTitles()\" -->\r\n<!--         > -->\r\n<!--           {{ \"General.Update\" | translate }} -->\r\n<!--         </button> -->\r\n\r\n<!--         <button -->\r\n<!--           *ngIf=\"formCtrl.id.value > 0\" -->\r\n<!--           mat-raised-button -->\r\n<!--           class=\"btn btn-warning\" -->\r\n<!--           (click)=\"clearForm()\" -->\r\n<!--         > -->\r\n<!--           {{ \"General.Reset\" | translate }} -->\r\n<!--         </button> -->\r\n<!--       </mat-card-actions> -->\r\n<!--     </mat-card> -->\r\n<!--   </div> -->\r\n<!-- </div> -->\r\n\r\n\r\n<mat-card class=\"admin-index-card\">\r\n  <mat-card-title>\r\n    <page-title title=\"JobTitle.alljob\"></page-title>\r\n    <button class=\"orange-btn radius-btn integration-btn float-right d-inline-block mx-1 mb-2\"\r\n            (click)=\"getDataFromHR()\">\r\n      {{ \"getFromHr\" | translate }}\r\n    </button>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content>\r\n<!--     <mat-form-field appearance=\"standard\"> -->\r\n<!--       <mat-label>{{ \"General.Search\" | translate }}</mat-label> -->\r\n<!--       <input -->\r\n<!--         matInput -->\r\n<!--         (keyup)=\"applyFilter($event)\" -->\r\n<!--         placeholder=\"Ex.ium\" -->\r\n<!--         #input -->\r\n<!--       /> -->\r\n<!--     </mat-form-field> -->\r\n\r\n    <div class=\"mat-elevation-z8 f-w\" *ngIf=\"isLoaded;else loading\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <!-- id Column -->\r\n        <ng-container matColumnDef=\"#\">\r\n          <th mat-header-cell *matHeaderCellDef>#</th>\r\n          <td mat-cell *matCellDef=\"let element; index as i\">\r\n            {{ i + 1 }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- english Name Column -->\r\n        <ng-container matColumnDef=\"en_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.enName\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let jobTitle\">\r\n            {{ jobTitle.en_name }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- arabic Name Column -->\r\n        <ng-container matColumnDef=\"ar_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.arName\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let jobTitle\">\r\n            {{ jobTitle.ar_name }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- department Column -->\r\n        <ng-container matColumnDef=\"department\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"Departments.allDept\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let jobTitle\">\r\n            <table\r\n              class=\"table table-sm\"\r\n              *ngIf=\"jobTitle.departments?.length > 0\"\r\n            >\r\n              <thead class=\"thead-dark\">\r\n              <tr>\r\n                <th scope=\"col\">{{ \"labels.Name\" | translate }}</th>\r\n                <th scope=\"col\">{{ \"labels.FromDate\" | translate }}</th>\r\n                <th scope=\"col\">{{ \"labels.ToDate\" | translate }}</th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr\r\n                *ngFor=\"\r\n                        let department of jobTitle.departments;\r\n                        index as i\r\n                      \"\r\n              >\r\n                <td>\r\n                  {{\r\n                  languageService.isArabic\r\n                    ? department.ar_name ?? department.en_name\r\n                    : department.en_name ?? department.ar_name\r\n                  }}\r\n                </td>\r\n                <td>{{ department.from_date | date : \"dd-MM-yyyy\" }}</td>\r\n                <td>{{ department.to_date | date : \"dd-MM-yyyy\" }}</td>\r\n                <td>\r\n                  <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                    <a\r\n                      *ngIf=\"fun.functionName === 'UpdateJobDepartment'\"\r\n                      (click)=\"updateDapartmentDialog(department)\"\r\n                      class=\"success p-0\"\r\n                    >\r\n                      <i class=\"ft-edit-2 mr-2\"></i>\r\n                    </a>\r\n\r\n                    <a\r\n                      *ngIf=\"fun.functionName === 'deleteJobDepartment'\"\r\n                      (click)=\"openDeleatedepartmentDialog(department)\"\r\n                      class=\"danger p-0\"\r\n                    >\r\n                      <i\r\n                        class=\"fa fa-times fa fa-white\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </a>\r\n                  </ng-container>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- action Column -->\r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef></th>\r\n          <td mat-cell *matCellDef=\"let jobTitle\">\r\n            <ng-container *ngFor=\"let fun of rowFunctions\">\r\n<!--               <a -->\r\n<!--                 *ngIf=\"fun.functionName === 'Edit'\" -->\r\n<!--                 (click)=\"getJobTitleToEdit(jobTitle)\" -->\r\n<!--                 class=\"dark-blue p-0\" -->\r\n<!--                 matTooltip=\"{{ 'General.Edit' | translate }}\" -->\r\n<!--               > -->\r\n<!--                 <i class=\"fas fa-pen font-medium-3 mr-2\"></i> -->\r\n<!--               </a> -->\r\n\r\n              <a\r\n                *ngIf=\"fun.functionName === 'Delete'\"\r\n                (click)=\"openDeleateDialog(jobTitle)\"\r\n                class=\"danger p-0\"\r\n                matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n              >\r\n                <i class=\"fa fa-trash font-medium-3 mr-2\"></i>\r\n              </a>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n<!--           <td class=\"mat-cell\" colspan=\"5\"> -->\r\n<!--             No data matching the filter \"{{ input.value }}\" -->\r\n<!--           </td> -->\r\n        </tr>\r\n      </table>\r\n\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[10]\"\r\n        (page)=\"getAllJobTitles($event.pageIndex + 1)\"\r\n        [length]=\"itemsCounts\"\r\n        [pageSize]=\"10\"\r\n        showFirstLastButtons\r\n        aria-label=\"Select page of departments\"\r\n      ></mat-paginator>\r\n    </div>\r\n\r\n    <ng-template #loading>\r\n      <app-table-skeleton\r\n        [displayedColumns]=\"displayedColumns\"\r\n      ></app-table-skeleton>\r\n    </ng-template>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IJobTitleDepartmentVM,\r\n  IUpdateJobTitleDepartmentVM,\r\n} from \"app/admin/models/setup/job-title\";\r\nimport { JobTitleService } from \"app/admin/services/setup/job-title.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-update-job-department\",\r\n  templateUrl: \"./update-job-department.component.html\",\r\n  styleUrls: [\"./update-job-department.component.scss\"],\r\n})\r\nexport class UpdateJobDepartmentComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  department: IJobTitleDepartmentVM;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private jobTitleService: JobTitleService,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private datePipe: DatePipe,\r\n    public languageService: LanguageService,\r\n    public dialogRef: MatDialogRef<UpdateJobDepartmentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.department = data.department;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        from_date: [null, [Validators.required]],\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n    this.myForm.patchValue(this.department);\r\n  }\r\n\r\n  get formCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  update_JobTitle_Department() {\r\n    this.submitted = true;\r\n    // if (this.formCtrl.from_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select From Date\");\r\n    //   return;\r\n    // }\r\n\r\n    if (this.myForm.valid) {\r\n      let department: IUpdateJobTitleDepartmentVM = {\r\n        from_date: this.datePipe.transform(this.formCtrl.from_date.value),\r\n        to_date: this.datePipe.transform(this.formCtrl.to_date.value),\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.jobTitleService\r\n        .update_JobTitle_Department(\r\n          department,\r\n          this.department.job_title_dep_id\r\n        )\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.dialogRef.close(true);\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  {{ \"JobTitle.updateJobTitleDepartment\" | translate }} -\r\n  {{\r\n    languageService.isArabic\r\n      ? department.ar_name ?? department.en_name\r\n      : department.en_name ?? department.ar_name\r\n  }}\r\n</h1>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"myForm\" class=\"row\">\r\n    <!-- From date  -->\r\n    <div class=\"col-12\">\r\n      <app-datepicker\r\n        [control]=\"formCtrl.from_date\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.FromDate\"\r\n      ></app-datepicker>\r\n    </div>\r\n\r\n    <!-- to date -->\r\n    <div class=\"col-12\">\r\n      <app-datepicker\r\n        [control]=\"formCtrl.to_date\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.ToDate\"\r\n      ></app-datepicker>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button [mat-dialog-close]=\"false\" class=\"btn btn-danger\">\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n\r\n  <button\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-info\"\r\n    (click)=\"update_JobTitle_Department()\"\r\n  >\r\n    {{ \"General.Save\" | translate }}\r\n  </button>\r\n</div>\r\n\r\n<!-- <ngx-spinner></ngx-spinner> -->\r\n","import { ManageViewsService } from \"./../../../services/Admin/manage-views.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  teacherByEduCompId,\r\n  GeneralDropdownVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-manage-views\",\r\n  templateUrl: \"./manage-views.component.html\",\r\n  styleUrls: [\"./manage-views.component.scss\"],\r\n})\r\nexport class ManageViewsComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[] = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  subjects: GeneralDropdownVM[] = [];\r\n  units: GeneralDropdownVM[] = [];\r\n  lessons: GeneralDropdownVM[] = [];\r\n  lectures: GeneralDropdownVM[] = [];\r\n  materials: GeneralDropdownVM[] = [];\r\n  EduCompId: number;\r\n  branchId: number;\r\n  searchForm!: FormGroup;\r\n  resetForm!: FormGroup;\r\n  submitted = false;\r\n  email?: string = \"\";\r\n  username?: string = \"\";\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private ManageViewsService: ManageViewsService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private CashPaymentService: CashPaymentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.resetForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [\"\", [Validators.required]],\r\n      itemTypeId: [6],\r\n      paymentMethod: [\"\", [Validators.required]],\r\n      extraViews: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      paidAmount: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      resetTemplate: [false],\r\n      teacherUserId: [\"\"],\r\n      // stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n    });\r\n  }\r\n\r\n  get resetFormCtrl() {\r\n    return this.resetForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.email = res.email;\r\n        this.username = res.username;\r\n        this.resetFormCtrl.userId.setValue(res.userId);\r\n        this.resetFormCtrl.yearId.setValue(res.yearId);\r\n      } else {\r\n        this.toastr.error(res.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  resetViews() {\r\n    this.submitted = true;\r\n    if (!this.resetFormCtrl.userId.value) {\r\n      this.toastr.warning(\"Must Choose Student\");\r\n      return;\r\n    }\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.ManageViewsService.resetViews(\r\n        this.EduCompId,\r\n        this.resetForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.resetForm.reset();\r\n          this.searchForm.reset();\r\n          this.resetFormCtrl?.itemTypeId.setValue(6);\r\n          this.toastr.success(\"تم إضافة المشاهدات\");\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  getSubjectByTeacherId() {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.subjects = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.yearId.value) {\r\n      this.GeneralService.getSubjectByTeacherId(\r\n        this.resetFormCtrl.teacherUserId.value,\r\n        this.resetFormCtrl.yearId.value\r\n      ).subscribe((res: any) => {\r\n        this.subjects = res.lsts;\r\n      });\r\n    }\r\n  }\r\n\r\n  //  getStageByTeacherId(teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.teacherUserId.value) {\r\n  //     this.EducationalService.getStageByTeacherId(teacherId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //  getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.stageId.value) {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //      });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.yearId.value) {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId: teacherId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.subjectId.value) {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.unitId.value) {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLesson(lessonId: any, teacherId: any) {\r\n    if (!this.resetFormCtrl?.itemTypeId.value) {\r\n      this.toastr.warning(\"يجب اختيار النوع\");\r\n      return;\r\n    }\r\n    if (lessonId) {\r\n      this.CashPaymentService.GetItemsByLesson(\r\n        this.EduCompId,\r\n        lessonId,\r\n        this.resetFormCtrl?.itemTypeId.value,\r\n        teacherId\r\n      ).subscribe((res: any) => {\r\n        this.materials = res;\r\n      });\r\n    }\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    this.CashPaymentService.GetItemsByUnit(\r\n      this.EduCompId,\r\n      unitId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    this.CashPaymentService.GetItemsBySubject(\r\n      this.EduCompId,\r\n      subjectId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ManageViews\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ManageViews\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"resetFormCtrl.userId.value\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Student\" | translate }} - {{ username }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"resetForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"itemTypeId\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"6\">\r\n                    {{ \"Material.Lecture\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"5\">\r\n                    {{ \"labels.Exam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"11\">\r\n                    {{ \"labels.Template\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"username\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"email\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\" *ngIf=\"resetFormCtrl.itemTypeId.value == 11\">\r\n              <mat-radio-group formControlName=\"resetTemplate\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.DeleteTemplate\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.DeleteStudentAnswers\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"teacherUserId\"\r\n                  (selectionChange)=\"getSubjectByTeacherId()\"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!-- <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"stageId\"\r\n                  (selectionChange)=\"\r\n                    getYearsByStageId(resetFormCtrl.stageId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let stage of stages\"\r\n                    [value]=\"stage.Value\"\r\n                  >\r\n                    {{ stage.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"yearId\"\r\n                  (selectionChange)=\"\r\n                    getSubjectsByYearId(\r\n                      resetFormCtrl.yearId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year.Value\">\r\n                    {{ year.Text_Ar }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"subjectId\"\r\n                  (selectionChange)=\"\r\n                    getUnitsBySubjectId(resetFormCtrl.subjectId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let subject of subjects\"\r\n                    [value]=\"subject.Value\"\r\n                  >\r\n                    {{ subject.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"unitId\"\r\n                  (selectionChange)=\"\r\n                    getLessonsByUnitId(resetFormCtrl.unitId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let unit of units\" [value]=\"unit.Value\">\r\n                    {{ unit.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"lessonId\"\r\n                  (selectionChange)=\"\r\n                    GetItemsByLesson(\r\n                      resetFormCtrl.lessonId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let lesson of lessons\"\r\n                    [value]=\"lesson.Value\"\r\n                  >\r\n                    {{ lesson.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Material.Lecture\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"itemId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let material of materials\"\r\n                    [value]=\"material.Value\"\r\n                  >\r\n                    {{ material.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.itemId.invalid &&\r\n                    (resetFormCtrl.itemId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.itemId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Balance.PaymentMethod\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"paymentMethod\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option [value]=\"1\">\r\n                    {{ \"Balance.Balance\" | translate }}</mat-option\r\n                  >\r\n                  <mat-option [value]=\"2\">\r\n                    {{ \"Balance.ManualPayment\" | translate }}</mat-option\r\n                  >\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paymentMethod.invalid &&\r\n                    (resetFormCtrl.paymentMethod.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paymentMethod.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.NumberViews\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"extraViews\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.extraViews.invalid &&\r\n                    (resetFormCtrl.extraViews.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Amount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"paidAmount\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paidAmount.invalid &&\r\n                    (resetFormCtrl.paidAmount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"resetViews()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { forkJoin } from \"rxjs\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  Form,\r\n  FormBuilder,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { ICahsPaymentsTableMV } from \"app/admin/models/admin/cash-payment-table\";\r\nimport {\r\n  ErrorClass,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralDropdownVM } from \"app/admin/models/admin/educations\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\ndeclare var $: any;\r\n@Component({\r\n  selector: \"app-manual-cash-payment\",\r\n  templateUrl: \"./manual-cash-payment.component.html\",\r\n  styleUrls: [\"./manual-cash-payment.component.scss\"],\r\n})\r\nexport class ManualCashPaymentComponent implements OnInit {\r\n  Errors: ErrorClass[] = [];\r\n  Teachers: teacherByEduCompId[] = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  subjects: GeneralDropdownVM[] = [];\r\n  units: GeneralDropdownVM[] = [];\r\n  lessons: GeneralDropdownVM[] = [];\r\n  lectures: GeneralDropdownVM[] = [];\r\n  materials: GeneralDropdownVM[] = [];\r\n  userPaymentsHistories: ICahsPaymentsTableMV[] = [];\r\n  EduCompId: any;\r\n  branchId: any;\r\n  searchForm!: FormGroup;\r\n  paymentForm!: FormGroup;\r\n  submitted = false;\r\n  selectedUserDate: any = \"\";\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  PaymentByExcel: any = null;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private CashPaymentService: CashPaymentService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authService.getEduCompId();\r\n    this.branchId = this.authService.getBranchId();\r\n    this.getTeachersByEducompId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      code: [\"\"],\r\n      mobile: [\"\"],\r\n      centerCode: [\"\"],\r\n      searchedMail: [\"\"],\r\n      searchedName: [\"\"],\r\n    });\r\n\r\n    this.paymentForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [\"\"],\r\n      itemTypeId: [6],\r\n      teacherUserId: [\"\", Validators.required],\r\n      balance: [\"\"],\r\n      userMobile: [\"\"],\r\n      userEmail: [\"\"],\r\n      userName: [\"\"],\r\n      currentBalance: [\"\"],\r\n      uploadedFile: [\"\"],\r\n      itemPrice: [\"\"],\r\n      isPaymentExcel: [false],\r\n\r\n      // stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n    });\r\n\r\n    this.paymentForm.valueChanges.subscribe((e) => {\r\n      this.getFormValidationErrors(this.paymentForm);\r\n    });\r\n\r\n    this.paymentFormCtrl.userMobile.disable();\r\n    this.paymentFormCtrl.userEmail.disable();\r\n    this.paymentFormCtrl.userName.disable();\r\n    this.paymentFormCtrl.currentBalance.disable();\r\n    this.paymentFormCtrl.itemPrice.disable();\r\n    this.isPaymentExcelValidators();\r\n    this.itemTypeIdValidators();\r\n  }\r\n\r\n  get paymentFormCtrl() {\r\n    return this.paymentForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n  CashPaymentSearch() {\r\n    this.spinner.show();\r\n    this.CashPaymentService.CashPaymentSearch(\r\n      this.searchForm.value,\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      console.log(\"PaymentSearch\", res);\r\n      if (res.model?.userId) {\r\n        //  this.Teachers = res.lstTeachers;\r\n        this.paymentFormCtrl.userId.setValue(res.model.userId);\r\n        this.paymentFormCtrl.yearId.setValue(res.model.yearId);\r\n        this.getPaymentsHistory();\r\n        this.paymentFormCtrl.userMobile.setValue(res.model.userMobile);\r\n        this.paymentFormCtrl.userEmail.setValue(res.model.userEmail);\r\n        this.paymentFormCtrl.userName.setValue(res.model.userName);\r\n        this.paymentFormCtrl.currentBalance.setValue(res.model.currentBalance);\r\n      } else if (res.returnValue == 0) this.toastr.info(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  AddCashPayment() {\r\n    this.itemTypeIdValidators();\r\n    this.isPaymentExcelValidators();\r\n\r\n    this.submitted = true;\r\n    // console.log('add', this.paymentForm.value);\r\n    let valid = this.paymentForm.valid;\r\n    if (valid) {\r\n      this.spinner.show();\r\n      this.CashPaymentService.CashPaymentPost(\r\n        this.EduCompId,\r\n        this.paymentForm.value\r\n      ).subscribe((res: any) => {\r\n        //  console.log('AddCashPayment', res);\r\n        if (res.returnValue == 1 && res.returnString == \"Success\") {\r\n          this.toastr.success(\"تم الدفع \");\r\n          this.getPaymentsHistory();\r\n          this.CashPaymentSearch();\r\n          this.submitted = false;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  ManualPaymentByExcel() {\r\n    this.spinner.show();\r\n\r\n    let data = {\r\n      itemId: this.paymentFormCtrl.itemId.value,\r\n      itemTypeId: this.paymentFormCtrl.itemTypeId.value,\r\n      uploadedFile: this.paymentFormCtrl.uploadedFile.value,\r\n    };\r\n    console.log(\"Add\", data);\r\n    this.CashPaymentService.ManualPaymentByExcel(\r\n      this.EduCompId,\r\n      data\r\n    ).subscribe((res: any) => {\r\n      console.log(\"ByExcel\", res);\r\n      if (res.returnValue == 1) {\r\n        this.toastr.success(\"تم الدفع \");\r\n      } else console.log(\"ERROR_UPLOAD_EXCEL\", res);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getPaymentsHistory() {\r\n    this.spinner.show();\r\n    this.CashPaymentService.getPaymentsHistory(\r\n      this.p,\r\n      this.paymentFormCtrl.userId.value\r\n    ).subscribe((res: any) => {\r\n      //console.log('getPaymentsHistory', res);\r\n      this.userPaymentsHistories = res.userPayments;\r\n      this.itemsCount = res.totalCount;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //  Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // getStageByTeacherId(teacherUserId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (teacherUserId != \"\") {\r\n  //     this.EducationalService.getStageByTeacherId(teacherUserId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (stageId != \"\") {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherUserId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (yearId != \"\") {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  getSubjectByTeacherId() {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.subjects = [];\r\n    this.materials = [];\r\n    if (this.paymentFormCtrl.yearId.value) {\r\n      this.GeneralService.getSubjectByTeacherId(\r\n        this.paymentFormCtrl.teacherUserId.value,\r\n        this.paymentFormCtrl.yearId.value\r\n      ).subscribe((res: any) => {\r\n        this.subjects = res.lsts;\r\n      });\r\n    }\r\n  }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (SubjectId != \"\") {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n\r\n      this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (unitId != \"\") {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLesson(lessonId: any) {\r\n    this.CashPaymentService.GetItemsByLesson(\r\n      this.EduCompId,\r\n      lessonId,\r\n      this.paymentFormCtrl.itemTypeId.value,\r\n      this.paymentFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    this.CashPaymentService.GetItemsByUnit(\r\n      this.EduCompId,\r\n      unitId,\r\n      this.paymentFormCtrl.itemTypeId.value,\r\n      this.paymentFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    this.CashPaymentService.GetItemsBySubject(\r\n      this.EduCompId,\r\n      subjectId,\r\n      this.paymentFormCtrl.itemTypeId.value,\r\n      this.paymentFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  geItemPrice() {\r\n    if (\r\n      this.paymentFormCtrl.isPaymentExcel.value == false &&\r\n      this.paymentFormCtrl.itemId.value\r\n    ) {\r\n      this.CashPaymentService.geItemPrice(\r\n        this.paymentFormCtrl.itemId.value,\r\n        this.paymentFormCtrl.userId.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1)\r\n          this.paymentFormCtrl.itemPrice.setValue(res.price);\r\n        else console.log(\"gerMaterialPrice\", res);\r\n      });\r\n    }\r\n  }\r\n\r\n  isPaymentExcelValidators() {\r\n    let isPaymentExcel = this.paymentFormCtrl.isPaymentExcel.value;\r\n    if (isPaymentExcel == false) {\r\n      this.paymentFormCtrl.uploadedFile.setValue(\"\");\r\n      this.paymentFormCtrl.uploadedFile.clearValidators();\r\n    }\r\n\r\n    if (isPaymentExcel == true) {\r\n      this.paymentFormCtrl.uploadedFile.setValidators([Validators.required]);\r\n    }\r\n\r\n    this.paymentFormCtrl.itemTypeId.updateValueAndValidity();\r\n    this.paymentFormCtrl.uploadedFile.updateValueAndValidity();\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.userId;\r\n  }\r\n\r\n  getFormValidationErrors(form: FormGroup) {\r\n    let totalErrors = 0;\r\n\r\n    this.Errors = [];\r\n\r\n    Object.keys(form.controls).forEach((key) => {\r\n      const controlErrors: ValidationErrors = form.get(key).errors;\r\n      if (controlErrors != null) {\r\n        totalErrors++;\r\n        Object.keys(controlErrors).forEach((keyError) => {\r\n          // Errors.push(controlErrors[keyError]);\r\n          this.Errors.push({ key: key, error: keyError });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  itemTypeIdValidators() {\r\n    let itemTypeId = this.paymentFormCtrl.itemTypeId.value;\r\n    if (itemTypeId == 4) {\r\n      this.paymentFormCtrl.balance.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n      this.paymentFormCtrl.itemId.reset();\r\n      this.paymentFormCtrl.itemId.clearValidators();\r\n    }\r\n\r\n    if (itemTypeId != 4) {\r\n      this.paymentFormCtrl.itemId.setValidators([Validators.required]);\r\n      this.paymentFormCtrl.balance.reset();\r\n      this.paymentFormCtrl.balance.clearValidators();\r\n    }\r\n\r\n    this.paymentFormCtrl.itemId.updateValueAndValidity();\r\n    this.paymentFormCtrl.balance.updateValueAndValidity();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder.replace(\r\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\",\r\n            \"\"\r\n          ),\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.PaymentByExcel = data;\r\n        console.log(data);\r\n        this.paymentForm.controls[\"uploadedFile\"].setValue(data);\r\n      };\r\n    }\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Balance.ManualPayment\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"searchForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"searchedName\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"code\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"centerCode\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"searchedMail\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          (click)=\"CashPaymentSearch()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Balance.ManualPayment\" | translate }} -\r\n        {{ paymentFormCtrl.userName?.value }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"paymentForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group formControlName=\"isPaymentExcel\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.Individually\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.group\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- Student Data -->\r\n                <ng-container *ngIf=\"!paymentFormCtrl.isPaymentExcel.value\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userName\">الإسم بالكامل</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userName\"\r\n                      formControlName=\"userName\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userEmail\">البريد الإلكترونى</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userEmail\"\r\n                      formControlName=\"userEmail\"\r\n                      type=\"email\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"currentBalance\">الرصيد الحالي</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"currentBalance\"\r\n                      formControlName=\"currentBalance\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userMobile\">رقم الموبايل</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userMobile\"\r\n                      formControlName=\"userMobile\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <!--  items TypeId Lecture - Exam - Template - Balance -->\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group\r\n                    name=\"itemTypeId\"\r\n                    formControlName=\"itemTypeId\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"6\">\r\n                        {{ \"labels.Lecture\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <ng-container *ngIf=\"!paymentFormCtrl.isPaymentExcel.value\">\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button [value]=\"5\">\r\n                          {{ \"labels.Exam\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button [value]=\"11\">\r\n                          {{ \"labels.Template\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button [value]=\"4\">\r\n                          {{ \"labels.Balance\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                    </ng-container>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.itemTypeId.value != 4\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"teacherUserId\"\r\n                        (selectionChange)=\"getSubjectByTeacherId()\"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let teacher of Teachers\"\r\n                          [value]=\"teacher.teacherUserId\"\r\n                        >\r\n                          {{ teacher.teacher_ar_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <!--\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"stageId\"\r\n                        (selectionChange)=\"\r\n                          getYearsByStageId(paymentFormCtrl.stageId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let stage of stages\"\r\n                          [value]=\"stage.Value\"\r\n                        >\r\n                          {{ stage.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"yearId\"\r\n                        (selectionChange)=\"\r\n                          getSubjectsByYearId(\r\n                            paymentFormCtrl.yearId.value,\r\n                            paymentFormCtrl.teacherUserId.value\r\n                          )\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let year of years\"\r\n                          [value]=\"year.Value\"\r\n                        >\r\n                          {{ year.Text_Ar }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div> -->\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"subjectId\"\r\n                        (selectionChange)=\"\r\n                          getUnitsBySubjectId(paymentFormCtrl.subjectId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let subject of subjects\"\r\n                          [value]=\"subject.Value\"\r\n                        >\r\n                          {{ subject.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"unitId\"\r\n                        (selectionChange)=\"\r\n                          getLessonsByUnitId(paymentFormCtrl.unitId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let unit of units\"\r\n                          [value]=\"unit.Value\"\r\n                        >\r\n                          {{ unit.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"lessonId\"\r\n                        (selectionChange)=\"\r\n                          GetItemsByLesson(paymentFormCtrl.lessonId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let lesson of lessons\"\r\n                          [value]=\"lesson.Value\"\r\n                        >\r\n                          {{ lesson.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"Material.Lecture\" | translate\r\n                      }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"itemId\"\r\n                        (selectionChange)=\"geItemPrice()\"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let material of materials\"\r\n                          [value]=\"material.Value\"\r\n                        >\r\n                          {{ material.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          paymentFormCtrl.itemId.invalid &&\r\n                          (paymentFormCtrl.itemId.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"paymentFormCtrl.itemId.errors?.required\">\r\n                          {{ \"labels.MustChoosevalue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-label>{{ \"labels.Price\" | translate }}</mat-label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"itemPrice\"\r\n                      formControlName=\"itemPrice\"\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.itemTypeId.value == 4\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"teacherUserId\"\r\n                        (selectionChange)=\"\r\n                          getStageByTeacherId(\r\n                            paymentFormCtrl.teacherUserId.value\r\n                          )\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let teacher of Teachers\"\r\n                          [value]=\"teacher.teacherUserId\"\r\n                        >\r\n                          {{ teacher.teacher_ar_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"Balance.Balance\" | translate }}</mat-label>\r\n                      <input matInput type=\"number\" formControlName=\"balance\" />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          paymentFormCtrl.balance.invalid &&\r\n                          (paymentFormCtrl.balance.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"paymentFormCtrl.balance.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"paymentFormCtrl.balance.errors?.minusNum\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"this.paymentForm\"></span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.isPaymentExcel.value\">\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <label for=\"uploadedFile\">Excel Sheet</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".xlsx,.xls\"\r\n                      (change)=\"onChange($event)\"\r\n                      name=\"uploadedFile\"\r\n                      class=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"paymentFormCtrl.isPaymentExcel.value == false\"\r\n          id=\"submitButton\"\r\n          type=\"button\"\r\n          (click)=\"AddCashPayment()\"\r\n          class=\"btn btn-primary pull-left font-dro\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i> اشتراك\r\n        </button>\r\n        <button\r\n          *ngIf=\"paymentFormCtrl.isPaymentExcel.value == true\"\r\n          id=\"submitButton\"\r\n          type=\"button\"\r\n          (click)=\"ManualPaymentByExcel()\"\r\n          class=\"btn btn-primary pull-left font-dro\"\r\n        >\r\n          <i class=\"fa fa-upload\"></i> Upload\r\n        </button>\r\n        <!-- <span>\r\n          <ng-container *ngFor=\"let error of this.Errors\">\r\n            {{ error.key }} - {{ error.error }}\r\n          </ng-container>\r\n        </span> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"userPaymentsHistories?.length != 0\">\r\n  <table class=\"table table-striped table-hover table-full-width rtl\">\r\n    <thead>\r\n      <tr>\r\n        <th>النوع</th>\r\n        <th>الاسم</th>\r\n        <th>المادة</th>\r\n        <th>السنتر</th>\r\n        <th>المدرس</th>\r\n        <th>القيمه</th>\r\n        <th>طريقة الاشتراك</th>\r\n        <th>التاريخ</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        *ngFor=\"\r\n          let payment of userPaymentsHistories\r\n            | paginate\r\n              : {\r\n                  itemsPerPage: 10,\r\n                  currentPage: p,\r\n                  totalItems: itemsCount\r\n                };\r\n          let i = index;\r\n          trackBy: track\r\n        \"\r\n      >\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td>{{ payment?.centerName }}</td>\r\n        <td>{{ payment?.teacherName }}</td>\r\n        <td>{{ payment?.amount }}</td>\r\n        <td>{{ payment?.payment_method }}</td>\r\n        <td>{{ payment?.Date | NewDate }} - {{ payment?.Date | Time }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <div class=\"paginator-box\" *ngIf=\"itemsCount > 10\">\r\n    <pagination-controls\r\n      dir=\"ltr\"\r\n      [maxSize]=\"maxSize\"\r\n      (pageChange)=\"p = $event; getPaymentsHistory()\"\r\n      previousLabel=\"\"\r\n      nextLabel=\"\"\r\n    >\r\n    </pagination-controls>\r\n  </div>\r\n</ng-container>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { GeneralDropdownVM } from \"app/admin/models/admin/educations\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { PointsService } from \"./../../../services/Admin/points.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  IAddExamPointsVM,\r\n  IAddLecturesPointsVM,\r\n  ILecturePointVM,\r\n  IPointSystemVM,\r\n} from \"app/admin/models/admin/point\";\r\nimport { teacherByEduCompId } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-points-setup\",\r\n  templateUrl: \"./points-setup.component.html\",\r\n  styleUrls: [\"./points-setup.component.scss\"],\r\n})\r\nexport class PointsSetupComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[];\r\n  subjects: GeneralDropdownVM[];\r\n  lecturePoints: IPointSystemVM[];\r\n  ExamPoints: IPointSystemVM[];\r\n  EduCompId: any;\r\n\r\n  lecturesForm!: FormGroup;\r\n  lecsubmitted = false;\r\n\r\n  ExamForm!: FormGroup;\r\n  ExamSubmitted = false;\r\n\r\n  LecturePage: number = 1;\r\n  ExamPage: number = 1;\r\n  maxSize = 9;\r\n  SubjectId: number;\r\n  teacherUserId: number;\r\n  courseId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private toastr: MessagesService,\r\n    private authserv: AuthService,\r\n    private GeneralService: GeneralService,\r\n    private PointsService: PointsService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.courseId = Number(params.get(\"courseId\"));\r\n      console.log(this.courseId);\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n    this.getExamPoints();\r\n    this.getLeturePoints();\r\n    this.getTeachersByEducompId();\r\n\r\n    this.lecturesForm = this.fb.group({\r\n      ByQuestion: [false, [Validators.required]],\r\n      //from: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      //to: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      //value: [0, [Validators.required, CustomeValidator.minusNum]],\r\n      //questionAttempt: [true, [Validators.required]],\r\n      //questionAttempts: [0, [CustomeValidator.minusNum]],\r\n      attendancevalue: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      absencevalue: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.ExamForm = this.fb.group(\r\n      {\r\n        ByQuestion: [false, [Validators.required]],\r\n        from: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        to: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        value: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      },\r\n      {\r\n        //validator: CustomeValidator.smallerThanNumbers(\"from\", \"to\"),\r\n      }\r\n    );\r\n\r\n    //this.changeQuestionAttemptsValidation(true);\r\n    this.ByQuestionValidators(true);\r\n\r\n    //this.ByQuestionValidatorsLectures(true);\r\n  }\r\n\r\n  get lecturesFormCtrls() {\r\n    return this.lecturesForm.controls;\r\n  }\r\n\r\n  get ExamFormCtrls() {\r\n    return this.ExamForm.controls;\r\n  }\r\n\r\n  addLecturePoint() {\r\n    this.lecsubmitted = true;\r\n\r\n    if (this.courseId == null) {\r\n      this.toastr.warning(\"Please select courseId\");\r\n      return;\r\n    }\r\n\r\n    // if (this.SubjectId == null) {\r\n    //   this.toastr.warning(\"Please select Subject\");\r\n    //   return;\r\n    // }\r\n\r\n    if (this.lecturesForm.valid) {\r\n      this.spinner.show();\r\n\r\n      let data: IAddLecturesPointsVM = {\r\n        ByQuestion: this.lecturesFormCtrls?.ByQuestion.value,\r\n        from: null, //this.lecturesFormCtrls?.from.value,\r\n        to: null, // this.lecturesFormCtrls?.to.value,\r\n        selectedSubjectId: this.courseId,\r\n        value: null, //this.lecturesFormCtrls?.value.value,\r\n        absencevalue: this.lecturesFormCtrls?.absencevalue.value,\r\n        attendancevalue: this.lecturesFormCtrls?.attendancevalue.value,\r\n        questionAttempt: null, // this.lecturesFormCtrls?.questionAttempt.value,\r\n        questionAttempts: null, // this.lecturesFormCtrls?.questionAttempts.value,\r\n        isLecture: true,\r\n      };\r\n        this.PointsService.addPoints(this.EduCompId, data).subscribe(\r\n          (res: any) => {\r\n            if (res.returnValue == 1) {\r\n              this.getLeturePoints();\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n              this.lecsubmitted = false;\r\n              this.lecturesForm.reset();\r\n              this.lecturesFormCtrls?.ByQuestion.setValue(false);\r\n            }\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n\r\n    }\r\n  }\r\n\r\n  //Exams Points\r\n  addExamPoint() {\r\n    this.ExamSubmitted = true;\r\n\r\n    if (this.courseId == null) {\r\n      this.toastr.warning(\"Please select course\");\r\n      return;\r\n    }\r\n\r\n    // if (this.SubjectId == null) {\r\n    //   this.toastr.warning(\"Please select Subject\");\r\n    //   return;\r\n    // }\r\n    this.getLeturePoints();\r\n\r\n    if (this.ExamForm.valid) {\r\n      this.spinner.show();\r\n      let data: IAddExamPointsVM = {\r\n        ByQuestion: this.ExamFormCtrls?.ByQuestion.value,\r\n        from: this.ExamFormCtrls?.from.value,\r\n        to: this.ExamFormCtrls?.to.value,\r\n        value: this.ExamFormCtrls?.value.value,\r\n        selectedSubjectId: this.courseId,\r\n        isLecture: false,\r\n      };\r\n      this.fromToExamValidators();\r\n      this.PointsService.addPoints(this.EduCompId, data).subscribe(\r\n        (res: any) => {\r\n          //console.log(\"addExamPoint\", res);\r\n          if (res.returnValue == 1) {\r\n            this.getExamPoints();\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n            this.ExamSubmitted = false;\r\n            this.ExamForm.reset();\r\n            this.ExamFormCtrls?.ByQuestion.setValue(false);\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getLeturePoints() {\r\n    this.spinner.show();\r\n    this.PointsService.getPoints<IPointSystemVM[]>(\r\n      this.courseId,\r\n      6, //type= 6 for lecture\r\n      this.EduCompId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.lecturePoints = res;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getExamPoints() {\r\n    this.spinner.show();\r\n    this.PointsService.getPoints<IPointSystemVM[]>(\r\n      this.courseId,\r\n      3, //type= 3 for exam\r\n      this.EduCompId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.ExamPoints = res;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  DeleatePointDialog(point: IPointSystemVM, type: string): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${point.Value}: points`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletePoint(point, type);\r\n      });\r\n  }\r\n  deletePoint(point: IPointSystemVM, type: string) {\r\n    this.spinner.show();\r\n    this.PointsService.deletePoint(point.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        if (type == \"lecture\") {\r\n          let i = this.lecturePoints.findIndex((e) => e == point);\r\n          this.lecturePoints.splice(i, 1);\r\n        } else {\r\n          //type ==Exam\r\n          let i = this.ExamPoints.findIndex((e) => e == point);\r\n          this.ExamPoints.splice(i, 1);\r\n        }\r\n\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n      } else this.toastr.error(res.returnString);\r\n\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //############################################################################\r\n\r\n  //######################################################################\r\n  getTeachersByEducompId() {\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n      }\r\n    );\r\n  }\r\n\r\n  onChangeTeacher(teacheruserId: number) {\r\n    if (teacheruserId != null) {\r\n      this.teacherUserId = teacheruserId;\r\n      this.getExamPoints();\r\n      this.getLeturePoints();\r\n      this.GeneralService.getSubjectByTeacherId(teacheruserId).subscribe(\r\n        (res: any) => {\r\n          this.subjects = res.lsts;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onChangeSunbject(SubjectId: number) {\r\n    this.SubjectId = SubjectId;\r\n    this.ExamFormCtrls.selectedSubjectId.setValue(SubjectId);\r\n  }\r\n\r\n  // changeQuestionAttemptsValidation(questionAttempt: boolean) {\r\n  //   if (questionAttempt == true) {\r\n  //     this.lecturesForm.controls[\"questionAttempts\"].setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.minusNum,\r\n  //     ]);\r\n  //   }\r\n\r\n  //   if (questionAttempt == false) {\r\n  //     this.lecturesForm.controls[\"questionAttempts\"].reset();\r\n  //     this.lecturesForm.controls[\"questionAttempts\"].clearValidators();\r\n  //   }\r\n  //   this.lecturesFormCtrls.questionAttempts.updateValueAndValidity();\r\n  // }\r\n\r\n  ByQuestionValidators(ByQuestion: boolean) {\r\n    if (ByQuestion == true) {\r\n      this.ExamFormCtrls.from.reset();\r\n      this.ExamFormCtrls.from.clearValidators();\r\n      this.ExamFormCtrls.to.reset();\r\n      this.ExamFormCtrls.to.clearValidators();\r\n    } else {\r\n      this.ExamFormCtrls.from.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.ExamFormCtrls.to.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.bigZero,\r\n      ]);\r\n    }\r\n    this.ExamFormCtrls.from.updateValueAndValidity();\r\n    this.ExamFormCtrls.to.updateValueAndValidity();\r\n  }\r\n\r\n  // ByQuestionValidatorsLectures(ByQuestion: boolean) {\r\n  //   if (ByQuestion == true) {\r\n  //     this.lecturesFormCtrls.from?.reset();\r\n  //     this.lecturesFormCtrls.from?.clearValidators();\r\n  //     this.lecturesFormCtrls.to?.reset();\r\n  //     this.lecturesFormCtrls.to?.clearValidators();\r\n  //   } else {\r\n  //     this.lecturesFormCtrls.from?.setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.minusNum,\r\n  //     ]);\r\n\r\n  //     this.lecturesFormCtrls.to.setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.bigZero,\r\n  //     ]);\r\n  //   }\r\n  //   this.lecturesFormCtrls.from.updateValueAndValidity();\r\n  //   this.lecturesFormCtrls.to.updateValueAndValidity();\r\n  // }\r\n  fromToExamValidators() {\r\n    if (\r\n      this.ExamFormCtrls.from.value !=\"\" &&\r\n      this.ExamFormCtrls.to.value !=\"\"\r\n    ) {\r\n      this.ExamForm.setValidators([\r\n        CustomeValidator.smallerThanNumbers(\"from\", \"to\"),\r\n      ]);\r\n      //       Validators.required,\r\n      //       CustomeValidator.bigZero,\r\n      //     ]);\r\n    }\r\n  }\r\n  track(index: number, point: ILecturePointVM): number {\r\n    return point.Id;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Points\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/setup/course/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <!-- Teacher -->\r\n          <!-- <div class=\"col-lg-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n              <mat-select\r\n                name=\"teacherUserId\"\r\n                #teacherUserId\r\n                (selectionChange)=\"onChangeTeacher(teacherUserId.value)\"\r\n                required\r\n              >\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let teacher of Teachers\"\r\n                  [value]=\"teacher.teacherUserId\"\r\n                >\r\n                  {{ teacher.teacher_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- Subject -->\r\n          <!-- <div class=\"col-lg-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n              <mat-select\r\n                name=\"subjectId\"\r\n                #subjectId\r\n                (selectionChange)=\"onChangeSunbject(subjectId.value)\"\r\n                required\r\n              >\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let subject of subjects\"\r\n                  [value]=\"subject.Value\"\r\n                >\r\n                  {{ subject.Text }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-tab-group>\r\n              <!-- Start Lecture Points setup -->\r\n              <mat-tab label=\"{{ 'Material.Lectures' | translate }}\">\r\n                <form [formGroup]=\"lecturesForm\">\r\n                  <div class=\"row\">\r\n                    <!-- ByQuestion -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.ByQuestionLabel\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (change)=\"ByQuestionValidatorsLectures(true)\"\r\n                          >\r\n                            {{ \"labels.ByQuestion\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (change)=\"ByQuestionValidatorsLectures(false)\"\r\n                            >{{ \"labels.ByGroupQuestions\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <!-- lecturesFormCtrls.ByQuestion.value == false -->\r\n                    <ng-container *ngIf=\"\">\r\n                      <!--  from    -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <app-input\r\n                          [control]=\"lecturesFormCtrls.from\"\r\n                          [submitted]=\"ExamSubmitted\"\r\n                          type=\"number\"\r\n                          lable=\"labels.From\"\r\n                        ></app-input>\r\n                      </div>\r\n\r\n                      <!-- to  -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <app-input\r\n                          [control]=\"lecturesFormCtrls.to\"\r\n                          [submitted]=\"ExamSubmitted\"\r\n                          type=\"number\"\r\n                          lable=\"labels.To\"\r\n                        ></app-input>\r\n                      </div>\r\n                    </ng-container>\r\n\r\n                    <!-- value  ==> points Number   -->\r\n                    <!-- <div class=\"col-lg-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"value\" />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            lecturesFormCtrls.value.invalid &&\r\n                            (lecturesFormCtrls.value.touched || lecsubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.value.errors?.required ||\r\n                              lecturesFormCtrls.value.errors?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!--  attendance value   -->\r\n\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <app-input\r\n                        [control]=\"lecturesFormCtrls.attendancevalue\"\r\n                        [submitted]=\"lecsubmitted\"\r\n                        type=\"number\"\r\n                        label=\"labels.AttendancePoints\"\r\n                      ></app-input>\r\n                    </div>\r\n\r\n                    <!--  absence value   -->\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <app-input\r\n                        [control]=\"lecturesFormCtrls.absencevalue\"\r\n                        [submitted]=\"lecsubmitted\"\r\n                        type=\"number\"\r\n                        label=\"labels.AbsencePoints\"\r\n                      ></app-input>\r\n                    </div>\r\n\r\n                    <!-- questionAttempt -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.questionAttempt\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group\r\n                        formControlName=\"questionAttempt\"\r\n                        class=\"row\"\r\n                      >\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (click)=\"changeQuestionAttemptsValidation(true)\"\r\n                          >\r\n                            {{ \"labels.Yes\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (click)=\"changeQuestionAttemptsValidation(false)\"\r\n                            >{{ \"labels.No\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <!--  question Attempts    -->\r\n                    <!-- <div\r\n                      class=\"col-lg-4 col-12\"\r\n                      *ngIf=\"lecturesFormCtrls.questionAttempt.value == true\"\r\n                    >\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.questionAttempts\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"number\"\r\n                          formControlName=\"questionAttempts\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            lecturesFormCtrls.questionAttempts.invalid &&\r\n                            (lecturesFormCtrls.questionAttempts.touched ||\r\n                              lecsubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.questionAttempts.errors\r\n                                ?.required ||\r\n                              lecturesFormCtrls.questionAttempts.errors\r\n                                ?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div> -->\r\n                  </div>\r\n                  <mat-card-actions align=\"end\">\r\n                    <button\r\n                      mat-raised-button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary bg-light-info\"\r\n                      (click)=\"addLecturePoint()\"\r\n                    >\r\n                      <i class=\"fa fa-plus\"></i>\r\n                      {{ \"General.Add\" | translate }}\r\n                    </button>\r\n                  </mat-card-actions>\r\n                </form>\r\n\r\n                <!--  Lectures points table    -->\r\n                <ng-container>\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <!-- <th>\r\n                          {{ \"labels.PointApplyedTo\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.questionAttempts\" | translate }}\r\n                        </th> -->\r\n\r\n                        <th>\r\n                          {{ \"labels.AttendancePoints\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.AbsencePoints\" | translate }}\r\n                        </th>\r\n                        <!--\r\n                        <th>\r\n                          {{ \"labels.From\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.To\" | translate }}\r\n                        </th> -->\r\n                        <th>actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr\r\n                        *ngFor=\"\r\n                          let point of lecturePoints\r\n                            | paginate\r\n                              : {\r\n                                  itemsPerPage: 9,\r\n                                  currentPage: LecturePage,\r\n                                  id: 'lecture'\r\n                                };\r\n                          let i = index;\r\n                          trackBy: track\r\n                        \"\r\n                      >\r\n                        <!-- <td\r\n                          *ngIf=\"\r\n                            point.FromValue == null && point.ToValue == null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </td>\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue != null && point.ToValue != null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByGroupQuestions\" | translate }}\r\n                        </td>\r\n                        <td>{{ point.Value }}</td>\r\n                        <td>\r\n                          {{ point?.QuestionAttempts }}\r\n                        </td> -->\r\n                        <td>\r\n                          {{ point.AttendanceValue }}\r\n                        </td>\r\n                        <td>\r\n                          {{ point.AbsenceValue }}\r\n                        </td>\r\n                        <!-- <td>\r\n                          {{ point.FromValue }}\r\n                        </td>\r\n                        <td>{{ point.ToValue }}</td> -->\r\n                        <td>\r\n                          <button\r\n                            (click)=\"DeleatePointDialog(point, 'lecture')\"\r\n                            mat-mini-fab\r\n                            color=\"warn\"\r\n                          >\r\n                            <mat-icon>delete</mat-icon>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                    <!-- Start  Pagination -->\r\n                    <div class=\"paginator-box\">\r\n                      <pagination-controls\r\n                        *ngIf=\"lecturePoints?.length > 9\"\r\n                        [maxSize]=\"maxSize\"\r\n                        (pageChange)=\"LecturePage = $event\"\r\n                        previousLabel=\"\"\r\n                        nextLabel=\"\"\r\n                        id=\"lecture\"\r\n                      >\r\n                      </pagination-controls>\r\n                    </div>\r\n                  </table>\r\n                </ng-container>\r\n              </mat-tab>\r\n\r\n              <!--  #######################################################################################################################################\r\n              ##############################################################################################################################################-->\r\n\r\n              <!-- Start Exams Points setup -->\r\n              <mat-tab label=\"{{ 'Material.Exams' | translate }}\">\r\n                <form [formGroup]=\"ExamForm\">\r\n                  <div class=\"row\">\r\n                    <!--  ByQuestion    -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.ByQuestionLabel\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                        <div class=\"col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (click)=\"ByQuestionValidators(true)\"\r\n                          >\r\n                            {{ \"labels.ByQuestion\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (click)=\"ByQuestionValidators(false)\"\r\n                            >{{ \"labels.ByExam\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <!-- <ng-container\r\n                      *ngIf=\"ExamFormCtrls.ByQuestion.value == false\"\r\n                    > -->\r\n                      <!--  from    -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <app-input\r\n                        [control]=\"ExamFormCtrls.from\"\r\n                        [submitted]=\"ExamSubmitted\"\r\n                        type=\"number\"\r\n                        label=\"labels.From\"\r\n                      ></app-input>\r\n\r\n                      </div>\r\n\r\n                      <!-- to  -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <app-input\r\n                        [control]=\"ExamFormCtrls.to\"\r\n                        [submitted]=\"ExamSubmitted\"\r\n                        type=\"number\"\r\n                        label=\"labels.To\"\r\n                      ></app-input>\r\n                      </div>\r\n                   <!-- </ng-container> -->\r\n                    <!-- value ==> points Number  -->\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <app-input\r\n                      [control]=\" ExamFormCtrls.value\"\r\n                      [submitted]=\"ExamSubmitted\"\r\n                      type=\"number\"\r\n                      label=\"labels.pointsNumber\"\r\n                    ></app-input>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <mat-card-actions align=\"end\">\r\n                    <button\r\n                      mat-raised-button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary bg-light-info\"\r\n                      (click)=\"addExamPoint()\"\r\n                    >\r\n                      <i class=\"fa fa-plus\"></i>\r\n                      {{ \"General.Add\" | translate }}\r\n                    </button>\r\n                  </mat-card-actions>\r\n                </form>\r\n\r\n                <!-- Start Exams points Table -->\r\n                <ng-container>\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.From\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.To\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </th>\r\n\r\n                        <th>actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr\r\n                        *ngFor=\"\r\n                          let point of ExamPoints\r\n                            | paginate\r\n                              : {\r\n                                  itemsPerPage: 9,\r\n                                  currentPage: ExamPage,\r\n                                  id: 'exam'\r\n                                };\r\n                          let i = index;\r\n                          trackBy: track\r\n                        \"\r\n                      >\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue == null && point.ToValue == null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </td>\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue != null && point.ToValue != null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByGroupQuestions\" | translate }}\r\n                        </td>\r\n                        <td>{{ point.FromValue || \"-\" }}</td>\r\n                        <td>{{ point.ToValue || \"-\" }}</td>\r\n                        <td>{{ point.Value || \"-\" }}</td>\r\n                        <td>\r\n                          <button\r\n                            (click)=\"DeleatePointDialog(point, 'Exam')\"\r\n                            mat-mini-fab\r\n                            color=\"warn\"\r\n                          >\r\n                            <mat-icon>delete</mat-icon>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                    <div class=\"paginator-box\">\r\n                      <pagination-controls\r\n                        *ngIf=\"ExamPoints?.length > 9\"\r\n                        [maxSize]=\"maxSize\"\r\n                        (pageChange)=\"ExamPage = $event\"\r\n                        previousLabel=\"\"\r\n                        nextLabel=\"\"\r\n                        id=\"exam\"\r\n                      >\r\n                      </pagination-controls>\r\n                    </div>\r\n                  </table>\r\n                </ng-container>\r\n              </mat-tab>\r\n            </mat-tab-group>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { teacherBySubEduComp } from 'app/admin/models/admin/educations';\r\nimport { GeneralService } from 'app/shared/services/General/general.service';\r\nimport { AuthService } from 'app/shared/services/auth/auth.service'; \r\nimport { SubjectsService } from 'app/admin/services/Admin/subjects.service'; \r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomeValidator } from 'app/shared/validators/customeValid.validator'; \r\n\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-question-student-settings',\r\n  templateUrl: './question-student-settings.component.html',\r\n  styleUrls: ['./question-student-settings.component.scss'],\r\n})\r\nexport class QuestionStudentsSettingsComponent implements OnInit {\r\n  EduCompId: any;\r\n  subjectId: any;\r\n  Teachers: teacherBySubEduComp[] = [];\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private SubjectsService: SubjectsService,\r\n    private authserv: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.subjectId = params.get('subjectId');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.getTeacherByEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      subjectId: [this.subjectId, Validators.required],\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      teacherId: ['', Validators.required],\r\n      typeId: ['', Validators.required],\r\n      PrivatePrice: ['', Validators.required],\r\n      PublicPrice: ['', Validators.required],\r\n      IfPublicAccessibleAfterLecturesCount: ['', Validators.required],\r\n    });\r\n    this.changeType();\r\n  }\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //On Add Question Settinges\r\n  addQuestionSettings() {\r\n    this.submitted = true;\r\n    let isValid = this.myForm.valid;\r\n    if (isValid) {\r\n      $('#loadingGif').show();\r\n      this.SubjectsService.addQuestionSettings(\r\n        this.EduCompId,\r\n        this.myForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnString == 'Success' && res.returnValue == 1) {\r\n          this.toastr.success('settings added successfully');\r\n          this.resetManual();\r\n          $('#loadingGif').hide();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //get Teacher By EduCompId\r\n  getTeacherByEduCompId() {\r\n    $('#loadingGif').show();\r\n    this.SubjectsService.getTeacherBySubjectAndEduCompId(\r\n      this.EduCompId,\r\n      this.subjectId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.Teachers = res.teachers;\r\n        $('#loadingGif').hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  //OnChange  Type\r\n  changeType() {\r\n    this.myForm.controls['typeId'].valueChanges.subscribe((data) => {\r\n      this.changeValidators();\r\n    });\r\n  }\r\n\r\n  //OnChange Type Change Validators\r\n  changeValidators() {\r\n    let typeId = this.myForm.controls['typeId'].value;\r\n\r\n    if (typeId == '1' || typeId == 1) {\r\n      this.myForm.controls['PrivatePrice'].clearValidators();\r\n      this.myForm.controls['PrivatePrice'].reset();\r\n\r\n      this.myForm.controls['PublicPrice'].setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.myForm.controls[\r\n        'IfPublicAccessibleAfterLecturesCount'\r\n      ].setValidators([Validators.required, CustomeValidator.minusNum]);\r\n    }\r\n\r\n    if (typeId == '2' || typeId == 2) {\r\n      this.myForm.controls['PublicPrice'].clearValidators();\r\n      this.myForm.controls['PublicPrice'].reset();\r\n\r\n      this.myForm.controls[\r\n        'IfPublicAccessibleAfterLecturesCount'\r\n      ].clearValidators();\r\n\r\n      this.myForm.controls['IfPublicAccessibleAfterLecturesCount'].reset();\r\n\r\n      this.myForm.controls['PrivatePrice'].setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n    }\r\n\r\n    this.myForm.controls['PublicPrice'].updateValueAndValidity();\r\n    this.myForm.controls['PrivatePrice'].updateValueAndValidity();\r\n    this.myForm.controls[\r\n      'IfPublicAccessibleAfterLecturesCount'\r\n    ].updateValueAndValidity();\r\n  }\r\n\r\n  resetManual() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n    this.myForm.controls['teacherId'].setValue('');\r\n    this.myForm.controls['typeId'].setValue('');\r\n  }\r\n}\r\n","<div class=\"form-conainer\">\r\n    <div class=\"dc-content-title\">\r\n      <h5 class=\"xsm black header\">إعدادات اسئلة الطلاب</h5>\r\n      <button\r\n        routerLink=\"/dashboard/educational-subject/index\"\r\n        type=\"submit\"\r\n        class=\"btn btn-primary pull-left ad-qus font-dro\"\r\n      >\r\n        <i class=\"fa fa-arrow-right\"></i> الرجوع\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"unit-body dc-item-body\">\r\n      <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n        <div class=\"form-group\">\r\n          <label class=\"col-sm-3 control-label\"> المدرس </label>\r\n          <div class=\"col-sm-5\">\r\n            <select class=\"form-control font-dro\" formControlName=\"teacherId\">\r\n              <option value=\"\">المدرس</option>\r\n              <option\r\n                *ngFor=\"let teacher of Teachers\"\r\n                [value]=\"teacher.teacher_ID\"\r\n              >\r\n                {{ teacher.teacher_ar_name }}\r\n              </option>\r\n            </select>\r\n            <span\r\n              class=\"text-danger\"\r\n              *ngIf=\"\r\n                FormCtrl.teacherId.invalid &&\r\n                (FormCtrl.teacherId.touched || submitted)\r\n              \"\r\n            >\r\n              <span *ngIf=\"FormCtrl.teacherId.errors?.required\">\r\n                You must choose a value.\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"col-md-3 col-sm-3 control-label\"> النوع </label>\r\n          <div class=\"col-md-5\">\r\n            <select\r\n              class=\"form-control\"\r\n              #type\r\n              (change)=\"changeType()\"\r\n              formControlName=\"typeId\"\r\n            >\r\n              <option value=\"\">اختر</option>\r\n              <option value=\"1\">عام</option>\r\n              <option value=\"2\">خاص</option>\r\n              <option value=\"3\">إغلاق</option>\r\n            </select>\r\n            <span\r\n              class=\"text-danger\"\r\n              *ngIf=\"\r\n                FormCtrl.typeId.invalid && (FormCtrl.typeId.touched || submitted)\r\n              \"\r\n            >\r\n              <span *ngIf=\"FormCtrl.typeId.errors?.required\">\r\n                You must choose a value.\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"IsPrivateContainer\" *ngIf=\"type.value == '2'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> السعر </label>\r\n            <div class=\"col-sm-5\">\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"PrivatePrice\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.PrivatePrice.invalid &&\r\n                  (FormCtrl.PrivatePrice.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.PrivatePrice.errors?.required\">\r\n                  You must enter a value.\r\n                </span>\r\n                <span *ngIf=\"FormCtrl.PrivatePrice.errors?.minusNum\">\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"IsPublicContainer\" *ngIf=\"type.value == '1'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> السعر </label>\r\n            <div class=\"col-sm-5\">\r\n              <!-- Is public -->\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"PublicPrice\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.PublicPrice.invalid &&\r\n                  (FormCtrl.PublicPrice.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.PublicPrice.errors?.required\">\r\n                  You must enter a value.\r\n                </span>\r\n                <span *ngIf=\"FormCtrl.PublicPrice.errors?.minusNum\">\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- if Public show lecture Count -->\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> عدد المحاضرات </label>\r\n            <div class=\"col-sm-5\">\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"IfPublicAccessibleAfterLecturesCount\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.IfPublicAccessibleAfterLecturesCount.invalid &&\r\n                  (FormCtrl.IfPublicAccessibleAfterLecturesCount.touched ||\r\n                    submitted)\r\n                \"\r\n              >\r\n                <span\r\n                  *ngIf=\"\r\n                    FormCtrl.IfPublicAccessibleAfterLecturesCount.errors?.required\r\n                  \"\r\n                >\r\n                  You must enter a value.\r\n                </span>\r\n                <span\r\n                  *ngIf=\"\r\n                    FormCtrl.IfPublicAccessibleAfterLecturesCount.errors?.minusNum\r\n                  \"\r\n                >\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"form-btn\">\r\n            <div class=\"form-actions\">\r\n              <button\r\n                (click)=\"addQuestionSettings()\"\r\n                type=\"button\"\r\n                class=\"btn btn-primary pull-left\"\r\n              >\r\n                إضافة\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { WhatsAppService } from \"./../../../services/whatsApp/whats-app.service\";\r\nimport { AuthService } from \"./../../../../shared/services/auth/auth.service\";\r\nimport { ManageViewsService } from \"app/admin/services/Admin/manage-views.service\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { formValidationService } from \"./../../../../shared/services/formValidation.service\";\r\n\r\n@Component({\r\n  selector: \"app-send-singular-whatsapp-msg\",\r\n  templateUrl: \"./send-singular-whatsapp-msg.component.html\",\r\n  styleUrls: [\"./send-singular-whatsapp-msg.component.scss\"],\r\n})\r\nexport class SendSingularWhatsappMsgComponent implements OnInit {\r\n  EduCompId: any;\r\n  myForm: FormGroup;\r\n  searchForm: FormGroup;\r\n  searchResponse: any;\r\n  errors: string[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private whatsappService: WhatsAppService,\r\n    private authService: AuthService,\r\n    private SearchStudentService: ManageViewsService,\r\n    private spinner: NgxSpinnerService,\r\n    private formValidationService: formValidationService,\r\n    private toastr: ToastrService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authService.getEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [\"\", Validators.required],\r\n      AdminEducationCompanyId: [this.EduCompId, Validators.required],\r\n      msg: [\"\", Validators.required],\r\n      sendToStudentWhatsApp: [false],\r\n      sendToFatherWhatsApp: [false],\r\n      sendToMotherWhatsApp: [false],\r\n    });\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    //form empty?\r\n    if (!this.formValidationService.isFormEmpty(this.searchForm)) {\r\n      this.SearchStudentService.searchStudent(\r\n        this.EduCompId,\r\n        this.searchForm.value\r\n      ).subscribe((response: any) => {\r\n        if (response.returnValue == 1) {\r\n          //show response and set the userId with the coresponding value\r\n          this.searchResponse = response;\r\n          this.myForm.controls.userId.setValue(response.userId);\r\n        }\r\n      });\r\n    } else this.toastr.error(this.translate.instant(\"Response.EmptyForm\"));\r\n  }\r\n\r\n  onSubmit(event: any) {\r\n    //send message request\r\n    event.target.disabled = true;\r\n\r\n    this.whatsappService\r\n      .sendSingularWhatsAppMsg(this.myForm.value)\r\n      .subscribe((response) => {\r\n        event.target.disabled = false;\r\n        if (response) {\r\n          console.log(response);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"container-fluid\">\r\n      <mat-card-title>\r\n        {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"searchForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"sentEmail\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Code\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"sentCenterCode\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <!-- Search Response -->\r\n            <table\r\n              *ngIf=\"searchResponse\"\r\n              class=\"table table-striped table-hover table-full-width rtl\"\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>{{ \"labels.Name\" | translate }}</th>\r\n                  <th>{{ \"labels.Email\" | translate }}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{{ searchResponse.username }}</td>\r\n                  <td>{{ searchResponse.email }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- Search Response -->\r\n\r\n            <mat-card-actions align=\"end\">\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"onSearch()\"\r\n              >\r\n                {{ \"General.Search\" | translate }}\r\n              </button>\r\n            </mat-card-actions>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"searchResponse\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row check-box\">\r\n                    <mat-label class=\"col-12\">\r\n                      {{ \"labels.SendMessageTo\" | translate }}\r\n                    </mat-label>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToStudentWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForStudentsWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToFatherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForFatherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToMotherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForMotherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Message\" | translate }} </mat-label>\r\n                    <textarea\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"msg\"\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <mat-card-actions align=\"end\">\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"onSubmit($event)\"\r\n              >\r\n                {{ \"General.Send\" | translate }}\r\n              </button>\r\n            </mat-card-actions>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"errors?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Labels.FailureList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item disabled\" *ngFor=\"let err of errors\">\r\n                {{ err }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\"></div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  IWhatsAppMsgModel,\r\n  IWhatsAppResponse,\r\n} from \"app/admin/models/whatsApp/whatsApp\";\r\nimport { WhatsAppService } from \"app/admin/services/whatsApp/whats-app.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-send-whatsapp-msg\",\r\n  templateUrl: \"./send-whatsapp-msg.component.html\",\r\n  styleUrls: [\"./send-whatsapp-msg.component.scss\"],\r\n})\r\nexport class SendWhatsappMsgComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  eduCompId: any;\r\n  errors: string[] = [];\r\n\r\n  // get sendToStudentWhatsAppCtrl() {\r\n  //   return this.myForm.get(\"sendToStudentWhatsApp\");\r\n  // }\r\n  // get sendToFatherWhatsAppCtrl() {\r\n  //   return this.myForm.get(\"sendToFatherWhatsApp\");\r\n  // }\r\n  // get sendToMotherWhatsAppCtrl() {\r\n  //   return this.myForm.get(\"sendToMotherWhatsApp\");\r\n  // }\r\n  get msgCtrl() {\r\n    return this.myForm.get(\"msg\");\r\n  }\r\n  get fileCtrl() {\r\n    return this.myForm.get(\"file\");\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private whatsAppService: WhatsAppService,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private fileService: UploadFileService\r\n  ) {\r\n    this.eduCompId = this.authService.getEduCompId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      // sendToStudentWhatsApp: [false],\r\n      // sendToFatherWhatsApp: [false],\r\n      // sendToMotherWhatsApp: [false],\r\n      msg: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      file: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.eduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    // if (\r\n    //   this.sendToStudentWhatsAppCtrl?.value === false &&\r\n    //   this.sendToFatherWhatsAppCtrl?.value === false &&\r\n    //   this.sendToMotherWhatsAppCtrl?.value === false\r\n    // ) {\r\n    //   this.toastr.warning(\r\n    //     \"Please select who can receive your what's app message\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let obj = {} as IWhatsAppMsgModel;\r\n      obj.adminEducationCompanyId = +this.eduCompId;\r\n      // obj.sendToStudentWhatsApp = this.sendToStudentWhatsAppCtrl?.value;\r\n      // obj.sendToFatherWhatsApp = this.sendToFatherWhatsAppCtrl?.value;\r\n      // obj.sendToMotherWhatsApp = this.sendToMotherWhatsAppCtrl?.value;\r\n      obj.msg = this.msgCtrl?.value;\r\n      obj.file = this.fileCtrl?.value;\r\n\r\n      this.spinner.show();\r\n      this.whatsAppService.sendWhatsAppMsg(obj).subscribe((response) => {\r\n        if (response) {\r\n          if ((response as IWhatsAppResponse).isSendAllSuccess) {\r\n            this.toastr.success(\"General.sendToAllSuccess\");\r\n            this.myForm.reset();\r\n          } else if (!(response as IWhatsAppResponse).isSendAllSuccess) {\r\n            //console.log('ERRORS: ', (response as IWhatsAppResponse).errors);\r\n            this.toastr.success(\"General.sendToSomeSuccess\");\r\n            this.errors = (response as IWhatsAppResponse).errors;\r\n          }\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n          this.fileService.resetFileById(\"msg-file\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.MustHasColCodes\" | translate }}\r\n                    '<strong>codes</strong>'\r\n                  </mat-label>\r\n\r\n                  <app-file-input\r\n                    [control]=\"fileCtrl\"\r\n                    accept=\".xlsx,.xls\"\r\n                    htmlId=\"msg-file\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-file-input>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-12\">\r\n                  <div class=\"row check-box\">\r\n                    <mat-label class=\"col-12\">\r\n                      {{ \"labels.SendMessageTo\" | translate }}\r\n                    </mat-label>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToStudentWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForStudentsWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToFatherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForFatherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToMotherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForMotherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                </div> -->\r\n\r\n                <div class=\"col-12 mt-2\">\r\n                  <app-textarea\r\n                    [control]=\"msgCtrl\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Message\"\r\n                    rows=\"2\"\r\n                  ></app-textarea>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <div class=\"alert bg-light-warning mb-2\" role=\"alert\">\r\n                    {{ \"General.maxNoOfUsers\" | translate }}\r\n                    <a class=\"alert-link\"> 9999 </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Send\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"errors?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.FailureList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item disabled\" *ngFor=\"let err of errors\">\r\n                {{ err }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {StructureIndexComponent} from \"./courses/course-structure/structure-index/structure-index.component\";\r\nimport {JobTitleComponent} from \"./job-titles/job-title/job-title.component\";\r\nimport {CategorieComponent} from \"./categories/categries-view/categorie.component\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {ManualCashPaymentComponent} from \"./manual-cash-payment/manual-cash-payment.component\";\r\nimport {GenerateBalanceCodesComponent} from \"./generate-balance-codes/generate-balance-codes.component\";\r\nimport {ManageViewsComponent} from \"./manage-views/manage-views.component\";\r\nimport {SendWhatsappMsgComponent} from \"./send-whatsapp-msg/send-whatsapp-msg.component\";\r\nimport {ExceptionalViewsComponent} from \"./exceptional-views/exceptional-views.component\";\r\nimport {SendSingularWhatsappMsgComponent} from \"./send-singular-whatsapp-msg/send-singular-whatsapp-msg.component\";\r\nimport {AnnouncementSetupComponent} from \"./announcement-setup/announcement-setup.component\";\r\nimport {PointsSetupComponent} from \"./points-setup/points-setup.component\";\r\nimport {DepartmentComponent} from \"./Department/department.component\";\r\nimport {AddCourseComponent} from \"./courses/add-course/add-course.component\";\r\nimport {CourseIndexComponent} from \"./courses/course-index/course-index.component\";\r\nimport {ArticlesSetupComponent} from \"./articles-setup/articles.component\";\r\nimport {AnnouncementIndexComponent} from \"./announcement-index/announcement-index.component\";\r\nimport {GiftsCategoryIndexComponent} from \"./gifts-category/gifts-category-index/gifts-category-index.component\";\r\nimport {GiftsCategoryAddComponent} from \"./gifts-category/gifts-category-add/gifts-category-add.component\";\r\nimport {GiftsIndexComponent} from \"./gifts/gifts-index/gifts-index.component\";\r\nimport {GiftsAddComponent} from \"./gifts/gifts-add/gifts-add.component\";\r\nimport {DiplomaComponent} from \"./diploma/diploma/diploma.component\";\r\nimport {AddUsersToCourseComponent} from \"./courses/add-users-to-course/add-users-to-course.component\";\r\nimport {CourseRequestComponent} from \"./courses/course-requestes/course-requestes.component\";\r\nimport {CourseObjectivesComponent} from \"./courses/course-objectives/course-objectives.component\";\r\nimport {TeachingRequestsComponent} from \"./courses/teaching-requests/teaching-requests.component\";\r\nimport {AddCategoryComponent} from \"./categories/add-category/add-category.component\";\r\nimport {AddDiplomaComponent} from \"app/admin/pages/setup/diploma/add-diploma/add-diploma.component\";\r\nimport {\r\n  MatPartsIndexComponent\r\n} from \"app/admin/pages/educational-setup/EducationalSubject/add-materials/mat-parts-index/mat-parts-index.component\";\r\nimport { AddQuestionsIndexComponent } from \"../exams-setup/exams/add-questions-index/add-questions-index.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"categories\",\r\n    pathMatch: \"full\",\r\n  },\r\n\r\n  {\r\n    path: \"manual-cash-payment\",\r\n    component: ManualCashPaymentComponent,\r\n  },\r\n\r\n  {\r\n    path: \"generate-balance-codes\",\r\n    component: GenerateBalanceCodesComponent,\r\n  },\r\n\r\n  {\r\n    path: \"manage-views\",\r\n    component: ManageViewsComponent,\r\n  },\r\n\r\n  {\r\n    path: \"send-whatsapp-msg\",\r\n    component: SendWhatsappMsgComponent,\r\n    data: {\r\n      breadcrubm: \"Navbar.SendWhatsappMsg\",\r\n      view: \"send-whatsapp-msg\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"send-singular-whatsapp-msg\",\r\n    component: SendSingularWhatsappMsgComponent,\r\n  },\r\n\r\n  {\r\n    path: \"exceptional-views\",\r\n    component: ExceptionalViewsComponent,\r\n  },\r\n\r\n  {\r\n    path: \"announcement-index\",\r\n    component: AnnouncementIndexComponent,\r\n  },\r\n\r\n  {\r\n    path: \"announcement-setup\",\r\n    component: AnnouncementSetupComponent,\r\n  },\r\n\r\n  {\r\n    path: \"points/:courseId\",\r\n    component: PointsSetupComponent,\r\n    data: {\r\n      breadcrumb: \"Navbar.Points\",\r\n      view: \"points\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"categories\",\r\n    component: CategorieComponent,\r\n    data: {\r\n      breadcrumb: \"categories.categories\",\r\n      view: \"categories\",\r\n    },\r\n  },\r\n  {\r\n    path: \"add-category\",\r\n    component: AddCategoryComponent,\r\n    data: {\r\n      breadcrumb: \"categories.categories\",\r\n      view: \"categories\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"department\",\r\n    component: DepartmentComponent,\r\n    data: {\r\n      breadcrumb: \"Departments.allDept\",\r\n      view: \"department\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"articles\",\r\n    component: ArticlesSetupComponent,\r\n    data: {\r\n      breadcrumb: \"articles.articles\",\r\n      view: \"articles\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"course\",\r\n    data: {\r\n      breadcrumb: {\r\n        label: \"course.courses\",\r\n        disable: true,\r\n      },\r\n      //breadcrumb: \"course.courses\",\r\n      view: \"course-index\",\r\n    },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: CourseIndexComponent,\r\n        data: {\r\n          breadcrumb: \"course.courseIndex\",\r\n          view: \"course-index\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"edit-course/:courseId/:isFromRequestPage\",\r\n        component: AddCourseComponent,\r\n        data: {\r\n          breadcrumb: \"course.addCourse\",\r\n          view: \"edit-course\",\r\n        },\r\n      },\r\n      {\r\n        path: \"add-course\",\r\n        component: AddCourseComponent,\r\n        data: {\r\n          breadcrumb: \"course.addCourse\",\r\n          view: \"add-course\",\r\n        },\r\n      },\r\n      {\r\n        path: \"add-employee-to-course/:courseId\",\r\n        component: AddUsersToCourseComponent,\r\n        data: {\r\n          breadcrumb: \"course.AddEmployeeToCourse\",\r\n          view: \"add-employee-to-course\",\r\n        },\r\n      },\r\n      {\r\n        path: \"learning-request\",\r\n        component: CourseRequestComponent,\r\n        data: {\r\n          breadcrumb: \"Navbar.LeRequest\",\r\n          view: \"learning-request\",\r\n        },\r\n      },\r\n      {\r\n        path: \"teaching-request\",\r\n        component: TeachingRequestsComponent,\r\n        data: {\r\n          breadcrumb: \"Navbar.TeachRequests\",\r\n          view: \"teaching-request\",\r\n        },\r\n      },\r\n      {\r\n        path: \"structure-exam/:examId/:examGroupHeaderId/:subjectId\",\r\n        component: AddQuestionsIndexComponent,\r\n        data: {\r\n          view: \"structure-exam\",\r\n        },\r\n      },\r\n      {\r\n        path: \"course-structure/:courseId\",\r\n        component: StructureIndexComponent,\r\n        data: {\r\n          breadcrumb: \"labels.SubjectStructure\",\r\n          view: \"course-structure\",\r\n        },\r\n      },\r\n      {\r\n        path: \"structure-lectures\",\r\n        component: MatPartsIndexComponent,\r\n        data: {\r\n          view: \"structure-lectures\",\r\n        },\r\n      },\r\n      {\r\n        path: \"course-objectives/:courseId\",\r\n        component: CourseObjectivesComponent,\r\n        data: {\r\n          breadcrumb: \"course.Objectives\",\r\n          view: \"course-objectives\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"job-title\",\r\n    component: JobTitleComponent,\r\n    data: {\r\n      breadcrumb: \"JobTitle.alljob\",\r\n      view: \"job-title\",\r\n    },\r\n  },\r\n  {\r\n    path: \"gift-category\",\r\n    component: GiftsCategoryIndexComponent,\r\n    data: {\r\n      breadcrumb: \"Gifts.GiftsCategory\",\r\n      view: \"gift-category\",\r\n    },\r\n  },\r\n  {\r\n    path: \"add-gift-category\",\r\n    component: GiftsCategoryAddComponent,\r\n    data: {\r\n      breadcrumb: \"Gifts.addGiftsCategory\",\r\n      view: \"add-gift-category\",\r\n    },\r\n  },\r\n  {\r\n    path: \"gift-index\",\r\n    component: GiftsIndexComponent,\r\n    data: {\r\n      breadcrumb: \"Gifts.Gifts\",\r\n      view: \"gift-index\",\r\n    },\r\n  },\r\n  {\r\n    path: \"gift-add\",\r\n    component: GiftsAddComponent,\r\n    data: {\r\n      breadcrumb: \"Gifts.AddGift\",\r\n      view: \"gift-add\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"diploma\",\r\n    data: {\r\n      breadcrumb: \"course.Diplomas\",\r\n      view: \"diploma\",\r\n    },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: DiplomaComponent,\r\n        data: {\r\n          breadcrumb: \"course.Diplomas\",\r\n          view: \"course-index\",\r\n        },\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddDiplomaComponent,\r\n        data: {\r\n          breadcrumb: \"course.createDiploma\",\r\n          view: \"diploma-index\",\r\n        },\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddDiplomaComponent,\r\n        data: {\r\n          breadcrumb: \"course.createDiploma\",\r\n          view: \"add-diploma\",\r\n        },\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SetupRoutingModule {\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { SetupRoutingModule } from \"./setup-routing.module\";\r\nimport { ManageViewsComponent } from \"./manage-views/manage-views.component\";\r\nimport { GenerateBalanceCodesComponent } from \"./generate-balance-codes/generate-balance-codes.component\";\r\nimport { ManualCashPaymentComponent } from \"./manual-cash-payment/manual-cash-payment.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { SendWhatsappMsgComponent } from \"./send-whatsapp-msg/send-whatsapp-msg.component\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { ExceptionalViewsComponent } from \"./exceptional-views/exceptional-views.component\";\r\nimport { QuestionStudentsSettingsComponent } from \"./question-student-settings/question-student-settings.component\";\r\nimport { CategorieComponent } from \"./categories/categries-view/categorie.component\";\r\nimport { SendSingularWhatsappMsgComponent } from \"./send-singular-whatsapp-msg/send-singular-whatsapp-msg.component\";\r\nimport { PointsSetupComponent } from \"./points-setup/points-setup.component\";\r\nimport { AnnouncementSetupComponent } from \"./announcement-setup/announcement-setup.component\";\r\nimport { DepartmentComponent } from \"./Department/department.component\";\r\nimport { AddCourseComponent } from \"./courses/add-course/add-course.component\";\r\nimport { CourseIndexComponent } from \"./courses/course-index/course-index.component\";\r\nimport { ArticlesSetupComponent } from \"./articles-setup/articles.component\";\r\nimport { AnnouncementIndexComponent } from \"./announcement-index/announcement-index.component\";\r\nimport { JobTitleComponent } from \"./job-titles/job-title/job-title.component\";\r\nimport { GiftsCategoryIndexComponent } from \"./gifts-category/gifts-category-index/gifts-category-index.component\";\r\nimport { GiftsCategoryAddComponent } from \"./gifts-category/gifts-category-add/gifts-category-add.component\";\r\nimport { GiftsIndexComponent } from \"./gifts/gifts-index/gifts-index.component\";\r\nimport { GiftsAddComponent } from \"./gifts/gifts-add/gifts-add.component\";\r\nimport { UpdateJobDepartmentComponent } from \"./job-titles/update-job-department/update-job-department.component\";\r\nimport { EditJobTitleDatesComponent } from \"../../../shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component\";\r\nimport { DiplomaComponent } from \"./diploma/diploma/diploma.component\";\r\nimport { AddUsersToCourseComponent } from \"./courses/add-users-to-course/add-users-to-course.component\";\r\nimport { CourseRequestComponent } from \"./courses/course-requestes/course-requestes.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { StructureIndexComponent } from \"./courses/course-structure/structure-index/structure-index.component\";\r\nimport { AddUnitComponent } from \"./courses/course-structure/add-unit/add-unit.component\";\r\nimport { AddUnitAttachmentComponent } from \"./courses/course-structure/add-unit-attachment/add-unit-attachment.component\";\r\nimport { CourseObjectivesComponent } from \"./courses/course-objectives/course-objectives.component\";\r\nimport { TeachingRequestsComponent } from \"./courses/teaching-requests/teaching-requests.component\";\r\nimport { AddCategoryComponent } from \"./categories/add-category/add-category.component\";\r\nimport {AddDiplomaComponent} from \"app/admin/pages/setup/diploma/add-diploma/add-diploma.component\";\r\nimport { EditOptionsDialogComponent } from \"./courses/edit-options-dialog/edit-options-dialog.component\";\r\nimport { AddQuestionsIndexComponent } from \"../exams-setup/exams/add-questions-index/add-questions-index.component\";\r\nimport { SaveExamDialogComponent } from \"../exams-setup/exams/save-exam-dialog/save-exam-dialog.component\";\nimport { ExamsIntegrationComponent } from './courses/course-structure/exams-integration/exams-integration.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GenerateBalanceCodesComponent,\r\n    ManualCashPaymentComponent,\r\n    ManageViewsComponent,\r\n    SendWhatsappMsgComponent,\r\n    ExceptionalViewsComponent,\r\n    QuestionStudentsSettingsComponent,\r\n    CategorieComponent,\r\n    SendSingularWhatsappMsgComponent,\r\n    PointsSetupComponent,\r\n    AnnouncementSetupComponent,\r\n    DepartmentComponent,\r\n    AddCourseComponent,\r\n    CourseIndexComponent,\r\n    ArticlesSetupComponent,\r\n    AnnouncementIndexComponent,\r\n    JobTitleComponent,\r\n    GiftsCategoryIndexComponent,\r\n    GiftsCategoryAddComponent,\r\n    GiftsIndexComponent,\r\n    GiftsAddComponent,\r\n    UpdateJobDepartmentComponent,\r\n    EditJobTitleDatesComponent,\r\n    DiplomaComponent,\r\n    AddUsersToCourseComponent,\r\n    CourseRequestComponent,\r\n    StructureIndexComponent,\r\n    AddUnitComponent,\r\n    AddUnitAttachmentComponent,\r\n    CourseObjectivesComponent,\r\n    TeachingRequestsComponent,\r\n    AddCategoryComponent,\r\n    AddDiplomaComponent,\r\n    EditOptionsDialogComponent,\r\n    AddQuestionsIndexComponent,\r\n    SaveExamDialogComponent,\r\n    ExamsIntegrationComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SetupRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    NgxPaginationModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n  exports: [DepartmentComponent],\r\n})\r\nexport class SetupModule {}\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IAddEditBranchModel,\r\n  IBranchesViewModel,\r\n  IBranchModel,\r\n  IDistrictDropModel,\r\n} from \"app/admin/models/roles/function\";\r\nimport { BranchesService } from \"app/admin/services/roles/branches.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-center-branches\",\r\n  templateUrl: \"./center-branches.component.html\",\r\n  styleUrls: [\"./center-branches.component.scss\"],\r\n})\r\nexport class CenterBranchesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n  itemsCount: number = 0;\r\n  curPage: number = 1;\r\n\r\n  branches: IBranchModel[] = [];\r\n  // districts: IDistrictDropModel[] = [];\r\n\r\n  displayedColumns: string[] = [\"#\", \"Name\", /* \"districtName\", */ \"actions\"];\r\n  dataSource: MatTableDataSource<IBranchModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: MessagesService,\r\n    private branchService: BranchesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //console.log(`row Functions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchId: [0],\r\n      branchName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      //address: [null],\r\n      districtId: [null],\r\n    });\r\n\r\n    this.getAllBranches(this.curPage);\r\n    // this.getAllRegions();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllBranches(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // getAllRegions() {\r\n  //   this.branchService\r\n  //     .getAllDistricts<IDistrictDropModel[]>()\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         // console.log(\"districts: \", response);\r\n  //         this.districts = response;\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  getAllBranches(pageNumber: number) {\r\n    this.spinner.show();\r\n    this.curPage = pageNumber;\r\n    // console.log(\"Educom\", this.EduCompId);\r\n    this.branchService\r\n      .getAllAllCenterBranches<IBranchesViewModel>(this.EduCompId, pageNumber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"branches: \", response);\r\n          this.branches = response.centerBrnachesList;\r\n          this.dataSource = new MatTableDataSource(response.centerBrnachesList);\r\n          this.itemsCount = response.itemsCount;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editBranch(branch: IBranchModel) {\r\n    this.FormCtrls.branchId?.setValue(branch.Id);\r\n    this.FormCtrls.branchName?.setValue(branch.Name);\r\n    //this.FormCtrls.address?.setValue(branch.address);\r\n    // this.FormCtrls.districtId?.setValue(branch.districtId);\r\n  }\r\n\r\n  removeBranch(branch: IBranchModel) {\r\n    this.spinner.show();\r\n    this.branchService.deleteBranch(branch.Id).subscribe((response: any) => {\r\n      if (response) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllBranches(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllBranches(this.curPage);\r\n        }\r\n        if (branch.Id == this.FormCtrls.branchId.value) this.clearForm();\r\n        // console.log(\"user: \", response);\r\n      } else this.msg.error(response.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditBranchModel;\r\n      obj.Id = this.FormCtrls.branchId?.value;\r\n      obj.Name = this.FormCtrls.branchName?.value;\r\n      obj.districtId = this.FormCtrls.districtId?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n      //  console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.branchService\r\n        .addEditBranches<IAddEditBranchModel, any>(obj)\r\n        .subscribe((response) => {\r\n          if (response && response.returnValue === 200) {\r\n            // console.log(\"created: \", response);\r\n            if (obj.Id == 0) {\r\n              this.getAllBranches(1); // first page after add\r\n              this.dataSource.paginator = this.paginator;\r\n            } else {\r\n              this.getAllBranches(this.curPage); // current page after update\r\n            }\r\n\r\n            this.msg.success(\r\n              obj.Id == 0\r\n                ? \"General.AddSuccessfully\"\r\n                : \"General.UpdateSuccessfully\"\r\n            );\r\n\r\n            this.clearForm();\r\n          } else this.msg.error(response?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(branch: IBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.branchId.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.branchId.value == 0\r\n            ? \"labels.CreateCenterBranch\"\r\n            : \"labels.UpdateCenterBranch\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.branchName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Name\"\r\n                    autocomplete=\"new-password\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Region\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"districtId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let dis of districts\"\r\n                        [value]=\"dis.Id\"\r\n                      >\r\n                        {{ dis.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>\r\n                      <input-validation-msg\r\n                        [control]=\"FormCtrls.districtId\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\"\r\n                      >\r\n                      </input-validation-msg>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"FormCtrls.branchId.value == 0\"></i>\r\n          {{\r\n            (FormCtrls.branchId.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.branchId.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.CenterBranches\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">{{ branch.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- region Column -->\r\n            <!-- <ng-container matColumnDef=\"districtName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Region\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.districtName }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editBranch(branch)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(branch)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllBranches($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"./../../../../shared/validators/customeValid.validator\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionViewModel,\r\n  IAddEditFunctionModel,\r\n} from \"app/admin/models/roles/function\";\r\nimport { IFunctionsModel } from \"app/admin/models/roles/roles\";\r\nimport { FunctionsService } from \"app/admin/services/roles/functions.service\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-functions-setup\",\r\n  templateUrl: \"./functions-setup.component.html\",\r\n  styleUrls: [\"./functions-setup.component.scss\"],\r\n})\r\nexport class FunctionsSetupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  itemsCount: any;\r\n  functions: IFunctionsModel[] = [];\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  get functionIdCtrl() {\r\n    return this.myForm.get(\"functionId\");\r\n  }\r\n  get functionNameEnCtrl() {\r\n    return this.myForm.get(\"functionNameEn\");\r\n  }\r\n  get functionNameArCtrl() {\r\n    return this.myForm.get(\"functionNameAr\");\r\n  }\r\n  get linkCtrl() {\r\n    return this.myForm.get(\"link\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\"#\", \"arName\", \"enName\", \"link\", \"actions\"];\r\n  dataSource: MatTableDataSource<IFunctionsModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private functionService: FunctionsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      functionId: [0],\r\n      functionNameEn: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      functionNameAr: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      link: [null],\r\n    });\r\n\r\n    this.getAllFunctions(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllFunctions(pageNumber: number) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IFunctionViewModel>(pageNumber, false)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"functions: \", response);\r\n          this.functions = response.functions;\r\n          this.dataSource = new MatTableDataSource(response.functions);\r\n          this.itemsCount = response.itemsCount;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editFunction(func: IFunctionsModel) {\r\n    this.functionIdCtrl?.setValue(func.Id);\r\n    this.functionNameEnCtrl?.setValue(func.function_en_name);\r\n    this.functionNameArCtrl?.setValue(func.functionName);\r\n    this.linkCtrl?.setValue(func.functionURL);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeFunction(func: IFunctionsModel) {\r\n    this.spinner.show();\r\n    this.functionService.deleteFunction(func.Id).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"function: \", response);\r\n        this.getAllFunctions(1);\r\n        this.msg.success(\"تم مسح الوظيفه بنجاح\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditFunctionModel;\r\n      obj.Id = this.functionIdCtrl?.value;\r\n      obj.functionName = this.functionNameArCtrl?.value;\r\n      obj.function_en_name = this.functionNameEnCtrl?.value;\r\n      obj.functionURL = this.linkCtrl?.value;\r\n\r\n      // console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.functionService\r\n        .addEditFunction<IAddEditFunctionModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.addBtn.nativeElement.innerText = \"Add\";\r\n          this.submitted = false;\r\n          if (response && response.returnValue === 200) {\r\n            //console.log(\"created: \", response);\r\n\r\n            this.getAllFunctions(1);\r\n            this.msg.success(\"تم إضافه/تعديل البيانات الوظيفه بنجاح\");\r\n            this.myForm.reset();\r\n            // console.log(\"functions: \", this.functions);\r\n          }\r\n          this.spinner.show();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(func: IFunctionsModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeFunction(func);\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateFunction\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameAr\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameArCtrl.invalid &&\r\n                        (functionNameArCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameArCtrl.errors?.required ||\r\n                          functionNameArCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameEn\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameEnCtrl.invalid &&\r\n                        (functionNameEnCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameEnCtrl.errors?.required ||\r\n                          functionNameEnCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Link\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"link\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Functions\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- arName Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.function_en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- link Column -->\r\n            <ng-container matColumnDef=\"link\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Link\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionURL }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let func\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editFunction(func)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(func)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllFunctions($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IRolesViewModel } from \"app/admin/models/roles/roles\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-role\",\r\n  templateUrl: \"./add-role.component.html\",\r\n  styleUrls: [\"./add-role.component.scss\"],\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  roles: IRolesViewModel[] = [];\r\n  EduCompId: any;\r\n  get roleIdCtrl() {\r\n    return this.myForm.get(\"roleId\");\r\n  }\r\n  get roleNameCtrl() {\r\n    return this.myForm.get(\"roleName\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\"#\", \"roleName\", \"actions\"];\r\n  dataSource: MatTableDataSource<IRolesViewModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: MessagesService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      roleId: [0],\r\n      roleName: [null, [Validators.required]],\r\n    });\r\n    this.getAllRoles();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllRoles();\r\n    });\r\n  }\r\n\r\n  getAllRoles() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllRoles<IRolesViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.roles = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editRole(role: IRolesViewModel) {\r\n    this.roleIdCtrl?.setValue(role.Id);\r\n    this.roleNameCtrl?.setValue(role.roleName);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.roleNameCtrl?.value) {\r\n      this.msg.warning(\"يرجي إدخال اسم الصلاحيه\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IRolesViewModel;\r\n      obj.Id = this.roleIdCtrl?.value;\r\n      obj.roleName = this.roleNameCtrl.value;\r\n      obj.EduCompId = this.EduCompId;\r\n      console.log(\"role model\", obj);\r\n      this.roleService\r\n        .addEditRole<IRolesViewModel, any>(obj)\r\n        .subscribe((response) => {\r\n          if (response && response.returnValue === 200) {\r\n            if (this.roleIdCtrl?.value == 0) {\r\n              this.getAllRoles();\r\n\r\n              this.dataSource.paginator.firstPage();\r\n              this.msg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              this.getAllRoles();\r\n              this.msg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.myForm.reset();\r\n            this.roleIdCtrl?.setValue(0);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(role: IRolesViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: role.roleName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeRole(role);\r\n      });\r\n  }\r\n\r\n  removeRole(role: IRolesViewModel) {\r\n    this.spinner.show();\r\n    this.roleService.deleteRole(role.Id).subscribe((response: any) => {\r\n      if (response.returnString == \"Success\") {\r\n        this.getAllRoles();\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n      } else this.msg.warning(response.returnString);\r\n      if (this.roleIdCtrl.value) this.myForm.reset();\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.roleIdCtrl.setValue(0);\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRole\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <app-input\r\n                    [control]=\"roleNameCtrl\"\r\n                    label=\"labels.Name\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"roleIdCtrl.value == 0\"></i>\r\n          {{\r\n            (roleIdCtrl.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"roleIdCtrl.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Roles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"roleName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let role\">{{ role.roleName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let role\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editRole(role)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(role)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/users/role-fuctions/{{ role.Id }}\"\r\n                    [queryParams]=\"{ parentId: functionId, functionId: fun.Id }\"\r\n                    *ngIf=\"fun.functionName === 'Functions'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"add functions\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRoleFunctions\" | translate }}\r\n        <a\r\n      mat-raised-button\r\n      class=\"btn btn-warning bg-light-warning float-right\"\r\n      routerLink=\"/dashboard/roles\"\r\n      [queryParams]=\"{\r\n        functionId: functionId\r\n      }\"\r\n\r\n\r\n    >\r\n\r\n      {{ \"General.Back\" | translate }}\r\n    </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <mat-checkbox\r\n                  [checked]=\"allChecked\"\r\n                  (change)=\"SelectAll()\"\r\n                  color=\"accent\"\r\n                  class=\"mb-1\"\r\n                >\r\n                  {{ \"General.SelectAll\" | translate }}\r\n                </mat-checkbox>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\" *ngFor=\"let group of groupFunctions\">\r\n                <mat-card>\r\n                  <mat-card-title>{{\r\n                    group.classificationName | translate\r\n                  }}</mat-card-title>\r\n                  <mat-card-content>\r\n                    <div class=\"row\">\r\n                      <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                      <div\r\n                        class=\"col-12 col-xl-6\"\r\n                        *ngFor=\"let func of group.functions; let i = index\"\r\n                      >\r\n                        <mat-checkbox\r\n                          id=\"functions{{ func.Id }}\"\r\n                          (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                          [checked]=\"rolefunctionIds.includes(func.Id)\"\r\n                        >\r\n                          {{ func.functionName | translate }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onAddFunctions()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionsModel,\r\n  IRoleFunctionsModel,\r\n  IAddEditRoleFunctionsModel,\r\n  IGroupFunctionsModel,\r\n} from \"app/admin/models/roles/roles\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-role-functions\",\r\n  templateUrl: \"./role-functions.component.html\",\r\n  styleUrls: [\"./role-functions.component.scss\"],\r\n})\r\nexport class RoleFunctionsComponent implements OnInit {\r\n  roleId: number;\r\n  functionId: number;\r\n\r\n  functions: IFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsModel[] = [];\r\n  roleFunctions: IRoleFunctionsModel[] = [];\r\n  rolefunctionIds: number[] = [];\r\n  roleName: string = \"\";\r\n  allChecked: boolean = false;\r\n  allFunctionsLength = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.roleId =Number( param.get(\"roleId\"));\r\n\r\n    });\r\n    this.route.queryParamMap.subscribe((param) => {\r\n      this.functionId =Number( param.get(\"parentId\"));\r\n\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllFunctions();\r\n    this.getAllRoleFunctions();\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IGroupFunctionsModel[]>(0, true)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.groupFunctions = response;\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength =\r\n              this.allFunctionsLength + g.functions.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllRoleFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllRoleFunctions<IRoleFunctionsModel[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.roleFunctions = response;\r\n          this.roleName = this.roleFunctions[0].roleName;\r\n\r\n          for (let i = 0; i < this.roleFunctions.length; i++) {\r\n            this.rolefunctionIds.push(this.roleFunctions[i].function.Id);\r\n          }\r\n\r\n          if (this.rolefunctionIds.length === this.allFunctionsLength)\r\n            this.allChecked = true;\r\n          else this.allChecked = false;\r\n          //  console.log(\"edit functions IDs\", this.rolefunctionIds);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.rolefunctionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.rolefunctionIds.findIndex((id) => id === functionId);\r\n      this.rolefunctionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.rolefunctionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.functions.forEach((e) => {\r\n          let found = this.rolefunctionIds.includes(e.Id);\r\n          if (!found) this.rolefunctionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.rolefunctionIds = [];\r\n    }\r\n  }\r\n\r\n  onAddFunctions() {\r\n    let obj = {} as IAddEditRoleFunctionsModel;\r\n    obj.roleId = this.roleId;\r\n    obj.functionsList = this.rolefunctionIds;\r\n    // if (obj.functionsList.length == 0) {\r\n    //   this.msg.warning(\"يجب اختيار ظيفة واحده علي الاقل\");\r\n    //   return;\r\n    //   } else {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .addEditRoleFunctions<IAddEditRoleFunctionsModel, any>(obj)\r\n      .subscribe((response) => {\r\n        if (response && response.returnValue === 200) {\r\n          this.msg.success(\"General.AddSuccessfully\");\r\n          ///  console.log(\"add/edit functions: \", response);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    //  }\r\n  }\r\n}\r\n","import { GroupByService } from \"./../../../../shared/services/General/group-by.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IGroupFunctionsListVM,\r\n  IRoleFunctionsModel,\r\n} from \"app/admin/models/roles/roles\";\r\nimport {\r\n  IBranchViewModel,\r\n  IUserBranchModel,\r\n  IUserBranchFunctionViewModel,\r\n  IUserFunctionModel,\r\n  IAddUserBranchFunctionsModel,\r\n  IBranchUserModel,\r\n  IUserModel,\r\n} from \"app/admin/models/roles/user\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { UsersService } from \"app/admin/services/roles/users.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-user-branches-roles\",\r\n  templateUrl: \"./user-branches-roles.component.html\",\r\n  styleUrls: [\"./user-branches-roles.component.scss\"],\r\n})\r\nexport class UserBranchesRolesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  userId: number;\r\n  roleId: number;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  allFunctionsLength = 0;\r\n  submitted: boolean = false;\r\n  allChecked: boolean = false;\r\n  branches: IBranchViewModel[] = [];\r\n  // functions: IRoleFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsListVM[] = [];\r\n  functionIds: number[] = [];\r\n  checkedfunctionIds: number[] = [];\r\n  rowFunctions: IRowFunctionVM[];\r\n  userBranchesWithFunctions: IUserBranchModel[] = [];\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"branchName\",\r\n    \"FunctionName\",\r\n    \"from\",\r\n    \"to\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserBranchModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: ToastrService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    private roleService: RolesService,\r\n    private groupByService: GroupByService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.userId = Number(param.get(\"userId\"));\r\n      this.roleId = Number(param.get(\"roleId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchsIds\");\r\n  }\r\n  get fromDateCtrl() {\r\n    return this.myForm.get(\"fromDate\");\r\n  }\r\n  get toDateCtrl() {\r\n    return this.myForm.get(\"toDate\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchsIds: [[]],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n    });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    this.getAllBranchesByCenter();\r\n    this.getAllFunctions();\r\n    this.getAllUserBranchesWithFunctions();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllBranchesByCenter() {\r\n    this.spinner.show();\r\n    this.userService\r\n      .getAllBranchesByCenter<IBranchViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"branches: \", response);\r\n          this.branches = response;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctionsByRoleId<IGroupFunctionsListVM[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"functions by roleId: \", response);\r\n          this.groupFunctions = this.groupByService.groupBy(\r\n            response,\r\n            \"classificationName\"\r\n          );\r\n\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength = this.allFunctionsLength + g.List.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.functionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.functionIds.findIndex((id) => id === functionId);\r\n      this.functionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.List.forEach((e) => {\r\n          let found = this.functionIds.includes(e.Id);\r\n          if (!found) this.functionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.functionIds = [];\r\n    }\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllUserBranchesWithFunctions<IUserBranchFunctionViewModel>(\r\n        this.userId\r\n      )\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //   console.log(\"brances with functions for user: \", response);\r\n          this.userBranchesWithFunctions = response.branchUserList;\r\n          this.dataSource = new MatTableDataSource(response.branchUserList);\r\n          for (let funParent of this.userBranchesWithFunctions) {\r\n            for (let fun of funParent.roleFunctionsList) {\r\n              this.checkedfunctionIds.push(fun.Id);\r\n            }\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeBranch(branch: IUserBranchModel) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserBranchRoleFunction(this.userId, branch.branchId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"remove brances with functions: \", response);\r\n          let i = this.dataSource.data.findIndex((e) => e == branch);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"branch has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onDeleteFunction(func: any) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserRoleFunctions(func.centerBranchUserFuncId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"remove function: \", response);\r\n          this.getAllUserBranchesWithFunctions();\r\n          this.msg.success(\"function has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // console.log(this.branchIdCtrl?.value);\r\n    if (this.functionIds.length <= 0) {\r\n      this.msg.warning(\"Must select at least one function\");\r\n      return;\r\n    }\r\n\r\n    if (this.branchIdCtrl?.value.length == 0) {\r\n      this.msg.warning(\"Must select at least one branch\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddUserBranchFunctionsModel;\r\n      obj.roleFunctionsIds = this.functionIds;\r\n      obj.branchsIds = this.branchIdCtrl?.value;\r\n      obj.branchUser = {} as IBranchUserModel;\r\n      obj.branchUser.userId = this.userId;\r\n      obj.branchUser.branchId = 0;\r\n      obj.branchUser.from = this.datePipe.transform(this.fromDateCtrl.value);\r\n      obj.branchUser.to = this.datePipe.transform(this.toDateCtrl.value);\r\n\r\n      this.roleService\r\n        .addUserBranchesAndRoleFunctions(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n          if (response) {\r\n            //console.log(\"add new branch with functions: \", response);\r\n            this.getAllUserBranchesWithFunctions();\r\n            this.msg.success(\"branch has been added success\");\r\n            this.myForm.reset();\r\n            this.functionIds = [];\r\n            this.checkedfunctionIds = [];\r\n            this.allChecked = false;\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(branch: IUserBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.branchName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n\r\n  openDeleateFunctionDialog(func: IUserFunctionModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.onDeleteFunction(func);\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddUserBranchesAndRoles\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\"  >\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label\r\n                      >{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchsIds\" multiple>\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let branch of branches\"\r\n                        [value]=\"branch.Id\"\r\n                      >\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        branchIdCtrl.invalid &&\r\n                        (branchIdCtrl.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"branchIdCtrl.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-checkbox\r\n                    [checked]=\"allChecked\"\r\n                    (change)=\"SelectAll()\"\r\n                    color=\"accent\"\r\n                  >\r\n                    {{ \"General.SelectAll\" | translate }}\r\n                  </mat-checkbox>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"col-md-4 col-12\"\r\n                  *ngFor=\"let group of groupFunctions; let i = index\"\r\n                >\r\n                  <mat-card>\r\n                    <mat-card-title>{{ group.key | translate }}</mat-card-title>\r\n                    <mat-card-content>\r\n                      <div class=\"row\">\r\n                        <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                        <div\r\n                          class=\"col-12 col-xl-6\"\r\n                          *ngFor=\"let func of group.List; let i = index\"\r\n                        >\r\n                          <mat-checkbox\r\n                            id=\"functions{{ func.Id }}\"\r\n                            (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                            [checked]=\"functionIds.includes(func.Id)\"\r\n                          >\r\n                            {{ func.function.function_en_name | translate }}\r\n                          </mat-checkbox>\r\n                        </div>\r\n                      </div>\r\n                    </mat-card-content>\r\n                  </mat-card>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Save\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.UserBranchesAndRoles\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input matInput (keyup)=\"applyFilter($event)\" #input />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"branchName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.branchName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"FunctionName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FunctionName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <tr *ngFor=\"let func of branch.roleFunctionsList; index as i\">\r\n                  <td>{{ func.functionName | translate }}</td>\r\n                  <td>\r\n                    <a (click)=\"openDeleateFunctionDialog(func)\">\r\n                      <i class=\"fa fa-times fa fa-white\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.from | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.to | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(branch)\"\r\n                    class=\"danger p-0\"\r\n                     matTooltip=\"Delete\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input?.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { LanguageService } from \"app/shared/services/language.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  GetJobDepartment,\r\n  JobTitleByDepartment,\r\n  JopDepViewModel,\r\n} from \"app/admin/models/setup/job-title-by-department\";\r\nimport { JopTitleDepartmentService } from \"app/admin/services/setup/job-title-department.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { UpdateDateComponent } from \"app/shared/components/dialogs/update-date/update-date.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-deparment-jop-title\",\r\n  templateUrl: \"./deparment-job-title.component.html\",\r\n  styleUrls: [\"./deparment-job-title.component.scss\"],\r\n})\r\nexport class UserDeparmentAndJobTitleComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  alljoblist: GetJobDepartment[] = [];\r\n\r\n  displayedColumns: string[] = [\r\n    \"id\",\r\n    \"dept_en_name\",\r\n    \"dept_ar_name\",\r\n    \"JobTitle\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<JobTitleByDepartment>;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  currentDate = new Date();\r\n\r\n  functionId: number;\r\n  EduCompId: number;\r\n  functionParentId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions = [\r\n  //   { functionName: \"Edit\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"UpdateArticalJob\" },\r\n  //   { functionName: \"DeleteArticalJob\" },\r\n  // ];\r\n  userId: number;\r\n  username: string;\r\n  jopTitle = [];\r\n  dep_id: number = 0;\r\n  curPage: number = 1;\r\n  initTable: boolean = true;\r\n  // deptsForUser: JobTitleByDepartment[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private jopTitleDepartmentService: JopTitleDepartmentService,\r\n    private toastr: MessagesService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    public authserv: AuthService,\r\n    private datePipe: DatePipe,\r\n    public languageService: LanguageService\r\n  ) {\r\n    //get userid\r\n    route.paramMap.subscribe((params) => {\r\n      this.userId = Number(params.get(\"userId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.functionParentId = Number(params.get(\"parentId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getall(1);\r\n\r\n    this.myForm = this.fb.group(\r\n      {\r\n        dept_id: [0, [Validators.required]],\r\n        job_departments: [\r\n          {\r\n            value: \"\",\r\n            disabled: true,\r\n          },\r\n          [Validators.required],\r\n        ],\r\n        from_date: [null],\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(e: string) {\r\n    this.dataSource.filter = e.trim().toLowerCase();\r\n  }\r\n\r\n  customFilter() {\r\n    this.dataSource.filterPredicate = (data: JobTitleByDepartment, filter) => {\r\n      return (\r\n        data.dept_ar_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.dept_en_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.job_departments\r\n          ?.map((d) => d.job_ar_name)\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1 ||\r\n        data.job_departments\r\n          ?.map((d) => d.job_en_name)\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1\r\n      );\r\n    };\r\n  }\r\n\r\n  getall(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    return this.jopTitleDepartmentService\r\n      .getJopTitlebyDepartment<JopDepViewModel>(this.userId, page)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.dataSource = new MatTableDataSource(\r\n            data.userDepartmentJobtitleList\r\n          );\r\n          this.itemsCounts = data.itemsCounts;\r\n          // this.deptsForUser = data.userDepartmentJobtitleList;\r\n          this.username = data.employee_name;\r\n          // console.log(this.deptsForUser)\r\n          this.startSortingTable();\r\n          this.customFilter();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"JobTitle\":\r\n          return this.languageService.isArabic\r\n            ? item.job_departments[0]?.job_en_name\r\n            : item.job_departments[0]?.job_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  addAll() {\r\n    this.submitted = true;\r\n    // console.log(\"ff\", model);\r\n    if (this.myForm.valid) {\r\n      const model = {\r\n        user_id: this.userId,\r\n        jobTitle_dept_id: this.formCtrls[\"job_departments\"].value,\r\n        from_date: this.datePipe.transform(\r\n          this.myForm.value.from_date ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.myForm.value.to_date),\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.jopTitleDepartmentService\r\n        .addJopTitlebyDepartment(model)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            // console.log(\"add\", model);\r\n            this.getall(1); // first page after add\r\n            this.dataSource.paginator = this.paginator;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n            this.clearForm();\r\n            // console.log(this.myForm.value);\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  updetAll() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      // let allDepJobIds: number[] = this.formCtrls[\"job_departments\"].value;\r\n      // this.deptsForUser.forEach((dep) => {\r\n      //   if (dep.dept_id != this.dep_id) {\r\n      //     dep.job_departments.forEach((job) =>\r\n      //       allDepJobIds.push(job.dep_job_id)\r\n      //     );\r\n      //   }\r\n      // });\r\n      // console.log(allDepJobIds)\r\n      const model = {\r\n        user_id: this.userId,\r\n        jobTitle_dept_id: this.formCtrls.job_departments.value,\r\n        from_date: this.datePipe.transform(\r\n          this.myForm.value.from_date ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.myForm.value.to_date),\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.jopTitleDepartmentService\r\n        .editAllDeparment(model, this.formCtrls[\"dept_id\"].value)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.getall(this.curPage);\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.clearForm();\r\n            this.dep_id = 0;\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  editAll(department: JobTitleByDepartment) {\r\n    //  this.myForm.patchValue(department);\r\n    this.dep_id = department.dept_id;\r\n    this.formCtrls[\"dept_id\"].setValue(department.dept_id);\r\n    this.formCtrls[\"job_departments\"]?.setValue(\r\n      department.job_departments.map((j) => j.dep_job_id)\r\n    );\r\n  }\r\n\r\n  editDate(editjobTitle: GetJobDepartment) {\r\n    this.dialog\r\n      .open(UpdateDateComponent, {\r\n        data: {\r\n          user_dept_job_id: editjobTitle.user_dept_job_id,\r\n          from_date: editjobTitle.from_date,\r\n          to_date: editjobTitle.to_date,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n        if (res) this.getall(this.curPage);\r\n      });\r\n  }\r\n\r\n  deleteUserDeptJobTitle(depId: JobTitleByDepartment) {\r\n    this.spinner.show();\r\n    this.jopTitleDepartmentService\r\n      .deleteUserDeptJobTitle(this.userId, depId.dept_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          if (depId.dept_id == this.formCtrls.dept_id.value) this.clearForm();\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getall(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getall(this.curPage);\r\n          }\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(depId: JobTitleByDepartment): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? depId.dept_en_name\r\n            : depId.dept_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUserDeptJobTitle(depId);\r\n      });\r\n  }\r\n\r\n  deleteJopTitle(jopid: GetJobDepartment) {\r\n    this.spinner.show();\r\n    this.jopTitleDepartmentService\r\n      .deleteJopTitle(jopid.user_dept_job_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          this.getall(this.curPage);\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialogJop(jopid: GetJobDepartment): void {\r\n    // console.log(\"id\", jopid.user_dept_job_id);\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? jopid.job_ar_name\r\n            : jopid.job_en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJopTitle(jopid);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls[\"dept_id\"]?.setValue(0);\r\n    this.dep_id = 0;\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<mat-card>\r\n  <mat-card-title>\r\n    <span *ngIf=\"dep_id == 0\">\r\n      {{ \"jobTitlebyDepartment.adddepartment\" | translate | titlecase }}\r\n    </span>\r\n\r\n    <span *ngIf=\"dep_id > 0\">\r\n      {{ \"jobTitlebyDepartment.update\" | translate | titlecase }}\r\n    </span>\r\n    -\r\n    {{ username }}\r\n\r\n    <a\r\n      mat-raised-button\r\n      routerLink=\"/dashboard/users\"\r\n      [queryParams]=\"{\r\n        functionId: functionParentId\r\n      }\"\r\n      class=\"btn btn-warning bg-light-warning float-right\"\r\n    >\r\n      {{ \"General.Back\" | translate }}\r\n    </a>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <department-dropdown\r\n                [control]=\"formCtrls.dept_id\"\r\n                [submitted]=\"submitted\"\r\n              ></department-dropdown>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <job-title-by-department-dropdown\r\n                [control]=\"formCtrls.job_departments\"\r\n                [departmentControl]=\"formCtrls.dept_id\"\r\n                [submitted]=\"submitted\"\r\n                [multiple]=\"true\"\r\n              ></job-title-by-department-dropdown>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-datepicker\r\n                [control]=\"formCtrls.from_date\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.FromDate\"\r\n              ></app-datepicker>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-datepicker\r\n                [control]=\"formCtrls.to_date\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.ToDate\"\r\n              ></app-datepicker>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n  <mat-card-actions align=\"end\">\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-info bg-light-info\"\r\n      *ngIf=\"dep_id == 0\"\r\n      (click)=\"addAll()\"\r\n    >\r\n      <i class=\"fa fa-plus mr-1\"></i>\r\n      {{ \"General.Add\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-info bg-light-info\"\r\n      *ngIf=\"dep_id > 0\"\r\n      (click)=\"updetAll()\"\r\n    >\r\n      {{ \"General.Update\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf=\"dep_id > 0\"\r\n      mat-raised-button\r\n      class=\"btn btn-warning\"\r\n      (click)=\"clearForm()\"\r\n    >\r\n      {{ \"General.Reset\" | translate }}\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"jobTitlebyDepartment.department\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event.target.value)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"id\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"dept_ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"jobTitlebyDepartment.ArabicDepartmentName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                {{ element.dept_ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"dept_en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"jobTitlebyDepartment.EnglishDepartmentName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                {{ element.dept_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"JobTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"jobTitlebyDepartment.allJobTitle\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                <table class=\"table table-sm\">\r\n                  <thead class=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\">\r\n                        {{ \"labels.enName\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        {{ \"labels.arName\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        {{ \"labels.FromDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        {{ \"labels.ToDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr\r\n                      *ngFor=\"\r\n                        let department of element.job_departments;\r\n                        index as i\r\n                      \"\r\n                    >\r\n                      <td>\r\n                        {{ department.job_en_name }}\r\n                      </td>\r\n                      <td>\r\n                        {{ department.job_ar_name }}\r\n                      </td>\r\n                      <td>{{ department.from_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>{{ department.to_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>\r\n                        <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                          <a\r\n                            *ngIf=\"fun.functionName === 'DeleteArticalJob'\"\r\n                            (click)=\"openDeleateDialogJop(department)\"\r\n                            class=\"danger p-0\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-times fa fa-white\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </a>\r\n\r\n                      <a\r\n                        (click)=\"editDate(department)\"\r\n                        *ngIf=\"fun.functionName === 'UpdateArticalJob'\"\r\n                        class=\"success p-0\"\r\n                        matTooltip=\"{{ fun.function_en_name }}\"\r\n                      >\r\n                        <i\r\n                          class=\"ft-edit-2 font-medium-3 mr-2\"\r\n                          aria-hidden=\"true\"\r\n                        ></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"text-center px-2\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editAll(element)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(element)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n\r\n        <mat-paginator\r\n          [pageSizeOptions]=\"[10]\"\r\n          (page)=\"getall($event.pageIndex + 1)\"\r\n          [length]=\"itemsCounts\"\r\n          [pageSize]=\"10\"\r\n          showFirstLastButtons\r\n          aria-label=\"Select page of departments\"\r\n        ></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {ActivatedRoute} from \"@angular/router\";\r\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\r\nimport {AbstractControlOptions, FormBuilder, FormGroup, Validators,} from \"@angular/forms\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {IAddEditUserModel, IUserModel, IUserSearchVM, IUserViewModel,} from \"app/admin/models/roles/user\";\r\nimport {UsersService} from \"app/admin/services/roles/users.service\";\r\nimport {DeleteDialogComponent} from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {AuthService} from \"app/shared/services/auth/auth.service\";\r\nimport {CustomeValidator} from \"app/shared/validators/customeValid.validator\";\r\nimport {NgxSpinnerService} from \"ngx-spinner\";\r\nimport {defaultRes, IRowFunctionVM} from \"app/shared/models/general/general\";\r\nimport {AppConstants} from \"app/shared/data/app_constants\";\r\nimport {MessagesService} from \"app/shared/services/messages.service\";\r\nimport {LanguageService} from \"app/shared/services/language.service\";\r\nimport {ResMessage} from \"app/shared/enums/res-message\";\r\n\r\n@Component({\r\n  selector: \"app-users\",\r\n  templateUrl: \"./users.component.html\",\r\n  styleUrls: [\"./users.component.scss\"],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  EduCompId: number;\r\n  submitted: boolean = false;\r\n  isLoaded: boolean = false;\r\n  // // roles: IRolesViewModel[] = [];\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCounts: number = 0;\r\n  items: number = 16184;\r\n  curPage: number = 1;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"account_email\",\r\n    \"mobile\",\r\n    // \"role\",\r\n    \"code\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    // // private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    // private router: Router,\r\n    public appConstants: AppConstants,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n    // this.route.data.subscribe((val) => {\r\n    //   console.log(\"view:-\", val);\r\n    // });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        userId: [0, [Validators.required]],\r\n        userName: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n        email: [null, [Validators.required, Validators.email]],\r\n        phone: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n            Validators.maxLength(this.appConstants.MobileLength),\r\n            Validators.minLength(this.appConstants.MobileLength),\r\n            CustomeValidator.MobileStartsWith,\r\n          ],\r\n        ],\r\n        // // roleId: [null, [Validators.required]],\r\n        password: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomeValidator.whiteSpace,\r\n            Validators.minLength(3),\r\n          ],\r\n        ],\r\n        confirmedPass: [null],\r\n        code: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\"password\", \"confirmedPass\"),\r\n      } as AbstractControlOptions\r\n    );\r\n\r\n    // // this.roleService\r\n    // //   .getAllRoles<IRolesViewModel[]>(this.EduCompId)\r\n    // //   .subscribe((response) => {\r\n    // //     if (response) {\r\n    // //       this.roles = response;\r\n    // //     }\r\n    // //   });\r\n\r\n    this.getAllUsers(this.curPage);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.resetSearch();\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllUsers(pageNumber: number) {\r\n    this.isLoaded = false;\r\n    // if (!isSearch) this.clearForm();\r\n    let searchBody: IUserSearchVM = {\r\n      ar_name: this.FormCtrls.userName.value?.trim().toLowerCase(),\r\n      account_email: this.FormCtrls.email.value?.trim().toLowerCase(),\r\n      mobile: this.FormCtrls.phone.value?.trim(),\r\n      code: this.FormCtrls.code.value?.trim().toLowerCase(),\r\n    };\r\n\r\n    this.itemsCounts = 0;\r\n    this.curPage = pageNumber;\r\n    this.userService\r\n      .getAllUsers<IUserViewModel>(this.EduCompId, pageNumber, searchBody)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"users: \", response);\r\n          this.dataSource = new MatTableDataSource(response.usersList);\r\n          this.itemsCounts = response.countItems;\r\n          this.dataSource.sort = this.sort;\r\n          this.isLoaded = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  editUser(user: IUserModel) {\r\n    // this.myForm.patchValue(user);\r\n    this.FormCtrls.userId?.setValue(user.user_ID);\r\n    this.FormCtrls.userName?.setValue(user.ar_name);\r\n    this.FormCtrls.email?.setValue(user.account_email);\r\n    this.FormCtrls.phone?.setValue(user.mobile);\r\n    this.FormCtrls.code?.setValue(user.code);\r\n    // this.FormCtrls.roleId?.setValue(user.roleId);\r\n    // this.FormCtrls.password?.setValue(user.account_password);\r\n    // this.FormCtrls.confirmedPass?.setValue(user.account_password);\r\n  }\r\n\r\n  removeUser(user: IUserModel) {\r\n    this.spinner.show();\r\n    this.userService.deleteUser(user.user_ID).subscribe((response: any) => {\r\n      if (response && response?.returnValue == 1) {\r\n        // console.log(\"user: \", response);\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (user.user_ID == this.FormCtrls.userId.value) this.clearForm();\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllUsers(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllUsers(this.curPage);\r\n        }\r\n      } else this.toastr.error(response?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditUserModel;\r\n      obj.user = {} as IUserModel;\r\n      obj.user.user_ID = this.FormCtrls.userId?.value;\r\n      obj.user.ar_name = this.FormCtrls.userName?.value;\r\n      obj.user.account_email = this.FormCtrls?.email?.value;\r\n      obj.user.mobile = this.FormCtrls.phone?.value;\r\n      // obj.user.roleId = this.FormCtrls.roleId?.value;\r\n      obj.user.account_password = this.FormCtrls.password?.value;\r\n      obj.code = this.FormCtrls.code?.value;\r\n      // obj.roleId = this.FormCtrls.roleId?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n\r\n      this.userService\r\n        .addEditUser<IAddEditUserModel, any>(obj)\r\n        .subscribe((response) => {\r\n          // console.log(\"created: \", response);\r\n          if (response && response !== null) {\r\n            if (response.returnValue == 0) {\r\n              this.toastr.error(response.returnString);\r\n            } else {\r\n              this.clearForm();\r\n\r\n              if (obj.user.user_ID == 0) {\r\n                this.getAllUsers(1); // first page after add\r\n                this.dataSource.paginator = this.paginator;\r\n              } else {\r\n                this.getAllUsers(this.curPage); // current page after update\r\n              }\r\n\r\n              this.toastr.success(\r\n                obj.user.user_ID == 0\r\n                  ? \"General.AddSuccessfully\"\r\n                  : \"General.UpdateSuccessfully\"\r\n              );\r\n            }\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(user: IUserModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: user.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeUser(user);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.userId.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  resetSearch() {\r\n    this.clearForm();\r\n    this.getAllUsers(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  getDataFromHR() {\r\n    this.spinner.show();\r\n    this.userService.copyDataFromHR(this.EduCompId)\r\n      .subscribe((res: defaultRes) => {\r\n        this.spinner.hide();\r\n        if (res.returnValue == ResMessage.success) {\r\n          this.getAllUsers(1);\r\n          this.toastr.success('copyHrSuccess');\r\n        }\r\n      });\r\n  }\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<!-- <div class=\"row\"> -->\r\n<!--   <div class=\"col-12\"> -->\r\n<!--     <mat-card> -->\r\n<!--       <mat-card-title> -->\r\n<!--         {{ -->\r\n<!--           (FormCtrls.userId.value == 0 -->\r\n<!--             ? \"labels.CreateEmployee\" -->\r\n<!--             : \"labels.UpdateEmployee\" -->\r\n<!--           ) | translate -->\r\n<!--         }} -->\r\n\r\n<!--         <button -->\r\n<!--           mat-raised-button -->\r\n<!--           (click)=\"getAllUsers(1); dataSource.paginator = paginator\" -->\r\n<!--           class=\"btn btn-info float-right\" -->\r\n<!--         > -->\r\n<!--           <i class=\"fa fa-search mr-1\"></i> -->\r\n<!--           {{ \"General.Search\" | translate }} -->\r\n<!--         </button> -->\r\n\r\n<!--         <button -->\r\n<!--           mat-raised-button -->\r\n<!--           (click)=\"resetSearch()\" -->\r\n<!--           class=\"btn btn-warning float-right\" -->\r\n<!--         > -->\r\n<!--           {{ \"General.Reset\" | translate }} -->\r\n<!--         </button> -->\r\n<!--       </mat-card-title> -->\r\n<!--       <mat-card-content class=\"container-fluid\"> -->\r\n<!--         <div class=\"row\"> -->\r\n<!--           <div class=\"col-12\"> -->\r\n<!--             <form [formGroup]=\"myForm\"> -->\r\n<!--               <div class=\"row\"> -->\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"FormCtrls.userName\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.Name\" -->\r\n<!--                     autocomplete=\"new-password\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"FormCtrls.phone\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.Mobile\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"FormCtrls.email\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.Email\" -->\r\n<!--                     type=\"email\" -->\r\n<!--                     autocomplete=\"new-password\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 &lt;!&ndash; Role &ndash;&gt; -->\r\n<!--                 &lt;!&ndash; <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <mat-form-field appearance=\"legacy\"> -->\r\n<!--                     <mat-label>{{ \"labels.Role\" | translate }} </mat-label> -->\r\n<!--                     <mat-select formControlName=\"roleId\"> -->\r\n<!--                       <mat-option> -->\r\n<!--                         {{ \"General.Choose\" | translate }}</mat-option -->\r\n<!--                       > -->\r\n<!--                       <mat-option *ngFor=\"let role of roles\" [value]=\"role.Id\"> -->\r\n<!--                         {{ role.roleName }} -->\r\n<!--                       </mat-option> -->\r\n<!--                     </mat-select> -->\r\n<!--                     <mat-hint -->\r\n<!--                       *ngIf=\" -->\r\n<!--                         FormCtrls.roleId.invalid && -->\r\n<!--                         (FormCtrls.roleId.touched || submitted) -->\r\n<!--                       \" -->\r\n<!--                       class=\"text-danger\" -->\r\n<!--                     > -->\r\n<!--                       <span *ngIf=\"FormCtrls.roleId.errors?.required\"> -->\r\n<!--                         <i class=\"ft-alert-circle align-middle\"></i> -->\r\n<!--                         {{ \"labels.MustChoosevalue\" | translate }} -->\r\n<!--                       </span> -->\r\n<!--                     </mat-hint> -->\r\n<!--                   </mat-form-field> -->\r\n<!--                 </div> &ndash;&gt; -->\r\n\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"FormCtrls.password\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.Password\" -->\r\n<!--                     type=\"password\" -->\r\n<!--                     autocomplete=\"new-password\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"FormCtrls.confirmedPass\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.ConfirmPassword\" -->\r\n<!--                     type=\"password\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n\r\n<!--                 <div class=\"col-md-4 col-12\"> -->\r\n<!--                   <app-input -->\r\n<!--                     [control]=\"FormCtrls.code\" -->\r\n<!--                     [submitted]=\"submitted\" -->\r\n<!--                     label=\"labels.Code\" -->\r\n<!--                   ></app-input> -->\r\n<!--                 </div> -->\r\n<!--               </div> -->\r\n<!--             </form> -->\r\n<!--           </div> -->\r\n<!--         </div> -->\r\n<!--       </mat-card-content> -->\r\n<!--        -->\r\n<!--       <mat-card-actions align=\"end\"> -->\r\n<!--         <button -->\r\n<!--           mat-raised-button -->\r\n<!--           class=\"btn btn-info bg-light-info\" -->\r\n<!--           (click)=\"onSubmit()\" -->\r\n<!--         > -->\r\n<!--           <i class=\"fa fa-plus mr-1\" *ngIf=\"FormCtrls.userId.value == 0\"></i> -->\r\n<!--           {{ -->\r\n<!--             (FormCtrls.userId.value == 0 ? \"General.Add\" : \"General.Update\") -->\r\n<!--               | translate -->\r\n<!--           }} -->\r\n<!--         </button> -->\r\n\r\n<!--         <button -->\r\n<!--           *ngIf=\"FormCtrls.userId.value > 0\" -->\r\n<!--           mat-raised-button -->\r\n<!--           class=\"btn btn-warning\" -->\r\n<!--           (click)=\"clearForm()\" -->\r\n<!--         > -->\r\n<!--           {{ \"General.Reset\" | translate }} -->\r\n<!--         </button> -->\r\n<!--       </mat-card-actions> -->\r\n<!--     </mat-card> -->\r\n<!--   </div> -->\r\n<!-- </div> -->\r\n\r\n\r\n<mat-card class=\"admin-index-card\">\r\n  <mat-card-title>\r\n    <page-title title=\"labels.Employees\"></page-title>\r\n    <button class=\"orange-btn radius-btn integration-btn float-right d-inline-block mx-1 mb-2\"\r\n            (click)=\"getDataFromHR()\">\r\n      {{ \"getFromHr\" | translate }}\r\n    </button>\r\n  </mat-card-title>\r\n  <mat-card-content>\r\n    <!--     <mat-form-field appearance=\"standard\"> -->\r\n    <!--       <mat-label>{{ \"General.Search\" | translate }}</mat-label> -->\r\n    <!--       <input -->\r\n    <!--         matInput -->\r\n    <!--         (keyup)=\"applyFilter($event)\" -->\r\n    <!--         placeholder=\"Ex. ium\" -->\r\n    <!--         #input -->\r\n    <!--       /> -->\r\n    <!--     </mat-form-field> -->\r\n\r\n    <div class=\"mat-elevation-z8 f-w\" *ngIf=\"isLoaded;else loading\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <!-- # Column -->\r\n        <ng-container matColumnDef=\"#\">\r\n          <th mat-header-cell *matHeaderCellDef>#</th>\r\n          <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n        </ng-container>\r\n\r\n        <!-- name Column -->\r\n        <ng-container matColumnDef=\"ar_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.Name\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n        </ng-container>\r\n\r\n        <!-- email Column -->\r\n        <ng-container matColumnDef=\"account_email\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.Email\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n        </ng-container>\r\n\r\n        <!-- mobile Column -->\r\n        <ng-container matColumnDef=\"mobile\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.Mobile\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n        </ng-container>\r\n\r\n        <!-- code Column -->\r\n        <ng-container matColumnDef=\"code\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.Code\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let ele\">{{ ele.code }}</td>\r\n        </ng-container>\r\n\r\n        <!-- role Column -->\r\n        <!-- <ng-container matColumnDef=\"role\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n           {{ \"labels.Role\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let ele\">{{ ele.roleName }}</td>\r\n        </ng-container> -->\r\n\r\n        <!-- Option Column -->\r\n        <ng-container matColumnDef=\"option\">\r\n          <th mat-header-cell *matHeaderCellDef>actions</th>\r\n          <td mat-cell *matCellDef=\"let user\">\r\n            <ng-container *ngFor=\"let fun of rowFunctions\">\r\n              <!--               <a -->\r\n              <!--                 *ngIf=\"fun.functionName === 'Update'\" -->\r\n              <!--                 (click)=\"editUser(user)\" -->\r\n              <!--                 class=\"success p-0\" -->\r\n              <!--                 matTooltip=\"{{ 'General.Edit' | translate }}\" -->\r\n              <!--               > -->\r\n              <!--                 <i class=\"fas fa-pen font-medium-3 mr-2\"></i> -->\r\n              <!--               </a> -->\r\n\r\n              <a\r\n                *ngIf=\"fun.functionName === 'Delete'\"\r\n                (click)=\"openDeleateDialog(user)\"\r\n                class=\"danger p-0\"\r\n                matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n              >\r\n                <i class=\"fa fa-trash font-medium-3 mr-2\"></i>\r\n              </a>\r\n\r\n              <!--               <a -->\r\n              <!--                 *ngIf=\"fun.functionName === 'Branches'\" -->\r\n              <!--                 routerLink=\"../user-dep-job/{{ user.user_ID }}\" -->\r\n              <!--                 [queryParams]=\"{ -->\r\n              <!--                       parentId: functionId, -->\r\n              <!--                       functionId: fun.Id -->\r\n              <!--                     }\" -->\r\n              <!--                 class=\"info p-0\" -->\r\n              <!--                 matTooltip=\"{{ -->\r\n              <!--                       'jobTitlebyDepartment.employeeJob' | translate -->\r\n              <!--                     }}\" -->\r\n              <!--               > -->\r\n              <!--                 <i class=\"ft-git-branch font-medium-3 mr-2\"></i> -->\r\n              <!--               </a> -->\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n        <!-- Row shown when there is no matching data. -->\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <!--           <td class=\"mat-cell\" colspan=\"6\"> -->\r\n          <!--             No data matching the filter \"{{ input.value }}\" -->\r\n          <!--           </td> -->\r\n        </tr>\r\n      </table>\r\n\r\n      <!--    appMatPaginatorStyle\r\n        [showTotalPages]=\"3\" -->\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[10]\"\r\n        (page)=\"getAllUsers($event.pageIndex + 1)\"\r\n        [length]=\"itemsCounts\"\r\n        [pageSize]=\"10\"\r\n        showFirstLastButtons\r\n        aria-label=\"Select page of users\"\r\n      >\r\n      </mat-paginator>\r\n    </div>\r\n\r\n    <ng-template #loading>\r\n      <app-table-skeleton\r\n        [displayedColumns]=\"displayedColumns\"\r\n      ></app-table-skeleton>\r\n    </ng-template>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CashPaymentService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  CashPaymentSearch(body: any, EduCompId: any) {\r\n    return this.post(\r\n      `CashPayment/returnUserDataByPhoneNumber/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  CashPaymentPost(EduCompId: any, body: any) {\r\n    return this.post(`CashPayment/CashPaymentPost/${EduCompId}`, body);\r\n  }\r\n\r\n  GetItemsByLesson(\r\n    EduCompId: number,\r\n    lessonId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.get(\r\n      `${`CashPayment/returnItemsByLessonId`}/${EduCompId}/${lessonId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsByUnit(\r\n    EduCompId: number,\r\n    unitId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.get(\r\n      `CashPayment/returnItemsByUnitId/${EduCompId}/${unitId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsBySubject(\r\n    EduCompId: number,\r\n    subjectId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.get(\r\n      `CashPayment/returnItemsBySubjectId/${EduCompId}/${subjectId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsByLessonWithEnded(\r\n    EduCompId: number,\r\n    lessonId: number,\r\n    itemTypeId: number,\r\n    teacherId: number,\r\n    ended: boolean\r\n  ) {\r\n    return this.get(\r\n      `CashPayment/returnItemsByLessonIdSpecialViews/${EduCompId}/${lessonId}/${itemTypeId}/${teacherId}/${ended}`\r\n    );\r\n  }\r\n\r\n  geItemPrice(id: number, userId: number) {\r\n    return this.get(`CashPayment/returnMaterialPriceById/${id}/${userId}`);\r\n  }\r\n\r\n  getPaymentsHistory(p: number, userId: any) {\r\n    return this.get(\r\n      `CashPayment/returnUserPaymentsHistoryTable/${p}/${userId}`\r\n    );\r\n  }\r\n\r\n  ManualPaymentByExcel(EduCompId: number, body: any) {\r\n    return this.post(`CashPayment/postManualPaymentByExcel/${EduCompId}`, body);\r\n  }\r\n}\r\n","import {HttpClient} from \"@angular/common/http\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {AppClientService} from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ExamsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    return this.get(`Admin/QuestionsBank/${EduCompId}`);\r\n  }\r\n\r\n  getQuestions(page: any, EduCompId: any, data: any) {\r\n    return this.post(`Admin/QuestionsBankTable/${page}/${EduCompId}`, data);\r\n  }\r\n\r\n  getQuestionByID(id: any) {\r\n    return this.get(`Admin/get-question-bank/${id}`);\r\n  }\r\n\r\n  addEditQuestion(eduCompID: any, data: any) {\r\n    return this.post(`Admin/question-bank-add-edit/${eduCompID}`, data);\r\n  }\r\n\r\n  updateQuestion(Id: any, data: any) {\r\n    return this.put(`Admin/QuestionsBank/${Id}`, data);\r\n  }\r\n\r\n  deleteQuestion(eduCompID: any, id: any) {\r\n    return this.post(`Admin/removeQuestionBank/${eduCompID}/${id}`, null);\r\n  }\r\n\r\n  getSubjectsByTeacherId(teacherId: any) {\r\n    return this.post(`Admin/get-lectures-by-teacher-query`, teacherId);\r\n  }\r\n\r\n  getAllNormalExams<T, TV>(obj: T) {\r\n    return this.post<TV>(\"exam/returnRecentlyAddedExams\", obj);\r\n  }\r\n\r\n  publishExam<TV>(examId: number) {\r\n    return this.get<TV>(`exam/publish-depublish-exam/${examId}`);\r\n  }\r\n\r\n  deleteExam<TV>(id: number) {\r\n    // console.log(id);\r\n    return this.delete<TV>(`Admin/RemoveExam/${id}`);\r\n  }\r\n\r\n  getAllCountries<T>() {\r\n    return this.get<T>(\"country/return-countries\");\r\n  }\r\n\r\n  getAllStages<T>(countryId: number) {\r\n    return this.get<T>(`stage/return-stages/${countryId}`);\r\n  }\r\n\r\n  getAllEducationYears<T>(stageId: number) {\r\n    return this.get<T>(`year/return-years/${stageId}`);\r\n  }\r\n\r\n  getAllSubjects<T>(educationYearId: number) {\r\n    return this.get<T>(`subject/return-subjects/${educationYearId}`);\r\n  }\r\n\r\n  getAllTeachersBySublectId<T>(subjectId: number) {\r\n    return this.get<T>(`teacher/return-teachers/${subjectId}`);\r\n  }\r\n\r\n  getAllUnitsBySublectId<T>(subjectId: number) {\r\n    return this.get<T>(`unit/return-units/${subjectId}`);\r\n  }\r\n\r\n  getAllLessonsByUnitId<T>(unitId: number) {\r\n    return this.get<T>(`lesson/return-lesson/${unitId}`);\r\n  }\r\n\r\n  getAllExamType<T>() {\r\n    return this.get<T>(\"exam/return-exam-types\");\r\n  }\r\n\r\n  getExamById<T>(id: number) {\r\n    return this.get<T>(`exam/get-exam-by-id/${id}`);\r\n  }\r\n\r\n  getExamDetailsById<T>(examId: number) {\r\n    return this.get<T>(`Exam/Details/${examId}`);\r\n  }\r\n\r\n  addExam<T, TY>(data: T) {\r\n    return this.post<TY>(\"exam/add-exam\", data);\r\n  }\r\n\r\n  getAllQuestionGroups<T>() {\r\n    return this.get<T[]>(\"exam/return-question-groups\");\r\n  }\r\n\r\n  getAllQuestionHeaders<T>() {\r\n    return this.get<T[]>(\"exam/return-question-heads\");\r\n  }\r\n\r\n  addExamGroupHeader<T, TY>(data: T) {\r\n    return this.post<TY>(`exam/add-question-group-head`, data);\r\n  }\r\n\r\n  editExamGroupHeader<T, TY>(data: T) {\r\n    return this.post<TY>(\"exam/EditQuestionHead\", data);\r\n  }\r\n\r\n  deleteExamGroupHeader(id: number) {\r\n    return this.delete(`exam/deleteExamHeadGroupById/${id}`);\r\n  }\r\n\r\n  getAllGroupHeaderByExamId<T>(id: number) {\r\n    return this.get<T[]>(`exam/GetQuestionHeadGroupByExamId/${id}`);\r\n  }\r\n\r\n  getAllQuestionsByHeadId<T>(id: number) {\r\n    return this.get<T>(`exam/GetExamQuestionsByQuestionHead/${id}`);\r\n  }\r\n\r\n  addQuestion<T>(data: any) {\r\n    return this.post<T>(\"exam/add-exam-questions\", data);\r\n  }\r\n\r\n  addSurveyQuestion<T>(data: any) {\r\n    return this.post<T>(\"exam/add-survey-questions\", data);\r\n  }\r\n\r\n  getQuestionForEditByID<T>(id: number) {\r\n    return this.get<T>(`exam/return-question-details/${id}`);\r\n  }\r\n\r\n  editQuestion<T>(data: any) {\r\n    return this.post<T>(\"exam/edit-exam-questions\", data);\r\n  }\r\n\r\n  editSurveyQuestion<T>(data: any) {\r\n    return this.post<T>(\"exam/edit-survey-questions\", data);\r\n  }\r\n\r\n  deleteExamQuestion<T>(id: number) {\r\n    // console.log(id);\r\n    return this.delete<T>(`exam/RemoveExamQuestion/${id}`);\r\n  }\r\n\r\n  getExamPoints(examId: any, page: any) {\r\n    return this.get(`exam/returnCustomPointExamByExamId/${examId}/${page}`);\r\n  }\r\n\r\n  addExamPoint(body: any) {\r\n    return this.post(\"exam/CustomExamPoint\", body);\r\n  }\r\n\r\n  deleteExamPoint(pointId: any) {\r\n    return this.delete(`exam/DeleteCustomExamPoint/${pointId}`);\r\n  }\r\n\r\n  UploadExamStudentGrades(data: any) {\r\n    return this.post(\"Exam/postStudentsGrades\", data);\r\n  }\r\n\r\n  getQuestionByCorrectionType(page: any, correctionStatus: any) {\r\n    return this.get(`Exam/CorrectionIndexPaging/${page}/${correctionStatus}`);\r\n  }\r\n\r\n  submitCorrection(body: any) {\r\n    return this.post(`/Exam/submitQuestionCorrection`, body);\r\n  }\r\n\r\n\r\n  // Exams Integration\r\n  copyExamsToHR(body: CopyExamsToHRRequest) {\r\n    return this.post(`HRexam/CopyExamsFromEgyToHR`, body);\r\n  }\r\n\r\n  getExamByCourseId(courseID: number) {\r\n    return this.get(`HRexam/GetExamsEgyByCourseID/${courseID}`);\r\n  }\r\n\r\n  getImplemenationsByCourseID(courseID: number, EduCompId: number) {\r\n    return this.get(`HRexam/GetImplemenationsByCourseID/${courseID}/${EduCompId}`);\r\n  }\r\n}\r\n\r\nexport interface CopyExamsToHRRequest {\r\n  EduComp: number,\r\n  impID: number,\r\n  ExamsIDs: number[]\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ManageViewsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  searchStudent(EduCompId: any, body: any) {\r\n    return this.post(`Admin/searchUSer/${EduCompId}`, body);\r\n  }\r\n\r\n  resetViews(EduCompId: any, body: any) {\r\n    return this.post(`Admin/resetViewsCount/${EduCompId}`, body);\r\n  }\r\n\r\n  addExceptionalViews(EduCompId: any, body: any) {\r\n    return this.post(`Admin/ExceptionalViewsResetCount/${EduCompId}`, body);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PointsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  //  Points Setup\r\n\r\n  addPoints(educompId: number, data: any) {\r\n    return this.post(`SetupPoints/SetupPoints/${educompId}`, data);\r\n  }\r\n\r\n  getPoints<T>(courseId: number, typeId: number, eduCompId: number) {\r\n    return this.get<T>(\r\n      `SetupPoints/returnPointSystemByResourceId/${courseId}/${typeId}/${eduCompId}`\r\n    );\r\n  }\r\n\r\n  deletePoint(pointId: any) {\r\n    return this.post(`SetupPoints/DeletePointSystemDetails/${pointId}`, null);\r\n  }\r\n\r\n  //######################################################################\r\n  // Custome\r\n  //######################################################################\r\n  // Lecture Custome\r\n\r\n  addLectureCustomPoint(data: any) {\r\n    return this.post(`SetupPoints/CustomMaterialPoint`, data);\r\n  }\r\n\r\n  getLectureCustomPoints<T>(page: any, materialId: any) {\r\n    return this.get<T>(\r\n      `SetupPoints/returnCustomPointMaterialByMaterialId/${materialId}/${page}`\r\n    );\r\n  }\r\n\r\n  deleteLectureCustomPoint(pointId: any) {\r\n    return this.post(`SetupPoints/DeleteCustomMaterialPoint/${pointId}`, null);\r\n  }\r\n\r\n  //######################################################################\r\n  // Exam Custome\r\n  addExamCustomPoint(body: any) {\r\n    return this.post(\"SetupPoints/CustomExamPoint\", body);\r\n  }\r\n\r\n  getExamCustomPoints<T>(page: any, examId: any) {\r\n    return this.get<T>(\r\n      `SetupPoints/returnCustomPointExamByExamId/${examId}/${page}`\r\n    );\r\n  }\r\n\r\n  deleteExamCustomPoint(pointId: any) {\r\n    return this.post(`SetupPoints/DeleteCustomExamPoint/${pointId}`, null);\r\n  }\r\n\r\n  //######################################################################\r\n  // Template Custome\r\n  addTemplateCustomPoint(body: any) {\r\n    return this.post(\"SetupPoints/CustomTemplatePoint\", body);\r\n  }\r\n\r\n  getTemplateCustomPoints<T>(page: any, templateId: any) {\r\n    return this.get<T>(\r\n      `SetupPoints/returnCustomPointTemplateByTemplateId/${templateId}/${page}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { IArticleViewModel } from \"app/admin/models/admin/setup/articles\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ArticlesService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAllArticles<T>(page: number, EduCompId: number) {\r\n    return this.get<IArticleViewModel>(\r\n      `Article/geAllArticles/${EduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  addArticle<T, TV>(obj: T) {\r\n    return this.post<TV>(`Article/PostArticles`, obj);\r\n  }\r\n\r\n  editArticle<T, TV>(obj: T, id: number) {\r\n    return this.put<TV>(`Article/PutArticles/${id}`, obj);\r\n  }\r\n\r\n  editJobTitleArticle<T, TV>(id: number, obj: T) {\r\n    return this.put<TV>(`Article/EditArticleDepJob/${id}`, obj);\r\n  }\r\n\r\n  deleteArticle(id: any) {\r\n    return this.delete(`Article/DeleteArticles/${id}`);\r\n  }\r\n\r\n  deleteJobTitleArticle(id: any) {\r\n    return this.delete(`Article/DeleteJobTitleOfArticles/${id}`);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ISearchMaterialVM } from \"app/admin/models/admin/educations\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class SubjectMaterialsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getParts2URL = \"Admin/returnMaterialPartsByMaterialId/\";\r\n  AttendanceURL = \"Admin/postOfflineLectureView/\";\r\n  materialsattacAttendeesURL = \"MaterialsAttach/offline-lecture-attendees/\";\r\n\r\n  addEditMaterial<T>(data: T) {\r\n    return this.post(`Admin/AddSubjectMaterialForm`, data);\r\n  }\r\n\r\n  getMaterialById<T>(subjectId: any, materialId: any) {\r\n    return this.get<T>(\r\n      `Admin/showSubjectMaterialView/${subjectId}/${materialId}`\r\n    );\r\n  }\r\n\r\n  updateMaterialForm(EduCompId: any, data: any) {\r\n    return this.post(`Admin/AddSubjectMaterialForm/${EduCompId}`, data);\r\n  }\r\n\r\n  deleteMaterial(materialId: any) {\r\n    return this.delete(`Admin/RemoveMaterial/${materialId}`);\r\n  }\r\n\r\n  publishMaterial(materialId: any) {\r\n    return this.get(`Admin/PublishDepublishhMaterial/${materialId}`);\r\n  }\r\n\r\n  getGroupsByEduCompId<T>(EduCompId: any) {\r\n    return this.get<T>(\r\n      `Admin/returnListEduCompIdGroupByEduCompID/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  returnSearchedUnitsBySubjectId<T>(subjectId: any) {\r\n    return this.get<T>(`Admin/returnSearchedUnitsBySubjectId/${subjectId}`);\r\n  }\r\n\r\n  returnSearchedLessonsByUnitId<T>(UnitId: any) {\r\n    return this.get<T>(`Admin/returnSearchedLessonsByUnitId/${UnitId}`);\r\n  }\r\n\r\n  searcheMaterial<T>(data: ISearchMaterialVM) {\r\n    return this.post<T>(`Admin/returnSearchedMaterialViewResult`, data);\r\n  }\r\n\r\n  showVideoByMaterialId(materialId: any) {\r\n    return this.get(`Admin/showVideoByMaterialId/${materialId}`);\r\n  }\r\n\r\n  dawnloadLectureAttendees(materialId: any) {\r\n    return this.get(`Admin/offlineLectureAttendees/${materialId}`);\r\n  }\r\n\r\n  getMaterialParts(materialId: any) {\r\n    return this.get(`Admin/materialPartsTable/${materialId}`);\r\n  }\r\n\r\n  getPartById<T>(partId: any) {\r\n    return this.get<T>(`Admin/getMaterialPartByID/${partId}`);\r\n  }\r\n\r\n  addPart(data: any) {\r\n    return this.post(\"Admin/AddMaterialPart\", data);\r\n  }\r\n\r\n  // updatePart(data: any) {\r\n  //   return this.post(this.updatePartURL, data);\r\n  // }\r\n\r\n  deletePart(partId: any) {\r\n    return this.post(`Admin/RemoveMaterialPart/${partId}`, null);\r\n  }\r\n\r\n  getMaterialAttaches(materialId: any) {\r\n    return this.get(`Admin/materialAttachsTable/${materialId}`);\r\n  }\r\n\r\n  addAttach(data: any) {\r\n    return this.post(\"Admin/AddMaterialAttach\", data);\r\n  }\r\n\r\n  deleteAttach(AttachId: any) {\r\n    return this.post(`Admin/RemoveMaterialAttach/${AttachId}`, null);\r\n  }\r\n\r\n  getExamsAndTemplates(subjectId: number) {\r\n    return this.get(`Admin/showMaterialQuiz/${subjectId}`);\r\n  }\r\n\r\n  getMaterialQuizes<T>(materialId: any) {\r\n    return this.get<T>(`Admin/returnExamsByMaterialId/${materialId}`);\r\n  }\r\n\r\n  addMaterialQuiz(materialIdHiddenQuiz: any, data: any) {\r\n    return this.post(`Admin/AddQuizForm/${materialIdHiddenQuiz}`, data);\r\n  }\r\n\r\n  deleteMaterialQuiz(Id: any) {\r\n    return this.delete(`Admin/RemoveMaterialQuiz/${Id}`);\r\n  }\r\n\r\n  AddPopQuestion(materialId: any, body: any) {\r\n    return this.post(`Admin/AddPopQuestion/${materialId}`, body);\r\n  }\r\n\r\n  getPopQuestions(materialId: any) {\r\n    return this.get(\r\n      `Admin/returnMaterialPopQuestionsByMaterialId/${materialId}`\r\n    );\r\n  }\r\n\r\n  deletePopQuestion(id: any) {\r\n    return this.post(`Admin/DeleteMaterialPopQuestion/${id}`, null);\r\n  }\r\n\r\n  UploadStudentAttendance(LectureID: any, attendance: any, data: any) {\r\n    return this.post(\r\n      `Admin/postOfflineLectureAttendees/${attendance}/${LectureID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  offlineLectureAttendeesTable<T>(LectureID: any, page: any) {\r\n    return this.get<T>(\r\n      `Admin/offlineLectureAttendeesTable/${LectureID}/${page}`\r\n    );\r\n  }\r\n\r\n  searchAttendanceManual(data: any) {\r\n    return this.post(\"Admin/offlineLectureAttendees\", data);\r\n  }\r\n\r\n  updateAttendanceManual(data: any) {\r\n    return this.post(\"Admin/editOfflineLectureAttendeeState\", data);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BranchesService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAllBranchesURL = \"usermanagement/returnCenterBranchesByEduComp/\";\r\n  addEditBranchesURL = \"usermanagement/AddEditBranch\";\r\n  deleteBranchesURL = \"usermanagement/deleteBranch\";\r\n\r\n  getAllDistrictsURL = \"usermanagement/returnDistrictsList\"; // DropDownMenu\r\n  getAllAllCenterBranchesURL = \"usermanagement/returnAllCenterBranches\"; // /{page} => paginated\r\n\r\n  getAllBranches<T>(eduCompId: any) {\r\n    return this.get<T>(this.getAllBranchesURL + \"/\" + eduCompId);\r\n  }\r\n\r\n  getAllAllCenterBranches<T>(eduCompId: number, page: number) {\r\n    return this.get<T>(\r\n      this.getAllAllCenterBranchesURL + \"/\" + eduCompId + \"/\" + page\r\n    );\r\n  }\r\n\r\n  addEditBranches<T, TV>(obj: T) {\r\n    return this.post<TV>(this.addEditBranchesURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":18,\r\n  //     \"EduCompId\":2,\r\n  //     \"Name\":\"Test edit Branch\",\r\n  //     \"districtId\":2\r\n  // }\r\n\r\n  deleteBranch<T>(branchId: number) {\r\n    return this.delete<T>(this.deleteBranchesURL + \"/\" + branchId);\r\n  }\r\n\r\n  getAllDistricts<T>() {\r\n    return this.get<T>(this.getAllDistrictsURL);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FunctionsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  addEditFunctionURL = \"usermanagement/AddEditFunction\";\r\n  deleteFunctionURL = \"usermanagement/deleteFunction\";\r\n\r\n  addEditFunction<T, TV>(obj: T) {\r\n    return this.post<TV>(this.addEditFunctionURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":0,\r\n  //     \"functionName\":\"test عربي\",\r\n  //     \"function_en_name\":\"test Eng\",\r\n  //     \"functionURL\":\"url test\"\r\n  // }\r\n\r\n  deleteFunction<T>(functionId: number) {\r\n    return this.delete<T>(this.deleteFunctionURL + \"/\" + functionId);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RolesService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAllRoles<T>(EduCompId: number) {\r\n    return this.get<T>(\"usermanagement/returnRoles\" + \"/\" + EduCompId);\r\n  }\r\n\r\n  addEditRole<T, TV>(obj: T) {\r\n    return this.post<TV>(`usermanagement/create-role`, obj);\r\n  }\r\n\r\n  deleteRole(roleId: number) {\r\n    return this.delete(\"usermanagement/deleteRole\" + \"/\" + roleId);\r\n  }\r\n\r\n  getAllFunctions<T>(page: number, getAll: boolean) {\r\n    return this.get<T>(`usermanagement/getAllFunctions/${page}/${getAll}`);\r\n  }\r\n\r\n  getAllRoleFunctions<T>(roleId: number) {\r\n    return this.get<T>(`usermanagement/returnRoleFunctionsByRoleID/${roleId}`);\r\n  }\r\n\r\n  addEditRoleFunctions<T, TV>(obj: T) {\r\n    return this.post<TV>(\"usermanagement/add-function-to-role\", obj);\r\n  }\r\n\r\n  getAllFunctionsByRoleId<T>(roleId: number) {\r\n    return this.get<T>(`usermanagement/returnRoleFunctionsByRoleID/${roleId}`);\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions<T>(userId: number) {\r\n    return this.get<T>(\r\n      `usermanagement/returnAllBranchUserAllRoleFunction/${userId}`\r\n    );\r\n  }\r\n\r\n  addUserBranchesAndRoleFunctions<T, TV>(obj: T) {\r\n    return this.post<TV>(\"usermanagement/addUserBranchesAndRoleFunctions\", obj);\r\n  }\r\n\r\n  deleteUserRoleFunctions(functionId: number) {\r\n    return this.delete(\r\n      `usermanagement/deleteBranchUserRoleFunction/${functionId}`\r\n    );\r\n  }\r\n\r\n  deleteUserBranchRoleFunction(userId: number, branchId: number) {\r\n    return this.delete(\r\n      `usermanagement/deleteBranchUserAllRoleFunction/${userId}/${branchId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IUserSearchVM } from \"app/admin/models/roles/user\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UsersService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAllUsers<T>(eduCompId: any, page: number, searchBody: IUserSearchVM) {\r\n    return this.post<T>(\r\n      `usermanagement/returnUsersByEduComp/${eduCompId}/${page}`,\r\n      searchBody\r\n    );\r\n  }\r\n\r\n  addEditUser<T, TV>(obj: T) {\r\n    return this.post<TV>(\"usermanagement/create-user-account\", obj);\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    return this.delete(`usermanagement/deleteUser/${userId}`);\r\n  }\r\n\r\n  getAllBranchesByCenter<T>(eduCompId: any) {\r\n    return this.get<T>(\r\n      `usermanagement/returnCenterBranchesByEduComp/${eduCompId}`\r\n    );\r\n  }\r\n\r\n  copyDataFromHR(EduComp : number)\r\n  {\r\n    return this.get(`HRusermanagement/create-user-account/${EduComp}`);\r\n  }\r\n}\r\n","import {HttpClient} from \"@angular/common/http\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {\r\n  CategorieResponse,\r\n  subCategoriesResponse,\r\n} from \"app/admin/models/setup/categories\";\r\nimport {\r\n  ISubCategoriesResponse,\r\n} from \"app/admin/models/setup/categories\";\r\nimport {AppClientService} from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CategoriesService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getCategories() {\r\n    return this.get<CategorieResponse>(\r\n      `SubCategoryCourse/getAllMainCategories`\r\n    );\r\n  }\r\n\r\n  getSubCategoriesByMainId(id: number) {\r\n    return this.get<subCategoriesResponse>(\r\n      `SubCategoryCourse/getAllSubCategoriesByMainId/${id}`\r\n    );\r\n  }\r\n\r\n  // getCategoriesDropdown(EduCompId: number) {\r\n  //   return this.get<CategorieResponse>(\r\n  //     `SubCategoryCourse/getAllMainCategories/${EduCompId}`\r\n  //   );\r\n  // }\r\n\r\n  // deleteCategories(id: number) {\r\n  //   return this.delete(`courseCategory/DeleteCategories/${id}`);\r\n  // }\r\n\r\n  // editCategories<T>(model: T, id: number) {\r\n  //   return this.put<T>(`courseCategory/PutCategories/${id}`, model);\r\n  // }\r\n\r\n  addCategories<T>(model: T) {\r\n    return this.post<T>(`SubCategoryCourse/AddCategory`, model);\r\n  }\r\n\r\n  getAllSubCategoriesByMainId(mainCategoryId: number) {\r\n    return this.get<ISubCategoriesResponse>(\r\n      `SubCategoryCourse/getAllSubCategoriesByMainId/${mainCategoryId}`\r\n    );\r\n  }\r\n\r\n  // getAllSubCategoriesByMainIds(mainCategoryIds: number[]) {\r\n  //   return this.post<ISubCategoriesWithMainCategoryResponse>(\r\n  //     `SubCategoryCourse/getAllSubCategoriesByMainIds`,\r\n  //     {\r\n  //       cat_ids: mainCategoryIds,\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n\r\n  sendDataToHR(EduComp: number) {\r\n    return this.get(`HRcourseCategory/CopyCategoriesFromEgyToHR/${EduComp}`);\r\n  }\r\n\r\n  getDataFromHR(EduComp: number) {\r\n    return this.get(`HRcourseCategory/CopyCategoriesFromHRtoEgy/${EduComp}`);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class WhatsAppService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  sendSingularWhatsAppMsg(data: any) {\r\n    return this.post(`whats-app/send-singular-message`, data);\r\n  }\r\n\r\n  sendWhatsAppMsg(data: any) {\r\n    return this.post(`whats-app/send-message`, data);\r\n  }\r\n}\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  IJobTitleDatesEditVM,\r\n  IJobTitleEditDialogVM,\r\n} from \"app/admin/models/setup/job-title\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-edit-job-title-dates\",\r\n  templateUrl: \"./edit-job-title-dates.component.html\",\r\n  styleUrls: [\"./edit-job-title-dates.component.scss\"],\r\n})\r\nexport class EditJobTitleDatesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  jobTitle: IJobTitleEditDialogVM;\r\n\r\n  constructor(\r\n    public languageService: LanguageService,\r\n    private fb: FormBuilder,\r\n    private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<EditJobTitleDatesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { jobTitle: IJobTitleEditDialogVM }\r\n  ) {\r\n    this.jobTitle = data.jobTitle;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        from_date: [null, [Validators.required]],\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n    this.myForm.patchValue(this.jobTitle);\r\n  }\r\n\r\n  editJobTitleDates() {\r\n    this.submitted = true;\r\n    // console.log(this.myForm.value);\r\n    if (this.myForm.valid) {\r\n      let jobTitleDates: IJobTitleDatesEditVM = {\r\n        from_date: this.datePipe.transform(this.formCtrl?.from_date.value),\r\n        to_date: this.datePipe.transform(this.formCtrl?.to_date?.value),\r\n      };\r\n\r\n      this.dialogRef.close({\r\n        jobTitle: jobTitleDates,\r\n      });\r\n    }\r\n  }\r\n\r\n  get formCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  {{ \"JobTitle.updateJobTitle\" | translate }} -\r\n  {{\r\n    languageService.isArabic\r\n      ? jobTitle.ar_name ?? jobTitle.en_name\r\n      : jobTitle.en_name ?? jobTitle.ar_name\r\n  }}\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"myForm\" class=\"row\">\r\n    <!-- From date  -->\r\n    <div class=\"col-12\">\r\n      <app-datepicker\r\n        [control]=\"formCtrl.from_date\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.FromDate\"\r\n      >\r\n      </app-datepicker>\r\n    </div>\r\n\r\n    <!-- to date -->\r\n    <div class=\"col-12\">\r\n      <app-datepicker\r\n        [control]=\"formCtrl.to_date\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.ToDate\"\r\n      >\r\n      </app-datepicker>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button [mat-dialog-close]=\"false\" class=\"btn btn-danger\">\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n\r\n  <button\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-info\"\r\n    (click)=\"editJobTitleDates()\"\r\n  >\r\n    {{ \"General.Save\" | translate }}\r\n  </button>\r\n</div>\r\n\r\n<!-- <ngx-spinner></ngx-spinner> -->\r\n","import {\r\n  Directive,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  ViewContainerRef,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\n\r\n@Directive({\r\n  selector: \"[appMatPaginatorStyle]\",\r\n})\r\nexport class MatPaginatorStyleDirective {\r\n  private _currentPage = 1;\r\n  private _pageGapTxt = \"...\";\r\n  private _rangeStart;\r\n  private _rangeEnd;\r\n  private _buttons = [];\r\n\r\n  @Input()\r\n  get showTotalPages(): number {\r\n    return this._showTotalPages;\r\n  }\r\n  set showTotalPages(value: number) {\r\n    this._showTotalPages = value % 2 == 0 ? value + 1 : value;\r\n  }\r\n  private _showTotalPages = 2;\r\n\r\n  constructor(\r\n    @Host() @Self() @Optional() private readonly matPag: MatPaginator,\r\n    private vr: ViewContainerRef,\r\n    private ren: Renderer2\r\n  ) {\r\n    //Sub to rerender buttons when next page and last page is used\r\n    this.matPag.page.subscribe((v) => {\r\n      this.switchPage(v.pageIndex);\r\n    });\r\n  }\r\n\r\n  private buildPageNumbers() {\r\n    const actionContainer = this.vr.element.nativeElement.querySelector(\r\n      \"div.mat-paginator-range-actions\"\r\n    );\r\n    const nextPageNode = this.vr.element.nativeElement.querySelector(\r\n      \"button.mat-paginator-navigation-next\"\r\n    );\r\n    const prevButtonCount = this._buttons.length;\r\n\r\n    // remove buttons before creating new ones\r\n    if (this._buttons.length > 0) {\r\n      this._buttons.forEach((button) => {\r\n        this.ren.removeChild(actionContainer, button);\r\n      });\r\n      //Empty state array\r\n      this._buttons.length = 0;\r\n    }\r\n\r\n    //initialize next page and last page buttons\r\n    if (this._buttons.length == 0) {\r\n      let nodeArray =\r\n        this.vr.element.nativeElement.childNodes[0].childNodes[0].childNodes[2]\r\n          .childNodes;\r\n      setTimeout(() => {\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          if (nodeArray[i].nodeName === \"BUTTON\") {\r\n            if (nodeArray[i].disabled) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(190, 130, 130, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(255, 0, 0, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    let dots = false;\r\n\r\n    for (let i = 0; i < this.matPag.getNumberOfPages(); i = i + 1) {\r\n      if (\r\n        (i < this._showTotalPages &&\r\n          this._currentPage < this._showTotalPages &&\r\n          i > this._rangeStart) ||\r\n        (i >= this._rangeStart && i <= this._rangeEnd)\r\n      ) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(i, this.matPag.pageIndex),\r\n          nextPageNode\r\n        );\r\n      } else {\r\n        if (i > this._rangeEnd && !dots) {\r\n          this.ren.insertBefore(\r\n            actionContainer,\r\n            this.createButton(this._pageGapTxt, this.matPag.pageIndex),\r\n            nextPageNode\r\n          );\r\n          dots = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButton(i: any, pageIndex: number): any {\r\n    const linkBtn = this.ren.createElement(\"mat-button\");\r\n    this.ren.addClass(linkBtn, \"mat-mini-fab\");\r\n    this.ren.setStyle(linkBtn, \"margin\", \"1%\");\r\n\r\n    const pagingTxt = isNaN(i) ? this._pageGapTxt : +(i + 1);\r\n    const text = this.ren.createText(pagingTxt + \"\");\r\n\r\n    this.ren.addClass(linkBtn, \"mat-custom-page\");\r\n    switch (i) {\r\n      case pageIndex:\r\n        this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        break;\r\n      case this._pageGapTxt:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(this._currentPage + this._showTotalPages);\r\n        });\r\n        break;\r\n      default:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(i);\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.ren.appendChild(linkBtn, text);\r\n    //Add button to private array for state\r\n    this._buttons.push(linkBtn);\r\n    return linkBtn;\r\n  }\r\n\r\n  private initPageRange(): void {\r\n    this._rangeStart = this._currentPage - this._showTotalPages / 2;\r\n    this._rangeEnd = this._currentPage + this._showTotalPages / 2;\r\n\r\n    this.buildPageNumbers();\r\n  }\r\n\r\n  private switchPage(i: number): void {\r\n    this._currentPage = i;\r\n    this.matPag.pageIndex = i;\r\n    this.initPageRange();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.initPageRange();\r\n  }\r\n}\r\n","export enum ResMessage {\n  success = 1,\n  faild = 0,\n}\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GroupByService {\r\n  constructor() {}\r\n\r\n  //group response data by DayName\r\n  groupBy(collection: any[], property: string): any[] {\r\n    if (!collection) {\r\n      // return null;\r\n    }\r\n    const groupedCollection = collection.reduce((previous, current) => {\r\n      if (!previous[current[property]]) {\r\n        previous[current[property]] = [current];\r\n      } else {\r\n        previous[current[property]].push(current);\r\n      }\r\n      return previous;\r\n    }, {});\r\n    return Object.keys(groupedCollection).map((key) => ({\r\n      key,\r\n      List: groupedCollection[key],\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class formValidationService {\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  isFormEmpty(form: FormGroup): boolean {\r\n    let Empty: boolean = true;\r\n\r\n    for (var field in form.controls) {\r\n      let control = form.get(field);\r\n      if (control.value) Empty = false;\r\n    }\r\n\r\n    return Empty;\r\n  }\r\n}\r\n"],"names":["RouterModule","UserBalanceDetailsComponent","ReservationEditComponent","ReservationIndexComponent","ReservationStatusComponent","StudentDiscountComponent","StudentsIndexComponent","CenterBranchesComponent","FunctionsSetupComponent","AddRoleComponent","RoleFunctionsComponent","UserBranchesRolesComponent","UserDeparmentAndJobTitleComponent","UsersComponent","DashboardComponent","routes","path","component","data","breadcrumb","label","view","children","redirectTo","pathMatch","disable","loadChildren","then","m","EducationalSetupModule","SetupModule","ExamsModule","ReportsModule","DashboardRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","SharedModule","MaterialModule","NgxSpinnerModule","NgbModule","MatPaginatorStyleDirective","ReservationDetailsComponent","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","DashboardModule","provide","useClass","useValue","declarations","selectors","decls","vars","consts","template","i0","Validators","MAT_DIALOG_DATA","CustomeValidator","AddMaterialMainDataComponent","route","router","fb","toastr","SubjectsService","SubjectMaterialsService","courseService","authserv","spinner","datePipe","languageService","appStrings","dialogRef","value","subjectId","unitId","materialId","queryParamMap","subscribe","params","functionId","Number","get","getUserRowFunctions","res","rowFunctions","backdropClick","ele","onCloseDialog","id","ar_name","materialName","type","stageLecture","order","isMandatory","close","EduCompId","getEduCompId","branchId","getBranchId","myForm","group","required","EditedMaterialId","whiteSpace","IsOnline","num_views","fromDate","toDate","orderNum","bigZero","validator","dateBefore","controls","e","getMaterialById","submitted","FormCtrl","_a","warning","valid","show","isOnline","_b","unitID","_c","_d","transform","_e","_f","addEditMaterial","returnValue","success","Id","navigate","queryParams","error","returnString","hide","retunValue","patchValue","model","setValue","getGroupsByEduCompId","groups","lstEduCompGroups","getTeacherBySubjectAndEduCompId","Teachers","teachers","returnSearchedUnitsBySubjectId","units","returnSearchedLessonsByUnitId","Lessons","ctx","defaultInputAppearance","ctx_r0","AddMaterialPartsComponent","dialog","videoTypeId","Name","Path","SecondaryPath","view_percentage","minusNum","description","undefined","getPartById","MaterialPart","addPart","reset","features","DeleteDialogComponent","SvgManager","ctx_r5","ctx_r7","ctx_r8","MatPartsIndexComponent","getMaterialParts","isLoaded","parts","MaterialParts","part","deletePart","i","indexOf","splice","open","msg","afterClosed","confirm","width","_r1","MatPaginator","MatSort","MatTableDataSource","forkJoin","map","startWith","AddSubQuestionComponent","AddExamComponent","location","examService","generalService","appConstants","subId","examId","getExamById","getAllGroupHeaderByExamId","parentId","examName","examDuration","pattern","hourMinutesPattern","formHour","toHours","isRepeatable","repeatNumbers","degreeToPass","max","GroupHeadersForm","examGroup","examHeader","examContent","stageId","educationYearId","teacherUserId","lessionId","getAllCountieres","getAllExamTypes","getAllQuestionGroups","getAllQuestionHeaders","examTypeValidator","RepeatableValidator","exam_ar_name","stageExam","dataSource","paginator","sort","filterValue","toLowerCase","examGroups","filter","option","question_group_ar_name","includes","examHeaders","question_head_ar_name","response","toHour","fromHour","canSellIndividually","Individually_Purchased","exam_minute","exam_period_minute","exam_hour","Subject_ID","quiz","examTypeId","_g","Avilable_Date_From","_h","Avilable_Date_To","_j","percentageToPass","_k","_l","GroupsHeadersList","itemsCount","length","filteredExamGroups","GroupHeadersFormCtrl","valueChanges","pipe","filter_question_group","filteredExamHeaders","filter_question_header","exam","repeatableExam","repeatableExam_Count","Unit_ID","exam_type_id","toAddEdit","split","console","log","addExam","validGroupHeadersForm","GroupHeadsubmitted","isAdd","onAddExamGroupHeader","fanctionId","sameGroupWithSameHeader","find","gh","group_name","head_name","info","tempExam","ToAddExamGroupHeader","exam_question_group_text","exam_question_head_title","exam_question_head_text","addExamGroupHeader","headerResponse","tempExcamGroupHeader","exam_question_head_id","question_title","examGroupHeader","editGroupHeaderMode","examGroupHeaderIdToEdit","questionNumber","questionType","toEdit","head","title","editExamGroupHeader","editResponse","toReplace","deleteExamGroupHeader","deleteResponse","todeleteIndex","findIndex","removeExamGroupHead","groupHeader","examGroupHeaderId","obj","lessonId","getAllExamType","examTypes","enable","getAllCountries","countries","countryId","getAllStages","stages","getAllEducationYears","educationYears","getAllSubjects","subjects","getAllUnitsBySublectId","results","getAllLessonsByUnitId","lessions","setValidators","clearValidators","updateValueAndValidity","_m","CustomDiscount","hasCustomDiscount","repeatingPrice","viewQuery","SaveExamDialogComponent","_r7","ctx_r30","ctx_r9","_r12","ctx_r36","ctx_r14","_r17","ctx_r42","ctx_r19","_r22","ctx_r48","ctx_r24","ctx_r50","ctx_r52","ctx_r53","ctx_r54","ctx_r2","ctx_r55","ctx_r57","ques_r59","ctx_r72","ctx_r77","AddQuestionsIndexComponent","ar","uploadFileService","paramMap","getAllQuestionsByHeadId","setTimeout","getEditorWidth","mainQuestion","questionTypeId","questionImage","remove_image","exam_question_text","questionPerfectAnswer","perfect_answer_attach","questionMark","answerOneId","answerOne","answerOneIsCorrect","answerOneImage","answerTwoId","answerTwo","answerTwoIsCorrect","answerTwoImage","answerThreeId","answerThree","answerThreeIsCorrect","answerThreeImage","answerFourId","answerFour","answerFourIsCorrect","answerFourImage","answerOneRemove_image","answerTwoRemove_image","answerThreeRemove_image","answerFourRemove_image","educationCompanyId","questionTypeValidation","status","questionsInGrid","ques","correctIndex","AnswersIds","answerId","CorrectAnswerId","pushNewQuestion","questionId","ExamQuestId","getQuestionForEditByID","handleStatusAfterSubmit","clearAsyncValidators","quesIdToSelect","image","questionFile","questionImagePath","imageOne","answerOneFile","choice1","choice_id","choice_text","is_correct","choice_image","imageTwo","answerTwoFile","choice2","imageThree","answerThreeFile","choice3","_o","_p","_q","_r","_s","_t","imageFour","answerFourFile","choice4","_u","_v","_w","_x","_y","_z","exam_question_main_question","_0","exam_question_mark","_1","exam_question_perfect_answer","_2","_3","exam_question_type_id","_4","exam_selected_question_head_id","exam_selected_subject_id","exam_question_image","_5","exam_question_id","mcq_choices","choices","correctChoiceDone","forEach","choice","editMcqQuestion","addMcqQuestion","addQuestion","clearForm","editQuestion","oneIsCorrect","twoIsCorrect","threeIsCorrect","fourIsCorrect","notSavedQuestionData","newData","mark","Text","ChoiceCounts","noOfInsertedAnswers","Image","getCorrectAnswerIndexFromForm","push","goToPrevQuestion","goToNextQuestion","goToNotSavedQuestion","currentQuestionToEdit","displayQuestionImageInEditor","changeCurrentCorrectAnswer","main_question","question_text","attach_path","previewPicture","question_type_id","MCQ_Choices","Is_Correct","_6","_7","_8","_9","_10","_11","_12","_13","_14","_15","_16","_17","_18","_19","_20","confirmed","deleteExamQuestion","toDeleteIndex","q","event","uploadFile","file","FileAsBase64","removeEditorImg","img","document","createElement","src","alt","style","maxWidth","height","borderRadius","margin","toolbarContainer","querySelector","parentNode","insertBefore","prevImg","getElementById","remove","answerNumber","FileInputs","querySelectorAll","input","newMark","fromForm","no","index","newQuestionId","saveLastQuestion","isCurrentQuesHasNoUpdates","onSubmit","selectedQuesIndex","isPrev","prevQuestionId","nextQuestionId","minWidth","save","saveExam","submit","resetFileInputs","editor","nativeElement","editorWidth","offsetWidth","editorFooterWidth","startsWith","EventEmitter","ctx_r6","ctx_r12","ctx_r16","ctx_r18","ctx_r20","ctx_r22","ctx_r23","ctx_r25","ctx_r26","ctx_r27","ctx_r28","ctx_r1","ctx_r29","ctx_r31","ctx_r33","ctx_r38","ctx_r40","changes","currentValue","inputs","outputs","closeDialog","reservationService","reservationId","ReservationDetails","reservation","reservationServ","toaster","getReservationEdit","userId","UserName","Religion","Gender","EducationTypeId","CenterBranchId","SchoolName","EducationalDivision","GuardianJob","Area","Address","StudentNumber","maxLength","minLength","MobileStartsWith","StudentWhatsAppNumber","FatherMobile","FatherWhatsAppNumber","MotherMobile","MotherWhatsAppNumber","HomeTelephone","SentviewId","currentYear","City","competitions","Hobbies","workshops","FormCtrls","EduCompIdCtrl","Reservation","Religions","Genders","EducationalDivisions","EducationTypes","Areas","ProfilePicture","ProfilePicture_Path","returnBranchesByEducTypeId","profilePicture","SubmitReservationEdit","typeId","CenterBranches","fileName","target","files","name","fileSize","size","fileType","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","result","_r3","ctx_r58","email","mobile","code","groupId","statusId","cityId","page","returnStatus","getArea","getReservationsList","branchIdCtrl","trim","p","Reservations","list","Status","currentYearCtrl","authservice","getStudentStatus","returnBranchesByEduCompId","EduCompUser_Status","note","EduCompUserId","statusReasonId","studentUserId","Code","reserveId","AcceptReservation","GetStudentStatus","getReasonsByStatusId","statuses","studyingGroups","userName","ReservationStatusPaging","disabled","SubmitReservationStatus","StatusId","Reasons","ManageViewsService","getCustomDiscount","searchForm","sentCode","sentCenterCode","sentMobile","sentEmail","InCenter","customDiscountId","searchStudent","getStudentCustomDiscount","getStudentCustomDiscountsList","updateStudentCustomDiscount","User","user_ID","Discount","CustomDiscountList","SearchStudentsService","queryStringEm","queryStringCo","queryStringPhoneNumber","queryStringMozakretyCode","studyingGroup","getStudentsByEduCompId","getStudentGroupsAndStatuts","students","lists","totalCount","Statuts","deleteStudent","_r2","DepartmentComponent","departmentService","authService","getAllDepartments","curPage","en_name","depratmentsList","itemsCounts","countItems","addDepartment","updateDepartment","editDepartment","department","deleteDepartment","pageIndex","isArabic","getDataFromHR","List","AnnouncementIndexComponent","GeneralService","announcementService","getTeachersByEducompId","getTeacherAnnouncement","getAllAnnouncements","lstTeachers","AnnouncementSetupComponent","roleService","announceId","getAnnounceById","From_Date","To_Date","announcementText","announcement_text","announcementPicture","picturePath","eduCompId","addAnnouncement","EditJobTitleDatesComponent","ctx_r32","ctx_r35","ctx_r44","ctx_r47","ArticlesSetupComponent","articleService","Date","ArticleContent","depJobIds","departmentId","from_date","to_date","getAllArticles","startSortingTable","sortingDataAccessor","item","property","jobTitle","curPageber","ArticleList","article","currentDate","addArticle","updateArticle","editArticle","j","depJobId","removeArticle","deleteArticle","jobTitle_articleId","jobtitle","editJobTitleArticle","editJobTitleDates","jobTitle_article","removeJobtitleArticle","deleteJobTitleArticle","firstPage","ctx_r4","AddCategoryComponent","_serviceCategories","fileService","param","form","Cat_Name","SubCat_Name","File","addSubCat","SubCat_Names","removeImage","Sub_Names","addCategories","imgSrc","convertImgToBase64","catch","showAddOnly","ResMessage","CategorieComponent","translate","categorieservice","messagesService","onLangChange","lang","curLang","isAdmin","geAll","getCategories","categories","MainCategories","sendDataToHR","DiplomaComponent","ctx_r21","ctx_r45","_r43","ctx_r49","ctx_r65","_r63","ctx_r69","ctx_r76","AddCourseComponent","courseServ","jobServ","categoriesService","appAssets","chechAuthorization","showAddCategoryButton","showAddDiplomaButton","isFromRequestPage","backBtnUrl","courseId","getCourseById","course","subCourse_attach","savedFile","attach_name","attach_size","attach_date","mainCatId","course_categories","main_catId","mainCategoryId","onChaneMainCategory","courseDuration","Math","floor","subCourseMinutes","depts","d","whatWillLearn","learning_outcomes","mandatoryDepartment","recommendedDepartment","mandatoryJobTitles","recommendedJobTitles","dept","job","is_mandatory","mandatoryDeptCtrl","onSelectDepartment","mandatoryJobCtrl","recommendedDeptCtrl","recommendedJobCtrl","isEnglish","subCourse_ar_name","subCourse_en_name","Diploma_id","subCategoryIds","subjectPromoVideoPath","mandatoryFor","recommendedFor","subjectDescription","isFollow","CourseCertificate","learningOutcomes","attach","imageChange","mandatoryDeptId","recommendedDeptId","getAllCategories","mainCategories","isLoadedMainCategories","mainCategoryIds","getAllSubCategoriesByMainId","subCategories","SubCategories","isStartEditMode","isCategorySelected","getAllSubCategories","languageNo","checked","mandatory","fromGetCourse","isLoadedBasic","getSpecificJobTitlesByDepartmentIds","ids","dataSourceBasic","isAllCheckboxSelectedBasic","updateContentOfTables","isLoadedRecommended","dataSourceRecommended","isAllCheckboxSelectedRecommended","checkboxValue","isBasicTable","updateSelectAllChackBox","updateJobFormValue","isRecommedned","every","selectedIds","isRecommendedTable","addWhatWillLearn","addCourse","updateCourse","subCourseDepJobTitle","promoLink","courseHours","courseMinutes","courseCertificate","learningOutComes","depJodIds","disableClose","reloadDiploma","_r10","_r13","AddUsersToCourseComponent","courseArName","courseEnName","account_email","excelFile","getAllUsers","userList","itemCount","formCtls","checkUser","user","subject_id","addUser","deleteUser","uploadUsersByExcel","uploadedFile","isSendAllSuccess","errors","isUploaded","resetFileById","EditOptionsDialogComponent","CourseIndexComponent","jobId","diplomaId","courseName","getAllCourses","category","cat_name","subCategory","sub_cat_name","instructors","first_name","searchData","depId","subCourseName","diploma_id","getAllCoursesBySearch","courses","subCourseList","subIds","Sub_Category","totalItems","removeCourse","panelClass","CourseObjectivesComponent","pram","subjectObjectiveId","whatYouLearn","getAllCourseObjectives","courseObjective","courseList","what_learn","addEditCourseObjective","deleteCourseObjective","ctx_r17","_r21","ctx_r34","ctx_r37","CourseRequestComponent","courseAndTeachingRequestService","tostar","getAllRequests","approvement","getAllCourseRequests","Requests","request","ApproveCourseRequest","course_ar_name","course_en_name","employee_first_name","AddUnitAttachmentComponent","attachmentId","file_ar_name","file_en_name","attachFile","getAttachmentById","stageAttach","getUnitAttachmentById","fileEduUnit","formCtrls","unit_id","addEditUnitAttachment","File_Edu_Unit","AddUnitComponent","subjectsService","getUnitById","unit_ar_name","unit_en_name","unitDescription","thumbnailPic","addedUnit","unitThumb","unit_name","subjectid","body","currentSubject","addUpdateUnit","ExamsIntegrationComponent","examsService","langService","getImplemenationsByCourseID","getExamByCourseId","implementation","implementationList","ImplementationList","exams","EgyExams","impId","examIds","EduComp","impID","impIdCtrl","ExamsIDs","examIdsCtrl","copyExamsToHR","AppAssets","ctx_r11","StructureIndexComponent","isCourseLoaded","getUnits","changeSelectedUnit","getAllUnitData","selectedUnitId","unitData","sortUnitDataByOrder","unit","selectedUnitIndex","selectedUnitName","getSelectedUnitData","deleteUnit","openAddEditLectureDialog","openAddEditExamDialog","openAddEditAttachmentDialog","lectureId","minHeight","lecture","maxHeight","autoFocus","attachment","deleteUnitData","api","deleteMaterial","deleteExam","deleteUnitAttachment","deletedIndex","a","b","el","svgManager","folder","exam_content","pdf","selectedCreationItem","dialogTemplate","closeAll","isGeneralData","_r6","TeachingRequestsComponent","getAllTeachingRequests","teachingRequests","ApproveTeachingRequest","AddDiplomaComponent","DiplomaId","getDiplomaById","diploma_attach","diplomaDescreption","category_ids","learningOutcomeName","addOutcome","dipOutcomes","Diploma","diploma_ar_name","diploma_en_name","promo_link","mainCatIdVar","diploma_category","selectedSubCatIds","getSubCategoriesByMainId","LearningOutComes","addDiploma","updateDiploma","ctx_r3","getAllDiplomas","getAllDiploma","diplomaList","removeDiploma","ExceptionalViewsComponent","EducationalService","CashPaymentService","resetForm","itemId","itemTypeId","paymentMethod","extraViews","paidAmount","resetTemplate","yearId","username","resetFormCtrl","addExceptionalViews","lessons","materials","getSubjectByTeacherId","lsts","SubjectId","GetUnits","GetLessons","teacherId","GetItemsByLessonWithEnded","GetItemsByUnit","GetItemsBySubject","GenerateBalanceCodesComponent","generateCodesService","Amount","Price","GenerateBalanceCodes","downloadFile","GiftsCategoryAddComponent","giftsService","gift","giftcategoryId","englishName","arabicName","currentLang","IdCtrl","arbNameCtrl","engNameCtrl","addEditCategory","GiftsCategoryIndexComponent","getGiftsCategoryAll","getCategoriesAll","giftcategoryList","giftCategory","removeGiftCategory","RemoveGiftCategory","GiftsAddComponent","giftId","getGiftById","getGiftCategoryDropDown","giftPicture","giftsCategoryId","points","qty","getAllGiftCategory","addGift","giftArName","giftEnName","categoryCtrl","GiftCategoryId","pointsCtrl","qtyCtrl","descriptionCtrl","deleteAttach","GiftsIndexComponent","deviceService","getGiftsAll","arbGiftCategory","engGiftCategory","getAllGifts","gifts","giftList","UpdateJobDepartmentComponent","JobTitleComponent","jobTitleService","getAllJobTitles","departmentsIds","departments","job_ar_name","formCtrl","job_en_name","dep_ids","jobTitle_list","JobTitle","addJobTitle","updateJobTitles","deleteJobTitles","deleteJobTitleDepartment","job_title_dep_id","updated","deleteJobTitle","update_JobTitle_Department","ManageViewsComponent","resetViews","GetItemsByLesson","ManualCashPaymentComponent","centerCode","searchedMail","searchedName","paymentForm","balance","userMobile","userEmail","currentBalance","itemPrice","isPaymentExcel","getFormValidationErrors","paymentFormCtrl","isPaymentExcelValidators","itemTypeIdValidators","CashPaymentSearch","getPaymentsHistory","CashPaymentPost","ManualPaymentByExcel","userPaymentsHistories","userPayments","geItemPrice","price","totalErrors","Errors","Object","keys","key","controlErrors","keyError","replace","PaymentByExcel","ctx_r15","PointsSetupComponent","PointsService","getExamPoints","getLeturePoints","lecturesForm","ByQuestion","attendancevalue","absencevalue","ExamForm","from","to","ByQuestionValidators","lecsubmitted","lecturesFormCtrls","selectedSubjectId","questionAttempt","questionAttempts","isLecture","addPoints","ExamSubmitted","ExamFormCtrls","fromToExamValidators","getPoints","lecturePoints","ExamPoints","point","Value","deletePoint","teacheruserId","smallerThanNumbers","QuestionStudentsSettingsComponent","getTeacherByEduCompId","PrivatePrice","PublicPrice","IfPublicAccessibleAfterLecturesCount","changeType","isValid","$","addQuestionSettings","resetManual","changeValidators","SendSingularWhatsappMsgComponent","whatsappService","SearchStudentService","formValidationService","AdminEducationCompanyId","sendToStudentWhatsApp","sendToFatherWhatsApp","sendToMotherWhatsApp","isFormEmpty","searchResponse","instant","sendSingularWhatsAppMsg","SendWhatsappMsgComponent","whatsAppService","adminEducationCompanyId","msgCtrl","fileCtrl","sendWhatsAppMsg","breadcrubm","SetupRoutingModule","NgxPaginationModule","ctx_r13","branchService","branchName","districtId","getAllBranches","pageNumber","getAllAllCenterBranches","branches","centerBrnachesList","branch","deleteBranch","addEditBranches","removeBranch","ElementRef","functionService","functionNameEn","functionNameAr","link","getAllFunctions","functions","func","functionIdCtrl","functionNameEnCtrl","function_en_name","functionNameArCtrl","functionName","linkCtrl","functionURL","addBtn","innerText","deleteFunction","addEditFunction","removeFunction","roleId","roleName","getAllRoles","roles","role","roleIdCtrl","roleNameCtrl","addEditRole","removeRole","deleteRole","getAllRoleFunctions","groupFunctions","g","allFunctionsLength","roleFunctions","rolefunctionIds","function","allChecked","$event","found","functionsList","addEditRoleFunctions","userService","groupByService","branchsIds","getAllBranchesByCenter","getAllUserBranchesWithFunctions","getAllFunctionsByRoleId","groupBy","functionIds","userBranchesWithFunctions","branchUserList","funParent","roleFunctionsList","fun","checkedfunctionIds","deleteUserBranchRoleFunction","deleteUserRoleFunctions","centerBranchUserFuncId","roleFunctionsIds","branchUser","fromDateCtrl","toDateCtrl","addUserBranchesAndRoleFunctions","onDeleteFunction","UpdateDateComponent","jopTitleDepartmentService","functionParentId","getall","dept_id","job_departments","filterPredicate","dept_ar_name","toLocaleLowerCase","dept_en_name","join","getJopTitlebyDepartment","userDepartmentJobtitleList","employee_name","customFilter","user_id","jobTitle_dept_id","addJopTitlebyDepartment","editAllDeparment","dep_id","dep_job_id","editjobTitle","user_dept_job_id","deleteUserDeptJobTitle","jopid","deleteJopTitle","phone","MobileLength","password","confirmedPass","mustMatch","resetSearch","searchBody","usersList","account_password","addEditUser","removeUser","copyDataFromHR","AppClientService","http","post","ended","factory","providedIn","ExamsService","eduCompID","put","delete","pointId","correctionStatus","courseID","educompId","templateId","ArticlesService","UnitId","partId","AttachId","materialIdHiddenQuiz","LectureID","attendance","BranchesService","getAllBranchesURL","getAllAllCenterBranchesURL","addEditBranchesURL","deleteBranchesURL","getAllDistrictsURL","FunctionsService","addEditFunctionURL","deleteFunctionURL","RolesService","getAll","UsersService","CategoriesService","WhatsAppService","jobTitleDates","matPag","vr","ren","v","switchPage","_showTotalPages","actionContainer","element","nextPageNode","prevButtonCount","_buttons","button","removeChild","nodeArray","childNodes","nodeName","setStyle","dots","getNumberOfPages","_currentPage","_rangeStart","_rangeEnd","createButton","_pageGapTxt","linkBtn","addClass","pagingTxt","isNaN","text","createText","setAttribute","listen","appendChild","buildPageNumbers","initPageRange","showTotalPages","GroupByService","collection","groupedCollection","reduce","previous","current","Empty","field","control"],"sourceRoot":"webpack:///"}