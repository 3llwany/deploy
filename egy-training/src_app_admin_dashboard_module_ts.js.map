{"version":3,"file":"src_app_admin_dashboard_module_ts.js","mappings":"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rD,CADF,EAIEsb,iBAAiB,GAAG,IAApB;QACH,CAND;;QAOA,IAAI,CAACA,iBAAL,EAAwB;UACtB,KAAKvY,MAAL,CAAYyD,OAAZ,CAAoB,8BAApB;UACA;QACD,CArI2C,CAuI5C;;;QACA,IACE,CAACmS,OAAO,CAACE,WAAR,KAAwB,IAAxB,IACCF,OAAO,CAACE,WAAR,IAAuB,EADxB,IAECF,OAAO,CAACE,WAAR,IAAuB7O,SAFzB,KAGA2O,OAAO,CAACI,YAAR,KAAyB,IAHzB,IAIAJ,OAAO,CAAC3Y,IAAR,IAAgB,IALlB,EAME;UACA,KAAK+C,MAAL,CAAYyD,OAAZ,CAAoB,0BAApB;UACA;QACD,CAjJ2C,CAmJ5C;;;QACA,IACE,CAAC0S,OAAO,CAACL,WAAR,KAAwB,IAAxB,IACCK,OAAO,CAACL,WAAR,IAAuB,EADxB,IAECK,OAAO,CAACL,WAAR,IAAuB7O,SAFzB,KAGAkP,OAAO,CAACH,YAAR,KAAyB,IAHzB,IAIAG,OAAO,CAAClZ,IAAR,IAAgB,IALlB,EAME;UACA,KAAK+C,MAAL,CAAYyD,OAAZ,CAAoB,0BAApB;UACA;QACD,CATD,MASO;UACL,IAAI,KAAK2U,UAAL,GAAkB,CAAtB,EAAyB;YACvB,KAAKM,eAAL,CAAqB7K,SAArB;UACD,CAFD,MAEO;YACL,KAAK8K,cAAL,CAAoB9K,SAApB;UACD;QACF,CAnK2C,CAqK5C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MACD;IACF,CAvWH,CAyWE;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IAEA;IACA;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","sources":["./src/app/admin/dashboard-routing.module.ts","./src/app/admin/dashboard.module.ts","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/add-main-data/add-main-data.component.ts","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/add-main-data/add-main-data.component.html","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/add-material-parts/add-material-parts.component.ts","./src/app/admin/pages/educational-setup/EducationalSubject/add-materials/add-material-parts/add-material-parts.component.html","./src/app/admin/pages/exams-setup/exams/add-exam/add-exam.component.ts","./src/app/admin/pages/exams-setup/exams/add-exam/add-exam.component.html","./src/app/admin/pages/exams-setup/exams/add-sub-question/add-sub-question.component.ts","./src/app/admin/pages/exams-setup/exams/add-sub-question/add-sub-question.component.html","./src/app/admin/pages/reservation/reservation-details/reservation-details.component.ts","./src/app/admin/pages/reservation/reservation-details/reservation-details.component.html","./src/app/admin/pages/reservation/reservation-edit/reservation-edit.component.ts","./src/app/admin/pages/reservation/reservation-edit/reservation-edit.component.html","./src/app/admin/pages/reservation/reservation-index/reservation-index.component.ts","./src/app/admin/pages/reservation/reservation-index/reservation-index.component.html","./src/app/admin/pages/reservation/reservation-status/reservation-status.component.ts","./src/app/admin/pages/reservation/reservation-status/reservation-status.component.html","./src/app/admin/pages/reservation/student-discount/student-discount.component.ts","./src/app/admin/pages/reservation/student-discount/student-discount.component.html","./src/app/admin/pages/reservation/students/students-index/students-index.component.ts","./src/app/admin/pages/reservation/students/students-index/students-index.component.html","./src/app/admin/pages/setup/Department/department.component.ts","./src/app/admin/pages/setup/Department/department.component.html","./src/app/admin/pages/setup/announcement-index/announcement-index.component.ts","./src/app/admin/pages/setup/announcement-index/announcement-index.component.html","./src/app/admin/pages/setup/announcement-setup/announcement-setup.component.ts","./src/app/admin/pages/setup/announcement-setup/announcement-setup.component.html","./src/app/admin/pages/setup/articles-setup/articles.component.ts","./src/app/admin/pages/setup/articles-setup/articles.component.html","./src/app/admin/pages/setup/categrioes/categorie.component.ts","./src/app/admin/pages/setup/categrioes/categorie.component.html","./src/app/admin/pages/setup/courses/add-course/add-course.component.ts","./src/app/admin/pages/setup/courses/add-course/add-course.component.html","./src/app/admin/pages/setup/courses/add-users-to-course/add-users-to-course.component.ts","./src/app/admin/pages/setup/courses/add-users-to-course/add-users-to-course.component.html","./src/app/admin/pages/setup/courses/course-index/course-index.component.ts","./src/app/admin/pages/setup/courses/course-index/course-index.component.html","./src/app/admin/pages/setup/courses/course-objectives/course-objectives.component.ts","./src/app/admin/pages/setup/courses/course-objectives/course-objectives.component.html","./src/app/admin/pages/setup/courses/course-requestes/course-requestes.component.ts","./src/app/admin/pages/setup/courses/course-requestes/course-requestes.component.html","./src/app/admin/pages/setup/courses/course-structure/add-unit-attachment/add-unit-attachment.component.ts","./src/app/admin/pages/setup/courses/course-structure/add-unit-attachment/add-unit-attachment.component.html","./src/app/admin/pages/setup/courses/course-structure/add-unit/add-unit.component.ts","./src/app/admin/pages/setup/courses/course-structure/add-unit/add-unit.component.html","./src/app/admin/pages/setup/courses/course-structure/structure-index/structure-index.component.ts","./src/app/admin/pages/setup/courses/course-structure/structure-index/structure-index.component.html","./src/app/admin/pages/setup/courses/diploma/diploma.component.ts","./src/app/admin/pages/setup/courses/diploma/diploma.component.html","./src/app/admin/pages/setup/courses/teaching-requests/teaching-requests.component.ts","./src/app/admin/pages/setup/courses/teaching-requests/teaching-requests.component.html","./src/app/admin/pages/setup/exceptional-views/exceptional-views.component.ts","./src/app/admin/pages/setup/exceptional-views/exceptional-views.component.html","./src/app/admin/pages/setup/generate-balance-codes/generate-balance-codes.component.ts","./src/app/admin/pages/setup/generate-balance-codes/generate-balance-codes.component.html","./src/app/admin/pages/setup/gifts-category/gifts-category-add/gifts-category-add.component.ts","./src/app/admin/pages/setup/gifts-category/gifts-category-add/gifts-category-add.component.html","./src/app/admin/pages/setup/gifts-category/gifts-category-index/gifts-category-index.component.ts","./src/app/admin/pages/setup/gifts-category/gifts-category-index/gifts-category-index.component.html","./src/app/admin/pages/setup/gifts/gifts-add/gifts-add.component.ts","./src/app/admin/pages/setup/gifts/gifts-add/gifts-add.component.html","./src/app/admin/pages/setup/gifts/gifts-index/gifts-index.component.ts","./src/app/admin/pages/setup/gifts/gifts-index/gifts-index.component.html","./src/app/admin/pages/setup/job-titles/job-title/job-title.component.ts","./src/app/admin/pages/setup/job-titles/job-title/job-title.component.html","./src/app/admin/pages/setup/job-titles/update-job-department/update-job-department.component.ts","./src/app/admin/pages/setup/job-titles/update-job-department/update-job-department.component.html","./src/app/admin/pages/setup/manage-views/manage-views.component.ts","./src/app/admin/pages/setup/manage-views/manage-views.component.html","./src/app/admin/pages/setup/manual-cash-payment/manual-cash-payment.component.ts","./src/app/admin/pages/setup/manual-cash-payment/manual-cash-payment.component.html","./src/app/admin/pages/setup/points-setup/points-setup.component.ts","./src/app/admin/pages/setup/points-setup/points-setup.component.html","./src/app/admin/pages/setup/question-student-settings/question-student-settings.component.ts","./src/app/admin/pages/setup/question-student-settings/question-student-settings.component.html","./src/app/admin/pages/setup/send-singular-whatsapp-msg/send-singular-whatsapp-msg.component.ts","./src/app/admin/pages/setup/send-singular-whatsapp-msg/send-singular-whatsapp-msg.component.html","./src/app/admin/pages/setup/send-whatsapp-msg/send-whatsapp-msg.component.ts","./src/app/admin/pages/setup/send-whatsapp-msg/send-whatsapp-msg.component.html","./src/app/admin/pages/setup/setup-routing.module.ts","./src/app/admin/pages/setup/setup.module.ts","./src/app/admin/pages/users/center-branches/center-branches.component.ts","./src/app/admin/pages/users/center-branches/center-branches.component.html","./src/app/admin/pages/users/functions-setup/functions-setup.component.ts","./src/app/admin/pages/users/functions-setup/functions-setup.component.html","./src/app/admin/pages/users/roles/add-role/add-role.component.ts","./src/app/admin/pages/users/roles/add-role/add-role.component.html","./src/app/admin/pages/users/roles/role-functions/role-functions.component.html","./src/app/admin/pages/users/roles/role-functions/role-functions.component.ts","./src/app/admin/pages/users/user-branches-roles/user-branches-roles.component.ts","./src/app/admin/pages/users/user-branches-roles/user-branches-roles.component.html","./src/app/admin/pages/users/user-deparment-and-job-title/deparment-job-title.component.ts","./src/app/admin/pages/users/user-deparment-and-job-title/deparment-job-title.component.html","./src/app/admin/pages/users/users/users.component.ts","./src/app/admin/pages/users/users/users.component.html","./src/app/admin/services/Admin/cash-payment.service.ts","./src/app/admin/services/Admin/exams.service.ts","./src/app/admin/services/Admin/manage-views.service.ts","./src/app/admin/services/Admin/points.service.ts","./src/app/admin/services/Admin/setup/articles.service.ts","./src/app/admin/services/Admin/subjectMaterials.service.ts","./src/app/admin/services/roles/branches.service.ts","./src/app/admin/services/roles/functions.service.ts","./src/app/admin/services/roles/roles.service.ts","./src/app/admin/services/roles/users.service.ts","./src/app/admin/services/whatsApp/whats-app.service.ts","./src/app/shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component.ts","./src/app/shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component.html","./src/app/shared/directives/mat-paginator-style.directive.ts","./src/app/shared/services/General/group-by.service.ts","./src/app/shared/services/formValidation.service.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { UserBalanceDetailsComponent } from \"app/shared/components/user-balance-details/user-balance-details.component\";\r\nimport { IsAdminGuard } from \"app/shared/services/auth/Guards/roles/is-admin.guard\";\r\nimport { ReservationEditComponent } from \"./pages/reservation/reservation-edit/reservation-edit.component\";\r\nimport { ReservationIndexComponent } from \"./pages/reservation/reservation-index/reservation-index.component\";\r\nimport { ReservationStatusComponent } from \"./pages/reservation/reservation-status/reservation-status.component\";\r\nimport { StudentDiscountComponent } from \"./pages/reservation/student-discount/student-discount.component\";\r\nimport { StudentsIndexComponent } from \"./pages/reservation/students/students-index/students-index.component\";\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { UserDeparmentAndJobTitleComponent } from \"./pages/users/user-deparment-and-job-title/deparment-job-title.component\";\r\nimport { UsersComponent } from \"./pages/users/users/users.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"users\",\r\n    pathMatch: \"full\",\r\n  },\r\n\r\n  {\r\n    path: \"users\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n        data: {\r\n          breadcrumb: {\r\n            label: \"labels.Users\",\r\n            disable: true,\r\n          },\r\n          view: \"user-index\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"index\",\r\n        component: UsersComponent,\r\n        data: {\r\n          breadcrumb: \"labels.Employees\",\r\n          view: \"user-index\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"user-roles-branches/:userId/:roleId\",\r\n        component: UserBranchesRolesComponent,\r\n        data: {\r\n          view: \"user-roles\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"functions\",\r\n        component: FunctionsSetupComponent,\r\n      },\r\n\r\n      {\r\n        path: \"center-branches\",\r\n        component: CenterBranchesComponent,\r\n        data: {\r\n          breadcrumb: \"labels.Branch\",\r\n          view: \"center-branches\",\r\n        },\r\n      },\r\n\r\n      {\r\n        path: \"students-index\",\r\n        component: StudentsIndexComponent,\r\n      },\r\n      {\r\n        path: \"roles\",\r\n        component: AddRoleComponent,\r\n        data: {\r\n          breadcrumb: \"Navbar.Roles\",\r\n          view: \"roles\",\r\n        },\r\n      },\r\n      {\r\n        path: \"role-fuctions/:roleId\",\r\n        component: RoleFunctionsComponent,\r\n        data: {\r\n          breadcrumb: \"labels.AddRoleFunctions\",\r\n          view: \"role-functions\",\r\n        },\r\n      },\r\n      {\r\n        path: \"user-dep-job/:userId\",\r\n        component: UserDeparmentAndJobTitleComponent,\r\n        data: {\r\n          breadcrumb: \"jobTitlebyDepartment.adddepartment\",\r\n          view: \"user-dep-job\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"reservation\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n      { path: \"index\", component: ReservationIndexComponent },\r\n      {\r\n        path: \"edit-reservation/:reservationId\",\r\n        component: ReservationEditComponent,\r\n      },\r\n      {\r\n        path: \"reservation-status/:reservationId\",\r\n        component: ReservationStatusComponent,\r\n      },\r\n      {\r\n        path: \"student-discount\",\r\n        component: StudentDiscountComponent,\r\n      },\r\n      {\r\n        path: \"balance-details/:userId\",\r\n        component: UserBalanceDetailsComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"educational-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/educational-setup/educational-setup.module\").then(\r\n        (m) => m.EducationalSetupModule\r\n      ),\r\n  },\r\n\r\n  {\r\n    path: \"setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/setup/setup.module\").then((m) => m.SetupModule),\r\n    data: {\r\n      breadcrumb: {\r\n        label: \"Navbar.Setup\",\r\n        disable: true,\r\n      },\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"exams-setup\",\r\n    loadChildren: () =>\r\n      import(\"./pages/exams-setup/exams.module\").then((m) => m.ExamsModule),\r\n    data: {\r\n      breadcrumb: \"Navbar.ExamsSetup\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"reports\",\r\n    loadChildren: () =>\r\n      import(\"./pages/reports/reports.module\").then((m) => m.ReportsModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"./../shared/shared.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\r\nimport { UsersComponent } from \"./pages/users/users/users.component\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { MatPaginatorStyleDirective } from \"app/shared/directives/mat-paginator-style.directive\";\r\nimport { ReservationIndexComponent } from \"./pages/reservation/reservation-index/reservation-index.component\";\r\nimport { ReservationEditComponent } from \"./pages/reservation/reservation-edit/reservation-edit.component\";\r\nimport { ReservationDetailsComponent } from \"./pages/reservation/reservation-details/reservation-details.component\";\r\nimport { ReservationStatusComponent } from \"./pages/reservation/reservation-status/reservation-status.component\";\r\nimport { StudentDiscountComponent } from \"./pages/reservation/student-discount/student-discount.component\";\r\nimport { StudentsIndexComponent } from \"./pages/reservation/students/students-index/students-index.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport { UserDeparmentAndJobTitleComponent } from \"./pages/users/user-deparment-and-job-title/deparment-job-title.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { SetupModule } from \"./pages/setup/setup.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    SetupModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    UserBranchesRolesComponent,\r\n    FunctionsSetupComponent,\r\n    CenterBranchesComponent,\r\n    MatPaginatorStyleDirective,\r\n    ReservationIndexComponent,\r\n    ReservationEditComponent,\r\n    ReservationDetailsComponent,\r\n    ReservationStatusComponent,\r\n    StudentDiscountComponent,\r\n    StudentsIndexComponent,\r\n    AddRoleComponent,\r\n    RoleFunctionsComponent,\r\n    UserDeparmentAndJobTitleComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class DashboardModule { }\r\n","import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport {\r\n  IAddMaterailVM,\r\n  IGetMaterialVM,\r\n  lesson,\r\n  teacherBySubEduComp,\r\n  unit,\r\n} from \"app/admin/models/admin/educations\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { SubjectsService } from \"app/admin/services/Admin/subjects.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { StudentGroupVM } from \"app/admin/models/admin/reservation\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { environment } from \"environments/environment\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {\r\n  ICourseGetVM,\r\n  IUnitDataGeneralVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { RadioButtonModel } from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { AppStrings } from \"app/shared/data/app-strings\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-material-main-data\",\r\n  templateUrl: \"./add-main-data.component.html\",\r\n  styleUrls: [\"./add-main-data.component.scss\"],\r\n})\r\nexport class AddMaterialMainDataComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: number;\r\n  parentId: number;\r\n  courseName: string;\r\n  rowFunctions: IRowFunctionVM[];\r\n  subjectId: any;\r\n  unitId: number;\r\n  materialId: any;\r\n  subject_ar_name: string;\r\n  // sava last data in database not in form\r\n  materialName: string;\r\n  order: number;\r\n  isMandatory: boolean;\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  Teachers: teacherBySubEduComp[] = [];\r\n  units: unit[];\r\n  Lessons: lesson[];\r\n  groups: StudentGroupVM[];\r\n  getGroupsValue: any[] = [];\r\n  // attachFile: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private SubjectsService: SubjectsService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private courseService: CourseService,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private datePipe: DatePipe,\r\n    private languageService: LanguageService,\r\n    public appStrings: AppStrings,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddMaterialMainDataComponent>\r\n  ) {\r\n    this.subjectId = data.subjectId;\r\n    this.unitId = data.unitId;\r\n    this.materialId = data.materialId;\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      // this.materialId = params.get(\"materialId\");\r\n      // this.subjectId = params.get(\"courseId\");\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // this.parentId = Number(params.get(\"parentId\"));\r\n      // this.courseName = params.get(\"courseName\");\r\n\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n\r\n      // this.returnSearchedUnitsBySubjectId();\r\n    });\r\n\r\n    // this.getSubjectByID(this.subjectId);\r\n\r\n    // on closing dialog by clicking outside dialog\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    let data: IUnitDataGeneralVM = null;\r\n    if (this.materialId) {\r\n      data = {\r\n        id: this.materialId,\r\n        ar_name: this.materialName,\r\n        type: this.appStrings.stageLecture,\r\n        order: this.order,\r\n        isMandatory: this.isMandatory,\r\n      };\r\n    }\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n    // this.getTeacherByEduCompId();\r\n    // this.getGroupsByEduCompId();\r\n\r\n    this.myForm = this.fb.group(\r\n      {\r\n        subjectId: [this.subjectId, [Validators.required]], //+\r\n        EditedMaterialId: [this.materialId], //+\r\n        //  teacherUserId: [\"\"], // Validators.required\r\n        //  selectedItemType: [1], // Validators.required\r\n        // selectedItemId: [\"\"], // Validators.required\r\n        materialName: [\"\", [Validators.required, CustomeValidator.whiteSpace]], //+\r\n        // onlyCode: [false, Validators.required],\r\n        //  CustomDiscountApplied: [false, Validators.required],\r\n        //  CodeIsPurchasable: [false, Validators.required],\r\n        IsOnline: [1, [Validators.required]], //+\r\n        num_views: [0], //online //+\r\n        // attachFile: [null], //+\r\n        // studentGroupIDs: [], //ofline\r\n        // address: [\"\"], //ofline\r\n        // materialPrice: [0], //onlyCode=false\r\n        // priceDiscount: [\"\"], //onlyCode=false\r\n        // codePrice: [\"\"], //onlyCode=true\r\n        // priceDiscountType: [\"null\", [CustomeValidator.minusNum]],\r\n        fromDate: [\"\", [Validators.required]], //+\r\n        toDate: [\"\"], //+\r\n        //  unitId: [\"\"],\r\n        // lessonId: [\"\"],\r\n        orderNum: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n        isMandatory: [true, [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"fromDate\", \"toDate\"),\r\n      }\r\n    );\r\n    //this.onlyCodeValidators();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      //   this.getTeacherByEduCompId();\r\n      //   this.getGroupsByEduCompId();\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.materialId != null) {\r\n      this.getMaterialById();\r\n    }\r\n  }\r\n\r\n  //add Material Form\r\n  addEditMaterial() {\r\n    this.submitted = true;\r\n    // let type = this.FormCtrl.selectedItemType?.value;\r\n    // let selectedItemId;\r\n    // if (type == 1) selectedItemId = this.subjectId;\r\n    // else if (type == 2) selectedItemId = this.FormCtrl.unitId?.value;\r\n    // else if (type == 3) selectedItemId = this.FormCtrl.lessonId?.value;\r\n    // this.FormCtrl.selectedItemId?.setValue(selectedItemId);\r\n    // if (\r\n    //   this.FormCtrl.IsOnline.value == 2 &&\r\n    //   !this.FormCtrl.studentGroupIDs?.value?.length\r\n    // ) {\r\n    //   this.toastr.warning(\"Must Choose Group!\");\r\n    //   return;\r\n    // }\r\n    if (\r\n      this.FormCtrl.IsOnline.value == 1 &&\r\n      Number(this.FormCtrl.num_views?.value) < 0\r\n    ) {\r\n      this.toastr.warning(\"Material.noOfViesMsgError\");\r\n      return;\r\n    }\r\n\r\n    // console.log(this.myForm);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let data: IAddMaterailVM = {\r\n        EditedMaterialId: this.materialId,\r\n        isOnline: this.FormCtrl.IsOnline?.value,\r\n        // attachFile: this.FormCtrl.attachFile?.value,\r\n        subjectId: this.subjectId,\r\n        unitID: this.unitId,\r\n        num_views: this.FormCtrl.num_views?.value,\r\n        materialName: this.FormCtrl.materialName?.value,\r\n        toDate: this.datePipe.transform(this.FormCtrl.toDate?.value),\r\n        fromDate: this.datePipe.transform(this.FormCtrl.fromDate?.value),\r\n        orderNum: this.FormCtrl.orderNum.value,\r\n        isMandatory: this.FormCtrl.isMandatory.value,\r\n      };\r\n      this.SubjectMaterialsService.addEditMaterial<IAddMaterailVM>(\r\n        data\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          //console.log(res);\r\n          this.materialId == null\r\n            ? this.toastr.success(\"General.AddSuccessfully\")\r\n            : this.toastr.success(\"General.UpdateSuccessfully\");\r\n\r\n          this.materialName = data.materialName;\r\n          this.order = data.orderNum;\r\n          this.isMandatory = data.isMandatory;\r\n\r\n          this.submitted = false;\r\n          this.materialId = res.Id;\r\n          this.router.navigate([], {\r\n            queryParams: {\r\n              materialId: res.Id,\r\n            },\r\n            queryParamsHandling: \"merge\",\r\n          });\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getMaterialById() {\r\n    this.spinner.show();\r\n    this.SubjectMaterialsService.getMaterialById<IGetMaterialVM>(\r\n      this.subjectId,\r\n      this.materialId\r\n    ).subscribe((res) => {\r\n      //  console.log(res);\r\n      if (res.retunValue == 1) {\r\n        this.myForm.patchValue(res.model);\r\n        this.FormCtrl.num_views.setValue(0);\r\n        this.materialName = res.model.materialName;\r\n        // this.attachFile = res.model?.videoPath;\r\n        // this.FormCtrl.attachFile.setValue(res.model?.videoPath);\r\n        // this.FormCtrl.CustomDiscountApplied.setValue(\r\n        //   res.model.CustomDiscountApplied || false\r\n        // );\r\n        // if (res.model?.selectedItemType == 2)\r\n        //   this.FormCtrl.unitId.setValue(res.model.selectedItemId);\r\n        // else if (res.model.selectedItemType == 3) {\r\n        //   //this.returnSearchedLessonsByUnitId()\r\n        //   this.FormCtrl.lessonId.setValue(res.model.selectedItemId);\r\n        // }\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // imageUrl() {\r\n  //   if (!this.FormCtrl.attachFile?.value?.FileAsBase64)\r\n  //     return `${environment.apiURL}${this.FormCtrl.attachFile?.value}`;\r\n  //   else return this.FormCtrl.attachFile?.value.FileAsBase64;\r\n  // }\r\n\r\n  //Attache File\r\n  // onChange(event: any) {\r\n  //   let fileName = <string>event.target.files[0].name;\r\n  //   let fileSize = <number>event.target.files[0].size;\r\n  //   let fileType = <File>event.target.files[0].type;\r\n  //   let LastModified = <number>event.target.files[0].lastModified;\r\n  //   let LastModifiedDate = <Date>event.target.files[0].lastModifiedDate;\r\n\r\n  //   if (event.target.files) {\r\n  //     var reader = new FileReader();\r\n  //     reader.readAsDataURL(event.target.files[0]);\r\n  //     reader.onload = (event: any) => {\r\n  //       let fileReder = event.target.result;\r\n  //       let data = {\r\n  //         FileAsBase64: fileReder,\r\n  //         name: fileName,\r\n  //         size: fileSize,\r\n  //         type: fileType,\r\n  //         LastModified: LastModified,\r\n  //         LastModifiedDate: LastModifiedDate,\r\n  //       };\r\n  //       console.log(data);\r\n  //       if (fileSize < 5000000) {\r\n  //         this.FormCtrl.attachFile.setValue(data);\r\n  //       } else this.toastr.warning(\"File is to large, accept Max 5mb\");\r\n  //     };\r\n  //   }\r\n  // }\r\n\r\n  getGroupsByEduCompId() {\r\n    this.SubjectMaterialsService.getGroupsByEduCompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        if (res.retunValue == 1) {\r\n          this.groups = res.lstEduCompGroups;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // getSubjectByID(id: any) {\r\n  //   this.courseService.getCourseById(id).subscribe((res: ICourseGetVM) => {\r\n  //     if (res.id != null) {\r\n  //       this.subject_ar_name =\r\n  //          this.languageService.isArabic ? res.subCourse_ar_name : res.subCourse_en_name;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  getTeacherByEduCompId() {\r\n    this.spinner.show();\r\n    this.SubjectsService.getTeacherBySubjectAndEduCompId(\r\n      this.EduCompId,\r\n      this.subjectId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.Teachers = res.teachers;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  returnSearchedUnitsBySubjectId() {\r\n    this.SubjectMaterialsService.returnSearchedUnitsBySubjectId<unit[]>(\r\n      this.subjectId\r\n    ).subscribe((res) => {\r\n      this.units = res;\r\n    });\r\n  }\r\n\r\n  returnSearchedLessonsByUnitId(unitId: any) {\r\n    this.SubjectMaterialsService.returnSearchedLessonsByUnitId<lesson[]>(\r\n      unitId\r\n    ).subscribe((res) => {\r\n      this.Lessons = res;\r\n    });\r\n  }\r\n\r\n  //onlyCode Validators\r\n  // onlyCodeValidators() {\r\n  //   let online = this.FormCtrl.codePrice.value;\r\n  //   if (online == false) {\r\n  //     this.FormCtrl.codePrice.reset();\r\n  //     this.FormCtrl.codePrice.clearValidators();\r\n  //     this.FormCtrl.materialPrice.setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.minusNum,\r\n  //     ]);\r\n  //   }\r\n\r\n  //   if (online == true) {\r\n  //     this.FormCtrl.materialPrice.reset();\r\n  //     this.FormCtrl.materialPrice.clearValidators();\r\n  //     this.FormCtrl.codePrice.setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.minusNum,\r\n  //     ]);\r\n  //   }\r\n\r\n  //   this.FormCtrl.materialPrice.updateValueAndValidity();\r\n  //   this.FormCtrl.codePrice.updateValueAndValidity();\r\n  // }\r\n\r\n  isMandatoryRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: \"labels.Yes\",\r\n      value: true,\r\n    },\r\n    {\r\n      label: \"labels.No\",\r\n      value: false,\r\n    },\r\n  ];\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.EducationalSubjects\" | translate }} -\r\n      {{ \"labels.Materials\" | translate }} -\r\n      {{ \"General.AddMaterial\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<!-- <mat-card class=\"container-fluid\"> -->\r\n\r\n<h1 mat-dialog-title class=\"mb-1\">\r\n  <!-- {{ \"course.AddMaterialForCourse\" | translate }} {{ subject_ar_name }}\r\n  {{ materialName }} -->\r\n  {{\r\n    (materialId > 0 ? \"course.UpdateLecture\" : \"course.AddLecture\") | translate\r\n  }}\r\n\r\n  <!-- Back -->\r\n  <!-- <a\r\n      mat-raised-button\r\n      class=\"btn btn-warning bg-light-warning float-right\"\r\n      routerLink=\"/dashboard/educational-setup/subjects/material-search/{{\r\n        subjectId\r\n      }}\"\r\n      [queryParams]=\"{\r\n        functionId: functionId,\r\n        parentId: parentId,\r\n        courseName: subject_ar_name\r\n      }\"\r\n    >\r\n      {{ \"General.Back\" | translate }}\r\n    </a> -->\r\n</h1>\r\n\r\n<mat-dialog-content>\r\n  <mat-tab-group mat-align-tabs=\"start\" class=\"no-margin-tab\">\r\n    <mat-tab label=\"{{ 'labels.Step1' | translate }}\">\r\n      <mat-card-title>{{ \"labels.MainData\" | translate }}</mat-card-title>\r\n      <form [formGroup]=\"myForm\">\r\n        <div class=\"row\">\r\n          <!-- Is Online -->\r\n          <!-- <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"IsOnline\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"1\">\r\n                    {{ \"labels.Video\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"2\">\r\n                    {{ \"labels.Offline\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n          <!-- teacherUserId -->\r\n          <!--\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"teacherUserId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.teacherUserId.invalid &&\r\n                    (FormCtrl.teacherUserId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.teacherUserId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.materialName\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.Name\"\r\n              type=\"text\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <!-- <div class=\"col-md-4 col-6\">\r\n              <mat-form-field\r\n                appearance=\"legacy\"\r\n                *ngIf=\"FormCtrl.IsOnline.value == 2\"\r\n              >\r\n                <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"studentGroupIDs\" multiple>\r\n                  <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let group of groups\" [value]=\"group.Id\">\r\n                    {{ group.groupName }}\r\n                  </mat-option>\r\n                </mat-select>\r\n\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.studentGroupIDs.invalid &&\r\n                    (FormCtrl.studentGroupIDs.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.studentGroupIDs.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n          <!-- <div class=\"col-md-4 col-12\" *ngIf=\"FormCtrl.IsOnline.value == 1\">\r\n            <app-input\r\n              [control]=\"FormCtrl.num_views\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.NumberViews\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div> -->\r\n\r\n          <!-- <div class=\"col-md-4 col-6\" *ngIf=\"FormCtrl.IsOnline.value == 2\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.Address\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"address\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.address.invalid &&\r\n                    (FormCtrl.address.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.address.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.address.errors?.whiteSpace\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-datepicker\r\n              [control]=\"FormCtrl.fromDate\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.FromDate\"\r\n            ></app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-datepicker\r\n              [control]=\"FormCtrl.toDate\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ToDate\"\r\n            ></app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.orderNum\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.Order\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-radio-button\r\n              [control]=\"FormCtrl.isMandatory\"\r\n              [radioList]=\"isMandatoryRadioList\"\r\n              label=\"labels.IsMandatory\"\r\n            ></app-radio-button>\r\n          </div>\r\n\r\n          <!-- <div class=\"col-md-4 col-12\">\r\n               <mat-label>\r\n                {{ \"labels.onlyCode\" | translate }}\r\n              </mat-label>    --end secon comment --\r\n\r\n              <mat-radio-group formControlName=\"onlyCode\">\r\n                <mat-radio-button\r\n                  [value]=\"true\"\r\n                  (change)=\"onlyCodeValidators()\"\r\n                >\r\n                  {{ \"labels.onlyCode\" | translate }}\r\n                </mat-radio-button>\r\n                <mat-radio-button\r\n                  [value]=\"false\"\r\n                  (change)=\"onlyCodeValidators()\"\r\n                >\r\n                  {{ \"labels.CodeAndCredits\" | translate }}\r\n                </mat-radio-button>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n          <!-- <div class=\"col-md-4 col-12\">\r\n              <mat-label>\r\n                {{ \"labels.CustomDiscountApplied\" | translate }}\r\n              </mat-label> -- end comment\r\n              <mat-radio-group formControlName=\"CustomDiscountApplied\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.CustomDiscountApplied\" | translate }}\r\n                </mat-radio-button>\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.CustomDiscountNotApplied\" | translate }}\r\n                </mat-radio-button>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n          <!-- <div class=\"col-md-4 col-12\">\r\n               <mat-label>\r\n                {{ \"labels.CodeIsPurchasable\" | translate }}\r\n              </mat-label> --end comment\r\n              <mat-radio-group formControlName=\"CodeIsPurchasable\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.CodeIsPurchasable\" | translate }}\r\n                </mat-radio-button>\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.CodeIsNotPurchasable\" | translate }}\r\n                </mat-radio-button>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n          <!-- <div\r\n              class=\"col-md-4 col-6\"\r\n              *ngIf=\"FormCtrl.onlyCode.value == false\"\r\n            >\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Price\" | translate }} </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"materialPrice\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.materialPrice.invalid &&\r\n                    (FormCtrl.materialPrice.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.materialPrice.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.materialPrice.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n          <!-- <div class=\"col-md-4 col-6\" *ngIf=\"FormCtrl.onlyCode.value == true\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.CodePrice\" | translate }} </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"codePrice\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.codePrice.invalid &&\r\n                    (FormCtrl.codePrice.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.codePrice.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.codePrice.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n          <!-- <ng-container *ngIf=\"FormCtrl.onlyCode.value == false\">\r\n              <div class=\"col-md-4 col-6\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label> {{ \"labels.Discount\" | translate }} </mat-label>\r\n                  <input\r\n                    matInput\r\n                    type=\"number\"\r\n                    formControlName=\"priceDiscount\"\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-6\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.DiscountType\" | translate }}\r\n                  </mat-label>\r\n                  <mat-select formControlName=\"priceDiscountType\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option [value]=\"1\">\r\n                      {{ \"labels.GeneralDiscount\" | translate }}\r\n                    </mat-option>\r\n\r\n                    <mat-option [value]=\"2\">\r\n                      {{ \"labels.privateDiscount\" | translate }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container> -->\r\n\r\n          <!-- <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"selectedItemType\" class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-radio-button [value]=\"1\">\r\n                    {{ \"labels.Subject\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-radio-button [value]=\"2\">\r\n                    {{ \"labels.Unit\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-radio-button [value]=\"3\">\r\n                    {{ \"labels.Lesson\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n          <!-- <div\r\n              class=\"col-md-6 col-12\"\r\n              *ngIf=\"\r\n                FormCtrl.selectedItemType?.value == 2 ||\r\n                FormCtrl.selectedItemType?.value == 3\r\n              \"\r\n            >\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Unit\" | translate }} </mat-label>\r\n                <mat-select\r\n                  formControlName=\"unitId\"\r\n                  (selectionChange)=\"\r\n                    returnSearchedLessonsByUnitId(FormCtrl.unitId?.value)\r\n                  \"\r\n                >\r\n                  <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n                    {{ unit.unit_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n          <!-- <div\r\n              class=\"col-md-6 col-12\"\r\n              *ngIf=\"FormCtrl.selectedItemType.value == 3\"\r\n            >\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Lesson\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"lessonId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let lesson of Lessons\"\r\n                    [value]=\"lesson.id\"\r\n                  >\r\n                    {{ lesson.lesson_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n          <!-- <div class=\"col-md-4 col-12\" *ngIf=\"FormCtrl.IsOnline.value == 1\">\r\n            <input\r\n              (change)=\"onChange($event)\"\r\n              type=\"file\"\r\n              accept=\"image/*,application/pdf\"\r\n              class=\"form-control\"\r\n            />\r\n          </div>\r\n          <div class=\"col-12 center\" *ngIf=\"this.FormCtrl.attachFile?.value\">\r\n            <span class=\"mt-1 mr-2\">\r\n              <embed [src]=\"imageUrl() | safe\" frameborder=\"0\" />\r\n            </span>\r\n          </div> -->\r\n        </div>\r\n      </form>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"onCloseDialog()\"\r\n          class=\"btn btn-warning bg-light-warning\"\r\n        >\r\n          {{ \"General.Close\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          (click)=\"addEditMaterial()\"\r\n          mat-raised-button\r\n          cdkFocusInitial\r\n          class=\"btn btn-info bg-light-info\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"materialId == null\"></i>\r\n          {{\r\n            (materialId == null ? \"General.Add\" : \"General.Update\") | translate\r\n          }}\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n      <!-- <mat-dialog-actions align=\"end\">\r\n      </mat-dialog-actions> -->\r\n    </mat-tab>\r\n\r\n    <!-- add-material-parts -->\r\n    <mat-tab label=\"{{ 'labels.Step2' | translate }}\">\r\n      <mat-card-title>\r\n        {{ \"labels.MaterialParts\" | translate }}\r\n      </mat-card-title>\r\n      <app-add-material-parts\r\n        [materialId]=\"materialId\"\r\n        (closeDialog)=\"onCloseDialog()\"\r\n      >\r\n      </app-add-material-parts>\r\n    </mat-tab>\r\n\r\n    <!-- add-material-files -->\r\n    <!-- <mat-tab label=\"{{ 'labels.MaterialFiles' | translate }}\">\r\n        <app-add-material-files [materialId]=\"materialId\">\r\n        </app-add-material-files>\r\n      </mat-tab> -->\r\n\r\n    <!-- add-material-exam -->\r\n    <!-- <mat-tab label=\"{{ 'labels.MaterialExams' | translate }}\">\r\n        <app-add-material-exam [materialId]=\"materialId\">\r\n        </app-add-material-exam>\r\n      </mat-tab> -->\r\n\r\n    <!-- <mat-tab label=\"{{ 'labels.PopUpQuestion' | translate }}\">\r\n        <app-add-pop-question [materialId]=\"materialId\"> </app-add-pop-question>\r\n      </mat-tab> -->\r\n  </mat-tab-group>\r\n</mat-dialog-content>\r\n\r\n<!-- </mat-card> -->\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { IGetPartVM, IPartVM } from \"app/admin/models/admin/educations\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-material-parts\",\r\n  templateUrl: \"./add-material-parts.component.html\",\r\n  styleUrls: [\"./add-material-parts.component.scss\"],\r\n})\r\nexport class AddMaterialPartsComponent implements OnInit {\r\n  @Input(\"materialId\") materialId: any;\r\n  @Output(\"closeDialog\") closeDialog = new EventEmitter();\r\n  parts: IPartVM[] = [];\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      materialId: [this.materialId, Validators.required],\r\n      Id: [0],\r\n      videoTypeId: [\"\", Validators.required],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Path: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      SecondaryPath: [\"\"],\r\n      view_percentage: [90, [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    if (this.materialId != null || this.materialId != undefined) {\r\n      this.FormCtrl.materialId?.setValue(this.materialId);\r\n      this.getMaterialParts();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.materialId != null || this.materialId != undefined) {\r\n      this.FormCtrl?.materialId?.setValue(this.materialId);\r\n      this.getMaterialParts();\r\n    }\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm?.controls;\r\n  }\r\n\r\n  // get Material Parts\r\n  getMaterialParts() {\r\n    this.spinner.show();\r\n    this.SubjectMaterialsService.getMaterialParts(this.materialId).subscribe(\r\n      (res: any) => {\r\n        if (res.returnValue == 1) {\r\n          //  console.log(\"Parts\", res);\r\n          this.parts = res.MaterialParts;\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // get Part ById\r\n  getPartById(id: any) {\r\n    this.spinner.show();\r\n    this.SubjectMaterialsService.getPartById<IGetPartVM>(id).subscribe(\r\n      (res) => {\r\n        // console.log(\"Part\", res);\r\n        this.myForm.patchValue(res.MaterialPart);\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // Start: add Subject\r\n  addPart() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.SubjectMaterialsService.addPart(this.myForm.value).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.getMaterialParts();\r\n\r\n            if (this.FormCtrl.Id.value == 0)\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n            else this.toastr.success(\"General.UpdateSuccessfully\");\r\n\r\n            this.myForm.reset();\r\n            this.FormCtrl.Id?.setValue(0);\r\n            this.FormCtrl.videoTypeId?.setValue(\"\");\r\n            this.FormCtrl.materialId?.setValue(this.materialId);\r\n            this.FormCtrl.view_percentage?.setValue(90);\r\n            this.submitted = false;\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  deletePart(part: IPartVM) {\r\n    this.spinner.show();\r\n    this.SubjectMaterialsService.deletePart(part.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.parts.indexOf(part);\r\n        this.parts.splice(i, 1);\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(part: IPartVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: part.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletePart(part);\r\n      });\r\n  }\r\n}\r\n","<form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 col-6\">\r\n      <app-input\r\n        [control]=\"FormCtrl.Name\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.Name\"\r\n        type=\"text\"\r\n      ></app-input>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-12\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Type\" | translate }} </mat-label>\r\n        <mat-select formControlName=\"videoTypeId\">\r\n          <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n          <mat-option [value]=\"1\">VideoCipher</mat-option>\r\n          <mat-option [value]=\"2\">Vimeo</mat-option>\r\n          <mat-option [value]=\"3\">SproutVideo</mat-option>\r\n        </mat-select>\r\n        <mat-hint>\r\n          <input-validation-msg\r\n            [control]=\"FormCtrl.videoTypeId\"\r\n            [submitted]=\"submitted\"\r\n            [isSelect]=\"true\"\r\n          ></input-validation-msg>\r\n        </mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-6\">\r\n      <app-input\r\n        [control]=\"FormCtrl.Path\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.Link\"\r\n        type=\"text\"\r\n      ></app-input>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-6\" *ngIf=\"FormCtrl.videoTypeId.value == 3\">\r\n      <app-input\r\n        [control]=\"FormCtrl.SecondaryPath\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.Link\"\r\n        type=\"text\"\r\n      ></app-input>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-6\">\r\n      <app-input\r\n        [control]=\"FormCtrl.view_percentage\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.ConfirmViewPercentage\"\r\n        type=\"number\"\r\n      ></app-input>\r\n    </div>\r\n  </div>\r\n</form>\r\n<mat-card-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    (click)=\"closeDialog.emit()\"\r\n    *ngIf=\"parts.length == 0\"\r\n    class=\"btn btn-warning bg-light-warning\"\r\n  >\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn btn-info bg-light-info\"\r\n    (click)=\"addPart()\"\r\n    [disabled]=\"\r\n      FormCtrl.materialId.value == undefined ||\r\n      FormCtrl.materialId.value == null\r\n    \"\r\n  >\r\n    <i class=\"fa fa-plus mr-1\" *ngIf=\"FormCtrl.Id.value == 0\"></i>\r\n    {{\r\n      (FormCtrl.Id.value == 0 ? \"General.Add\" : \"General.Update\") | translate\r\n    }}\r\n  </button>\r\n</mat-card-actions>\r\n\r\n<ng-container *ngIf=\"parts.length > 0\" class=\"table-responsive\">\r\n  <table class=\"table table-striped m-0\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          {{ \"labels.Name\" | translate }}\r\n        </th>\r\n        <th>{{ \"labels.Type\" | translate }}</th>\r\n        <th>\r\n          {{ \"labels.ConfirmViewPercentage\" | translate }}\r\n        </th>\r\n        <th>action</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let part of parts\" [id]=\"part.Id\">\r\n        <td>{{ part.Name }}</td>\r\n        <td *ngIf=\"part.videoTypeId == 1\">VideoCipher</td>\r\n        <td *ngIf=\"part.videoTypeId == 2\">Vimeo</td>\r\n        <td *ngIf=\"part.videoTypeId == 3\">Sprout Video</td>\r\n        <td>{{ part.view_percentage }}</td>\r\n        <td>\r\n          <a\r\n            (click)=\"getPartById(part.Id)\"\r\n            class=\"success p-0\"\r\n            matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n          >\r\n            <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n          </a>\r\n\r\n          <a\r\n            (click)=\"openDeleateDialog(part)\"\r\n            class=\"danger p-0\"\r\n            matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n          >\r\n            <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button\r\n      mat-raised-button\r\n      (click)=\"closeDialog.emit()\"\r\n      [mat-dialog-close]=\"false\"\r\n      class=\"btn btn-warning bg-light-warning\"\r\n    >\r\n      {{ \"General.Close\" | translate }}\r\n    </button>\r\n  </mat-dialog-actions>\r\n</ng-container>\r\n","import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport {\r\n  IExamResponse,\r\n  IExamResponseInDetails,\r\n} from \"../../../../models/admin/addEditExam\";\r\nimport { DatePipe, Location } from \"@angular/common\";\r\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthService } from \"../../../../../shared/services/auth/auth.service\";\r\nimport { ExamsService } from \"../../../../services/Admin/exams.service\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  ICountrieDropModel,\r\n  IDiscountTypeModel,\r\n  IEducationYearDropModel,\r\n  IExamTypeModel,\r\n  ILessionModel,\r\n  IStageDropModel,\r\n  ISubjectDropModel,\r\n  ITeacherDropModel,\r\n  IUnitModel,\r\n} from \"../../../../models/admin/exam\";\r\nimport {\r\n  IAddEditExamHeaderModel,\r\n  IAddEditExamModel,\r\n} from \"../../../../models/admin/addEditExam\";\r\nimport { forkJoin, Observable } from \"rxjs\";\r\nimport {\r\n  IAddExamGroupHeaderModel,\r\n  IEditExamGroupHeaderModel,\r\n  IExamGroupHeaderModel,\r\n  IExamModel,\r\n} from \"../../../../models/admin/AddExamGroupHeader\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { AddSubQuestionComponent } from \"../add-sub-question/add-sub-question.component\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { IUnitDataGeneralVM } from \"app/admin/models/admin/setup/course\";\r\nimport { RadioButtonModel } from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { AppStrings } from \"app/shared/data/app-strings\";\r\n\r\n@Component({\r\n  selector: \"app-add-exam\",\r\n  templateUrl: \"./add-exam.component.html\",\r\n  styleUrls: [\"./add-exam.component.scss\"],\r\n})\r\nexport class AddExamComponent implements OnInit {\r\n  functionId: number;\r\n  parentId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  EduCompId: any;\r\n  branchId: any;\r\n  countries: ICountrieDropModel[] = [];\r\n  stages: IStageDropModel[] = [];\r\n  educationYears: IEducationYearDropModel[] = [];\r\n  subjects: ISubjectDropModel[] = [];\r\n  teachers: teacherByEduCompId[];\r\n  examTypes: IExamTypeModel[] = [];\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n  discountTypes: IDiscountTypeModel[] = [];\r\n\r\n  examGroups: any[] = [];\r\n  examHeaders: any[] = [];\r\n  filteredExamGroups: Observable<any[]>;\r\n  filteredExamHeaders: Observable<any[]>;\r\n\r\n  GroupsHeadersList: IExamGroupHeaderModel[] = [];\r\n  type: number;\r\n  subId: number;\r\n  unitId: number;\r\n  examGroupHeaderIdToEdit: number = 0;\r\n  // sava last data in database not in form\r\n  exam_ar_name: string;\r\n  order: number;\r\n  isMandatory: boolean;\r\n\r\n  myForm!: FormGroup;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"questionNumber\",\r\n    \"questionType\",\r\n    \"question_title\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IExamGroupHeaderModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  GroupHeadersForm!: FormGroup;\r\n  submitted = false;\r\n  itemsCount: any;\r\n  GroupHeadsubmitted = false;\r\n  examId: number = 0;\r\n  editGroupHeaderMode: boolean = false;\r\n  isRepeatableExam: boolean = false;\r\n  isSendWhats: boolean = false;\r\n  examGroupHeaderId: any = 0;\r\n\r\n  constructor(\r\n    public location: Location,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private examService: ExamsService,\r\n    // private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private msg: MessagesService,\r\n    private generalService: GeneralService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    public appStrings: AppStrings,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddExamComponent>\r\n  ) {\r\n    this.type = data.type;\r\n    this.subId = data.subjectId;\r\n    this.unitId = data.unitId;\r\n    // route.paramMap.subscribe((params) => {\r\n    //   this.type = Number(params.get(\"typeId\"));\r\n    // });\r\n    // route.paramMap.subscribe((params) => {\r\n    //   this.subId = Number(params.get(\"courseId\"));\r\n    // });\r\n\r\n    this.examId = data.examId;\r\n    if (this.examId > 0) {\r\n      this.getExamById();\r\n      this.getAllGroupHeaderByExamId();\r\n    }\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      // this.examId = Number(params.get(\"examId\"));\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.parentId = Number(params.get(\"parentId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        // countryId: [\"\"],\r\n        // stageId: [\"\"],\r\n        // educationYearId: [\"\"],\r\n        // subjectId: [\"\", [Validators.required]],\r\n        // teacherUserId: [\"\", [Validators.required]],\r\n        // examTypeId: [\"\", [Validators.required]],\r\n        // unitId: [\"\"],\r\n        // lessionId: [\"\"],\r\n        examName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        examHours: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        examMinutes: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        // examPrice: [0, [Validators.required, CustomeValidator.minusNum]],\r\n        // discount: [\"\"],\r\n        // discountType: [\"\"],\r\n        fromDate: [\"\"],\r\n        toDate: [\"\"],\r\n        formHour: [\"\"],\r\n        toHours: [\"\"],\r\n        // resualtDate: [\"\"],\r\n        // resualtTime: [\"\"],\r\n        // canSellIndividually: [true, Validators.required],\r\n        isRepeatable: [true, Validators.required],\r\n        repeatNumbers: [1000],\r\n        // repeatingPrice: [0],\r\n        // hasCustomDiscount: [false, Validators.required],\r\n        // sendWhatsAppMsg: [false, Validators.required],\r\n        // isPublish: [0],\r\n        degreeToPass: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        order: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n        isMandatory: [true, [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"fromDate\", \"toDate\"),\r\n      }\r\n    );\r\n\r\n    this.GroupHeadersForm = this.fb.group({\r\n      examGroup: [\"السؤال الاول\", Validators.required],\r\n      examHeader: [\"اختر  الإجابة الصحيحة\", Validators.required],\r\n      examContent: [null],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.FormCtrl.stageId?.disable();\r\n    this.FormCtrl.educationYearId?.disable();\r\n    this.FormCtrl.subjectId?.disable();\r\n    this.FormCtrl.teacherUserId?.disable();\r\n    this.FormCtrl.unitId?.disable();\r\n    this.FormCtrl.lessionId?.disable();\r\n\r\n    this.getAllCountieres();\r\n    this.getAllExamTypes();\r\n    this.getAllQuestionGroups();\r\n    this.getAllQuestionHeaders();\r\n\r\n    this.examTypeValidator();\r\n    this.RepeatableValidator();\r\n\r\n    // on closing dialog by clicking outside dialog\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    let data: IUnitDataGeneralVM = null;\r\n    if (this.examId) {\r\n      data = {\r\n        id: this.examId,\r\n        ar_name: this.exam_ar_name,\r\n        type: this.appStrings.stageExam,\r\n        order: this.order,\r\n        isMandatory: this.isMandatory,\r\n      };\r\n    }\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.examId > 0) this.getExamById();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  // filter question group\r\n  private filter_question_group(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examGroups.filter((option) =>\r\n      option.question_group_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  // filter question header\r\n  private filter_question_header(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examHeaders.filter((option) =>\r\n      option.question_head_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n  get GroupHeadersFormCtrl() {\r\n    return this.GroupHeadersForm.controls;\r\n  }\r\n\r\n  getExamById() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getExamById<IExamResponseInDetails>(this.examId)\r\n      .subscribe((response) => {\r\n        // console.log(\"getExamById\", response);\r\n        if (response) {\r\n          // this.FormCtrl.stageId?.enable();\r\n          // this.FormCtrl.educationYearId?.enable();\r\n          // this.FormCtrl.subjectId?.enable();\r\n          // this.FormCtrl.teacherUserId?.enable();\r\n          // this.FormCtrl.unitId?.enable();\r\n          // this.FormCtrl.lessionId?.enable();\r\n\r\n          this.FormCtrl.toHours?.setValue(response?.toHour);\r\n          // this.FormCtrl.isPublish?.setValue(response?.isPublish);\r\n          // this.FormCtrl.discount?.setValue(response?.Discount);\r\n          this.FormCtrl.examName?.setValue(response?.exam_ar_name);\r\n          this.exam_ar_name = response?.exam_ar_name;\r\n          this.FormCtrl.formHour?.setValue(response?.fromHour);\r\n          // this.FormCtrl.examPrice?.setValue(response?.price);\r\n          // this.FormCtrl.resualtTime?.setValue(response?.ResultTime);\r\n          // this.FormCtrl.discountType?.setValue(response?.DiscountType);\r\n          // this.FormCtrl.isRepeatable?.setValue(response?.repeatableExam);\r\n          // this.isRepeatableExam = response?.repeatableExam;\r\n          // this.FormCtrl.repeatNumbers?.setValue(response?.repeatableExam_Count);\r\n          // this.FormCtrl.sendWhatsAppMsg?.setValue(response?.SendWhatsApp);\r\n          // this.isSendWhats = response?.SendWhatsApp;\r\n          // this.FormCtrl.hasCustomDiscount?.setValue(response?.Discount > 0);\r\n          this.FormCtrl.canSellIndividually?.setValue(\r\n            response?.Individually_Purchased\r\n          );\r\n          // this.FormCtrl.countryId?.setValue(response.countryId);\r\n          //  this.FormCtrl.examTypeId?.setValue(response.examTypeId);\r\n          // this.FormCtrl.repeatingPrice?.setValue(response.StudentRepeatExamCost);\r\n\r\n          let exam_minute = response.exam_period_minute % 60;\r\n          let exam_hour = (response.exam_period_minute - exam_minute) / 60;\r\n          this.FormCtrl.examMinutes?.setValue(exam_minute);\r\n          this.FormCtrl.examHours?.setValue(exam_hour);\r\n\r\n          // if (response.Lesson_ID != null) this.FormCtrl.examTypeId?.setValue(1);\r\n          // if (response?.Unit_ID != null && response.Lesson_ID == null)\r\n          //   this.FormCtrl.examTypeId?.setValue(2);\r\n\r\n          if (\r\n            response?.Subject_ID != null\r\n            // response?.Unit_ID == null &&\r\n            // response.Lesson_ID == null\r\n          )\r\n            if (\r\n              response?.Subject_ID == null &&\r\n              // response?.Unit_ID == null &&\r\n              // response.Lesson_ID == null &&\r\n              response.quiz == 1\r\n            )\r\n              // this.FormCtrl.examTypeId?.setValue(3);\r\n\r\n              this.FormCtrl.examTypeId?.setValue(4);\r\n\r\n          this.FormCtrl.fromDate?.setValue(response.Avilable_Date_From);\r\n          this.FormCtrl.toDate?.setValue(response.Avilable_Date_To);\r\n          // this.FormCtrl.resualtDate?.setValue(response.ResultDate);\r\n\r\n          // this.FormCtrl.countryId?.setValue(1);\r\n          // this.onSelectCountry();\r\n          // this.FormCtrl.stageId?.setValue(response.stageId);\r\n          // this.onSelectStages();\r\n          // this.FormCtrl.educationYearId?.setValue(response.eduYearId);\r\n          // this.onSelectEducationYears();\r\n          // this.FormCtrl.subjectId?.setValue(response?.main_subject_id);\r\n          // this.onSelectSubjects();\r\n          // this.FormCtrl.teacherUserId?.setValue(response?.teacherUserId);\r\n          // this.FormCtrl.unitId?.setValue(response?.Unit_ID);\r\n\r\n          // this.onSelectUnit();\r\n          // this.FormCtrl.lessionId?.setValue(response?.Lesson_ID);\r\n\r\n          // this.FormCtrl.stageId?.setValue(response.stageId);\r\n          // this.FormCtrl.educationYearId?.setValue(response.eduYearId);\r\n          // this.FormCtrl.teacherUserId?.setValue(response?.teacherUserId);\r\n          // this.FormCtrl.unitId?.setValue(response?.Unit_ID);\r\n\r\n          this.FormCtrl.degreeToPass?.setValue(response.percentageToPass);\r\n          this.FormCtrl.order?.setValue(response.orderNum);\r\n          this.order = response.orderNum;\r\n          this.FormCtrl.isMandatory?.setValue(response.isMandatory);\r\n          this.isMandatory = response.isMandatory;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllGroupHeaderByExamId() {\r\n    this.examService\r\n      .getAllGroupHeaderByExamId<IExamGroupHeaderModel>(this.examId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"groupsHeadersLit : \", response);\r\n          this.GroupsHeadersList = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.itemsCount = response.length;\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllQuestionGroups() {\r\n    this.examService.getAllQuestionGroups<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examGroups = response;\r\n        //  console.log(\"examGroups\", this.examGroups);\r\n        this.filteredExamGroups =\r\n          this.GroupHeadersFormCtrl.examGroup?.valueChanges.pipe(\r\n            startWith(\"\"),\r\n            map((value) => this.filter_question_group(value || \"\"))\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllQuestionHeaders() {\r\n    this.examService.getAllQuestionHeaders<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examHeaders = response;\r\n        this.filteredExamHeaders =\r\n          this.GroupHeadersFormCtrl.examHeader?.valueChanges.pipe(\r\n            startWith(\"\"),\r\n            map((value) => this.filter_question_header(value || \"\"))\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    // todo .. check for mandatory firlds\r\n    let exam: IAddEditExamModel = {\r\n      id: this.examId,\r\n      Avilable_Date_From: this.datePipe.transform(\r\n        this.FormCtrl.fromDate?.value\r\n      ),\r\n      Avilable_Date_To: this.datePipe.transform(this.FormCtrl.toDate.value),\r\n      // CustomDiscountApplied: this.FormCtrl.hasCustomDiscount?.value,\r\n      // Discount: this.FormCtrl.discount?.value,\r\n      // DiscountType: this.FormCtrl.discountType?.value,\r\n      EduCompId: this.EduCompId,\r\n      // Individually_Purchased: this.FormCtrl.canSellIndividually?.value,\r\n      // ResultDate: this.datePipe.transform(this.FormCtrl.resualtDate.value),\r\n      // ResultTime: this.FormCtrl.resualtTime?.value,\r\n      // SendWhatsApp: this.FormCtrl.sendWhatsAppMsg?.value,\r\n      // StudentRepeatExamCost: this.FormCtrl.repeatingPrice?.value,\r\n      exam_ar_name: this.FormCtrl.examName?.value,\r\n      fromHour: this.FormCtrl.formHour?.value,\r\n      // lesson_ID: this.FormCtrl.lessionId?.value,\r\n      // price: this.FormCtrl.examPrice?.value,\r\n      repeatableExam: this.FormCtrl.isRepeatable?.value,\r\n      repeatableExam_Count: this.FormCtrl.repeatNumbers?.value,\r\n      Subject_ID: this.subId,\r\n      Unit_ID: this.unitId,\r\n      // teacherUserId: this.FormCtrl.teacherUserId?.value,\r\n      // teacher_subject_id: this.FormCtrl.subjectId?.value,\r\n      toHour: this.FormCtrl.toHours?.value,\r\n      // unit_ID: this.FormCtrl.unitId?.value,\r\n      // exam_hour: this.FormCtrl.examHours?.value,\r\n      // exam_minute: this.FormCtrl.examMinutes?.value,\r\n      // isPublish: this.FormCtrl.isPublish?.value,\r\n      percentageToPass: this.FormCtrl.degreeToPass.value,\r\n      orderNum: this.FormCtrl.order.value,\r\n      isMandatory: this.FormCtrl.isMandatory.value,\r\n      exam_type_id: this.type,\r\n    };\r\n\r\n    let toAddEdit: IAddEditExamHeaderModel = {\r\n      exam_hour: this.FormCtrl.examHours?.value,\r\n      exam_minute: this.FormCtrl.examMinutes?.value,\r\n      // exam_type_id: this.type,\r\n      exam: exam,\r\n    };\r\n\r\n    console.log(\"toAdd \", toAddEdit);\r\n\r\n    // if exam id = 0 the end point will add >> if the exam id > 0 the end point will edit\r\n    this.addExam(toAddEdit);\r\n  }\r\n\r\n  addExam(toAddEdit: IAddEditExamHeaderModel) {\r\n    let validGroupHeadersForm = this.GroupHeadersForm.valid;\r\n\r\n    this.submitted = true;\r\n    if (this.examId == 0 && !validGroupHeadersForm) {\r\n      this.GroupHeadsubmitted = true;\r\n    } else {\r\n      // if (\r\n      //   this.FormCtrl.hasCustomDiscount?.value == true &&\r\n      //   this.FormCtrl.repeatNumbers.value <= 0\r\n      // ) {\r\n      //   this.msg.warning(\"يجب ادخال عدد مرات التكرار\");\r\n      //   return;\r\n      // }\r\n\r\n      // if (\r\n      //   this.FormCtrl.hasCustomDiscount?.value == true &&\r\n      //   this.FormCtrl.repeatingPrice.value < 0\r\n      // ) {\r\n      //   this.msg.warning(\"يجب ادخال سعر تجديد الامتحان \");\r\n      //   return;\r\n      // }\r\n\r\n      if (this.myForm.valid) {\r\n        this.spinner.show();\r\n        this.examService\r\n          .addExam<IAddEditExamHeaderModel, any>(toAddEdit)\r\n          .subscribe((response) => {\r\n            if (response.returnValue == 1 && response.examId > 0) {\r\n              console.log(\"addExam\", response);\r\n              let isAdd = this.examId == 0 ? true : false;\r\n\r\n              isAdd\r\n                ? this.msg.success(\"General.AddSuccessfully\")\r\n                : this.msg.success(\"General.UpdateSuccessfully\");\r\n\r\n              this.exam_ar_name = toAddEdit.exam.exam_ar_name;\r\n              this.order = toAddEdit.exam.orderNum;\r\n              this.isMandatory = toAddEdit.exam.isMandatory;\r\n              this.examId = response.examId;\r\n\r\n              this.router.navigate([], {\r\n                queryParams: {\r\n                  examId: response.examId,\r\n                },\r\n                queryParamsHandling: \"merge\",\r\n              });\r\n              if (isAdd) this.onAddExamGroupHeader();\r\n\r\n              this.submitted = false;\r\n              // this.examId=0;\r\n              // this.myForm.reset();\r\n            } else this.msg.error(response?.returnString);\r\n            this.spinner.hide();\r\n          });\r\n      } else this.msg.error(\"General.FormNotValid\");\r\n    }\r\n  }\r\n\r\n  onAddExamGroupHeader() {\r\n    // let sameGroupWithSameHeader = this.GroupsHeadersList.find(\r\n    //   (gh) =>\r\n    //     gh.group_name == this.GroupHeadersFormCtrl.examGroup?.value &&\r\n    //     gh.head_name == this.GroupHeadersFormCtrl.examHeader?.value\r\n    // );\r\n    let sameGroupWithSameHeader = this.dataSource?.data?.find(\r\n      (gh) =>\r\n        gh.group_name == this.GroupHeadersFormCtrl.examGroup?.value &&\r\n        gh.head_name == this.GroupHeadersFormCtrl.examHeader?.value\r\n    );\r\n\r\n    if (sameGroupWithSameHeader) {\r\n      this.msg.info(\"Cannot add the same header with same group\");\r\n      return;\r\n    }\r\n\r\n    let tempExam: IExamModel = {\r\n      id: this.examId,\r\n    };\r\n\r\n    let ToAddExamGroupHeader: IAddExamGroupHeaderModel = {\r\n      exam_question_group_text: this.GroupHeadersFormCtrl.examGroup?.value,\r\n      exam_question_head_title: this.GroupHeadersFormCtrl.examContent?.value,\r\n      exam_question_head_text: this.GroupHeadersFormCtrl.examHeader?.value,\r\n      exam: tempExam,\r\n    };\r\n\r\n    if (this.GroupHeadersForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addExamGroupHeader<IAddExamGroupHeaderModel, any>(ToAddExamGroupHeader)\r\n        .subscribe((headerResponse) => {\r\n          if (headerResponse) {\r\n            //  console.log('addExamGroupHeader', headerResponse);\r\n            this.getAllGroupHeaderByExamId();\r\n            //   this.msg.success(\"General.AddSuccessfully\");\r\n            let tempExcamGroupHeader = {\r\n              Id: headerResponse.exam_question_head_id,\r\n              group_name: this.GroupHeadersFormCtrl.examGroup?.value,\r\n              head_name: this.GroupHeadersFormCtrl.examHeader?.value,\r\n              question_title: this.GroupHeadersFormCtrl.examContent?.value,\r\n            };\r\n\r\n            //   this.GroupsHeadersList.push(tempExcamGroupHeader);\r\n\r\n            // console.log(\"this.GroupsHeadersList\", this.GroupsHeadersList);\r\n\r\n            this.GroupHeadersFormCtrl.examContent?.setValue(null);\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else {\r\n      if (this.examId == 0) this.msg.error(\"General.FormNotValid\");\r\n    }\r\n  }\r\n\r\n  getExamHeadById(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.editGroupHeaderMode = true;\r\n    this.examGroupHeaderIdToEdit = examGroupHeader.id;\r\n    this.GroupHeadersFormCtrl.examGroup?.setValue(\r\n      examGroupHeader?.questionNumber\r\n    );\r\n    this.GroupHeadersFormCtrl.examContent?.setValue(\r\n      examGroupHeader?.question_title\r\n    );\r\n    this.GroupHeadersFormCtrl.examHeader?.setValue(\r\n      examGroupHeader?.questionType\r\n    );\r\n  }\r\n\r\n  editExamGroupHead() {\r\n    let toEdit: IEditExamGroupHeaderModel = {\r\n      exam_question_head_id: this.examGroupHeaderIdToEdit,\r\n      group: this.GroupHeadersFormCtrl.examGroup?.value,\r\n      head: this.GroupHeadersFormCtrl.examHeader?.value,\r\n      title: this.GroupHeadersFormCtrl.examContent?.value,\r\n    };\r\n\r\n    // console.log('toEdit', toEdit);\r\n    this.spinner.show();\r\n    this.examService\r\n      .editExamGroupHeader<IEditExamGroupHeaderModel, any>(toEdit)\r\n      .subscribe((editResponse) => {\r\n        if (editResponse) {\r\n          //   console.log('editResponse', editResponse);\r\n\r\n          let toReplace = this.dataSource.data.find(\r\n            (gh) => gh.id == this.examGroupHeaderIdToEdit\r\n          );\r\n\r\n          if (toReplace) {\r\n            toReplace.questionNumber = toEdit.group;\r\n            toReplace.questionType = toEdit.head;\r\n            toReplace.question_title =\r\n              this.GroupHeadersFormCtrl.examContent?.value;\r\n          }\r\n\r\n          this.editGroupHeaderMode = false;\r\n          this.GroupHeadersFormCtrl.examContent?.setValue(null);\r\n          this.msg.success(\"General.UpdateSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamGroupHead(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.spinner.show();\r\n    this.examService\r\n      .deleteExamGroupHeader(examGroupHeader.id)\r\n      .subscribe((deleteResponse: any) => {\r\n        // console.log('deleteResponse', deleteResponse);\r\n        if (deleteResponse.returnValue == 1) {\r\n          let todeleteIndex = this.dataSource.data.findIndex(\r\n            (gh) => gh == examGroupHeader\r\n          );\r\n\r\n          this.dataSource.data.splice(todeleteIndex, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"General.DeleteSuccessfully\");\r\n        } else this.msg.error(deleteResponse.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(examGroupHeader: IExamGroupHeaderModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: examGroupHeader.questionNumber,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeExamGroupHead(examGroupHeader);\r\n      });\r\n  }\r\n\r\n  addSubQuestionDialog(groupHeader: IExamGroupHeaderModel): void {\r\n    console.log(groupHeader);\r\n    this.dialog\r\n      .open(AddSubQuestionComponent, {\r\n        data: {\r\n          examId: this.examId,\r\n          examGroupHeaderId: groupHeader.id,\r\n          subjectId: this.subId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) {\r\n        }\r\n      });\r\n  }\r\n\r\n  addSubQuestion(examGroupHeaderId: number) {\r\n    this.examGroupHeaderId = examGroupHeaderId;\r\n    let obj: any = {\r\n      examGroupHeaderId: examGroupHeaderId,\r\n      subjectId: this.FormCtrl.subjectId?.value,\r\n      unitId: this.FormCtrl.unitId?.value,\r\n      lessonId: this.FormCtrl.lessionId?.value,\r\n    };\r\n  }\r\n\r\n  getAllExamTypes() {\r\n    this.examService\r\n      .getAllExamType<IExamTypeModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.examTypes = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectExamType() {\r\n    //  console.log('exam type: ', this.FormCtrl.examTypeId?.value);\r\n\r\n    if (this.FormCtrl.examTypeId?.value == 1) {\r\n      this.FormCtrl.unitId?.enable();\r\n      this.FormCtrl.lessionId?.enable();\r\n    } else if (this.FormCtrl.examTypeId?.value == 2) {\r\n      this.FormCtrl.unitId?.enable();\r\n      this.FormCtrl.lessionId?.disable();\r\n    } else {\r\n      this.FormCtrl.unitId?.disable();\r\n      this.FormCtrl.lessionId?.disable();\r\n    }\r\n  }\r\n\r\n  getAllCountieres() {\r\n    this.examService\r\n      .getAllCountries<ICountrieDropModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //console.log(\"COUNTIRES: \", response);\r\n          this.countries = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectCountry() {\r\n    // this.FormCtrl.stageId?.setValue(\"\");\r\n    // this.FormCtrl.educationYearId?.setValue(\"\");\r\n    // this.FormCtrl.subjectId?.setValue(\"\");\r\n    // this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.countryId?.value) {\r\n      //   console.log('SELECTED country: ', this.FormCtrl.countryId?.value);\r\n      this.examService\r\n        .getAllStages<IStageDropModel[]>(this.FormCtrl.countryId?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.stages = response;\r\n            //console.log(\"STAGES:\", response);\r\n            this.FormCtrl.stageId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.stageId?.disable();\r\n      this.FormCtrl.educationYearId?.disable();\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectStages() {\r\n    // console.log('onSelectStages: ', this.FormCtrl.stageId?.value);\r\n    this.FormCtrl.educationYearId?.setValue(\"\");\r\n    this.FormCtrl.subjectId?.setValue(\"\");\r\n    this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.stageId?.value) {\r\n      this.examService\r\n        .getAllEducationYears<IEducationYearDropModel[]>(\r\n          this.FormCtrl.stageId?.value\r\n        )\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.educationYears = response;\r\n            //console.log(\"YEARS:\", response);\r\n            this.FormCtrl.educationYearId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.educationYearId?.disable();\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectEducationYears() {\r\n    //   console.log('onSelectEducationYears: ', this.FormCtrl.educationYearId?.value);\r\n    this.FormCtrl.subjectId?.setValue(\"\");\r\n    this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.educationYearId?.value) {\r\n      this.examService\r\n        .getAllSubjects<ISubjectDropModel[]>(\r\n          this.FormCtrl.educationYearId?.value\r\n        )\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.subjects = response;\r\n            //console.log(\"SUBJECTS:\", response);\r\n            this.FormCtrl.subjectId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectSubjects() {\r\n    // console.log('onSelectSubjects: ', this.FormCtrl.subjectId?.value);\r\n    //   this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.subjectId?.value) {\r\n      forkJoin([\r\n        this.generalService.getTeacherBySubjectAndEduCompId(\r\n          this.EduCompId,\r\n          this.FormCtrl.subjectId?.value\r\n        ),\r\n        this.examService.getAllUnitsBySublectId<any[]>(\r\n          this.FormCtrl.subjectId?.value\r\n        ),\r\n      ]).subscribe((results: any) => {\r\n        this.teachers = results[0].teachers;\r\n        this.units = results[1];\r\n        this.FormCtrl.teacherUserId?.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectUnit() {\r\n    if (this.FormCtrl.unitId?.value != null) {\r\n      this.examService\r\n        .getAllLessonsByUnitId<any>(this.FormCtrl.unitId?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.lessions = response;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  examTypeValidator() {\r\n    let examTypeId = this.FormCtrl.examTypeId?.value;\r\n    if (examTypeId == 1) {\r\n      this.FormCtrl.unitId?.setValidators([Validators.required]);\r\n      this.FormCtrl.lessionId?.setValidators([Validators.required]);\r\n    } else if (examTypeId == 2) {\r\n      this.FormCtrl.unitId?.setValidators([Validators.required]);\r\n      this.FormCtrl.lessionId?.clearValidators();\r\n      this.FormCtrl.lessionId?.reset();\r\n    } else {\r\n      this.FormCtrl.unitId?.clearValidators();\r\n      this.FormCtrl.unitId?.reset();\r\n      this.FormCtrl.lessionId?.clearValidators();\r\n      this.FormCtrl.lessionId?.reset();\r\n    }\r\n    this.FormCtrl.unitId?.updateValueAndValidity();\r\n    this.FormCtrl.lessionId?.updateValueAndValidity();\r\n  }\r\n\r\n  RepeatableValidator() {\r\n    let CustomDiscount = this.FormCtrl.hasCustomDiscount?.value;\r\n    if (CustomDiscount == true) {\r\n      this.FormCtrl.repeatNumbers?.setValidators([Validators.required]);\r\n      this.FormCtrl.repeatingPrice?.setValidators([Validators.required]);\r\n    } else if (CustomDiscount == false) {\r\n      this.FormCtrl.repeatNumbers?.clearValidators();\r\n      this.FormCtrl.repeatingPrice?.clearValidators();\r\n      this.FormCtrl.repeatNumbers?.reset();\r\n      this.FormCtrl.repeatingPrice?.reset();\r\n    }\r\n    this.FormCtrl.repeatNumbers?.updateValueAndValidity();\r\n    this.FormCtrl.repeatingPrice?.updateValueAndValidity();\r\n  }\r\n\r\n  isMandatoryRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: \"labels.Yes\",\r\n      value: true,\r\n    },\r\n    {\r\n      label: \"labels.No\",\r\n      value: false,\r\n    },\r\n  ];\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- Add Exam -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n\r\n<h1 mat-dialog-title class=\"mb-1\">\r\n  <span *ngIf=\"examId == 0 && type == 3\">\r\n    {{ \"Navbar.newexam\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"examId == 0 && type == 5\">\r\n    {{ \"Navbar.newesurvay\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"examId > 0\">\r\n    <span *ngIf=\"type == 3\">{{ \"labels.EditExam\" | translate }}</span>\r\n    <span *ngIf=\"type == 5\">{{ \"labels.EditSurvey\" | translate }}</span>\r\n\r\n    - {{ exam_ar_name }}\r\n  </span>\r\n  <!-- <a\r\n    mat-raised-button\r\n    routerLink=\"../\"\r\n    [queryParams]=\"{\r\n      functionId: functionId,\r\n      parentId: parentId\r\n    }\"\r\n    class=\"btn btn-warning bg-light-warning float-right\"\r\n  >\r\n    {{ \"General.Back\" | translate }}\r\n  </a> -->\r\n</h1>\r\n\r\n<mat-dialog-content>\r\n  <mat-tab-group mat-align-tabs=\"start\" class=\"no-margin-tab\">\r\n    <mat-tab label=\"{{ 'labels.Step1' | translate }}\">\r\n      <mat-card-title>{{ \"labels.MainData\" | translate }}</mat-card-title>\r\n\r\n      <form [formGroup]=\"myForm\">\r\n        <div class=\"row\">\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Country\" | translate }} </mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectCountry()\"\r\n                formControlName=\"countryId\"\r\n              >\r\n                <mat-option value=\"\">\r\n                  {{ \"labels.Country\" | translate }}\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let country of countries\"\r\n                  [value]=\"country.country_id\"\r\n                >\r\n                  {{ country.country_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.countryId?.invalid &&\r\n                  (FormCtrl.countryId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"myForm.FormCtrl.countryId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <!--\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Navbar.EducationalStage\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectStages()\"\r\n                formControlName=\"stageId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Navbar.EducationalStage\" | translate\r\n                }}</mat-option>\r\n                <mat-option *ngFor=\"let stage of stages\" [value]=\"stage.id\">\r\n                  {{ stage.stage_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.stageId?.invalid && (FormCtrl.stageId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"myForm.FormCtrl.stageId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.EducationalYear\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectEducationYears()\"\r\n                formControlName=\"educationYearId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"labels.EducationalYear\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let year of educationYears\"\r\n                  [value]=\"year.id\"\r\n                >\r\n                  {{ year.Educational_year_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.educationYearId?.invalid &&\r\n                  (FormCtrl.educationYearId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.educationYearId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.Subjects\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectSubjects()\"\r\n                formControlName=\"subjectId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Material.Subjects\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let sub of subjects\"\r\n                  [value]=\"sub.subject_id\"\r\n                >\r\n                  {{ sub.subject_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.subjectId?.invalid &&\r\n                  (FormCtrl.subjectId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.subjectId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <!--\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.Teacher\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectSubjects()\"\r\n                formControlName=\"teacherUserId\"\r\n              >\r\n                <mat-option>\r\n                  {{ \"Material.Teacher\" | translate }}\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let teacher of teachers\"\r\n                  [value]=\"teacher.teacherUserId\"\r\n                >\r\n                  {{ teacher.teacher_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.teacherUserId?.invalid &&\r\n                  (FormCtrl.teacherUserId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.teacherUserId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.ExamType\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectExamType(); examTypeValidator()\"\r\n                formControlName=\"examTypeId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Material.ExamType\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let type of examTypes\"\r\n                  [value]=\"type.exam_type_id\"\r\n                >\r\n                  {{ type.exam_ar_type_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.examTypeId?.invalid &&\r\n                  (FormCtrl.examTypeId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.examTypeId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectUnit()\"\r\n                formControlName=\"unitId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"labels.Unit\" | translate\r\n                }}</mat-option>\r\n                <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n                  {{ unit.unit_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.unitId?.invalid && (FormCtrl.unitId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.unitId?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n              <mat-select formControlName=\"lessionId\">\r\n                <mat-option value=\"\">{{\r\n                  \"labels.Lesson\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  [value]=\"lession.id\"\r\n                  *ngFor=\"let lession of lessions\"\r\n                >\r\n                  {{ lession.lesson_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.lessionId?.invalid &&\r\n                  (FormCtrl.lessionId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.lessionId?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.examName\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ExamNm\"\r\n              type=\"text\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.examHours\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ExamHours\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.examMinutes\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ExamMinute\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.ExamPrice\" | translate }} </mat-label>\r\n              <input matInput type=\"number\" formControlName=\"examPrice\" />\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.examPrice?.invalid &&\r\n                  (FormCtrl.examPrice?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.examPrice?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </mat-label>\r\n              <input matInput type=\"number\" formControlName=\"discount\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"labels.DiscountType\" | translate }}\r\n              </mat-label>\r\n              <mat-select formControlName=\"discountType\">\r\n                <mat-option value=\"\"\r\n                  >{{ \"General.Choose\" | translate }}\r\n                </mat-option>\r\n                <mat-option value=\"1\">عام</mat-option>\r\n                <mat-option value=\"2\">خاص</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-datepicker\r\n              [control]=\"FormCtrl.fromDate\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.FromDate\"\r\n            ></app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-datepicker\r\n              [control]=\"FormCtrl.toDate\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ToDate\"\r\n            ></app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.formHour\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.FromTime\"\r\n              type=\"time\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.toHours\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ToTime\"\r\n              type=\"time\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <!-- resualtDate -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label> {{ \"labels.ExamResultDate\" | translate }}</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"resualtDate\"\r\n                formControlName=\"resualtDate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"resualtDate\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #resualtDate></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.examResultTime\" | translate }}</mat-label>\r\n              <input matInput type=\"time\" formControlName=\"resualtTime\" />\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- can Sell Individually -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.SellExamOnly\" | translate }}\r\n            </mat-label>\r\n            <mat-radio-group formControlName=\"canSellIndividually\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n          <!-- isRepeatable -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.RepeatedExam\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"isRepeatable\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button\r\n                  [value]=\"false\"\r\n                  (change)=\"RepeatableValidator()\"\r\n                >\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button\r\n                  [value]=\"true\"\r\n                  (change)=\"RepeatableValidator()\"\r\n                >\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n          <!-- send WhatsApp Msg -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"sendWhatsAppMsg\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n          <!-- Custom Discount -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.CustomDiscount\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"hasCustomDiscount\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n          <!-- <ng-container *ngIf=\"FormCtrl.isRepeatable?.value == true\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.repeatNumbers\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"repeatNumbers\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.repeatNumbers?.invalid &&\r\n                    (FormCtrl.repeatNumbers?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.repeatNumbers?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.repeatNumbers?.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.repeatingPrice\" | translate }}</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  formControlName=\"repeatingPrice\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.repeatingPrice?.invalid &&\r\n                    (FormCtrl.repeatingPrice?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.repeatingPrice?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.repeatingPrice?.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </ng-container> -->\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.degreeToPass\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.percentageToPass\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.order\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.Order\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-radio-button\r\n              [control]=\"FormCtrl.isMandatory\"\r\n              [radioList]=\"isMandatoryRadioList\"\r\n              label=\"labels.IsMandatory\"\r\n            ></app-radio-button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"onCloseDialog()\"\r\n          class=\"btn btn-warning bg-light-warning\"\r\n        >\r\n          {{ \"General.Close\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          (click)=\"onSubmit()\"\r\n          mat-raised-button\r\n          cdkFocusInitial\r\n          class=\"btn btn-info bg-light-info\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"examId == 0\"></i>\r\n          {{ (examId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-tab>\r\n\r\n    <!-- add-questions -->\r\n    <mat-tab label=\"{{ 'labels.Step2' | translate }}\">\r\n      <app-add-edit-sub-question\r\n        [examId]=\"examId\"\r\n        [examGroupHeaderId]=\"GroupsHeadersList[0]?.id || 0\"\r\n        [subjectId]=\"subId\"\r\n        (closeDialog)=\"onCloseDialog()\"\r\n      ></app-add-edit-sub-question>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</mat-dialog-content>\r\n\r\n<!-- </mat-card>\r\n  </div>\r\n</div> -->\r\n\r\n<!-- START: ADD/EDIT EXAM GROUP AND HEADER -->\r\n<!-- <span>{{ \"labels.addSurveyGroups\" | translate }}</span> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>{{ \"labels.addGxamGroups\" | translate }}</span>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"GroupHeadersForm\" class=\"form-horizontal\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.َQuestionNumber\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examGroup\"\r\n                  [matAutocomplete]=\"autoExamGroup\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamGroup=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamGroups | async\"\r\n                    [value]=\"val.question_group_ar_name\"\r\n                  >\r\n                    {{ val.question_group_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.examGroup?.invalid &&\r\n                    (FormCtrl.examGroup?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.examGroup?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.QuestionHeader\" | translate }}</mat-label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examHeader\"\r\n                  [matAutocomplete]=\"autoExamHeader\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamHeader=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamHeaders | async\"\r\n                    [value]=\"val.question_head_ar_name\"\r\n                  >\r\n                    {{ val.question_head_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.examHeader?.invalid &&\r\n                    (FormCtrl.examHeader?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.examHeader?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{\r\n                  \"labels.َQuestionContent\" | translate\r\n                }}</mat-label>\r\n                <textarea\r\n                  matInput\r\n                  formControlName=\"examContent\"\r\n                  cols=\"20\"\r\n                ></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"examId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"\r\n            GroupsHeadersList.length > 0 && !editGroupHeaderMode && examId > 0\r\n          \"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onAddExamGroupHeader()\"\r\n        >\r\n          {{ \"labels.AddQuestion\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"editGroupHeaderMode\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"editExamGroupHead()\"\r\n        >\r\n          {{ \"labels.UpdateQuestion\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n\r\n<!-- <div class=\"row\" *ngIf=\"GroupsHeadersList.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.QuestionsGroup\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"mat-elevation-z8 f-w\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"#\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n                  <td mat-cell *matCellDef=\"let i = index\">\r\n                    {{ i + 1 }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"questionNumber\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionNumber\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionNumber }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"questionType\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.QuestionHeader\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionType }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"question_title\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionContent\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.question_title }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    actions\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let groupHeader\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'EditGroup'\"\r\n                        (click)=\"getExamHeadById(groupHeader)\"\r\n                        class=\"success p-0\"\r\n                        matTooltip=\"Edit Group\"\r\n                      >\r\n                        <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'DeleteGroup'\"\r\n                        (click)=\"openDeleateDialog(groupHeader)\"\r\n                        class=\"danger p-0\"\r\n                        matTooltip=\"Delete Group\"\r\n                      >\r\n                        <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'addSubQuestion'\"\r\n                        (click)=\"addSubQuestionDialog(groupHeader)\"\r\n                        class=\"info p-0\"\r\n                        matTooltip=\"Add sub question\"\r\n                      >\r\n                        <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                  mat-row\r\n                  *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                  <td class=\"mat-cell\" colspan=\"4\">\r\n                    No data matching the filter \"{{ input.value }}\"\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n\r\n              <mat-paginator\r\n                [pageSizeOptions]=\"[10]\"\r\n                showFirstLastButtons\r\n                aria-label=\"Select page of users\"\r\n              >\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n","import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  IQuestionForGridModel,\r\n  examQuestionImage,\r\n  IAddEditQuestionTextModel,\r\n  IMcqChoices,\r\n  IAddEditQuestionMcqModel,\r\n  IAddedTextExamResponse,\r\n  IQuestionDetailsForEditModel,\r\n} from \"app/admin/models/admin/AddEditQuestionModel\";\r\nimport { IUnitModel, ILessionModel } from \"app/admin/models/admin/exam\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-edit-sub-question\",\r\n  templateUrl: \"./add-sub-question.component.html\",\r\n  styleUrls: [\"./add-sub-question.component.scss\"],\r\n})\r\nexport class AddSubQuestionComponent implements OnInit {\r\n  // examId: number;\r\n  // examGroupHeaderId: number;\r\n  // subjectId: number;\r\n  @Input(\"examId\") examId: number;\r\n  @Input(\"examGroupHeaderId\") examGroupHeaderId: number = 0;\r\n  @Input(\"subjectId\") subjectId: number = 0;\r\n  @Output(\"closeDialog\") closeDialog = new EventEmitter();\r\n\r\n  unitId: number = 0;\r\n  lessonId: number = 0;\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n\r\n  questionsInGrid: IQuestionForGridModel[] = [];\r\n\r\n  questionId: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  educationCompanyId: any;\r\n  oneIsCorrect: boolean = false;\r\n  twoIsCorrect: boolean = false;\r\n  threeIsCorrect: boolean = false;\r\n  fourIsCorrect: boolean = false;\r\n  questionFile: any = null;\r\n  answerOneFile: any = null;\r\n  answerTwoFile: any = null;\r\n  answerThreeFile: any = null;\r\n  answerFourFile: any = null;\r\n  perfectAnswerAttach_preview: any = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private examService: ExamsService,\r\n    public authserv: AuthService,\r\n    public toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    public uploadFileService: UploadFileService // @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    // this.examId = data.examId;\r\n    // this.examGroupHeaderId = data.examGroupHeaderId;\r\n    // this.subjectId = data.subjectId;\r\n    if (this.examGroupHeaderId != 0) this.getAllQuestionsByHeadId();\r\n    // if (this.subjectId != 0) this.getAllUnitsBySublectId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      mainQuestion: [null],\r\n      questionTypeId: [2, Validators.required],\r\n      questionImage: [null],\r\n      remove_image: [false],\r\n      // unitId: [null],\r\n      // lessionId: [null],\r\n      exam_question_text: [null],\r\n      questionPerfectAnswer: [null],\r\n      perfect_answer_attach: [null],\r\n      questionMark: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      answerOneId: [null],\r\n      answerOne: [null],\r\n      answerOneIsCorrect: [null],\r\n      answerOneImage: [null],\r\n      answerTwoId: [null],\r\n      answerTwo: [null],\r\n      answerTwoIsCorrect: [null],\r\n      answerTwoImage: [null],\r\n      answerThreeId: [null],\r\n      answerThree: [null],\r\n      answerThreeIsCorrect: [null],\r\n      answerThreeImage: [null],\r\n      answerFourId: [null],\r\n      answerFour: [null],\r\n      answerFourIsCorrect: [null],\r\n      answerFourImage: [null],\r\n      answerOneRemove_image: [false],\r\n      answerTwoRemove_image: [false],\r\n      answerThreeRemove_image: [false],\r\n      answerFourRemove_image: [false],\r\n    });\r\n    //remove_image: d.remove_image,\r\n    this.educationCompanyId = this.authserv.getEduCompId();\r\n    this.questionTypeValidation();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.examGroupHeaderId?.currentValue > 0)\r\n      this.getAllQuestionsByHeadId();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //get all question for this header\r\n  getAllQuestionsByHeadId() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getAllQuestionsByHeadId<IQuestionForGridModel[]>(this.examGroupHeaderId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"getAllQuestionsByHeadId\", response);\r\n          this.questionsInGrid = [];\r\n          this.questionsInGrid = response;\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  questionTypeValidation() {\r\n    if (this.FormCtrl.questionTypeId?.value === 1) {\r\n      // console.log(\"PerfectAnswer is required\");\r\n      // this.FormCtrl.questionPerfectAnswer?.setValidators(Validators.required);\r\n    } else {\r\n      // console.log(\"PerfectAnswer is not required\");\r\n      this.FormCtrl.questionPerfectAnswer?.clearAsyncValidators();\r\n      this.FormCtrl.questionPerfectAnswer?.reset();\r\n    }\r\n    this.FormCtrl.questionPerfectAnswer?.updateValueAndValidity();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // if (this.FormCtrl.questionTypeId?.value == 1) {\r\n    //   // مقالي\r\n\r\n    //   let image: examQuestionImage = this.questionFile || null;\r\n    //   // let image: examQuestionImage = this.questionFile || null {\r\n    //   //   FileAsBase64: this.questionFile.FileAsBase64 || null,\r\n    //   //   name: this.questionFile.name,\r\n    //   //   size: this.questionFile.size,\r\n    //   //   type: this.questionFile.type,\r\n    //   // };\r\n    //   let questionImagePath = this.FormCtrl.questionImage;\r\n\r\n    //   let toAddEdit: IAddEditQuestionTextModel = {\r\n    //     exam_question_main_question: this.FormCtrl.mainQuestion?.value,\r\n    //     exam_question_mark: this.FormCtrl.questionMark?.value,\r\n    //     exam_question_perfect_answer:\r\n    //       this.FormCtrl.questionPerfectAnswer?.value,\r\n    //     //   perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n    //     exam_question_text: this.FormCtrl.exam_question_text?.value,\r\n    //     exam_question_type_id: this.FormCtrl.questionTypeId?.value,\r\n    //     exam_selected_question_head_id: this.examGroupHeaderId,\r\n    //     exam_selected_subject_id: this.subjectId,\r\n    //     exam_question_image: image,\r\n    //     remove_image: this.FormCtrl.remove_image?.value,\r\n    //     exam_question_id: this.questionId,\r\n    //   };\r\n    //   console.log(\"toAddEdit_Text_question=> \", toAddEdit);\r\n    //   if (\r\n    //     !this.FormCtrl.exam_question_text?.value &&\r\n    //     image == null &&\r\n    //     questionImagePath == null\r\n    //   ) {\r\n    //     this.toastr.warning(\"Exam.QuestionMsgError\");\r\n    //     return;\r\n    //   } else {\r\n    //     if (this.questionId > 0) {\r\n    //       this.editTextQuestion(toAddEdit);\r\n    //     } else {\r\n    //       this.addTextQuestion(toAddEdit);\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    // MCQ\r\n    if (this.FormCtrl.questionTypeId?.value == 2) {\r\n      let image: examQuestionImage = this.questionFile || null;\r\n      let questionImagePath = this.FormCtrl.questionImage.value;\r\n      // let image: examQuestionImage = {\r\n      //   FileAsBase64: this.questionFile.FileAsBase64 || null,\r\n      //   name: this.questionFile.name,\r\n      //   size: this.questionFile.size,\r\n      //   type: this.questionFile.type,\r\n      // };\r\n\r\n      let imageOne: examQuestionImage = this.answerOneFile || null;\r\n      // let imageOne: examQuestionImage = {\r\n      //   FileAsBase64: this.answerOneFile.FileAsBase64 || null,\r\n      //   name: this.answerOneFile.name,\r\n      //   size: this.answerOneFile.size,\r\n      //   type: this.answerOneFile.type,\r\n      // };\r\n\r\n      let choice1: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerOneId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerOne?.value,\r\n        is_correct:\r\n          this.FormCtrl.answerOneIsCorrect.value === 0 ||\r\n          this.FormCtrl.answerOneIsCorrect.value\r\n            ? true\r\n            : false,\r\n        choice_image: imageOne,\r\n        remove_image: this.FormCtrl.answerOneRemove_image?.value,\r\n        path: this.FormCtrl.answerOneImage?.value,\r\n      };\r\n\r\n      let imageTwo: examQuestionImage = this.answerTwoFile || null;\r\n      // let imageTwo: examQuestionImage = {\r\n      //   FileAsBase64: this.answerTwoFile.FileAsBase64 || null,\r\n      //   name: this.answerTwoFile.name,\r\n      //   size: this.answerTwoFile.size,\r\n      //   type: this.answerTwoFile.type,\r\n      // };\r\n\r\n      let choice2: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerTwoId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerTwo?.value,\r\n        is_correct: this.FormCtrl.answerTwoIsCorrect?.value ? true : false,\r\n        choice_image: imageTwo,\r\n        remove_image: this.FormCtrl.answerTwoRemove_image?.value,\r\n        path: this.FormCtrl.answerTwoImage?.value,\r\n      };\r\n\r\n      let imageThree: examQuestionImage = this.answerThreeFile || null;\r\n      // let imageThree: examQuestionImage = {\r\n      //   FileAsBase64: this.answerThreeFile.FileAsBase64 || null,\r\n      //   name: this.answerThreeFile.name,\r\n      //   size: this.answerThreeFile.size,\r\n      //   type: this.answerThreeFile.type,\r\n      // };\r\n\r\n      let choice3: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerThreeId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerThree?.value,\r\n        is_correct: this.FormCtrl.answerThreeIsCorrect?.value ? true : false,\r\n        choice_image: imageThree,\r\n        remove_image: this.FormCtrl.answerThreeRemove_image?.value,\r\n        path: this.FormCtrl.answerThreeImage?.value,\r\n      };\r\n\r\n      let imageFour: examQuestionImage = this.answerFourFile || null;\r\n      // let imageFour: examQuestionImage = {\r\n      //   FileAsBase64: this.answerFourFile.FileAsBase64 || null,\r\n      //   name: this.answerFourFile.name,\r\n      //   size: this.answerFourFile.size,\r\n      //   type: this.answerFourFile.type,\r\n      // };\r\n\r\n      let choice4: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerFourId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerFour?.value,\r\n        is_correct: this.FormCtrl.answerFourIsCorrect?.value ? true : false,\r\n        choice_image: imageFour,\r\n        remove_image: this.FormCtrl.answerFourRemove_image?.value,\r\n        path: this.FormCtrl.answerFourImage?.value,\r\n      };\r\n\r\n      let toAddEdit: IAddEditQuestionMcqModel = {\r\n        exam_question_main_question: this.FormCtrl.mainQuestion?.value,\r\n        exam_question_mark: this.FormCtrl.questionMark?.value,\r\n        exam_question_perfect_answer:\r\n          this.FormCtrl.questionPerfectAnswer?.value,\r\n        //perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n        exam_question_text: this.FormCtrl.exam_question_text?.value,\r\n        exam_question_type_id: this.FormCtrl.questionTypeId?.value,\r\n        exam_selected_question_head_id: this.examGroupHeaderId,\r\n        exam_selected_subject_id: this.subjectId,\r\n        exam_question_image: image,\r\n        remove_image: this.FormCtrl.remove_image?.value,\r\n        exam_question_id: this.questionId,\r\n        mcq_choices: [choice1, choice2, choice3, choice4],\r\n      };\r\n\r\n      console.log(\"toAddEdit_mcq_question=> \", toAddEdit);\r\n      // if no question Text or img\r\n      if (\r\n        (toAddEdit.exam_question_text === null ||\r\n          toAddEdit.exam_question_text == \"\" ||\r\n          toAddEdit.exam_question_text == undefined) &&\r\n        toAddEdit.exam_question_image === null &&\r\n        questionImagePath === null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if no correct answer\r\n      // if (\r\n      //   !choice1.is_correct &&\r\n      //   !choice2.is_correct &&\r\n      //   !choice3.is_correct &&\r\n      //   !choice4.is_correct\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.MustChooseCorrectAnswer\");\r\n      //   return;\r\n      // }\r\n      let choices: IMcqChoices[] = [choice1, choice2, choice3, choice4];\r\n      let correctChoiceDone: Boolean = false;\r\n      choices.forEach((choice) => {\r\n        if (\r\n          choice.is_correct &&\r\n          (choice.choice_text || choice.choice_image || choice.path)\r\n        )\r\n          correctChoiceDone = true;\r\n      });\r\n      if (!correctChoiceDone) {\r\n        this.toastr.warning(\"Exam.MustChooseCorrectAnswer\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 1 no text or img\r\n      if (\r\n        (choice1.choice_text === null ||\r\n          choice1.choice_text == \"\" ||\r\n          choice1.choice_text == undefined) &&\r\n        choice1.choice_image === null &&\r\n        choice1.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionOneMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 2 no text or img\r\n      if (\r\n        (choice2.choice_text === null ||\r\n          choice2.choice_text == \"\" ||\r\n          choice2.choice_text == undefined) &&\r\n        choice2.choice_image === null &&\r\n        choice2.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionTwoMsgError\");\r\n        return;\r\n      } else {\r\n        if (this.questionId > 0) {\r\n          this.editMcqQuestion(toAddEdit);\r\n        } else {\r\n          this.addMcqQuestion(toAddEdit);\r\n        }\r\n      }\r\n\r\n      // if mcq 3 no text or img\r\n      // if (\r\n      //   choice3.choice_text === null &&\r\n      //   choice3.choice_image === null &&\r\n      //   choice3.path == null\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.QuestionThreeMsgError\");\r\n      //   return;\r\n      // }\r\n\r\n      // if mcq 4 no text or img\r\n      // if (\r\n      //   choice4.choice_text === null &&\r\n      //   choice4.choice_image === null &&\r\n      //   choice4.path == null\r\n      // ) {\r\n      //   this.toastr.warning(\"Exam.QuestionFourMsgError\");\r\n      //   return;\r\n      // } else {\r\n      //   if (this.questionId > 0) {\r\n      //     this.editMcqQuestion(toAddEdit);\r\n      //   } else {\r\n      //     this.addMcqQuestion(toAddEdit);\r\n      //   }\r\n      // }\r\n    }\r\n  }\r\n\r\n  // addTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n  //   //  console.log('on add ', toAddEdit);\r\n  //   this.spinner.show();\r\n  //   this.examService\r\n  //     .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n  //     .subscribe((response: any) => {\r\n  //       // console.log('respooooooonse', response);\r\n\r\n  //       if (response.returnValue == 200) {\r\n  //         this.getAllQuestionsByHeadId();\r\n\r\n  //         this.FormCtrl.mainQuestion?.setValue(null);\r\n  //         this.FormCtrl.questionMark?.setValue(null);\r\n  //         this.FormCtrl.questionTypeId?.setValue(null);\r\n  //         this.FormCtrl.questionImage?.setValue(null);\r\n  //         this.FormCtrl.exam_question_text?.setValue(null);\r\n  //         this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n  //         this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n  //         this.FormCtrl.unitId?.setValue(null);\r\n  //         this.FormCtrl.lessonId?.setValue(null);\r\n  //         this.myForm.reset();\r\n  //         this.resetFileInputs();\r\n  //       } else {\r\n  //         this.toastr.error(response.returnString);\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  // editTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n  //   //  console.log('tooEdiiiiiiit', toAddEdit);\r\n  //   this.spinner.show();\r\n  //   this.examService\r\n  //     .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n  //     .subscribe((response) => {\r\n  //       //  console.log('ediiiiiitResponse', response);\r\n  //       if (response) {\r\n  //         let toEdit = this.questionsInGrid.find(\r\n  //           (q: any) => q.Id == this.questionId\r\n  //         );\r\n\r\n  //         if (toEdit) {\r\n  //           toEdit.Text = this.FormCtrl.exam_question_text?.value;\r\n  //           toEdit.QuestionTypeAr = \"مقال\";\r\n  //           toEdit.Image = this.FormCtrl.questionImage?.value;\r\n  //         }\r\n\r\n  //         this.FormCtrl.mainQuestion?.setValue(null);\r\n  //         this.FormCtrl.questionMark?.setValue(null);\r\n  //         this.FormCtrl.questionTypeId?.setValue(null);\r\n  //         this.FormCtrl.questionImage?.setValue(null);\r\n  //         this.FormCtrl.exam_question_text?.setValue(null);\r\n  //         this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n  //         this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n\r\n  //         this.FormCtrl.unitId?.setValue(null);\r\n  //         this.FormCtrl.lessonId?.setValue(null);\r\n\r\n  //         this.myForm.reset();\r\n  //         this.resetFileInputs();\r\n\r\n  //         this.questionId = 0; // return to add mode\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  addMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    // console.log('on add ', toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n        .subscribe((response: any) => {\r\n          // console.log('respooooooonse', response);\r\n\r\n          if (response.returnValue == 200) {\r\n            this.getAllQuestionsByHeadId();\r\n\r\n            this.FormCtrl.mainQuestion?.setValue(null);\r\n            this.FormCtrl.questionMark?.setValue(null);\r\n            this.FormCtrl.questionTypeId?.setValue(null);\r\n            this.FormCtrl.questionImage?.setValue(null);\r\n            this.FormCtrl.exam_question_text?.setValue(null);\r\n            this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n            this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n            // this.FormCtrl.unitId?.setValue(null);\r\n            // this.FormCtrl.lessonId?.setValue(null);\r\n\r\n            this.myForm.reset();\r\n            // set type msq\r\n            this.FormCtrl.questionTypeId.setValue(2);\r\n            this.resetFileInputs();\r\n            this.submitted = false;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            this.toastr.error(response.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  editMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    //console.log(\"editMcqQuestion\", toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n        .subscribe((response) => {\r\n          //  console.log(\"editMcqQuestion\", response);\r\n          if (response) {\r\n            this.getAllQuestionsByHeadId();\r\n            this.FormCtrl.mainQuestion?.setValue(null);\r\n            this.FormCtrl.questionMark?.setValue(null);\r\n            this.FormCtrl.questionTypeId?.setValue(null);\r\n            this.FormCtrl.questionImage?.setValue(null);\r\n            this.FormCtrl.exam_question_text?.setValue(null);\r\n            this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n            this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n            this.oneIsCorrect = false;\r\n            this.twoIsCorrect = false;\r\n            this.threeIsCorrect = false;\r\n            this.fourIsCorrect = false;\r\n            // this.FormCtrl.unitId?.setValue(null);\r\n            // this.FormCtrl.lessonId?.setValue(null);\r\n\r\n            this.myForm.reset();\r\n            // set type msq\r\n            this.FormCtrl.questionTypeId.setValue(2);\r\n            this.resetFileInputs();\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.submitted = false;\r\n\r\n            this.questionId = 0; // return to add mode\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getQuestionForEditByID(questionId: number) {\r\n    //  console.log('questionIddddddddddddddd', questionId);\r\n    this.spinner.show();\r\n    this.examService\r\n      .getQuestionForEditByID<IQuestionDetailsForEditModel>(questionId)\r\n      .subscribe((response) => {\r\n        console.log(\"getQuestionForEditByID\", response);\r\n        if (response) {\r\n          this.FormCtrl.mainQuestion?.setValue(response.main_question);\r\n          this.FormCtrl.questionMark?.setValue(response.mark);\r\n          this.FormCtrl.exam_question_text?.setValue(response.question_text);\r\n          this.FormCtrl.questionImage?.setValue(\r\n            response?.attach_path != null\r\n              ? this.uploadFileService.previewPicture(response?.attach_path)\r\n              : null\r\n          );\r\n          // this.questionFile.FileAsBase64 = response.attach_path;\r\n          this.FormCtrl.questionTypeId?.setValue(response.question_type_id);\r\n          this.questionId = questionId;\r\n\r\n          // this.FormCtrl.questionPerfectAnswer?.setValue(\r\n          //   response.perfect_answer\r\n          // );\r\n          // this.FormCtrl.perfect_answer_attach?.setValue(\r\n          //   `mozakretyapi${response?.prefect_answer_attach_path}`\r\n          // );\r\n\r\n          if (response.question_type_id == 2) {\r\n            this.FormCtrl.answerOneId?.setValue(response.MCQ_Choices[0]?.Id);\r\n            this.FormCtrl.answerOne?.setValue(response.MCQ_Choices[0]?.Text);\r\n            this.FormCtrl.answerOneImage?.setValue(\r\n              response?.MCQ_Choices[0]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[0]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            // this.FormCtrl.answerOneImage?.setValue(response.MCQ_Choices[0].Image);\r\n            //  this.answerOneFile.FileAsBase64 = response.MCQ_Choices[0].Image;\r\n            this.FormCtrl.answerOneIsCorrect?.setValue(\r\n              response.MCQ_Choices[0]?.Is_Correct\r\n            );\r\n            this.oneIsCorrect = response.MCQ_Choices[0]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerTwoId?.setValue(response.MCQ_Choices[1]?.Id);\r\n            this.FormCtrl.answerTwo?.setValue(response.MCQ_Choices[1]?.Text);\r\n            this.FormCtrl.answerTwoImage?.setValue(\r\n              response?.MCQ_Choices[1]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[1]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            //  this.FormCtrl.answerTwoImage?.setValue(response.MCQ_Choices[1].Image);\r\n            // this.answerTwoFile.FileAsBase64 = response.MCQ_Choices[1].Image;\r\n            this.FormCtrl.answerTwoIsCorrect?.setValue(\r\n              response.MCQ_Choices[1]?.Is_Correct\r\n            );\r\n            this.twoIsCorrect = response.MCQ_Choices[1]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerThreeId?.setValue(response.MCQ_Choices[2]?.Id);\r\n            this.FormCtrl.answerThree?.setValue(response.MCQ_Choices[2]?.Text);\r\n            this.FormCtrl.answerThreeImage?.setValue(\r\n              response?.MCQ_Choices[2]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[2]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            // this.FormCtrl.answerThreeImage?.setValue(response.MCQ_Choices[2].Image);\r\n            //  this.answerThreeFile.FileAsBase64 = response.MCQ_Choices[2].Image;\r\n            this.FormCtrl.answerThreeIsCorrect?.setValue(\r\n              response.MCQ_Choices[2]?.Is_Correct\r\n            );\r\n            this.threeIsCorrect = response.MCQ_Choices[2]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerFourId?.setValue(response.MCQ_Choices[3]?.Id);\r\n            this.FormCtrl.answerFour?.setValue(response.MCQ_Choices[3]?.Text);\r\n            this.FormCtrl.answerFourImage?.setValue(\r\n              response?.MCQ_Choices[3]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[3]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            //  this.FormCtrl.answerFourImage?.setValue(response.MCQ_Choices[3].Image);\r\n            //  this.answerFourFile.FileAsBase64 = response.MCQ_Choices[3].Image;\r\n            this.FormCtrl.answerFourIsCorrect?.setValue(\r\n              response.MCQ_Choices[3]?.Is_Correct\r\n            );\r\n            this.fourIsCorrect = response.MCQ_Choices[3]?.Is_Correct;\r\n          }\r\n\r\n          // console.log(\"answer 1\", this.oneIsCorrect);\r\n          // console.log(\"answer 2\", this.twoIsCorrect);\r\n          // console.log(\"answer 3\", this.threeIsCorrect);\r\n          // console.log(\"answer 4\", this.fourIsCorrect);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamQuestion(questionId: number) {\r\n    let confirmed = confirm(\"هل انت متأكد من الحذف\");\r\n    // console.log('questionId', questionId);\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .deleteExamQuestion<any>(questionId)\r\n        .subscribe((response) => {\r\n          // console.log('deleteResponse', response);\r\n          if (response.returnString === \"Done\") {\r\n            let toDeleteIndex = this.questionsInGrid.findIndex(\r\n              (q: any) => q.Id == questionId\r\n            );\r\n            this.questionsInGrid.splice(toDeleteIndex, 1);\r\n          } else this.toastr.info(response.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  importFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.FormCtrl.questionImage.setValue(file.FileAsBase64);\r\n        this.questionFile = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importOneFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerOneFile = file;\r\n        this.FormCtrl.answerOneImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importTwoFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerTwoFile = file;\r\n        this.FormCtrl.answerTwoImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importThreeFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerThreeFile = file;\r\n        this.FormCtrl.answerThreeImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importFourFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerFourFile = file;\r\n        this.FormCtrl.answerFourImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  // perfectAnswerAttach(event: any) {\r\n  //   this.uploadFileService.uploadFile(event).then((file) => {\r\n  //     setTimeout(() => {\r\n  //       this.perfectAnswerAttach_preview = file;\r\n  //       this.FormCtrl.perfect_answer_attach.setValue(file);\r\n  //     }, 100);\r\n  //   });\r\n  // }\r\n\r\n  // getAllUnitsBySublectId() {\r\n  //   this.examService\r\n  //     .getAllUnitsBySublectId<any[]>(this.subjectId)\r\n  //     .subscribe((results) => {\r\n  //       this.units = results;\r\n  //       // console.log('this.units', this.units);\r\n  //     });\r\n  // }\r\n\r\n  // getAllLessonsByUnitId() {\r\n  //   this.examService\r\n  //     .getAllLessonsByUnitId<any>(this.FormCtrl.unitId?.value)\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         this.lessions = response;\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  onSelectCorrect(answerNumber: number) {\r\n    console.log(\"answer is Correct\", answerNumber);\r\n    if (answerNumber === 0) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(0);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 1) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(1);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 2) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(2);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 3) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(3);\r\n    }\r\n  }\r\n\r\n  resetFileInputs() {\r\n    const FileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n    FileInputs.forEach((input: any) => {\r\n      input.value = null;\r\n    });\r\n    this.questionFile = null;\r\n    this.answerOneFile = null;\r\n    this.answerTwoFile = null;\r\n    this.answerThreeFile = null;\r\n    this.answerFourFile = null;\r\n  }\r\n  removeQuestionImg() {\r\n    this.FormCtrl.remove_image.setValue(true);\r\n    this.FormCtrl.questionImage.setValue(null);\r\n    this.questionFile = null;\r\n  }\r\n\r\n  answerOneRemove_image() {\r\n    this.FormCtrl.answerOneRemove_image.setValue(true);\r\n    this.FormCtrl.answerOneImage.setValue(null);\r\n    this.answerOneFile = null;\r\n  }\r\n\r\n  answerTwoRemove_image() {\r\n    this.FormCtrl.answerTwoRemove_image.setValue(true);\r\n    this.FormCtrl.answerTwoImage.setValue(null);\r\n    this.answerTwoFile = null;\r\n  }\r\n\r\n  answerThreeRemove_image() {\r\n    this.FormCtrl.answerThreeRemove_image.setValue(true);\r\n    this.FormCtrl.answerThreeImage.setValue(null);\r\n    this.FormCtrl.answerThreeFile = null;\r\n  }\r\n\r\n  answerFourRemove_image() {\r\n    this.FormCtrl.answerFourRemove_image.setValue(true);\r\n    this.FormCtrl.answerFourImage.setValue(null);\r\n    this.answerFourFile = null;\r\n  }\r\n}\r\n","<!-- <div>\r\n  <div class=\"btn btn-default\" (click)=\"onCancel()\">اغلاق</div>\r\n</div> -->\r\n<!-- <h1 mat-dialog-title>{{ \"labels.addSubQuestion\" | translate }}</h1> -->\r\n<mat-card-title>\r\n  <span>{{ \"labels.AddQuestion\" | translate }}</span>\r\n</mat-card-title>\r\n\r\n<div mat-dialog-content class=\"exam-model-box\">\r\n  <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.mainQuestion\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.mainQuestion\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!-- <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.QuestionType\" | translate }}\r\n          </mat-label>\r\n          <mat-select\r\n            formControlName=\"questionTypeId\"\r\n            (selectionChange)=\"questionTypeValidation()\"\r\n          > -->\r\n      <!-- <mat-option>\r\n              {{ \"General.Choose\" | translate }}\r\n            </mat-option> -->\r\n      <!-- <mat-option [value]=\"1\">\r\n              {{ \"labels.Article\" | translate }}\r\n            </mat-option>\r\n\r\n            <mat-option [value]=\"2\">\r\n              {{ \"labels.Mcq\" | translate }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              FormCtrl.questionTypeId?.invalid &&\r\n              (FormCtrl.questionTypeId?.touched || submitted)\r\n            \"\r\n          >\r\n            <span *ngIf=\"FormCtrl.questionTypeId?.errors?.required\">\r\n              {{ \"labels.MustChoosevalue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div> -->\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.questionMark\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.QuestionMark\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!--\r\n    <div class=\"col-md-6 col-12\" *ngIf=\"unitId == 0\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n        <mat-select\r\n          formControlName=\"unitId\"\r\n          (selectionChange)=\"getAllLessonsByUnitId()\"\r\n        >\r\n          <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n          <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n            {{ unit.unit_ar_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-12\" *ngIf=\"lessonId == 0\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n        <mat-select formControlName=\"lessionId\">\r\n          <mat-option>\r\n            {{ \"General.Choose\" | translate }}\r\n          </mat-option>\r\n          <mat-option *ngFor=\"let lesson of lessions\" [value]=\"lesson.id\">\r\n            {{ lesson.lesson_ar_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div> -->\r\n\r\n      <!-- question text -->\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.exam_question_text\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.question_ar_text\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!-- question text Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>{{ \"labels.question_ar_text\" | translate }} </mat-label>\r\n        <quill-editor\r\n          formControlName=\"exam_question_text\"\r\n          [placeholder]=\"'labels.question_ar_text' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <div class=\"col-12\">\r\n        <!-- Question Picture -->\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              name=\"questionImage\"\r\n              accept=\"image/*\"\r\n              (change)=\"importFile($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-1\" *ngIf=\"FormCtrl.questionImage.value\">\r\n            <button\r\n              mat-mini-fab\r\n              color=\"warn\"\r\n              class=\"mr-1\"\r\n              title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n              (click)=\"removeQuestionImg()\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-7 col-11\">\r\n            <div class=\"question-img\">\r\n              <img\r\n                class=\"img-fluid\"\r\n                [class.hideImg]=\"!FormCtrl.questionImage?.value\"\r\n                [src]=\"FormCtrl.questionImage?.value\"\r\n                class=\"coverPhoto\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Perfect Answer  -->\r\n      <!-- <div class=\"col-12\" *ngIf=\"FormCtrl.questionTypeId?.value == 1\">\r\n        <app-input\r\n          [control]=\"FormCtrl.questionPerfectAnswer\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.perfect_answer\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div> -->\r\n\r\n      <!--  perfect Answer Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>\r\n          {{ \"labels.perfect_answer\" | translate }}\r\n        </mat-label>\r\n        <quill-editor\r\n          formControlName=\"questionPerfectAnswer\"\r\n          [placeholder]=\"'labels.perfect_answer' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <!-- perfect answer attach-->\r\n      <!-- <div class=\"col-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.perfectAnswerAttach\" | translate }}\r\n            </mat-label>\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              accept=\"xlsx,.xls,image/*,audio/*,.pdf\"\r\n              (change)=\"perfectAnswerAttach($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-md-8 col-12\">\r\n            <div class=\"question-img\">\r\n              <iframe\r\n                [src]=\"FormCtrl.perfect_answer_attach.value | safe\"\r\n                width=\"100%\"\r\n                class=\"border-0 img-fluid\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n\r\n    <hr />\r\n\r\n    <ng-container *ngIf=\"FormCtrl.questionTypeId?.value == 2\" class=\"row\">\r\n      <!-- answer one -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerOneIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"0\"\r\n            [checked]=\"FormCtrl.answerOneIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(0)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (1)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerOne\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer  one Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (1) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerOne\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (1)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerOneImage\"\r\n                    (change)=\"importOneFile($event)\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-1\" *ngIf=\"FormCtrl.answerOneImage.value\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    class=\"mr-1\"\r\n                    title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n                    (click)=\"answerOneRemove_image()\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-md-7 col-11\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [class.hideImg]=\"!FormCtrl.answerOneImage?.value\"\r\n                      [src]=\"FormCtrl.answerOneImage?.value\"\r\n                      class=\"coverPhoto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Two -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerTwoIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"1\"\r\n            [checked]=\"FormCtrl.answerTwoIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(1)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (2)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerTwo\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer two Editor-->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (2) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerTwo\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (2)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerTwoImage\"\r\n                    (change)=\"importTwoFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-1\" *ngIf=\"FormCtrl.answerTwoImage.value\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    class=\"mr-1\"\r\n                    title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n                    (click)=\"answerTwoRemove_image()\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-md-7 col-11\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [class.hideImg]=\"!FormCtrl.answerTwoImage?.value\"\r\n                      [src]=\"FormCtrl.answerTwoImage?.value\"\r\n                      class=\"coverPhoto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Three -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerThreeIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"2\"\r\n            [checked]=\"FormCtrl.answerThreeIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(2)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (3)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerThree\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer three  Editor-->\r\n              <!--\r\n              <mat-label> {{ \"labels.AnswerText\" | translate }} (3) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerThree\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (3)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerThreeImage\"\r\n                    (change)=\"importThreeFile($event)\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-1\" *ngIf=\"FormCtrl.answerThreeImage.value\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    class=\"mr-1\"\r\n                    title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n                    (click)=\"answerThreeRemove_image()\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-md-7 col-11\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [class.hideImg]=\"!FormCtrl.answerThreeImage?.value\"\r\n                      [src]=\"FormCtrl.answerThreeImage?.value\"\r\n                      class=\"coverPhoto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Four -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerFourIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"3\"\r\n            [checked]=\"FormCtrl.answerFourIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(3)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (4)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerFour\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer four Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (4) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerFour\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (4)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerFourImage\"\r\n                    (change)=\"importFourFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-1\" *ngIf=\"FormCtrl.answerFourImage.value\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    class=\"mr-1\"\r\n                    title=\"{{ 'labels.RemoveImage' | translate }}\"\r\n                    (click)=\"answerFourRemove_image()\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-md-7 col-11\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [class.hideImg]=\"!FormCtrl.answerFourImage?.value\"\r\n                      [src]=\"FormCtrl.answerFourImage?.value\"\r\n                      class=\"coverPhoto\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </ng-container>\r\n\r\n    <mat-card-actions class=\"col-12\" align=\"end\">\r\n      <button\r\n        mat-raised-button\r\n        class=\"btn btn-warning bg-light-warning\"\r\n        *ngIf=\"questionId > 0\"\r\n        (click)=\"\r\n          myForm.reset(); questionId = 0; FormCtrl.questionTypeId.setValue(2)\r\n        \"\r\n      >\r\n        {{ \"General.Reset\" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-info bg-light-info\"\r\n        [disabled]=\"examGroupHeaderId == 0\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"questionId == 0\"\r\n      >\r\n        <i class=\"fa fa-plus\"></i>\r\n        {{ \"General.Add\" | translate }}\r\n      </button>\r\n      <!-- <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"resetFileInputs()\"\r\n      >\r\n        reset\r\n      </button> -->\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"onSubmit()\"\r\n        id=\"editQuestionButton\"\r\n        class=\"btn btn-info bg-light-info\"\r\n        *ngIf=\"questionId > 0\"\r\n      >\r\n        {{ \"General.Update\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n\r\n    <div class=\"col-md-12\">\r\n      <div class=\"full-wid-table\" style=\"overflow: hidden !important\">\r\n        <table\r\n          class=\"table table-striped table-hover table-full-width rtl\"\r\n          id=\"sotbmod\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>{{ \"labels.question_ar_text\" | translate }}</th>\r\n              <th>{{ \"labels.QuestionImage\" | translate }}</th>\r\n              <th>{{ \"labels.QuestionType\" | translate }}</th>\r\n              <th>­</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"addedExamQuestionsHolder\">\r\n            <tr id=\"ExamQuestion-2626853\" *ngFor=\"let ques of questionsInGrid\">\r\n              <td>{{ ques.ExamQuestId }}</td>\r\n              <td>\r\n                {{ ques.Text }}\r\n              </td>\r\n              <td>\r\n                <a\r\n                  *ngIf=\"ques.Image; else noImg\"\r\n                  [href]=\"ques.Image\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <img\r\n                    [src]=\"uploadFileService.previewPicture(ques.Image)\"\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                  />\r\n                  <!-- عرض -->\r\n                </a>\r\n                <!-- <span #noImg>لايوجد صورة</span> -->\r\n              </td>\r\n              <td>{{ ques.QuestionTypeAr }}</td>\r\n              <td>\r\n                <button\r\n                  (click)=\"getQuestionForEditByID(ques.ExamQuestId)\"\r\n                  mat-mini-fab\r\n                  color=\"primary\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n\r\n                <button\r\n                  (click)=\"removeExamQuestion(ques.ExamQuestId)\"\r\n                  mat-mini-fab\r\n                  color=\"warn\"\r\n                >\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-dialog-actions align=\"end\">\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"closeDialog.emit()\"\r\n        class=\"btn btn-warning bg-light-warning\"\r\n      >\r\n        {{ \"General.Close\" | translate }}\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { IReservationVM } from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-details\",\r\n  templateUrl: \"./reservation-details.component.html\",\r\n  styleUrls: [\"./reservation-details.component.scss\"],\r\n})\r\nexport class ReservationDetailsComponent implements OnInit {\r\n  reservation: IReservationVM;\r\n\r\n  constructor(\r\n    private reservationService: ReservationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    const reservationId = data.reservationId;\r\n    this.reservationService\r\n      .ReservationDetails(reservationId)\r\n      .subscribe((res: any) => {\r\n        this.reservation = res;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<h1 mat-dialog-title>{{ \"Reservation.ReservationDetails\" | translate }}</h1>\r\n<div mat-dialog-content>\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-striped m-0\" *ngIf=\"reservation\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ \"labels.Name\" | translate }}</th>\r\n          <th>{{ \"labels.Email\" | translate }}</th>\r\n          <th>{{ \"labels.Religion\" | translate }}</th>\r\n          <th>{{ \"labels.Gender\" | translate }}</th>\r\n          <th>{{ \"labels.EducationType\" | translate }}</th>\r\n          <th>{{ \"Reservation.AreaReservation\" | translate }}</th>\r\n          <th>{{ \"labels.branchName\" | translate }}</th>\r\n          <th>{{ \"labels.Hobbies\" | translate }}</th>\r\n          <th>{{ \"labels.Competitions\" | translate }}</th>\r\n          <th>{{ \"labels.Workshops\" | translate }}</th>\r\n          <th>{{ \"labels.SchoolName\" | translate }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ reservation?.Name }}</td>\r\n\r\n          <td>{{ reservation?.Email }}</td>\r\n\r\n          <td>{{ reservation?.Religion.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.Gender.gender_ar_name }}</td>\r\n\r\n          <td>{{ reservation?.EducationType.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.Area.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.CenterBranch }}</td>\r\n\r\n          <td>{{ reservation?.Hobbies }}</td>\r\n\r\n          <td>{{ reservation?.Competitions }}</td>\r\n\r\n          <td>{{ reservation?.Workshops }}</td>\r\n\r\n          <td>\r\n            {{ reservation?.SchoolName }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-striped m-0\" *ngIf=\"reservation\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ \"labels.GuardianJob\" | translate }}</th>\r\n          <th>{{ \"labels.FatherMobile\" | translate }}</th>\r\n          <th>{{ \"labels.FatherWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.MotherMobile\" | translate }}</th>\r\n          <th>{{ \"labels.MotherWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.StudentNumber\" | translate }}</th>\r\n          <th>{{ \"labels.StudentWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.HomeTelephone\" | translate }}</th>\r\n          <th>{{ \"labels.Address\" | translate }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ reservation?.GuardianJob }}</td>\r\n\r\n          <td>{{ reservation?.FatherMobile }}</td>\r\n\r\n          <td>{{ reservation?.FatherWhatsAppNumber.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.MotherMobile }}</td>\r\n\r\n          <td>{{ reservation?.MotherWhatsAppNumber }}</td>\r\n\r\n          <td>{{ reservation?.StudentNumber }}</td>\r\n\r\n          <td>{{ reservation?.StudentWhatsAppNumber }}</td>\r\n\r\n          <td>{{ reservation?.HomeTelephon }}</td>\r\n\r\n          <td>{{ reservation?.Address }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-button\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"btn btn-danger float-right\"\r\n  >\r\n    Close\r\n  </button>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Areas,\r\n  CenterBranchesVM,\r\n  EducationalDivisionsVM,\r\n  EducationTypesVM,\r\n  GendersVM,\r\n  IFileToUpload,\r\n  IGetReservationEditVM,\r\n  ISubmitReservationEditVM,\r\n  ReligionsVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-edit\",\r\n  templateUrl: \"./reservation-edit.component.html\",\r\n  styleUrls: [\"./reservation-edit.component.scss\"],\r\n})\r\nexport class ReservationEditComponent implements OnInit {\r\n  reservationId: number;\r\n  EduCompId: any;\r\n  functionId: any;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  ProfilePicture_Path: any;\r\n  ProfilePicture: any;\r\n  Religions: ReligionsVM[];\r\n  Genders: GendersVM[];\r\n  EducationalDivisions: EducationalDivisionsVM[];\r\n  EducationTypes: EducationTypesVM[];\r\n  Areas: Areas[];\r\n  CenterBranches: CenterBranchesVM[];\r\n\r\n  constructor(\r\n    private reservationServ: ReservationService,\r\n    private fb: FormBuilder,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private authserv: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.reservationId = Number(params.get(\"reservationId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.getReservationEdit(this.reservationId);\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [this.reservationId, [Validators.required]],\r\n      Id: [\"\", [Validators.required]],\r\n      UserName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Religion: [\"\", [Validators.required]],\r\n      Gender: [\"\", [Validators.required]],\r\n      EducationTypeId: [\"\", [Validators.required]],\r\n      CenterBranchId: [\"\", [Validators.required]],\r\n      SchoolName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      EducationalDivision: [\"\", [Validators.required]],\r\n      GuardianJob: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Area: [\"\", [Validators.required]],\r\n      Address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      StudentNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      StudentWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      FatherMobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      FatherWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      MotherMobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      MotherWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.MobileStartsWith,\r\n        ],\r\n      ],\r\n      HomeTelephone: [\r\n        \"\",\r\n        [Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/)],\r\n      ],\r\n      SentviewId: [\"\", [Validators.required]],\r\n      currentYear: [\"\", [Validators.required]],\r\n      EduCompId: [\"\", [Validators.required]],\r\n      City: [\"\"],\r\n      competitions: [\"\"],\r\n      Hobbies: [\"\"],\r\n      workshops: [\"\"],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.FormCtrls?.EduCompIdCtrl.setValue(e.EduCompId);\r\n    });\r\n  }\r\n\r\n  getReservationEdit(reservationId: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getReservationEdit<IGetReservationEditVM>(reservationId, this.EduCompId)\r\n      .subscribe((res) => {\r\n        // console.log(\"ReservationEditr\", res);\r\n        this.myForm.patchValue(res.Reservation);\r\n        this.Religions = res.Religion;\r\n        this.Genders = res.Gender;\r\n        this.EducationalDivisions = res.EducationalDivision;\r\n        this.EducationTypes = res.EducationTypeId;\r\n        this.Areas = res.Area;\r\n        this.ProfilePicture = res.Reservation?.ProfilePicture_Path;\r\n        this.ProfilePicture_Path = `mozakretyapi${res.Reservation?.ProfilePicture_Path}`;\r\n        this.returnBranchesByEducTypeId(res.Reservation?.EducationTypeId);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SubmitReservation() {\r\n    if (!(this.ProfilePicture || this.ProfilePicture_Path)) {\r\n      this.toaster.warning(\"يجب اختيار صوره شخصية\");\r\n      return;\r\n    }\r\n\r\n    let data: ISubmitReservationEditVM = {\r\n      Reservation: this.myForm.value,\r\n      profilePicture: this.ProfilePicture || this.ProfilePicture_Path,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationServ.SubmitReservationEdit(data).subscribe((res: any) => {\r\n        //  console.log(res);\r\n        if (res.returnValue == 200 && res.returnString == \"Success\") {\r\n          this.toaster.success(\"تم تغير البيانات بنجاح\");\r\n        } else {\r\n          this.toaster.error(res.returnString, res.returnValue);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  returnBranchesByEducTypeId(typeId: any) {\r\n    this.CenterBranches = [];\r\n    this.reservationServ\r\n      .returnBranchesByEducTypeId<CenterBranchesVM[]>(typeId, this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CenterBranches = res;\r\n      });\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.ProfilePicture_Path = fileReder;\r\n        this.ProfilePicture = data;\r\n      };\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"Reservation.ReservationData\" | translate }} -\r\n      {{ FormCtrls.UserName?.value }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"Reservation.ReservationData\" | translate }}\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"UserName\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.UserName.invalid &&\r\n                    (FormCtrls.UserName.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.UserName.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.UserName.errors?.bigZero\">\r\n                    {{ \"labels.MustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Religion\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"Religion\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let Religion of Religions\"\r\n                    [value]=\"Religion.Id\"\r\n                  >\r\n                    {{ Religion.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Religion.invalid &&\r\n                    (FormCtrls.Religion.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Religion.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-2 col-12\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                mat-raised-button\r\n                (click)=\"fileInput.click()\"\r\n              >\r\n                {{ \"labels.ProfilePicture\" | translate }}\r\n              </button>\r\n              <input\r\n                hidden\r\n                (change)=\"onChange($event)\"\r\n                #fileInput\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                id=\"file\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"col-md-2 col-12\">\r\n              <div class=\"media\">\r\n                <img\r\n                  class=\"rounded mr-3\"\r\n                  [src]=\"ProfilePicture_Path\"\r\n                  width=\"70\"\r\n                  height=\"70\"\r\n                  alt=\"avatar\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Gender\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"Gender\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }} </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let Gender of Genders\"\r\n                    [value]=\"Gender.gender_id\"\r\n                  >\r\n                    {{ Gender.gender_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Gender.invalid &&\r\n                    (FormCtrls.Gender.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Gender.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.EducationType\" | translate }}\r\n                </mat-label>\r\n                <mat-select\r\n                  formControlName=\"EducationTypeId\"\r\n                  (selectionChange)=\"\r\n                    returnBranchesByEducTypeId(FormCtrls.EducationTypeId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let EducationType of EducationTypes\"\r\n                    [value]=\"EducationType.Id\"\r\n                  >\r\n                    {{ EducationType.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.EducationTypeId.invalid &&\r\n                    (FormCtrls.EducationTypeId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.EducationTypeId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.CenterBranch\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"CenterBranchId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }} </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let CenterBranche of CenterBranches\"\r\n                    [value]=\"CenterBranche.Id\"\r\n                  >\r\n                    {{ CenterBranche.Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.CenterBranchId.invalid &&\r\n                    (FormCtrls.CenterBranchId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.CenterBranchId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.SchoolName\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"SchoolName\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.SchoolName.invalid &&\r\n                    (FormCtrls.SchoolName.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.SchoolName.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.SchoolName.errors?.whiteSpace\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.EducationalDivision\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"EducationalDivision\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let EducationalDivision of EducationalDivisions\"\r\n                    [value]=\"EducationalDivision.Id\"\r\n                  >\r\n                    {{ EducationalDivision.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.EducationalDivision.invalid &&\r\n                    (FormCtrls.EducationalDivision.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.EducationalDivision.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.GuardianJob\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"GuardianJob\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.GuardianJob.invalid &&\r\n                    (FormCtrls.GuardianJob.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.GuardianJob.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.GuardianJob.errors?.whiteSpace\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.StudentNumber\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"StudentNumber\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.StudentNumber.invalid &&\r\n                    (FormCtrls.StudentNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.StudentNumber.errors?.maxlength ||\r\n                      FormCtrls.StudentNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.StudentWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"StudentWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.StudentWhatsAppNumber.invalid &&\r\n                    (FormCtrls.StudentWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.required\"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.StudentWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.StudentWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.HomeTelephone\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"HomeTelephone\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.HomeTelephone.invalid &&\r\n                    (FormCtrls.HomeTelephone.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.HomeTelephone.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.FatherMobile\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"FatherMobile\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FatherMobile.invalid &&\r\n                    (FormCtrls.FatherMobile.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FatherMobile.errors?.maxlength ||\r\n                      FormCtrls.FatherMobile.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.FatherWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"FatherWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FatherWhatsAppNumber.invalid &&\r\n                    (FormCtrls.FatherWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FatherWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.FatherWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.MotherMobile\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"MotherMobile\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.MotherMobile.invalid &&\r\n                    (FormCtrls.MotherMobile.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.MotherMobile.errors?.maxlength ||\r\n                      FormCtrls.MotherMobile.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.MotherWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"MotherWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.MotherWhatsAppNumber.invalid &&\r\n                    (FormCtrls.MotherWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.MotherWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.MotherWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"Reservation.AreaReservation\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"Area\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let area of Areas\" [value]=\"area.Id\">\r\n                    {{ area.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Area.invalid &&\r\n                    (FormCtrls.Area.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Area.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.Address\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"Address\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Address.invalid &&\r\n                    (FormCtrls.Address.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Address.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.Address.errors?.whiteSpace\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitReservation()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<ngx-spinner></ngx-spinner>\r\n","import { NgxSpinnerModule, NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Status,\r\n  city,\r\n  StudentGroupVM,\r\n  IReservationVM,\r\n  IGetReservationListVM,\r\n  ISearchReservationVM,\r\n  IAreaVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ReservationDetailsComponent } from \"../reservation-details/reservation-details.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-index\",\r\n  templateUrl: \"./reservation-index.component.html\",\r\n  styleUrls: [\"./reservation-index.component.scss\"],\r\n})\r\nexport class ReservationIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  // Branches: CenterBranchesVM[];\r\n  //  Dates: any;\r\n  Status: Status[];\r\n  Cities: city[];\r\n  Areas: IAreaVM[];\r\n  Reservations: IReservationVM[];\r\n  groups: StudentGroupVM[];\r\n  itemsCount: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"accountName\",\r\n    \"code\",\r\n    \"branch\",\r\n    \"mobile\",\r\n    \"status\",\r\n    \"group\",\r\n    \"discount\",\r\n    \"date\",\r\n    \"note\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IReservationVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private reservationService: ReservationService,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.myForm = this.fb.group({\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      branchId: [],\r\n      email: [\"\", Validators.email],\r\n      name: [\"\"],\r\n      mobile: [\"\"],\r\n      code: [\"\"],\r\n      groupId: [\"\"],\r\n      statusId: [\"\"],\r\n      cityId: [\"\"],\r\n      currentYear: [1],\r\n      page: [],\r\n    });\r\n\r\n    //this.returnBranchesByEduCompId();\r\n    this.getGroupsByEduCompId();\r\n    this.returnStatus();\r\n    this.getArea();\r\n    this.getReservationsList(1);\r\n  }\r\n\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchId\");\r\n  }\r\n\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  get currentYearCtrl() {\r\n    return this.myForm.get(\"currentYear\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n      this.branchIdCtrl.setValue(e.branchId);\r\n      this.getReservationsList(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getReservationsList(p) {\r\n    this.page?.setValue(p);\r\n\r\n    // if (!this.branchIdCtrl.value || this.branchIdCtrl.value == \"null\") {\r\n    //   this.toaster.warning(\"You Must Select Branch\");\r\n    //   return;\r\n    // }\r\n\r\n    if (!this.EduCompIdCtrl.value || this.EduCompIdCtrl.value == \"null\") {\r\n      this.toaster.warning(\"You Must Select Center\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationService\r\n        .getReservationsList<ISearchReservationVM, IGetReservationListVM>(\r\n          this.myForm.value\r\n        )\r\n        .subscribe((res: any) => {\r\n          //console.log(\"Reservations\", res);\r\n          this.Reservations = res.list;\r\n          this.dataSource = new MatTableDataSource(res.list);\r\n          this.itemsCount = res.itemsCount;\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getGroupsByEduCompId() {\r\n    this.SubjectMaterialsService.getGroupsByEduCompId<StudentGroupVM[]>(\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.groups = res.lstEduCompGroups;\r\n      }\r\n    });\r\n  }\r\n\r\n  returnStatus() {\r\n    this.reservationService.returnStatus<Status[]>().subscribe((res) => {\r\n      this.Status = res;\r\n    });\r\n  }\r\n\r\n  // returnCities() {\r\n  //   this.reservationService.returnCities<city[]>().subscribe((res) => {\r\n  //     this.Cities = res;\r\n  //   });\r\n  // }\r\n\r\n  getArea() {\r\n    this.reservationService.getArea<IAreaVM[]>().subscribe((res) => {\r\n      this.Areas = res;\r\n    });\r\n  }\r\n\r\n  ReservationDetailsDialog(reservationId: number): void {\r\n    this.dialog\r\n      .open(ReservationDetailsComponent, {\r\n        data: {\r\n          reservationId: reservationId,\r\n        },\r\n        minWidth: \"90vw\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe();\r\n  }\r\n\r\n  Reset() {\r\n    this.myForm.reset();\r\n    this.EduCompIdCtrl.setValue(this.EduCompId);\r\n    this.branchIdCtrl.setValue(this.branchId);\r\n    this.currentYearCtrl.setValue(1);\r\n  }\r\n\r\n  // returnBranchesByEduCompId() {\r\n  //   this.reservationService\r\n  //     .returnBranchesByEduCompId<CenterBranchesVM[]>(this.EduCompId)\r\n  //     .subscribe((res: any) => {\r\n  //       this.Branches = res;\r\n  //     });\r\n  // }\r\n\r\n  // Return Avaliable Dates By BranchId\r\n  // GetAvaliableDatesByBranchId(branchId: any) {\r\n  //   if (branchId) {\r\n  //     this.reservationServ\r\n  //       .GetAvaliableDatesByBranchId(branchId, true, true)\r\n  //       .subscribe((res: any) => {\r\n  //         this.Dates = res;\r\n  //       });\r\n  //   } else {\r\n  //     this.Dates = [];\r\n  //   }\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"name\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.CenterCode\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"code\" formControlName=\"code\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label\r\n                      >{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let branch of Branches\"\r\n                        [value]=\"branch.Id\"\r\n                      >\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{ group.groupName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"statusId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let status of Status\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{ status.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Reservation.AreaReservation\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"cityId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option *ngFor=\"let area of Areas\" [value]=\"area.Id\">\r\n                        {{ area.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group formControlName=\"currentYear\" class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button [value]=\"0\">\r\n                        {{ \"labels.CurrentYear\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button [value]=\"1\"\r\n                        >{{ \"labels.NextYear\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getReservationsList(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n\r\n        <button mat-raised-button class=\"btn btn-warning\" (click)=\"Reset()\">\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ReservationList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- accountName Column -->\r\n            <ng-container matColumnDef=\"accountName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.AccountName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.UserName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CenterCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CenterCode }}</td>\r\n            </ng-container>\r\n\r\n            <!-- branch Column -->\r\n            <ng-container matColumnDef=\"branch\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CenterBranchName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.StudentNumber }}</td>\r\n            </ng-container>\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Status?.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let reservation\">\r\n                <span *ngFor=\"let group of reservation?.Group\">\r\n                  - {{ group.studyingGroup?.groupName }} <br />\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- discount Column -->\r\n            <ng-container matColumnDef=\"discount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.Discount?.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- date Column -->\r\n            <ng-container matColumnDef=\"date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.ReservationDate | NewDate }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Status?.Notes }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let reservation\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    routerLink=\"/dashboard/reservation/edit-reservation/{{\r\n                      reservation?.Id\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/reservation/reservation-status/{{\r\n                      reservation?.Id\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Status'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Change Status\"\r\n                  >\r\n                    <i class=\"ft-settings font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Discount'\"\r\n                    routerLink=\"/dashboard/reservation/student-discount/{{\r\n                      reservation?.Status?.userId\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Change Discount\"\r\n                  >\r\n                    <i class=\"fa fa-money font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                  <a\r\n                    (click)=\"ReservationDetailsDialog(reservation.Id)\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Details'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Details\"\r\n                  >\r\n                    <i class=\"ft-alert-circle font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getReservationsList($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Status,\r\n  StudentStatusListVM,\r\n  StudentGroupVM,\r\n  StatusReasons,\r\n  CenterBranchesVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-status\",\r\n  templateUrl: \"./reservation-status.component.html\",\r\n  styleUrls: [\"./reservation-status.component.scss\"],\r\n})\r\nexport class ReservationStatusComponent implements OnInit {\r\n  reservationId: number;\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: any;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  AcceptReservation: any;\r\n  userName: string = \"\";\r\n  itemsCount: any;\r\n  statuses: Status[];\r\n  studyingGroups: StudentGroupVM[];\r\n  Reasons: StatusReasons[];\r\n  CenterBranches: CenterBranchesVM[];\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get Id() {\r\n    return this.myForm.get(\"EduCompUser_Status.Id\");\r\n  }\r\n\r\n  get statusId() {\r\n    return this.myForm.get(\"EduCompUser_Status.statusId\");\r\n  }\r\n\r\n  get groupId() {\r\n    return this.myForm.get(\"EduCompUser_Status.groupId\");\r\n  }\r\n\r\n  get note() {\r\n    return this.myForm.get(\"EduCompUser_Status.note\");\r\n  }\r\n\r\n  get EduCompUserId() {\r\n    return this.myForm.get(\"EduCompUser_Status.EduCompUserId\");\r\n  }\r\n\r\n  get statusReasonId() {\r\n    return this.myForm.get(\"EduCompUser_Status.statusReasonId\");\r\n  }\r\n\r\n  get CenterBranchId() {\r\n    return this.myForm.get(\"EduCompUser_Status.CenterBranchId\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"code\",\r\n    \"status\",\r\n    \"reason\",\r\n    \"group\",\r\n    \"from\",\r\n    \"to\",\r\n    \"note\",\r\n  ];\r\n  dataSource: MatTableDataSource<StudentStatusListVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private reservationServ: ReservationService,\r\n    private toaster: ToastrService,\r\n    private authservice: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.reservationId = Number(params.get(\"reservationId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authservice.getEduCompId();\r\n    this.branchId = this.authservice.getBranchId();\r\n    this.getStudentStatus(this.reservationId, this.EduCompId);\r\n    this.returnBranchesByEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      EduCompUser_Status: this.fb.group({\r\n        Id: [\"\", Validators.required],\r\n        statusId: [\"\", Validators.required],\r\n        groupId: [\"\"],\r\n        note: [\"\"],\r\n        EduCompUserId: [\"\"],\r\n        statusReasonId: [\"\"],\r\n        CenterBranchId: [\"\"],\r\n      }),\r\n      studentUserId: [\"\", Validators.required],\r\n      Code: [\"\"],\r\n      reserveId: [\"\"],\r\n      EduCompId: [\"\"],\r\n      AcceptReservation: [\"\"],\r\n    });\r\n\r\n    this.FormCtrls.AcceptReservation?.setValue(this.AcceptReservation);\r\n    this.FormCtrls.EduCompId?.setValue(this.EduCompId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authservice.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentStatus(this.reservationId, e.EduCompId);\r\n      this.EduCompUserId.setValue(e.EduCompId);\r\n    });\r\n\r\n    this.authservice.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n      this.CenterBranchId.setValue(e.branchId);\r\n    });\r\n\r\n    this.dataSource.paginator! = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getStudentStatus(reservationId: any, EduCompId: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .GetStudentStatus(reservationId, EduCompId)\r\n      .subscribe((res: any) => {\r\n        // console.log('GetStudentStatus', res);\r\n        this.getReasonsByStatusId(res.EduCompUser_Status.statusId);\r\n\r\n        this.statuses = res.statuses;\r\n        this.studyingGroups = res.studyingGroups;\r\n        this.myForm.patchValue(res);\r\n        this.FormCtrls.studentUserId.setValue(res.studentUserId);\r\n        this.userName = res.userName;\r\n        this.FormCtrls.AcceptReservation?.setValue(this.AcceptReservation);\r\n        this.ReservationStatusPaging(1);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SubmitReservationStatus(event: any) {\r\n    this.CenterBranchId.setValue(this.branchId);\r\n\r\n    if (!this.CenterBranchId?.value) {\r\n      this.toaster.warning(\"يجب اختيار فرع\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      event.target.disabled = true;\r\n      this.spinner.show();\r\n      this.reservationServ\r\n        .SubmitReservationStatus(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          event.target.disabled = false;\r\n          if (res.returnValue == 200 && res.returnString == \"Success\") {\r\n            this.toaster.success(\"تم حفظ التغيرات بنجاح\");\r\n            this.ReservationStatusPaging(1);\r\n            this.getStudentStatus(this.reservationId, this.EduCompId); //retrieving the latest EduCompUserStatus Id\r\n          } else {\r\n            this.toaster.error(res.returnString, res.returnValue);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  ReservationStatusPaging(page: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .ReservationStatusPaging(page, this.EduCompUserId?.value)\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource(res.list);\r\n        this.itemsCount = res.itemsCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getReasonsByStatusId(StatusId: any) {\r\n    this.Reasons = [];\r\n    this.statusReasonId?.setValue(\"\");\r\n    if (StatusId) {\r\n      this.reservationServ\r\n        .getReasonsByStatusId<StatusReasons[]>(StatusId)\r\n        .subscribe((res) => {\r\n          this.Reasons = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  returnBranchesByEduCompId() {\r\n    this.CenterBranches = [];\r\n    this.reservationServ\r\n      .returnBranchesByEduCompId<CenterBranchesVM[]>(this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CenterBranches = res;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"labels.StudentStatusEdit\" | translate }} - {{ userName }}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"labels.StudentStatusEdit\" | translate }}\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" [value]=\"userName\" readonly=\"\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.CenterCode\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"Code\" formControlName=\"Code\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <ng-container formGroupName=\"EduCompUser_Status\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                  <mat-select\r\n                    formControlName=\"statusId\"\r\n                    (selectionChange)=\"getReasonsByStatusId(statusId?.value)\"\r\n                  >\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let status of statuses\"\r\n                      [value]=\"status.Id\"\r\n                    >\r\n                      {{ status.Ar_Name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                  <mat-select formControlName=\"groupId\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let group of studyingGroups\"\r\n                      [value]=\"group.Id\"\r\n                    >\r\n                      {{ group.groupName }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div\r\n                class=\"col-md-4 col-12\"\r\n                *ngIf=\"\r\n                  statusId?.value == 2 ||\r\n                  statusId?.value == 4 ||\r\n                  statusId?.value == 5\r\n                \"\r\n              >\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Reason\" | translate }} </mat-label>\r\n                  <mat-select formControlName=\"statusReasonId\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let reason of Reasons\"\r\n                      [value]=\"reason.Id\"\r\n                    >\r\n                      {{ reason.reasonText }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-8\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                  <textarea matInput type=\"text\" formControlName=\"note\">\r\n                  </textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitReservationStatus($event)\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.StudentStatus\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CenterCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Status?.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- reason Column -->\r\n            <ng-container matColumnDef=\"reason\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Reason\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.reasonText }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.groupName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- from Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let data\">\r\n                {{ data?.FromDate | NewDate }} {{ data?.FromDate | Time }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- to Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let data\">\r\n                {{ data?.ToDate | NewDate }} {{ data?.ToDate | Time }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Note }}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"ReservationStatusPaging($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { ManageViewsService } from \"./../../../services/Admin/manage-views.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  CustomDiscountDropMV,\r\n  IStudentCustomDiscountsMV,\r\n  StudentCustomDiscountsListMV,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-student-discount\",\r\n  templateUrl: \"./student-discount.component.html\",\r\n  styleUrls: [\"./student-discount.component.scss\"],\r\n})\r\nexport class StudentDiscountComponent implements OnInit {\r\n  userId: any;\r\n  functionId: any;\r\n  EduCompId: any;\r\n  myForm!: FormGroup;\r\n  searchForm!: FormGroup;\r\n  userName: string = \" \";\r\n  CustomDiscountList: CustomDiscountDropMV[];\r\n  // StudentCustomDiscountsList: StudentCustomDiscountsListMV[];\r\n\r\n  displayedColumns: string[] = [\"#\", \"name\", \"discount\", \"teacher\", \"note\"];\r\n  dataSource: MatTableDataSource<StudentCustomDiscountsListMV>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private reservationServ: ReservationService,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private authservice: AuthService,\r\n    private ManageViewsService: ManageViewsService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // this.route.paramMap.subscribe((params) => {\r\n    //   this.userId = params.get(\"userId\");\r\n    // });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authservice.getEduCompId();\r\n    // this.getStudentCustomDiscount();\r\n    this.getCustomDiscount();\r\n    //  this.getStudentCustomDiscountsList();\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [this.userId, Validators.required],\r\n      customDiscountId: [\"\", Validators.required],\r\n      note: [\"\"],\r\n    });\r\n  }\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.authservice.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getCustomDiscount();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.userId = res.userId;\r\n        this.getStudentCustomDiscount();\r\n        this.getStudentCustomDiscountsList();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  updateStudentCustomDiscount() {\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationServ\r\n        .updateStudentCustomDiscount(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          this.getStudentCustomDiscountsList();\r\n          this.toaster.success(\"تم التغيير\");\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getStudentCustomDiscount() {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getStudentCustomDiscount<IStudentCustomDiscountsMV>(this.userId)\r\n      .subscribe((res) => {\r\n        console.log(\"getStudentCustomDiscount\", res);\r\n        if (res != null) {\r\n          this.userName = res.User.ar_name;\r\n          this.FormCtrls.userId.setValue(res.User.user_ID);\r\n          this.FormCtrls.customDiscountId.setValue(res.Discount?.Id || \"\");\r\n          this.FormCtrls.note.setValue(res.note);\r\n        } else {\r\n          this.toaster.warning(\"Student not found\");\r\n          this.userName = \"\";\r\n          this.myForm.reset();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getStudentCustomDiscountsList() {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getStudentCustomDiscountsList<StudentCustomDiscountsListMV[]>(\r\n        this.userId\r\n      )\r\n      .subscribe((res) => {\r\n        this.dataSource = new MatTableDataSource(res);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getCustomDiscount() {\r\n    this.reservationServ\r\n      .getCustomDiscount<CustomDiscountDropMV[]>(this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CustomDiscountList = res;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"labels.UpdateDiscount\" | translate }} - {{ userName }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.SearchStudent\" | translate }}\r\n        <!-- <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button> -->\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <!--\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"labels.UpdateDiscount\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" [value]=\"userName\" readonly=\"\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.DiscountType\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"customDiscountId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let CustomDiscount of CustomDiscountList\"\r\n                    [value]=\"CustomDiscount?.Id\"\r\n                  >\r\n                    {{ CustomDiscount.PreviewName }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                <textarea matInput type=\"text\" formControlName=\"note\">\r\n                </textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"updateStudentCustomDiscount()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"this.dataSource?.data?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Discount\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.UserDetails?.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- discount Column -->\r\n            <ng-container matColumnDef=\"discount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.CustomDiscountDetails?.Ar_Name }} -\r\n                {{ ele?.CustomDiscountDetails?.Amount }} %\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- teacher Column -->\r\n            <ng-container matColumnDef=\"teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Teacher }}</td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.note }}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            >>\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { SearchStudentsService } from \"app/admin/services/Admin/searchStudents.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport {\r\n  studyingGroupsDropVM,\r\n  statutsDropVM,\r\n  student,\r\n} from \"app/shared/models/general/general\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { studentVM } from \"app/admin/models/admin/student-group\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\n@Component({\r\n  selector: \"app-students-index\",\r\n  templateUrl: \"./students-index.component.html\",\r\n  styleUrls: [\"./students-index.component.scss\"],\r\n})\r\nexport class StudentsIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  functionId: number;\r\n  groups: studyingGroupsDropVM[] = [];\r\n  Statuts: statutsDropVM[] = [];\r\n\r\n  students: student[] = [];\r\n  myForm!: FormGroup;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"name\",\r\n    \"code\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<studentVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  userId: any = null;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private SearchStudentsService: SearchStudentsService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private authserv: AuthService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // route.queryParamMap.subscribe((params) => {\r\n    //   this.functionId = Number(params.get(\"functionId\"));\r\n    //   if (this.functionId) {\r\n    //     this.authserv\r\n    //       .getUserRowFunctions(this.functionId)\r\n    //       .subscribe((res: any) => {\r\n    //         if (res) {\r\n    //           this.rowFunctions = res;\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      queryStringEm: [\"\", Validators.email],\r\n      queryStringCo: [\"\"],\r\n      queryStringPhoneNumber: [\"\"],\r\n      queryStringMozakretyCode: [\"\"],\r\n      statusId: [\"\"],\r\n      studyingGroup: [\"\"],\r\n      page: [\"\"],\r\n    });\r\n    //this.getGroupsByEduCompId();\r\n    this.getStudentsByEduCompId(1);\r\n    this.getStudentGroupsAndStatuts();\r\n  }\r\n\r\n  //Get Students ByEduCompId\r\n  getStudentsByEduCompId(p: number) {\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    this.p = p;\r\n    this.spinner.show();\r\n    this.SearchStudentsService.getStudentsByEduCompId(\r\n      this.EduCompId,\r\n      this.myForm.value\r\n    ).subscribe((res: any) => {\r\n      console.log(\"getStudents\", res);\r\n      this.students = res.lists;\r\n      console.log(\"hello\", res.lists);\r\n      this.dataSource = new MatTableDataSource(res.lists);\r\n      this.itemsCount = res.totalCount;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //Get Students ByEduCompId\r\n  getStudentGroupsAndStatuts() {\r\n    this.spinner.show();\r\n    this.SearchStudentsService.getStudentGroupsAndStatuts(\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      this.groups = res.studyingGroups;\r\n      this.Statuts = res.status;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentGroupsAndStatuts();\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.getStudentsByEduCompId(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  deleteStudent(user_ID: number) {\r\n    let confirmed = confirm(\"Are you sure?\");\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.SearchStudentsService.deleteStudent(\r\n        this.EduCompId,\r\n        user_ID\r\n      ).subscribe((res: any) => {\r\n        console.log(\"deleteStudent\", res);\r\n        if (res.returnValue == 1) {\r\n          let i = this.students.findIndex((e) => e.user_ID == user_ID);\r\n          console.log(i);\r\n          this.students.splice(i, 1);\r\n          this.toastr.success(\"تم الحذف\");\r\n        } else console.log(\"Error:\", res);\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getUserId(userId: any) {\r\n    this.userId = userId;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"queryStringEm\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"queryStringPhoneNumber\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.MozakrtyCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"code\"\r\n                      formControlName=\"queryStringMozakretyCode\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.CenterCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"code\"\r\n                      formControlName=\"queryStringCo\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{ group.groupName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"statusId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let status of Statuts\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{ status.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getStudentsByEduCompId(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Students\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                <a\r\n                  routerLink=\"/dashboard/reservation/balance-details/{{\r\n                    student?.user_ID\r\n                  }}\"\r\n                  [queryParams]=\"{ functionId: functionId }\"\r\n                  class=\"success p-0\"\r\n                  matTooltip=\"رصيد الطالب \"\r\n                >\r\n                  <i class=\"fa fa-money font-medium-3 mr-2\"></i>\r\n                </a>\r\n                <ng-container *ngFor=\"let fun of rowFunctions\"> </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getStudentsByEduCompId($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { LanguageService } from \"app/shared/services/language.service\";\r\nimport {\r\n  IDepartmentModel,\r\n  IDepartmentViewModel,\r\n} from \"app/admin/models/setup/department\";\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from \"@angular/core\";\r\nimport { DepartmentService } from \"app/admin/services/setup/department.service\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-department\",\r\n  templateUrl: \"./department.component.html\",\r\n  styleUrls: [\"./department.component.scss\"],\r\n})\r\nexport class DepartmentComponent implements OnInit {\r\n  @Input() showAddOnly: boolean = false;\r\n  departments: IDepartmentModel[];\r\n  myForm: FormGroup;\r\n  displayedColumns: string[] = [\"#\", \"en_name\", \"ar_name\", \"action\"];\r\n  dataSource: MatTableDataSource<IDepartmentModel>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  submitted: boolean = false;\r\n  // @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  constructor(\r\n    private departmentService: DepartmentService,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllDepartments(this.curPage);\r\n\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllDepartments(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllDepartments(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.departmentService\r\n      .getAllDepartments<IDepartmentViewModel>(page, this.EduCompId)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.depratmentsList);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let data = {} as IDepartmentModel;\r\n      data.id = this.FormCtrls.id.value;\r\n      data.ar_name = this.FormCtrls.ar_name.value;\r\n      data.en_name = this.FormCtrls.en_name.value;\r\n      data.EduCompId = this.EduCompId;\r\n\r\n      this.spinner.show();\r\n      if (data.id == 0) this.addDepartment(data);\r\n      else this.updateDepartment(data, data.id);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  addDepartment(data: IDepartmentModel) {\r\n    this.departmentService.addDepartment(data).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.getAllDepartments(1); // first page after add\r\n        this.dataSource.paginator = this.paginator;\r\n        this.toastr.success(\"General.AddSuccessfully\");\r\n        this.clearForm();\r\n      } else this.toastr.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  updateDepartment(data: IDepartmentModel, id: number) {\r\n    this.departmentService.editDepartment(data, id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.getAllDepartments(this.curPage); // current page after update\r\n        this.toastr.success(\"General.UpdateSuccessfully\");\r\n        this.clearForm();\r\n      } else this.toastr.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //start edit\r\n  getDepartmentById(department: IDepartmentModel) {\r\n    this.myForm.patchValue(department);\r\n  }\r\n\r\n  // start delete\r\n  deleteDepartment(department: IDepartmentModel) {\r\n    this.spinner.show();\r\n    this.departmentService\r\n      .deleteDepartment(department.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getAllDepartments(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getAllDepartments(this.curPage);\r\n          }\r\n          if (department.id == this.FormCtrls.id.value) this.clearForm();\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(department: IDepartmentModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? department.ar_name ?? department.en_name\r\n            : department.en_name ?? department.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteDepartment(department);\r\n      });\r\n  }\r\n  // end delete\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title *ngIf=\"FormCtrls.id.value == 0\">\r\n        {{ \"Departments.addDepartment\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"FormCtrls.id.value > 0\">\r\n        {{ \"Departments.updateDepartment\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.enName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.arName\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          type=\"submit\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <span *ngIf=\"FormCtrls.id.value == 0\">\r\n            <i class=\"fa fa-plus mr-1\"></i>\r\n            {{ \"General.Add\" | translate }}\r\n          </span>\r\n          <span *ngIf=\"FormCtrls.id.value > 0\">\r\n            {{ \"General.Update\" | translate }}\r\n          </span>\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"!showAddOnly\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Departments.allDept\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let dept\">{{ dept.en_name }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let dept\">{{ dept.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let dept\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"getDepartmentById(dept)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(dept)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllDepartments($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of departments\"\r\n            nex\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AnnouncementVM } from \"app/admin/models/admin/AnnouncementVM\";\r\nimport { AnnouncementService } from \"app/admin/services/Admin/announcement.service\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\n@Component({\r\n  selector: \"app-announcement-index\",\r\n  templateUrl: \"./announcement-index.component.html\",\r\n  styleUrls: [\"./announcement-index.component.css\"],\r\n})\r\nexport class AnnouncementIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  EduCompId: any;\r\n  Teachers: teacherByEduCompId[] = [];\r\n  displayedColumns: string[] = [\r\n    \"announcementText\",\r\n    \"fromDate\",\r\n    \"toDate\",\r\n    \"img\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<AnnouncementVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authserv: AuthService,\r\n    private dialog: MatDialog,\r\n    private GeneralService: GeneralService,\r\n    private announcementService: AnnouncementService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngOnInit() {\r\n    console.log(\"helo\");\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      teacherUserId: [\"\"],\r\n      EduCompId: [this.EduCompId],\r\n      page: [\"\"],\r\n    });\r\n    this.getTeachersByEducompId();\r\n    // this.getTeacherAnnouncement(1);\r\n  }\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.getTeacherAnnouncement(1);\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getTeacherAnnouncement(p: number) {\r\n    console.log(this.myForm.controls[\"teacherUserId\"].value);\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    this.p = p;\r\n    this.spinner.show();\r\n    //console.log(\"form value\",this.myForm.value);\r\n    if (this.myForm.controls[\"teacherUserId\"].value != \"\") {\r\n      this.announcementService\r\n        .getAllAnnouncements(this.myForm.controls[\"teacherUserId\"].value)\r\n        .subscribe((res: any) => {\r\n          // console.log(\"groups\", res);\r\n          this.dataSource = new MatTableDataSource(res);\r\n          this.itemsCount = res.length;\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n  getTeachersByEducompId() {\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n      }\r\n    );\r\n  }\r\n  openDeleateDialog(group: AnnouncementVM): void {\r\n    // this.dialog\r\n    //   .open(DeleteDialogComponent, {\r\n    //     data: {\r\n    //       msg: group.Name,\r\n    //     },\r\n    //   })\r\n    //   .afterClosed()\r\n    //   .subscribe((confirm) => {\r\n    //     if (confirm) this.removeGroup(group);\r\n    //   });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <mat-card>\r\n            <mat-card-title>\r\n                {{ \"General.Search\" | translate }}\r\n                <a mat-raised-button routerLink=\"../announcement-setup\" [queryParams]=\"{\r\n          functionId: functionId\r\n        }\" class=\"btn btn-info bg-light-info float-right\">\r\n                    <i class=\"fa fa-plus\"></i> {{ \"labels.AddAnnounce\" | translate }}\r\n                </a>\r\n                <a mat-raised-button (click)=\"getTeacherAnnouncement(1)\" class=\"btn btn-info float-right\">\r\n                    <i class=\"fa fa-search mr-1\"></i> {{ \"General.Search\" | translate }}\r\n                </a>\r\n            </mat-card-title>\r\n            <mat-card-content class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <form [formGroup]=\"myForm\" >\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 col-12\">\r\n                                    <mat-form-field appearance=\"legacy\">\r\n                                        <mat-label>\r\n                                            {{ \"Material.Teacher\" | translate }}\r\n                                        </mat-label>\r\n                                        <mat-select formControlName=\"teacherUserId\">\r\n                                            <mat-option value=\"\">\r\n                                                {{ \"Material.Teacher\" | translate }}</mat-option>\r\n                                            <mat-option *ngFor=\"let teach of Teachers\" [value]=\"teach.teacherUserId\">\r\n                                                {{ teach.teacher_ar_name }}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <mat-card>\r\n            <mat-card-title>\r\n                {{ \"labels.Announcement\" | translate }}\r\n            </mat-card-title>\r\n\r\n            <mat-card-content>\r\n                <mat-form-field appearance=\"standard\">\r\n                    <mat-label>Filter</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input />\r\n                </mat-form-field>\r\n                <div class=\"mat-elevation-z8 f-w\">\r\n                    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                        <ng-container matColumnDef=\"fromDate\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                {{ \"labels.FromDate\"| translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">{{ ele.From_Date }}</td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"toDate\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                {{ \"labels.ToDate\"| translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">{{ ele.To_Date }}</td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"announcementText\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                {{ \"labels.Announcement\"| translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">{{ ele.Announcement_Text }}</td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"img\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                {{ \"labels.AnnouncePicture\" | translate }}\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let ele\">\r\n                                <a href=\"mozakretyapi/{{ ele.attach_path }}\" target=\"_blank\">\r\n                                    <img class=\"card-img-top  img-fluid imgtablesize\" src=\"mozakretyapi/{{ ele.attach_path }}\" [alt]=\"\" />\r\n                                </a>\r\n\r\n                            </td>\r\n\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"actions\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n                            <td mat-cell *matCellDef=\"let announce\">\r\n                                    <button\r\n                  mat-mini-fab\r\n\r\n                   matTooltip=\"Edit\"\r\n                  routerLink=\"../announcement-setup\"\r\n                  [queryParams]=\"{\r\n                    announceId: announce.Id,\r\n                    functionId: functionId\r\n                  }\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n                            </td>\r\n                        </ng-container>\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n                        <tr class=\"mat-row\" *matNoDataRow>\r\n                            <td class=\"mat-cell\" colspan=\"4\">\r\n                                No data matching the filter \"{{ input.value }}\"\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <mat-paginator\r\n                    [pageSizeOptions]=\"[10]\"\r\n                    (page)=\"getTeacherAnnouncement($event.pageIndex + 1)\"\r\n                    [length]=\"itemsCount\"\r\n                     [pageSize]=\"10\"\r\n                     showFirstLastButtons\r\n                     aria-label=\"Select page of users\">\r\n                    </mat-paginator>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { teacherBySubEduComp } from \"app/admin/models/admin/educations\";\r\nimport { AnnouncementService } from \"app/admin/services/Admin/announcement.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: 'app-announcement-setup',\r\n  templateUrl: './announcement-setup.component.html',\r\n  styleUrls: ['./announcement-setup.component.css']\r\n})\r\nexport class AnnouncementSetupComponent implements OnInit {\r\n  announceId:number=0;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  myForm!: FormGroup;\r\n  picturePath?: any;\r\n  Teachers: teacherBySubEduComp[];\r\n  submitted = false;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private announcementService:AnnouncementService\r\n  ) { \r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.announceId = Number(params.get(\"announceId\"));\r\n      if (this.announceId > 0) {\r\n        this.getAnnounceById(this.announceId);\r\n      }\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  EduCompId:any;\r\n\r\n  getAnnounceById(announceId: number) {\r\n    this.announcementService.getAnnounceById(announceId).subscribe((res: any) => {\r\n       console.log(\"getGroupById\", res);\r\n       this.announceId = res.Id;\r\n       this.FormCtrls.Id.setValue(res.Id);\r\n      this.FormCtrls.fromDate.setValue(res.From_Date);\r\n      this.FormCtrls.toDate.setValue(res.To_Date);\r\n      this.FormCtrls.teacherUserId.setValue(res.teacherUserId);\r\n      this.FormCtrls.announcementText.setValue(res.announcement_text);\r\n      this.FormCtrls.announcementPicture.setValue(res.attach_path);\r\n      this.picturePath = `mozakretyapi${res.attach_path}`;\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      Id: \"\",\r\n      announcementText:[],\r\n      announcementPicture:[\"\"],\r\n      fromDate:[,Validators.required],\r\n      toDate:[,Validators.required],\r\n      teacherUserId:[],\r\n      eduCompId:[this.EduCompId]\r\n    });\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n  }\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    \r\n    if (EduCompId) {\r\n      this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n        (res: any) => {\r\n          console.log(\"teachers\",res.lstTeachers);\r\n          this.Teachers = res.lstTeachers;\r\n        }\r\n      );\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n  onSubmit()\r\n  {\r\n    this.submitted = true;\r\n    if(this.FormCtrls.fromDate.value>this.FormCtrls.toDate.value)\r\n    {\r\n      this.msg.error(\"تاريخ بداية الفترة أكبر من تاريخ نهاية الفترة\");\r\n      return;\r\n    }\r\n    if(!this.FormCtrls.announcementText.value && !this.FormCtrls.announcementPicture.value)\r\n    {\r\n      this.msg.error(\"يجب ادخال صيغة الاعلان أو صورة الاعلان أو كلاهما\");\r\n      return;\r\n    }\r\n    if(this.announceId==0)\r\n    {\r\n    if (this.myForm.valid) {\r\n      \r\n      this.FormCtrls.fromDate.setValue(this.datePipe.transform(this.FormCtrls.fromDate.value));\r\n      this.FormCtrls.toDate.setValue(this.datePipe.transform(this.FormCtrls.toDate.value));\r\n      this.announcementService.addAnnouncement(this.myForm.value).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.msg.success(\"تم اضافة الاعلان بنجاح\");\r\n         // this.returnProfile();\r\n        } else if (res.returnValue == 2) {\r\n          this.msg.error(\"خطأ أثناء اضافة الاعلان\");\r\n        }\r\n        this.submitted = false;\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n  else\r\n  {\r\n    if (this.myForm.valid) {\r\n      this.FormCtrls.Id.setValue(this.announceId);\r\n      this.FormCtrls.fromDate.setValue(this.datePipe.transform(this.FormCtrls.fromDate.value));\r\n      this.FormCtrls.toDate.setValue(this.datePipe.transform(this.FormCtrls.toDate.value));\r\n      this.announcementService.addAnnouncement(this.myForm.value).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.msg.success(\"تم تعديل الاعلان بنجاح\");\r\n         // this.returnProfile();\r\n        } else if (res.returnValue == 2) {\r\n          this.msg.error(\"خطأ أثناء تعديل الاعلان\");\r\n        }\r\n        this.submitted = false;\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n  }\r\n\r\n  onChange(event: any)\r\n  {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.FormCtrls.announcementPicture.setValue(data);\r\n        this.picturePath = fileReder;\r\n      };\r\n    }\r\n\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"announceId == 0\">\r\n          {{ \"labels.AddAnnounce\" | translate }}\r\n        </span>\r\n        <span *ngIf=\"announceId > 0\">\r\n          {{ \"labels.EditAnnounce\" | translate }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../announcement-index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"media\">\r\n          <img\r\n            src=\"{{ picturePath }}\"\r\n            alt=\"No Image\"\r\n            class=\"users-avatar-shadow avatar mr-3 rounded-circle\"\r\n            height=\"64\"\r\n            width=\"64\"\r\n          />\r\n          <div class=\"media-body\">\r\n            <div\r\n              class=\"d-flex flex-sm-row flex-column justify-content-start px-0 mb-sm-2\"\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-sm bg-light-primary mb-1 mb-sm-0\"\r\n                mat-raised-button\r\n                (click)=\"fileInput.click()\"\r\n              >\r\n                {{ \"labels.AnnouncePicture\" | translate }}\r\n              </button>\r\n              <input\r\n                hidden\r\n                (change)=\"onChange($event)\"\r\n                #fileInput\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                id=\"file\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"teacherUserId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of Teachers\"\r\n                        [value]=\"teacher.teacherUserId\"\r\n                      >\r\n                        {{ teacher.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.teacherUserId.invalid &&\r\n                        (FormCtrls.teacherUserId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.teacherId.errors?.required\">\r\n                        Must Choose a value\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\"></div>\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.fromDate.invalid &&\r\n                        (FormCtrls.fromDate.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.fromDate.errors?.required\">\r\n                        You must choose a value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.toDate.invalid &&\r\n                        (FormCtrls.toDate.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.toDate.errors?.required\">\r\n                        You must choose a value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Announcement\" | translate }}\r\n                    </mat-label>\r\n                    <textarea\r\n                      matInput\r\n                      cols=\"20\"\r\n                      formControlName=\"announcementText\"\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" *ngIf=\"announceId > 0\">\r\n        <button\r\n          *ngIf=\"announceId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"OnSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"announceId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { ArticlesService } from \"app/admin/services/Admin/setup/articles.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { EditJobTitleDatesComponent } from \"app/shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component\";\r\nimport {\r\n  IAddEditArticleModel,\r\n  IArticleJobTitleGetVM,\r\n  IArticleModel,\r\n  IArticleViewModel,\r\n} from \"app/admin/models/admin/setup/articles\";\r\nimport { IJobTitleDatesEditVM } from \"app/admin/models/setup/job-title\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-articles\",\r\n  templateUrl: \"./articles.component.html\",\r\n  styleUrls: [\"./articles.component.scss\"],\r\n})\r\nexport class ArticlesSetupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  currentDate = new Date();\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"title\",\r\n    \"department\",\r\n    \"jobTitle\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IArticleModel>;\r\n  initTable: boolean = true;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private articleService: ArticlesService,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public languageService: LanguageService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    //use after auth for function id and row functions\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(\"rowFunctions\", res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        id: [0],\r\n        title: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        ArticleContent: [\"\", [Validators.required]],\r\n        depJobIds: [{ value: \"\", disabled: true }, [Validators.required]],\r\n        departmentId: [\"\", [Validators.required]],\r\n        from_date: [null],\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n\r\n    this.getAllArticles(this.curPage);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllArticles(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"department\":\r\n          return this.languageService.isArabic\r\n            ? item.department.ar_name ?? item.department?.en_name\r\n            : item.department?.en_name ?? item.department?.ar_name;\r\n        case \"jobTitle\":\r\n          return this.languageService.isArabic\r\n            ? item.jobTitle[0]?.ar_name ?? item.jobTitle[0]?.en_name\r\n            : item.jobTitle[0]?.en_name ?? item.jobTitle[0]?.ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAllArticles(curPageber: number) {\r\n    this.curPage = curPageber;\r\n    this.spinner.show();\r\n    this.articleService\r\n      .getAllArticles<IArticleViewModel>(curPageber, this.EduCompId)\r\n      // .getAllArticles<IArticleViewModel>(this.EduCompId, curPageber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.dataSource = new MatTableDataSource(response.ArticleList);\r\n          this.itemsCounts = response.countItems;\r\n          // console.log(\"articles: >> \", response);\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let article = {} as IAddEditArticleModel;\r\n      article.EduCompId = this.EduCompId;\r\n      article.title = this.FormCtrls.title?.value;\r\n      article.ArticleContent = this.FormCtrls.ArticleContent?.value;\r\n      article.depJobIds = this.FormCtrls.depJobIds?.value;\r\n      article.from_date = this.datePipe.transform(\r\n        this.FormCtrls.from_date?.value ?? this.currentDate\r\n      );\r\n      article.to_date = this.datePipe.transform(this.FormCtrls.to_date?.value);\r\n      // console.log(\"edit or add => \", article);\r\n\r\n      this.spinner.show();\r\n      ////////////////// add & edit article\r\n      this.FormCtrls.id?.value == 0\r\n        ? this.addArticle(article)\r\n        : this.updateArticle(article);\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  addArticle(article: IAddEditArticleModel) {\r\n    this.articleService\r\n      .addArticle<IAddEditArticleModel, any>(article)\r\n      .subscribe((response) => {\r\n        if (response && response !== null) {\r\n          if (response.returnValue == 0) {\r\n            this.toastr.error(response.returnString);\r\n          } else {\r\n            this.getAllArticles(1);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n            this.clearForm();\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateArticle(article: IAddEditArticleModel) {\r\n    this.articleService\r\n      .editArticle<IAddEditArticleModel, any>(article, this.FormCtrls.id?.value)\r\n      .subscribe((response) => {\r\n        if (response && response !== null) {\r\n          if (response.returnValue == 0) {\r\n            this.toastr.error(response.returnString);\r\n          } else {\r\n            this.getAllArticles(this.curPage);\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.clearForm();\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editArticle(article: IArticleModel) {\r\n    // console.log(article);\r\n    this.myForm.patchValue(article);\r\n    this.FormCtrls.departmentId?.setValue(article.department.id);\r\n    this.FormCtrls.depJobIds?.setValue(article.jobTitle.map((j) => j.depJobId));\r\n  }\r\n\r\n  openDeleateDialog(article: IArticleModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: article.title,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeArticle(article);\r\n      });\r\n  }\r\n\r\n  removeArticle(article: IArticleModel) {\r\n    this.articleService.deleteArticle(article.id).subscribe((response: any) => {\r\n      if (response.returnValue == 1) {\r\n        // console.log(\"articlr to delete\", response);\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllArticles(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllArticles(this.curPage);\r\n        }\r\n        if (article.id == this.FormCtrls.id.value) this.clearForm();\r\n      } else this.toastr.error(response.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  editJobTitleDates(\r\n    jobTitle_articleId: number,\r\n    jobtitle: IJobTitleDatesEditVM\r\n  ) {\r\n    this.articleService\r\n      .editJobTitleArticle<IJobTitleDatesEditVM, any>(\r\n        jobTitle_articleId,\r\n        jobtitle\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.returnValue == 1) {\r\n          this.getAllArticles(this.curPage);\r\n          this.toastr.success(\"General.UpdateSuccessfully\");\r\n        } else this.toastr.error(response.returnString);\r\n      });\r\n  }\r\n\r\n  openUpdateJobTitleDialog(jobTitle: IArticleJobTitleGetVM) {\r\n    // console.log(jobTitle);\r\n    this.dialog\r\n      .open(EditJobTitleDatesComponent, {\r\n        data: {\r\n          jobTitle: jobTitle,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(response.jobTitle);\r\n          this.editJobTitleDates(jobTitle.jobTitle_article, response.jobTitle);\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleteJobtitleDialog(jobTitle: IArticleJobTitleGetVM) {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? jobTitle.ar_name ?? jobTitle.en_name\r\n            : jobTitle.en_name ?? jobTitle.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeJobtitleArticle(jobTitle.jobTitle_article);\r\n      });\r\n  }\r\n\r\n  removeJobtitleArticle(jobTitle_article: number) {\r\n    this.articleService\r\n      .deleteJobTitleArticle(jobTitle_article)\r\n      .subscribe((response: any) => {\r\n        if (response.returnValue == 1) {\r\n          this.getAllArticles(this.curPage);\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else this.toastr.error(response.returnString);\r\n      });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- add Article -->\r\n      <mat-card-title *ngIf=\"FormCtrls.id.value == 0\">\r\n        {{ \"articles.addArticle\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-title *ngIf=\"FormCtrls.id.value > 0\">\r\n        {{ \"articles.updateArticle\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- title -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.title\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"articles.title\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- depertment -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <department-dropdown\r\n                    [control]=\"FormCtrls.departmentId\"\r\n                    [submitted]=\"submitted\"\r\n                  ></department-dropdown>\r\n                </div>\r\n\r\n                <!-- job title -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <job-title-by-department-dropdown\r\n                    [control]=\"FormCtrls.depJobIds\"\r\n                    [departmentControl]=\"FormCtrls.departmentId\"\r\n                    [submitted]=\"submitted\"\r\n                    [multiple]=\"true\"\r\n                  ></job-title-by-department-dropdown>\r\n                </div>\r\n\r\n                <!-- From date  -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"FormCtrls.from_date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.FromDate\"\r\n                  ></app-datepicker>\r\n                </div>\r\n\r\n                <!-- To date  -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"FormCtrls.to_date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.ToDate\"\r\n                  ></app-datepicker>\r\n                </div>\r\n\r\n                <!-- content -->\r\n                <div class=\"col-12\">\r\n                  <app-textarea\r\n                    [control]=\"FormCtrls.ArticleContent\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"articles.content\"\r\n                    rows=\"2\"\r\n                  ></app-textarea>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"FormCtrls.id.value == 0\"></i>\r\n          {{\r\n            (FormCtrls.id.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"articles.articles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- title Column -->\r\n            <ng-container matColumnDef=\"title\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"articles.title\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.title }}</td>\r\n            </ng-container>\r\n\r\n            <!-- department Column -->\r\n            <ng-container matColumnDef=\"department\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"articles.department\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  languageService.isArabic\r\n                    ? ele.department?.ar_name ?? ele.department?.en_name\r\n                    : ele.department?.en_name ?? ele.department?.ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- job title Column -->\r\n            <ng-container matColumnDef=\"jobTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"articles.jobtitle\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <table\r\n                  class=\"table table-sm mb-1\"\r\n                  *ngIf=\"ele.jobTitle?.length > 0\"\r\n                >\r\n                  <thead class=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.Name\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.FromDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.ToDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let jobTitle of ele.jobTitle; index as i\">\r\n                      <td>\r\n                        {{\r\n                          languageService.isArabic\r\n                            ? jobTitle.ar_name ?? jobTitle.en_name\r\n                            : jobTitle.en_name ?? jobTitle.ar_name\r\n                        }}\r\n                      </td>\r\n                      <td>{{ jobTitle.from_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>{{ jobTitle.to_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>\r\n                        <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                          <a\r\n                            *ngIf=\"fun.functionName === 'UpdateArticalJob'\"\r\n                            (click)=\"openUpdateJobTitleDialog(jobTitle)\"\r\n                            class=\"success p-0\"\r\n                          >\r\n                            <i class=\"ft-edit-2 mr-2\"></i>\r\n                          </a>\r\n\r\n                          <a\r\n                            *ngIf=\"fun.functionName === 'DeleteArticalJob'\"\r\n                            (click)=\"openDeleteJobtitleDialog(jobTitle)\"\r\n                            class=\"danger p-0\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-times fa fa-white\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </a>\r\n                        </ng-container>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let article\" class=\"text-center\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editArticle(article)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(article)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllArticles($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of articles\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef,\r\n} from \"@angular/material/dialog\";\r\nimport {\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  Category,\r\n  CategoriesViewModel,\r\n  IAddCategoryVM,\r\n} from \"app/admin/models/setup/categories\";\r\nimport { CategoriesService } from \"app/admin/services/setup/categories.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-categorie\",\r\n  templateUrl: \"./categorie.component.html\",\r\n  styleUrls: [\"./categorie.component.scss\"],\r\n})\r\nexport class CategorieComponent implements OnInit {\r\n  inputForm!: FormGroup;\r\n  submitted: boolean = false;\r\n  displayedColumns: string[] = [\"id\", \"en_name\", \"ar_name\", \"options\"];\r\n  dataSource: MatTableDataSource<Category>;\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  categories: Category[] = [];\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  @Input() showAddOnly: boolean = false;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _serviceCategories: CategoriesService,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public languageService: LanguageService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n    @Optional() public dialogRef: MatDialogRef<CategorieComponent>\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n    this.showAddOnly = data?.showAddOnly ?? false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategories(this.curPage);\r\n\r\n    this.inputForm = this.fb.group({\r\n      id: [0],\r\n      ar_name: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n      en_name: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.inputForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getCategories(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getCategories(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this._serviceCategories\r\n      .getCategories<CategoriesViewModel>(page, this.EduCompId)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.dataSource = new MatTableDataSource(data.courseCategoryList);\r\n          this.itemsCounts = data.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  addCategories() {\r\n    this.submitted = true;\r\n    if (this.inputForm.valid) {\r\n      const model: IAddCategoryVM = {\r\n        id: this.inputForm.value.id,\r\n        EduCompId: this.EduCompId,\r\n        ar_name: this.inputForm.value.ar_name,\r\n        en_name: this.inputForm.value.en_name,\r\n      };\r\n\r\n      this.spinner.show();\r\n      this._serviceCategories.addCategories(model).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.clearForm();\r\n          this.getCategories(1); // first page after add\r\n          this.dataSource.paginator = this.paginator;\r\n          if (this.showAddOnly == true) this.dialogRef.close(model);\r\n\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  updateCategories() {\r\n    this.submitted = true;\r\n    if (this.inputForm.valid) {\r\n      const model: IAddCategoryVM = {\r\n        id: this.inputForm.value.id,\r\n        EduCompId: this.EduCompId,\r\n        ar_name: this.inputForm.value.ar_name,\r\n        en_name: this.inputForm.value.en_name,\r\n      };\r\n      this.spinner.show();\r\n      this._serviceCategories\r\n        .editCategories(model, model.id)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.clearForm();\r\n            this.getCategories(this.curPage); // current page after update\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  edit(category: Category) {\r\n    this.inputForm.patchValue(category);\r\n  }\r\n\r\n  deleteCategories(category: Category) {\r\n    this.spinner.show();\r\n    this._serviceCategories\r\n      .deleteCategories(category.id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getCategories(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getCategories(this.curPage);\r\n          }\r\n          if (category.id == this.FormCtrls.id.value) this.clearForm();\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(category: Category): void {\r\n    // console.log(category);\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? category.ar_name ?? category.en_name\r\n            : category.en_name ?? category.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteCategories(category);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.inputForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<!-- input -->\r\n<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"FormCtrls.id.value == 0\">\r\n          {{ \"categories.add category\" | translate | titlecase }}\r\n        </span>\r\n        <span *ngIf=\"FormCtrls.id.value > 0\">\r\n          {{ \"categories.update category\" | translate | titlecase }}\r\n        </span>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"inputForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.enName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.arName\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"showAddOnly\"\r\n          mat-raised-button\r\n          (click)=\"dialogRef.close()\"\r\n          class=\"btn btn-warning bg-light-warning\"\r\n        >\r\n          {{ \"General.Close\" | translate }}\r\n        </button>\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"addCategories()\"\r\n          *ngIf=\"FormCtrls.id.value == 0\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          <span>{{ \"General.Add\" | translate | titlecase }}</span>\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"updateCategories()\"\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n        >\r\n          <span>{{ \"General.Update\" | translate | titlecase }}</span>\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- //table -->\r\n<mat-card *ngIf=\"!showAddOnly\">\r\n  <mat-card-title>\r\n    {{ \"categories.categories\" | translate }}\r\n  </mat-card-title>\r\n\r\n  <mat-card-content>\r\n    <mat-form-field appearance=\"standard\">\r\n      <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n      <input\r\n        matInput\r\n        (keyup)=\"applyFilter($event.target.value)\"\r\n        placeholder=\"Ex.ium\"\r\n        #input\r\n      />\r\n    </mat-form-field>\r\n\r\n    <div class=\"mat-elevation-z8 f-w\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <ng-container matColumnDef=\"id\">\r\n          <th mat-header-cell *matHeaderCellDef>#</th>\r\n          <td mat-cell *matCellDef=\"let element; index as i\">\r\n            {{ i + 1 }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"ar_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.arName\" | translate }}\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.ar_name }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"en_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            {{ \"labels.enName\" | translate }}\r\n          </th>\r\n\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.en_name }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"options\">\r\n          <th mat-header-cell *matHeaderCellDef></th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <ng-container *ngFor=\"let fun of rowFunctions\">\r\n              <a\r\n                *ngIf=\"fun.functionName === 'Edit'\"\r\n                (click)=\"edit(element)\"\r\n                class=\"success p-0\"\r\n                matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n              >\r\n                <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n              </a>\r\n\r\n              <a\r\n                *ngIf=\"fun.functionName === 'Delete'\"\r\n                (click)=\"openDeleateDialog(element)\"\r\n                class=\"danger p-0\"\r\n                matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n              >\r\n                <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n              </a>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">\r\n            No data matching the filter \"{{ input.value }}\"\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </mat-card-content>\r\n  <!-- //paginator -->\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[10]\"\r\n    (page)=\"getCategories($event.pageIndex + 1)\"\r\n    [length]=\"itemsCounts\"\r\n    [pageSize]=\"10\"\r\n    showFirstLastButtons\r\n    aria-label=\"Select page of departments\"\r\n  >\r\n  </mat-paginator>\r\n</mat-card>\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IJobTitleByDeptVM } from \"app/admin/models/setup/job-title\";\r\nimport {\r\n  ICourseAddEditVM,\r\n  ICourseGetVM,\r\n  IDeptCourseAddEditVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { JobTitleService } from \"app/admin/services/setup/job-title.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { RadioButtonModel } from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CategoryData } from \"app/admin/models/admin/course-request\";\r\nimport { CategoriesService } from \"app/admin/services/setup/categories.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { CategorieComponent } from \"../../categrioes/categorie.component\";\r\nimport { DiplomaComponent } from \"../diploma/diploma.component\";\r\nimport { forkJoin } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-add-course\",\r\n  templateUrl: \"./add-course.component.html\",\r\n  styleUrls: [\"./add-course.component.scss\"],\r\n})\r\nexport class AddCourseComponent implements OnInit {\r\n  functionId: number;\r\n  courseId: number = 0;\r\n  mandatoryJobTitles: IJobTitleByDeptVM[];\r\n  recommendedJobTitles: IJobTitleByDeptVM[];\r\n  categories: CategoryData[];\r\n  submitted: boolean = false;\r\n  course: ICourseGetVM;\r\n  imageChange: boolean = false;\r\n  removeImage: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n  eduCompId: number;\r\n  currentDate = new Date();\r\n  backBtnUrl: string;\r\n\r\n  showAddDiplomaButton: true;\r\n  showAddCategoryButton: true;\r\n  reloadDiploma: boolean = false;\r\n\r\n  constructor(\r\n    private courseServ: CourseService,\r\n    private jobServ: JobTitleService,\r\n    private categoriesService: CategoriesService,\r\n    private ar: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    public fileService: UploadFileService,\r\n    private spinner: NgxSpinnerService,\r\n    private authserv: AuthService,\r\n    private router: Router,\r\n    private datePipe: DatePipe,\r\n    public languageService: LanguageService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    forkJoin([\r\n      this.authserv.chechAuthorization(\"categories\"),\r\n      this.authserv.chechAuthorization(\"diploma\"),\r\n    ]).subscribe((results: any) => {\r\n      if (results[0].returnValue == 1) {\r\n        this.showAddCategoryButton = results[0].returnString;\r\n      }\r\n      if (results[1].returnValue == 1) {\r\n        this.showAddDiplomaButton = results[1].returnString;\r\n      }\r\n    });\r\n\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    ar.paramMap.subscribe((params) => {\r\n      let isFromRequestPage = Number(params.get(\"isFromRequestPage\"));\r\n      // console.log(isFromRequestPage);\r\n      this.backBtnUrl =\r\n        isFromRequestPage == 1\r\n          ? \"/dashboard/setup/course/teaching-request\"\r\n          : \"/dashboard/setup/course/index\";\r\n\r\n      let id = Number(params.get(\"courseId\"));\r\n      // get course in edit\r\n      if (id) {\r\n        this.courseId = id;\r\n        spinner.show();\r\n        this.courseServ\r\n          .getCourseById<ICourseGetVM>(this.courseId)\r\n          .subscribe((res) => {\r\n            // console.log(\"getCourseById\", res);\r\n            if (res) {\r\n              this.course = res;\r\n              this.myForm.patchValue(this.course);\r\n              this.FormCtrls.subCourse_attach?.setValue(\r\n                this.course.attach_path\r\n              );\r\n              this.FormCtrls.category_ids?.setValue(\r\n                this.course.course_categories.map(\r\n                  (category) => category.educational_category_id\r\n                )\r\n              );\r\n              this.FormCtrls.courseHours?.setValue(\r\n                Math.floor(this.course.subCourseMinutes / 60)\r\n              );\r\n              this.FormCtrls.courseMinutes?.setValue(\r\n                this.course.subCourseMinutes % 60\r\n              );\r\n              // put jobTitles of the same department in one array\r\n              let depts = [];\r\n              this.course.department?.forEach((d) => {\r\n                let index = depts.findIndex((i) => i.id == d.id);\r\n                if (index == -1) depts.push(d);\r\n                else depts[index].jobTitle.push(d.jobTitle[0]);\r\n              });\r\n              this.course.department = depts;\r\n              // console.log(this.course);\r\n\r\n              let mandatoryDepartment = [];\r\n              let recommendedDepartment = [];\r\n              let mandatoryJobTitles = [];\r\n              let recommendedJobTitles = [];\r\n              this.course.department?.forEach((dept) => {\r\n                dept.jobTitle?.forEach((job) => {\r\n                  // mandatory\r\n                  if (job.is_mandatory) {\r\n                    mandatoryDepartment.push(dept.id);\r\n\r\n                    mandatoryJobTitles.push(job.depJobId);\r\n                    this.mandatoryDeptCtrl.setValue(mandatoryDepartment);\r\n                    this.onSelectDepartment(job.is_mandatory);\r\n                    this.mandatoryJobCtrl.setValue(mandatoryJobTitles);\r\n                  } else {\r\n                    //recommended\r\n                    recommendedDepartment.push(dept.id);\r\n                    recommendedJobTitles.push(job.depJobId);\r\n                    this.recommendedDeptCtrl.setValue(recommendedDepartment);\r\n                    this.onSelectDepartment(job.is_mandatory);\r\n                    this.recommendedJobCtrl.setValue(recommendedJobTitles);\r\n                  }\r\n                });\r\n\r\n                /* if (dept.is_mandatory == true) {\r\n                  // department\r\n\r\n                  mandatoryDepartment.push(dept.id);\r\n                  this.mandatoryDeptCtrl.setValue(mandatoryDepartment);\r\n                  this.onSelectDepartment(dept.is_mandatory);\r\n                  // job titles\r\n                  jobTitles = [];\r\n                  dept.jobTitle?.forEach((job) => {\r\n                    jobTitles.push(job.depJobId);\r\n                  });\r\n                  this.mandatoryJobCtrl.setValue(jobTitles);\r\n                } else {\r\n                  // department\r\n\r\n                  recommendedDepartment.push(dept.id);\r\n                  this.recommendedDeptCtrl.setValue(recommendedDepartment);\r\n                  this.onSelectDepartment(dept.is_mandatory);\r\n                  // job titles\r\n                  jobTitles = [];\r\n                  dept.jobTitle?.forEach((j) => jobTitles.push(j.depJobId));\r\n                  this.recommendedJobCtrl.setValue(jobTitles);\r\n                } */\r\n              });\r\n\r\n              if (isFromRequestPage == 1) {\r\n                this.FormCtrls.isArabic.setValue(false);\r\n                this.FormCtrls.isEnglish.setValue(false);\r\n              }\r\n              // console.log(this.myForm.value);\r\n              spinner.hide();\r\n            }\r\n            // console.log(this.course);\r\n          });\r\n      }\r\n    });\r\n\r\n    this.eduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        subCourse_ar_name: [\"\", [Validators.required]],\r\n        subCourse_en_name: [\"\", [Validators.required]],\r\n        Diploma_id: [null],\r\n        category_ids: [null, [Validators.required]],\r\n        subjectPromoVideoPath: [\"\"], //[Validators.required, CustomeValidator.noSpace]\r\n        subCourse_attach: [null /* , [Validators.required] */],\r\n        mandatoryFor: this.fb.group({\r\n          department: [\"\", [Validators.required]],\r\n          jobTitle: [\r\n            {\r\n              value: [],\r\n              disabled: true,\r\n            },\r\n            [Validators.required],\r\n          ],\r\n        }),\r\n        recommendedFor: this.fb.group({\r\n          department: [\"\", [Validators.required]],\r\n          jobTitle: [\r\n            {\r\n              value: [],\r\n              disabled: true,\r\n            },\r\n            [Validators.required],\r\n          ],\r\n        }),\r\n        subjectDescription: [\"\"], //[Validators.required]\r\n        // courseGoal: [\"\"], //[Validators.required]\r\n        // eduCompId: [this.eduCompId],\r\n        from_date: [null], // [Validators.required]\r\n        to_date: [null],\r\n        isArabic: [false, [Validators.required]],\r\n        isEnglish: [false, [Validators.required]],\r\n        isFollow: [false, [Validators.required]],\r\n        courseHours: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        courseMinutes: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        CourseCertificate: [true, [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n\r\n    this.FormCtrls.subCourse_attach.valueChanges.subscribe((attach) => {\r\n      if (attach) {\r\n        this.removeImage = 0;\r\n        this.imageChange = true;\r\n      }\r\n    });\r\n\r\n    this.mandatoryDeptCtrl.valueChanges.subscribe((mandatoryDeptId) => {\r\n      this.onSelectDepartment(true);\r\n    });\r\n    this.recommendedDeptCtrl.valueChanges.subscribe((recommendedDeptId) => {\r\n      this.onSelectDepartment(false);\r\n    });\r\n\r\n    this.getAllCategories();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.eduCompId = e.EduCompId;\r\n      this.getAllCategories();\r\n    });\r\n  }\r\n\r\n  getAllCategories() {\r\n    this.categoriesService\r\n      .getCategoriesDropdown(this.eduCompId)\r\n      .subscribe((res) => {\r\n        if (res) this.categories = res.courseCategoryList;\r\n      });\r\n  }\r\n\r\n  onChangeIsFollow(isFollow: boolean) {\r\n    // console.log(isFollow);\r\n    if (isFollow) {\r\n      this.FormCtrls?.Diploma_id?.setValidators([Validators.required]);\r\n      this.FormCtrls?.Diploma_id?.updateValueAndValidity();\r\n    } else {\r\n      this.FormCtrls?.Diploma_id?.clearValidators();\r\n      this.FormCtrls?.Diploma_id?.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  onChangeLanguage(event: MatCheckboxChange, languageNo: number) {\r\n    if (languageNo == 1) this.FormCtrls.isArabic.setValue(event.checked);\r\n    else if (languageNo == 2) this.FormCtrls.isEnglish.setValue(event.checked);\r\n  }\r\n\r\n  onSelectDepartment(mandatory: boolean) {\r\n    // change mandatory\r\n    if (mandatory) {\r\n      // get jobTitles\r\n      this.mandatoryJobCtrl?.setValue(\"\");\r\n      if (this.mandatoryDeptCtrl?.value.length > 0) {\r\n        this.jobServ\r\n          .getSpecificJobTitlesByDepartmentIds({\r\n            ids: this.mandatoryDeptCtrl?.value,\r\n          })\r\n          .subscribe((response: IJobTitleByDeptVM[]) => {\r\n            if (response) this.mandatoryJobTitles = response;\r\n          });\r\n        this.mandatoryJobCtrl?.enable();\r\n      } else {\r\n        this.mandatoryJobCtrl?.disable();\r\n        this.mandatoryJobTitles = [];\r\n      }\r\n    }\r\n    // change recommended\r\n    else {\r\n      // get jobTitles\r\n      this.recommendedJobCtrl?.setValue(\"\");\r\n      if (this.recommendedDeptCtrl?.value.length > 0) {\r\n        this.jobServ\r\n          .getSpecificJobTitlesByDepartmentIds({\r\n            ids: this.recommendedDeptCtrl?.value,\r\n          })\r\n          .subscribe((response: IJobTitleByDeptVM[]) => {\r\n            if (response) this.recommendedJobTitles = response;\r\n          });\r\n        this.recommendedJobCtrl?.enable();\r\n      } else {\r\n        this.recommendedJobCtrl?.disable();\r\n        this.recommendedJobTitles = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  addCourse(course: ICourseAddEditVM) {\r\n    // console.log(course);\r\n    this.spinner.show();\r\n    this.courseServ\r\n      .addCourse<ICourseAddEditVM, any>(course)\r\n      .subscribe((res) => {\r\n        if (res?.returnValue == 1) {\r\n          this.msg.success(\"General.AddSuccessfully\");\r\n          this.router.navigate([\"dashboard/setup/course/\"], {\r\n            queryParams: {\r\n              functionId: this.functionId,\r\n            },\r\n          });\r\n        } else this.msg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateCourse(course: ICourseAddEditVM) {\r\n    if (!this.imageChange) course.subCourse_attach = null;\r\n    // console.log(course);\r\n    this.spinner.show();\r\n    this.courseServ\r\n      .updateCourse<ICourseAddEditVM, any>(this.courseId, course)\r\n      .subscribe((res) => {\r\n        if (res?.returnValue == 1) {\r\n          this.msg.success(\"General.UpdateSuccessfully\");\r\n          this.router.navigate([this.backBtnUrl], {\r\n            queryParams: {\r\n              functionId: this.functionId,\r\n            },\r\n          });\r\n        } else this.msg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    // console.log(this.myForm.value);\r\n    this.submitted = true;\r\n    if (!this.FormCtrls?.isArabic.value && !this.FormCtrls.isEnglish.value) {\r\n      this.msg.warning(\"General.MustChooseLanguage\");\r\n      return;\r\n    } else if (!this.myForm.valid) {\r\n      // this.msg.error(\"course.enterDataMsg\");\r\n      this.msg.error(\"General.FormNotValid\");\r\n\r\n      // if (!this.FormCtrls?.subCourse_attach.value) {\r\n      //   this.msg.warning(\"General.MustChoosePicture\");\r\n      //   return;\r\n      // }\r\n    } else {\r\n      let course: ICourseAddEditVM = {\r\n        subCourse_ar_name: this.FormCtrls.subCourse_ar_name.value,\r\n        subCourse_en_name: this.FormCtrls.subCourse_en_name.value,\r\n        Diploma_id: this.FormCtrls.Diploma_id.value,\r\n        category_ids: this.FormCtrls.category_ids.value,\r\n        from_date: this.datePipe.transform(\r\n          this.FormCtrls.from_date?.value ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.FormCtrls.to_date?.value),\r\n        subCourseDepJobTitle: [],\r\n        subCourse_attach: this.FormCtrls.subCourse_attach.value,\r\n        promoLink: this.FormCtrls.subjectPromoVideoPath.value,\r\n        subjectDescription: this.FormCtrls.subjectDescription.value,\r\n        eduCompId: this.eduCompId,\r\n        isArabic: this.FormCtrls.isArabic.value,\r\n        isEnglish: this.FormCtrls.isEnglish.value,\r\n        isFollow: this.FormCtrls.isFollow.value,\r\n        courseHours: this.FormCtrls.courseHours.value,\r\n        courseMinutes: this.FormCtrls.courseMinutes.value,\r\n        courseCertificate: this.FormCtrls.CourseCertificate.value,\r\n        remove_image: this.removeImage,\r\n      };\r\n\r\n      let depJodIds: IDeptCourseAddEditVM[] = [];\r\n      this.mandatoryJobCtrl?.value.forEach((depJobId) => {\r\n        depJodIds.push({\r\n          is_mandatory: 1,\r\n          depJobId: depJobId,\r\n        });\r\n      });\r\n      this.recommendedJobCtrl?.value.forEach((depJobId) => {\r\n        depJodIds.push({\r\n          is_mandatory: 0,\r\n          depJobId: depJobId,\r\n        });\r\n      });\r\n      course.subCourseDepJobTitle = depJodIds;\r\n      // console.log(course);\r\n\r\n      // add or edit\r\n      if (this.courseId == 0) this.addCourse(course);\r\n      else this.updateCourse(course);\r\n    }\r\n  }\r\n\r\n  openAddCategoryDialog() {\r\n    this.dialog\r\n      .open(CategorieComponent, {\r\n        data: {\r\n          showAddOnly: true,\r\n        },\r\n        minWidth: \"60vw\",\r\n        disableClose: true,\r\n      })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.getAllCategories();\r\n      });\r\n  }\r\n\r\n  openAddDeplomaDialog() {\r\n    this.dialog\r\n      .open(DiplomaComponent, {\r\n        data: {\r\n          showAddOnly: true,\r\n        },\r\n        disableClose: true,\r\n      })\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        this.reloadDiploma = !this.reloadDiploma;\r\n      });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get mandatoryDeptCtrl() {\r\n    return this.myForm.get(\"mandatoryFor.department\");\r\n  }\r\n  get mandatoryJobCtrl() {\r\n    return this.myForm.get(\"mandatoryFor.jobTitle\");\r\n  }\r\n  get recommendedDeptCtrl() {\r\n    return this.myForm.get(\"recommendedFor.department\");\r\n  }\r\n  get recommendedJobCtrl() {\r\n    return this.myForm.get(\"recommendedFor.jobTitle\");\r\n  }\r\n\r\n  RemoveFile() {\r\n    this.removeImage = 1;\r\n    if (this.course) this.course.attach_path = null;\r\n    this.FormCtrls.subCourse_attach.setValue(null);\r\n  }\r\n\r\n  certificateRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: \"labels.Yes\",\r\n      value: true,\r\n    },\r\n    {\r\n      label: \"labels.No\",\r\n      value: false,\r\n    },\r\n  ];\r\n\r\n  followDiplomaRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: \"course.Independent\",\r\n      value: false,\r\n    },\r\n    {\r\n      label: \"course.InDiploma\",\r\n      value: true,\r\n    },\r\n  ];\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- Add Course -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"courseId == 0\">\r\n          {{ \"course.addCourse\" | translate }}\r\n        </span>\r\n        <span *ngIf=\"courseId > 0\">\r\n          {{ \"course.editCourse\" | translate }} -\r\n          {{\r\n            languageService.isArabic\r\n              ? course?.subCourse_ar_name ?? course?.subCourse_en_name\r\n              : course?.subCourse_en_name ?? course?.subCourse_ar_name\r\n          }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          [routerLink]=\"backBtnUrl\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12 p-0\">\r\n                  <!-- english name -->\r\n                  <div class=\"col-12\">\r\n                    <app-input\r\n                      [control]=\"FormCtrls.subCourse_en_name\"\r\n                      [submitted]=\"submitted\"\r\n                      label=\"labels.enName\"\r\n                    ></app-input>\r\n                  </div>\r\n\r\n                  <!-- arabic name -->\r\n                  <div class=\"col-12\">\r\n                    <app-input\r\n                      [control]=\"FormCtrls.subCourse_ar_name\"\r\n                      [submitted]=\"submitted\"\r\n                      label=\"labels.arName\"\r\n                    ></app-input>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- cover photo -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <div class=\"h-100 row align-items-center evenly py-2\">\r\n                    <span class=\"mt-1 mr-2 float-right\">\r\n                      <img\r\n                        [class.hideImg]=\"\r\n                          !FormCtrls?.subCourse_attach?.value &&\r\n                          !course?.attach_path\r\n                        \"\r\n                        [src]=\"\r\n                          fileService.previewPicture(\r\n                            imageChange\r\n                              ? FormCtrls?.subCourse_attach?.value\r\n                              : course?.attach_path\r\n                          )\r\n                        \"\r\n                        class=\"coverPhoto\"\r\n                        alt=\"{{ 'course.coverPhoto' | translate }}\"\r\n                      />\r\n                    </span>\r\n\r\n                    <!-- delete button -->\r\n                    <a\r\n                      *ngIf=\"\r\n                        FormCtrls?.subCourse_attach?.value ||\r\n                        course?.attach_path\r\n                      \"\r\n                      (click)=\"RemoveFile()\"\r\n                      class=\"danger p-0\"\r\n                      matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                    >\r\n                      <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                    </a>\r\n\r\n                    <app-button-file-input\r\n                      [control]=\"FormCtrls.subCourse_attach\"\r\n                      accept=\"image/*\"\r\n                      htmlId=\"cover-photo\"\r\n                      label=\"course.coverPhoto\"\r\n                      [showIcon]=\"false\"\r\n                      [removeFile]=\"removeImage\"\r\n                    ></app-button-file-input>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- promo link -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.subjectPromoVideoPath\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.promo\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- categories -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-10\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"categories.category\" | translate }}\r\n                        </mat-label>\r\n                        <mat-select formControlName=\"category_ids\" multiple>\r\n                          <!-- <mat-option [value]=\"null\">\r\n                            {{ \"General.Choose\" | translate }}\r\n                          </mat-option> -->\r\n                          <ng-container *ngFor=\"let category of categories\">\r\n                            <mat-option\r\n                              [value]=\"category.educational_category_id\"\r\n                            >\r\n                              {{\r\n                                languageService.isArabic\r\n                                  ? category.ar_name ?? category.en_name\r\n                                  : category.en_name ?? category.ar_name\r\n                              }}\r\n                            </mat-option>\r\n                          </ng-container>\r\n                        </mat-select>\r\n\r\n                        <mat-hint>\r\n                          <input-validation-msg\r\n                            [control]=\"FormCtrls.category_ids\"\r\n                            [submitted]=\"submitted\"\r\n                            [isSelect]=\"true\"\r\n                          ></input-validation-msg>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-2 p-0\">\r\n                      <a\r\n                        *ngIf=\"showAddCategoryButton\"\r\n                        class=\"btn btn-danger\"\r\n                        matTooltip=\"{{ 'categories.add category' | translate }}\"\r\n                        (click)=\"openAddCategoryDialog()\"\r\n                      >\r\n                        {{ \"General.Add\" | translate }}\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- diploma -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-radio-button\r\n                    [control]=\"FormCtrls.isFollow\"\r\n                    [radioList]=\"followDiplomaRadioList\"\r\n                    (onChange)=\"onChangeIsFollow($event)\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-radio-button>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-10\">\r\n                      <diploma-dropdown\r\n                        *ngIf=\"FormCtrls?.isFollow.value\"\r\n                        [control]=\"FormCtrls.Diploma_id\"\r\n                        [submitted]=\"submitted\"\r\n                        [reload]=\"reloadDiploma\"\r\n                      ></diploma-dropdown>\r\n                    </div>\r\n                    <div class=\"col-2 p-0\">\r\n                      <button\r\n                        *ngIf=\"\r\n                          FormCtrls?.isFollow.value && showAddDiplomaButton\r\n                        \"\r\n                        class=\"btn btn-danger\"\r\n                        matTooltip=\"{{ 'course.AddDiploma' | translate }}\"\r\n                        (click)=\"openAddDeplomaDialog()\"\r\n                      >\r\n                        {{ \"General.Add\" | translate }}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- mandatory -->\r\n                <h5>{{ \"course.mandatoryFor\" | translate }}</h5>\r\n\r\n                <div formGroupName=\"mandatoryFor\" class=\"col-12\">\r\n                  <div class=\"row\">\r\n                    <!-- mandatory department -->\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <department-dropdown\r\n                        [control]=\"mandatoryDeptCtrl\"\r\n                        [submitted]=\"submitted\"\r\n                        [multiple]=\"true\"\r\n                      ></department-dropdown>\r\n                    </div>\r\n\r\n                    <!-- mandatory jobTitle -->\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"course.jobTitle\" | translate }}\r\n                        </mat-label>\r\n                        <mat-select formControlName=\"jobTitle\" multiple>\r\n                          <ng-container\r\n                            *ngFor=\"let jobTitle of mandatoryJobTitles\"\r\n                          >\r\n                            <mat-option\r\n                              *ngIf=\"\r\n                                !recommendedJobCtrl.value?.includes(jobTitle.id)\r\n                              \"\r\n                              [value]=\"jobTitle.id\"\r\n                            >\r\n                              {{\r\n                                languageService.isArabic\r\n                                  ? jobTitle.jobTitleArName +\r\n                                    \" / \" +\r\n                                    jobTitle.departmentArName\r\n                                  : jobTitle.jobTitleEnName +\r\n                                    \" / \" +\r\n                                    jobTitle.departmentEnName\r\n                              }}\r\n                            </mat-option>\r\n                          </ng-container>\r\n                        </mat-select>\r\n                        <mat-hint>\r\n                          <input-validation-msg\r\n                            [control]=\"mandatoryJobCtrl\"\r\n                            [submitted]=\"submitted\"\r\n                            [isSelect]=\"true\"\r\n                          ></input-validation-msg>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- recommended -->\r\n                <h5>{{ \"course.recommendedFor\" | translate }}</h5>\r\n\r\n                <div formGroupName=\"recommendedFor\" class=\"col-12\">\r\n                  <div class=\"row\">\r\n                    <!-- recommended department -->\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <department-dropdown\r\n                        [control]=\"recommendedDeptCtrl\"\r\n                        [submitted]=\"submitted\"\r\n                        [multiple]=\"true\"\r\n                      ></department-dropdown>\r\n                    </div>\r\n\r\n                    <!-- recommended jobTitle -->\r\n                    <div class=\"col-md-6 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"course.jobTitle\" | translate }}\r\n                        </mat-label>\r\n                        <mat-select formControlName=\"jobTitle\" multiple>\r\n                          <ng-container\r\n                            *ngFor=\"let jobTitle of recommendedJobTitles\"\r\n                          >\r\n                            <mat-option\r\n                              *ngIf=\"\r\n                                !mandatoryJobCtrl.value?.includes(jobTitle.id)\r\n                              \"\r\n                              [value]=\"jobTitle.id\"\r\n                            >\r\n                              {{\r\n                                languageService.isArabic\r\n                                  ? jobTitle.jobTitleArName +\r\n                                    \" / \" +\r\n                                    jobTitle.departmentArName\r\n                                  : jobTitle.jobTitleEnName +\r\n                                    \" / \" +\r\n                                    jobTitle.departmentEnName\r\n                              }}\r\n                            </mat-option>\r\n                          </ng-container>\r\n                        </mat-select>\r\n                        <mat-hint>\r\n                          <input-validation-msg\r\n                            [control]=\"recommendedJobCtrl\"\r\n                            [submitted]=\"submitted\"\r\n                            [isSelect]=\"true\"\r\n                          ></input-validation-msg>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- languages of course -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <div class=\"row\">\r\n                    <label class=\"col-4 label-check d-flex align-items-center\">\r\n                      {{ \"course.Languages\" | translate }}\r\n                    </label>\r\n                    <div class=\"col-8 radio-group\">\r\n                      <section class=\"row\">\r\n                        <mat-checkbox\r\n                          class=\"col-md-6 col-12\"\r\n                          [checked]=\"FormCtrls.isArabic.value\"\r\n                          (change)=\"onChangeLanguage($event, 1)\"\r\n                        >\r\n                          {{ \"course.Arabic\" | translate }}\r\n                        </mat-checkbox>\r\n                        <mat-checkbox\r\n                          class=\"col-md-6 col-12\"\r\n                          [checked]=\"FormCtrls.isEnglish.value\"\r\n                          (change)=\"onChangeLanguage($event, 2)\"\r\n                        >\r\n                          {{ \"course.English\" | translate }}\r\n                        </mat-checkbox>\r\n                      </section>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- certification -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-radio-button\r\n                    [control]=\"FormCtrls.CourseCertificate\"\r\n                    [radioList]=\"certificateRadioList\"\r\n                    label=\"course.HasCertificate\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-radio-button>\r\n                </div>\r\n\r\n                <!-- course hours -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.courseHours\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.CourseHours\"\r\n                    type=\"number\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- course minutes -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.courseMinutes\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.CourseMinutes\"\r\n                    type=\"number\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- description -->\r\n                <div class=\"col-12\">\r\n                  <app-textarea\r\n                    [control]=\"FormCtrls.subjectDescription\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.description\"\r\n                    rows=\"2\"\r\n                  ></app-textarea>\r\n                </div>\r\n\r\n                <!-- goal  -->\r\n                <!-- <div class=\"col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.courseGoal\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.goal\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div> -->\r\n\r\n                <!-- From date  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"FormCtrls?.from_date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.FromDate\"\r\n                  ></app-datepicker>\r\n                </div>\r\n\r\n                <!-- To date  -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"FormCtrls?.to_date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.ToDate\"\r\n                  ></app-datepicker>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\" class=\"pr-3 pt-0\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"courseId == 0\"></i>\r\n          {{ (courseId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IAddEditUserVM,\r\n  ICourseGetVM,\r\n  IGetUserCheckVM,\r\n  IGetUsersVM,\r\n  IuserAddFile,\r\n  IUserListGetVM,\r\n  searchUserVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-users-to-course\",\r\n  templateUrl: \"./add-users-to-course.component.html\",\r\n  styleUrls: [\"./add-users-to-course.component.scss\"],\r\n})\r\nexport class AddUsersToCourseComponent implements OnInit {\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  curPage: number = 1;\r\n  EduCompId: number;\r\n  itemCount: number = 0;\r\n  courseId: number = 0;\r\n  courseArName: string;\r\n  courseEnName: string;\r\n\r\n  dataSource: MatTableDataSource<IUserListGetVM>;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"account_email\",\r\n    \"mobile\",\r\n    \"actions\",\r\n  ];\r\n  myForm!: FormGroup;\r\n  // lastUserIdSearch: number;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private authserv: AuthService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private courseService: CourseService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    public languageService: LanguageService,\r\n    public fileService: UploadFileService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.courseId = Number(params.get(\"courseId\"));\r\n\r\n      this.courseService\r\n        .getCourseById<ICourseGetVM>(this.courseId)\r\n        .subscribe((res) => {\r\n          if (res) {\r\n            this.courseArName = res.subCourse_ar_name;\r\n            this.courseEnName = res.subCourse_en_name;\r\n          }\r\n        });\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.fb.group({\r\n      // page: [1],\r\n      // subCourseId: [this.courseId],\r\n      // EduCompId: [this.EduCompId],\r\n      account_email: [null],\r\n      mobile: [null],\r\n      code: [null],\r\n      excelFile: [null],\r\n    });\r\n\r\n    this.getAllUsers(this.curPage);\r\n  }\r\n\r\n  // get EduCompIdCtrl() {\r\n  //   return this.myForm.get(\"EduCompId\");\r\n  // }\r\n  // get courseIdCtrl() {\r\n  //   return this.myForm.get(\"subCourseId\");\r\n  // }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      // this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.getAllUsers(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n\r\n    // this.authserv.branchId.subscribe((e) => {\r\n    //   this.getAllUsers(1);\r\n    // });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"name\":\r\n          return this.languageService.isArabic\r\n            ? item.ar_name ?? item.en_name\r\n            : item.en_name ?? item.ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllUsers(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.courseService\r\n      .getAllUsers<IGetUsersVM>(page, this.courseId)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.userList);\r\n          this.itemCount = res.countItems;\r\n          this.startSortingTable();\r\n          // console.log(\"Users\", res.subUserList);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  checkIfUserExist() {\r\n    if (\r\n      !this.formCtls.account_email.value &&\r\n      !this.formCtls.mobile.value &&\r\n      !this.formCtls.code.value\r\n    ) {\r\n      this.toastr.warning(\"course.enterOneField\");\r\n      return;\r\n    }\r\n\r\n    let obj: searchUserVM = {\r\n      account_email: this.formCtls.account_email.value?.trim() || null,\r\n      mobile: this.formCtls.mobile.value?.trim() || null,\r\n      code: this.formCtls.code.value || null,\r\n    };\r\n\r\n    this.spinner.show();\r\n    this.courseService\r\n      .checkUser<searchUserVM, IGetUserCheckVM>(obj, this.EduCompId)\r\n      .subscribe((user: IGetUserCheckVM) => {\r\n        // console.log(\"check user\", user);\r\n        if (user) {\r\n          // this.lastUserIdSearch = user.userId;\r\n          this.toastr.info(\"course.existUser\");\r\n        } else {\r\n          this.toastr.info(\"course.notExistUser\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  addUser() {\r\n    if (\r\n      !this.formCtls.account_email.value &&\r\n      !this.formCtls.mobile.value &&\r\n      !this.formCtls.code.value\r\n    ) {\r\n      this.toastr.warning(\"course.enterOneField\");\r\n      return;\r\n    }\r\n\r\n    let obj: searchUserVM = {\r\n      account_email: this.formCtls.account_email.value?.trim() || null,\r\n      mobile: this.formCtls.mobile.value?.trim() || null,\r\n      code: this.formCtls.code.value || null,\r\n    };\r\n    // console.log(\"form values add\", this.myForm.value);\r\n\r\n    this.spinner.show();\r\n    this.courseService\r\n      .checkUser<searchUserVM, IGetUserCheckVM>(obj, this.EduCompId)\r\n      .subscribe((user: IGetUserCheckVM) => {\r\n        // console.log(\"check user\", user);\r\n        if (!user) {\r\n          this.toastr.warning(\"course.notExistUser\");\r\n          this.spinner.hide();\r\n          return;\r\n        } else {\r\n          let obj: IAddEditUserVM = {\r\n            userId: user.userId,\r\n            subject_id: this.courseId,\r\n          };\r\n          // this.spinner.show();\r\n          this.courseService\r\n            .addUser<IAddEditUserVM, any>(obj)\r\n            .subscribe((res: any) => {\r\n              // console.log('adduser', res);\r\n              if (res.returnValue == 0) this.toastr.error(res.returnString);\r\n              else {\r\n                this.myForm.reset();\r\n                this.getAllUsers(1); // first page after add\r\n                this.dataSource.paginator = this.paginator;\r\n                this.toastr.success(\"General.AddSuccessfully\");\r\n              }\r\n              this.spinner.hide();\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(user: IUserListGetVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? user.ar_name ?? user.en_name\r\n            : user.en_name ?? user.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUser(user);\r\n      });\r\n  }\r\n\r\n  deleteUser(user: IUserListGetVM) {\r\n    this.spinner.show();\r\n    this.courseService.deleteUser(user.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllUsers(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllUsers(this.curPage);\r\n        }\r\n      } else this.toastr.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  uploadUsersByExcel() {\r\n    if (this.formCtls.excelFile.value == null) {\r\n      this.toastr.warning(\"course.excelSheet\");\r\n      return;\r\n    } else {\r\n      this.spinner.show();\r\n      this.courseService\r\n        .uploadUsersByExcel<IuserAddFile>({\r\n          uploadedFile: this.formCtls.excelFile.value,\r\n          subject_id: this.courseId,\r\n        })\r\n        .subscribe((res: any) => {\r\n          // console.log(res);\r\n          if (\r\n            res?.returnValue == 1 ||\r\n            (res?.isSendAllSuccess == false && res?.errors.length == 0)\r\n          ) {\r\n            this.toastr.success(\"General.UploadSuccessfully\");\r\n            this.getAllUsers(1); // first page after add\r\n            this.dataSource.paginator = this.paginator;\r\n          } else if (res?.returnValue == 0)\r\n            this.toastr.error(res?.returnString);\r\n          else if (res?.isSendAllSuccess == false) {\r\n            this.toastr.error(res?.errors[0]);\r\n            this.getAllUsers(1); // first page after add\r\n            this.dataSource.paginator = this.paginator;\r\n          } else if (res?.isUploaded == false)\r\n            this.toastr.error(res?.errors[0]);\r\n          this.spinner.hide();\r\n\r\n          this.formCtls.excelFile.setValue(null);\r\n          this.fileService.resetFileById(\"excel-file\");\r\n        });\r\n    }\r\n  }\r\n\r\n  get formCtls() {\r\n    return this.myForm.controls;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"course.AddEmployeeToCourse\" | translate }} -\r\n        {{\r\n          languageService.isArabic\r\n            ? courseArName ?? courseEnName\r\n            : courseEnName ?? courseArName\r\n        }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/setup/course/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"checkIfUserExist()\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtls.account_email\"\r\n                    label=\"labels.Email\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtls.mobile\"\r\n                    label=\"labels.MobileNo\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtls.code\"\r\n                    label=\"labels.Code\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-file-input\r\n                    [control]=\"formCtls.excelFile\"\r\n                    accept=\".xls, .xlsx\"\r\n                    htmlId=\"excel-file\"\r\n                    label=\"labels.ExcelSheet\"\r\n                  ></app-file-input>\r\n\r\n                  <p class=\"info\">\r\n                    {{ \"labels.MustHasColCodes\" | translate }}\r\n                    '<strong>code</strong>'\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"addUser()\"\r\n          class=\"btn btn-info bg-light-info\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n\r\n        <button\r\n          mat-raised-button\r\n          type=\"button\"\r\n          (click)=\"uploadUsersByExcel()\"\r\n          class=\"btn btn-info bg-light-info\"\r\n        >\r\n          <i class=\"fa fa-upload mr-1\"></i>\r\n          {{ \"General.Upload\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  languageService.isArabic\r\n                    ? ele.ar_name ?? ele.en_name\r\n                    : ele.en_name ?? ele.ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"account_email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.MobileNo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"text-center\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllUsers($event.pageIndex + 1)\"\r\n            [length]=\"itemCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AppAssets } from \"app/shared/data/app-assets\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IJobTitleDatesEditVM } from \"app/admin/models/setup/job-title\";\r\nimport { EditJobTitleDatesComponent } from \"app/shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  ICourseGetModel,\r\n  ICourseGetVM,\r\n  ICourseJobTitleGetVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ISearchCourse } from \"app/admin/models/admin/setup/course\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-index\",\r\n  templateUrl: \"./course-index.component.html\",\r\n  styleUrls: [\"./course-index.component.scss\"],\r\n})\r\nexport class CourseIndexComponent implements OnInit {\r\n  EduCompId: number;\r\n  departmentId: number;\r\n  jobId: number;\r\n  totalItems: number;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"subCourse_en_name\",\r\n    \"subCourse_ar_name\",\r\n    // \"promoLink\",\r\n    // \"courseDescreption\",\r\n    \"attach_path\",\r\n    \"department\",\r\n    \"jobTitle\",\r\n    \"actions\",\r\n  ];\r\n  // displayedColumns: string[] = [];\r\n\r\n  // lists from api\r\n  // mandatoryColomns: string[] = [];\r\n  // optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<ICourseGetVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  myForm!: FormGroup;\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [\r\n  //   { functionName: \"Edit\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"UpdateArticalJob\" },\r\n  //   { functionName: \"DeleteArticalJob\" },\r\n  // ];\r\n\r\n  constructor(\r\n    private courseServ: CourseService,\r\n    private fb: FormBuilder,\r\n    private ar: ActivatedRoute,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    private dialog: MatDialog,\r\n    public fileService: UploadFileService,\r\n    public languageService: LanguageService,\r\n    public appAssets: AppAssets\r\n  ) {\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.eduCompId);\r\n    this.myForm = this.fb.group({\r\n      departmentId: [null],\r\n      jobId: [\r\n        {\r\n          value: null,\r\n          disabled: true,\r\n        },\r\n      ],\r\n      diplomaId: [null],\r\n      courseName: [null],\r\n      page: [1],\r\n    });\r\n\r\n    // initialize dataSource | get all courses\r\n    this.getAllCourses(this.page.value);\r\n  }\r\n\r\n  // editColumnsToView(index: number, selected: boolean) {\r\n  //   if (selected)\r\n  //     this.displayedColumns.splice(\r\n  //       this.displayedColumns.length - 1,\r\n  //       0,\r\n  //       this.optionalColomns[index]\r\n  //     );\r\n  //   else {\r\n  //     let indexInTable = this.displayedColumns.findIndex(\r\n  //       (ele) => ele == this.optionalColomns[index]\r\n  //     );\r\n  //     this.displayedColumns.splice(indexInTable, 1);\r\n  //   }\r\n  // }\r\n  // selectColumnsToView(values: number[]) {\r\n  //   this.displayedColumns = this.mandatoryColomns.slice();\r\n  //   // values > array of selected index in optional columns\r\n  //   values.forEach((index) =>\r\n  //     this.displayedColumns.splice(\r\n  //       this.displayedColumns.length - 1,\r\n  //       0,\r\n  //       this.optionalColomns[index]\r\n  //     )\r\n  //   );\r\n  // }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllCourses(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  customFilter() {\r\n    this.dataSource.filterPredicate = (data: ICourseGetVM, filter) => {\r\n      return (\r\n        data.subCourse_en_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.subCourse_ar_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        // data.promoLink?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        // data.courseDescreption?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.department\r\n          ?.map((d) => (this.languageService.isArabic ? d.ar_name : d.en_name))\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1 ||\r\n        data.department\r\n          ?.map((d) =>\r\n            d.jobTitle?.map((j) =>\r\n              this.languageService.isArabic ? j.ar_name : j.en_name\r\n            )\r\n          )\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1\r\n      );\r\n    };\r\n  }\r\n\r\n  startSortingTable() {\r\n    // sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"department\":\r\n          return this.languageService.isArabic\r\n            ? item.department[0].ar_name ?? item.department[0].en_name\r\n            : item.department[0].en_name ?? item.department[0].ar_name;\r\n        case \"jobTitle\":\r\n          return this.languageService.isArabic\r\n            ? item.department[0].jobTitle[0]?.ar_name ??\r\n                item.department[0].jobTitle[0]?.en_name\r\n            : item.department[0].jobTitle[0]?.en_name ??\r\n                item.department[0].jobTitle[0]?.ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getAllCourses(p: number) {\r\n    this.page?.setValue(p);\r\n\r\n    let searchData: ISearchCourse = {\r\n      depId: this.FormCtrls.departmentId.value || 0,\r\n      jobId: this.FormCtrls.jobId.value || 0,\r\n      // course\r\n      subCourseName:\r\n        this.FormCtrls.courseName.value?.trim().toLowerCase() || null,\r\n      // diploma\r\n      diploma_id: this.FormCtrls.diplomaId.value || 0,\r\n      page: this.page.value,\r\n      eduCompId: this.EduCompId || 0,\r\n    };\r\n    // console.log(searchData);\r\n\r\n    this.spinner.show();\r\n    this.courseServ\r\n      .getAllCoursesBySearch<ICourseGetModel>(searchData)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          let courses = response.subCourseList;\r\n          // put jobTitles of the same department in one array\r\n          courses = courses?.map((course) => {\r\n            let depts = [];\r\n            course.department?.forEach((d) => {\r\n              let index = depts.findIndex((i) => i.id == d.id);\r\n              if (index == -1) depts.push(d);\r\n              else depts[index].jobTitle.push(d.jobTitle[0]);\r\n            });\r\n            course.department = depts;\r\n            return course;\r\n          });\r\n          // console.log(courses);\r\n\r\n          this.dataSource = new MatTableDataSource(courses);\r\n          this.totalItems = response.countItems;\r\n          // this.customFilter();\r\n          this.startSortingTable();\r\n\r\n          // get optional & mandatory columns\r\n          // this.mandatoryColomns = response.requiredSubjectProperties;\r\n          // this.optionalColomns = response.optionalSubjectProperties;\r\n          // initial table columns\r\n          // if (this.displayedColumns.length == 0)\r\n          //   this.displayedColumns = this.mandatoryColomns.slice();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleteDialog(course: ICourseGetVM): void {\r\n    let courseName = this.languageService.isArabic\r\n      ? course.subCourse_ar_name ?? course.subCourse_en_name\r\n      : course.subCourse_en_name ?? course.subCourse_ar_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: courseName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeCourse(course.id);\r\n      });\r\n  }\r\n\r\n  removeCourse(id: number) {\r\n    this.spinner.show();\r\n    this.courseServ.removeCourse(id).subscribe((res: any) => {\r\n      if (res) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.page.value > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllCourses(this.page.value - 1);\r\n          this.paginator.pageIndex = this.page.value - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllCourses(this.page.value);\r\n        }\r\n      } else this.msg.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  openUpdateJobTitleDialog(jobTitle: ICourseJobTitleGetVM) {\r\n    // console.log(jobTitle);\r\n    this.dialog\r\n      .open(EditJobTitleDatesComponent, {\r\n        data: {\r\n          jobTitle: jobTitle,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(response.jobTitle);\r\n          this.editJobTitleDates(jobTitle.jobTitleCourseId, response.jobTitle);\r\n        }\r\n      });\r\n  }\r\n\r\n  editJobTitleDates(\r\n    jobTitle_articleId: number,\r\n    jobtitle: IJobTitleDatesEditVM\r\n  ) {\r\n    this.spinner.show();\r\n    this.courseServ\r\n      .updateJobTitleCourse<IJobTitleDatesEditVM, any>(\r\n        jobTitle_articleId,\r\n        jobtitle\r\n      )\r\n      .subscribe((response) => {\r\n        if (response.returnValue == 1) {\r\n          this.getAllCourses(this.page.value);\r\n          this.msg.success(\"General.UpdateSuccessfully\");\r\n        } else this.msg.error(response?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleteJobtitleDialog(jobTitle: ICourseJobTitleGetVM) {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? jobTitle.ar_name ?? jobTitle.en_name\r\n            : jobTitle.en_name ?? jobTitle.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeJobtitleArticle(jobTitle.jobTitleCourseId);\r\n      });\r\n  }\r\n\r\n  removeJobtitleArticle(jobTitleCourseId: number) {\r\n    this.spinner.show();\r\n    this.courseServ\r\n      .removeJobTitleCourse(jobTitleCourseId)\r\n      .subscribe((response: any) => {\r\n        if (response.returnValue == 1) {\r\n          this.getAllCourses(this.page.value);\r\n          this.msg.success(\"General.DeleteSuccessfully\");\r\n        } else this.msg.error(response?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n\r\n  resetSearch() {\r\n    this.myForm.reset();\r\n    this.FormCtrls?.jobId.disable();\r\n    this.getAllCourses(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../add-course\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllCourses(1); dataSource.paginator = paginator\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- department search -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <department-dropdown\r\n                    [control]=\"FormCtrls.departmentId\"\r\n                  ></department-dropdown>\r\n                </div>\r\n\r\n                <!-- job title search -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <job-title-by-department-dropdown\r\n                    [control]=\"FormCtrls.jobId\"\r\n                    [departmentControl]=\"FormCtrls.departmentId\"\r\n                    [depJobId]=\"false\"\r\n                  ></job-title-by-department-dropdown>\r\n                </div>\r\n\r\n                <!-- diploma search -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <diploma-dropdown\r\n                    [control]=\"FormCtrls.diplomaId\"\r\n                  ></diploma-dropdown>\r\n                </div>\r\n\r\n                <!-- arabic name search -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.courseName\"\r\n                    label=\"course.NameSearch\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"course.courses\" | translate }}\r\n\r\n        <!-- <mat-form-field class=\"table-column-dropdown float-right m-0\">\r\n          <i\r\n            class=\"ft-filter\"\r\n            matTooltip=\"{{ 'General.changeColumns' | translate }}\"\r\n          ></i>\r\n           (selectionChange)=\"selectColumnsToView($event.value)\"\r\n          <mat-select multiple class=\"table-column-dropdown-select\">\r\n            <mat-option\r\n              *ngFor=\"let column of optionalColomns; let i = index\"\r\n              [value]=\"i\"\r\n              class=\"column-table-option\"\r\n              #columnOption\r\n              (click)=\"editColumnsToView(i, columnOption.selected)\"\r\n            >\r\n              {{ column }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field> -->\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english name Column -->\r\n            <ng-container matColumnDef=\"subCourse_en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.subCourse_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name Column -->\r\n            <ng-container matColumnDef=\"subCourse_ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.subCourse_ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- promo Column -->\r\n            <ng-container matColumnDef=\"promoLink\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.promo\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <a [href]=\"course.promoLink\" target=\"_blank\">{{\r\n                  course.promoLink\r\n                }}</a>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- description Column -->\r\n            <ng-container matColumnDef=\"subjectDescription\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.description\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <span\r\n                  class=\"ellipsis-lines\"\r\n                  [matTooltip]=\"course.subjectDescription\"\r\n                >\r\n                  {{ course.subjectDescription }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- cover photo Column -->\r\n            <ng-container matColumnDef=\"attach_path\">\r\n              <th mat-header-cell *matHeaderCellDef class=\"text-center\">\r\n                {{ \"course.coverPhoto\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <img\r\n                  class=\"coverPhoto\"\r\n                  [src]=\"\r\n                    fileService.previewPicture(course.attach_path) ??\r\n                    appAssets.notCourseImage\r\n                  \"\r\n                />\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- department Column -->\r\n            <ng-container matColumnDef=\"department\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.department\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\" [attr.colspan]=\"2\">\r\n                <table\r\n                  class=\"table table-sm\"\r\n                  *ngIf=\"course.department?.length > 0\"\r\n                >\r\n                  <thead class=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.Name\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.Type\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.Name\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.FromDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\">\r\n                        {{ \"labels.ToDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\" class=\"border-0\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <ng-container *ngFor=\"let dept of course.department\">\r\n                      <tr *ngFor=\"let job of dept.jobTitle; index as n\">\r\n                        <td [rowSpan]=\"dept.jobTitle.length\" *ngIf=\"n == 0\">\r\n                          {{\r\n                            languageService.isArabic\r\n                              ? dept.ar_name ?? dept.en_name\r\n                              : dept.en_name ?? dept.ar_name\r\n                          }}\r\n                        </td>\r\n                        <!-- [rowSpan]=\"dept.jobTitle.length\" *ngIf=\"n == 0\" -->\r\n                        <td>\r\n                          <!-- <span *ngIf=\"dept.is_mandatory\"> mandatory </span>\r\n                          <span *ngIf=\"!dept.is_mandatory\"> recommended </span> -->\r\n                          {{\r\n                            (job.is_mandatory\r\n                              ? \"course.mandatory\"\r\n                              : \"course.recommended\"\r\n                            ) | translate\r\n                          }}\r\n                        </td>\r\n                        <td>\r\n                          {{\r\n                            languageService.isArabic\r\n                              ? job.ar_name ?? job.en_name\r\n                              : job.en_name ?? job.ar_name\r\n                          }}\r\n                        </td>\r\n                        <td class=\"dates\">\r\n                          {{ job.from_date | date : \"dd-MM-yyyy\" }}\r\n                        </td>\r\n                        <td class=\"dates\">\r\n                          {{ job.to_date | date : \"dd-MM-yyyy\" }}\r\n                        </td>\r\n                        <td class=\"sm-action-col\">\r\n                          <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                            <a\r\n                              *ngIf=\"fun.functionName === 'UpdateArticalJob'\"\r\n                              (click)=\"openUpdateJobTitleDialog(job)\"\r\n                              class=\"success p-0\"\r\n                            >\r\n                              <i class=\"ft-edit-2 mr-2\"></i>\r\n                            </a>\r\n\r\n                            <a\r\n                              *ngIf=\"fun.functionName === 'DeleteArticalJob'\"\r\n                              (click)=\"openDeleteJobtitleDialog(job)\"\r\n                              class=\"danger p-0\"\r\n                            >\r\n                              <i\r\n                                class=\"fa fa-times fa fa-white\"\r\n                                aria-hidden=\"true\"\r\n                              ></i>\r\n                            </a>\r\n                          </ng-container>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-container>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- job Column -->\r\n            <ng-container matColumnDef=\"jobTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.jobTitle\" | translate }}\r\n              </th>\r\n              <td\r\n                mat-cell\r\n                *matCellDef=\"let course\"\r\n                [ngStyle]=\"{ display: 'none' }\"\r\n              ></td>\r\n            </ng-container>\r\n\r\n            <!-- categories Column -->\r\n            <ng-container matColumnDef=\"category\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"categories.categories\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                <ng-container\r\n                  *ngFor=\"let category of course.category; let last = last\"\r\n                >\r\n                  {{\r\n                    languageService.isArabic\r\n                      ? category.ar_name ?? category.en_name\r\n                      : category.en_name ?? category.ar_name\r\n                  }}\r\n                  <span *ngIf=\"!last\">,</span>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- diploma english name Column -->\r\n            <ng-container matColumnDef=\"main_course_en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.diploma_en_name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.main_course_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- diploma arabic name Column -->\r\n            <ng-container matColumnDef=\"main_course_ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.diploma_ar_name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.main_course_ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- is follow diploma Column -->\r\n            <ng-container matColumnDef=\"isFollow\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.isFollow\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{\r\n                  (course.isFollow ? \"course.InDiploma\" : \"course.Independent\")\r\n                    | translate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- is english Column -->\r\n            <ng-container matColumnDef=\"isEnglish\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.isEnglish\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{\r\n                  (course.isEnglish ? \"labels.Yes\" : \"labels.No\") | translate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- is arabich Column -->\r\n            <ng-container matColumnDef=\"isArabic\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.isArabic\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ (course.isArabic ? \"labels.Yes\" : \"labels.No\") | translate }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- is arabich Column -->\r\n            <ng-container matColumnDef=\"CourseCertificate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.HasCertificate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{\r\n                  (course.CourseCertificate ? \"labels.Yes\" : \"labels.No\")\r\n                    | translate\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- is arabich Column -->\r\n            <ng-container matColumnDef=\"subCourseMinutes\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Hours\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.subCourseMinutes % 60 }}\r\n                {{ \"labels.hr\" | translate }},\r\n                {{\r\n                  (course.subCourseMinutes - (course.subCourseMinutes % 60)) /\r\n                    60\r\n                }}\r\n                {{ \"labels.min\" | translate }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let course\" class=\"text-center\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-info\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'AddEmployeeToCourse'\"\r\n                        routerLink=\"../add-employee-to-course/{{ course.id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-users font-medium-3 mr-2\"></i>\r\n                        {{ \"course.AddEmployeeToCourse\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        routerLink=\"../edit-course/{{ course.id }}/0\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleteDialog(course)\"\r\n                      >\r\n                        <i class=\"fa fa-times font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <!-- <a\r\n                        *ngIf=\"fun.functionName === 'Show'\"\r\n                        ngbDropdownItem\r\n                        target=\"_blank\"\r\n                        routerLink=\"../course-details/{{ course.id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-video-camera font-medium-3 mr-2\"> </i>\r\n                        {{ \"course.courseDetails\" | translate }}\r\n                      </a> -->\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Points'\"\r\n                        routerLink=\"/dashboard/setup/points/{{ course.id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                        ><i class=\"fa fa-gift font-medium-3 mr-2\"></i>\r\n                        {{ \"course.coursePoints\" | translate }}\r\n                      </a>\r\n\r\n                      <!-- <a\r\n                        *ngIf=\"fun.functionName === 'AddExam'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/exams-setup/exam/{{\r\n                          course.id\r\n                        }}/3\"\r\n                        [queryParams]=\"{\r\n                          functionId: 23,\r\n                          parentId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-book font-medium-3 mr-2\"></i>\r\n                        {{ \"course.addExam\" | translate }}\r\n                      </a> -->\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'AddSurvey'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/exams-setup/survey/{{\r\n                          course.id\r\n                        }}/5\"\r\n                        [queryParams]=\"{\r\n                          functionId: 23,\r\n                          parentId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-list-alt font-medium-3 mr-2\"></i>\r\n                        <!-- <i class=\"fa fa-book font-medium-3 mr-2\"></i> -->\r\n                        {{ \"course.addSurvey\" | translate }}\r\n                      </a>\r\n\r\n                      <!-- <a\r\n                        *ngIf=\"fun.functionName === 'AddSurvey'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/educational-setup/subjects/material-search/{{\r\n                          course.id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: 89,\r\n                          parentId: 1084,\r\n                          courseName: course.subject_ar_name\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-play-circle font-medium-3 mr-2\"></i>\r\n                        {{ \"course.addLecture\" | translate }}\r\n                      </a> -->\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'CourseStructure'\"\r\n                        routerLink=\"/dashboard/setup/course/course-structure/{{\r\n                          course.id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"ft-cpu font-medium-3 mr-2\"></i>\r\n                        {{ \"labels.SubjectStructure\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Objectives'\"\r\n                        routerLink=\"/dashboard/setup/course/course-objectives/{{\r\n                          course.id\r\n                        }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-check-circle-o font-medium-3 mr-2\"></i>\r\n                        {{ \"course.Objectives\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            [pageSize]=\"10\"\r\n            (page)=\"getAllCourses($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of courses\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport {\r\n  ICourseObjectiveAddEditVM,\r\n  ICourseObjectiveVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-objectives\",\r\n  templateUrl: \"./course-objectives.component.html\",\r\n  styleUrls: [\"./course-objectives.component.scss\"],\r\n})\r\nexport class CourseObjectivesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  courseId: number = 0;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  displayColumns: string[] = [\"#\", \"whatYouLearn\", \"actions\"];\r\n  dataSource: MatTableDataSource<ICourseObjectiveVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private toastr: MessagesService,\r\n    private dialog: MatDialog,\r\n    public languageService: LanguageService,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    private courseService: CourseService\r\n  ) {\r\n    this.route.paramMap.subscribe(\r\n      (pram) => (this.courseId = Number(pram.get(\"courseId\")))\r\n    );\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: IRowFunctionVM[]) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      subjectObjectiveId: [0],\r\n      whatYouLearn: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    this.getAllCourseObjectives(this.curPage);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      // this.getAllCourseObjectives(1);\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editCourseObjective(courseObjective: ICourseObjectiveAddEditVM) {\r\n    this.myForm.patchValue(courseObjective);\r\n  }\r\n\r\n  // Return Course Objective\r\n  getAllCourseObjectives(page: number) {\r\n    this.spinner.show();\r\n    this.courseService\r\n      .getAllCourseObjectives(this.courseId, page)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.courseList);\r\n          this.itemsCounts = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let courseObjective: ICourseObjectiveAddEditVM = {\r\n        subject_id: this.courseId,\r\n        id: this.FormCtrls.subjectObjectiveId.value,\r\n        what_learn: this.FormCtrls.whatYouLearn.value,\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.courseService\r\n        .addEditCourseObjective(courseObjective)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            if (courseObjective.id == 0) {\r\n              this.getAllCourseObjectives(1); // first page after add\r\n              this.dataSource.paginator = this.paginator;\r\n            } else {\r\n              this.getAllCourseObjectives(this.curPage); // current page after update\r\n            }\r\n\r\n            this.toastr.success(\r\n              courseObjective.id == 0\r\n                ? \"General.AddSuccessfully\"\r\n                : \"General.UpdateSuccessfully\"\r\n            );\r\n\r\n            this.clearForm();\r\n          } else this.toastr.error(res?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleteDialog(courseObjective: ICourseObjectiveVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: courseObjective.subjectObjectiveId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteCourseObjective(courseObjective);\r\n      });\r\n  }\r\n\r\n  // Delete Course Objective\r\n  deleteCourseObjective(courseObjective: ICourseObjectiveVM) {\r\n    this.spinner.show();\r\n    this.courseService\r\n      .deleteCourseObjective(courseObjective.subjectObjectiveId)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getAllCourseObjectives(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getAllCourseObjectives(this.curPage);\r\n          }\r\n\r\n          if (\r\n            courseObjective.subjectObjectiveId ==\r\n            this.FormCtrls.subjectObjectiveId.value\r\n          )\r\n            this.clearForm();\r\n        } else this.toastr.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.subjectObjectiveId.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.subjectObjectiveId.value == 0\r\n            ? \"course.AddCourseObjective\"\r\n            : \"course.UpdateCourseObjective\"\r\n          ) | translate\r\n        }}\r\n\r\n        <!-- back -->\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/setup/course/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.whatYouLearn\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"course.whatYouWillLearn\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i\r\n            class=\"fa fa-plus mr-1\"\r\n            *ngIf=\"FormCtrls?.subjectObjectiveId?.value == 0\"\r\n          ></i>\r\n          {{\r\n            (FormCtrls?.subjectObjectiveId?.value == 0\r\n              ? \"General.Add\"\r\n              : \"General.Update\"\r\n            ) | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.subjectObjectiveId.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"course.CourseObjectives\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- CourseObjective Column -->\r\n            <ng-container matColumnDef=\"whatYouLearn\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.whatYouWillLearn\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.whatYouLearn }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"text-center\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editCourseObjective(ele)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(ele)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"3\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllCourseObjectives($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { CourseAndTeachingRequestService } from \"app/admin/services/Admin/course-teaching-request.service\";\r\nimport {\r\n  IsearchModel,\r\n  RequestData,\r\n} from \"app/admin/models/admin/course-request\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { RadioButtonModel } from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-employee-requestes\",\r\n  templateUrl: \"./course-requestes.component.html\",\r\n  styleUrls: [\"./course-requestes.component.scss\"],\r\n})\r\nexport class CourseRequestComponent implements OnInit {\r\n  totalItems: number = 0;\r\n  myForm: FormGroup;\r\n  EduCompId: any;\r\n\r\n  approveList: RadioButtonModel[] = [\r\n    {\r\n      label: \"labels.Approve\",\r\n      value: true,\r\n    },\r\n    {\r\n      label: \"labels.NotApprove\",\r\n      value: false,\r\n    },\r\n  ];\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"employee_name\",\r\n    \"courseName\",\r\n    \"reasonOfRequest\",\r\n    \"numberOfDays\",\r\n    \"status\",\r\n    // \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<RequestData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private courseAndTeachingRequestService: CourseAndTeachingRequestService,\r\n    private authserv: AuthService,\r\n    private tostar: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private languageService: LanguageService,\r\n    private ar: ActivatedRoute\r\n  ) {\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      mobile: [null],\r\n      code: [null],\r\n      email: [null],\r\n      department: [null],\r\n      jobTitle: [null],\r\n      course: [null],\r\n      approve: [],\r\n    });\r\n\r\n    this.getAllRequests(1);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllRequests(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAllRequests(page: number) {\r\n    let data: IsearchModel = {\r\n      page: page,\r\n      EduCompId: this.EduCompId,\r\n      mobile: this.FormCtrls.mobile.value?.trim(),\r\n      code: this.FormCtrls.code.value?.trim().toLowerCase(),\r\n      account_email: this.FormCtrls.email.value?.trim().toLowerCase(),\r\n      approvement: this.FormCtrls.approve.value,\r\n      courseId: this.FormCtrls.course.value,\r\n    };\r\n\r\n    this.spinner.show();\r\n    this.courseAndTeachingRequestService\r\n      .getAllCourseRequests(data)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.Requests);\r\n          this.totalItems = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  approveCourseRequest(request: RequestData, status: boolean) {\r\n    this.spinner.show();\r\n    this.courseAndTeachingRequestService\r\n      .ApproveCourseRequest(request.id, status)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((ele) => ele == request);\r\n          this.dataSource.data[i].status = status;\r\n          this.tostar.success(\"General.UpdateSuccessfully\");\r\n        } else this.tostar.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.myForm.reset();\r\n    this.getAllRequests(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"courseName\":\r\n          return this.languageService.isArabic\r\n            ? item.course_ar_name ?? item.course_en_name\r\n            : item.course_en_name ?? item.course_ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12 mb-3\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllRequests(1); dataSource.paginator = paginator\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.mobile\"\r\n                    label=\"labels.MobileNo\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.email\"\r\n                    label=\"labels.Email\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.code\"\r\n                    label=\"labels.Code\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <department-dropdown\r\n                    [control]=\"FormCtrls.department\"\r\n                  ></department-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <job-title-by-department-dropdown\r\n                    [control]=\"FormCtrls.jobTitle\"\r\n                    [departmentControl]=\"FormCtrls.department\"\r\n                  ></job-title-by-department-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <courses-by-dep-job-title\r\n                    [control]=\"FormCtrls.course\"\r\n                    [jobTitleControl]=\"FormCtrls.jobTitle\"\r\n                  ></courses-by-dep-job-title>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-radio-button\r\n                    [control]=\"FormCtrls.approve\"\r\n                    [radioList]=\"approveList\"\r\n                  ></app-radio-button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.CourseRequest\" | translate }}</mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- employee Name Column -->\r\n            <ng-container matColumnDef=\"employee_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EmployeeName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.employee_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- course Name Column -->\r\n            <ng-container matColumnDef=\"courseName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CourseName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  languageService.isArabic\r\n                    ? ele.course_ar_name ?? ele.course_en_name\r\n                    : ele.course_en_name ?? ele.course_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Reason Column -->\r\n            <ng-container matColumnDef=\"reasonOfRequest\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Reason\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span>\r\n                  {{ ele.reasonOfRequest }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- duration Column -->\r\n            <ng-container matColumnDef=\"numberOfDays\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.expectedDuration\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span>\r\n                  {{ ele.numberOfDays }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span class=\"warning\" *ngIf=\"ele.status == null\">\r\n                  {{ \"labels.Pendeing\" | translate }}\r\n                </span>\r\n                <span class=\"success\" *ngIf=\"ele.status == true\">\r\n                  {{ \"labels.Approve\" | translate }}\r\n                </span>\r\n                <span class=\"danger\" *ngIf=\"ele.status == false\">\r\n                  {{ \"labels.NotApprove\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <mat-radio-group>\r\n                  <mat-radio-button\r\n                    [value]=\"true\"\r\n                    [checked]=\"ele.status == true\"\r\n                    (click)=\"approveCourseRequest(ele, true)\"\r\n                    class=\"mr-2\"\r\n                  >\r\n                    {{ \"labels.Approve\" | translate }}\r\n                  </mat-radio-button>\r\n\r\n                  <mat-radio-button\r\n                    [value]=\"false\"\r\n                    [checked]=\"ele.status == false\"\r\n                    (click)=\"approveCourseRequest(ele, false)\"\r\n                  >\r\n                    {{ \"labels.NotApprove\" | translate }}\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllRequests($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {\r\n  IUnitAttachmentAddEditVM,\r\n  IUnitAttachmentGetVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { IUnitDataGeneralVM } from \"app/admin/models/admin/setup/course\";\r\nimport { AppStrings } from \"app/shared/data/app-strings\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-unit-attachment\",\r\n  templateUrl: \"./add-unit-attachment.component.html\",\r\n  styleUrls: [\"./add-unit-attachment.component.scss\"],\r\n})\r\nexport class AddUnitAttachmentComponent implements OnInit {\r\n  unitId: number = 0;\r\n  subject_id: number;\r\n  attachmentId: number = 0;\r\n  attach: IUnitAttachmentGetVM;\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  EduCompId: any;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private courseService: CourseService,\r\n    public authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private languageService: LanguageService,\r\n    public uploadFileService: UploadFileService,\r\n    public appStrings: AppStrings,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddUnitAttachmentComponent>\r\n  ) {\r\n    this.unitId = data.unitId;\r\n    this.subject_id = data.subject_id;\r\n    this.attachmentId = data.attachmentId;\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [this.attachmentId],\r\n      file_ar_name: [\"\", [Validators.required]],\r\n      file_en_name: [\"\", [Validators.required]],\r\n      attachFile: [null, [Validators.required]],\r\n      // attach_path: [null],\r\n      orderNum: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n\r\n    if (this.attachmentId > 0) this.getAttachmentById();\r\n\r\n    // on closing dialog by clicking outside dialog\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    let data: IUnitDataGeneralVM = null;\r\n    if (this.attachmentId) {\r\n      data = {\r\n        id: this.attachmentId,\r\n        ar_name: this.attach.file_ar_name,\r\n        en_name: this.attach.file_en_name,\r\n        type: this.appStrings.stageAttach,\r\n        order: this.attach.orderNum,\r\n      };\r\n    }\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getAttachmentById() {\r\n    this.spinner.show();\r\n    this.courseService\r\n      .getUnitAttachmentById(this.attachmentId)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.myForm.patchValue(res.fileEduUnit[0]);\r\n          this.formCtrls.attachFile.setValue(res.fileEduUnit[0].attach_path);\r\n          this.attach = res.fileEduUnit[0];\r\n          // console.log(this.myForm.value);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n\r\n    // if (\r\n    //   this.formCtrls.attachFile.value == null &&\r\n    // //   this.formCtrls.attach_path.value == null\r\n    // ) {\r\n    //   this.toastr.warning(\"labels.MustSelectFile\");\r\n    //   return;\r\n    // }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let data: IUnitAttachmentAddEditVM = {\r\n        id: this.formCtrls.id.value,\r\n        ar_name: this.formCtrls.file_ar_name.value,\r\n        en_name: this.formCtrls.file_en_name.value,\r\n        subject_id: this.subject_id,\r\n        unit_id: this.unitId,\r\n        File: this.formCtrls.attachFile.value,\r\n        orderNum: this.formCtrls.orderNum.value,\r\n      };\r\n      this.courseService.addEditUnitAttachment(data).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          data.id == 0\r\n            ? this.toastr.success(\"General.AddSuccessfully\")\r\n            : this.toastr.success(\"General.UpdateSuccessfully\");\r\n          this.myForm.reset();\r\n          this.uploadFileService.resetFileById(\"unit-attach\");\r\n          this.submitted = false;\r\n          this.myForm.patchValue(res.File_Edu_Unit[0]);\r\n          this.attach = res.File_Edu_Unit[0];\r\n          this.formCtrls.attachFile.setValue(res.File_Edu_Unit[0].attach_path);\r\n          this.attachmentId = this.formCtrls.id.value;\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<h1 mat-dialog-title>\r\n  <span *ngIf=\"attachmentId == 0\">\r\n    {{ \"course.AddAttachment\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"attachmentId > 0\">\r\n    {{ \"course.UpdateAttachment\" | translate }}\r\n    <!-- {{ courseName }} -->\r\n  </span>\r\n</h1>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.file_ar_name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.arName\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.file_en_name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.enName\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.orderNum\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.Order\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-file-input\r\n          [control]=\"formCtrls.attachFile\"\r\n          [submitted]=\"submitted\"\r\n          accept=\".pdf\"\r\n          htmlId=\"unit-attach\"\r\n        ></app-file-input>\r\n      </div>\r\n\r\n      <div class=\"col-12 center\" *ngIf=\"formCtrls.attachFile?.value\">\r\n        <span class=\"mt-1 mr-2\">\r\n          <!-- || 'image/*' -->\r\n          <embed\r\n            [src]=\"\r\n              uploadFileService.previewPicture(formCtrls.attachFile?.value)\r\n                | safe\r\n            \"\r\n            [type]=\"'application/pdf'\"\r\n            frameborder=\"0\"\r\n          />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    (click)=\"onCloseDialog()\"\r\n    class=\"btn btn-warning bg-light-warning\"\r\n  >\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n\r\n  <button\r\n    (click)=\"onSubmit()\"\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-info bg-light-info\"\r\n  >\r\n    <i class=\"fa fa-plus mr-1\" *ngIf=\"attachmentId == 0\"></i>\r\n    {{ (attachmentId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {\r\n  currentSubject,\r\n  IAddedUnitVM,\r\n  IAddUpdateUnitVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { SubjectsService } from \"app/admin/services/Admin/subjects.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-unit\",\r\n  templateUrl: \"./add-unit.component.html\",\r\n  styleUrls: [\"./add-unit.component.scss\"],\r\n})\r\nexport class AddUnitComponent implements OnInit {\r\n  unitId: number;\r\n  unit_name: string;\r\n  subjectId: number;\r\n  coverPath = \"https://via.placeholder.com/150\";\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private subjectsService: SubjectsService,\r\n    public uploadFileService: UploadFileService,\r\n    private languageService: LanguageService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddUnitComponent>\r\n  ) {\r\n    this.subjectId = data.subjectId;\r\n    this.unitId = data.unitId;\r\n    if (this.unitId > 0) this.getUnitById();\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      id: [this.unitId],\r\n      unit_ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      unit_en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      unitDescription: [\"\"],\r\n      thumbnailPic: [null],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // get Unit ById\r\n  getUnitById() {\r\n    this.spinner.show();\r\n    this.subjectsService.getUnitById(this.unitId).subscribe((res: any) => {\r\n      if (res.addedUnit) {\r\n        this.myForm.patchValue(res.addedUnit);\r\n        this.FormCtrls.thumbnailPic.setValue(\r\n          res.addedUnit.unitThumb?.attach_path\r\n        );\r\n        this.unit_name = res.addedUnit.unit_ar_name;\r\n        this.subjectId = res.addedUnit.subjectid;\r\n        // this.coverPath = res.addedUnit.unitThumb?.attach_path;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // Start: add Unit\r\n  addUpdateUnit() {\r\n    this.submitted = true;\r\n    let body = {} as IAddUpdateUnitVM;\r\n\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let addedUnit = {} as IAddedUnitVM;\r\n      let currentSubject = {} as currentSubject;\r\n\r\n      addedUnit.id = this.FormCtrls.id?.value;\r\n      addedUnit.unit_ar_name = this.FormCtrls.unit_ar_name?.value;\r\n      addedUnit.unit_en_name = this.FormCtrls.unit_en_name?.value;\r\n      addedUnit.unitDescription = this.FormCtrls.unitDescription?.value;\r\n      addedUnit.thumbnailPic = this.FormCtrls.thumbnailPic?.value;\r\n      currentSubject.subject_id = this.subjectId;\r\n      body.addedUnit = addedUnit;\r\n      body.currentSubject = currentSubject;\r\n      this.subjectsService.addUpdateUnit(body).subscribe((res) => {\r\n        if (res) {\r\n          this.dialogRef.close(res);\r\n          this.unitId == 0\r\n            ? this.msg.success(\"General.AddSuccessfully\")\r\n            : this.msg.success(\"General.UpdateSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  onChange(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      // this.coverPath = file.FileAsBase64;\r\n      this.FormCtrls.thumbnailPic.setValue(file);\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<h1 mat-dialog-title>\r\n  <span *ngIf=\"unitId == 0\">\r\n    {{ \"course.AddStage\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"unitId > 0\">\r\n    {{ \"course.UpdateStage\" | translate }} - {{ unit_name }}\r\n  </span>\r\n</h1>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"myForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-9\">\r\n        <div class=\"media\">\r\n          <img\r\n            class=\"rounded mr-3\"\r\n            [src]=\"\r\n              uploadFileService.previewPicture(FormCtrls.thumbnailPic.value) ??\r\n              coverPath\r\n            \"\r\n            width=\"70\"\r\n            height=\"70\"\r\n            alt=\"avatar\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3 d-flex align-items-center\">\r\n        <app-button-file-input\r\n          [control]=\"FormCtrls.thumbnailPic\"\r\n          [submitted]=\"submitted\"\r\n          accept=\"image/*\"\r\n          htmlId=\"file\"\r\n          label=\"course.coverPhoto\"\r\n          [showIcon]=\"false\"\r\n        ></app-button-file-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrls.unit_ar_name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.arName\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrls.unit_en_name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.enName\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-textarea\r\n          [control]=\"FormCtrls.unitDescription\"\r\n          [submitted]=\"submitted\"\r\n          label=\"course.description\"\r\n          rows=\"2\"\r\n        ></app-textarea>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"btn btn-warning bg-light-warning\"\r\n  >\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n\r\n  <button\r\n    (click)=\"addUpdateUnit()\"\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-info bg-light-info\"\r\n  >\r\n    <i class=\"fa fa-plus mr-1\" *ngIf=\"unitId == 0\"></i>\r\n    {{ (unitId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AddUnitComponent } from \"app/admin/pages/setup/courses/course-structure/add-unit/add-unit.component\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AddMaterialMainDataComponent } from \"app/admin/pages/educational-setup/EducationalSubject/add-materials/add-main-data/add-main-data.component\";\r\nimport { unit } from \"app/admin/models/admin/educations\";\r\nimport { SubjectsService } from \"app/admin/services/Admin/subjects.service\";\r\nimport { AddExamComponent } from \"app/admin/pages/exams-setup/exams/add-exam/add-exam.component\";\r\nimport { AddUnitAttachmentComponent } from \"../add-unit-attachment/add-unit-attachment.component\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IUnitDataGeneralVM } from \"app/admin/models/admin/setup/course\";\r\nimport { AppStrings } from \"app/shared/data/app-strings\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n@Component({\r\n  selector: \"app-structure-index\",\r\n  templateUrl: \"./structure-index.component.html\",\r\n  styleUrls: [\"./structure-index.component.scss\"],\r\n})\r\nexport class StructureIndexComponent implements OnInit {\r\n  units: unit[] = [];\r\n  // contain exam , lectures , attachments\r\n  unitData: IUnitDataGeneralVM[] = [];\r\n  subjectId: number;\r\n  selectedUnitId: number;\r\n  selectedUnitName: string;\r\n  selectedUnitIndex: number = 0;\r\n\r\n  EduCompId: number;\r\n  // branchId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private subjectsService: SubjectsService,\r\n    private courseService: CourseService,\r\n    private examService: ExamsService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private router: Router,\r\n    public authserv: AuthService,\r\n    private msg: MessagesService,\r\n    private languageService: LanguageService,\r\n    public uploadFileService: UploadFileService,\r\n    private dialog: MatDialog,\r\n    public appStrings: AppStrings\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.subjectId = Number(params.get(\"courseId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUnits();\r\n  }\r\n\r\n  //Get Subject Structre\r\n  getUnits() {\r\n    this.spinner.show();\r\n    this.subjectsService.getUnits(this.subjectId).subscribe((res: unit[]) => {\r\n      if (res.length > 0) {\r\n        this.units = res;\r\n        this.changeSelectedUnit(res[0], 0);\r\n        console.log(this.units);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  // get lectures & exams & attachments of selected unit\r\n  getSelectedUnitData() {\r\n    this.spinner.show();\r\n    this.courseService.getAllUnitData(this.selectedUnitId).subscribe((res) => {\r\n      if (res) {\r\n        this.unitData = res.model;\r\n        this.sortUnitDataByOrder();\r\n        // console.log(\"selected unit data\", this.unitData);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  changeSelectedUnit(unit: unit, index: number) {\r\n    this.selectedUnitIndex = index > this.units.length - 1 ? 0 : index;\r\n    if (!unit) unit = this.units[this.selectedUnitIndex];\r\n\r\n    this.unitData = [];\r\n    this.selectedUnitId = unit.id;\r\n    this.selectedUnitName = this.languageService.isArabic\r\n      ? unit.unit_ar_name\r\n      : unit.unit_en_name;\r\n    this.getSelectedUnitData();\r\n  }\r\n\r\n  openAddEditUnitDialog(unitId: number): void {\r\n    this.dialog\r\n      .open(AddUnitComponent, {\r\n        data: {\r\n          unitId: unitId > 0 ? unitId : 0,\r\n          subjectId: this.subjectId,\r\n        },\r\n        minWidth: \"60vw\",\r\n        // minHeight: \"60vh\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((unit: unit) => {\r\n        if (unit?.id > 0) {\r\n          let i = this.units.findIndex((e) => e.id == unit.id);\r\n          i < 0 ? this.units.push(unit) : (this.units[i] = unit);\r\n          // if name of selected unit changed\r\n          if (unit?.id == this.selectedUnitId || this.units.length == 1) {\r\n            this.selectedUnitName = this.languageService.isArabic\r\n              ? unit.unit_ar_name\r\n              : unit.unit_en_name;\r\n            // if the first unit to add\r\n            this.selectedUnitId = unit.id;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  openDeleteUnitDialog(unit: unit): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? unit.unit_ar_name\r\n            : unit.unit_en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUnit(unit);\r\n      });\r\n  }\r\n\r\n  deleteUnit(unit: unit) {\r\n    this.spinner.show();\r\n    this.subjectsService.deleteUnit(unit.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.units.indexOf(unit);\r\n        this.units.splice(i, 1);\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        if (unit.id == this.selectedUnitId)\r\n          this.changeSelectedUnit(null, this.selectedUnitIndex);\r\n      } else this.msg.error(res?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  /////////////// lecture | exam | attach\r\n\r\n  editUnitData(data: IUnitDataGeneralVM) {\r\n    if (data.type == this.appStrings.stageLecture)\r\n      this.openAddEditLectureDialog(data.id);\r\n    else if (data.type == this.appStrings.stageExam)\r\n      this.openAddEditExamDialog(data.id);\r\n    else if (data.type == this.appStrings.stageAttach)\r\n      this.openAddEditAttachmentDialog(data.id);\r\n  }\r\n\r\n  openAddEditLectureDialog(lectureId: number): void {\r\n    this.dialog\r\n      .open(AddMaterialMainDataComponent, {\r\n        data: {\r\n          subjectId: this.subjectId,\r\n          unitId: this.selectedUnitId,\r\n          // material id > edit\r\n          materialId: lectureId > 0 ? lectureId : null,\r\n        },\r\n        minWidth: \"60vw\",\r\n        //minHeight: \"60vh\",\r\n        panelClass: \"no-padding-dialog\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((lecture: IUnitDataGeneralVM) => {\r\n        // this.getSelectedUnitData();\r\n        if (lecture) this.afterCloseUnitDataDialogs(lecture);\r\n      });\r\n  }\r\n\r\n  openAddEditExamDialog(examId: number): void {\r\n    this.dialog\r\n      .open(AddExamComponent, {\r\n        data: {\r\n          subjectId: this.subjectId,\r\n          unitId: this.selectedUnitId,\r\n          type: 3,\r\n          // edit\r\n          examId: examId > 0 ? examId : 0,\r\n        },\r\n        minWidth: \"60vw\",\r\n        maxHeight: \"95vh\",\r\n        panelClass: \"no-padding-dialog\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((exam: IUnitDataGeneralVM) => {\r\n        // this.getSelectedUnitData();\r\n        if (exam) this.afterCloseUnitDataDialogs(exam);\r\n      });\r\n  }\r\n\r\n  openAddEditAttachmentDialog(attachmentId: number): void {\r\n    this.dialog\r\n      .open(AddUnitAttachmentComponent, {\r\n        data: {\r\n          subject_id: this.subjectId,\r\n          unitId: this.selectedUnitId,\r\n          attachmentId: attachmentId,\r\n        },\r\n        minWidth: \"60vw\",\r\n        // maxHeight: \"95vh\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((attachment: IUnitDataGeneralVM) => {\r\n        // this.getSelectedUnitData();\r\n        if (attachment) this.afterCloseUnitDataDialogs(attachment);\r\n      });\r\n  }\r\n\r\n  afterCloseUnitDataDialogs(data: IUnitDataGeneralVM) {\r\n    let i = this.unitData.findIndex((e) => e.id == data.id);\r\n    i < 0 ? this.unitData.push(data) : (this.unitData[i] = data);\r\n    this.sortUnitDataByOrder();\r\n  }\r\n\r\n  openDeleteUnitDataDialog(data: IUnitDataGeneralVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isEnglish\r\n            ? data.ar_name ?? data.en_name\r\n            : data.en_name ?? data.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUnitData(data);\r\n      });\r\n  }\r\n\r\n  deleteUnitData(data: IUnitDataGeneralVM) {\r\n    let api: Observable<Object>;\r\n    if (data.type == this.appStrings.stageLecture)\r\n      api = this.SubjectMaterialsService.deleteMaterial(data.id);\r\n    else if (data.type == this.appStrings.stageExam)\r\n      api = this.examService.deleteExam(data.id);\r\n    else if (data.type == this.appStrings.stageAttach)\r\n      api = this.courseService.deleteUnitAttachment(data.id);\r\n\r\n    this.spinner.show();\r\n    api.subscribe((response: any) => {\r\n      // if (response.data == -9) this.msg.error(response?.returnString);\r\n      if (response.data == 1 || response.returnValue == 1) {\r\n        let deletedIndex = this.unitData.findIndex((ele) => ele == data);\r\n        this.unitData.splice(deletedIndex, 1);\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n      } else this.msg.success(response?.returnString ?? \"General.error\");\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  sortUnitDataByOrder() {\r\n    this.unitData = this.unitData.sort((a, b) => a.order - b.order);\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.id;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div\r\n      class=\"content-header rounded bg-light-secondary px-1 py-2 mt-0 mb-1 d-flex justify-content-between\"\r\n    >\r\n      <!-- Add Unit -->\r\n      <a\r\n        mat-raised-button\r\n        (click)=\"openAddEditUnitDialog(0)\"\r\n        class=\"btn btn-info bg-light-info\"\r\n      >\r\n        {{ \"course.AddStage\" | translate }}\r\n      </a>\r\n\r\n      <!-- Back -->\r\n      <a\r\n        mat-raised-button\r\n        class=\"btn btn-warning bg-light-warning\"\r\n        routerLink=\"/dashboard/setup/course\"\r\n        [queryParams]=\"{\r\n          functionId: functionId\r\n        }\"\r\n      >\r\n        {{ \"General.Back\" | translate }}\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"units.length > 0\">\r\n  <div class=\"col-md-3 mt-2\">\r\n    <!--Start Units Nav tabs -->\r\n    <div *ngFor=\"let unit of units; index as i; trackBy: track\">\r\n      <mat-card\r\n        class=\"p-0\"\r\n        [class]=\"{ 'bg-light-secondary': selectedUnitId == unit.id }\"\r\n      >\r\n        <!-- dropdown actions -->\r\n        <mat-card-title>\r\n          <div\r\n            class=\"dropdown btn-group mr-1 mb-1 float-right\"\r\n            ngbDropdown\r\n            *ngIf=\"rowFunctions?.length > 0\"\r\n          >\r\n            <button\r\n              ngbDropdownToggle\r\n              type=\"button\"\r\n              class=\"btn btn-icon round mr-1 mb-0 pb-0 dropdown-toggle btn-dropdown\"\r\n            >\r\n              <i class=\"fa fa-cog font-medium-3\"></i>\r\n            </button>\r\n\r\n            <div ngbDropdownMenu class=\"dropdown-menu\" role=\"menu\">\r\n              <ng-container>\r\n                <a\r\n                  (click)=\"openAddEditUnitDialog(unit.id)\"\r\n                  class=\"dropdown-item\"\r\n                >\r\n                  <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  {{ \"General.Edit\" | translate }}\r\n                </a>\r\n\r\n                <a class=\"dropdown-item\" (click)=\"openDeleteUnitDialog(unit)\">\r\n                  <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  {{ \"General.Delete\" | translate }}\r\n                </a>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </mat-card-title>\r\n\r\n        <!-- unit card content -->\r\n        <div class=\"row\">\r\n          <div class=\"col-12 p-0\">\r\n            <a class=\"media\" (click)=\"changeSelectedUnit(unit, i)\">\r\n              <img\r\n                [src]=\"\r\n                  uploadFileService.previewPicture(unit.unitThumb?.attach_path)\r\n                \"\r\n                alt=\"profile-img\"\r\n                class=\"rounded-circle align-self-center mr-3 ml-1\"\r\n                height=\"64\"\r\n                width=\"64\"\r\n              />\r\n              <div class=\"media-body\">\r\n                <div\r\n                  class=\"col-12 d-flex flex-sm-row flex-column justify-content-start px-0 mb-sm-2\"\r\n                >\r\n                  <mat-card-subtitle\r\n                    [title]=\"\r\n                      this.languageService.isArabic ? unit.unit_ar_name : unit.unit_en_name\r\n                    \"\r\n                  >\r\n                    {{\r\n                      this.languageService.isArabic ? unit.unit_ar_name : unit.unit_en_name\r\n                    }}\r\n                  </mat-card-subtitle>\r\n                </div>\r\n                <p class=\"text-muted mb-0 mt-1 mt-sm-0 unitDescription\">\r\n                  <small [title]=\"unit.unitDescription\">\r\n                    {{ unit.unitDescription }}\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-9 mt-2\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ selectedUnitName }}\r\n\r\n        <!-- Add attachment -->\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          (click)=\"openAddEditAttachmentDialog(0)\"\r\n        >\r\n          {{ \"course.AddAttachment\" | translate }}\r\n        </a>\r\n\r\n        <!-- Add Exam -->\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          (click)=\"openAddEditExamDialog(0)\"\r\n        >\r\n          {{ \"course.AddExam\" | translate }}\r\n        </a>\r\n\r\n        <!-- Add Lecture -->\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          (click)=\"openAddEditLectureDialog(null)\"\r\n        >\r\n          {{ \"course.AddLecture\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <div class=\"mt-3\" [class.row]=\"unitData?.length > 0\">\r\n          <ng-container *ngIf=\"unitData?.length > 0; else emptyUnit\">\r\n            <div class=\"col-lg-3 col-md-4 col-12\" *ngFor=\"let data of unitData\">\r\n              <mat-card>\r\n                <mat-card-title class=\"type-text\">\r\n                  <span *ngIf=\"data.type == appStrings.stageLecture\">\r\n                    {{ \"Material.Lecture\" | translate }}\r\n                  </span>\r\n\r\n                  <span *ngIf=\"data.type == appStrings.stageExam\">\r\n                    {{ \"labels.Exam\" | translate }}\r\n                  </span>\r\n\r\n                  <span *ngIf=\"data.type == appStrings.stageAttach\">\r\n                    {{ \"course.Attachment\" | translate }}\r\n                  </span>\r\n                </mat-card-title>\r\n\r\n                <mat-card-subtitle\r\n                  [title]=\"\r\n                    this.languageService.isArabic\r\n                      ? data.ar_name ?? data.en_name\r\n                      : data.en_name ?? data.ar_name\r\n                  \"\r\n                >\r\n                  {{\r\n                    this.languageService.isArabic\r\n                      ? data.ar_name ?? data.en_name\r\n                      : data.en_name ?? data.ar_name\r\n                  }}\r\n                </mat-card-subtitle>\r\n\r\n                <mat-card-actions>\r\n                  <div class=\"row mx-0 text-center\">\r\n                    <div class=\"col-6 border-right\">\r\n                      <a\r\n                        (click)=\"editUnitData(data)\"\r\n                        class=\"success p-0\"\r\n                        matTooltip=\"edit\"\r\n                        matTooltipPosition=\"below\"\r\n                      >\r\n                        <i class=\"ft-edit-2 font-medium-3\"></i>\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div class=\"col-6\">\r\n                      <a\r\n                        (click)=\"openDeleteUnitDataDialog(data)\"\r\n                        class=\"danger p-0\"\r\n                        matTooltip=\"delete\"\r\n                        matTooltipPosition=\"below\"\r\n                      >\r\n                        <i class=\"ft-trash font-medium-3\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </mat-card-actions>\r\n              </mat-card>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <ng-template #emptyUnit class=\"text-center\">\r\n            <div class=\"alert bg-light-warning mb-2\" role=\"alert\">\r\n              <h5 class=\"alert-heading mb-2\">\r\n                {{ \"course.UnitIsEmpty\" | translate }}\r\n              </h5>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef,\r\n} from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport {\r\n  ISearchDiploma,\r\n  IDiplomaAddEditVM,\r\n  IDiplomaGetModel,\r\n  IDiplomaGetVM,\r\n} from \"app/admin/models/admin/setup/course\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-diploma\",\r\n  templateUrl: \"./diploma.component.html\",\r\n  styleUrls: [\"./diploma.component.scss\"],\r\n})\r\nexport class DiplomaComponent implements OnInit {\r\n  totalItems: number;\r\n  DiplomaId: number = 0;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"diploma_en_name\",\r\n    \"diploma_ar_name\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IDiplomaGetVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  myForm!: FormGroup;\r\n  curPage: number = 1;\r\n  submitted: boolean = false;\r\n\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  @Input() showAddOnly: boolean = false;\r\n\r\n  constructor(\r\n    private courseServ: CourseService,\r\n    private fb: FormBuilder,\r\n    route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    private dialog: MatDialog,\r\n    private languageService: LanguageService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\r\n    @Optional() public dialogRef: MatDialogRef<DiplomaComponent>\r\n  ) {\r\n    this.showAddOnly = data?.showAddOnly ?? false;\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    this.myForm = this.fb.group({\r\n      diploma_ar_name: [null, [Validators.required]],\r\n      diploma_en_name: [null, [Validators.required]],\r\n      // main_coursId: [null, [Validators.required]],\r\n      // eduCompId: [this.eduCompId],\r\n    });\r\n\r\n    // initialize dataSource | get all courses\r\n    this.getAllDiplomas(this.curPage, false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllDiplomas(1, false);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  customFilter() {\r\n    this.dataSource.filterPredicate = (data: IDiplomaGetVM, filter) => {\r\n      return (\r\n        data.diploma_ar_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.diploma_en_name?.toLocaleLowerCase().indexOf(filter) != -1\r\n      );\r\n    };\r\n  }\r\n\r\n  getAllDiplomas(p: number, search: boolean) {\r\n    this.curPage = p;\r\n\r\n    let searchData: ISearchDiploma;\r\n    if (search) {\r\n      // get by search\r\n      searchData = {\r\n        // diploma_ar_name:\r\n        //   this.FormCtrls.diploma_ar_name?.value?.trim() || null,\r\n        // diploma_en_name:\r\n        //   this.FormCtrls.diploma_en_name?.value?.trim() || null,\r\n        diplomaName:\r\n          this.FormCtrls.diploma_en_name?.value?.trim().toLowerCase() ||\r\n          this.FormCtrls.diploma_ar_name?.value?.trim().toLowerCase() ||\r\n          null,\r\n        page: this.curPage,\r\n        eduCompId: this.EduCompId || 0,\r\n      };\r\n    } else {\r\n      searchData = {\r\n        // diploma_ar_name: null,\r\n        // diploma_en_name: null,\r\n        diplomaName: null,\r\n        page: this.curPage,\r\n        eduCompId: this.EduCompId || 0,\r\n      };\r\n    }\r\n\r\n    this.spinner.show();\r\n    this.courseServ\r\n      // .getAllDiplomas<IDiplomaGetModel>(this.curPage)\r\n      .getAllDiplomasBySearch<IDiplomaGetModel>(searchData)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          let courses = response.Diploma;\r\n          this.dataSource = new MatTableDataSource(courses);\r\n          this.totalItems = response.countItems;\r\n          this.dataSource.sort = this.sort;\r\n\r\n          this.customFilter();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let Diploma: IDiplomaAddEditVM = {\r\n        subject_ar_name: this.FormCtrls.diploma_ar_name.value,\r\n        subject_en_name: this.FormCtrls.diploma_en_name.value,\r\n        eduCompId: this.EduCompId,\r\n      };\r\n      // add or edit\r\n      if (this.DiplomaId == 0) this.addDiploma(Diploma);\r\n      else this.updateDiploma(Diploma);\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  addDiploma(Diploma: IDiplomaAddEditVM) {\r\n    this.courseServ\r\n      .addDiploma<IDiplomaAddEditVM, any>(Diploma)\r\n      .subscribe((res) => {\r\n        if (res?.returnValue == 1) {\r\n          this.getAllDiplomas(1, false);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"General.AddSuccessfully\");\r\n          this.clearForm();\r\n          if (this.showAddOnly == true) this.dialogRef.close(Diploma);\r\n        } else {\r\n          this.msg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateDiploma(Diploma: IDiplomaAddEditVM) {\r\n    this.courseServ\r\n      .updateDiploma<IDiplomaAddEditVM, any>(this.DiplomaId, Diploma)\r\n      .subscribe((res) => {\r\n        if (res?.returnValue == 1) {\r\n          this.getAllDiplomas(this.curPage, false);\r\n          this.msg.success(\"General.UpdateSuccessfully\");\r\n          this.clearForm();\r\n        } else {\r\n          this.msg.error(res?.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  toEditDiploma(Diploma: IDiplomaGetVM) {\r\n    this.DiplomaId = Diploma.id;\r\n    this.myForm.patchValue(Diploma);\r\n  }\r\n\r\n  openDeleteDialog(Diploma: IDiplomaGetVM): void {\r\n    let courseName = this.languageService.isArabic\r\n      ? Diploma.diploma_ar_name\r\n      : Diploma.diploma_en_name;\r\n\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: courseName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeDiploma(Diploma.id);\r\n      });\r\n  }\r\n\r\n  removeDiploma(id: number) {\r\n    this.spinner.show();\r\n    this.courseServ.removeDiploma(id).subscribe((response) => {\r\n      if (response) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllDiplomas(this.curPage - 1, false);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllDiplomas(this.curPage, false);\r\n        }\r\n        if (this.DiplomaId == id) this.clearForm();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  resetSearch() {\r\n    this.myForm.reset();\r\n    this.getAllDiplomas(1, false);\r\n  }\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n    this.DiplomaId = 0;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"!DiplomaId\">{{ \"course.AddDiploma\" | translate }}</span>\r\n        <span *ngIf=\"DiplomaId > 0\">\r\n          {{ \"course.EditDiploma\" | translate }}\r\n        </span>\r\n\r\n        <a\r\n          *ngIf=\"!showAddOnly\"\r\n          mat-raised-button\r\n          (click)=\"getAllDiplomas(1, true); dataSource.paginator = paginator\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          *ngIf=\"!showAddOnly\"\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- english name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.diploma_en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.enName\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- arabic name -->\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.diploma_ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.arName\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- main course -->\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"course.mainCourse\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"main_coursId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <ng-container *ngFor=\"let course of mainCourses\">\r\n                        <mat-option [value]=\"course.id\">\r\n                          {{\r\n                           languageService.isArabic\r\n                              ? course.diploma_ar_name\r\n                              : course.subject_en_name\r\n                          }}\r\n                        </mat-option>\r\n                      </ng-container>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls?.main_coursId?.invalid &&\r\n                        (FormCtrls?.main_coursId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls?.main_coursId?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\" class=\"pr-1 pt-0 mb-1\">\r\n        <button\r\n          *ngIf=\"showAddOnly\"\r\n          mat-raised-button\r\n          (click)=\"dialogRef.close()\"\r\n          class=\"btn btn-warning bg-light-warning\"\r\n        >\r\n          {{ \"General.Close\" | translate }}\r\n        </button>\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"DiplomaId == 0\"></i>\r\n          {{ (DiplomaId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n        </a>\r\n        <!-- <i class=\"fa fa-pencil-square-o\"></i> -->\r\n\r\n        <button\r\n          *ngIf=\"DiplomaId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"!showAddOnly\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"course.Diplomas\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- sub course arabic name Column -->\r\n            <ng-container matColumnDef=\"diploma_ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.diploma_ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- sub course english name Column -->\r\n            <ng-container matColumnDef=\"diploma_en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course.diploma_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- main course arabic name Column -->\r\n            <!-- <ng-container matColumnDef=\"main_course_ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.mainArabicName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course?.main_course_ar_name }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- main course english name Column -->\r\n            <!-- <ng-container matColumnDef=\"main_course_en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.mainEnglishName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let course\">\r\n                {{ course?.main_course_en_name }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let course\" class=\"text-center px-2\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    class=\"success p-0\"\r\n                    (click)=\"toEditDiploma(course)\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    class=\"danger p-0\"\r\n                    (click)=\"openDeleteDialog(course)\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <!-- <a\r\n                    *ngIf=\"fun.functionName === 'Show'\"\r\n                    ngbDropdownItem\r\n                    target=\"_blank\"\r\n                    routerLink=\"../course-details/{{ course.id }}\"\r\n                    [queryParams]=\"{\r\n                      functionId: functionId\r\n                    }\"\r\n                  >\r\n                    <i class=\"fa fa-video-camera font-medium-3 mr-2\"> </i>\r\n                    {{ \"course.courseDetails\" | translate }}\r\n                  </a>\r\n\r\n                  <a\r\n                    ngbDropdownItem\r\n                    *ngIf=\"fun.functionName === 'Points'\"\r\n                    routerLink=\"../course-points/{{ course.id }}\"\r\n                    [queryParams]=\"{\r\n                      functionId: functionId\r\n                    }\"\r\n                    ><i class=\"fa fa-gift font-medium-3 mr-2\"></i>\r\n                    {{ \"course.coursePoints\" | translate }}\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'AddExam'\"\r\n                    ngbDropdownItem\r\n                    routerLink=\"/dashboard/exams-setup/exam/add-exam\"\r\n                    [queryParams]=\"{\r\n                      functionId: functionId\r\n                    }\"\r\n                  >\r\n                    <i class=\"fa fa-book font-medium-3 mr-2\"></i>\r\n                    {{ \"course.addExam\" | translate }}\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'AddSurvey'\"\r\n                    ngbDropdownItem\r\n                    routerLink=\"/dashboard/exams-setup/exam/add-survey\"\r\n                    [queryParams]=\"{\r\n                      functionId: functionId\r\n                    }\"\r\n                  >\r\n                    <i class=\"fa fa-book font-medium-3 mr-2\"></i>\r\n                    {{ \"course.addSurvey\" | translate }}\r\n                  </a> -->\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"9\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            [pageSize]=\"10\"\r\n            (page)=\"getAllDiplomas($event.pageIndex + 1, false)\"\r\n            [length]=\"totalItems\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of courses\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { CourseAndTeachingRequestService } from \"app/admin/services/Admin/course-teaching-request.service\";\r\nimport {\r\n  IsearchModel,\r\n  RequestData,\r\n} from \"app/admin/models/admin/course-request\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { RadioButtonModel } from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-teaching-requests\",\r\n  templateUrl: \"./teaching-requests.component.html\",\r\n  styleUrls: [\"./teaching-requests.component.scss\"],\r\n})\r\nexport class TeachingRequestsComponent implements OnInit {\r\n  totalItems: number = 0;\r\n  myForm: FormGroup;\r\n  EduCompId: any;\r\n\r\n  approveList: RadioButtonModel[] = [\r\n    {\r\n      label: \"labels.Approve\",\r\n      value: true,\r\n    },\r\n    {\r\n      label: \"labels.NotApprove\",\r\n      value: false,\r\n    },\r\n  ];\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"employee_name\",\r\n    \"courseName\",\r\n    \"details\",\r\n    \"numberOfDays\",\r\n    \"status\",\r\n    // \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<RequestData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private courseAndTeachingRequestService: CourseAndTeachingRequestService,\r\n    private authserv: AuthService,\r\n    private tostar: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private languageService: LanguageService,\r\n    private router: Router,\r\n    private ar: ActivatedRoute\r\n  ) {\r\n    ar.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      mobile: [null],\r\n      code: [null],\r\n      email: [null],\r\n      department: [null],\r\n      jobTitle: [null],\r\n      course: [null],\r\n      approve: [],\r\n    });\r\n\r\n    this.getAllRequests(1);\r\n  }\r\n\r\n  get myFormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllRequests(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAllRequests(page: number) {\r\n    let data: IsearchModel = {\r\n      page: page,\r\n      EduCompId: this.EduCompId,\r\n      mobile: this.myFormCtrl.mobile.value?.trim(),\r\n      code: this.myFormCtrl.code.value?.trim().toLowerCase(),\r\n      account_email: this.myFormCtrl.email.value?.trim().toLowerCase(),\r\n      approvement: this.myFormCtrl.approve.value,\r\n      courseId: this.myFormCtrl.course.value,\r\n    };\r\n\r\n    this.spinner.show();\r\n    this.courseAndTeachingRequestService\r\n      .getAllTeachingRequests(data)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.dataSource = new MatTableDataSource(res.Requests);\r\n          this.totalItems = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  approveCourseRequest(request: RequestData, status: boolean) {\r\n    // console.log(request, status);\r\n    this.spinner.show();\r\n    this.courseAndTeachingRequestService\r\n      .ApproveTeachingRequest(request.id, status)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((ele) => ele == request);\r\n          this.dataSource.data[i].status = status;\r\n          this.tostar.success(\"General.UpdateSuccessfully\");\r\n        } else this.tostar.error(res?.returnString);\r\n        if (res.courseId && status == true)\r\n          this.router.navigate(\r\n            [`dashboard/setup/course/edit-course/${res.courseId}/1`],\r\n            {\r\n              queryParams: {\r\n                functionId: this.functionId,\r\n              },\r\n            }\r\n          );\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.myForm.reset();\r\n    this.getAllRequests(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"courseName\":\r\n          return this.languageService.isArabic\r\n            ? item.course_ar_name ?? item.course_en_name\r\n            : item.course_en_name ?? item.course_ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12 mb-3\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllRequests(1); dataSource.paginator = paginator\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"myFormCtrl.mobile\"\r\n                    label=\"labels.MobileNo\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"myFormCtrl.email\"\r\n                    label=\"labels.Email\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"myFormCtrl.code\"\r\n                    label=\"labels.Code\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <department-dropdown\r\n                    [control]=\"myFormCtrl.department\"\r\n                  ></department-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <job-title-by-department-dropdown\r\n                    [control]=\"myFormCtrl.jobTitle\"\r\n                    [departmentControl]=\"myFormCtrl.department\"\r\n                  ></job-title-by-department-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <courses-by-dep-job-title\r\n                    [control]=\"myFormCtrl.course\"\r\n                    [jobTitleControl]=\"myFormCtrl.jobTitle\"\r\n                  ></courses-by-dep-job-title>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-radio-button\r\n                    [control]=\"myFormCtrl.approve\"\r\n                    [radioList]=\"approveList\"\r\n                  ></app-radio-button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.TeachRequests\" | translate }}</mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- employee Name Column -->\r\n            <ng-container matColumnDef=\"employee_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EmployeeName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.employee_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- course Name Column -->\r\n            <ng-container matColumnDef=\"courseName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CourseName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{\r\n                  languageService.isArabic\r\n                    ? ele.course_ar_name ?? ele.course_en_name\r\n                    : ele.course_en_name ?? ele.course_ar_name\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- details Column -->\r\n            <ng-container matColumnDef=\"details\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.courseDetails\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span>\r\n                  {{ ele.details }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- details Column -->\r\n            <ng-container matColumnDef=\"numberOfDays\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.numberOfDays\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span>\r\n                  {{ ele.numberOfDays }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span class=\"warning\" *ngIf=\"ele.status == null\">\r\n                  {{ \"labels.Pendeing\" | translate }}\r\n                </span>\r\n                <span class=\"success\" *ngIf=\"ele.status == true\">\r\n                  {{ \"labels.Approve\" | translate }}\r\n                </span>\r\n                <span class=\"danger\" *ngIf=\"ele.status == false\">\r\n                  {{ \"labels.NotApprove\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <mat-radio-group>\r\n                  <mat-radio-button\r\n                    [value]=\"true\"\r\n                    [checked]=\"ele.status == true\"\r\n                    (click)=\"approveCourseRequest(ele, true)\"\r\n                    class=\"mr-2\"\r\n                  >\r\n                    {{ \"labels.Approve\" | translate }}\r\n                  </mat-radio-button>\r\n\r\n                  <mat-radio-button\r\n                    [value]=\"false\"\r\n                    [checked]=\"ele.status == false\"\r\n                    (click)=\"approveCourseRequest(ele, false)\"\r\n                  >\r\n                    {{ \"labels.NotApprove\" | translate }}\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllRequests($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { ManageViewsService } from \"app/admin/services/Admin/manage-views.service\";\r\nimport {\r\n  teacherByEduCompId,\r\n  GeneralDropdownVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-exceptional-views\",\r\n  templateUrl: \"./exceptional-views.component.html\",\r\n  styleUrls: [\"./exceptional-views.component.scss\"],\r\n})\r\nexport class ExceptionalViewsComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[];\r\n  stages: GeneralDropdownVM[];\r\n  years: GeneralDropdownVM[];\r\n  subjects: GeneralDropdownVM[];\r\n  units: GeneralDropdownVM[];\r\n  lessons: GeneralDropdownVM[];\r\n  lectures: GeneralDropdownVM[];\r\n  materials: GeneralDropdownVM[];\r\n  EduCompId: number;\r\n  branchId: number;\r\n  searchForm!: FormGroup;\r\n  resetForm!: FormGroup;\r\n  submitted = false;\r\n  email?: string = \"\";\r\n  username?: string = \"\";\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private ManageViewsService: ManageViewsService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private CashPaymentService: CashPaymentService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.resetForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [\"\", [Validators.required]],\r\n      itemTypeId: [15],\r\n      paymentMethod: [\"\", [Validators.required]],\r\n      extraViews: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      paidAmount: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      toDate: [\"\", [Validators.required]],\r\n      resetTemplate: [false],\r\n      teacherUserId: [\"\"],\r\n      stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n    });\r\n  }\r\n\r\n  get resetFormCtrl() {\r\n    return this.resetForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.email = res.email;\r\n        this.username = res.username;\r\n        this.resetFormCtrl.userId.setValue(res.userId);\r\n        this.resetFormCtrl.yearId.setValue(res.yearId);\r\n      } else {\r\n        this.toastr.error(res.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  addExceptionalViews() {\r\n    this.submitted = true;\r\n    if (!this.resetFormCtrl.itemTypeId.value) {\r\n      this.toastr.warning(\"Must Select \");\r\n    }\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.ManageViewsService.addExceptionalViews(\r\n        this.EduCompId,\r\n        this.resetForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.resetForm.reset();\r\n          this.searchForm.reset();\r\n          this.toastr.success(\"تم إضافة المشاهدات\");\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  getSubjectByTeacherId() {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.subjects = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.yearId.value) {\r\n      this.GeneralService.getSubjectByTeacherId(\r\n        this.resetFormCtrl.teacherUserId.value,\r\n        this.resetFormCtrl.yearId.value\r\n      ).subscribe((res: any) => {\r\n        this.subjects = res.lsts;\r\n      });\r\n    }\r\n  }\r\n\r\n  //  getStageByTeacherId(teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.teacherUserId.value) {\r\n  //     this.EducationalService.getStageByTeacherId(teacherId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //  getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.stageId.value) {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //      });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.yearId.value) {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId: teacherId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.subjectId.value) {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n      // this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.unitId.value) {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      // this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLessonWithEnded(lessonId: any, teacherId: any) {\r\n    this.CashPaymentService.GetItemsByLessonWithEnded(\r\n      this.EduCompId,\r\n      lessonId,\r\n      this.resetFormCtrl?.itemTypeId.value,\r\n      teacherId,\r\n      true\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    this.CashPaymentService.GetItemsByUnit(\r\n      this.EduCompId,\r\n      unitId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    this.CashPaymentService.GetItemsBySubject(\r\n      this.EduCompId,\r\n      subjectId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ManageViews\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ExceptionalViews\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"resetFormCtrl.userId.value\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Student\" | translate }} - {{ username }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"resetForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"itemTypeId\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"15\">\r\n                    {{ \"Material.Lecture\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"16\">\r\n                    {{ \"labels.Exam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"3\">\r\n                    {{ \"labels.Template\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"username\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"email\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\" *ngIf=\"resetFormCtrl.itemTypeId.value == 3\">\r\n              <mat-radio-group formControlName=\"resetTemplate\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.DeleteTemplate\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.DeleteStudentAnswers\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"teacherUserId\"\r\n                  (selectionChange)=\"getSubjectByTeacherId()\"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <!--\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"stageId\"\r\n                  (selectionChange)=\"\r\n                    getYearsByStageId(resetFormCtrl.stageId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let stage of stages\"\r\n                    [value]=\"stage.Value\"\r\n                  >\r\n                    {{ stage.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"yearId\"\r\n                  (selectionChange)=\"\r\n                    getSubjectsByYearId(\r\n                      resetFormCtrl.yearId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year.Value\">\r\n                    {{ year.Text_Ar }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"subjectId\"\r\n                  (selectionChange)=\"\r\n                    getUnitsBySubjectId(resetFormCtrl.subjectId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let subject of subjects\"\r\n                    [value]=\"subject.Value\"\r\n                  >\r\n                    {{ subject.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"unitId\"\r\n                  (selectionChange)=\"\r\n                    getLessonsByUnitId(resetFormCtrl.unitId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let unit of units\" [value]=\"unit.Value\">\r\n                    {{ unit.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"lessonId\"\r\n                  (selectionChange)=\"\r\n                    GetItemsByLessonWithEnded(\r\n                      resetFormCtrl.lessonId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let lesson of lessons\"\r\n                    [value]=\"lesson.Value\"\r\n                  >\r\n                    {{ lesson.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Material.Lecture\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"itemId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let material of materials\"\r\n                    [value]=\"material.Value\"\r\n                  >\r\n                    {{ material.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.itemId.invalid &&\r\n                    (resetFormCtrl.itemId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.itemId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Balance.PaymentMethod\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"paymentMethod\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option [value]=\"1\">\r\n                    {{ \"Balance.Balance\" | translate }}</mat-option\r\n                  >\r\n                  <mat-option [value]=\"2\">\r\n                    {{ \"Balance.ManualPayment\" | translate }}</mat-option\r\n                  >\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paymentMethod.invalid &&\r\n                    (resetFormCtrl.paymentMethod.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paymentMethod.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.NumberViews\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"extraViews\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.extraViews.invalid &&\r\n                    (resetFormCtrl.extraViews.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Amount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"paidAmount\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paidAmount.invalid &&\r\n                    (resetFormCtrl.paidAmount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                <input\r\n                  matInput\r\n                  [matDatepicker]=\"toDate\"\r\n                  formControlName=\"toDate\"\r\n                />\r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"toDate\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-datepicker #toDate></mat-datepicker>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.toDate.invalid &&\r\n                    (resetFormCtrl.toDate.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.toDate.errors?.required\">\r\n                    You must choose a Date.\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"addExceptionalViews()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { GenerateCodesService } from \"../../../services/Admin/generate-codes.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { teacherBySubEduComp } from \"app/admin/models/admin/educations\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IGenerateBalanceCodesVM } from \"app/admin/models/admin/admin\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-generate-balance-codes\",\r\n  templateUrl: \"./generate-balance-codes.component.html\",\r\n  styleUrls: [\"./generate-balance-codes.component.scss\"],\r\n})\r\nexport class GenerateBalanceCodesComponent implements OnInit {\r\n  EduCompId: number;\r\n  branchId: number;\r\n  Teachers: teacherBySubEduComp[];\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private generateCodesService: GenerateCodesService,\r\n    private authService: AuthService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    public fileService: UploadFileService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n    this.myForm = this.fb.group({\r\n      teacherId: [\"\", Validators.required],\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      Amount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      Price: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId(e.EduCompId);\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  GenerateBalanceCodes() {\r\n    this.submitted = true;\r\n    this.FormCtrls.EduCompId.setValue(this.EduCompId);\r\n    let data: IGenerateBalanceCodesVM = {\r\n      Amount: this.FormCtrls.Amount.value,\r\n      Price: this.FormCtrls.Price.value,\r\n      teacherId: this.FormCtrls.teacherId.value,\r\n      EduCompId: this.EduCompId,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.generateCodesService\r\n        .GenerateBalanceCodes<IGenerateBalanceCodesVM>(data)\r\n        .subscribe((res: any) => {\r\n          //  console.log(\"GenerateBalanceCodes\", res);\r\n          this.submitted = false;\r\n          if (res.returnValue == 1) {\r\n            this.fileService.downloadFile(res.path);\r\n            this.myForm.reset();\r\n          } else this.toastr.error(res.returnString, \"Codes Not Generated !\");\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    if (EduCompId) {\r\n      this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n        (res: any) => {\r\n          this.Teachers = res.lstTeachers;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title\r\n        >{{ \"Navbar.GenerateBalanceCodes\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"teacherId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.teacherId.invalid &&\r\n                    (FormCtrls.teacherId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.teacherId.errors?.required\">\r\n                    Must Choose a value\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.CodesCount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"Amount\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Amount.invalid &&\r\n                    (FormCtrls.Amount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.Amount.errors?.required ||\r\n                      FormCtrls.Amount.errors?.bigZero\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.CodePrice\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"Price\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Price.invalid &&\r\n                    (FormCtrls.Price.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.Price.errors?.required ||\r\n                      FormCtrls.Price.errors?.bigZero\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"GenerateBalanceCodes()\"\r\n        >\r\n          {{ \"General.Generate\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<ngx-spinner></ngx-spinner>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { GiftsService } from \"app/admin/services/Admin/gifts.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-gifts-category-add\",\r\n  templateUrl: \"./gifts-category-add.component.html\",\r\n  styleUrls: [\"./gifts-category-add.component.scss\"],\r\n})\r\nexport class GiftsCategoryAddComponent implements OnInit {\r\n  giftcategoryId: number = 0;\r\n  functionId: number;\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  currentLang: string;\r\n  EduCompId: any;\r\n  rowFunctions: IRowFunctionVM[];\r\n  giftcategoryName: string;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private giftsService: GiftsService,\r\n    private translate: TranslateService,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: ToastrService\r\n  ) {\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.giftcategoryId = Number(params.get(\"giftcategoryId\"));\r\n      if (this.giftcategoryId > 0) {\r\n        this.getGiftCategoryById(this.giftcategoryId);\r\n      }\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  get engNameCtrl() {\r\n    return this.myForm.get(\"englishName\");\r\n  }\r\n  get arbNameCtrl() {\r\n    return this.myForm.get(\"arabicName\");\r\n  }\r\n  get IdCtrl() {\r\n    return this.myForm.get(\"id\");\r\n  }\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      id: [\"\"],\r\n      englishName: [\"\", Validators.required],\r\n      arabicName: [\"\", Validators.required],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n      //this.getGiftCategoryById(this.giftcategoryId);\r\n    });\r\n    this.getGiftCategoryById(this.giftcategoryId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.currentLang = lang.lang;\r\n      console.log(this.currentLang);\r\n      this.getGiftCategoryById(this.giftcategoryId);\r\n    });\r\n  }\r\n\r\n  getGiftCategoryById(giftCategoryId: number) {\r\n    this.giftsService\r\n      .getGiftCategoryByID(giftCategoryId)\r\n      .subscribe((res: any) => {\r\n        console.log(\"getcategoryById\", res);\r\n        if (this.currentLang == \"ar\") {\r\n          this.giftcategoryName = res.arbName;\r\n        } else {\r\n          this.giftcategoryName = res.engName;\r\n        }\r\n        this.giftcategoryId = res.Id;\r\n        console.log(\"gift category id\", res.Id);\r\n        console.log(\"eng\", res?.engName);\r\n        this.IdCtrl?.setValue(res.Id);\r\n        console.log(\"idc\", this.IdCtrl.value);\r\n\r\n        this.engNameCtrl.setValue(res?.engName);\r\n        this.arbNameCtrl.setValue(res?.arbName);\r\n      });\r\n  }\r\n\r\n  OnAdd() {\r\n    this.submitted = true;\r\n    let valid = this.myForm.valid;\r\n    if (valid) {\r\n      console.log(this.myForm.value);\r\n      this.spinner.show();\r\n      // console.log(\"form data\", this.myForm.value);\r\n      this.giftsService\r\n        .addEditCategory(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            if (this.IdCtrl.value == 0) {\r\n              if (this.currentLang == \"ar\") {\r\n                this.msg.success(\"تم إضافة الفئة\");\r\n              } else {\r\n                this.msg.success(\"Gift Category Added \");\r\n              }\r\n            } else {\r\n              if (this.currentLang == \"ar\") {\r\n                this.msg.success(\"تم تعديل الفئة\");\r\n              } else {\r\n                this.msg.success(\"Gift Category Updated \");\r\n              }\r\n            }\r\n          } else {\r\n            if (this.currentLang == \"ar\") {\r\n              this.msg.success(\"هذا الاسم موجود مسبقا \");\r\n            } else {\r\n              this.msg.success(\"This name is already exist\");\r\n            }\r\n          }\r\n\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"giftcategoryId == 0\">\r\n          {{ \"General.Add\" | translate }}\r\n        </span>\r\n        <span *ngIf=\"giftcategoryId > 0\">\r\n          {{ \"General.Edit\" | translate }} - {{ giftcategoryName }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../gift-category\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Gifts.EnglishName\" | translate }}</mat-label>\r\n                    <input matInput formControlName=\"englishName\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        engNameCtrl?.invalid &&\r\n                        (engNameCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"engNameCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"engNameCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Gifts.ArabicName\" | translate }}</mat-label>\r\n                    <input matInput formControlName=\"arabicName\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        arbNameCtrl?.invalid &&\r\n                        (arbNameCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"arbNameCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"arbNameCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" *ngIf=\"giftcategoryId > 0\">\r\n        <button\r\n          *ngIf=\"giftcategoryId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"OnAdd()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"giftcategoryId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"OnAdd()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  diftCategoryAddEditVM,\r\n  diftCategorySearchVM,\r\n  giftCategoryViewModel,\r\n} from \"app/admin/models/admin/gifts\";\r\nimport { GiftsService } from \"app/admin/services/Admin/gifts.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-gifts-category-index\",\r\n  templateUrl: \"./gifts-category-index.component.html\",\r\n  styleUrls: [\"./gifts-category-index.component.scss\"],\r\n})\r\nexport class GiftsCategoryIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  curPage: number = 1;\r\n  itemsCount: any;\r\n  functionId: number;\r\n  submitted: boolean = false;\r\n  EduCompId: any;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // giftCategory: giftCategoryViewModel[] = [];\r\n  dataSource: MatTableDataSource<giftCategoryViewModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns: string[] = [\"#\", \"englishName\", \"arabicName\", \"actions\"];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private giftsService: GiftsService,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private dialog: MatDialog,\r\n    private toastr: MessagesService,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      // console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.fb.group({\r\n      id: [0],\r\n      englishName: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n      arabicName: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n\r\n    this.getGiftsCategoryAll(this.curPage);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getGiftsCategoryAll(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    /* if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    } */\r\n  }\r\n\r\n  getGiftsCategoryButton(page: number) {\r\n    if (!this.FormCtrls.arabicName.value && !this.FormCtrls.englishName.value) {\r\n      this.toastr.warning(\"Gifts.enterOneField\");\r\n      return;\r\n    } else {\r\n      this.getGiftsCategorySearch(page);\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n  }\r\n\r\n  getGiftsCategorySearch(page: number) {\r\n    let searchData: diftCategorySearchVM = {\r\n      englishName: this.FormCtrls?.englishName.value?.trim().toLowerCase(),\r\n      arabicName: this.FormCtrls?.arabicName.value?.trim().toLowerCase(),\r\n      eduCompId: this.EduCompId,\r\n    };\r\n    // \"\" convert to null\r\n    Object.keys(searchData).forEach((key, index) => {\r\n      if (searchData[key] == \"\") searchData[key] = null;\r\n    });\r\n\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.giftsService\r\n      .getCategoriesSearch(page, searchData)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          // this.giftCategory = res.giftcategoryList;\r\n          // console.log(\"categories\", this.giftCategory);\r\n          this.dataSource = new MatTableDataSource(res.giftcategoryList);\r\n          this.itemsCount = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getGiftsCategoryAll(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.giftsService\r\n      .getCategoriesAll(this.EduCompId, page)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          // this.giftCategory = res.giftcategoryList;\r\n          // console.log(\"categories\", this.giftCategory);\r\n          this.dataSource = new MatTableDataSource(res.giftcategoryList);\r\n          this.itemsCount = res.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  toEditGiftCategory(giftCategory: giftCategoryViewModel) {\r\n    this.myForm.patchValue(giftCategory);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let giftCategory: diftCategoryAddEditVM = {\r\n        id: this.FormCtrls.id.value,\r\n        eduCompId: this.EduCompId,\r\n        arabicName: this.FormCtrls.arabicName.value,\r\n        englishName: this.FormCtrls.englishName.value,\r\n      };\r\n\r\n      this.spinner.show();\r\n      // console.log(\"form data\", this.myForm.value);\r\n      this.giftsService.addEditCategory(giftCategory).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          if (giftCategory.id == 0) {\r\n            this.getGiftsCategoryAll(1); // first page after add\r\n            this.dataSource.paginator = this.paginator;\r\n          } else {\r\n            this.getGiftsCategoryAll(this.curPage); // current page after update\r\n          }\r\n\r\n          this.toastr.success(\r\n            giftCategory.id == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n\r\n          this.clearForm();\r\n        } else this.toastr.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleteDialog(giftCategory: giftCategoryViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? giftCategory.arabicName ?? giftCategory.englishName\r\n            : giftCategory.englishName ?? giftCategory.arabicName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeGiftCategory(giftCategory);\r\n      });\r\n  }\r\n\r\n  removeGiftCategory(giftCategory: giftCategoryViewModel) {\r\n    this.spinner.show();\r\n    this.giftsService\r\n      .RemoveGiftCategory(giftCategory.id)\r\n      .subscribe((response: any) => {\r\n        if (response.returnValue == 2)\r\n          this.toastr.error(\"Gifts.giftCategoryDeleteError\");\r\n        else {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getGiftsCategoryAll(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getGiftsCategoryAll(this.curPage);\r\n          }\r\n          if (giftCategory.id == this.FormCtrls.id.value) this.clearForm();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.clearForm();\r\n    this.getGiftsCategoryAll(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.id?.value == 0\r\n            ? \"Gifts.addGiftsCategory\"\r\n            : \"Gifts.updateGiftsCategory\"\r\n          ) | translate\r\n        }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getGiftsCategoryButton(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.englishName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.enName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.arabicName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.arName\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          type=\"submit\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"FormCtrls.id?.value == 0\"></i>\r\n          {{\r\n            (FormCtrls.id?.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Gifts.GiftsCategory\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"englishName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.englishName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let giftcategory\">\r\n                {{ giftcategory.englishName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic name Column -->\r\n            <ng-container matColumnDef=\"arabicName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"course.arabicName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let giftcategory\">\r\n                {{ giftcategory.arabicName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let giftcategory\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"toEditGiftCategory(giftcategory)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(giftcategory)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getGiftsCategoryAll($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AppAssets } from \"app/shared/data/app-assets\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { GiftsService } from \"app/admin/services/Admin/gifts.service\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { addgiftViewModel } from \"app/admin/models/admin/gifts\";\r\n\r\n@Component({\r\n  selector: \"app-gifts-add\",\r\n  templateUrl: \"./gifts-add.component.html\",\r\n  styleUrls: [\"./gifts-add.component.scss\"],\r\n})\r\nexport class GiftsAddComponent implements OnInit {\r\n  functionId: number;\r\n  submitted = false;\r\n  giftId: number = 0;\r\n  EduCompId: any;\r\n\r\n  rowFunctions: IRowFunctionVM[];\r\n  myForm!: FormGroup;\r\n  currentLang: string;\r\n  giftArName: string;\r\n  giftEnName: string;\r\n  giftCategory: any[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private giftsService: GiftsService,\r\n    private languageService: LanguageService,\r\n    private spinner: NgxSpinnerService,\r\n    private msg: MessagesService,\r\n    public fileService: UploadFileService,\r\n    private router: Router,\r\n    public appAssets: AppAssets\r\n  ) {\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.giftId = Number(params.get(\"giftId\"));\r\n      if (this.giftId > 0) {\r\n        this.getGiftById(this.giftId);\r\n      }\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  getAllGiftCategory() {\r\n    this.giftsService\r\n      .getGiftCategoryDropDown(this.EduCompId)\r\n      .subscribe((response: any) => {\r\n        if (response) {\r\n          this.giftCategory = response;\r\n          // console.log(this.giftCategory);\r\n        }\r\n      });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get engNameCtrl() {\r\n    return this.myForm.get(\"englishName\");\r\n  }\r\n  get arbNameCtrl() {\r\n    return this.myForm.get(\"arabicName\");\r\n  }\r\n  get categoryCtrl() {\r\n    return this.myForm.get(\"giftsCategoryId\");\r\n  }\r\n  get pointsCtrl() {\r\n    return this.myForm.get(\"points\");\r\n  }\r\n  get qtyCtrl() {\r\n    return this.myForm.get(\"qty\");\r\n  }\r\n  get descriptionCtrl() {\r\n    return this.myForm.get(\"description\");\r\n  }\r\n  get IdCtrl() {\r\n    return this.myForm.get(\"id\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.fb.group({\r\n      id: [\"\"],\r\n      giftPicture: [null],\r\n      englishName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      arabicName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      giftsCategoryId: [\"\", Validators.required],\r\n      points: [\"\", Validators.required],\r\n      qty: [\"\", Validators.required],\r\n      description: [\"\"],\r\n      // EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    this.getAllGiftCategory();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllGiftCategory();\r\n    });\r\n  }\r\n\r\n  OnSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      let gift: addgiftViewModel = {\r\n        id: this.FormCtrls.id.value,\r\n        arabicName: this.FormCtrls.arabicName.value,\r\n        englishName: this.FormCtrls.englishName.value,\r\n        giftsCategoryId: this.FormCtrls.giftsCategoryId.value,\r\n        points: this.FormCtrls.points.value,\r\n        qty: this.FormCtrls.qty.value,\r\n        description: this.FormCtrls.description.value,\r\n        giftPicture: this.FormCtrls.giftPicture.value,\r\n        eduCompId: this.EduCompId,\r\n      };\r\n      // console.log(this.myForm.value);\r\n\r\n      this.spinner.show();\r\n      // console.log(\"form data\", this.myForm.value);\r\n      this.giftsService.addGift(gift).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.msg.success(\r\n            this.IdCtrl.value == 0\r\n              ? \"General.AddSuccessfully\"\r\n              : \"General.UpdateSuccessfully\"\r\n          );\r\n          this.router.navigate([\"dashboard/setup/gift-index/\"], {\r\n            queryParams: {\r\n              functionId: this.functionId,\r\n            },\r\n          });\r\n        } else this.msg.error(res?.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  getGiftById(giftId: number) {\r\n    this.giftsService.getGiftById(giftId).subscribe((res: any) => {\r\n      this.giftArName = res.arabicName;\r\n      this.giftEnName = res.englishName;\r\n\r\n      // this.giftId = res.Id;\r\n      this.IdCtrl?.setValue(this.giftId);\r\n      // console.log(\"idc\", this.IdCtrl.value);\r\n      this.engNameCtrl.setValue(res?.englishName);\r\n      this.arbNameCtrl.setValue(res?.arabicName);\r\n      this.categoryCtrl.setValue(res?.GiftCategoryId);\r\n      this.pointsCtrl.setValue(res?.points);\r\n      this.qtyCtrl.setValue(res?.qty);\r\n      this.descriptionCtrl.setValue(res?.description);\r\n      this.FormCtrls.giftPicture.setValue(res.attach_path);\r\n    });\r\n  }\r\n\r\n  DeletePic() {\r\n    if (this.FormCtrls.giftPicture.value.FileAsBase64)\r\n      return this.removeImage();\r\n\r\n    this.spinner.show();\r\n    this.giftsService.deleteAttach(this.IdCtrl.value).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        this.removeImage();\r\n      } else this.msg.error(res);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  removeImage() {\r\n    this.FormCtrls.giftPicture.setValue(null);\r\n    this.fileService.resetFileById(\"gift-photo\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"giftId == 0\"> {{ \"Gifts.AddGift\" | translate }} </span>\r\n        <span *ngIf=\"giftId > 0\">\r\n          {{ \"Gifts.UpdateGift\" | translate }} -\r\n          {{\r\n            languageService.isArabic\r\n              ? giftArName ?? giftEnName\r\n              : giftEnName ?? giftArName\r\n          }}\r\n        </span>\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../gift-index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"media mb-1\">\r\n          <img\r\n            [src]=\"\r\n              fileService.previewPicture(FormCtrls.giftPicture.value) ??\r\n              appAssets.noCoverPath\r\n            \"\r\n            alt=\"No Image\"\r\n            class=\"users-avatar-shadow avatar mr-3 rounded\"\r\n            height=\"150\"\r\n            width=\"150\"\r\n          />\r\n          <div class=\"media-body\">\r\n            <div\r\n              class=\"d-flex flex-sm-row flex-column justify-content-start px-0 mb-sm-2\"\r\n            >\r\n              <app-button-file-input\r\n                [control]=\"FormCtrls.giftPicture\"\r\n                accept=\"image/*\"\r\n                htmlId=\"gift-photo\"\r\n                label=\"Gifts.GiftPic\"\r\n                [showIcon]=\"false\"\r\n              ></app-button-file-input>\r\n\r\n              <button\r\n                *ngIf=\"FormCtrls.giftPicture.value\"\r\n                type=\"button\"\r\n                class=\"btn btn-sm bg-light-danger mb-1 mb-sm-0\"\r\n                mat-raised-button\r\n                (click)=\"DeletePic()\"\r\n              >\r\n                {{ \"Gifts.DeleteGiftPic\" | translate }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.englishName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.enName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.arabicName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.arName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Gifts.GiftsCategory\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"giftsCategoryId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let item of giftCategory\"\r\n                        [value]=\"item.Id\"\r\n                      >\r\n                        {{\r\n                          languageService.isArabic\r\n                            ? item.ArbName ?? item.EngName\r\n                            : item.EngName ?? item.ArbName\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>\r\n                      <input-validation-msg\r\n                        [control]=\"FormCtrls?.giftsCategoryId\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\"\r\n                      >\r\n                      </input-validation-msg>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.points\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"Gifts.points\"\r\n                    type=\"number\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.qty\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"Gifts.qty\"\r\n                    type=\"number\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-textarea\r\n                    [control]=\"FormCtrls.description\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"Gifts.description\"\r\n                    rows=\"2\"\r\n                  ></app-textarea>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"giftId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"OnSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"giftId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"OnSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { giftSearchModel, giftViewModel } from \"app/admin/models/admin/gifts\";\r\nimport { GiftsService } from \"app/admin/services/Admin/gifts.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n//////ya rab nefla7\r\n@Component({\r\n  selector: \"app-gifts-index\",\r\n  templateUrl: \"./gifts-index.component.html\",\r\n  styleUrls: [\"./gifts-index.component.scss\"],\r\n})\r\nexport class GiftsIndexComponent implements OnInit {\r\n  functionId: number;\r\n  myForm!: FormGroup;\r\n  itemsCount: any;\r\n  rowFunctions: IRowFunctionVM[];\r\n  curPage: number = 1;\r\n  EduCompId: any;\r\n  // gifts: giftViewModel[] = [];\r\n  dataSource: MatTableDataSource<giftViewModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  giftCategory: any[];\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"englishName\",\r\n    \"arabicName\",\r\n    \"qty\",\r\n    \"giftCategory\",\r\n    \"points\",\r\n    \"description\",\r\n    \"actions\",\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private giftsService: GiftsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private toastr: MessagesService,\r\n    private authserv: AuthService,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //    console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myForm = this.fb.group({\r\n      // page: [1],\r\n      englishName: [null],\r\n      arabicName: [null],\r\n      giftsCategoryId: [null],\r\n      points: [null],\r\n      // EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    this.getAllGiftCategory();\r\n    this.getGiftsAll(this.curPage);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllGiftCategory();\r\n      this.getGiftsAll(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"giftCategory\":\r\n          return this.languageService.isArabic\r\n            ? item.arbGiftCategory ?? item.engGiftCategory\r\n            : item.engGiftCategory ?? item.arbGiftCategory;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    /* if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    } */\r\n  }\r\n\r\n  getAllGiftCategory() {\r\n    this.giftsService\r\n      .getGiftCategoryDropDown(this.EduCompId)\r\n      .subscribe((response: any) => {\r\n        if (response) {\r\n          this.giftCategory = response;\r\n          // console.log(this.giftCategory);\r\n        }\r\n      });\r\n  }\r\n\r\n  getGiftsButton(page: number) {\r\n    if (\r\n      !this.FormCtrls.arabicName.value &&\r\n      !this.FormCtrls.englishName.value &&\r\n      !this.FormCtrls.giftsCategoryId.value &&\r\n      !this.FormCtrls.points.value\r\n    ) {\r\n      this.toastr.warning(\"Gifts.enterOneField\");\r\n      return;\r\n    } else {\r\n      this.getGiftsSearch(page);\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n  }\r\n\r\n  getGiftsSearch(page: number) {\r\n    let searchData: giftSearchModel = {\r\n      englishName: this.FormCtrls?.englishName.value?.trim().toLowerCase(),\r\n      arabicName: this.FormCtrls?.arabicName.value?.trim().toLowerCase(),\r\n      giftsCategoryId: this.FormCtrls?.giftsCategoryId.value,\r\n      points: this.FormCtrls?.points.value,\r\n    };\r\n    // \"\" convert to null\r\n    Object.keys(searchData).forEach((key, index) => {\r\n      if (searchData[key] == \"\") searchData[key] = null;\r\n    });\r\n\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.giftsService\r\n      .getGiftsSearch(this.EduCompId, page, searchData)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          // this.gifts = res.giftsList;\r\n          // console.log(\"categories\", this.gifts);\r\n          this.dataSource = new MatTableDataSource(res.giftsList);\r\n          this.itemsCount = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getGiftsAll(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    this.giftsService\r\n      .getGiftsAll(this.EduCompId, page)\r\n      .subscribe((res: any) => {\r\n        if (res) {\r\n          // this.gifts = res.giftList;\r\n          // console.log(\"gifts\", this.gifts);\r\n          this.dataSource = new MatTableDataSource(res.giftList);\r\n          this.itemsCount = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleteDialog(gift: giftViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? gift.arabicName ?? gift.englishName\r\n            : gift.englishName ?? gift.arabicName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeGiftCategory(gift);\r\n      });\r\n  }\r\n\r\n  removeGiftCategory(gift: giftViewModel) {\r\n    this.spinner.show();\r\n    this.giftsService.RemoveGift(gift.id).subscribe((response: any) => {\r\n      if (response.returnValue == 2) {\r\n        this.toastr.error(\"Gifts.giftDeleteError\");\r\n      } else {\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getGiftsAll(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getGiftsAll(this.curPage);\r\n        }\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.myForm.reset();\r\n    this.getGiftsAll(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../gift-add\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getGiftsButton(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.englishName\"\r\n                    label=\"labels.enName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.arabicName\"\r\n                    label=\"labels.arName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Gifts.GiftsCategory\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"giftsCategoryId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let item of giftCategory\"\r\n                        [value]=\"item.Id\"\r\n                      >\r\n                        {{\r\n                          languageService.isArabic\r\n                            ? item.ArbName ?? item.EngName\r\n                            : item.EngName ?? item.ArbName\r\n                        }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.points\"\r\n                    label=\"Gifts.points\"\r\n                    type=\"number\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Gifts.Gifts\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"englishName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Gifts.EnglishName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let gifts\">\r\n                {{ gifts.englishName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"arabicName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Gifts.ArabicName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let gifts\">\r\n                {{ gifts.arabicName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"qty\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Gifts.qty\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let gifts\">\r\n                {{ gifts.qty }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"giftCategory\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Gifts.GiftsCategory\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let gifts\">\r\n                {{\r\n                  languageService.isArabic\r\n                    ? gifts.arbGiftCategory ?? gifts.engGiftCategory\r\n                    : gifts.engGiftCategory ?? gifts.arbGiftCategory\r\n                }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"points\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Gifts.points\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let gifts\">\r\n                {{ gifts.points }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"description\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Gifts.description\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let gifts\">\r\n                {{ gifts.description }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let gift\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    class=\"success p-0\"\r\n                    routerLink=\"../gift-add\"\r\n                    [queryParams]=\"{\r\n                      giftId: gift.id,\r\n                      functionId: functionId\r\n                    }\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleteDialog(gift)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"8\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getGiftsAll($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControlOptions,\r\n} from \"@angular/forms\";\r\nimport { JobTitleService } from \"app/admin/services/setup/job-title.service\";\r\nimport {\r\n  IAddEditJobTitleVM,\r\n  GetJobTitleVM,\r\n  IJobTitleDepartmentVM,\r\n  JobTitleViewModel,\r\n  IJobTitleSearchVM,\r\n} from \"app/admin/models/setup/job-title\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { UpdateJobDepartmentComponent } from \"../update-job-department/update-job-department.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-job-title\",\r\n  templateUrl: \"./job-title.component.html\",\r\n  styleUrls: [\"./job-title.component.scss\"],\r\n})\r\nexport class JobTitleComponent implements OnInit {\r\n  jobTitles: JobTitleViewModel[];\r\n  myForm: FormGroup;\r\n  // departmentDates: FormGroup;\r\n  currentDate = new Date();\r\n  itemsCounts: number = 0;\r\n  curPage: number = 1;\r\n  submitted: boolean = false;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  jobTitleList = [];\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"en_name\",\r\n    \"ar_name\",\r\n    \"department\",\r\n    \"action\",\r\n  ];\r\n  dataSource: MatTableDataSource<GetJobTitleVM>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private jobTitleService: JobTitleService,\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res.length > 0) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authService.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJobTitles(this.curPage);\r\n\r\n    this.myForm = this.fb.group(\r\n      {\r\n        id: [0, Validators.required],\r\n        ar_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        en_name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        departmentsIds: [null, Validators.required],\r\n        from_date: [null], //[Validators.required]\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n\r\n    // this.departmentDates = this.fb.group({\r\n    //   departments: this.fb.array([]),\r\n    // });\r\n  }\r\n\r\n  get formCtrl() {\r\n    return this.myForm?.controls;\r\n  }\r\n\r\n  // get departmentDatesCtrl() {\r\n  //   return this.departmentDates.get(\"departments\") as FormArray;\r\n  // }\r\n  resetSearch() {\r\n    this.clearForm();\r\n    this.getAllJobTitles(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllJobTitles(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"department\":\r\n          return this.languageService.isArabic\r\n            ? item.departments[0]?.ar_name ?? item.departments[0]?.en_name\r\n            : item.departments[0]?.en_name ?? item.departments[0]?.ar_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllJobTitles(page: number) {\r\n    this.curPage = page;\r\n    let data: IJobTitleSearchVM = {\r\n      job_ar_name: this.formCtrl?.ar_name.value?.trim().toLowerCase(),\r\n      job_en_name: this.formCtrl?.en_name.value?.trim().toLowerCase(),\r\n      dep_ids: this.formCtrl?.departmentsIds.value,\r\n      fromDate: this.datePipe.transform(this.formCtrl?.from_date.value),\r\n      toDate: this.datePipe.transform(this.formCtrl?.to_date.value),\r\n    };\r\n\r\n    this.spinner.show();\r\n    this.jobTitleService\r\n      .getAllJobTitles(data, this.EduCompId, page)\r\n      .subscribe((res: JobTitleViewModel) => {\r\n        if (res) {\r\n          // console.log(res);\r\n          this.dataSource = new MatTableDataSource(res.jobTitle_list);\r\n          this.itemsCounts = res.countItems;\r\n          this.startSortingTable();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getJobTitleToEdit(JobTitle: GetJobTitleVM) {\r\n    this.myForm.patchValue(JobTitle);\r\n    let departmentsIds: number[] = [];\r\n    JobTitle.departments.forEach((e) => {\r\n      departmentsIds?.push(e.id);\r\n      //this.departmentDatesCtrl.push(this.fb.group(e));\r\n    });\r\n    this.formCtrl.departmentsIds.setValue(departmentsIds);\r\n  }\r\n\r\n  addJobTitle() {\r\n    this.submitted = true;\r\n    // if (this.formCtrl.from_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select From Date\");\r\n    //   return;\r\n    // }\r\n    // if (this.formCtrl.to_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select To Date\");\r\n    //   return;\r\n    // }\r\n    if (this.myForm.valid) {\r\n      let JobTitle: IAddEditJobTitleVM = {\r\n        id: this.formCtrl.id.value,\r\n        EduCompId: this.EduCompId,\r\n        ar_name: this.formCtrl.ar_name.value,\r\n        en_name: this.formCtrl.en_name.value,\r\n        departmentsIds: this.formCtrl.departmentsIds.value,\r\n        from_date: this.datePipe.transform(\r\n          this.formCtrl.from_date.value ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.formCtrl.to_date.value),\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.jobTitleService.addJobTitle(JobTitle).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.clearForm();\r\n          this.getAllJobTitles(1); // first page after add\r\n          this.dataSource.paginator = this.paginator;\r\n          this.toastr.success(\"General.AddSuccessfully\");\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  updateJobTitles() {\r\n    this.submitted = true;\r\n    // if (this.formCtrl.from_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select From Date\");\r\n    //   return;\r\n    // }\r\n    // if (this.formCtrl.to_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select To Date\");\r\n    //   return;\r\n    // }\r\n    if (this.myForm.valid) {\r\n      let JobTitle = {} as IAddEditJobTitleVM;\r\n      JobTitle.EduCompId = this.EduCompId;\r\n      JobTitle.ar_name = this.formCtrl.ar_name.value;\r\n      JobTitle.en_name = this.formCtrl.en_name.value;\r\n      JobTitle.departmentsIds = this.formCtrl.departmentsIds.value;\r\n      JobTitle.from_date = this.datePipe.transform(\r\n        this.formCtrl.from_date.value ?? this.currentDate\r\n      );\r\n      JobTitle.to_date = this.datePipe.transform(this.formCtrl.to_date.value);\r\n\r\n      this.spinner.show();\r\n      this.jobTitleService\r\n        .updateJobTitles(JobTitle, this.formCtrl.id.value)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.clearForm();\r\n            this.getAllJobTitles(this.curPage); // current page after update\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  // updateJobTitle() {\r\n  //   this.submitted = true;\r\n  //   let JobTitle: IUpdateJobTitleVM = {\r\n  //     id: this.formCtrl.id.value,\r\n  //     ar_name: this.formCtrl.ar_name.value,\r\n  //     en_name: this.formCtrl.en_name.value,\r\n  //     departments: this.departmentDatesCtrl.value,\r\n  //   };\r\n  //   if (this.myForm.valid) {\r\n  //     this.spinner.show();\r\n  //     this.jobTitleService\r\n  //       .editJobTitles(JobTitle, JobTitle.id)\r\n  //       .subscribe((res: any) => {\r\n  //         if (res.returnValue == 1) {\r\n  //           this.getAllJobTitles(1);\r\n  //           this.myForm.reset();\r\n  //           this.formCtrl.id.setValue(0);\r\n  //           this.submitted = false;\r\n  //           this.departmentDatesCtrl.clear();\r\n  //           this.toastr.success(\"تم تعديل البيانات بنجاح\");\r\n  //         } else this.toastr.warning(res.returnString);\r\n  //       });\r\n  //     this.spinner.hide();\r\n  //   }\r\n  // }\r\n\r\n  // onSelectDepartment($event) {\r\n  //   $event.value.forEach((id) => {\r\n  //     let idFounded = this.departmentDatesCtrl.value.find(\r\n  //       (date) => date.id == id\r\n  //     );\r\n  //     if (idFounded == undefined) {\r\n  //       let dep = this.departments.find((e) => e.id == id);\r\n  //       let item: IJobTitleDepartmentEditVM = {\r\n  //         id: dep.id,\r\n  //         ar_name: dep.ar_name,\r\n  //         from_date: null,\r\n  //         to_date: null,\r\n  //       };\r\n  //       this.departmentDatesCtrl.push(this.fb.group(item));\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // onDeselectDepartment(index: number, id: number) {\r\n  //   this.departmentDatesCtrl.removeAt(index);\r\n  //   let indexOfId = this.formCtrl.departmentsIds.value.findIndex(\r\n  //     (e) => e == id\r\n  //   );\r\n  //   this.formCtrl.departmentsIds.value.splice(indexOfId, 1);\r\n  // }\r\n\r\n  deleteJobTitle(jobTitle: GetJobTitleVM) {\r\n    this.spinner.show();\r\n    this.jobTitleService.deleteJobTitles(jobTitle.id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (jobTitle.id == this.formCtrl.id.value) this.clearForm();\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllJobTitles(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllJobTitles(this.curPage);\r\n        }\r\n      } else this.toastr.error(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  deleteJobTitleDepartment(department: IJobTitleDepartmentVM) {\r\n    this.spinner.show();\r\n    this.jobTitleService\r\n      .deleteJobTitleDepartment(department.job_title_dep_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.getAllJobTitles(this.curPage);\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateDapartmentDialog(department: IJobTitleDepartmentVM): void {\r\n    this.dialog\r\n      .open(UpdateJobDepartmentComponent, {\r\n        data: {\r\n          department,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updated) => {\r\n        if (updated) this.getAllJobTitles(this.curPage);\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(jobTitle: GetJobTitleVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? jobTitle.ar_name ?? jobTitle.en_name\r\n            : jobTitle.en_name ?? jobTitle.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJobTitle(jobTitle);\r\n      });\r\n  }\r\n\r\n  openDeleatedepartmentDialog(department: IJobTitleDepartmentVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? department.ar_name ?? department.en_name\r\n            : department.en_name ?? department.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJobTitleDepartment(department);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrl.id.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (formCtrl.id?.value == 0\r\n            ? \"JobTitle.addJobTitle\"\r\n            : \"JobTitle.updateJobTitle\"\r\n          ) | translate\r\n        }}\r\n\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"getAllJobTitles(1); dataSource.paginator = paginator\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <!-- <mat-card-title *ngIf=\"formCtrl.id.value > 0\">\r\n        {{ \"JobTitle.updateJobTitle\" | translate }}\r\n      </mat-card-title> -->\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- english name -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrl.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.enName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- arabic name -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrl.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.arName\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- depertment -->\r\n                <!--  (selectionChange)=\"onSelectDepartment($event)\" -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <department-dropdown\r\n                    [control]=\"formCtrl.departmentsIds\"\r\n                    [submitted]=\"submitted\"\r\n                    [multiple]=\"true\"\r\n                  ></department-dropdown>\r\n                </div>\r\n\r\n                <!-- Show Date If Add -->\r\n                <!-- *ngIf=\"formCtrl.id.value == 0\" -->\r\n                <ng-container>\r\n                  <!-- From date  -->\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <app-datepicker\r\n                      [control]=\"formCtrl.from_date\"\r\n                      [submitted]=\"submitted\"\r\n                      label=\"labels.FromDate\"\r\n                    ></app-datepicker>\r\n                  </div>\r\n\r\n                  <!-- to date -->\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <app-datepicker\r\n                      [control]=\"formCtrl.to_date\"\r\n                      [submitted]=\"submitted\"\r\n                      label=\"labels.ToDate\"\r\n                    ></app-datepicker>\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <!-- Show Departments dates If update -->\r\n                <!-- <ng-container *ngIf=\"formCtrl.id.value > 0\">\r\n                  <form [formGroup]=\"departmentDates\" class=\"col-12\">\r\n                    <ul class=\"list-group\" formArrayName=\"departments\">\r\n                      <li\r\n                        class=\"list-group-item\"\r\n                        *ngFor=\"\r\n                          let department of departmentDatesCtrl.controls;\r\n                          let i = index\r\n                        \"\r\n                      >\r\n                        <div class=\"row\" [formGroupName]=\"i\">\r\n                          <mat-card-subtitle>\r\n                            {{\r\n                              languageService.isArabic\r\n                                ? department.value.ar_name\r\n                                : department.value.en_name\r\n                            }}\r\n\r\n                            <button\r\n                              (click)=\"\r\n                                onDeselectDepartment(i, department.value.id)\r\n                              \"\r\n                              mat-raised-button\r\n                              class=\"btn btn-danger btn-sm float-right\"\r\n                            >\r\n                              {{ \"General.Delete\" | translate }}\r\n                            </button>\r\n                          </mat-card-subtitle>\r\n                          <input type=\"hidden\" formControlName=\"id\" />\r\n\r\n                          <div class=\"col-md-6 col-12\">\r\n                            <mat-form-field appearance=\"legacy\">\r\n                              <mat-label>\r\n                                {{ \"labels.FromDate\" | translate }}</mat-label\r\n                              >\r\n                              <input\r\n                                matInput\r\n                                [matDatepicker]=\"fromDate2\"\r\n                                formControlName=\"from_date\"\r\n                              />\r\n                              <mat-datepicker-toggle\r\n                                matSuffix\r\n                                [for]=\"fromDate2\"\r\n                              >\r\n                              </mat-datepicker-toggle>\r\n                              <mat-datepicker #fromDate2></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"col-md-6 col-12\">\r\n                            <mat-form-field appearance=\"legacy\">\r\n                              <mat-label>\r\n                                {{ \"labels.ToDate\" | translate }}</mat-label\r\n                              >\r\n                              <input\r\n                                matInput\r\n                                [matDatepicker]=\"toDate2\"\r\n                                formControlName=\"to_date\"\r\n                              />\r\n                              <mat-datepicker-toggle matSuffix [for]=\"toDate2\">\r\n                              </mat-datepicker-toggle>\r\n                              <mat-datepicker #toDate2></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </form>\r\n                </ng-container> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"formCtrl.id?.value == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          type=\"submit\"\r\n          (click)=\"addJobTitle()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"formCtrl.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          type=\"submit\"\r\n          (click)=\"updateJobTitles()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"formCtrl.id.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"JobTitle.alljob\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- id Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- english Name Column -->\r\n            <ng-container matColumnDef=\"en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobTitle\">\r\n                {{ jobTitle.en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- arabic Name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobTitle\">\r\n                {{ jobTitle.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- department Column -->\r\n            <ng-container matColumnDef=\"department\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"Departments.allDept\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let jobTitle\">\r\n                <table\r\n                  class=\"table table-sm\"\r\n                  *ngIf=\"jobTitle.departments?.length > 0\"\r\n                >\r\n                  <thead class=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\">{{ \"labels.Name\" | translate }}</th>\r\n                      <th scope=\"col\">{{ \"labels.FromDate\" | translate }}</th>\r\n                      <th scope=\"col\">{{ \"labels.ToDate\" | translate }}</th>\r\n                      <th scope=\"col\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr\r\n                      *ngFor=\"\r\n                        let department of jobTitle.departments;\r\n                        index as i\r\n                      \"\r\n                    >\r\n                      <td>\r\n                        {{\r\n                          languageService.isArabic\r\n                            ? department.ar_name ?? department.en_name\r\n                            : department.en_name ?? department.ar_name\r\n                        }}\r\n                      </td>\r\n                      <td>{{ department.from_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>{{ department.to_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>\r\n                        <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                          <a\r\n                            *ngIf=\"fun.functionName === 'UpdateJobDepartment'\"\r\n                            (click)=\"updateDapartmentDialog(department)\"\r\n                            class=\"success p-0\"\r\n                          >\r\n                            <i class=\"ft-edit-2 mr-2\"></i>\r\n                          </a>\r\n\r\n                          <a\r\n                            *ngIf=\"fun.functionName === 'deleteJobDepartment'\"\r\n                            (click)=\"openDeleatedepartmentDialog(department)\"\r\n                            class=\"danger p-0\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-times fa fa-white\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </a>\r\n                        </ng-container>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- action Column -->\r\n            <ng-container matColumnDef=\"action\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let jobTitle\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"getJobTitleToEdit(jobTitle)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(jobTitle)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllJobTitles($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of departments\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  IJobTitleDepartmentVM,\r\n  IUpdateJobTitleDepartmentVM,\r\n} from \"app/admin/models/setup/job-title\";\r\nimport { JobTitleService } from \"app/admin/services/setup/job-title.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-update-job-department\",\r\n  templateUrl: \"./update-job-department.component.html\",\r\n  styleUrls: [\"./update-job-department.component.scss\"],\r\n})\r\nexport class UpdateJobDepartmentComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  department: IJobTitleDepartmentVM;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private fb: FormBuilder,\r\n    private jobTitleService: JobTitleService,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private datePipe: DatePipe,\r\n    public languageService: LanguageService,\r\n    public dialogRef: MatDialogRef<UpdateJobDepartmentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.department = data.department;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        from_date: [null, [Validators.required]],\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n    this.myForm.patchValue(this.department);\r\n  }\r\n\r\n  get formCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  update_JobTitle_Department() {\r\n    this.submitted = true;\r\n    // if (this.formCtrl.from_date.value == null) {\r\n    //   this.toastr.warning(\"Must Select From Date\");\r\n    //   return;\r\n    // }\r\n\r\n    if (this.myForm.valid) {\r\n      let department: IUpdateJobTitleDepartmentVM = {\r\n        from_date: this.datePipe.transform(this.formCtrl.from_date.value),\r\n        to_date: this.datePipe.transform(this.formCtrl.to_date.value),\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.jobTitleService\r\n        .update_JobTitle_Department(\r\n          department,\r\n          this.department.job_title_dep_id\r\n        )\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.dialogRef.close(true);\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  {{ \"JobTitle.updateJobTitleDepartment\" | translate }} -\r\n  {{\r\n    languageService.isArabic\r\n      ? department.ar_name ?? department.en_name\r\n      : department.en_name ?? department.ar_name\r\n  }}\r\n</h1>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"myForm\" class=\"row\">\r\n    <!-- From date  -->\r\n    <div class=\"col-12\">\r\n      <app-datepicker\r\n        [control]=\"formCtrl.from_date\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.FromDate\"\r\n      ></app-datepicker>\r\n    </div>\r\n\r\n    <!-- to date -->\r\n    <div class=\"col-12\">\r\n      <app-datepicker\r\n        [control]=\"formCtrl.to_date\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.ToDate\"\r\n      ></app-datepicker>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button [mat-dialog-close]=\"false\" class=\"btn btn-danger\">\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n\r\n  <button\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-info\"\r\n    (click)=\"update_JobTitle_Department()\"\r\n  >\r\n    {{ \"General.Save\" | translate }}\r\n  </button>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { ManageViewsService } from \"./../../../services/Admin/manage-views.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  teacherByEduCompId,\r\n  GeneralDropdownVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-manage-views\",\r\n  templateUrl: \"./manage-views.component.html\",\r\n  styleUrls: [\"./manage-views.component.scss\"],\r\n})\r\nexport class ManageViewsComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[] = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  subjects: GeneralDropdownVM[] = [];\r\n  units: GeneralDropdownVM[] = [];\r\n  lessons: GeneralDropdownVM[] = [];\r\n  lectures: GeneralDropdownVM[] = [];\r\n  materials: GeneralDropdownVM[] = [];\r\n  EduCompId: number;\r\n  branchId: number;\r\n  searchForm!: FormGroup;\r\n  resetForm!: FormGroup;\r\n  submitted = false;\r\n  email?: string = \"\";\r\n  username?: string = \"\";\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private ManageViewsService: ManageViewsService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private CashPaymentService: CashPaymentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.resetForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [\"\", [Validators.required]],\r\n      itemTypeId: [6],\r\n      paymentMethod: [\"\", [Validators.required]],\r\n      extraViews: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      paidAmount: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      resetTemplate: [false],\r\n      teacherUserId: [\"\"],\r\n      // stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n    });\r\n  }\r\n\r\n  get resetFormCtrl() {\r\n    return this.resetForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.email = res.email;\r\n        this.username = res.username;\r\n        this.resetFormCtrl.userId.setValue(res.userId);\r\n        this.resetFormCtrl.yearId.setValue(res.yearId);\r\n      } else {\r\n        this.toastr.error(res.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  resetViews() {\r\n    this.submitted = true;\r\n    if (!this.resetFormCtrl.userId.value) {\r\n      this.toastr.warning(\"Must Choose Student\");\r\n      return;\r\n    }\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.ManageViewsService.resetViews(\r\n        this.EduCompId,\r\n        this.resetForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.resetForm.reset();\r\n          this.searchForm.reset();\r\n          this.resetFormCtrl?.itemTypeId.setValue(6);\r\n          this.toastr.success(\"تم إضافة المشاهدات\");\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  getSubjectByTeacherId() {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.subjects = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.yearId.value) {\r\n      this.GeneralService.getSubjectByTeacherId(\r\n        this.resetFormCtrl.teacherUserId.value,\r\n        this.resetFormCtrl.yearId.value\r\n      ).subscribe((res: any) => {\r\n        this.subjects = res.lsts;\r\n      });\r\n    }\r\n  }\r\n\r\n  //  getStageByTeacherId(teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.teacherUserId.value) {\r\n  //     this.EducationalService.getStageByTeacherId(teacherId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //  getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.stageId.value) {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //      });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.yearId.value) {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId: teacherId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.subjectId.value) {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.unitId.value) {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLesson(lessonId: any, teacherId: any) {\r\n    if (!this.resetFormCtrl?.itemTypeId.value) {\r\n      this.toastr.warning(\"يجب اختيار النوع\");\r\n      return;\r\n    }\r\n    if (lessonId) {\r\n      this.CashPaymentService.GetItemsByLesson(\r\n        this.EduCompId,\r\n        lessonId,\r\n        this.resetFormCtrl?.itemTypeId.value,\r\n        teacherId\r\n      ).subscribe((res: any) => {\r\n        this.materials = res;\r\n      });\r\n    }\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    this.CashPaymentService.GetItemsByUnit(\r\n      this.EduCompId,\r\n      unitId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    this.CashPaymentService.GetItemsBySubject(\r\n      this.EduCompId,\r\n      subjectId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ManageViews\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ManageViews\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"resetFormCtrl.userId.value\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Student\" | translate }} - {{ username }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"resetForm\" class=\"container-fluid\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"itemTypeId\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"6\">\r\n                    {{ \"Material.Lecture\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"5\">\r\n                    {{ \"labels.Exam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"11\">\r\n                    {{ \"labels.Template\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"username\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"email\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\" *ngIf=\"resetFormCtrl.itemTypeId.value == 11\">\r\n              <mat-radio-group formControlName=\"resetTemplate\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.DeleteTemplate\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.DeleteStudentAnswers\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"teacherUserId\"\r\n                  (selectionChange)=\"getSubjectByTeacherId()\"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!-- <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"stageId\"\r\n                  (selectionChange)=\"\r\n                    getYearsByStageId(resetFormCtrl.stageId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let stage of stages\"\r\n                    [value]=\"stage.Value\"\r\n                  >\r\n                    {{ stage.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"yearId\"\r\n                  (selectionChange)=\"\r\n                    getSubjectsByYearId(\r\n                      resetFormCtrl.yearId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year.Value\">\r\n                    {{ year.Text_Ar }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"subjectId\"\r\n                  (selectionChange)=\"\r\n                    getUnitsBySubjectId(resetFormCtrl.subjectId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let subject of subjects\"\r\n                    [value]=\"subject.Value\"\r\n                  >\r\n                    {{ subject.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"unitId\"\r\n                  (selectionChange)=\"\r\n                    getLessonsByUnitId(resetFormCtrl.unitId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let unit of units\" [value]=\"unit.Value\">\r\n                    {{ unit.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"lessonId\"\r\n                  (selectionChange)=\"\r\n                    GetItemsByLesson(\r\n                      resetFormCtrl.lessonId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let lesson of lessons\"\r\n                    [value]=\"lesson.Value\"\r\n                  >\r\n                    {{ lesson.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Material.Lecture\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"itemId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let material of materials\"\r\n                    [value]=\"material.Value\"\r\n                  >\r\n                    {{ material.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.itemId.invalid &&\r\n                    (resetFormCtrl.itemId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.itemId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Balance.PaymentMethod\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"paymentMethod\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option [value]=\"1\">\r\n                    {{ \"Balance.Balance\" | translate }}</mat-option\r\n                  >\r\n                  <mat-option [value]=\"2\">\r\n                    {{ \"Balance.ManualPayment\" | translate }}</mat-option\r\n                  >\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paymentMethod.invalid &&\r\n                    (resetFormCtrl.paymentMethod.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paymentMethod.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.NumberViews\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"extraViews\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.extraViews.invalid &&\r\n                    (resetFormCtrl.extraViews.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Amount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"paidAmount\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paidAmount.invalid &&\r\n                    (resetFormCtrl.paidAmount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"resetViews()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { forkJoin } from \"rxjs\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  Form,\r\n  FormBuilder,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { ICahsPaymentsTableMV } from \"app/admin/models/admin/cash-payment-table\";\r\nimport {\r\n  ErrorClass,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralDropdownVM } from \"app/admin/models/admin/educations\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\ndeclare var $: any;\r\n@Component({\r\n  selector: \"app-manual-cash-payment\",\r\n  templateUrl: \"./manual-cash-payment.component.html\",\r\n  styleUrls: [\"./manual-cash-payment.component.scss\"],\r\n})\r\nexport class ManualCashPaymentComponent implements OnInit {\r\n  Errors: ErrorClass[] = [];\r\n  Teachers: teacherByEduCompId[] = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  subjects: GeneralDropdownVM[] = [];\r\n  units: GeneralDropdownVM[] = [];\r\n  lessons: GeneralDropdownVM[] = [];\r\n  lectures: GeneralDropdownVM[] = [];\r\n  materials: GeneralDropdownVM[] = [];\r\n  userPaymentsHistories: ICahsPaymentsTableMV[] = [];\r\n  EduCompId: any;\r\n  branchId: any;\r\n  searchForm!: FormGroup;\r\n  paymentForm!: FormGroup;\r\n  submitted = false;\r\n  selectedUserDate: any = \"\";\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  PaymentByExcel: any = null;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private CashPaymentService: CashPaymentService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authService.getEduCompId();\r\n    this.branchId = this.authService.getBranchId();\r\n    this.getTeachersByEducompId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      code: [\"\"],\r\n      mobile: [\"\"],\r\n      centerCode: [\"\"],\r\n      searchedMail: [\"\"],\r\n      searchedName: [\"\"],\r\n    });\r\n\r\n    this.paymentForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [\"\"],\r\n      itemTypeId: [6],\r\n      teacherUserId: [\"\", Validators.required],\r\n      balance: [\"\"],\r\n      userMobile: [\"\"],\r\n      userEmail: [\"\"],\r\n      userName: [\"\"],\r\n      currentBalance: [\"\"],\r\n      uploadedFile: [\"\"],\r\n      itemPrice: [\"\"],\r\n      isPaymentExcel: [false],\r\n\r\n      // stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n    });\r\n\r\n    this.paymentForm.valueChanges.subscribe((e) => {\r\n      this.getFormValidationErrors(this.paymentForm);\r\n    });\r\n\r\n    this.paymentFormCtrl.userMobile.disable();\r\n    this.paymentFormCtrl.userEmail.disable();\r\n    this.paymentFormCtrl.userName.disable();\r\n    this.paymentFormCtrl.currentBalance.disable();\r\n    this.paymentFormCtrl.itemPrice.disable();\r\n    this.isPaymentExcelValidators();\r\n    this.itemTypeIdValidators();\r\n  }\r\n\r\n  get paymentFormCtrl() {\r\n    return this.paymentForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n  CashPaymentSearch() {\r\n    this.spinner.show();\r\n    this.CashPaymentService.CashPaymentSearch(\r\n      this.searchForm.value,\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      console.log(\"PaymentSearch\", res);\r\n      if (res.model?.userId) {\r\n        //  this.Teachers = res.lstTeachers;\r\n        this.paymentFormCtrl.userId.setValue(res.model.userId);\r\n        this.paymentFormCtrl.yearId.setValue(res.model.yearId);\r\n        this.getPaymentsHistory();\r\n        this.paymentFormCtrl.userMobile.setValue(res.model.userMobile);\r\n        this.paymentFormCtrl.userEmail.setValue(res.model.userEmail);\r\n        this.paymentFormCtrl.userName.setValue(res.model.userName);\r\n        this.paymentFormCtrl.currentBalance.setValue(res.model.currentBalance);\r\n      } else if (res.returnValue == 0) this.toastr.info(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  AddCashPayment() {\r\n    this.itemTypeIdValidators();\r\n    this.isPaymentExcelValidators();\r\n\r\n    this.submitted = true;\r\n    // console.log('add', this.paymentForm.value);\r\n    let valid = this.paymentForm.valid;\r\n    if (valid) {\r\n      this.spinner.show();\r\n      this.CashPaymentService.CashPaymentPost(\r\n        this.EduCompId,\r\n        this.paymentForm.value\r\n      ).subscribe((res: any) => {\r\n        //  console.log('AddCashPayment', res);\r\n        if (res.returnValue == 1 && res.returnString == \"Success\") {\r\n          this.toastr.success(\"تم الدفع \");\r\n          this.getPaymentsHistory();\r\n          this.CashPaymentSearch();\r\n          this.submitted = false;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  ManualPaymentByExcel() {\r\n    this.spinner.show();\r\n\r\n    let data = {\r\n      itemId: this.paymentFormCtrl.itemId.value,\r\n      itemTypeId: this.paymentFormCtrl.itemTypeId.value,\r\n      uploadedFile: this.paymentFormCtrl.uploadedFile.value,\r\n    };\r\n    console.log(\"Add\", data);\r\n    this.CashPaymentService.ManualPaymentByExcel(\r\n      this.EduCompId,\r\n      data\r\n    ).subscribe((res: any) => {\r\n      console.log(\"ByExcel\", res);\r\n      if (res.returnValue == 1) {\r\n        this.toastr.success(\"تم الدفع \");\r\n      } else console.log(\"ERROR_UPLOAD_EXCEL\", res);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getPaymentsHistory() {\r\n    this.spinner.show();\r\n    this.CashPaymentService.getPaymentsHistory(\r\n      this.p,\r\n      this.paymentFormCtrl.userId.value\r\n    ).subscribe((res: any) => {\r\n      //console.log('getPaymentsHistory', res);\r\n      this.userPaymentsHistories = res.userPayments;\r\n      this.itemsCount = res.totalCount;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //  Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // getStageByTeacherId(teacherUserId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (teacherUserId != \"\") {\r\n  //     this.EducationalService.getStageByTeacherId(teacherUserId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (stageId != \"\") {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherUserId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (yearId != \"\") {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  getSubjectByTeacherId() {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.subjects = [];\r\n    this.materials = [];\r\n    if (this.paymentFormCtrl.yearId.value) {\r\n      this.GeneralService.getSubjectByTeacherId(\r\n        this.paymentFormCtrl.teacherUserId.value,\r\n        this.paymentFormCtrl.yearId.value\r\n      ).subscribe((res: any) => {\r\n        this.subjects = res.lsts;\r\n      });\r\n    }\r\n  }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (SubjectId != \"\") {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n\r\n      this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (unitId != \"\") {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLesson(lessonId: any) {\r\n    this.CashPaymentService.GetItemsByLesson(\r\n      this.EduCompId,\r\n      lessonId,\r\n      this.paymentFormCtrl.itemTypeId.value,\r\n      this.paymentFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    this.CashPaymentService.GetItemsByUnit(\r\n      this.EduCompId,\r\n      unitId,\r\n      this.paymentFormCtrl.itemTypeId.value,\r\n      this.paymentFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    this.CashPaymentService.GetItemsBySubject(\r\n      this.EduCompId,\r\n      subjectId,\r\n      this.paymentFormCtrl.itemTypeId.value,\r\n      this.paymentFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  geItemPrice() {\r\n    if (\r\n      this.paymentFormCtrl.isPaymentExcel.value == false &&\r\n      this.paymentFormCtrl.itemId.value\r\n    ) {\r\n      this.CashPaymentService.geItemPrice(\r\n        this.paymentFormCtrl.itemId.value,\r\n        this.paymentFormCtrl.userId.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1)\r\n          this.paymentFormCtrl.itemPrice.setValue(res.price);\r\n        else console.log(\"gerMaterialPrice\", res);\r\n      });\r\n    }\r\n  }\r\n\r\n  isPaymentExcelValidators() {\r\n    let isPaymentExcel = this.paymentFormCtrl.isPaymentExcel.value;\r\n    if (isPaymentExcel == false) {\r\n      this.paymentFormCtrl.uploadedFile.setValue(\"\");\r\n      this.paymentFormCtrl.uploadedFile.clearValidators();\r\n    }\r\n\r\n    if (isPaymentExcel == true) {\r\n      this.paymentFormCtrl.uploadedFile.setValidators([Validators.required]);\r\n    }\r\n\r\n    this.paymentFormCtrl.itemTypeId.updateValueAndValidity();\r\n    this.paymentFormCtrl.uploadedFile.updateValueAndValidity();\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.userId;\r\n  }\r\n\r\n  getFormValidationErrors(form: FormGroup) {\r\n    let totalErrors = 0;\r\n\r\n    this.Errors = [];\r\n\r\n    Object.keys(form.controls).forEach((key) => {\r\n      const controlErrors: ValidationErrors = form.get(key).errors;\r\n      if (controlErrors != null) {\r\n        totalErrors++;\r\n        Object.keys(controlErrors).forEach((keyError) => {\r\n          // Errors.push(controlErrors[keyError]);\r\n          this.Errors.push({ key: key, error: keyError });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  itemTypeIdValidators() {\r\n    let itemTypeId = this.paymentFormCtrl.itemTypeId.value;\r\n    if (itemTypeId == 4) {\r\n      this.paymentFormCtrl.balance.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n      this.paymentFormCtrl.itemId.reset();\r\n      this.paymentFormCtrl.itemId.clearValidators();\r\n    }\r\n\r\n    if (itemTypeId != 4) {\r\n      this.paymentFormCtrl.itemId.setValidators([Validators.required]);\r\n      this.paymentFormCtrl.balance.reset();\r\n      this.paymentFormCtrl.balance.clearValidators();\r\n    }\r\n\r\n    this.paymentFormCtrl.itemId.updateValueAndValidity();\r\n    this.paymentFormCtrl.balance.updateValueAndValidity();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder.replace(\r\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\",\r\n            \"\"\r\n          ),\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.PaymentByExcel = data;\r\n        console.log(data);\r\n        this.paymentForm.controls[\"uploadedFile\"].setValue(data);\r\n      };\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Balance.ManualPayment\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"searchForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"searchedName\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"code\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"centerCode\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"searchedMail\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          (click)=\"CashPaymentSearch()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Balance.ManualPayment\" | translate }} -\r\n        {{ paymentFormCtrl.userName?.value }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"paymentForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group formControlName=\"isPaymentExcel\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.Individually\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.group\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- Student Data -->\r\n                <ng-container *ngIf=\"!paymentFormCtrl.isPaymentExcel.value\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userName\">الإسم بالكامل</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userName\"\r\n                      formControlName=\"userName\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userEmail\">البريد الإلكترونى</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userEmail\"\r\n                      formControlName=\"userEmail\"\r\n                      type=\"email\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"currentBalance\">الرصيد الحالي</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"currentBalance\"\r\n                      formControlName=\"currentBalance\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userMobile\">رقم الموبايل</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userMobile\"\r\n                      formControlName=\"userMobile\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <!--  items TypeId Lecture - Exam - Template - Balance -->\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group\r\n                    name=\"itemTypeId\"\r\n                    formControlName=\"itemTypeId\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"6\">\r\n                        {{ \"labels.Lecture\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <ng-container *ngIf=\"!paymentFormCtrl.isPaymentExcel.value\">\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button [value]=\"5\">\r\n                          {{ \"labels.Exam\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button [value]=\"11\">\r\n                          {{ \"labels.Template\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button [value]=\"4\">\r\n                          {{ \"labels.Balance\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                    </ng-container>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.itemTypeId.value != 4\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"teacherUserId\"\r\n                        (selectionChange)=\"getSubjectByTeacherId()\"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let teacher of Teachers\"\r\n                          [value]=\"teacher.teacherUserId\"\r\n                        >\r\n                          {{ teacher.teacher_ar_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <!--\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"stageId\"\r\n                        (selectionChange)=\"\r\n                          getYearsByStageId(paymentFormCtrl.stageId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let stage of stages\"\r\n                          [value]=\"stage.Value\"\r\n                        >\r\n                          {{ stage.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"yearId\"\r\n                        (selectionChange)=\"\r\n                          getSubjectsByYearId(\r\n                            paymentFormCtrl.yearId.value,\r\n                            paymentFormCtrl.teacherUserId.value\r\n                          )\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let year of years\"\r\n                          [value]=\"year.Value\"\r\n                        >\r\n                          {{ year.Text_Ar }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div> -->\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"subjectId\"\r\n                        (selectionChange)=\"\r\n                          getUnitsBySubjectId(paymentFormCtrl.subjectId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let subject of subjects\"\r\n                          [value]=\"subject.Value\"\r\n                        >\r\n                          {{ subject.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"unitId\"\r\n                        (selectionChange)=\"\r\n                          getLessonsByUnitId(paymentFormCtrl.unitId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let unit of units\"\r\n                          [value]=\"unit.Value\"\r\n                        >\r\n                          {{ unit.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"lessonId\"\r\n                        (selectionChange)=\"\r\n                          GetItemsByLesson(paymentFormCtrl.lessonId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let lesson of lessons\"\r\n                          [value]=\"lesson.Value\"\r\n                        >\r\n                          {{ lesson.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"Material.Lecture\" | translate\r\n                      }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"itemId\"\r\n                        (selectionChange)=\"geItemPrice()\"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let material of materials\"\r\n                          [value]=\"material.Value\"\r\n                        >\r\n                          {{ material.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          paymentFormCtrl.itemId.invalid &&\r\n                          (paymentFormCtrl.itemId.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"paymentFormCtrl.itemId.errors?.required\">\r\n                          {{ \"labels.MustChoosevalue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-label>{{ \"labels.Price\" | translate }}</mat-label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"itemPrice\"\r\n                      formControlName=\"itemPrice\"\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.itemTypeId.value == 4\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"teacherUserId\"\r\n                        (selectionChange)=\"\r\n                          getStageByTeacherId(\r\n                            paymentFormCtrl.teacherUserId.value\r\n                          )\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let teacher of Teachers\"\r\n                          [value]=\"teacher.teacherUserId\"\r\n                        >\r\n                          {{ teacher.teacher_ar_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"Balance.Balance\" | translate }}</mat-label>\r\n                      <input matInput type=\"number\" formControlName=\"balance\" />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          paymentFormCtrl.balance.invalid &&\r\n                          (paymentFormCtrl.balance.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"paymentFormCtrl.balance.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"paymentFormCtrl.balance.errors?.minusNum\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"this.paymentForm\"></span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.isPaymentExcel.value\">\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <label for=\"uploadedFile\">Excel Sheet</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".xlsx,.xls\"\r\n                      (change)=\"onChange($event)\"\r\n                      name=\"uploadedFile\"\r\n                      class=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"paymentFormCtrl.isPaymentExcel.value == false\"\r\n          id=\"submitButton\"\r\n          type=\"button\"\r\n          (click)=\"AddCashPayment()\"\r\n          class=\"btn btn-primary pull-left font-dro\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i> اشتراك\r\n        </button>\r\n        <button\r\n          *ngIf=\"paymentFormCtrl.isPaymentExcel.value == true\"\r\n          id=\"submitButton\"\r\n          type=\"button\"\r\n          (click)=\"ManualPaymentByExcel()\"\r\n          class=\"btn btn-primary pull-left font-dro\"\r\n        >\r\n          <i class=\"fa fa-upload\"></i> Upload\r\n        </button>\r\n        <!-- <span>\r\n          <ng-container *ngFor=\"let error of this.Errors\">\r\n            {{ error.key }} - {{ error.error }}\r\n          </ng-container>\r\n        </span> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"userPaymentsHistories?.length != 0\">\r\n  <table class=\"table table-striped table-hover table-full-width rtl\">\r\n    <thead>\r\n      <tr>\r\n        <th>النوع</th>\r\n        <th>الاسم</th>\r\n        <th>المادة</th>\r\n        <th>السنتر</th>\r\n        <th>المدرس</th>\r\n        <th>القيمه</th>\r\n        <th>طريقة الاشتراك</th>\r\n        <th>التاريخ</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        *ngFor=\"\r\n          let payment of userPaymentsHistories\r\n            | paginate\r\n              : {\r\n                  itemsPerPage: 10,\r\n                  currentPage: p,\r\n                  totalItems: itemsCount\r\n                };\r\n          let i = index;\r\n          trackBy: track\r\n        \"\r\n      >\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td>{{ payment?.centerName }}</td>\r\n        <td>{{ payment?.teacherName }}</td>\r\n        <td>{{ payment?.amount }}</td>\r\n        <td>{{ payment?.payment_method }}</td>\r\n        <td>{{ payment?.Date | NewDate }} - {{ payment?.Date | Time }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <div class=\"paginator-box\" *ngIf=\"itemsCount > 10\">\r\n    <pagination-controls\r\n      dir=\"ltr\"\r\n      [maxSize]=\"maxSize\"\r\n      (pageChange)=\"p = $event; getPaymentsHistory()\"\r\n      previousLabel=\"\"\r\n      nextLabel=\"\"\r\n    >\r\n    </pagination-controls>\r\n  </div>\r\n</ng-container>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { GeneralDropdownVM } from \"app/admin/models/admin/educations\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { PointsService } from \"./../../../services/Admin/points.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  IAddExamPointsVM,\r\n  IAddLecturesPointsVM,\r\n  ILecturePointVM,\r\n  IPointSystemVM,\r\n} from \"app/admin/models/admin/point\";\r\nimport { teacherByEduCompId } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-points-setup\",\r\n  templateUrl: \"./points-setup.component.html\",\r\n  styleUrls: [\"./points-setup.component.scss\"],\r\n})\r\nexport class PointsSetupComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[];\r\n  subjects: GeneralDropdownVM[];\r\n  lecturePoints: IPointSystemVM[];\r\n  ExamPoints: IPointSystemVM[];\r\n  EduCompId: any;\r\n\r\n  lecturesForm!: FormGroup;\r\n  lecsubmitted = false;\r\n\r\n  ExamForm!: FormGroup;\r\n  ExamSubmitted = false;\r\n\r\n  LecturePage: number = 1;\r\n  ExamPage: number = 1;\r\n  maxSize = 9;\r\n  SubjectId: number;\r\n  teacherUserId: number;\r\n  courseId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private toastr: MessagesService,\r\n    private authserv: AuthService,\r\n    private GeneralService: GeneralService,\r\n    private PointsService: PointsService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.courseId = Number(params.get(\"courseId\"));\r\n      console.log(this.courseId);\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n    this.getExamPoints();\r\n    this.getLeturePoints();\r\n    this.getTeachersByEducompId();\r\n\r\n    this.lecturesForm = this.fb.group({\r\n      ByQuestion: [false, [Validators.required]],\r\n      //from: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      //to: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      //value: [0, [Validators.required, CustomeValidator.minusNum]],\r\n      //questionAttempt: [true, [Validators.required]],\r\n      //questionAttempts: [0, [CustomeValidator.minusNum]],\r\n      attendancevalue: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      absencevalue: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.ExamForm = this.fb.group(\r\n      {\r\n        ByQuestion: [false, [Validators.required]],\r\n        from: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        to: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        value: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      },\r\n      {\r\n        //validator: CustomeValidator.smallerThanNumbers(\"from\", \"to\"),\r\n      }\r\n    );\r\n\r\n    //this.changeQuestionAttemptsValidation(true);\r\n    this.ByQuestionValidators(true);\r\n\r\n    //this.ByQuestionValidatorsLectures(true);\r\n  }\r\n\r\n  get lecturesFormCtrls() {\r\n    return this.lecturesForm.controls;\r\n  }\r\n\r\n  get ExamFormCtrls() {\r\n    return this.ExamForm.controls;\r\n  }\r\n\r\n  addLecturePoint() {\r\n    this.lecsubmitted = true;\r\n\r\n    if (this.courseId == null) {\r\n      this.toastr.warning(\"Please select courseId\");\r\n      return;\r\n    }\r\n\r\n    // if (this.SubjectId == null) {\r\n    //   this.toastr.warning(\"Please select Subject\");\r\n    //   return;\r\n    // }\r\n\r\n    if (this.lecturesForm.valid) {\r\n      this.spinner.show();\r\n\r\n      let data: IAddLecturesPointsVM = {\r\n        ByQuestion: this.lecturesFormCtrls?.ByQuestion.value,\r\n        from: null, //this.lecturesFormCtrls?.from.value,\r\n        to: null, // this.lecturesFormCtrls?.to.value,\r\n        selectedSubjectId: this.courseId,\r\n        value: null, //this.lecturesFormCtrls?.value.value,\r\n        absencevalue: this.lecturesFormCtrls?.absencevalue.value,\r\n        attendancevalue: this.lecturesFormCtrls?.attendancevalue.value,\r\n        questionAttempt: null, // this.lecturesFormCtrls?.questionAttempt.value,\r\n        questionAttempts: null, // this.lecturesFormCtrls?.questionAttempts.value,\r\n        isLecture: true,\r\n      };\r\n        this.PointsService.addPoints(this.EduCompId, data).subscribe(\r\n          (res: any) => {\r\n            if (res.returnValue == 1) {\r\n              this.getLeturePoints();\r\n              this.toastr.success(\"General.AddSuccessfully\");\r\n              this.lecsubmitted = false;\r\n              this.lecturesForm.reset();\r\n              this.lecturesFormCtrls?.ByQuestion.setValue(false);\r\n            }\r\n            this.spinner.hide();\r\n          }\r\n        );\r\n\r\n    }\r\n  }\r\n\r\n  //Exams Points\r\n  addExamPoint() {\r\n    this.ExamSubmitted = true;\r\n\r\n    if (this.courseId == null) {\r\n      this.toastr.warning(\"Please select course\");\r\n      return;\r\n    }\r\n\r\n    // if (this.SubjectId == null) {\r\n    //   this.toastr.warning(\"Please select Subject\");\r\n    //   return;\r\n    // }\r\n    this.getLeturePoints();\r\n\r\n    if (this.ExamForm.valid) {\r\n      this.spinner.show();\r\n      let data: IAddExamPointsVM = {\r\n        ByQuestion: this.ExamFormCtrls?.ByQuestion.value,\r\n        from: this.ExamFormCtrls?.from.value,\r\n        to: this.ExamFormCtrls?.to.value,\r\n        value: this.ExamFormCtrls?.value.value,\r\n        selectedSubjectId: this.courseId,\r\n        isLecture: false,\r\n      };\r\n      this.fromToExamValidators();\r\n      this.PointsService.addPoints(this.EduCompId, data).subscribe(\r\n        (res: any) => {\r\n          //console.log(\"addExamPoint\", res);\r\n          if (res.returnValue == 1) {\r\n            this.getExamPoints();\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n            this.ExamSubmitted = false;\r\n            this.ExamForm.reset();\r\n            this.ExamFormCtrls?.ByQuestion.setValue(false);\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getLeturePoints() {\r\n    this.spinner.show();\r\n    this.PointsService.getPoints<IPointSystemVM[]>(\r\n      this.courseId,\r\n      6, //type= 6 for lecture\r\n      this.EduCompId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.lecturePoints = res;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getExamPoints() {\r\n    this.spinner.show();\r\n    this.PointsService.getPoints<IPointSystemVM[]>(\r\n      this.courseId,\r\n      3, //type= 3 for exam\r\n      this.EduCompId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        this.ExamPoints = res;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  DeleatePointDialog(point: IPointSystemVM, type: string): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${point.Value}: points`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletePoint(point, type);\r\n      });\r\n  }\r\n  deletePoint(point: IPointSystemVM, type: string) {\r\n    this.spinner.show();\r\n    this.PointsService.deletePoint(point.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        if (type == \"lecture\") {\r\n          let i = this.lecturePoints.findIndex((e) => e == point);\r\n          this.lecturePoints.splice(i, 1);\r\n        } else {\r\n          //type ==Exam\r\n          let i = this.ExamPoints.findIndex((e) => e == point);\r\n          this.ExamPoints.splice(i, 1);\r\n        }\r\n\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n      } else this.toastr.error(res.returnString);\r\n\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //############################################################################\r\n\r\n  //######################################################################\r\n  getTeachersByEducompId() {\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n      }\r\n    );\r\n  }\r\n\r\n  onChangeTeacher(teacheruserId: number) {\r\n    if (teacheruserId != null) {\r\n      this.teacherUserId = teacheruserId;\r\n      this.getExamPoints();\r\n      this.getLeturePoints();\r\n      this.GeneralService.getSubjectByTeacherId(teacheruserId).subscribe(\r\n        (res: any) => {\r\n          this.subjects = res.lsts;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onChangeSunbject(SubjectId: number) {\r\n    this.SubjectId = SubjectId;\r\n    this.ExamFormCtrls.selectedSubjectId.setValue(SubjectId);\r\n  }\r\n\r\n  // changeQuestionAttemptsValidation(questionAttempt: boolean) {\r\n  //   if (questionAttempt == true) {\r\n  //     this.lecturesForm.controls[\"questionAttempts\"].setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.minusNum,\r\n  //     ]);\r\n  //   }\r\n\r\n  //   if (questionAttempt == false) {\r\n  //     this.lecturesForm.controls[\"questionAttempts\"].reset();\r\n  //     this.lecturesForm.controls[\"questionAttempts\"].clearValidators();\r\n  //   }\r\n  //   this.lecturesFormCtrls.questionAttempts.updateValueAndValidity();\r\n  // }\r\n\r\n  ByQuestionValidators(ByQuestion: boolean) {\r\n    if (ByQuestion == true) {\r\n      this.ExamFormCtrls.from.reset();\r\n      this.ExamFormCtrls.from.clearValidators();\r\n      this.ExamFormCtrls.to.reset();\r\n      this.ExamFormCtrls.to.clearValidators();\r\n    } else {\r\n      this.ExamFormCtrls.from.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.ExamFormCtrls.to.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.bigZero,\r\n      ]);\r\n    }\r\n    this.ExamFormCtrls.from.updateValueAndValidity();\r\n    this.ExamFormCtrls.to.updateValueAndValidity();\r\n  }\r\n\r\n  // ByQuestionValidatorsLectures(ByQuestion: boolean) {\r\n  //   if (ByQuestion == true) {\r\n  //     this.lecturesFormCtrls.from?.reset();\r\n  //     this.lecturesFormCtrls.from?.clearValidators();\r\n  //     this.lecturesFormCtrls.to?.reset();\r\n  //     this.lecturesFormCtrls.to?.clearValidators();\r\n  //   } else {\r\n  //     this.lecturesFormCtrls.from?.setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.minusNum,\r\n  //     ]);\r\n\r\n  //     this.lecturesFormCtrls.to.setValidators([\r\n  //       Validators.required,\r\n  //       CustomeValidator.bigZero,\r\n  //     ]);\r\n  //   }\r\n  //   this.lecturesFormCtrls.from.updateValueAndValidity();\r\n  //   this.lecturesFormCtrls.to.updateValueAndValidity();\r\n  // }\r\n  fromToExamValidators() {\r\n    if (\r\n      this.ExamFormCtrls.from.value !=\"\" &&\r\n      this.ExamFormCtrls.to.value !=\"\"\r\n    ) {\r\n      this.ExamForm.setValidators([\r\n        CustomeValidator.smallerThanNumbers(\"from\", \"to\"),\r\n      ]);\r\n      //       Validators.required,\r\n      //       CustomeValidator.bigZero,\r\n      //     ]);\r\n    }\r\n  }\r\n  track(index: number, point: ILecturePointVM): number {\r\n    return point.Id;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Points\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/setup/course/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <!-- Teacher -->\r\n          <!-- <div class=\"col-lg-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n              <mat-select\r\n                name=\"teacherUserId\"\r\n                #teacherUserId\r\n                (selectionChange)=\"onChangeTeacher(teacherUserId.value)\"\r\n                required\r\n              >\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let teacher of Teachers\"\r\n                  [value]=\"teacher.teacherUserId\"\r\n                >\r\n                  {{ teacher.teacher_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- Subject -->\r\n          <!-- <div class=\"col-lg-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n              <mat-select\r\n                name=\"subjectId\"\r\n                #subjectId\r\n                (selectionChange)=\"onChangeSunbject(subjectId.value)\"\r\n                required\r\n              >\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let subject of subjects\"\r\n                  [value]=\"subject.Value\"\r\n                >\r\n                  {{ subject.Text }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-tab-group>\r\n              <!-- Start Lecture Points setup -->\r\n              <mat-tab label=\"{{ 'Material.Lectures' | translate }}\">\r\n                <form [formGroup]=\"lecturesForm\">\r\n                  <div class=\"row\">\r\n                    <!-- ByQuestion -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.ByQuestionLabel\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (change)=\"ByQuestionValidatorsLectures(true)\"\r\n                          >\r\n                            {{ \"labels.ByQuestion\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (change)=\"ByQuestionValidatorsLectures(false)\"\r\n                            >{{ \"labels.ByGroupQuestions\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <!-- lecturesFormCtrls.ByQuestion.value == false -->\r\n                    <ng-container *ngIf=\"\">\r\n                      <!--  from    -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <app-input\r\n                          [control]=\"lecturesFormCtrls.from\"\r\n                          [submitted]=\"ExamSubmitted\"\r\n                          type=\"number\"\r\n                          lable=\"labels.From\"\r\n                        ></app-input>\r\n                      </div>\r\n\r\n                      <!-- to  -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <app-input\r\n                          [control]=\"lecturesFormCtrls.to\"\r\n                          [submitted]=\"ExamSubmitted\"\r\n                          type=\"number\"\r\n                          lable=\"labels.To\"\r\n                        ></app-input>\r\n                      </div>\r\n                    </ng-container>\r\n\r\n                    <!-- value  ==> points Number   -->\r\n                    <!-- <div class=\"col-lg-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"value\" />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            lecturesFormCtrls.value.invalid &&\r\n                            (lecturesFormCtrls.value.touched || lecsubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.value.errors?.required ||\r\n                              lecturesFormCtrls.value.errors?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!--  attendance value   -->\r\n\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <app-input\r\n                        [control]=\"lecturesFormCtrls.attendancevalue\"\r\n                        [submitted]=\"lecsubmitted\"\r\n                        type=\"number\"\r\n                        label=\"labels.AttendancePoints\"\r\n                      ></app-input>\r\n                    </div>\r\n\r\n                    <!--  absence value   -->\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <app-input\r\n                        [control]=\"lecturesFormCtrls.absencevalue\"\r\n                        [submitted]=\"lecsubmitted\"\r\n                        type=\"number\"\r\n                        label=\"labels.AbsencePoints\"\r\n                      ></app-input>\r\n                    </div>\r\n\r\n                    <!-- questionAttempt -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.questionAttempt\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group\r\n                        formControlName=\"questionAttempt\"\r\n                        class=\"row\"\r\n                      >\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (click)=\"changeQuestionAttemptsValidation(true)\"\r\n                          >\r\n                            {{ \"labels.Yes\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (click)=\"changeQuestionAttemptsValidation(false)\"\r\n                            >{{ \"labels.No\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <!--  question Attempts    -->\r\n                    <!-- <div\r\n                      class=\"col-lg-4 col-12\"\r\n                      *ngIf=\"lecturesFormCtrls.questionAttempt.value == true\"\r\n                    >\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.questionAttempts\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"number\"\r\n                          formControlName=\"questionAttempts\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            lecturesFormCtrls.questionAttempts.invalid &&\r\n                            (lecturesFormCtrls.questionAttempts.touched ||\r\n                              lecsubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.questionAttempts.errors\r\n                                ?.required ||\r\n                              lecturesFormCtrls.questionAttempts.errors\r\n                                ?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div> -->\r\n                  </div>\r\n                  <mat-card-actions align=\"end\">\r\n                    <button\r\n                      mat-raised-button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary bg-light-info\"\r\n                      (click)=\"addLecturePoint()\"\r\n                    >\r\n                      <i class=\"fa fa-plus\"></i>\r\n                      {{ \"General.Add\" | translate }}\r\n                    </button>\r\n                  </mat-card-actions>\r\n                </form>\r\n\r\n                <!--  Lectures points table    -->\r\n                <ng-container>\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <!-- <th>\r\n                          {{ \"labels.PointApplyedTo\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.questionAttempts\" | translate }}\r\n                        </th> -->\r\n\r\n                        <th>\r\n                          {{ \"labels.AttendancePoints\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.AbsencePoints\" | translate }}\r\n                        </th>\r\n                        <!--\r\n                        <th>\r\n                          {{ \"labels.From\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.To\" | translate }}\r\n                        </th> -->\r\n                        <th>actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr\r\n                        *ngFor=\"\r\n                          let point of lecturePoints\r\n                            | paginate\r\n                              : {\r\n                                  itemsPerPage: 9,\r\n                                  currentPage: LecturePage,\r\n                                  id: 'lecture'\r\n                                };\r\n                          let i = index;\r\n                          trackBy: track\r\n                        \"\r\n                      >\r\n                        <!-- <td\r\n                          *ngIf=\"\r\n                            point.FromValue == null && point.ToValue == null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </td>\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue != null && point.ToValue != null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByGroupQuestions\" | translate }}\r\n                        </td>\r\n                        <td>{{ point.Value }}</td>\r\n                        <td>\r\n                          {{ point?.QuestionAttempts }}\r\n                        </td> -->\r\n                        <td>\r\n                          {{ point.AttendanceValue }}\r\n                        </td>\r\n                        <td>\r\n                          {{ point.AbsenceValue }}\r\n                        </td>\r\n                        <!-- <td>\r\n                          {{ point.FromValue }}\r\n                        </td>\r\n                        <td>{{ point.ToValue }}</td> -->\r\n                        <td>\r\n                          <button\r\n                            (click)=\"DeleatePointDialog(point, 'lecture')\"\r\n                            mat-mini-fab\r\n                            color=\"warn\"\r\n                          >\r\n                            <mat-icon>delete</mat-icon>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                    <!-- Start  Pagination -->\r\n                    <div class=\"paginator-box\">\r\n                      <pagination-controls\r\n                        *ngIf=\"lecturePoints?.length > 9\"\r\n                        [maxSize]=\"maxSize\"\r\n                        (pageChange)=\"LecturePage = $event\"\r\n                        previousLabel=\"\"\r\n                        nextLabel=\"\"\r\n                        id=\"lecture\"\r\n                      >\r\n                      </pagination-controls>\r\n                    </div>\r\n                  </table>\r\n                </ng-container>\r\n              </mat-tab>\r\n\r\n              <!--  #######################################################################################################################################\r\n              ##############################################################################################################################################-->\r\n\r\n              <!-- Start Exams Points setup -->\r\n              <mat-tab label=\"{{ 'Material.Exams' | translate }}\">\r\n                <form [formGroup]=\"ExamForm\">\r\n                  <div class=\"row\">\r\n                    <!--  ByQuestion    -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.ByQuestionLabel\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                        <div class=\"col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (click)=\"ByQuestionValidators(true)\"\r\n                          >\r\n                            {{ \"labels.ByQuestion\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (click)=\"ByQuestionValidators(false)\"\r\n                            >{{ \"labels.ByExam\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <!-- <ng-container\r\n                      *ngIf=\"ExamFormCtrls.ByQuestion.value == false\"\r\n                    > -->\r\n                      <!--  from    -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <app-input\r\n                        [control]=\"ExamFormCtrls.from\"\r\n                        [submitted]=\"ExamSubmitted\"\r\n                        type=\"number\"\r\n                        label=\"labels.From\"\r\n                      ></app-input>\r\n\r\n                      </div>\r\n\r\n                      <!-- to  -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <app-input\r\n                        [control]=\"ExamFormCtrls.to\"\r\n                        [submitted]=\"ExamSubmitted\"\r\n                        type=\"number\"\r\n                        label=\"labels.To\"\r\n                      ></app-input>\r\n                      </div>\r\n                   <!-- </ng-container> -->\r\n                    <!-- value ==> points Number  -->\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <app-input\r\n                      [control]=\" ExamFormCtrls.value\"\r\n                      [submitted]=\"ExamSubmitted\"\r\n                      type=\"number\"\r\n                      label=\"labels.pointsNumber\"\r\n                    ></app-input>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <mat-card-actions align=\"end\">\r\n                    <button\r\n                      mat-raised-button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary bg-light-info\"\r\n                      (click)=\"addExamPoint()\"\r\n                    >\r\n                      <i class=\"fa fa-plus\"></i>\r\n                      {{ \"General.Add\" | translate }}\r\n                    </button>\r\n                  </mat-card-actions>\r\n                </form>\r\n\r\n                <!-- Start Exams points Table -->\r\n                <ng-container>\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.From\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.To\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </th>\r\n\r\n                        <th>actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr\r\n                        *ngFor=\"\r\n                          let point of ExamPoints\r\n                            | paginate\r\n                              : {\r\n                                  itemsPerPage: 9,\r\n                                  currentPage: ExamPage,\r\n                                  id: 'exam'\r\n                                };\r\n                          let i = index;\r\n                          trackBy: track\r\n                        \"\r\n                      >\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue == null && point.ToValue == null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </td>\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue != null && point.ToValue != null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByGroupQuestions\" | translate }}\r\n                        </td>\r\n                        <td>{{ point.FromValue || \"-\" }}</td>\r\n                        <td>{{ point.ToValue || \"-\" }}</td>\r\n                        <td>{{ point.Value || \"-\" }}</td>\r\n                        <td>\r\n                          <button\r\n                            (click)=\"DeleatePointDialog(point, 'Exam')\"\r\n                            mat-mini-fab\r\n                            color=\"warn\"\r\n                          >\r\n                            <mat-icon>delete</mat-icon>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                    <div class=\"paginator-box\">\r\n                      <pagination-controls\r\n                        *ngIf=\"ExamPoints?.length > 9\"\r\n                        [maxSize]=\"maxSize\"\r\n                        (pageChange)=\"ExamPage = $event\"\r\n                        previousLabel=\"\"\r\n                        nextLabel=\"\"\r\n                        id=\"exam\"\r\n                      >\r\n                      </pagination-controls>\r\n                    </div>\r\n                  </table>\r\n                </ng-container>\r\n              </mat-tab>\r\n            </mat-tab-group>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { teacherBySubEduComp } from 'app/admin/models/admin/educations';\r\nimport { GeneralService } from 'app/shared/services/General/general.service';\r\nimport { AuthService } from 'app/shared/services/auth/auth.service'; \r\nimport { SubjectsService } from 'app/admin/services/Admin/subjects.service'; \r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomeValidator } from 'app/shared/validators/customeValid.validator'; \r\n\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-question-student-settings',\r\n  templateUrl: './question-student-settings.component.html',\r\n  styleUrls: ['./question-student-settings.component.scss'],\r\n})\r\nexport class QuestionStudentsSettingsComponent implements OnInit {\r\n  EduCompId: any;\r\n  subjectId: any;\r\n  Teachers: teacherBySubEduComp[] = [];\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private SubjectsService: SubjectsService,\r\n    private authserv: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.subjectId = params.get('subjectId');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.getTeacherByEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      subjectId: [this.subjectId, Validators.required],\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      teacherId: ['', Validators.required],\r\n      typeId: ['', Validators.required],\r\n      PrivatePrice: ['', Validators.required],\r\n      PublicPrice: ['', Validators.required],\r\n      IfPublicAccessibleAfterLecturesCount: ['', Validators.required],\r\n    });\r\n    this.changeType();\r\n  }\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //On Add Question Settinges\r\n  addQuestionSettings() {\r\n    this.submitted = true;\r\n    let isValid = this.myForm.valid;\r\n    if (isValid) {\r\n      $('#loadingGif').show();\r\n      this.SubjectsService.addQuestionSettings(\r\n        this.EduCompId,\r\n        this.myForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnString == 'Success' && res.returnValue == 1) {\r\n          this.toastr.success('settings added successfully');\r\n          this.resetManual();\r\n          $('#loadingGif').hide();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //get Teacher By EduCompId\r\n  getTeacherByEduCompId() {\r\n    $('#loadingGif').show();\r\n    this.SubjectsService.getTeacherBySubjectAndEduCompId(\r\n      this.EduCompId,\r\n      this.subjectId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.Teachers = res.teachers;\r\n        $('#loadingGif').hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  //OnChange  Type\r\n  changeType() {\r\n    this.myForm.controls['typeId'].valueChanges.subscribe((data) => {\r\n      this.changeValidators();\r\n    });\r\n  }\r\n\r\n  //OnChange Type Change Validators\r\n  changeValidators() {\r\n    let typeId = this.myForm.controls['typeId'].value;\r\n\r\n    if (typeId == '1' || typeId == 1) {\r\n      this.myForm.controls['PrivatePrice'].clearValidators();\r\n      this.myForm.controls['PrivatePrice'].reset();\r\n\r\n      this.myForm.controls['PublicPrice'].setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.myForm.controls[\r\n        'IfPublicAccessibleAfterLecturesCount'\r\n      ].setValidators([Validators.required, CustomeValidator.minusNum]);\r\n    }\r\n\r\n    if (typeId == '2' || typeId == 2) {\r\n      this.myForm.controls['PublicPrice'].clearValidators();\r\n      this.myForm.controls['PublicPrice'].reset();\r\n\r\n      this.myForm.controls[\r\n        'IfPublicAccessibleAfterLecturesCount'\r\n      ].clearValidators();\r\n\r\n      this.myForm.controls['IfPublicAccessibleAfterLecturesCount'].reset();\r\n\r\n      this.myForm.controls['PrivatePrice'].setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n    }\r\n\r\n    this.myForm.controls['PublicPrice'].updateValueAndValidity();\r\n    this.myForm.controls['PrivatePrice'].updateValueAndValidity();\r\n    this.myForm.controls[\r\n      'IfPublicAccessibleAfterLecturesCount'\r\n    ].updateValueAndValidity();\r\n  }\r\n\r\n  resetManual() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n    this.myForm.controls['teacherId'].setValue('');\r\n    this.myForm.controls['typeId'].setValue('');\r\n  }\r\n}\r\n","<div class=\"form-conainer\">\r\n    <div class=\"dc-content-title\">\r\n      <h5 class=\"xsm black header\">إعدادات اسئلة الطلاب</h5>\r\n      <button\r\n        routerLink=\"/dashboard/educational-subject/index\"\r\n        type=\"submit\"\r\n        class=\"btn btn-primary pull-left ad-qus font-dro\"\r\n      >\r\n        <i class=\"fa fa-arrow-right\"></i> الرجوع\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"unit-body dc-item-body\">\r\n      <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n        <div class=\"form-group\">\r\n          <label class=\"col-sm-3 control-label\"> المدرس </label>\r\n          <div class=\"col-sm-5\">\r\n            <select class=\"form-control font-dro\" formControlName=\"teacherId\">\r\n              <option value=\"\">المدرس</option>\r\n              <option\r\n                *ngFor=\"let teacher of Teachers\"\r\n                [value]=\"teacher.teacher_ID\"\r\n              >\r\n                {{ teacher.teacher_ar_name }}\r\n              </option>\r\n            </select>\r\n            <span\r\n              class=\"text-danger\"\r\n              *ngIf=\"\r\n                FormCtrl.teacherId.invalid &&\r\n                (FormCtrl.teacherId.touched || submitted)\r\n              \"\r\n            >\r\n              <span *ngIf=\"FormCtrl.teacherId.errors?.required\">\r\n                You must choose a value.\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"col-md-3 col-sm-3 control-label\"> النوع </label>\r\n          <div class=\"col-md-5\">\r\n            <select\r\n              class=\"form-control\"\r\n              #type\r\n              (change)=\"changeType()\"\r\n              formControlName=\"typeId\"\r\n            >\r\n              <option value=\"\">اختر</option>\r\n              <option value=\"1\">عام</option>\r\n              <option value=\"2\">خاص</option>\r\n              <option value=\"3\">إغلاق</option>\r\n            </select>\r\n            <span\r\n              class=\"text-danger\"\r\n              *ngIf=\"\r\n                FormCtrl.typeId.invalid && (FormCtrl.typeId.touched || submitted)\r\n              \"\r\n            >\r\n              <span *ngIf=\"FormCtrl.typeId.errors?.required\">\r\n                You must choose a value.\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"IsPrivateContainer\" *ngIf=\"type.value == '2'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> السعر </label>\r\n            <div class=\"col-sm-5\">\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"PrivatePrice\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.PrivatePrice.invalid &&\r\n                  (FormCtrl.PrivatePrice.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.PrivatePrice.errors?.required\">\r\n                  You must enter a value.\r\n                </span>\r\n                <span *ngIf=\"FormCtrl.PrivatePrice.errors?.minusNum\">\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"IsPublicContainer\" *ngIf=\"type.value == '1'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> السعر </label>\r\n            <div class=\"col-sm-5\">\r\n              <!-- Is public -->\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"PublicPrice\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.PublicPrice.invalid &&\r\n                  (FormCtrl.PublicPrice.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.PublicPrice.errors?.required\">\r\n                  You must enter a value.\r\n                </span>\r\n                <span *ngIf=\"FormCtrl.PublicPrice.errors?.minusNum\">\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- if Public show lecture Count -->\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> عدد المحاضرات </label>\r\n            <div class=\"col-sm-5\">\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"IfPublicAccessibleAfterLecturesCount\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.IfPublicAccessibleAfterLecturesCount.invalid &&\r\n                  (FormCtrl.IfPublicAccessibleAfterLecturesCount.touched ||\r\n                    submitted)\r\n                \"\r\n              >\r\n                <span\r\n                  *ngIf=\"\r\n                    FormCtrl.IfPublicAccessibleAfterLecturesCount.errors?.required\r\n                  \"\r\n                >\r\n                  You must enter a value.\r\n                </span>\r\n                <span\r\n                  *ngIf=\"\r\n                    FormCtrl.IfPublicAccessibleAfterLecturesCount.errors?.minusNum\r\n                  \"\r\n                >\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"form-btn\">\r\n            <div class=\"form-actions\">\r\n              <button\r\n                (click)=\"addQuestionSettings()\"\r\n                type=\"button\"\r\n                class=\"btn btn-primary pull-left\"\r\n              >\r\n                إضافة\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { WhatsAppService } from \"./../../../services/whatsApp/whats-app.service\";\r\nimport { AuthService } from \"./../../../../shared/services/auth/auth.service\";\r\nimport { ManageViewsService } from \"app/admin/services/Admin/manage-views.service\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { formValidationService } from \"./../../../../shared/services/formValidation.service\";\r\n\r\n@Component({\r\n  selector: \"app-send-singular-whatsapp-msg\",\r\n  templateUrl: \"./send-singular-whatsapp-msg.component.html\",\r\n  styleUrls: [\"./send-singular-whatsapp-msg.component.scss\"],\r\n})\r\nexport class SendSingularWhatsappMsgComponent implements OnInit {\r\n  EduCompId: any;\r\n  myForm: FormGroup;\r\n  searchForm: FormGroup;\r\n  searchResponse: any;\r\n  errors: string[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private whatsappService: WhatsAppService,\r\n    private authService: AuthService,\r\n    private SearchStudentService: ManageViewsService,\r\n    private spinner: NgxSpinnerService,\r\n    private formValidationService: formValidationService,\r\n    private toastr: ToastrService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authService.getEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [\"\", Validators.required],\r\n      AdminEducationCompanyId: [this.EduCompId, Validators.required],\r\n      msg: [\"\", Validators.required],\r\n      sendToStudentWhatsApp: [false],\r\n      sendToFatherWhatsApp: [false],\r\n      sendToMotherWhatsApp: [false],\r\n    });\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    //form empty?\r\n    if (!this.formValidationService.isFormEmpty(this.searchForm)) {\r\n      this.SearchStudentService.searchStudent(\r\n        this.EduCompId,\r\n        this.searchForm.value\r\n      ).subscribe((response: any) => {\r\n        if (response.returnValue == 1) {\r\n          //show response and set the userId with the coresponding value\r\n          this.searchResponse = response;\r\n          this.myForm.controls.userId.setValue(response.userId);\r\n        }\r\n      });\r\n    } else this.toastr.error(this.translate.instant(\"Response.EmptyForm\"));\r\n  }\r\n\r\n  onSubmit(event: any) {\r\n    //send message request\r\n    event.target.disabled = true;\r\n\r\n    this.whatsappService\r\n      .sendSingularWhatsAppMsg(this.myForm.value)\r\n      .subscribe((response) => {\r\n        event.target.disabled = false;\r\n        if (response) {\r\n          console.log(response);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"container-fluid\">\r\n      <mat-card-title>\r\n        {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"searchForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"sentEmail\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Code\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"sentCenterCode\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <!-- Search Response -->\r\n            <table\r\n              *ngIf=\"searchResponse\"\r\n              class=\"table table-striped table-hover table-full-width rtl\"\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>{{ \"labels.Name\" | translate }}</th>\r\n                  <th>{{ \"labels.Email\" | translate }}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{{ searchResponse.username }}</td>\r\n                  <td>{{ searchResponse.email }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- Search Response -->\r\n\r\n            <mat-card-actions align=\"end\">\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"onSearch()\"\r\n              >\r\n                {{ \"General.Search\" | translate }}\r\n              </button>\r\n            </mat-card-actions>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"searchResponse\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row check-box\">\r\n                    <mat-label class=\"col-12\">\r\n                      {{ \"labels.SendMessageTo\" | translate }}\r\n                    </mat-label>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToStudentWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForStudentsWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToFatherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForFatherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToMotherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForMotherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Message\" | translate }} </mat-label>\r\n                    <textarea\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"msg\"\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <mat-card-actions align=\"end\">\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"onSubmit($event)\"\r\n              >\r\n                {{ \"General.Send\" | translate }}\r\n              </button>\r\n            </mat-card-actions>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"errors?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Labels.FailureList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item disabled\" *ngFor=\"let err of errors\">\r\n                {{ err }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\"></div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  IWhatsAppMsgModel,\r\n  IWhatsAppResponse,\r\n} from \"app/admin/models/whatsApp/whatsApp\";\r\nimport { WhatsAppService } from \"app/admin/services/whatsApp/whats-app.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-send-whatsapp-msg\",\r\n  templateUrl: \"./send-whatsapp-msg.component.html\",\r\n  styleUrls: [\"./send-whatsapp-msg.component.scss\"],\r\n})\r\nexport class SendWhatsappMsgComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  eduCompId: any;\r\n  errors: string[] = [];\r\n\r\n  // get sendToStudentWhatsAppCtrl() {\r\n  //   return this.myForm.get(\"sendToStudentWhatsApp\");\r\n  // }\r\n  // get sendToFatherWhatsAppCtrl() {\r\n  //   return this.myForm.get(\"sendToFatherWhatsApp\");\r\n  // }\r\n  // get sendToMotherWhatsAppCtrl() {\r\n  //   return this.myForm.get(\"sendToMotherWhatsApp\");\r\n  // }\r\n  get msgCtrl() {\r\n    return this.myForm.get(\"msg\");\r\n  }\r\n  get fileCtrl() {\r\n    return this.myForm.get(\"file\");\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private whatsAppService: WhatsAppService,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private fileService: UploadFileService\r\n  ) {\r\n    this.eduCompId = this.authService.getEduCompId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      // sendToStudentWhatsApp: [false],\r\n      // sendToFatherWhatsApp: [false],\r\n      // sendToMotherWhatsApp: [false],\r\n      msg: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      file: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.eduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    // if (\r\n    //   this.sendToStudentWhatsAppCtrl?.value === false &&\r\n    //   this.sendToFatherWhatsAppCtrl?.value === false &&\r\n    //   this.sendToMotherWhatsAppCtrl?.value === false\r\n    // ) {\r\n    //   this.toastr.warning(\r\n    //     \"Please select who can receive your what's app message\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      let obj = {} as IWhatsAppMsgModel;\r\n      obj.adminEducationCompanyId = +this.eduCompId;\r\n      // obj.sendToStudentWhatsApp = this.sendToStudentWhatsAppCtrl?.value;\r\n      // obj.sendToFatherWhatsApp = this.sendToFatherWhatsAppCtrl?.value;\r\n      // obj.sendToMotherWhatsApp = this.sendToMotherWhatsAppCtrl?.value;\r\n      obj.msg = this.msgCtrl?.value;\r\n      obj.file = this.fileCtrl?.value;\r\n\r\n      this.spinner.show();\r\n      this.whatsAppService.sendWhatsAppMsg(obj).subscribe((response) => {\r\n        if (response) {\r\n          if ((response as IWhatsAppResponse).isSendAllSuccess) {\r\n            this.toastr.success(\"General.sendToAllSuccess\");\r\n            this.myForm.reset();\r\n          } else if (!(response as IWhatsAppResponse).isSendAllSuccess) {\r\n            //console.log('ERRORS: ', (response as IWhatsAppResponse).errors);\r\n            this.toastr.success(\"General.sendToSomeSuccess\");\r\n            this.errors = (response as IWhatsAppResponse).errors;\r\n          }\r\n          this.myForm.reset();\r\n          this.submitted = false;\r\n          this.fileService.resetFileById(\"msg-file\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.MustHasColCodes\" | translate }}\r\n                    '<strong>codes</strong>'\r\n                  </mat-label>\r\n\r\n                  <app-file-input\r\n                    [control]=\"fileCtrl\"\r\n                    accept=\".xlsx,.xls\"\r\n                    htmlId=\"msg-file\"\r\n                    [submitted]=\"submitted\"\r\n                  ></app-file-input>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-12\">\r\n                  <div class=\"row check-box\">\r\n                    <mat-label class=\"col-12\">\r\n                      {{ \"labels.SendMessageTo\" | translate }}\r\n                    </mat-label>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToStudentWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForStudentsWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToFatherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForFatherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToMotherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForMotherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                </div> -->\r\n\r\n                <div class=\"col-12 mt-2\">\r\n                  <app-textarea\r\n                    [control]=\"msgCtrl\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Message\"\r\n                    rows=\"2\"\r\n                  ></app-textarea>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <div class=\"alert bg-light-warning mb-2\" role=\"alert\">\r\n                    {{ \"General.maxNoOfUsers\" | translate }}\r\n                    <a class=\"alert-link\"> 9999 </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Send\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"errors?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.FailureList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item disabled\" *ngFor=\"let err of errors\">\r\n                {{ err }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { StructureIndexComponent } from \"./courses/course-structure/structure-index/structure-index.component\";\r\nimport { JobTitleComponent } from \"./job-titles/job-title/job-title.component\";\r\nimport { CategorieComponent } from \"./categrioes/categorie.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { IsAdminGuard } from \"app/shared/services/auth/Guards/roles/is-admin.guard\";\r\nimport { ManualCashPaymentComponent } from \"./manual-cash-payment/manual-cash-payment.component\";\r\nimport { GenerateBalanceCodesComponent } from \"./generate-balance-codes/generate-balance-codes.component\";\r\nimport { ManageViewsComponent } from \"./manage-views/manage-views.component\";\r\nimport { SendWhatsappMsgComponent } from \"./send-whatsapp-msg/send-whatsapp-msg.component\";\r\nimport { ExceptionalViewsComponent } from \"./exceptional-views/exceptional-views.component\";\r\nimport { SendSingularWhatsappMsgComponent } from \"./send-singular-whatsapp-msg/send-singular-whatsapp-msg.component\";\r\nimport { AnnouncementSetupComponent } from \"./announcement-setup/announcement-setup.component\";\r\nimport { PointsSetupComponent } from \"./points-setup/points-setup.component\";\r\nimport { DepartmentComponent } from \"./Department/department.component\";\r\nimport { AddCourseComponent } from \"./courses/add-course/add-course.component\";\r\nimport { CourseIndexComponent } from \"./courses/course-index/course-index.component\";\r\nimport { ArticlesSetupComponent } from \"./articles-setup/articles.component\";\r\nimport { AnnouncementIndexComponent } from \"./announcement-index/announcement-index.component\";\r\nimport { GiftsCategoryIndexComponent } from \"./gifts-category/gifts-category-index/gifts-category-index.component\";\r\nimport { GiftsCategoryAddComponent } from \"./gifts-category/gifts-category-add/gifts-category-add.component\";\r\nimport { GiftsIndexComponent } from \"./gifts/gifts-index/gifts-index.component\";\r\nimport { GiftsAddComponent } from \"./gifts/gifts-add/gifts-add.component\";\r\nimport { DiplomaComponent } from \"./courses/diploma/diploma.component\";\r\nimport { AddUsersToCourseComponent } from \"./courses/add-users-to-course/add-users-to-course.component\";\r\nimport { CourseRequestComponent } from \"./courses/course-requestes/course-requestes.component\";\r\nimport { CourseObjectivesComponent } from \"./courses/course-objectives/course-objectives.component\";\r\nimport { TeachingRequestsComponent } from \"./courses/teaching-requests/teaching-requests.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"categories\",\r\n    pathMatch: \"full\",\r\n  },\r\n\r\n  {\r\n    path: \"manual-cash-payment\",\r\n    component: ManualCashPaymentComponent,\r\n  },\r\n\r\n  {\r\n    path: \"generate-balance-codes\",\r\n    component: GenerateBalanceCodesComponent,\r\n  },\r\n\r\n  {\r\n    path: \"manage-views\",\r\n    component: ManageViewsComponent,\r\n  },\r\n\r\n  {\r\n    path: \"send-whatsapp-msg\",\r\n    component: SendWhatsappMsgComponent,\r\n    data: {\r\n      breadcrubm: \"Navbar.SendWhatsappMsg\",\r\n      view: \"send-whatsapp-msg\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"send-singular-whatsapp-msg\",\r\n    component: SendSingularWhatsappMsgComponent,\r\n  },\r\n\r\n  {\r\n    path: \"exceptional-views\",\r\n    component: ExceptionalViewsComponent,\r\n  },\r\n\r\n  {\r\n    path: \"announcement-index\",\r\n    component: AnnouncementIndexComponent,\r\n  },\r\n\r\n  {\r\n    path: \"announcement-setup\",\r\n    component: AnnouncementSetupComponent,\r\n  },\r\n\r\n  {\r\n    path: \"points/:courseId\",\r\n    component: PointsSetupComponent,\r\n    data: {\r\n      breadcrumb: \"Navbar.Points\",\r\n      view: \"points\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"categories\",\r\n    component: CategorieComponent,\r\n    data: {\r\n      breadcrumb: \"categories.categories\",\r\n      view: \"categories\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"department\",\r\n    component: DepartmentComponent,\r\n    data: {\r\n      breadcrumb: \"Departments.allDept\",\r\n      view: \"department\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"articles\",\r\n    component: ArticlesSetupComponent,\r\n    data: {\r\n      breadcrumb: \"articles.articles\",\r\n      view: \"articles\",\r\n    },\r\n  },\r\n\r\n  {\r\n    path: \"course\",\r\n    data: {\r\n      breadcrumb: {\r\n        label: \"course.courses\",\r\n        disable: true,\r\n      },\r\n      //breadcrumb: \"course.courses\",\r\n      view: \"course-index\",\r\n    },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: CourseIndexComponent,\r\n        data: {\r\n          breadcrumb: \"course.courseIndex\",\r\n          view: \"course-index\",\r\n        },\r\n      },\r\n      {\r\n        path: \"diploma\",\r\n        component: DiplomaComponent,\r\n        data: {\r\n          breadcrumb: \"course.Diplomas\",\r\n          view: \"diploma\",\r\n        },\r\n      },\r\n      {\r\n        path: \"edit-course/:courseId/:isFromRequestPage\",\r\n        component: AddCourseComponent,\r\n        data: {\r\n          breadcrumb: \"course.addCourse\",\r\n          view: \"edit-course\",\r\n        },\r\n      },\r\n      {\r\n        path: \"add-course\",\r\n        component: AddCourseComponent,\r\n        data: {\r\n          breadcrumb: \"course.addCourse\",\r\n          view: \"add-course\",\r\n        },\r\n      },\r\n      {\r\n        path: \"add-employee-to-course/:courseId\",\r\n        component: AddUsersToCourseComponent,\r\n        data: {\r\n          breadcrumb: \"course.AddEmployeeToCourse\",\r\n          view: \"add-employee-to-course\",\r\n        },\r\n      },\r\n      {\r\n        path: \"course-request\",\r\n        component: CourseRequestComponent,\r\n        data: {\r\n          breadcrumb: \"Navbar.CourseRequest\",\r\n          view: \"course-request\",\r\n        },\r\n      },\r\n      {\r\n        path: \"teaching-request\",\r\n        component: TeachingRequestsComponent,\r\n        data: {\r\n          breadcrumb: \"Navbar.TeachRequests\",\r\n          view: \"teaching-request\",\r\n        },\r\n      },\r\n      {\r\n        path: \"course-structure/:courseId\",\r\n        component: StructureIndexComponent,\r\n        data: {\r\n          breadcrumb: \"labels.SubjectStructure\",\r\n          view: \"course-structure\",\r\n        },\r\n      },\r\n      {\r\n        path: \"course-objectives/:courseId\",\r\n        component: CourseObjectivesComponent,\r\n        data: {\r\n          breadcrumb: \"course.Objectives\",\r\n          view: \"course-objectives\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"job-title\",\r\n    component: JobTitleComponent,\r\n    data: {\r\n      breadcrumb: \"JobTitle.alljob\",\r\n      view: \"job-title\",\r\n    },\r\n  },\r\n  {\r\n    path: \"gift-category\",\r\n    component: GiftsCategoryIndexComponent,\r\n    data: {\r\n      breadcrumb: \"Gifts.GiftsCategory\",\r\n      view: \"gift-category\",\r\n    },\r\n  },\r\n  {\r\n    path: \"add-gift-category\",\r\n    component: GiftsCategoryAddComponent,\r\n    data: {\r\n      breadcrumb: \"Gifts.addGiftsCategory\",\r\n      view: \"add-gift-category\",\r\n    },\r\n  },\r\n  {\r\n    path: \"gift-index\",\r\n    component: GiftsIndexComponent,\r\n    data: {\r\n      breadcrumb: \"Gifts.Gifts\",\r\n      view: \"gift-index\",\r\n    },\r\n  },\r\n  {\r\n    path: \"gift-add\",\r\n    component: GiftsAddComponent,\r\n    data: {\r\n      breadcrumb: \"Gifts.AddGift\",\r\n      view: \"gift-add\",\r\n    },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SetupRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { SetupRoutingModule } from \"./setup-routing.module\";\r\nimport { ManageViewsComponent } from \"./manage-views/manage-views.component\";\r\nimport { GenerateBalanceCodesComponent } from \"./generate-balance-codes/generate-balance-codes.component\";\r\nimport { ManualCashPaymentComponent } from \"./manual-cash-payment/manual-cash-payment.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { SendWhatsappMsgComponent } from \"./send-whatsapp-msg/send-whatsapp-msg.component\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { ExceptionalViewsComponent } from \"./exceptional-views/exceptional-views.component\";\r\nimport { QuestionStudentsSettingsComponent } from \"./question-student-settings/question-student-settings.component\";\r\nimport { CategorieComponent } from \"./categrioes/categorie.component\";\r\nimport { SendSingularWhatsappMsgComponent } from \"./send-singular-whatsapp-msg/send-singular-whatsapp-msg.component\";\r\nimport { PointsSetupComponent } from \"./points-setup/points-setup.component\";\r\nimport { AnnouncementSetupComponent } from \"./announcement-setup/announcement-setup.component\";\r\nimport { DepartmentComponent } from \"./Department/department.component\";\r\nimport { AddCourseComponent } from \"./courses/add-course/add-course.component\";\r\nimport { CourseIndexComponent } from \"./courses/course-index/course-index.component\";\r\nimport { ArticlesSetupComponent } from \"./articles-setup/articles.component\";\r\nimport { AnnouncementIndexComponent } from \"./announcement-index/announcement-index.component\";\r\nimport { JobTitleComponent } from \"./job-titles/job-title/job-title.component\";\r\nimport { GiftsCategoryIndexComponent } from \"./gifts-category/gifts-category-index/gifts-category-index.component\";\r\nimport { GiftsCategoryAddComponent } from \"./gifts-category/gifts-category-add/gifts-category-add.component\";\r\nimport { GiftsIndexComponent } from \"./gifts/gifts-index/gifts-index.component\";\r\nimport { GiftsAddComponent } from \"./gifts/gifts-add/gifts-add.component\";\r\nimport { UpdateJobDepartmentComponent } from \"./job-titles/update-job-department/update-job-department.component\";\r\nimport { EditJobTitleDatesComponent } from \"../../../shared/components/dialogs/edit-job-title-dates/edit-job-title-dates.component\";\r\nimport { DiplomaComponent } from \"./courses/diploma/diploma.component\";\r\nimport { AddUsersToCourseComponent } from \"./courses/add-users-to-course/add-users-to-course.component\";\r\nimport { CourseRequestComponent } from \"./courses/course-requestes/course-requestes.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { StructureIndexComponent } from \"./courses/course-structure/structure-index/structure-index.component\";\r\nimport { AddUnitComponent } from \"./courses/course-structure/add-unit/add-unit.component\";\r\nimport { AddUnitAttachmentComponent } from \"./courses/course-structure/add-unit-attachment/add-unit-attachment.component\";\r\nimport { CourseObjectivesComponent } from \"./courses/course-objectives/course-objectives.component\";\r\nimport { TeachingRequestsComponent } from \"./courses/teaching-requests/teaching-requests.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GenerateBalanceCodesComponent,\r\n    ManualCashPaymentComponent,\r\n    ManageViewsComponent,\r\n    SendWhatsappMsgComponent,\r\n    ExceptionalViewsComponent,\r\n    QuestionStudentsSettingsComponent,\r\n    CategorieComponent,\r\n    SendSingularWhatsappMsgComponent,\r\n    PointsSetupComponent,\r\n    AnnouncementSetupComponent,\r\n    DepartmentComponent,\r\n    AddCourseComponent,\r\n    CourseIndexComponent,\r\n    ArticlesSetupComponent,\r\n    AnnouncementIndexComponent,\r\n    JobTitleComponent,\r\n    GiftsCategoryIndexComponent,\r\n    GiftsCategoryAddComponent,\r\n    GiftsIndexComponent,\r\n    GiftsAddComponent,\r\n    UpdateJobDepartmentComponent,\r\n    EditJobTitleDatesComponent,\r\n    DiplomaComponent,\r\n    AddUsersToCourseComponent,\r\n    CourseRequestComponent,\r\n    StructureIndexComponent,\r\n    AddUnitComponent,\r\n    AddUnitAttachmentComponent,\r\n    CourseObjectivesComponent,\r\n    TeachingRequestsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SetupRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    NgxPaginationModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n  exports: [DepartmentComponent]\r\n})\r\nexport class SetupModule { }\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IAddEditBranchModel,\r\n  IBranchesViewModel,\r\n  IBranchModel,\r\n  IDistrictDropModel,\r\n} from \"app/admin/models/roles/function\";\r\nimport { BranchesService } from \"app/admin/services/roles/branches.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-center-branches\",\r\n  templateUrl: \"./center-branches.component.html\",\r\n  styleUrls: [\"./center-branches.component.scss\"],\r\n})\r\nexport class CenterBranchesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  EduCompId: number;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions: any[] = [{ functionName: \"Edit\" }, { functionName: \"Delete\" }];\r\n  itemsCount: number = 0;\r\n  curPage: number = 1;\r\n\r\n  branches: IBranchModel[] = [];\r\n  // districts: IDistrictDropModel[] = [];\r\n\r\n  displayedColumns: string[] = [\"#\", \"Name\", /* \"districtName\", */ \"actions\"];\r\n  dataSource: MatTableDataSource<IBranchModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: MessagesService,\r\n    private branchService: BranchesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //console.log(`row Functions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchId: [0],\r\n      branchName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      //address: [null],\r\n      districtId: [null],\r\n    });\r\n\r\n    this.getAllBranches(this.curPage);\r\n    // this.getAllRegions();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllBranches(1);\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  // getAllRegions() {\r\n  //   this.branchService\r\n  //     .getAllDistricts<IDistrictDropModel[]>()\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         // console.log(\"districts: \", response);\r\n  //         this.districts = response;\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  getAllBranches(pageNumber: number) {\r\n    this.spinner.show();\r\n    this.curPage = pageNumber;\r\n    // console.log(\"Educom\", this.EduCompId);\r\n    this.branchService\r\n      .getAllAllCenterBranches<IBranchesViewModel>(this.EduCompId, pageNumber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"branches: \", response);\r\n          this.branches = response.centerBrnachesList;\r\n          this.dataSource = new MatTableDataSource(response.centerBrnachesList);\r\n          this.itemsCount = response.itemsCount;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editBranch(branch: IBranchModel) {\r\n    this.FormCtrls.branchId?.setValue(branch.Id);\r\n    this.FormCtrls.branchName?.setValue(branch.Name);\r\n    //this.FormCtrls.address?.setValue(branch.address);\r\n    // this.FormCtrls.districtId?.setValue(branch.districtId);\r\n  }\r\n\r\n  removeBranch(branch: IBranchModel) {\r\n    this.spinner.show();\r\n    this.branchService.deleteBranch(branch.Id).subscribe((response: any) => {\r\n      if (response) {\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllBranches(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllBranches(this.curPage);\r\n        }\r\n        if (branch.Id == this.FormCtrls.branchId.value) this.clearForm();\r\n        // console.log(\"user: \", response);\r\n      } else this.msg.error(response.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditBranchModel;\r\n      obj.Id = this.FormCtrls.branchId?.value;\r\n      obj.Name = this.FormCtrls.branchName?.value;\r\n      obj.districtId = this.FormCtrls.districtId?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n      //  console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.branchService\r\n        .addEditBranches<IAddEditBranchModel, any>(obj)\r\n        .subscribe((response) => {\r\n          if (response && response.returnValue === 200) {\r\n            // console.log(\"created: \", response);\r\n            if (obj.Id == 0) {\r\n              this.getAllBranches(1); // first page after add\r\n              this.dataSource.paginator = this.paginator;\r\n            } else {\r\n              this.getAllBranches(this.curPage); // current page after update\r\n            }\r\n\r\n            this.msg.success(\r\n              obj.Id == 0\r\n                ? \"General.AddSuccessfully\"\r\n                : \"General.UpdateSuccessfully\"\r\n            );\r\n\r\n            this.clearForm();\r\n          } else this.msg.error(response?.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(branch: IBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.branchId.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.branchId.value == 0\r\n            ? \"labels.CreateCenterBranch\"\r\n            : \"labels.UpdateCenterBranch\"\r\n          ) | translate\r\n        }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.branchName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Name\"\r\n                    autocomplete=\"new-password\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Region\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"districtId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let dis of districts\"\r\n                        [value]=\"dis.Id\"\r\n                      >\r\n                        {{ dis.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>\r\n                      <input-validation-msg\r\n                        [control]=\"FormCtrls.districtId\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\"\r\n                      >\r\n                      </input-validation-msg>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"FormCtrls.branchId.value == 0\"></i>\r\n          {{\r\n            (FormCtrls.branchId.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.branchId.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.CenterBranches\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">{{ branch.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- region Column -->\r\n            <!-- <ng-container matColumnDef=\"districtName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Region\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.districtName }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editBranch(branch)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(branch)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllBranches($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"./../../../../shared/validators/customeValid.validator\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionViewModel,\r\n  IAddEditFunctionModel,\r\n} from \"app/admin/models/roles/function\";\r\nimport { IFunctionsModel } from \"app/admin/models/roles/roles\";\r\nimport { FunctionsService } from \"app/admin/services/roles/functions.service\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-functions-setup\",\r\n  templateUrl: \"./functions-setup.component.html\",\r\n  styleUrls: [\"./functions-setup.component.scss\"],\r\n})\r\nexport class FunctionsSetupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  itemsCount: any;\r\n  functions: IFunctionsModel[] = [];\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  get functionIdCtrl() {\r\n    return this.myForm.get(\"functionId\");\r\n  }\r\n  get functionNameEnCtrl() {\r\n    return this.myForm.get(\"functionNameEn\");\r\n  }\r\n  get functionNameArCtrl() {\r\n    return this.myForm.get(\"functionNameAr\");\r\n  }\r\n  get linkCtrl() {\r\n    return this.myForm.get(\"link\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\"#\", \"arName\", \"enName\", \"link\", \"actions\"];\r\n  dataSource: MatTableDataSource<IFunctionsModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private functionService: FunctionsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      functionId: [0],\r\n      functionNameEn: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      functionNameAr: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      link: [null],\r\n    });\r\n\r\n    this.getAllFunctions(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllFunctions(pageNumber: number) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IFunctionViewModel>(pageNumber, false)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"functions: \", response);\r\n          this.functions = response.functions;\r\n          this.dataSource = new MatTableDataSource(response.functions);\r\n          this.itemsCount = response.itemsCount;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editFunction(func: IFunctionsModel) {\r\n    this.functionIdCtrl?.setValue(func.Id);\r\n    this.functionNameEnCtrl?.setValue(func.function_en_name);\r\n    this.functionNameArCtrl?.setValue(func.functionName);\r\n    this.linkCtrl?.setValue(func.functionURL);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeFunction(func: IFunctionsModel) {\r\n    this.spinner.show();\r\n    this.functionService.deleteFunction(func.Id).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"function: \", response);\r\n        this.getAllFunctions(1);\r\n        this.msg.success(\"تم مسح الوظيفه بنجاح\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditFunctionModel;\r\n      obj.Id = this.functionIdCtrl?.value;\r\n      obj.functionName = this.functionNameArCtrl?.value;\r\n      obj.function_en_name = this.functionNameEnCtrl?.value;\r\n      obj.functionURL = this.linkCtrl?.value;\r\n\r\n      // console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.functionService\r\n        .addEditFunction<IAddEditFunctionModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.addBtn.nativeElement.innerText = \"Add\";\r\n          this.submitted = false;\r\n          if (response && response.returnValue === 200) {\r\n            //console.log(\"created: \", response);\r\n\r\n            this.getAllFunctions(1);\r\n            this.msg.success(\"تم إضافه/تعديل البيانات الوظيفه بنجاح\");\r\n            this.myForm.reset();\r\n            // console.log(\"functions: \", this.functions);\r\n          }\r\n          this.spinner.show();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(func: IFunctionsModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeFunction(func);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateFunction\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameAr\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameArCtrl.invalid &&\r\n                        (functionNameArCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameArCtrl.errors?.required ||\r\n                          functionNameArCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameEn\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameEnCtrl.invalid &&\r\n                        (functionNameEnCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameEnCtrl.errors?.required ||\r\n                          functionNameEnCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Link\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"link\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Functions\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- arName Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.function_en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- link Column -->\r\n            <ng-container matColumnDef=\"link\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Link\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionURL }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let func\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editFunction(func)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(func)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllFunctions($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IRolesViewModel } from \"app/admin/models/roles/roles\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-role\",\r\n  templateUrl: \"./add-role.component.html\",\r\n  styleUrls: [\"./add-role.component.scss\"],\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  roles: IRolesViewModel[] = [];\r\n  EduCompId: any;\r\n  get roleIdCtrl() {\r\n    return this.myForm.get(\"roleId\");\r\n  }\r\n  get roleNameCtrl() {\r\n    return this.myForm.get(\"roleName\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\"#\", \"roleName\", \"actions\"];\r\n  dataSource: MatTableDataSource<IRolesViewModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: MessagesService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      roleId: [0],\r\n      roleName: [null, [Validators.required]],\r\n    });\r\n    this.getAllRoles();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllRoles();\r\n    });\r\n  }\r\n\r\n  getAllRoles() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllRoles<IRolesViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.roles = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editRole(role: IRolesViewModel) {\r\n    this.roleIdCtrl?.setValue(role.Id);\r\n    this.roleNameCtrl?.setValue(role.roleName);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.roleNameCtrl?.value) {\r\n      this.msg.warning(\"يرجي إدخال اسم الصلاحيه\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IRolesViewModel;\r\n      obj.Id = this.roleIdCtrl?.value;\r\n      obj.roleName = this.roleNameCtrl.value;\r\n      obj.EduCompId = this.EduCompId;\r\n      console.log(\"role model\", obj);\r\n      this.roleService\r\n        .addEditRole<IRolesViewModel, any>(obj)\r\n        .subscribe((response) => {\r\n          if (response && response.returnValue === 200) {\r\n            if (this.roleIdCtrl?.value == 0) {\r\n              this.getAllRoles();\r\n\r\n              this.dataSource.paginator.firstPage();\r\n              this.msg.success(\"General.AddSuccessfully\");\r\n            } else {\r\n              this.getAllRoles();\r\n              this.msg.success(\"General.UpdateSuccessfully\");\r\n            }\r\n            this.myForm.reset();\r\n            this.roleIdCtrl?.setValue(0);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    } else this.msg.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(role: IRolesViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: role.roleName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeRole(role);\r\n      });\r\n  }\r\n\r\n  removeRole(role: IRolesViewModel) {\r\n    this.spinner.show();\r\n    this.roleService.deleteRole(role.Id).subscribe((response: any) => {\r\n      if (response.returnString == \"Success\") {\r\n        this.getAllRoles();\r\n        this.msg.success(\"General.DeleteSuccessfully\");\r\n      } else this.msg.warning(response.returnString);\r\n      if (this.roleIdCtrl.value) this.myForm.reset();\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.roleIdCtrl.setValue(0);\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRole\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <app-input\r\n                    [control]=\"roleNameCtrl\"\r\n                    label=\"labels.Name\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"roleIdCtrl.value == 0\"></i>\r\n          {{\r\n            (roleIdCtrl.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"roleIdCtrl.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Roles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"roleName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let role\">{{ role.roleName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let role\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editRole(role)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(role)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/users/role-fuctions/{{ role.Id }}\"\r\n                    [queryParams]=\"{ parentId: functionId, functionId: fun.Id }\"\r\n                    *ngIf=\"fun.functionName === 'Functions'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"add functions\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRoleFunctions\" | translate }}\r\n        <a\r\n      mat-raised-button\r\n      class=\"btn btn-warning bg-light-warning float-right\"\r\n      routerLink=\"/dashboard/roles\"\r\n      [queryParams]=\"{\r\n        functionId: functionId\r\n      }\"\r\n\r\n\r\n    >\r\n\r\n      {{ \"General.Back\" | translate }}\r\n    </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <mat-checkbox\r\n                  [checked]=\"allChecked\"\r\n                  (change)=\"SelectAll()\"\r\n                  color=\"accent\"\r\n                  class=\"mb-1\"\r\n                >\r\n                  {{ \"General.SelectAll\" | translate }}\r\n                </mat-checkbox>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\" *ngFor=\"let group of groupFunctions\">\r\n                <mat-card>\r\n                  <mat-card-title>{{\r\n                    group.classificationName | translate\r\n                  }}</mat-card-title>\r\n                  <mat-card-content>\r\n                    <div class=\"row\">\r\n                      <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                      <div\r\n                        class=\"col-12 col-xl-6\"\r\n                        *ngFor=\"let func of group.functions; let i = index\"\r\n                      >\r\n                        <mat-checkbox\r\n                          id=\"functions{{ func.Id }}\"\r\n                          (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                          [checked]=\"rolefunctionIds.includes(func.Id)\"\r\n                        >\r\n                          {{ func.functionName | translate }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onAddFunctions()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionsModel,\r\n  IRoleFunctionsModel,\r\n  IAddEditRoleFunctionsModel,\r\n  IGroupFunctionsModel,\r\n} from \"app/admin/models/roles/roles\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-role-functions\",\r\n  templateUrl: \"./role-functions.component.html\",\r\n  styleUrls: [\"./role-functions.component.scss\"],\r\n})\r\nexport class RoleFunctionsComponent implements OnInit {\r\n  roleId: number;\r\n  functionId: number;\r\n\r\n  functions: IFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsModel[] = [];\r\n  roleFunctions: IRoleFunctionsModel[] = [];\r\n  rolefunctionIds: number[] = [];\r\n  roleName: string = \"\";\r\n  allChecked: boolean = false;\r\n  allFunctionsLength = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: MessagesService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.roleId =Number( param.get(\"roleId\"));\r\n\r\n    });\r\n    this.route.queryParamMap.subscribe((param) => {\r\n      this.functionId =Number( param.get(\"parentId\"));\r\n\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllFunctions();\r\n    this.getAllRoleFunctions();\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IGroupFunctionsModel[]>(0, true)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.groupFunctions = response;\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength =\r\n              this.allFunctionsLength + g.functions.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllRoleFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllRoleFunctions<IRoleFunctionsModel[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.roleFunctions = response;\r\n          this.roleName = this.roleFunctions[0].roleName;\r\n\r\n          for (let i = 0; i < this.roleFunctions.length; i++) {\r\n            this.rolefunctionIds.push(this.roleFunctions[i].function.Id);\r\n          }\r\n\r\n          if (this.rolefunctionIds.length === this.allFunctionsLength)\r\n            this.allChecked = true;\r\n          else this.allChecked = false;\r\n          //  console.log(\"edit functions IDs\", this.rolefunctionIds);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.rolefunctionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.rolefunctionIds.findIndex((id) => id === functionId);\r\n      this.rolefunctionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.rolefunctionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.functions.forEach((e) => {\r\n          let found = this.rolefunctionIds.includes(e.Id);\r\n          if (!found) this.rolefunctionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.rolefunctionIds = [];\r\n    }\r\n  }\r\n\r\n  onAddFunctions() {\r\n    let obj = {} as IAddEditRoleFunctionsModel;\r\n    obj.roleId = this.roleId;\r\n    obj.functionsList = this.rolefunctionIds;\r\n    // if (obj.functionsList.length == 0) {\r\n    //   this.msg.warning(\"يجب اختيار ظيفة واحده علي الاقل\");\r\n    //   return;\r\n    //   } else {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .addEditRoleFunctions<IAddEditRoleFunctionsModel, any>(obj)\r\n      .subscribe((response) => {\r\n        if (response && response.returnValue === 200) {\r\n          this.msg.success(\"General.AddSuccessfully\");\r\n          ///  console.log(\"add/edit functions: \", response);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    //  }\r\n  }\r\n}\r\n","import { GroupByService } from \"./../../../../shared/services/General/group-by.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IGroupFunctionsListVM,\r\n  IRoleFunctionsModel,\r\n} from \"app/admin/models/roles/roles\";\r\nimport {\r\n  IBranchViewModel,\r\n  IUserBranchModel,\r\n  IUserBranchFunctionViewModel,\r\n  IUserFunctionModel,\r\n  IAddUserBranchFunctionsModel,\r\n  IBranchUserModel,\r\n  IUserModel,\r\n} from \"app/admin/models/roles/user\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { UsersService } from \"app/admin/services/roles/users.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-user-branches-roles\",\r\n  templateUrl: \"./user-branches-roles.component.html\",\r\n  styleUrls: [\"./user-branches-roles.component.scss\"],\r\n})\r\nexport class UserBranchesRolesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  userId: number;\r\n  roleId: number;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  allFunctionsLength = 0;\r\n  submitted: boolean = false;\r\n  allChecked: boolean = false;\r\n  branches: IBranchViewModel[] = [];\r\n  // functions: IRoleFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsListVM[] = [];\r\n  functionIds: number[] = [];\r\n  checkedfunctionIds: number[] = [];\r\n  rowFunctions: IRowFunctionVM[];\r\n  userBranchesWithFunctions: IUserBranchModel[] = [];\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"branchName\",\r\n    \"FunctionName\",\r\n    \"from\",\r\n    \"to\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserBranchModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: ToastrService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    private roleService: RolesService,\r\n    private groupByService: GroupByService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.userId = Number(param.get(\"userId\"));\r\n      this.roleId = Number(param.get(\"roleId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchsIds\");\r\n  }\r\n  get fromDateCtrl() {\r\n    return this.myForm.get(\"fromDate\");\r\n  }\r\n  get toDateCtrl() {\r\n    return this.myForm.get(\"toDate\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchsIds: [[]],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n    });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    this.getAllBranchesByCenter();\r\n    this.getAllFunctions();\r\n    this.getAllUserBranchesWithFunctions();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllBranchesByCenter() {\r\n    this.spinner.show();\r\n    this.userService\r\n      .getAllBranchesByCenter<IBranchViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"branches: \", response);\r\n          this.branches = response;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctionsByRoleId<IGroupFunctionsListVM[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"functions by roleId: \", response);\r\n          this.groupFunctions = this.groupByService.groupBy(\r\n            response,\r\n            \"classificationName\"\r\n          );\r\n\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength = this.allFunctionsLength + g.List.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.functionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.functionIds.findIndex((id) => id === functionId);\r\n      this.functionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.List.forEach((e) => {\r\n          let found = this.functionIds.includes(e.Id);\r\n          if (!found) this.functionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.functionIds = [];\r\n    }\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllUserBranchesWithFunctions<IUserBranchFunctionViewModel>(\r\n        this.userId\r\n      )\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //   console.log(\"brances with functions for user: \", response);\r\n          this.userBranchesWithFunctions = response.branchUserList;\r\n          this.dataSource = new MatTableDataSource(response.branchUserList);\r\n          for (let funParent of this.userBranchesWithFunctions) {\r\n            for (let fun of funParent.roleFunctionsList) {\r\n              this.checkedfunctionIds.push(fun.Id);\r\n            }\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeBranch(branch: IUserBranchModel) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserBranchRoleFunction(this.userId, branch.branchId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"remove brances with functions: \", response);\r\n          let i = this.dataSource.data.findIndex((e) => e == branch);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"branch has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onDeleteFunction(func: any) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserRoleFunctions(func.centerBranchUserFuncId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"remove function: \", response);\r\n          this.getAllUserBranchesWithFunctions();\r\n          this.msg.success(\"function has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // console.log(this.branchIdCtrl?.value);\r\n    if (this.functionIds.length <= 0) {\r\n      this.msg.warning(\"Must select at least one function\");\r\n      return;\r\n    }\r\n\r\n    if (this.branchIdCtrl?.value.length == 0) {\r\n      this.msg.warning(\"Must select at least one branch\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddUserBranchFunctionsModel;\r\n      obj.roleFunctionsIds = this.functionIds;\r\n      obj.branchsIds = this.branchIdCtrl?.value;\r\n      obj.branchUser = {} as IBranchUserModel;\r\n      obj.branchUser.userId = this.userId;\r\n      obj.branchUser.branchId = 0;\r\n      obj.branchUser.from = this.datePipe.transform(this.fromDateCtrl.value);\r\n      obj.branchUser.to = this.datePipe.transform(this.toDateCtrl.value);\r\n\r\n      this.roleService\r\n        .addUserBranchesAndRoleFunctions(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n          if (response) {\r\n            //console.log(\"add new branch with functions: \", response);\r\n            this.getAllUserBranchesWithFunctions();\r\n            this.msg.success(\"branch has been added success\");\r\n            this.myForm.reset();\r\n            this.functionIds = [];\r\n            this.checkedfunctionIds = [];\r\n            this.allChecked = false;\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(branch: IUserBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.branchName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n\r\n  openDeleateFunctionDialog(func: IUserFunctionModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.onDeleteFunction(func);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddUserBranchesAndRoles\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\"  >\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label\r\n                      >{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchsIds\" multiple>\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let branch of branches\"\r\n                        [value]=\"branch.Id\"\r\n                      >\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        branchIdCtrl.invalid &&\r\n                        (branchIdCtrl.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"branchIdCtrl.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-checkbox\r\n                    [checked]=\"allChecked\"\r\n                    (change)=\"SelectAll()\"\r\n                    color=\"accent\"\r\n                  >\r\n                    {{ \"General.SelectAll\" | translate }}\r\n                  </mat-checkbox>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"col-md-4 col-12\"\r\n                  *ngFor=\"let group of groupFunctions; let i = index\"\r\n                >\r\n                  <mat-card>\r\n                    <mat-card-title>{{ group.key | translate }}</mat-card-title>\r\n                    <mat-card-content>\r\n                      <div class=\"row\">\r\n                        <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                        <div\r\n                          class=\"col-12 col-xl-6\"\r\n                          *ngFor=\"let func of group.List; let i = index\"\r\n                        >\r\n                          <mat-checkbox\r\n                            id=\"functions{{ func.Id }}\"\r\n                            (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                            [checked]=\"functionIds.includes(func.Id)\"\r\n                          >\r\n                            {{ func.function.function_en_name | translate }}\r\n                          </mat-checkbox>\r\n                        </div>\r\n                      </div>\r\n                    </mat-card-content>\r\n                  </mat-card>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Save\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.UserBranchesAndRoles\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input matInput (keyup)=\"applyFilter($event)\" #input />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"branchName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.branchName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"FunctionName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FunctionName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <tr *ngFor=\"let func of branch.roleFunctionsList; index as i\">\r\n                  <td>{{ func.functionName | translate }}</td>\r\n                  <td>\r\n                    <a (click)=\"openDeleateFunctionDialog(func)\">\r\n                      <i class=\"fa fa-times fa fa-white\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.from | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.to | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(branch)\"\r\n                    class=\"danger p-0\"\r\n                     matTooltip=\"Delete\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input?.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { LanguageService } from \"app/shared/services/language.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  GetJobDepartment,\r\n  JobTitleByDepartment,\r\n  JopDepViewModel,\r\n} from \"app/admin/models/setup/job-title-by-department\";\r\nimport { JopTitleDepartmentService } from \"app/admin/services/setup/job-title-department.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { UpdateDateComponent } from \"app/shared/components/dialogs/update-date/update-date.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-deparment-jop-title\",\r\n  templateUrl: \"./deparment-job-title.component.html\",\r\n  styleUrls: [\"./deparment-job-title.component.scss\"],\r\n})\r\nexport class UserDeparmentAndJobTitleComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  itemsCounts: number = 0;\r\n  alljoblist: GetJobDepartment[] = [];\r\n\r\n  displayedColumns: string[] = [\r\n    \"id\",\r\n    \"dept_en_name\",\r\n    \"dept_ar_name\",\r\n    \"JobTitle\",\r\n    \"options\",\r\n  ];\r\n  dataSource: MatTableDataSource<JobTitleByDepartment>;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  currentDate = new Date();\r\n\r\n  functionId: number;\r\n  EduCompId: number;\r\n  functionParentId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  // rowFunctions = [\r\n  //   { functionName: \"Edit\" },\r\n  //   { functionName: \"Delete\" },\r\n  //   { functionName: \"UpdateArticalJob\" },\r\n  //   { functionName: \"DeleteArticalJob\" },\r\n  // ];\r\n  userId: number;\r\n  username: string;\r\n  jopTitle = [];\r\n  dep_id: number = 0;\r\n  curPage: number = 1;\r\n  initTable: boolean = true;\r\n  // deptsForUser: JobTitleByDepartment[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private jopTitleDepartmentService: JopTitleDepartmentService,\r\n    private toastr: MessagesService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    public authserv: AuthService,\r\n    private datePipe: DatePipe,\r\n    public languageService: LanguageService\r\n  ) {\r\n    //get userid\r\n    route.paramMap.subscribe((params) => {\r\n      this.userId = Number(params.get(\"userId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.functionParentId = Number(params.get(\"parentId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    this.EduCompId = Number(authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getall(1);\r\n\r\n    this.myForm = this.fb.group(\r\n      {\r\n        dept_id: [0, [Validators.required]],\r\n        job_departments: [\r\n          {\r\n            value: \"\",\r\n            disabled: true,\r\n          },\r\n          [Validators.required],\r\n        ],\r\n        from_date: [null],\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.startSortingTable();\r\n    }\r\n\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  applyFilter(e: string) {\r\n    this.dataSource.filter = e.trim().toLowerCase();\r\n  }\r\n\r\n  customFilter() {\r\n    this.dataSource.filterPredicate = (data: JobTitleByDepartment, filter) => {\r\n      return (\r\n        data.dept_ar_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.dept_en_name?.toLocaleLowerCase().indexOf(filter) != -1 ||\r\n        data.job_departments\r\n          ?.map((d) => d.job_ar_name)\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1 ||\r\n        data.job_departments\r\n          ?.map((d) => d.job_en_name)\r\n          .join(\" \")\r\n          .toLocaleLowerCase()\r\n          .indexOf(filter) != -1\r\n      );\r\n    };\r\n  }\r\n\r\n  getall(page: number) {\r\n    this.curPage = page;\r\n    this.spinner.show();\r\n    return this.jopTitleDepartmentService\r\n      .getJopTitlebyDepartment<JopDepViewModel>(this.userId, page)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.dataSource = new MatTableDataSource(\r\n            data.userDepartmentJobtitleList\r\n          );\r\n          this.itemsCounts = data.itemsCounts;\r\n          // this.deptsForUser = data.userDepartmentJobtitleList;\r\n          this.username = data.employee_name;\r\n          // console.log(this.deptsForUser)\r\n          this.startSortingTable();\r\n          this.customFilter();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  startSortingTable() {\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"JobTitle\":\r\n          return this.languageService.isArabic\r\n            ? item.job_departments[0]?.job_en_name\r\n            : item.job_departments[0]?.job_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  addAll() {\r\n    this.submitted = true;\r\n    // console.log(\"ff\", model);\r\n    if (this.myForm.valid) {\r\n      const model = {\r\n        user_id: this.userId,\r\n        jobTitle_dept_id: this.formCtrls[\"job_departments\"].value,\r\n        from_date: this.datePipe.transform(\r\n          this.myForm.value.from_date ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.myForm.value.to_date),\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.jopTitleDepartmentService\r\n        .addJopTitlebyDepartment(model)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            // console.log(\"add\", model);\r\n            this.getall(1); // first page after add\r\n            this.dataSource.paginator = this.paginator;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n            this.clearForm();\r\n            // console.log(this.myForm.value);\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  updetAll() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      // let allDepJobIds: number[] = this.formCtrls[\"job_departments\"].value;\r\n      // this.deptsForUser.forEach((dep) => {\r\n      //   if (dep.dept_id != this.dep_id) {\r\n      //     dep.job_departments.forEach((job) =>\r\n      //       allDepJobIds.push(job.dep_job_id)\r\n      //     );\r\n      //   }\r\n      // });\r\n      // console.log(allDepJobIds)\r\n      const model = {\r\n        user_id: this.userId,\r\n        jobTitle_dept_id: this.formCtrls.job_departments.value,\r\n        from_date: this.datePipe.transform(\r\n          this.myForm.value.from_date ?? this.currentDate\r\n        ),\r\n        to_date: this.datePipe.transform(this.myForm.value.to_date),\r\n      };\r\n\r\n      this.spinner.show();\r\n      this.jopTitleDepartmentService\r\n        .editAllDeparment(model, this.formCtrls[\"dept_id\"].value)\r\n        .subscribe((res: any) => {\r\n          if (res.returnValue == 1) {\r\n            this.getall(this.curPage);\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.clearForm();\r\n            this.dep_id = 0;\r\n          } else this.toastr.error(res.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  editAll(department: JobTitleByDepartment) {\r\n    //  this.myForm.patchValue(department);\r\n    this.dep_id = department.dept_id;\r\n    this.formCtrls[\"dept_id\"].setValue(department.dept_id);\r\n    this.formCtrls[\"job_departments\"]?.setValue(\r\n      department.job_departments.map((j) => j.dep_job_id)\r\n    );\r\n  }\r\n\r\n  editDate(editjobTitle: GetJobDepartment) {\r\n    this.dialog\r\n      .open(UpdateDateComponent, {\r\n        data: {\r\n          user_dept_job_id: editjobTitle.user_dept_job_id,\r\n          from_date: editjobTitle.from_date,\r\n          to_date: editjobTitle.to_date,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n        if (res) this.getall(this.curPage);\r\n      });\r\n  }\r\n\r\n  deleteUserDeptJobTitle(depId: JobTitleByDepartment) {\r\n    this.spinner.show();\r\n    this.jopTitleDepartmentService\r\n      .deleteUserDeptJobTitle(this.userId, depId.dept_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          if (depId.dept_id == this.formCtrls.dept_id.value) this.clearForm();\r\n          if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getall(this.curPage - 1);\r\n            this.paginator.pageIndex = this.curPage - 1;\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getall(this.curPage);\r\n          }\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(depId: JobTitleByDepartment): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? depId.dept_en_name\r\n            : depId.dept_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteUserDeptJobTitle(depId);\r\n      });\r\n  }\r\n\r\n  deleteJopTitle(jopid: GetJobDepartment) {\r\n    this.spinner.show();\r\n    this.jopTitleDepartmentService\r\n      .deleteJopTitle(jopid.user_dept_job_id)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"General.DeleteSuccessfully\");\r\n          this.getall(this.curPage);\r\n        } else this.toastr.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialogJop(jopid: GetJobDepartment): void {\r\n    // console.log(\"id\", jopid.user_dept_job_id);\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: this.languageService.isArabic\r\n            ? jopid.job_ar_name\r\n            : jopid.job_en_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteJopTitle(jopid);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.formCtrls[\"dept_id\"]?.setValue(0);\r\n    this.dep_id = 0;\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<mat-card>\r\n  <mat-card-title>\r\n    <span *ngIf=\"dep_id == 0\">\r\n      {{ \"jobTitlebyDepartment.adddepartment\" | translate | titlecase }}\r\n    </span>\r\n\r\n    <span *ngIf=\"dep_id > 0\">\r\n      {{ \"jobTitlebyDepartment.update\" | translate | titlecase }}\r\n    </span>\r\n    -\r\n    {{ username }}\r\n\r\n    <a\r\n      mat-raised-button\r\n      routerLink=\"/dashboard/users\"\r\n      [queryParams]=\"{\r\n        functionId: functionParentId\r\n      }\"\r\n      class=\"btn btn-warning bg-light-warning float-right\"\r\n    >\r\n      {{ \"General.Back\" | translate }}\r\n    </a>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <department-dropdown\r\n                [control]=\"formCtrls.dept_id\"\r\n                [submitted]=\"submitted\"\r\n              ></department-dropdown>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <job-title-by-department-dropdown\r\n                [control]=\"formCtrls.job_departments\"\r\n                [departmentControl]=\"formCtrls.dept_id\"\r\n                [submitted]=\"submitted\"\r\n                [multiple]=\"true\"\r\n              ></job-title-by-department-dropdown>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-datepicker\r\n                [control]=\"formCtrls.from_date\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.FromDate\"\r\n              ></app-datepicker>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-datepicker\r\n                [control]=\"formCtrls.to_date\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.ToDate\"\r\n              ></app-datepicker>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n\r\n  <mat-card-actions align=\"end\">\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-info bg-light-info\"\r\n      *ngIf=\"dep_id == 0\"\r\n      (click)=\"addAll()\"\r\n    >\r\n      <i class=\"fa fa-plus mr-1\"></i>\r\n      {{ \"General.Add\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-info bg-light-info\"\r\n      *ngIf=\"dep_id > 0\"\r\n      (click)=\"updetAll()\"\r\n    >\r\n      {{ \"General.Update\" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf=\"dep_id > 0\"\r\n      mat-raised-button\r\n      class=\"btn btn-warning\"\r\n      (click)=\"clearForm()\"\r\n    >\r\n      {{ \"General.Reset\" | translate }}\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"jobTitlebyDepartment.department\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event.target.value)\"\r\n            placeholder=\"Ex.ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"id\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let element; index as i\">\r\n                {{ i + 1 }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"dept_ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"jobTitlebyDepartment.ArabicDepartmentName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                {{ element.dept_ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"dept_en_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"jobTitlebyDepartment.EnglishDepartmentName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                {{ element.dept_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"JobTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"jobTitlebyDepartment.allJobTitle\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                <table class=\"table table-sm\">\r\n                  <thead class=\"thead-dark\">\r\n                    <tr>\r\n                      <th scope=\"col\">\r\n                        {{ \"labels.enName\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        {{ \"labels.arName\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        {{ \"labels.FromDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\">\r\n                        {{ \"labels.ToDate\" | translate }}\r\n                      </th>\r\n                      <th scope=\"col\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr\r\n                      *ngFor=\"\r\n                        let department of element.job_departments;\r\n                        index as i\r\n                      \"\r\n                    >\r\n                      <td>\r\n                        {{ department.job_en_name }}\r\n                      </td>\r\n                      <td>\r\n                        {{ department.job_ar_name }}\r\n                      </td>\r\n                      <td>{{ department.from_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>{{ department.to_date | date : \"dd-MM-yyyy\" }}</td>\r\n                      <td>\r\n                        <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                          <a\r\n                            *ngIf=\"fun.functionName === 'DeleteArticalJob'\"\r\n                            (click)=\"openDeleateDialogJop(department)\"\r\n                            class=\"danger p-0\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-times fa fa-white\"\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </a>\r\n\r\n                      <a\r\n                        (click)=\"editDate(department)\"\r\n                        *ngIf=\"fun.functionName === 'UpdateArticalJob'\"\r\n                        class=\"success p-0\"\r\n                        matTooltip=\"{{ fun.function_en_name }}\"\r\n                      >\r\n                        <i\r\n                          class=\"ft-edit-2 font-medium-3 mr-2\"\r\n                          aria-hidden=\"true\"\r\n                        ></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </ng-container>\r\n\r\n            <ng-container matColumnDef=\"options\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"text-center px-2\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editAll(element)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(element)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"5\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n\r\n        <mat-paginator\r\n          [pageSizeOptions]=\"[10]\"\r\n          (page)=\"getall($event.pageIndex + 1)\"\r\n          [length]=\"itemsCounts\"\r\n          [pageSize]=\"10\"\r\n          showFirstLastButtons\r\n          aria-label=\"Select page of departments\"\r\n        ></mat-paginator>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IRolesViewModel } from \"app/admin/models/roles/roles\";\r\nimport {\r\n  IAddEditUserModel,\r\n  IUserModel,\r\n  IUserSearchVM,\r\n  IUserViewModel,\r\n} from \"app/admin/models/roles/user\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { UsersService } from \"app/admin/services/roles/users.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AppConstants } from \"app/shared/data/app_constants\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\n\r\n@Component({\r\n  selector: \"app-users\",\r\n  templateUrl: \"./users.component.html\",\r\n  styleUrls: [\"./users.component.scss\"],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  EduCompId: number;\r\n  submitted: boolean = false;\r\n  // // roles: IRolesViewModel[] = [];\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCounts: number = 0;\r\n  items: number = 16184;\r\n  curPage: number = 1;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"ar_name\",\r\n    \"account_email\",\r\n    \"mobile\",\r\n    // \"role\",\r\n    \"code\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: MessagesService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    // // private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    // private router: Router,\r\n    public appConstants: AppConstants,\r\n    public languageService: LanguageService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n    // this.route.data.subscribe((val) => {\r\n    //   console.log(\"view:-\", val);\r\n    // });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        userId: [0, [Validators.required]],\r\n        userName: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n        email: [null, [Validators.required, Validators.email]],\r\n        phone: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n            Validators.maxLength(this.appConstants.MobileLength),\r\n            Validators.minLength(this.appConstants.MobileLength),\r\n            CustomeValidator.MobileStartsWith,\r\n          ],\r\n        ],\r\n        // // roleId: [null, [Validators.required]],\r\n        password: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomeValidator.whiteSpace,\r\n            Validators.minLength(3),\r\n          ],\r\n        ],\r\n        confirmedPass: [null],\r\n        code: [null, [Validators.required, CustomeValidator.whiteSpace]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\"password\", \"confirmedPass\"),\r\n      } as AbstractControlOptions\r\n    );\r\n\r\n    // // this.roleService\r\n    // //   .getAllRoles<IRolesViewModel[]>(this.EduCompId)\r\n    // //   .subscribe((response) => {\r\n    // //     if (response) {\r\n    // //       this.roles = response;\r\n    // //     }\r\n    // //   });\r\n\r\n    this.getAllUsers(this.curPage);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.resetSearch();\r\n    });\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllUsers(pageNumber: number) {\r\n    // if (!isSearch) this.clearForm();\r\n    let searchBody: IUserSearchVM = {\r\n      ar_name: this.FormCtrls.userName.value?.trim().toLowerCase(),\r\n      account_email: this.FormCtrls.email.value?.trim().toLowerCase(),\r\n      mobile: this.FormCtrls.phone.value?.trim(),\r\n      code: this.FormCtrls.code.value?.trim().toLowerCase(),\r\n    };\r\n\r\n    this.itemsCounts = 0;\r\n    this.curPage = pageNumber;\r\n    this.spinner.show();\r\n    this.userService\r\n      .getAllUsers<IUserViewModel>(this.EduCompId, pageNumber, searchBody)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"users: \", response);\r\n          this.dataSource = new MatTableDataSource(response.usersList);\r\n          this.itemsCounts = response.countItems;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editUser(user: IUserModel) {\r\n    // this.myForm.patchValue(user);\r\n    this.FormCtrls.userId?.setValue(user.user_ID);\r\n    this.FormCtrls.userName?.setValue(user.ar_name);\r\n    this.FormCtrls.email?.setValue(user.account_email);\r\n    this.FormCtrls.phone?.setValue(user.mobile);\r\n    this.FormCtrls.code?.setValue(user.code);\r\n    // this.FormCtrls.roleId?.setValue(user.roleId);\r\n    // this.FormCtrls.password?.setValue(user.account_password);\r\n    // this.FormCtrls.confirmedPass?.setValue(user.account_password);\r\n  }\r\n\r\n  removeUser(user: IUserModel) {\r\n    this.spinner.show();\r\n    this.userService.deleteUser(user.user_ID).subscribe((response: any) => {\r\n      if (response && response?.returnValue == 1) {\r\n        // console.log(\"user: \", response);\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (user.user_ID == this.FormCtrls.userId.value) this.clearForm();\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllUsers(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllUsers(this.curPage);\r\n        }\r\n      } else this.toastr.error(response?.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditUserModel;\r\n      obj.user = {} as IUserModel;\r\n      obj.user.user_ID = this.FormCtrls.userId?.value;\r\n      obj.user.ar_name = this.FormCtrls.userName?.value;\r\n      obj.user.account_email = this.FormCtrls?.email?.value;\r\n      obj.user.mobile = this.FormCtrls.phone?.value;\r\n      // obj.user.roleId = this.FormCtrls.roleId?.value;\r\n      obj.user.account_password = this.FormCtrls.password?.value;\r\n      obj.code = this.FormCtrls.code?.value;\r\n      // obj.roleId = this.FormCtrls.roleId?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n\r\n      this.userService\r\n        .addEditUser<IAddEditUserModel, any>(obj)\r\n        .subscribe((response) => {\r\n          // console.log(\"created: \", response);\r\n          if (response && response !== null) {\r\n            if (response.returnValue == 0) {\r\n              this.toastr.error(response.returnString);\r\n            } else {\r\n              this.clearForm();\r\n\r\n              if (obj.user.user_ID == 0) {\r\n                this.getAllUsers(1); // first page after add\r\n                this.dataSource.paginator = this.paginator;\r\n              } else {\r\n                this.getAllUsers(this.curPage); // current page after update\r\n              }\r\n\r\n              this.toastr.success(\r\n                obj.user.user_ID == 0\r\n                  ? \"General.AddSuccessfully\"\r\n                  : \"General.UpdateSuccessfully\"\r\n              );\r\n            }\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    } else this.toastr.error(\"General.FormNotValid\");\r\n  }\r\n\r\n  openDeleateDialog(user: IUserModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: user.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeUser(user);\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.myForm.reset();\r\n    this.FormCtrls.userId.setValue(0);\r\n    this.submitted = false;\r\n  }\r\n\r\n  resetSearch() {\r\n    this.clearForm();\r\n    this.getAllUsers(1);\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{\r\n          (FormCtrls.userId.value == 0\r\n            ? \"labels.CreateEmployee\"\r\n            : \"labels.UpdateEmployee\"\r\n          ) | translate\r\n        }}\r\n\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"getAllUsers(1); dataSource.paginator = paginator\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"resetSearch()\"\r\n          class=\"btn btn-warning float-right\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.userName\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Name\"\r\n                    autocomplete=\"new-password\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.phone\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Mobile\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.email\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Email\"\r\n                    type=\"email\"\r\n                    autocomplete=\"new-password\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <!-- Role -->\r\n                <!-- <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Role\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"roleId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option *ngFor=\"let role of roles\" [value]=\"role.Id\">\r\n                        {{ role.roleName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.roleId.invalid &&\r\n                        (FormCtrls.roleId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.roleId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.password\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Password\"\r\n                    type=\"password\"\r\n                    autocomplete=\"new-password\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.confirmedPass\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.ConfirmPassword\"\r\n                    type=\"password\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"FormCtrls.code\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Code\"\r\n                  ></app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus mr-1\" *ngIf=\"FormCtrls.userId.value == 0\"></i>\r\n          {{\r\n            (FormCtrls.userId.value == 0 ? \"General.Add\" : \"General.Update\")\r\n              | translate\r\n          }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"FormCtrls.userId.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-warning\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Employees\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{ \"General.Search\" | translate }}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"account_email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n            <!-- <ng-container matColumnDef=\"role\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n               {{ \"labels.Role\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.roleName }}</td>\r\n            </ng-container> -->\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef></th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editUser(user)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(user)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Branches'\"\r\n                    routerLink=\"../user-dep-job/{{ user.user_ID }}\"\r\n                    [queryParams]=\"{\r\n                      parentId: functionId,\r\n                      functionId: fun.Id\r\n                    }\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"{{\r\n                      'jobTitlebyDepartment.employeeJob' | translate\r\n                    }}\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"6\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllUsers($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CashPaymentService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  CashPaymentSearch(body: any, EduCompId: any) {\r\n    return this.post(\r\n      `CashPayment/returnUserDataByPhoneNumber/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  CashPaymentPost(EduCompId: any, body: any) {\r\n    return this.post(`CashPayment/CashPaymentPost/${EduCompId}`, body);\r\n  }\r\n\r\n  GetItemsByLesson(\r\n    EduCompId: number,\r\n    lessonId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.get(\r\n      `${`CashPayment/returnItemsByLessonId`}/${EduCompId}/${lessonId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsByUnit(\r\n    EduCompId: number,\r\n    unitId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.get(\r\n      `CashPayment/returnItemsByUnitId/${EduCompId}/${unitId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsBySubject(\r\n    EduCompId: number,\r\n    subjectId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.get(\r\n      `CashPayment/returnItemsBySubjectId/${EduCompId}/${subjectId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsByLessonWithEnded(\r\n    EduCompId: number,\r\n    lessonId: number,\r\n    itemTypeId: number,\r\n    teacherId: number,\r\n    ended: boolean\r\n  ) {\r\n    return this.get(\r\n      `CashPayment/returnItemsByLessonIdSpecialViews/${EduCompId}/${lessonId}/${itemTypeId}/${teacherId}/${ended}`\r\n    );\r\n  }\r\n\r\n  geItemPrice(id: number, userId: number) {\r\n    return this.get(`CashPayment/returnMaterialPriceById/${id}/${userId}`);\r\n  }\r\n\r\n  getPaymentsHistory(p: number, userId: any) {\r\n    return this.get(\r\n      `CashPayment/returnUserPaymentsHistoryTable/${p}/${userId}`\r\n    );\r\n  }\r\n\r\n  ManualPaymentByExcel(EduCompId: number, body: any) {\r\n    return this.post(`CashPayment/postManualPaymentByExcel/${EduCompId}`, body);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ExamsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    return this.get(`Admin/QuestionsBank/${EduCompId}`);\r\n  }\r\n\r\n  getQuestions(page: any, EduCompId: any, data: any) {\r\n    return this.post(`Admin/QuestionsBankTable/${page}/${EduCompId}`, data);\r\n  }\r\n\r\n  getQuestionByID(id: any) {\r\n    return this.get(`Admin/get-question-bank/${id}`);\r\n  }\r\n\r\n  addEditQuestion(eduCompID: any, data: any) {\r\n    return this.post(`Admin/question-bank-add-edit/${eduCompID}`, data);\r\n  }\r\n\r\n  updateQuestion(Id: any, data: any) {\r\n    return this.put(`Admin/QuestionsBank/${Id}`, data);\r\n  }\r\n\r\n  deleteQuestion(eduCompID: any, id: any) {\r\n    return this.post(`Admin/removeQuestionBank/${eduCompID}/${id}`, null);\r\n  }\r\n\r\n  getSubjectsByTeacherId(teacherId: any) {\r\n    return this.post(`Admin/get-lectures-by-teacher-query`, teacherId);\r\n  }\r\n\r\n  getAllNormalExams<T, TV>(obj: T) {\r\n    return this.post<TV>(\"exam/returnRecentlyAddedExams\", obj);\r\n  }\r\n\r\n  publishExam<TV>(examId: number) {\r\n    return this.get<TV>(`exam/publish-depublish-exam/${examId}`);\r\n  }\r\n\r\n  deleteExam<TV>(id: number) {\r\n    // console.log(id);\r\n    return this.delete<TV>(`Admin/RemoveExam/${id}`);\r\n  }\r\n\r\n  getAllCountries<T>() {\r\n    return this.get<T>(\"country/return-countries\");\r\n  }\r\n\r\n  getAllStages<T>(countryId: number) {\r\n    return this.get<T>(`stage/return-stages/${countryId}`);\r\n  }\r\n\r\n  getAllEducationYears<T>(stageId: number) {\r\n    return this.get<T>(`year/return-years/${stageId}`);\r\n  }\r\n\r\n  getAllSubjects<T>(educationYearId: number) {\r\n    return this.get<T>(`subject/return-subjects/${educationYearId}`);\r\n  }\r\n\r\n  getAllTeachersBySublectId<T>(subjectId: number) {\r\n    return this.get<T>(`teacher/return-teachers/${subjectId}`);\r\n  }\r\n\r\n  getAllUnitsBySublectId<T>(subjectId: number) {\r\n    return this.get<T>(`unit/return-units/${subjectId}`);\r\n  }\r\n\r\n  getAllLessonsByUnitId<T>(unitId: number) {\r\n    return this.get<T>(`lesson/return-lesson/${unitId}`);\r\n  }\r\n\r\n  getAllExamType<T>() {\r\n    return this.get<T>(\"exam/return-exam-types\");\r\n  }\r\n\r\n  getExamById<T>(id: number) {\r\n    return this.get<T>(`exam/get-exam-by-id/${id}`);\r\n  }\r\n\r\n  getExamDetailsById<T>(examId: number) {\r\n    return this.get<T>(`Exam/Details/${examId}`);\r\n  }\r\n\r\n  addExam<T, TY>(data: T) {\r\n    return this.post<TY>(\"exam/add-exam\", data);\r\n  }\r\n\r\n  getAllQuestionGroups<T>() {\r\n    return this.get<T[]>(\"exam/return-question-groups\");\r\n  }\r\n\r\n  getAllQuestionHeaders<T>() {\r\n    return this.get<T[]>(\"exam/return-question-heads\");\r\n  }\r\n\r\n  addExamGroupHeader<T, TY>(data: T) {\r\n    return this.post<TY>(`exam/add-question-group-head`, data);\r\n  }\r\n\r\n  editExamGroupHeader<T, TY>(data: T) {\r\n    return this.post<TY>(\"exam/EditQuestionHead\", data);\r\n  }\r\n\r\n  deleteExamGroupHeader(id: number) {\r\n    return this.delete(`exam/deleteExamHeadGroupById/${id}`);\r\n  }\r\n\r\n  getAllGroupHeaderByExamId<T>(id: number) {\r\n    return this.get<T[]>(`exam/GetQuestionHeadGroupByExamId/${id}`);\r\n  }\r\n\r\n  getAllQuestionsByHeadId<T>(id: number) {\r\n    return this.get<T>(`exam/GetExamQuestionsByQuestionHead/${id}`);\r\n  }\r\n\r\n  addQuestion<T>(data: any) {\r\n    return this.post<T>(\"exam/add-exam-questions\", data);\r\n  }\r\n\r\n  addSurveyQuestion<T>(data: any) {\r\n    return this.post<T>(\"exam/add-survey-questions\", data);\r\n  }\r\n\r\n  getQuestionForEditByID<T>(id: number) {\r\n    return this.get<T>(`exam/return-question-details/${id}`);\r\n  }\r\n\r\n  editQuestion<T>(data: any) {\r\n    return this.post<T>(\"exam/edit-exam-questions\", data);\r\n  }\r\n\r\n  editSurveyQuestion<T>(data: any) {\r\n    return this.post<T>(\"exam/edit-survey-questions\", data);\r\n  }\r\n\r\n  deleteExamQuestion<T>(id: number) {\r\n    // console.log(id);\r\n    return this.delete<T>(`exam/RemoveExamQuestion/${id}`);\r\n  }\r\n\r\n  getExamPoints(examId: any, page: any) {\r\n    return this.get(`exam/returnCustomPointExamByExamId/${examId}/${page}`);\r\n  }\r\n\r\n  addExamPoint(body: any) {\r\n    return this.post(\"exam/CustomExamPoint\", body);\r\n  }\r\n\r\n  deleteExamPoint(pointId: any) {\r\n    return this.delete(`exam/DeleteCustomExamPoint/${pointId}`);\r\n  }\r\n\r\n  UploadExamStudentGrades(data: any) {\r\n    return this.post(\"Exam/postStudentsGrades\", data);\r\n  }\r\n\r\n  getQuestionByCorrectionType(page: any, correctionStatus: any) {\r\n    return this.get(`Exam/CorrectionIndexPaging/${page}/${correctionStatus}`);\r\n  }\r\n\r\n  submitCorrection(body: any) {\r\n    return this.post(`/Exam/submitQuestionCorrection`, body);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ManageViewsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  searchStudent(EduCompId: any, body: any) {\r\n    return this.post(`Admin/searchUSer/${EduCompId}`, body);\r\n  }\r\n\r\n  resetViews(EduCompId: any, body: any) {\r\n    return this.post(`Admin/resetViewsCount/${EduCompId}`, body);\r\n  }\r\n\r\n  addExceptionalViews(EduCompId: any, body: any) {\r\n    return this.post(`Admin/ExceptionalViewsResetCount/${EduCompId}`, body);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PointsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  //  Points Setup\r\n\r\n  addPoints(educompId: number, data: any) {\r\n    return this.post(`SetupPoints/SetupPoints/${educompId}`, data);\r\n  }\r\n\r\n  getPoints<T>(courseId: number, typeId: number, eduCompId: number) {\r\n    return this.get<T>(\r\n      `SetupPoints/returnPointSystemByResourceId/${courseId}/${typeId}/${eduCompId}`\r\n    );\r\n  }\r\n\r\n  deletePoint(pointId: any) {\r\n    return this.post(`SetupPoints/DeletePointSystemDetails/${pointId}`, null);\r\n  }\r\n\r\n  //######################################################################\r\n  // Custome\r\n  //######################################################################\r\n  // Lecture Custome\r\n\r\n  addLectureCustomPoint(data: any) {\r\n    return this.post(`SetupPoints/CustomMaterialPoint`, data);\r\n  }\r\n\r\n  getLectureCustomPoints<T>(page: any, materialId: any) {\r\n    return this.get<T>(\r\n      `SetupPoints/returnCustomPointMaterialByMaterialId/${materialId}/${page}`\r\n    );\r\n  }\r\n\r\n  deleteLectureCustomPoint(pointId: any) {\r\n    return this.post(`SetupPoints/DeleteCustomMaterialPoint/${pointId}`, null);\r\n  }\r\n\r\n  //######################################################################\r\n  // Exam Custome\r\n  addExamCustomPoint(body: any) {\r\n    return this.post(\"SetupPoints/CustomExamPoint\", body);\r\n  }\r\n\r\n  getExamCustomPoints<T>(page: any, examId: any) {\r\n    return this.get<T>(\r\n      `SetupPoints/returnCustomPointExamByExamId/${examId}/${page}`\r\n    );\r\n  }\r\n\r\n  deleteExamCustomPoint(pointId: any) {\r\n    return this.post(`SetupPoints/DeleteCustomExamPoint/${pointId}`, null);\r\n  }\r\n\r\n  //######################################################################\r\n  // Template Custome\r\n  addTemplateCustomPoint(body: any) {\r\n    return this.post(\"SetupPoints/CustomTemplatePoint\", body);\r\n  }\r\n\r\n  getTemplateCustomPoints<T>(page: any, templateId: any) {\r\n    return this.get<T>(\r\n      `SetupPoints/returnCustomPointTemplateByTemplateId/${templateId}/${page}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { IArticleViewModel } from \"app/admin/models/admin/setup/articles\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ArticlesService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAllArticles<T>(page: number, EduCompId: number) {\r\n    return this.get<IArticleViewModel>(\r\n      `Article/geAllArticles/${EduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  addArticle<T, TV>(obj: T) {\r\n    return this.post<TV>(`Article/PostArticles`, obj);\r\n  }\r\n\r\n  editArticle<T, TV>(obj: T, id: number) {\r\n    return this.put<TV>(`Article/PutArticles/${id}`, obj);\r\n  }\r\n\r\n  editJobTitleArticle<T, TV>(id: number, obj: T) {\r\n    return this.put<TV>(`Article/EditArticleDepJob/${id}`, obj);\r\n  }\r\n\r\n  deleteArticle(id: any) {\r\n    return this.delete(`Article/DeleteArticles/${id}`);\r\n  }\r\n\r\n  deleteJobTitleArticle(id: any) {\r\n    return this.delete(`Article/DeleteJobTitleOfArticles/${id}`);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ISearchMaterialVM } from \"app/admin/models/admin/educations\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class SubjectMaterialsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getParts2URL = \"Admin/returnMaterialPartsByMaterialId/\";\r\n  AttendanceURL = \"Admin/postOfflineLectureView/\";\r\n  materialsattacAttendeesURL = \"MaterialsAttach/offline-lecture-attendees/\";\r\n\r\n  addEditMaterial<T>(data: T) {\r\n    return this.post(`Admin/AddSubjectMaterialForm`, data);\r\n  }\r\n\r\n  getMaterialById<T>(subjectId: any, materialId: any) {\r\n    return this.get<T>(\r\n      `Admin/showSubjectMaterialView/${subjectId}/${materialId}`\r\n    );\r\n  }\r\n\r\n  updateMaterialForm(EduCompId: any, data: any) {\r\n    return this.post(`Admin/AddSubjectMaterialForm/${EduCompId}`, data);\r\n  }\r\n\r\n  deleteMaterial(materialId: any) {\r\n    return this.delete(`Admin/RemoveMaterial/${materialId}`);\r\n  }\r\n\r\n  publishMaterial(materialId: any) {\r\n    return this.get(`Admin/PublishDepublishhMaterial/${materialId}`);\r\n  }\r\n\r\n  getGroupsByEduCompId<T>(EduCompId: any) {\r\n    return this.get<T>(\r\n      `Admin/returnListEduCompIdGroupByEduCompID/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  returnSearchedUnitsBySubjectId<T>(subjectId: any) {\r\n    return this.get<T>(`Admin/returnSearchedUnitsBySubjectId/${subjectId}`);\r\n  }\r\n\r\n  returnSearchedLessonsByUnitId<T>(UnitId: any) {\r\n    return this.get<T>(`Admin/returnSearchedLessonsByUnitId/${UnitId}`);\r\n  }\r\n\r\n  searcheMaterial<T>(data: ISearchMaterialVM) {\r\n    return this.post<T>(`Admin/returnSearchedMaterialViewResult`, data);\r\n  }\r\n\r\n  showVideoByMaterialId(materialId: any) {\r\n    return this.get(`Admin/showVideoByMaterialId/${materialId}`);\r\n  }\r\n\r\n  dawnloadLectureAttendees(materialId: any) {\r\n    return this.get(`Admin/offlineLectureAttendees/${materialId}`);\r\n  }\r\n\r\n  getMaterialParts(materialId: any) {\r\n    return this.get(`Admin/materialPartsTable/${materialId}`);\r\n  }\r\n\r\n  getPartById<T>(partId: any) {\r\n    return this.get<T>(`Admin/getMaterialPartByID/${partId}`);\r\n  }\r\n\r\n  addPart(data: any) {\r\n    return this.post(\"Admin/AddMaterialPart\", data);\r\n  }\r\n\r\n  // updatePart(data: any) {\r\n  //   return this.post(this.updatePartURL, data);\r\n  // }\r\n\r\n  deletePart(partId: any) {\r\n    return this.post(`Admin/RemoveMaterialPart/${partId}`, null);\r\n  }\r\n\r\n  getMaterialAttaches(materialId: any) {\r\n    return this.get(`Admin/materialAttachsTable/${materialId}`);\r\n  }\r\n\r\n  addAttach(data: any) {\r\n    return this.post(\"Admin/AddMaterialAttach\", data);\r\n  }\r\n\r\n  deleteAttach(AttachId: any) {\r\n    return this.post(`Admin/RemoveMaterialAttach/${AttachId}`, null);\r\n  }\r\n\r\n  getExamsAndTemplates(subjectId: number) {\r\n    return this.get(`Admin/showMaterialQuiz/${subjectId}`);\r\n  }\r\n\r\n  getMaterialQuizes<T>(materialId: any) {\r\n    return this.get<T>(`Admin/returnExamsByMaterialId/${materialId}`);\r\n  }\r\n\r\n  addMaterialQuiz(materialIdHiddenQuiz: any, data: any) {\r\n    return this.post(`Admin/AddQuizForm/${materialIdHiddenQuiz}`, data);\r\n  }\r\n\r\n  deleteMaterialQuiz(Id: any) {\r\n    return this.delete(`Admin/RemoveMaterialQuiz/${Id}`);\r\n  }\r\n\r\n  AddPopQuestion(materialId: any, body: any) {\r\n    return this.post(`Admin/AddPopQuestion/${materialId}`, body);\r\n  }\r\n\r\n  getPopQuestions(materialId: any) {\r\n    return this.get(\r\n      `Admin/returnMaterialPopQuestionsByMaterialId/${materialId}`\r\n    );\r\n  }\r\n\r\n  deletePopQuestion(id: any) {\r\n    return this.post(`Admin/DeleteMaterialPopQuestion/${id}`, null);\r\n  }\r\n\r\n  UploadStudentAttendance(LectureID: any, attendance: any, data: any) {\r\n    return this.post(\r\n      `Admin/postOfflineLectureAttendees/${attendance}/${LectureID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  offlineLectureAttendeesTable<T>(LectureID: any, page: any) {\r\n    return this.get<T>(\r\n      `Admin/offlineLectureAttendeesTable/${LectureID}/${page}`\r\n    );\r\n  }\r\n\r\n  searchAttendanceManual(data: any) {\r\n    return this.post(\"Admin/offlineLectureAttendees\", data);\r\n  }\r\n\r\n  updateAttendanceManual(data: any) {\r\n    return this.post(\"Admin/editOfflineLectureAttendeeState\", data);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BranchesService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAllBranchesURL = \"usermanagement/returnCenterBranchesByEduComp/\";\r\n  addEditBranchesURL = \"usermanagement/AddEditBranch\";\r\n  deleteBranchesURL = \"usermanagement/deleteBranch\";\r\n\r\n  getAllDistrictsURL = \"usermanagement/returnDistrictsList\"; // DropDownMenu\r\n  getAllAllCenterBranchesURL = \"usermanagement/returnAllCenterBranches\"; // /{page} => paginated\r\n\r\n  getAllBranches<T>(eduCompId: any) {\r\n    return this.get<T>(this.getAllBranchesURL + \"/\" + eduCompId);\r\n  }\r\n\r\n  getAllAllCenterBranches<T>(eduCompId: number, page: number) {\r\n    return this.get<T>(\r\n      this.getAllAllCenterBranchesURL + \"/\" + eduCompId + \"/\" + page\r\n    );\r\n  }\r\n\r\n  addEditBranches<T, TV>(obj: T) {\r\n    return this.post<TV>(this.addEditBranchesURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":18,\r\n  //     \"EduCompId\":2,\r\n  //     \"Name\":\"Test edit Branch\",\r\n  //     \"districtId\":2\r\n  // }\r\n\r\n  deleteBranch<T>(branchId: number) {\r\n    return this.delete<T>(this.deleteBranchesURL + \"/\" + branchId);\r\n  }\r\n\r\n  getAllDistricts<T>() {\r\n    return this.get<T>(this.getAllDistrictsURL);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FunctionsService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  addEditFunctionURL = \"usermanagement/AddEditFunction\";\r\n  deleteFunctionURL = \"usermanagement/deleteFunction\";\r\n\r\n  addEditFunction<T, TV>(obj: T) {\r\n    return this.post<TV>(this.addEditFunctionURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":0,\r\n  //     \"functionName\":\"test عربي\",\r\n  //     \"function_en_name\":\"test Eng\",\r\n  //     \"functionURL\":\"url test\"\r\n  // }\r\n\r\n  deleteFunction<T>(functionId: number) {\r\n    return this.delete<T>(this.deleteFunctionURL + \"/\" + functionId);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RolesService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAllRoles<T>(EduCompId: number) {\r\n    return this.get<T>(\"usermanagement/returnRoles\" + \"/\" + EduCompId);\r\n  }\r\n\r\n  addEditRole<T, TV>(obj: T) {\r\n    return this.post<TV>(`usermanagement/create-role`, obj);\r\n  }\r\n\r\n  deleteRole(roleId: number) {\r\n    return this.delete(\"usermanagement/deleteRole\" + \"/\" + roleId);\r\n  }\r\n\r\n  getAllFunctions<T>(page: number, getAll: boolean) {\r\n    return this.get<T>(`usermanagement/getAllFunctions/${page}/${getAll}`);\r\n  }\r\n\r\n  getAllRoleFunctions<T>(roleId: number) {\r\n    return this.get<T>(`usermanagement/returnRoleFunctionsByRoleID/${roleId}`);\r\n  }\r\n\r\n  addEditRoleFunctions<T, TV>(obj: T) {\r\n    return this.post<TV>(\"usermanagement/add-function-to-role\", obj);\r\n  }\r\n\r\n  getAllFunctionsByRoleId<T>(roleId: number) {\r\n    return this.get<T>(`usermanagement/returnRoleFunctionsByRoleID/${roleId}`);\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions<T>(userId: number) {\r\n    return this.get<T>(\r\n      `usermanagement/returnAllBranchUserAllRoleFunction/${userId}`\r\n    );\r\n  }\r\n\r\n  addUserBranchesAndRoleFunctions<T, TV>(obj: T) {\r\n    return this.post<TV>(\"usermanagement/addUserBranchesAndRoleFunctions\", obj);\r\n  }\r\n\r\n  deleteUserRoleFunctions(functionId: number) {\r\n    return this.delete(\r\n      `usermanagement/deleteBranchUserRoleFunction/${functionId}`\r\n    );\r\n  }\r\n\r\n  deleteUserBranchRoleFunction(userId: number, branchId: number) {\r\n    return this.delete(\r\n      `usermanagement/deleteBranchUserAllRoleFunction/${userId}/${branchId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IUserSearchVM } from \"app/admin/models/roles/user\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UsersService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAllUsers<T>(eduCompId: any, page: number, searchBody: IUserSearchVM) {\r\n    return this.post<T>(\r\n      `usermanagement/returnUsersByEduComp/${eduCompId}/${page}`,\r\n      searchBody\r\n    );\r\n  }\r\n\r\n  addEditUser<T, TV>(obj: T) {\r\n    return this.post<TV>(\"usermanagement/create-user-account\", obj);\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    return this.delete(`usermanagement/deleteUser/${userId}`);\r\n  }\r\n\r\n  getAllBranchesByCenter<T>(eduCompId: any) {\r\n    return this.get<T>(\r\n      `usermanagement/returnCenterBranchesByEduComp/${eduCompId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class WhatsAppService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  sendSingularWhatsAppMsg(data: any) {\r\n    return this.post(`whats-app/send-singular-message`, data);\r\n  }\r\n\r\n  sendWhatsAppMsg(data: any) {\r\n    return this.post(`whats-app/send-message`, data);\r\n  }\r\n}\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport {\r\n  AbstractControlOptions,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  IJobTitleDatesEditVM,\r\n  IJobTitleEditDialogVM,\r\n} from \"app/admin/models/setup/job-title\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-edit-job-title-dates\",\r\n  templateUrl: \"./edit-job-title-dates.component.html\",\r\n  styleUrls: [\"./edit-job-title-dates.component.scss\"],\r\n})\r\nexport class EditJobTitleDatesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  jobTitle: IJobTitleEditDialogVM;\r\n\r\n  constructor(\r\n    public languageService: LanguageService,\r\n    private fb: FormBuilder,\r\n    private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<EditJobTitleDatesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { jobTitle: IJobTitleEditDialogVM }\r\n  ) {\r\n    this.jobTitle = data.jobTitle;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        from_date: [null, [Validators.required]],\r\n        to_date: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"from_date\", \"to_date\"),\r\n      } as AbstractControlOptions\r\n    );\r\n    this.myForm.patchValue(this.jobTitle);\r\n  }\r\n\r\n  editJobTitleDates() {\r\n    this.submitted = true;\r\n    // console.log(this.myForm.value);\r\n    if (this.myForm.valid) {\r\n      let jobTitleDates: IJobTitleDatesEditVM = {\r\n        from_date: this.datePipe.transform(this.formCtrl?.from_date.value),\r\n        to_date: this.datePipe.transform(this.formCtrl?.to_date?.value),\r\n      };\r\n\r\n      this.dialogRef.close({\r\n        jobTitle: jobTitleDates,\r\n      });\r\n    }\r\n  }\r\n\r\n  get formCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  {{ \"JobTitle.updateJobTitle\" | translate }} -\r\n  {{\r\n    languageService.isArabic\r\n      ? jobTitle.ar_name ?? jobTitle.en_name\r\n      : jobTitle.en_name ?? jobTitle.ar_name\r\n  }}\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"myForm\" class=\"row\">\r\n    <!-- From date  -->\r\n    <div class=\"col-12\">\r\n      <app-datepicker\r\n        [control]=\"formCtrl.from_date\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.FromDate\"\r\n      >\r\n      </app-datepicker>\r\n    </div>\r\n\r\n    <!-- to date -->\r\n    <div class=\"col-12\">\r\n      <app-datepicker\r\n        [control]=\"formCtrl.to_date\"\r\n        [submitted]=\"submitted\"\r\n        label=\"labels.ToDate\"\r\n      >\r\n      </app-datepicker>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button [mat-dialog-close]=\"false\" class=\"btn btn-danger\">\r\n    {{ \"General.Close\" | translate }}\r\n  </button>\r\n\r\n  <button\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    class=\"btn btn-info\"\r\n    (click)=\"editJobTitleDates()\"\r\n  >\r\n    {{ \"General.Save\" | translate }}\r\n  </button>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import {\r\n  Directive,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  ViewContainerRef,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\n\r\n@Directive({\r\n  selector: \"[appMatPaginatorStyle]\",\r\n})\r\nexport class MatPaginatorStyleDirective {\r\n  private _currentPage = 1;\r\n  private _pageGapTxt = \"...\";\r\n  private _rangeStart;\r\n  private _rangeEnd;\r\n  private _buttons = [];\r\n\r\n  @Input()\r\n  get showTotalPages(): number {\r\n    return this._showTotalPages;\r\n  }\r\n  set showTotalPages(value: number) {\r\n    this._showTotalPages = value % 2 == 0 ? value + 1 : value;\r\n  }\r\n  private _showTotalPages = 2;\r\n\r\n  constructor(\r\n    @Host() @Self() @Optional() private readonly matPag: MatPaginator,\r\n    private vr: ViewContainerRef,\r\n    private ren: Renderer2\r\n  ) {\r\n    //Sub to rerender buttons when next page and last page is used\r\n    this.matPag.page.subscribe((v) => {\r\n      this.switchPage(v.pageIndex);\r\n    });\r\n  }\r\n\r\n  private buildPageNumbers() {\r\n    const actionContainer = this.vr.element.nativeElement.querySelector(\r\n      \"div.mat-paginator-range-actions\"\r\n    );\r\n    const nextPageNode = this.vr.element.nativeElement.querySelector(\r\n      \"button.mat-paginator-navigation-next\"\r\n    );\r\n    const prevButtonCount = this._buttons.length;\r\n\r\n    // remove buttons before creating new ones\r\n    if (this._buttons.length > 0) {\r\n      this._buttons.forEach((button) => {\r\n        this.ren.removeChild(actionContainer, button);\r\n      });\r\n      //Empty state array\r\n      this._buttons.length = 0;\r\n    }\r\n\r\n    //initialize next page and last page buttons\r\n    if (this._buttons.length == 0) {\r\n      let nodeArray =\r\n        this.vr.element.nativeElement.childNodes[0].childNodes[0].childNodes[2]\r\n          .childNodes;\r\n      setTimeout(() => {\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          if (nodeArray[i].nodeName === \"BUTTON\") {\r\n            if (nodeArray[i].disabled) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(190, 130, 130, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(255, 0, 0, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    let dots = false;\r\n\r\n    for (let i = 0; i < this.matPag.getNumberOfPages(); i = i + 1) {\r\n      if (\r\n        (i < this._showTotalPages &&\r\n          this._currentPage < this._showTotalPages &&\r\n          i > this._rangeStart) ||\r\n        (i >= this._rangeStart && i <= this._rangeEnd)\r\n      ) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(i, this.matPag.pageIndex),\r\n          nextPageNode\r\n        );\r\n      } else {\r\n        if (i > this._rangeEnd && !dots) {\r\n          this.ren.insertBefore(\r\n            actionContainer,\r\n            this.createButton(this._pageGapTxt, this.matPag.pageIndex),\r\n            nextPageNode\r\n          );\r\n          dots = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButton(i: any, pageIndex: number): any {\r\n    const linkBtn = this.ren.createElement(\"mat-button\");\r\n    this.ren.addClass(linkBtn, \"mat-mini-fab\");\r\n    this.ren.setStyle(linkBtn, \"margin\", \"1%\");\r\n\r\n    const pagingTxt = isNaN(i) ? this._pageGapTxt : +(i + 1);\r\n    const text = this.ren.createText(pagingTxt + \"\");\r\n\r\n    this.ren.addClass(linkBtn, \"mat-custom-page\");\r\n    switch (i) {\r\n      case pageIndex:\r\n        this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        break;\r\n      case this._pageGapTxt:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(this._currentPage + this._showTotalPages);\r\n        });\r\n        break;\r\n      default:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(i);\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.ren.appendChild(linkBtn, text);\r\n    //Add button to private array for state\r\n    this._buttons.push(linkBtn);\r\n    return linkBtn;\r\n  }\r\n\r\n  private initPageRange(): void {\r\n    this._rangeStart = this._currentPage - this._showTotalPages / 2;\r\n    this._rangeEnd = this._currentPage + this._showTotalPages / 2;\r\n\r\n    this.buildPageNumbers();\r\n  }\r\n\r\n  private switchPage(i: number): void {\r\n    this._currentPage = i;\r\n    this.matPag.pageIndex = i;\r\n    this.initPageRange();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.initPageRange();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GroupByService {\r\n  constructor() {}\r\n\r\n  //group response data by DayName\r\n  groupBy(collection: any[], property: string): any[] {\r\n    if (!collection) {\r\n      // return null;\r\n    }\r\n    const groupedCollection = collection.reduce((previous, current) => {\r\n      if (!previous[current[property]]) {\r\n        previous[current[property]] = [current];\r\n      } else {\r\n        previous[current[property]].push(current);\r\n      }\r\n      return previous;\r\n    }, {});\r\n    return Object.keys(groupedCollection).map((key) => ({\r\n      key,\r\n      List: groupedCollection[key],\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class formValidationService {\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  isFormEmpty(form: FormGroup): boolean {\r\n    let Empty: boolean = true;\r\n\r\n    for (var field in form.controls) {\r\n      let control = form.get(field);\r\n      if (control.value) Empty = false;\r\n    }\r\n\r\n    return Empty;\r\n  }\r\n}\r\n"],"names":["RouterModule","UserBalanceDetailsComponent","ReservationEditComponent","ReservationIndexComponent","ReservationStatusComponent","StudentDiscountComponent","StudentsIndexComponent","CenterBranchesComponent","FunctionsSetupComponent","AddRoleComponent","RoleFunctionsComponent","UserBranchesRolesComponent","UserDeparmentAndJobTitleComponent","UsersComponent","routes","path","redirectTo","pathMatch","children","data","breadcrumb","label","disable","view","component","loadChildren","then","m","EducationalSetupModule","SetupModule","ExamsModule","ReportsModule","DashboardRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","SharedModule","MaterialModule","NgxSpinnerModule","NgbModule","MatPaginatorStyleDirective","ReservationDetailsComponent","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","DashboardModule","provide","useClass","useValue","declarations","CustomeValidator","Validators","MAT_DIALOG_DATA","i0","AddMaterialMainDataComponent","route","router","fb","toastr","SubjectsService","SubjectMaterialsService","courseService","authserv","spinner","datePipe","languageService","appStrings","dialogRef","value","subjectId","unitId","materialId","queryParamMap","subscribe","params","functionId","Number","get","getUserRowFunctions","res","rowFunctions","backdropClick","ele","onCloseDialog","id","ar_name","materialName","type","stageLecture","order","isMandatory","close","EduCompId","getEduCompId","branchId","getBranchId","myForm","group","required","EditedMaterialId","whiteSpace","IsOnline","num_views","fromDate","toDate","orderNum","bigZero","validator","dateBefore","controls","e","getMaterialById","submitted","FormCtrl","_a","warning","valid","show","isOnline","_b","unitID","_c","_d","transform","_e","_f","addEditMaterial","returnValue","success","Id","navigate","queryParams","queryParamsHandling","error","returnString","hide","retunValue","patchValue","model","setValue","getGroupsByEduCompId","groups","lstEduCompGroups","getTeacherBySubjectAndEduCompId","Teachers","teachers","returnSearchedUnitsBySubjectId","units","returnSearchedLessonsByUnitId","Lessons","selectors","decls","vars","consts","template","ctx","EventEmitter","DeleteDialogComponent","ctx_r0","ctx_r4","ctx_r11","ctx_r13","ctx_r14","AddMaterialPartsComponent","dialog","videoTypeId","Name","Path","SecondaryPath","view_percentage","minusNum","undefined","getMaterialParts","parts","MaterialParts","getPartById","MaterialPart","addPart","reset","part","deletePart","i","indexOf","splice","open","msg","afterClosed","confirm","inputs","outputs","closeDialog","features","MatTableDataSource","forkJoin","MatPaginator","MatSort","AddSubQuestionComponent","map","startWith","AddExamComponent","location","examService","generalService","subId","examId","getExamById","getAllGroupHeaderByExamId","parentId","examName","examHours","examMinutes","formHour","toHours","isRepeatable","repeatNumbers","degreeToPass","GroupHeadersForm","examGroup","examHeader","examContent","stageId","educationYearId","teacherUserId","lessionId","getAllCountieres","getAllExamTypes","getAllQuestionGroups","getAllQuestionHeaders","examTypeValidator","RepeatableValidator","exam_ar_name","stageExam","dataSource","paginator","sort","filterValue","toLowerCase","examGroups","filter","option","question_group_ar_name","includes","examHeaders","question_head_ar_name","response","toHour","fromHour","canSellIndividually","Individually_Purchased","exam_minute","exam_period_minute","exam_hour","Subject_ID","quiz","examTypeId","_g","_h","Avilable_Date_From","_j","Avilable_Date_To","_k","percentageToPass","_l","_m","GroupsHeadersList","itemsCount","length","filteredExamGroups","GroupHeadersFormCtrl","valueChanges","pipe","filter_question_group","filteredExamHeaders","filter_question_header","exam","repeatableExam","repeatableExam_Count","Unit_ID","exam_type_id","toAddEdit","console","log","addExam","validGroupHeadersForm","GroupHeadsubmitted","isAdd","onAddExamGroupHeader","sameGroupWithSameHeader","find","gh","group_name","head_name","info","tempExam","ToAddExamGroupHeader","exam_question_group_text","exam_question_head_title","exam_question_head_text","addExamGroupHeader","headerResponse","tempExcamGroupHeader","exam_question_head_id","question_title","examGroupHeader","editGroupHeaderMode","examGroupHeaderIdToEdit","questionNumber","questionType","toEdit","head","title","editExamGroupHeader","editResponse","toReplace","deleteExamGroupHeader","deleteResponse","todeleteIndex","findIndex","removeExamGroupHead","groupHeader","examGroupHeaderId","obj","lessonId","getAllExamType","examTypes","enable","getAllCountries","countries","countryId","getAllStages","stages","getAllEducationYears","educationYears","getAllSubjects","subjects","getAllUnitsBySublectId","results","getAllLessonsByUnitId","lessions","setValidators","clearValidators","updateValueAndValidity","CustomDiscount","hasCustomDiscount","repeatingPrice","viewQuery","ctx_r6","ctx_r12","ctx_r16","ctx_r18","ctx_r20","ctx_r22","ctx_r23","ctx_r24","ctx_r25","ctx_r26","ctx_r27","ctx_r28","ctx_r1","ctx_r29","ctx_r31","ctx_r33","ctx_r38","ctx_r40","ctx_r5","uploadFileService","getAllQuestionsByHeadId","mainQuestion","questionTypeId","questionImage","remove_image","exam_question_text","questionPerfectAnswer","perfect_answer_attach","questionMark","answerOneId","answerOne","answerOneIsCorrect","answerOneImage","answerTwoId","answerTwo","answerTwoIsCorrect","answerTwoImage","answerThreeId","answerThree","answerThreeIsCorrect","answerThreeImage","answerFourId","answerFour","answerFourIsCorrect","answerFourImage","answerOneRemove_image","answerTwoRemove_image","answerThreeRemove_image","answerFourRemove_image","educationCompanyId","questionTypeValidation","changes","currentValue","questionsInGrid","clearAsyncValidators","image","questionFile","questionImagePath","imageOne","answerOneFile","choice1","choice_id","choice_text","is_correct","choice_image","imageTwo","answerTwoFile","choice2","imageThree","answerThreeFile","choice3","_o","_p","_q","_r","_s","_t","imageFour","answerFourFile","choice4","_u","_v","_w","_x","_y","_z","exam_question_main_question","_0","exam_question_mark","_1","exam_question_perfect_answer","_2","_3","exam_question_type_id","_4","exam_selected_question_head_id","exam_selected_subject_id","exam_question_image","_5","exam_question_id","questionId","mcq_choices","choices","correctChoiceDone","forEach","choice","editMcqQuestion","addMcqQuestion","addQuestion","resetFileInputs","editQuestion","oneIsCorrect","twoIsCorrect","threeIsCorrect","fourIsCorrect","getQuestionForEditByID","main_question","mark","question_text","attach_path","previewPicture","question_type_id","MCQ_Choices","Text","Image","Is_Correct","_6","_7","_8","_9","_10","_11","_12","_13","_14","_15","_16","_17","_18","_19","_20","confirmed","deleteExamQuestion","toDeleteIndex","q","event","uploadFile","file","setTimeout","FileAsBase64","answerNumber","FileInputs","document","querySelectorAll","input","reservationService","reservationId","ReservationDetails","reservation","reservationServ","toaster","paramMap","getReservationEdit","userId","UserName","Religion","Gender","EducationTypeId","CenterBranchId","SchoolName","EducationalDivision","GuardianJob","Area","Address","StudentNumber","maxLength","minLength","pattern","MobileStartsWith","StudentWhatsAppNumber","FatherMobile","FatherWhatsAppNumber","MotherMobile","MotherWhatsAppNumber","HomeTelephone","SentviewId","currentYear","City","competitions","Hobbies","workshops","FormCtrls","EduCompIdCtrl","Reservation","Religions","Genders","EducationalDivisions","EducationTypes","Areas","ProfilePicture","ProfilePicture_Path","returnBranchesByEducTypeId","profilePicture","SubmitReservationEdit","typeId","CenterBranches","fileName","target","files","name","fileSize","size","fileType","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","result","_r3","ctx_r58","email","mobile","code","groupId","statusId","cityId","page","returnStatus","getArea","getReservationsList","branchIdCtrl","trim","p","Reservations","list","Status","minWidth","currentYearCtrl","authservice","getStudentStatus","returnBranchesByEduCompId","EduCompUser_Status","note","EduCompUserId","statusReasonId","studentUserId","Code","reserveId","AcceptReservation","GetStudentStatus","getReasonsByStatusId","statuses","studyingGroups","userName","ReservationStatusPaging","disabled","SubmitReservationStatus","StatusId","Reasons","ManageViewsService","getCustomDiscount","searchForm","sentCode","sentCenterCode","sentMobile","sentEmail","InCenter","customDiscountId","searchStudent","getStudentCustomDiscount","getStudentCustomDiscountsList","updateStudentCustomDiscount","User","user_ID","Discount","CustomDiscountList","SearchStudentsService","queryStringEm","queryStringCo","queryStringPhoneNumber","queryStringMozakretyCode","studyingGroup","getStudentsByEduCompId","getStudentGroupsAndStatuts","students","lists","totalCount","Statuts","status","deleteStudent","ctx_r7","ctx_r30","ctx_r37","ctx_r39","DepartmentComponent","departmentService","authService","getAllDepartments","curPage","en_name","depratmentsList","itemsCounts","countItems","addDepartment","updateDepartment","clearForm","editDepartment","department","deleteDepartment","pageIndex","isArabic","AnnouncementIndexComponent","GeneralService","announcementService","getTeachersByEducompId","getTeacherAnnouncement","getAllAnnouncements","lstTeachers","AnnouncementSetupComponent","roleService","announceId","getAnnounceById","From_Date","To_Date","announcementText","announcement_text","announcementPicture","picturePath","eduCompId","addAnnouncement","_r2","EditJobTitleDatesComponent","ctx_r32","ctx_r35","ctx_r44","ctx_r47","ArticlesSetupComponent","articleService","Date","ArticleContent","depJobIds","departmentId","from_date","to_date","getAllArticles","startSortingTable","sortingDataAccessor","item","property","jobTitle","curPageber","ArticleList","article","currentDate","addArticle","updateArticle","editArticle","j","depJobId","removeArticle","deleteArticle","jobTitle_articleId","jobtitle","editJobTitleArticle","editJobTitleDates","jobTitle_article","removeJobtitleArticle","deleteJobTitleArticle","firstPage","ctx_r9","ctx_r36","ctx_r43","ctx_r45","CategorieComponent","_serviceCategories","showAddOnly","getCategories","inputForm","courseCategoryList","addCategories","editCategories","category","deleteCategories","DiplomaComponent","ctx_r10","ctx_r15","AddCourseComponent","courseServ","jobServ","categoriesService","ar","fileService","chechAuthorization","showAddCategoryButton","showAddDiplomaButton","isFromRequestPage","backBtnUrl","courseId","getCourseById","course","subCourse_attach","category_ids","course_categories","educational_category_id","courseHours","Math","floor","subCourseMinutes","courseMinutes","depts","d","index","push","mandatoryDepartment","recommendedDepartment","mandatoryJobTitles","recommendedJobTitles","dept","job","is_mandatory","mandatoryDeptCtrl","onSelectDepartment","mandatoryJobCtrl","recommendedDeptCtrl","recommendedJobCtrl","isEnglish","subCourse_ar_name","subCourse_en_name","Diploma_id","subjectPromoVideoPath","mandatoryFor","recommendedFor","subjectDescription","isFollow","CourseCertificate","attach","removeImage","imageChange","mandatoryDeptId","recommendedDeptId","getAllCategories","getCategoriesDropdown","categories","languageNo","checked","mandatory","getSpecificJobTitlesByDepartmentIds","ids","addCourse","updateCourse","subCourseDepJobTitle","promoLink","courseCertificate","depJodIds","disableClose","reloadDiploma","AddUsersToCourseComponent","courseArName","courseEnName","account_email","excelFile","getAllUsers","userList","itemCount","formCtls","checkUser","user","subject_id","addUser","deleteUser","uploadUsersByExcel","uploadedFile","isSendAllSuccess","errors","isUploaded","resetFileById","ctx_r57","ctx_r60","ctx_r89","CourseIndexComponent","appAssets","jobId","diplomaId","courseName","getAllCourses","filterPredicate","toLocaleLowerCase","join","searchData","depId","subCourseName","diploma_id","getAllCoursesBySearch","courses","subCourseList","totalItems","removeCourse","jobTitleCourseId","updateJobTitleCourse","removeJobTitleCourse","ctx_r21","CourseObjectivesComponent","pram","subjectObjectiveId","whatYouLearn","getAllCourseObjectives","courseObjective","courseList","what_learn","addEditCourseObjective","deleteCourseObjective","ele_r21","CourseRequestComponent","courseAndTeachingRequestService","tostar","approve","getAllRequests","approvement","getAllCourseRequests","Requests","request","ApproveCourseRequest","course_ar_name","course_en_name","AddUnitAttachmentComponent","attachmentId","file_ar_name","file_en_name","attachFile","getAttachmentById","stageAttach","getUnitAttachmentById","fileEduUnit","formCtrls","unit_id","File","addEditUnitAttachment","File_Edu_Unit","AddUnitComponent","subjectsService","getUnitById","unit_ar_name","unit_en_name","unitDescription","thumbnailPic","addedUnit","unitThumb","unit_name","subjectid","body","currentSubject","addUpdateUnit","ctx_r8","StructureIndexComponent","getUnits","changeSelectedUnit","getAllUnitData","selectedUnitId","unitData","sortUnitDataByOrder","unit","selectedUnitIndex","selectedUnitName","getSelectedUnitData","deleteUnit","openAddEditLectureDialog","openAddEditExamDialog","openAddEditAttachmentDialog","lectureId","panelClass","lecture","afterCloseUnitDataDialogs","maxHeight","attachment","deleteUnitData","api","deleteMaterial","deleteExam","deleteUnitAttachment","deletedIndex","a","b","el","diploma_ar_name","diploma_en_name","getAllDiplomas","search","diplomaName","getAllDiplomasBySearch","Diploma","customFilter","subject_ar_name","subject_en_name","DiplomaId","addDiploma","updateDiploma","removeDiploma","TeachingRequestsComponent","myFormCtrl","getAllTeachingRequests","ApproveTeachingRequest","ExceptionalViewsComponent","EducationalService","CashPaymentService","resetForm","itemId","itemTypeId","paymentMethod","extraViews","paidAmount","resetTemplate","yearId","username","resetFormCtrl","addExceptionalViews","lessons","materials","getSubjectByTeacherId","lsts","SubjectId","GetUnits","GetLessons","teacherId","GetItemsByLessonWithEnded","GetItemsByUnit","GetItemsBySubject","GenerateBalanceCodesComponent","generateCodesService","Amount","Price","GenerateBalanceCodes","downloadFile","GiftsCategoryAddComponent","giftsService","translate","giftcategoryId","getGiftCategoryById","englishName","arabicName","onLangChange","lang","currentLang","giftCategoryId","getGiftCategoryByID","giftcategoryName","arbName","engName","IdCtrl","engNameCtrl","arbNameCtrl","addEditCategory","GiftsCategoryIndexComponent","getGiftsCategoryAll","getGiftsCategorySearch","Object","keys","key","getCategoriesSearch","giftcategoryList","getCategoriesAll","giftCategory","removeGiftCategory","RemoveGiftCategory","GiftsAddComponent","giftId","getGiftById","getGiftCategoryDropDown","giftPicture","giftsCategoryId","points","qty","description","getAllGiftCategory","gift","addGift","giftArName","giftEnName","categoryCtrl","GiftCategoryId","pointsCtrl","qtyCtrl","descriptionCtrl","deleteAttach","GiftsIndexComponent","getGiftsAll","arbGiftCategory","engGiftCategory","getGiftsSearch","giftsList","giftList","RemoveGift","UpdateJobDepartmentComponent","ctx_r17","ctx_r19","ctx_r48","ctx_r51","JobTitleComponent","jobTitleService","getAllJobTitles","departmentsIds","departments","job_ar_name","formCtrl","job_en_name","dep_ids","jobTitle_list","JobTitle","addJobTitle","updateJobTitles","deleteJobTitles","deleteJobTitleDepartment","job_title_dep_id","updated","deleteJobTitle","update_JobTitle_Department","ManageViewsComponent","resetViews","GetItemsByLesson","ctx_r34","ManualCashPaymentComponent","centerCode","searchedMail","searchedName","paymentForm","balance","userMobile","userEmail","currentBalance","itemPrice","isPaymentExcel","getFormValidationErrors","paymentFormCtrl","isPaymentExcelValidators","itemTypeIdValidators","CashPaymentSearch","getPaymentsHistory","CashPaymentPost","ManualPaymentByExcel","userPaymentsHistories","userPayments","geItemPrice","price","form","totalErrors","Errors","controlErrors","keyError","replace","PaymentByExcel","PointsSetupComponent","PointsService","getExamPoints","getLeturePoints","lecturesForm","ByQuestion","attendancevalue","absencevalue","ExamForm","from","to","ByQuestionValidators","lecsubmitted","lecturesFormCtrls","selectedSubjectId","questionAttempt","questionAttempts","isLecture","addPoints","ExamSubmitted","ExamFormCtrls","fromToExamValidators","getPoints","lecturePoints","ExamPoints","point","Value","deletePoint","teacheruserId","smallerThanNumbers","QuestionStudentsSettingsComponent","getTeacherByEduCompId","PrivatePrice","PublicPrice","IfPublicAccessibleAfterLecturesCount","changeType","isValid","$","addQuestionSettings","resetManual","changeValidators","ctx_r3","SendSingularWhatsappMsgComponent","whatsappService","SearchStudentService","formValidationService","AdminEducationCompanyId","sendToStudentWhatsApp","sendToFatherWhatsApp","sendToMotherWhatsApp","isFormEmpty","searchResponse","instant","sendSingularWhatsAppMsg","SendWhatsappMsgComponent","whatsAppService","adminEducationCompanyId","msgCtrl","fileCtrl","sendWhatsAppMsg","breadcrubm","SetupRoutingModule","NgxPaginationModule","branchService","branchName","districtId","getAllBranches","pageNumber","getAllAllCenterBranches","branches","centerBrnachesList","branch","deleteBranch","addEditBranches","removeBranch","ElementRef","functionService","functionNameEn","functionNameAr","link","getAllFunctions","functions","func","functionIdCtrl","functionNameEnCtrl","function_en_name","functionNameArCtrl","functionName","linkCtrl","functionURL","addBtn","nativeElement","innerText","deleteFunction","addEditFunction","removeFunction","roleId","roleName","getAllRoles","roles","role","roleIdCtrl","roleNameCtrl","addEditRole","removeRole","deleteRole","param","getAllRoleFunctions","groupFunctions","g","allFunctionsLength","roleFunctions","rolefunctionIds","function","allChecked","$event","found","functionsList","addEditRoleFunctions","userService","groupByService","branchsIds","getAllBranchesByCenter","getAllUserBranchesWithFunctions","getAllFunctionsByRoleId","groupBy","List","functionIds","userBranchesWithFunctions","branchUserList","funParent","roleFunctionsList","fun","checkedfunctionIds","deleteUserBranchRoleFunction","deleteUserRoleFunctions","centerBranchUserFuncId","roleFunctionsIds","branchUser","fromDateCtrl","toDateCtrl","addUserBranchesAndRoleFunctions","onDeleteFunction","UpdateDateComponent","ctx_r49","ctx_r52","jopTitleDepartmentService","functionParentId","getall","dept_id","job_departments","dept_ar_name","dept_en_name","getJopTitlebyDepartment","userDepartmentJobtitleList","employee_name","user_id","jobTitle_dept_id","addJopTitlebyDepartment","editAllDeparment","dep_id","dep_job_id","editjobTitle","user_dept_job_id","deleteUserDeptJobTitle","jopid","deleteJopTitle","appConstants","phone","MobileLength","password","confirmedPass","mustMatch","resetSearch","searchBody","usersList","account_password","addEditUser","removeUser","AppClientService","http","post","ended","factory","providedIn","ExamsService","eduCompID","put","delete","pointId","correctionStatus","educompId","templateId","ArticlesService","UnitId","partId","AttachId","materialIdHiddenQuiz","LectureID","attendance","BranchesService","getAllBranchesURL","getAllAllCenterBranchesURL","addEditBranchesURL","deleteBranchesURL","getAllDistrictsURL","FunctionsService","addEditFunctionURL","deleteFunctionURL","RolesService","getAll","UsersService","WhatsAppService","jobTitleDates","matPag","vr","ren","v","switchPage","_showTotalPages","actionContainer","element","querySelector","nextPageNode","prevButtonCount","_buttons","button","removeChild","nodeArray","childNodes","nodeName","setStyle","dots","getNumberOfPages","_currentPage","_rangeStart","_rangeEnd","insertBefore","createButton","_pageGapTxt","linkBtn","createElement","addClass","pagingTxt","isNaN","text","createText","setAttribute","listen","appendChild","buildPageNumbers","initPageRange","showTotalPages","GroupByService","collection","groupedCollection","reduce","previous","current","Empty","field","control"],"sourceRoot":"webpack:///"}