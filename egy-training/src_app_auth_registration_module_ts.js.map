{"version":3,"file":"src_app_auth_registration_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOO,IAAMA,qBAAb;EAEE;IAAA;EAAiB;;EAFnB;IAAA;IAAA,OAIE,oBAAQ,CACP;EALH;;EAAA;AAAA;;;mBAAaA;AAAqB;;;QAArBA;EAAqBC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCNlCC,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,uDAAAA;MAOAA,4DAAAA;MAAiBA,oDAAAA;MAAcA,0DAAAA;MAC/BA,4DAAAA;MACEA,4DAAAA;MAAGA,oDAAAA;MAAmCA,0DAAAA;MACxCA,0DAAAA;MACAA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;;;;MAReA,uDAAAA;MAAAA,wDAAAA,eAAAA,6DAAAA;MACDA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdd;AAEA;AAIA;;;;;;;;;;;;;;;;;;;;;;ICgBgBA,4DAAAA;IAIEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,yBAAoB,KAApB;IAAyB,CAAzB;IAEAA,4DAAAA;IAAgBA,oDAAAA;IAAYA,0DAAAA;IAC9BA,0DAAAA;;;;;IADkBA,uDAAAA;IAAAA,+DAAAA;;;;;;IAgBZA,4DAAAA;IAIEA,oDAAAA;IACFA,0DAAAA;;;;;IAHEA,wDAAAA;IAEAA,uDAAAA;IAAAA,gEAAAA;;;;;;IAUFA,4DAAAA;IACEA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IARJA,4DAAAA;IAOEA,wDAAAA;IAGFA,0DAAAA;;;;;IAHSA,uDAAAA;IAAAA,wDAAAA;;;;;;IAePA,4DAAAA;IAIEA,oDAAAA;IACFA,0DAAAA;;;;;IAHEA,wDAAAA;IAEAA,uDAAAA;IAAAA,gEAAAA;;;;;;IAUFA,4DAAAA;IACEA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IARJA,4DAAAA;IAOEA,wDAAAA;IAGFA,0DAAAA;;;;;IAHSA,uDAAAA;IAAAA,wDAAAA;;;;;;IAwBPA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAEFA,4DAAAA;IAMEA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAjBJA,4DAAAA;IAOEA,wDAAAA;IAIAA,wDAAAA;IAQFA,0DAAAA;;;;;IAZSA,uDAAAA;IAAAA,wDAAAA;IAKJA,uDAAAA;IAAAA,wDAAAA;;;;;;IA2BHA,4DAAAA;IAOEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAGFA,4DAAAA;IAMEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAzBJA,4DAAAA;IAOEA,wDAAAA;IAWAA,wDAAAA;IASFA,0DAAAA;;;;;IAnBKA,uDAAAA;IAAAA,wDAAAA;IAWAA,uDAAAA;IAAAA,wDAAAA;;;;ADzIlB,IAAMI,2BAAb;EAkBE,qCACUC,WADV,EAEUC,WAFV,EAGUC,WAHV,EAIUC,EAJV,EAKUC,MALV,EAMUC,OANV,EAOUC,OAPV,EAOoC;IAAA;;IAN1B;IACA;IACA;IACA;IACA;IACA;IACA;IAhBV,iBAA4B,EAA5B;IACA,gBAA0B,EAA1B;IAIA,iBAAY,KAAZ;IACA,gBAAW,KAAX;IACA,cAAS,EAAT;IACA,eAAU,IAAIR,qEAAJ,EAAV;EASI;;EA1BN;IAAA;IAAA,OAIE,yBAAa;MACX,IAAI,KAAKS,MAAL,CAAYC,KAAhB,EAAuB,OAAO,IAAP,CAAvB,KACK,OAAO,KAAP;IACN;EAPH;IAAA;IAAA,OA2BE,oBAAQ;MACN,KAAKC,gBAAL;MAEA,KAAKF,MAAL,GAAc,KAAKJ,EAAL,CAAQO,KAAR,CAAc;QAC1BC,OAAO,EAAE,CAAC,EAAD,EAAK,CAACd,+DAAD,CAAL,CADiB;QAE1BgB,SAAS,EAAE,CAAC,EAAD,EAAK,CAAChB,+DAAD,CAAL,CAFe;QAG1BiB,UAAU,EAAE,CACV,EADU,EAEV,CACEjB,+DADF,EAEED,kGAFF,EAGEC,8DAAA,CACE,qDADF,CAHF,CAFU,CAHc;QAa1BoB,iBAAiB,EAAE,CACjB,EADiB,EAEjB,CACEpB,+DADF,EAEEA,8DAAA,CAAmB,uCAAnB,CAFF,EAGEA,gEAAA,CAAqB,EAArB,CAHF,EAIEA,gEAAA,CAAqB,EAArB,CAJF,CAFiB;MAbO,CAAd,CAAd;IAuBD;EArDH;IAAA;IAAA,KAuDE,eAAa;MACX,OAAO,KAAKU,MAAL,CAAYa,QAAnB;IACD,CAzDH,CA2DE;;EA3DF;IAAA;IAAA,OA4DE,4BAAgB;MAAA;;MACd,KAAKnB,WAAL,CAAiBoB,mBAAjB,GAAuDC,SAAvD,CAAiE,UAACC,GAAD,EAAQ;QACvE,KAAI,CAACC,SAAL,GAAiBD,GAAjB;MACD,CAFD;IAGD,CAhEH,CAkEE;;EAlEF;IAAA;IAAA,OAmEE,6BAAoBE,OAApB,EAAgC;MAAA;;MAC9B,KAAKC,QAAL,GAAgB,EAAhB;MACA,KAAKC,SAAL,CAAed,SAAf,CAAyBe,QAAzB,CAAkC,EAAlC;;MACA,IAAIH,OAAJ,EAAa;QACX,KAAKxB,WAAL,CACG4B,mBADH,CACsCJ,OADtC,EAEGH,SAFH,CAEa,UAACC,GAAD,EAAQ;UACjB,MAAI,CAACG,QAAL,GAAgBH,GAAhB;QACD,CAJH;MAKD;IACF,CA7EH,CA+EE;;EA/EF;IAAA;IAAA,OAgFE,2BAAe;MAAA;;MACb,KAAKO,SAAL,GAAiB,IAAjB;;MACA,IAAI,KAAKvB,MAAL,CAAYC,KAAhB,EAAuB;QACrB,KAAKF,OAAL,CAAayB,IAAb;QACA,KAAK7B,WAAL,CACG8B,eADH,CACuC,KAAKzB,MAAL,CAAY0B,KADnD,EAEGX,SAFH,CAEa,UAACC,GAAD,EAAQ;UACjB,MAAI,CAACjB,OAAL,CAAa4B,IAAb;;UACA,IAAIX,GAAG,CAACY,WAAJ,IAAmB,CAAvB,EAA0B;YACxB,MAAI,CAACC,QAAL,GAAgB,KAAhB;;YACA,MAAI,CAAC/B,OAAL,CAAagC,OAAb,CACE,kDADF;;YAGA,MAAI,CAACrC,WAAL,CAAiBsC,MAAjB;;YACA,MAAI,CAAClC,MAAL,CAAYmC,aAAZ,CAA0B,aAA1B;UACD,CAPD,MAOO;YACL,MAAI,CAACH,QAAL,GAAgB,IAAhB;YACA,MAAI,CAACI,MAAL,GAAcjB,GAAG,CAACkB,YAAlB;UACD;QACF,CAfH;MAgBD;IACF;EArGH;;EAAA;AAAA;;;mBAAa1C,6BAA2BJ,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,uFAAAA,GAAAA,+DAAAA,CAAAA,gFAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,sDAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA;AAAA;;;QAA3BI;EAA2BT;EAAAoD;IAAA;;eAA3BC;MAAe;;;;;;;;MCtB5BhD,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MAGEA,uDAAAA;MAOFA,0DAAAA;MACAA,4DAAAA;MACEA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MACAA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MAEAA,wDAAAA;MASAA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MAAYA,oDAAAA;;MAAgCA,0DAAAA;MAC5CA,4DAAAA;MAGEA,wDAAAA;QAAA,OAC2BgD,2FAD3B;MAEC,CAFD;MAIAhD,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MACAA,wDAAAA;MAMFA,0DAAAA;MACAA,wDAAAA;MAWFA,0DAAAA;MAEAA,4DAAAA;MACEA,4DAAAA;MAAYA,oDAAAA;;MAA+BA,0DAAAA;MAC3CA,4DAAAA;MAIEA,4DAAAA;MACEA,oDAAAA;;MAAkCA,0DAAAA;MAEpCA,wDAAAA;MAMFA,0DAAAA;MACAA,wDAAAA;MAWFA,0DAAAA;MAEAA,4DAAAA;MACEA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MACAA,uDAAAA;MAOAA,wDAAAA;MAoBFA,0DAAAA;MAEAA,4DAAAA;MACEA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MACAA,uDAAAA;MAMAA,wDAAAA;MA4BFA,0DAAAA;MACFA,0DAAAA;MAEAA,uDAAAA;MACAA,4DAAAA;MAGEA,4DAAAA;MAGEA,wDAAAA;QAAA,OAASgD,qBAAT;MAA0B,CAA1B;MAEAhD,oDAAAA;;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MAEAA,uDAAAA;;;;MA5KkBA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAGAA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAMCA,uDAAAA;MAAAA,wDAAAA;MAMGA,uDAAAA;MAAAA,wDAAAA;MAEUA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAGVA,uDAAAA;MAAAA,wDAAAA;MAMEA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAGkBA,uDAAAA;MAAAA,wDAAAA;MAOnBA,uDAAAA;MAAAA,wDAAAA;MAaSA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAGVA,uDAAAA;MAAAA,wDAAAA;MAGEA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAGiBA,uDAAAA;MAAAA,wDAAAA;MAOlBA,uDAAAA;MAAAA,wDAAAA;MAcDA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAUCA,uDAAAA;MAAAA,wDAAAA;MAuBDA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MASCA,uDAAAA;MAAAA,wDAAAA;MAuCHA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7Kb,IAAMiD,kBAAb;EAAA;AAAA;;;mBAAaA;AAAkB;;;QAAlBA;EAAkBtD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP/BC,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,uDAAAA;MAOAA,4DAAAA;MAAiBA,oDAAAA;MAAqBA,0DAAAA;MACtCA,4DAAAA;MACEA,4DAAAA;MACEA,oDAAAA;MAEFA,0DAAAA;MACFA,0DAAAA;MACAA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;;;;MAReA,uDAAAA;MAAAA,wDAAAA,eAAAA,6DAAAA;MACDA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBd;AAIA;;;;;;;;;;;;;;;;;;IC2BgBA,4DAAAA;IAEEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,yBAAoB,KAApB;IAAyB,CAAzB;IAIAA,4DAAAA;IAAgBA,oDAAAA;IAAYA,0DAAAA;IAC9BA,0DAAAA;;;;;IADkBA,uDAAAA;IAAAA,+DAAAA;;;;;;IAgBZA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAEFA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;IACFA,0DAAAA;;;;;;IAXFA,4DAAAA;IAIEA,wDAAAA;IAIAA,wDAAAA;IAIFA,0DAAAA;;;;;IARSA,uDAAAA;IAAAA,wDAAAA;IAIAA,uDAAAA;IAAAA,wDAAAA;;;;;;;;IAlCfA,4DAAAA;IACEA,4DAAAA;IACEA,oDAAAA;;IACFA,0DAAAA;IACAA,4DAAAA;IACEA,oDAAAA;;IACFA,0DAAAA;IAEAA,wDAAAA;IASAA,4DAAAA;IACEA,4DAAAA;IACEA,4DAAAA;IAAWA,oDAAAA;;IAAgCA,0DAAAA;IAC3CA,uDAAAA;IAMAA,wDAAAA;IAaFA,0DAAAA;IACFA,0DAAAA;IACAA,uDAAAA;IACAA,4DAAAA;IAGEA,4DAAAA;IAEEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASkD,uBAAT;IAAyB,CAAzB;IAGAlD,oDAAAA;;IACFA,0DAAAA;IACAA,4DAAAA;IAKEA,oDAAAA;;IACFA,0DAAAA;IACFA,0DAAAA;IACFA,0DAAAA;;;;;IA1DIA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;IAGAA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;IAICA,uDAAAA;IAAAA,wDAAAA;IAQGA,uDAAAA;IAAAA,wDAAAA;IAESA,uDAAAA;IAAAA,+DAAAA,CAAAA,yDAAAA;IAQRA,uDAAAA;IAAAA,wDAAAA;IAuBHA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;IAOAA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;IAcJA,4DAAAA;IAEEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,0BAAoB,KAApB;IAAyB,CAAzB;IAIAA,4DAAAA;IAAgBA,oDAAAA;IAAYA,0DAAAA;IAC9BA,0DAAAA;;;;;IADkBA,uDAAAA;IAAAA,+DAAAA;;;;;;IAsBZA,4DAAAA;IAMEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAdJA,4DAAAA;IAOEA,wDAAAA;IASFA,0DAAAA;;;;;IARKA,uDAAAA;IAAAA,wDAAAA;;;;;;IA6BHA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IATJA,4DAAAA;IAOEA,wDAAAA;IAGOA,0DAAAA;;;;;IAHAA,uDAAAA;IAAAA,wDAAAA;;;;;;;;IAlEfA,4DAAAA;IACEA,4DAAAA;IACEA,oDAAAA;;IACFA,0DAAAA;IACAA,4DAAAA;IACEA,oDAAAA;;IACFA,0DAAAA;IAEAA,wDAAAA;IASAA,4DAAAA;IACEA,4DAAAA;IACEA,4DAAAA;IACEA,oDAAAA;;IACFA,0DAAAA;IACAA,uDAAAA;IAOAA,wDAAAA;IAiBFA,0DAAAA;IAEAA,4DAAAA;IACEA,4DAAAA;IACEA,oDAAAA;;IACFA,0DAAAA;IACAA,uDAAAA;IAOAA,wDAAAA;IAYFA,0DAAAA;IACFA,0DAAAA;IACAA,uDAAAA;IACAA,4DAAAA;IAGEA,4DAAAA;IAEEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASmD,uBAAT;IAAwB,CAAxB;IAGAnD,oDAAAA;;IACFA,0DAAAA;IACFA,0DAAAA;IACFA,0DAAAA;;;;;IAnFIA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;IAGAA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;IAICA,uDAAAA;IAAAA,wDAAAA;IAQGA,uDAAAA;IAAAA,wDAAAA;IAGAA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;IAUCA,uDAAAA;IAAAA,wDAAAA;IAoBDA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;IAUCA,uDAAAA;IAAAA,wDAAAA;IAsBHA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;AD5Jb,IAAMoD,uBAAb;EAQE,iCACUC,QADV,EAEU5C,MAFV,EAGUD,EAHV,EAIU8C,MAJV,EAKU3C,OALV,EAKoC;IAAA;;IAJ1B;IACA;IACA;IACA;IACA;IAVV,iBAAY,KAAZ;IACA,gBAAoB,KAApB;IACA,cAAS,EAAT;IACA,kBAAsB,KAAtB;EAQI;;EAdN;IAAA;IAAA,OAgBE,oBAAQ;MACN,KAAK4C,SAAL,GAAiB,KAAK/C,EAAL,CAAQO,KAAR,CAAc;QAC7ByC,KAAK,EAAE,CAAC,EAAD,EAAK,CAACtD,+DAAD,EAAsBA,4DAAtB,CAAL;MADsB,CAAd,CAAjB;MAIA,KAAKuD,WAAL,GAAmB,KAAKjD,EAAL,CAAQO,KAAR,CAAc;QAC/B2C,gBAAgB,EAAE,CAChB,EADgB,EAEhB,CAACxD,+DAAD,EAAsBD,kGAAtB,CAFgB,CADa;QAM/B0D,YAAY,EAAE,CAAC,EAAD,EAAK,CAACzD,+DAAD,EAAsBD,kGAAtB,CAAL;MANiB,CAAd,CAAnB;IAQD;EA7BH;IAAA;IAAA,KA+BE,eAAS;MACP,OAAO,KAAKsD,SAAL,CAAe9B,QAAf,CAAwB,OAAxB,CAAP;IACD;EAjCH;IAAA;IAAA,KAmCE,eAAgB;MACd,OAAO,KAAKgC,WAAL,CAAiBhC,QAAxB;IACD,CArCH,CAuCE;;EAvCF;IAAA;IAAA,OAwCE,0BAAc;MAAA;;MACZ,IAAI,KAAK8B,SAAL,CAAe1C,KAAnB,EAA0B;QACxB,KAAKF,OAAL,CAAayB,IAAb;QACA,KAAKiB,QAAL,CACGO,cADH,CACkB,KAAKL,SAAL,CAAejB,KADjC,EAEGX,SAFH,CAEa,UAACC,GAAD,EAAa;UACtBiC,OAAO,CAACC,GAAR,CAAYlC,GAAZ;;UACA,IAAIA,GAAG,CAACY,WAAJ,IAAmB,CAAvB,EAA0B;YACxB,KAAI,CAACuB,UAAL,GAAkB,IAAlB;YACA,KAAI,CAACtB,QAAL,GAAgB,KAAhB;YACA,KAAI,CAACI,MAAL,GAAc,qDAAd;UACD,CAJD,MAIO;YACL,KAAI,CAACkB,UAAL,GAAkB,KAAlB;YACA,KAAI,CAACtB,QAAL,GAAgB,IAAhB;YACA,KAAI,CAACI,MAAL,GAAcjB,GAAG,CAACkB,YAAlB;UACD;;UAED,KAAI,CAACnC,OAAL,CAAa4B,IAAb;QACD,CAfH;MAgBD;IACF,CA5DH,CA8DE;;EA9DF;IAAA;IAAA,OA+DE,yBAAa;MAAA;;MACX,KAAKE,QAAL,GAAgB,KAAhB;;MACA,IAAI,KAAKuB,YAAL,CAAkBnD,KAAtB,EAA6B;QAC3B,KAAKF,OAAL,CAAayB,IAAb;QACA,KAAKiB,QAAL,CACGY,aADH,CACiB,KAAKD,YAAL,CAAkB1B,KADnC,EAEGX,SAFH,CAEa,UAACC,GAAD,EAAa;UACtBiC,OAAO,CAACC,GAAR,CAAYlC,GAAZ;;UACA,IACEA,GAAG,CAACY,WAAJ,IAAmB,CAAC,CAApB,IACAZ,GAAG,CAACkB,YAAJ,IAAoB,+BAFtB,EAGE;YACA,MAAI,CAACL,QAAL,GAAgB,IAAhB;YACA,MAAI,CAACI,MAAL,GAAcjB,GAAG,CAACkB,YAAlB;UACD,CAND,MAMO,IACLlB,GAAG,CAACY,WAAJ,IAAmB,CAAnB,IACAZ,GAAG,CAACkB,YAAJ,IAAoB,gCAFf,EAGL;YACA,MAAI,CAACrC,MAAL,CAAYmC,aAAZ,CAA0B,YAA1B;;YACA,MAAI,CAACU,MAAL,CAAYZ,OAAZ,CACE,kEADF;UAGD;;UACD,MAAI,CAAC/B,OAAL,CAAa4B,IAAb;QACD,CApBH;MAqBD;IACF;EAzFH;;EAAA;AAAA;;;mBAAaa,yBAAuBpD,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,qDAAAA,GAAAA,+DAAAA,CAAAA,0DAAAA;AAAA;;;QAAvBoD;EAAuBzD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbpCC,uDAAAA;MAGAA,4DAAAA;MACEA,4DAAAA;MAGEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MAGEA,uDAAAA;MAOFA,0DAAAA;MAEAA,wDAAAA;MA+DAA,wDAAAA;MAsFFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;;;;MA3JoBA,uDAAAA;MAAAA,wDAAAA;MA+DAA,uDAAAA;MAAAA,wDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFpB;;;;;;;;;;;;;;;;;;ICsBgBA,4DAAAA;IAIEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,yBAAoB,KAApB;IAAyB,CAAzB;IAEAA,4DAAAA;IAAgBA,oDAAAA;IAAYA,0DAAAA;IAC9BA,0DAAAA;;;;;IADkBA,uDAAAA;IAAAA,+DAAAA;;;;;;IAmBZA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IATJA,4DAAAA;IAOEA,wDAAAA;IAGOA,0DAAAA;;;;;IAHAA,uDAAAA;IAAAA,wDAAAA;;;;;;IAsBPA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;IACFA,0DAAAA;;;;;;IAVFA,4DAAAA;IAOEA,wDAAAA;IAIFA,0DAAAA;;;;;IAJSA,uDAAAA;IAAAA,wDAAAA;;;;ADzDtB,IAAMkE,kBAAb;EAQE,4BACUzD,MADV,EAEUD,EAFV,EAGUH,WAHV,EAIUM,OAJV,EAKUwD,KALV,EAMUC,UANV,EAMgC;IAAA;;IALtB;IACA;IACA;IACA;IACA;IACA;IAbV,iBAAY,KAAZ;IACA,gBAAW,KAAX;IACA,cAAS,EAAT;EAYI;;EAfN;IAAA;IAAA,OAiBE,oBAAQ;MACN,KAAKC,SAAL,GAAiB,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,CAAjB;MACA,KAAKC,SAAL,GAAiB,KAAKhE,EAAL,CAAQO,KAAR,CAAc;QAC7B0D,aAAa,EAAE,CAAC,EAAD,EAAK,CAACvE,+DAAD,EAAsBA,4DAAtB,CAAL,CADc;QAE7BwE,gBAAgB,EAAE,CAAC,EAAD,EAAK,CAACxE,+DAAD,CAAL;MAFW,CAAd,CAAjB;IAID;EAvBH;IAAA;IAAA,KAyBE,eAAa;MACX,OAAO,KAAKsE,SAAL,CAAe/C,QAAtB;IACD,CA3BH,CA6BE;;EA7BF;IAAA;IAAA,OA8BE,iBAAK;MAAA;;MACHkD,MAAM,CAACC,IAAP,CAAYC,YAAZ,EAA0BC,OAA1B,CAAkC,UAACC,GAAD,EAAQ;QACxC,IAAI,CAACA,GAAG,CAACC,QAAJ,CAAa,KAAI,CAACZ,UAAL,CAAgBa,YAA7B,CAAL,EAAiD,OAAOJ,YAAY,CAACE,GAAD,CAAnB;MAClD,CAFD;MAGA,KAAK5C,SAAL,GAAiB,IAAjB;;MACA,IAAI,KAAKqC,SAAL,CAAe3D,KAAnB,EAA0B;QACxB,KAAKF,OAAL,CAAayB,IAAb;QACA,KAAK/B,WAAL,CACG6E,KADH,CACuB,KAAKV,SAAL,CAAelC,KADtC,EAEGX,SAFH,CAEa,UAACC,GAAD,EAAQ;;;UACjB,KAAI,CAACjB,OAAL,CAAa4B,IAAb;;UACA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;UACA,KAAI,CAACM,QAAL,GAAgB,KAAhB;;UAEA,IAAIb,GAAG,CAACY,WAAJ,IAAmB,CAAvB,EAA0B;YACxBqC,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BvD,GAAG,CAACwD,SAAJ,CAAcC,KAA5C;YACAR,YAAY,CAACM,OAAb,CAAqB,cAArB,EAAqCvD,GAAG,CAAC0D,YAAzC;YACAT,YAAY,CAACM,OAAb,CAAqB,QAArB,EAA+BvD,GAAG,CAAC2D,MAAnC;YACAV,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoCvD,GAAG,CAACwD,SAAJ,CAAcI,WAAlD;;YACA,KAAI,CAACnF,WAAL,CAAiBoF,YAAjB,CAA8B,SAAG,CAACL,SAAJ,MAAa,IAAb,IAAaM,aAAb,GAAa,MAAb,GAAaA,GAAEF,WAAF,CAAc,CAAd,CAA3C,EALwB,CAMxB;;;YAEA,IAAI5D,GAAG,CAAC0D,YAAJ,IAAoB,CAAxB,EACE,KAAI,CAAC7E,MAAL,CAAYmC,aAAZ,CAA0B,KAAI,CAACyB,SAAL,IAAkB,SAA5C,EADF,KAEK,IAAIzC,GAAG,CAAC0D,YAAJ,IAAoB,CAAxB,EACH,KAAI,CAAC7E,MAAL,CAAYmC,aAAZ,CAA0B,qBAAqB,CAA/C,EADG,KAEA,KAAI,CAACnC,MAAL,CAAYmC,aAAZ,CAA0B,OAA1B;UACN,CAbD,CAeA;UAfA,KAgBK,IAAIhB,GAAG,CAACY,WAAJ,IAAmB,CAAC,CAAxB,EAA2B;YAC9B,KAAI,CAACC,QAAL,GAAgB,IAAhB;YACA,KAAI,CAACI,MAAL,GAAc,0CAAd;UACD,CAHI,MAGE;YACL,KAAI,CAACJ,QAAL,GAAgB,IAAhB;YACA,KAAI,CAACI,MAAL,GAAcjB,GAAG,CAACkB,YAAlB;UACD;QACF,CA9BH;MA+BD;IACF;EArEH;;EAAA;AAAA;;;mBAAaoB,oBAAkBlE,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,0DAAAA,GAAAA,+DAAAA,CAAAA,2DAAAA,GAAAA,+DAAAA,CAAAA,mEAAAA;AAAA;;;QAAlBkE;EAAkBvE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ/BC,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MAGEA,uDAAAA;MAOFA,0DAAAA;MACAA,4DAAAA;MACEA,4DAAAA;MAA4BA,oDAAAA;;MAA8BA,0DAAAA;MAC1DA,4DAAAA;MAAGA,oDAAAA;;MAAuCA,0DAAAA;MAE1CA,wDAAAA;MASAA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MAAWA,oDAAAA;;MAAgCA,0DAAAA;MAC3CA,uDAAAA;MAMAA,wDAAAA;MAYFA,0DAAAA;MAEAA,4DAAAA;MACEA,4DAAAA;MAAYA,oDAAAA;;MAAmCA,0DAAAA;MAC/CA,uDAAAA;MAMAA,wDAAAA;MAYFA,0DAAAA;MAEAA,uDAAAA;MAEAA,4DAAAA;MAGEA,4DAAAA;MACEA,oDAAAA;;MAAuCA,0DAAAA;MAE3CA,0DAAAA;MACAA,4DAAAA;MAGEA,4DAAAA;MAGEA,wDAAAA;QAAA,OAASgD,WAAT;MAAgB,CAAhB;MAEAhD,oDAAAA;;MACFA,0DAAAA;MAQFA,0DAAAA;MACFA,0DAAAA;MACAA,uDAAAA;MACAA,uDAAAA;MASFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;;;;MAtG4CA,uDAAAA;MAAAA,+DAAAA,CAAAA,yDAAAA;MACzBA,uDAAAA;MAAAA,+DAAAA,CAAAA,yDAAAA;MAKAA,uDAAAA;MAAAA,wDAAAA;MAMGA,uDAAAA;MAAAA,wDAAAA;MAESA,uDAAAA;MAAAA,+DAAAA,CAAAA,yDAAAA;MAQRA,uDAAAA;MAAAA,wDAAAA;MAcSA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAQTA,uDAAAA;MAAAA,wDAAAA;MAmBDA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAWAA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FtB;AAIA;;;;;;;;;;;;;;;;;;ICsBgBA,4DAAAA;IAIEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,yBAAoB,KAApB;IAAyB,CAAzB;IAEAA,4DAAAA;IAAgBA,oDAAAA;IAAYA,0DAAAA;IAC9BA,0DAAAA;;;;;IADkBA,uDAAAA;IAAAA,+DAAAA;;;;;;IAmBZA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAEFA,4DAAAA;IAMEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAlBJA,4DAAAA;IAOEA,wDAAAA;IAIAA,wDAAAA;IASFA,0DAAAA;;;;;IAbSA,uDAAAA;IAAAA,wDAAAA;IAKJA,uDAAAA;IAAAA,wDAAAA;;;;;;IA0BHA,4DAAAA;IAOEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAGFA,4DAAAA;IAMEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IAEFA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IA7BJA,4DAAAA;IAOEA,wDAAAA;IAWAA,wDAAAA;IASAA,wDAAAA;IAIFA,0DAAAA;;;;;IAvBKA,uDAAAA;IAAAA,wDAAAA;IAWAA,uDAAAA;IAAAA,wDAAAA;IAQIA,uDAAAA;IAAAA,wDAAAA;;;;;;IAsBPA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IATJA,4DAAAA;IAOEA,wDAAAA;IAIFA,0DAAAA;;;;;IAJSA,uDAAAA;IAAAA,wDAAAA;;;;;;IAsBPA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;;IACFA,0DAAAA;;;;IADEA,uDAAAA;IAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;IATJA,4DAAAA;IAOEA,wDAAAA;IAIFA,0DAAAA;;;;;IAJSA,uDAAAA;IAAAA,wDAAAA;;;;;;IAwBPA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;IACFA,0DAAAA;;;;;;IACAA,4DAAAA;IACEA,uDAAAA;IACAA,oDAAAA;IACFA,0DAAAA;;;;;;IAdFA,4DAAAA;IAOEA,wDAAAA;IAIAA,wDAAAA;IAIFA,0DAAAA;;;;;IARSA,uDAAAA;IAAAA,wDAAAA;IAIAA,uDAAAA;IAAAA,wDAAAA;;;;ADjKtB,IAAM2F,iBAAb;EAKE,2BACUlF,MADV,EAEUD,EAFV,EAGU8C,MAHV,EAIUjD,WAJV,EAKUM,OALV,EAKoC;IAAA;;IAJ1B;IACA;IACA;IACA;IACA;IARV,iBAAY,KAAZ;IACA,gBAAW,KAAX;IACA,cAAS,EAAT;EAOI;;EAXN;IAAA;IAAA,OAaE,oBAAQ;MACN,KAAKC,MAAL,GAAc,KAAKJ,EAAL,CAAQO,KAAR,CACZ;QACE6E,EAAE,EAAE,CAAC,IAAD,CADN;QAEEC,UAAU,EAAE,CAAC,CAAD,EAAI3F,+DAAJ,CAFd;QAIE4F,OAAO,EAAE,CACP,EADO,EAEP,CACE5F,+DADF,EAEEA,8DAAA,CACE,qDADF,CAFF,EAKED,qGALF,CAFO,CAJX;QAeE8F,MAAM,EAAE,CACN,EADM,EAEN,CACE7F,+DADF,EAEEA,8DAAA,CAAmB,wCAAnB,CAFF,EAGEA,gEAAA,CAAqB,EAArB,CAHF,EAIEA,gEAAA,CAAqB,EAArB,CAJF,EAKED,qGALF,CAFM,CAfV;QA0BEwE,aAAa,EAAE,CAAC,EAAD,EAAK,CAACvE,+DAAD,EAAsBA,4DAAtB,CAAL,CA1BjB;QA4BEwE,gBAAgB,EAAE,CAChB,EADgB,EAEhB,CAACxE,+DAAD,EAAsBD,qGAAtB,CAFgB,CA5BpB;QAiCEgG,eAAe,EAAE,CAAC,EAAD,EAAK,CAAC/F,+DAAD,CAAL;MAjCnB,CADY,EAoCZ;QACEgG,SAAS,EAAEjG,oGAAA,CACT,kBADS,EAET,iBAFS;MADb,CApCY,CAAd;IA2CD;EAzDH;IAAA;IAAA,KA2DE,eAAa;MACX,OAAO,KAAKW,MAAL,CAAYa,QAAnB;IACD;EA7DH;IAAA;IAAA,OA+DE,oBAAQ;MAAA;;MACN,KAAKU,SAAL,GAAiB,IAAjB;MACA0B,OAAO,CAACC,GAAR,CAAY,KAAKlD,MAAL,CAAY0B,KAAxB;;MAEA,IAAI,KAAK1B,MAAL,CAAYC,KAAhB,EAAuB;QACrB,KAAKF,OAAL,CAAayB,IAAb;QACA,KAAK/B,WAAL,CACG+F,aADH,CACkC,KAAKxF,MAAL,CAAY0B,KAD9C,EAEGX,SAFH,CAEa,UAACC,GAAD,EAAQ;UACjB;UACA,KAAI,CAACjB,OAAL,CAAa4B,IAAb;;UACA,KAAI,CAACJ,SAAL,GAAiB,KAAjB;UACA,KAAI,CAACM,QAAL,GAAgB,KAAhB;;UACA,IAAIb,GAAG,CAACY,WAAJ,IAAmB,CAAvB,EAA0B;YACxBqC,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BvD,GAAG,CAACyD,KAAJ,CAAUA,KAAxC;YACAR,YAAY,CAACM,OAAb,CAAqB,cAArB,EAAqCvD,GAAG,CAAC0D,YAAzC;;YACA,IAAI1D,GAAG,CAAC0D,YAAJ,IAAoB,GAAxB,EAA6B;cAC3B,KAAI,CAAC7E,MAAL,CAAYmC,aAAZ,CAA0B,2BAA1B;YACD,CAFD,MAEO;cACL,KAAI,CAACnC,MAAL,CAAYmC,aAAZ,CAA0B,OAA1B;YACD;UACF;;UAED,IAAIhB,GAAG,CAACY,WAAJ,IAAmB,CAAvB,EAA0B;YACxB,KAAI,CAACC,QAAL,GAAgB,IAAhB;YACA,KAAI,CAACI,MAAL,GAAcjB,GAAG,CAACkB,YAAlB;UACD;QACF,CArBH;MAsBD;IACF;EA5FH;;EAAA;AAAA;;;mBAAa6C,mBAAiB3F,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,qDAAAA,GAAAA,+DAAAA,CAAAA,8EAAAA,GAAAA,+DAAAA,CAAAA,0DAAAA;AAAA;;;QAAjB2F;EAAiBhG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb9BC,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MAGEA,uDAAAA;MAOFA,0DAAAA;MACAA,4DAAAA;MACEA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MACAA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MAEAA,wDAAAA;MASAA,4DAAAA;MACEA,4DAAAA;MACEA,4DAAAA;MAAYA,oDAAAA;;MAA+BA,0DAAAA;MAC3CA,uDAAAA;MAMAA,wDAAAA;MAqBFA,0DAAAA;MAEAA,4DAAAA;MACEA,4DAAAA;MAAYA,oDAAAA;;MAAiCA,0DAAAA;MAC7CA,uDAAAA;MAMAA,wDAAAA;MAgCFA,0DAAAA;MAEAA,4DAAAA;MACEA,4DAAAA;MAAYA,oDAAAA;;MAAgCA,0DAAAA;MAC5CA,uDAAAA;MAMAA,wDAAAA;MAYFA,0DAAAA;MAEAA,4DAAAA;MACEA,4DAAAA;MAAWA,oDAAAA;;MAAmCA,0DAAAA;MAC9CA,uDAAAA;MAMAA,wDAAAA;MAYFA,0DAAAA;MAEAA,4DAAAA;MACEA,4DAAAA;MACEA,oDAAAA;;MACFA,0DAAAA;MACAA,uDAAAA;MAMAA,wDAAAA;MAgBFA,0DAAAA;MAeFA,0DAAAA;MAEAA,uDAAAA;MACAA,4DAAAA;MAGEA,4DAAAA;MAEEA,wDAAAA;QAAA,OAASgD,cAAT;MAAmB,CAAnB;MAGAhD,oDAAAA;;MACFA,0DAAAA;MACAA,4DAAAA;MAKEA,oDAAAA;;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MACFA,0DAAAA;MAEAA,uDAAAA;;;;MA5MkBA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAGAA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAMCA,uDAAAA;MAAAA,wDAAAA;MAMGA,uDAAAA;MAAAA,wDAAAA;MAEUA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAQTA,uDAAAA;MAAAA,wDAAAA;MAuBSA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAQTA,uDAAAA;MAAAA,wDAAAA;MAkCSA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAQTA,uDAAAA;MAAAA,wDAAAA;MAcQA,uDAAAA;MAAAA,+DAAAA,CAAAA,yDAAAA;MAQRA,uDAAAA;MAAAA,wDAAAA;MAeDA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MASCA,uDAAAA;MAAAA,wDAAAA;MAyCHA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;MAOAA,uDAAAA;MAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrNpB;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMyG,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EADR;EAEEC,QAAQ,EAAE,CACR;IACED,IAAI,EAAE,OADR;IAEEE,SAAS,EAAE3D,2EAAkBA;EAF/B,CADQ,EAKR;IACEyD,IAAI,EAAE,eADR;IAEEE,SAAS,EAAElH,0FAAqBA;EAFlC,CALQ,EAUR;IACEgH,IAAI,EAAE,OADR;IAEEE,SAAS,EAAE1C,2EAFb;IAGE2C,WAAW,EAAE,CAACP,6FAAD;EAHf,CAVQ,EAgBR;IACEI,IAAI,EAAE,UADR;IAEEE,SAAS,EAAEjB,2EAFb;IAGEkB,WAAW,EAAE,CAACP,6FAAD;EAHf,CAhBQ,EAqBR;IACEI,IAAI,EAAE,gBADR;IAEEE,SAAS,EAAExD,+FAFb;IAGEyD,WAAW,EAAE,CAACP,6FAAD;EAHf,CArBQ,EA2BR;IACEI,IAAI,EAAE,qBADR;IAEEE,SAAS,EAAExG,2GAFb;IAGEyG,WAAW,EAAE,CAACN,kGAAD,CAHf;IAIEO,aAAa,EAAE,CAACN,2GAAD;EAJjB,CA3BQ;AAFZ,CADqB,CAAvB;AA4CO,IAAMO,yBAAb;EAAA;AAAA;;;mBAAaA;AAAyB;;;QAAzBA;;;YAHF,CAACV,mEAAA,CAAsBI,MAAtB,CAAD,GACCJ,0DAAYA;;;;uHAEXU,2BAAyB;IAAAE,UAAAA,0DAAAA;IAAAC,UAF1Bb,0DAE0B;EAAA;AAFd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDxB;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAsBO,IAAMqB,kBAAb;EAAA;AAAA;;;mBAAaA;AAAkB;;;QAAlBA;;;YAnBF,CACPL,0DADO,EAEPN,mFAFO,EAGPO,wDAHO,EAIPC,gEAJO,EAKPC,kEALO,EAMPC,0DANO,EAOPL,4EAPO,EAQPD,iEARO;;;;uHAmBEO,oBAAkB;IAAAC,eAR3B1E,2EAQ2B,EAP3BiB,2EAO2B,EAN3ByB,2EAM2B,EAL3BvF,2GAK2B,EAJ3BgD,+FAI2B,EAH3B1D,yFAG2B;IAHNuH,UAfrBI,0DAeqB,EAdrBN,mFAcqB,EAbrBO,wDAaqB,EAZrBC,gEAYqB,EAXrBC,kEAWqB,EAVrBC,0DAUqB,EATrBL,4EASqB,EARrBD,iEAQqB;EAGM;AAXZ;;;;;;;;;;;;;;;;;;;;;;;;ACfZ,IAAMb,YAAb;EACE,sBAAoBnC,KAApB,EAA2CyD,WAA3C,EAAmE;IAAA;;IAA/C;IAAuB;EAA4B;;EADzE;IAAA;IAAA,OAEE,qBACEzD,KADF,EAEE0D,KAFF,EAE4B;MAE1B,IAAI,CAAChD,YAAY,CAACiD,OAAb,CAAqB,OAArB,CAAL,EAAoC;QAClC,OAAO,IAAP;MACD,CAFD,MAEO;QACL,KAAK3D,KAAL,CAAWvB,aAAX,CAAyB,EAAzB;QACA,OAAO,KAAP;MACD;IACF;EAZH;;EAAA;AAAA;;;mBAAa0D,cAAYtG,sDAAAA,CAAAA,mDAAAA,GAAAA,sDAAAA,CAAAA,sDAAAA;AAAA;;;SAAZsG;EAAYyB,SAAZzB,YAAY;EAAA0B,YAFX","sources":["./src/app/auth/access-denied/access-denied.component.ts","./src/app/auth/access-denied/access-denied.component.html","./src/app/auth/educational-details/educational-details.component.ts","./src/app/auth/educational-details/educational-details.component.html","./src/app/auth/error/error-page.component.ts","./src/app/auth/error/error-page.component.html","./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/forgot-password/forgot-password.component.html","./src/app/auth/login/login-page.component.ts","./src/app/auth/login/login-page.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/registration-routing.module.ts","./src/app/auth/registration.module.ts","./src/app/shared/services/auth/Guards/auth/not-user.guard.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-access-denied',\r\n  templateUrl: './access-denied.component.html',\r\n  styleUrls: ['./access-denied.component.scss']\r\n})\r\nexport class AccessDeniedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--Error page starts-->\r\n<section id=\"error\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row auth-height full-height-vh\">\r\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <img\r\n              src=\"assets/img/gallery/lock.png\"\r\n              alt=\"\"\r\n              class=\"img-fluid error-img mt-2\"\r\n              height=\"300\"\r\n              width=\"400\"\r\n            />\r\n            <h1 class=\"mt-4\">Access Denied!</h1>\r\n            <div class=\"w-75 error-text mx-auto mt-4\">\r\n              <p>You don't have access to this page.</p>\r\n            </div>\r\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">\r\n              {{ \"General.BackToHome\" | translate }}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Error page ends-->\r\n","import {\r\n  EditEduDataVM,\r\n  IStageDropVM,\r\n  IYearDropVM,\r\n} from \"./../../shared/models/general/general\";\r\nimport { CustomeValidator } from \"./../../shared/validators/customeValid.validator\";\r\nimport { Component, HostListener, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { StudentService } from \"app/student/services/student.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ComponentCanDeactivate } from \"app/shared/services/auth/Guards/auth/pending-changes.guard\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-educational-details\",\r\n  templateUrl: \"./educational-details.component.html\",\r\n  styleUrls: [\"./educational-details.component.scss\"],\r\n})\r\nexport class EducationalDetailsComponent\r\n  implements OnInit, ComponentCanDeactivate\r\n{\r\n  @HostListener(\"window:beforeunload\")\r\n  canDeactivate(): Observable<boolean> | boolean {\r\n    if (this.myForm.valid) return true;\r\n    else return false;\r\n  }\r\n\r\n  EduStages: IStageDropVM[] = [];\r\n  EduYears: IYearDropVM[] = [];\r\n  stageID: any;\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  isFailed = false;\r\n  errMsg = \"\";\r\n  matcher = new ErrorStateMatcher();\r\n  constructor(\r\n    private authService: AuthService,\r\n    private generalServ: GeneralService,\r\n    private studentServ: StudentService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private toaster: ToastrService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.getEduStagesList();\r\n\r\n    this.myForm = this.fb.group({\r\n      stageID: [\"\", [Validators.required]],\r\n      EduYearID: [\"\", [Validators.required]],\r\n      parentName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          CustomeValidator.whiteSpace,\r\n          Validators.pattern(\r\n            /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n          ),\r\n        ],\r\n      ],\r\n      parentPhoneNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\-\\(\\)\\S*$]*$/),\r\n          Validators.minLength(11),\r\n          Validators.maxLength(11),\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //Return Educational Stages List\r\n  getEduStagesList() {\r\n    this.generalServ.getAllEduStagesList<IStageDropVM[]>().subscribe((res) => {\r\n      this.EduStages = res;\r\n    });\r\n  }\r\n\r\n  //Return Educational Years List By Stage Id\r\n  getEduYearByStageId(stageId: any) {\r\n    this.EduYears = [];\r\n    this.FormCtrls.EduYearID.setValue(\"\");\r\n    if (stageId) {\r\n      this.generalServ\r\n        .getEduYearByStageId<IYearDropVM[]>(stageId)\r\n        .subscribe((res) => {\r\n          this.EduYears = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  // Save Student Educational Stage Data\r\n  SaveStudenStage() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.studentServ\r\n        .SaveStudenStage<EditEduDataVM, any>(this.myForm.value)\r\n        .subscribe((res) => {\r\n          this.spinner.hide();\r\n          if (res.returnValue == 1) {\r\n            this.isFailed = false;\r\n            this.toaster.success(\r\n              \"تم انشاء الحساب بنجاح، من فضلك قم بتسجيل الدخول \"\r\n            );\r\n            this.authService.logout();\r\n            this.router.navigateByUrl(\"/auth/login\");\r\n          } else {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!--Registration Page Starts-->\r\n<section id=\"regestration\" class=\"auth-height\">\r\n  <div class=\"row full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/register.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"350\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"card-title mb-2\">\r\n                  {{ \"auth.ConfirmRegister\" | translate }}\r\n                </h4>\r\n                <p>\r\n                  {{ \"auth.CompleteRegisterMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"myForm\">\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-label> {{ \"labels.Stage\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"stageID\"\r\n                      [errorStateMatcher]=\"matcher\"\r\n                      (selectionChange)=\"\r\n                        getEduYearByStageId(FormCtrls.stageID?.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of EduStages\"\r\n                        [value]=\"stage.stage_id\"\r\n                      >\r\n                        {{ stage.stage_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.stageID.invalid &&\r\n                        (FormCtrls.stageID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.stageID.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-label> {{ \"labels.Year\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"EduYearID\"\r\n                      [errorStateMatcher]=\"matcher\"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let year of EduYears\"\r\n                        [value]=\"year.educational_year_id\"\r\n                      >\r\n                        {{ year.educational_year_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.EduYearID.invalid &&\r\n                        (FormCtrls.EduYearID.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.EduYearID.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ParentName\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"parentName\"\r\n                      placeholder=\"Parent Name\"\r\n                    />\r\n\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.parentName.invalid &&\r\n                        (FormCtrls.parentName.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.parentName.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.parentName.errors?.whiteSpace ||\r\n                          FormCtrls.parentName.errors?.pattern\r\n                        \"\r\n                      >\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ParentMobile\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"parentPhoneNumber\"\r\n                      placeholder=\"Parent Mobile\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.parentPhoneNumber.invalid &&\r\n                        (FormCtrls.parentPhoneNumber.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.parentPhoneNumber.errors?.required ||\r\n                          FormCtrls.parentPhoneNumber.errors?.whiteSpace ||\r\n                          FormCtrls.parentPhoneNumber.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.parentPhoneNumber.errors?.minlength ||\r\n                          FormCtrls.parentPhoneNumber.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </form>\r\n\r\n                <br />\r\n                <div\r\n                  class=\"d-flex justify-content-between flex-sm-row flex-column\"\r\n                >\r\n                  <a\r\n                    mat-raised-button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"SaveStudenStage()\"\r\n                  >\r\n                    {{ \"General.Confirm\" | translate }}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Page Ends-->\r\n<ngx-spinner></ngx-spinner>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-error-page',\r\n    templateUrl: './error-page.component.html',\r\n    styleUrls: ['./error-page.component.scss']\r\n})\r\n\r\nexport class ErrorPageComponent {\r\n\r\n}","<!--Error page starts-->\r\n<section id=\"error\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row auth-height full-height-vh\">\r\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <img\r\n              src=\"assets/img/gallery/error.png\"\r\n              alt=\"\"\r\n              class=\"img-fluid error-img mt-2\"\r\n              height=\"300\"\r\n              width=\"400\"\r\n            />\r\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\r\n            <div class=\"w-75 error-text mx-auto mt-4\">\r\n              <p>\r\n                The page you are looking for might have beel removed, had it's\r\n                name changed, or is temporarily unavailable.\r\n              </p>\r\n            </div>\r\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">\r\n              {{ \"General.BackToHome\" | translate }}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Error page ends-->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"./../../shared/validators/customeValid.validator\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  resetForm: FormGroup;\r\n  newPassForm: FormGroup;\r\n  submitted = false;\r\n  isFailed: boolean = false;\r\n  errMsg = \"\";\r\n  ifHaveCode: boolean = false;\r\n\r\n  constructor(\r\n    private authServ: AuthService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm = this.fb.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n\r\n    this.newPassForm = this.fb.group({\r\n      verificationCode: [\r\n        \"\",\r\n        [Validators.required, CustomeValidator.whiteSpace],\r\n      ],\r\n\r\n      new_password: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get email() {\r\n    return this.resetForm.controls[\"email\"];\r\n  }\r\n\r\n  get newPassCtrls() {\r\n    return this.newPassForm.controls;\r\n  }\r\n\r\n  // START Forgot Password\r\n  forgotPassword() {\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.authServ\r\n        .forgotPassword(this.resetForm.value)\r\n        .subscribe((res: any) => {\r\n          console.log(res);\r\n          if (res.returnValue == 0) {\r\n            this.ifHaveCode = true;\r\n            this.isFailed = false;\r\n            this.errMsg = \"تم إرسال كود التأكيد الي البريد الإلكتروني الخاص بك\";\r\n          } else {\r\n            this.ifHaveCode = false;\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  // START Forgot Password\r\n  resetPassword() {\r\n    this.isFailed = false;\r\n    if (this.newPassCtrls.valid) {\r\n      this.spinner.show();\r\n      this.authServ\r\n        .resetPassword(this.newPassCtrls.value)\r\n        .subscribe((res: any) => {\r\n          console.log(res);\r\n          if (\r\n            res.returnValue == -1 &&\r\n            res.returnString == \"Verification code is invalid.\"\r\n          ) {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          } else if (\r\n            res.returnValue == 0 &&\r\n            res.returnString == \"Password changed successfully.\"\r\n          ) {\r\n            this.router.navigateByUrl(\"auth/login\");\r\n            this.toastr.success(\r\n              \" تم تغير كلمة المرور بنجاح قم بتسجيل الدخول بكلمة المرور الجديدة\"\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!--Forgot Password Starts-->\r\n<section id=\"forgot-password\" class=\"auth-height\">\r\n  <div\r\n    class=\"row full-height-vh m-0 d-flex align-items-center justify-content-center\"\r\n  >\r\n    <div class=\"col-md-7 col-12\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\"\r\n              >\r\n                <img\r\n                  src=\"/assets/img/gallery/forgot.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"260\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <!-- Search  Email-->\r\n              <div *ngIf=\"!ifHaveCode\" class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">\r\n                  {{ \"auth.RecoverPassword\" | translate }}\r\n                </h4>\r\n                <p class=\"card-text mb-3\">\r\n                  {{ \"auth.RecoverPasswordMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"resetForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"email\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"email.invalid && (email.touched || submitted)\"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        please enter a correct email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </form>\r\n                <br />\r\n                <div\r\n                  class=\"d-flex flex-sm-row flex-column justify-content-between\"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    (click)=\"forgotPassword()\"\r\n                    class=\"btn btn-primary ml-sm-1\"\r\n                  >\r\n                    {{ \"General.SendCode\" | translate }}\r\n                  </button>\r\n                  <a\r\n                    mat-raised-button\r\n                    routerLink=\"/auth/login\"\r\n                    class=\"btn bg-light-primary mb-2 mb-sm-0\"\r\n                  >\r\n                    {{ \"auth.BackToLogin\" | translate }}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Send Code -->\r\n              <div *ngIf=\"ifHaveCode\" class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">\r\n                  {{ \"auth.NewPassword\" | translate }}\r\n                </h4>\r\n                <p class=\"card-text mb-3\">\r\n                  {{ \"auth.EnterVerificationCodeMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"newPassForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"auth.VerificationCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      placeholder=\"Enter verification code\"\r\n                      formControlName=\"verificationCode\"\r\n                      autocomplete=\"off\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        newPassCtrls.verificationCode.invalid &&\r\n                        (newPassCtrls.verificationCode.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          newPassCtrls.verificationCode.errors?.required ||\r\n                          newPassCtrls.verificationCode.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"auth.NewPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"Enter New Password\"\r\n                      formControlName=\"new_password\"\r\n                      autocomplete=\"off\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        newPassCtrls.new_password.invalid &&\r\n                        (newPassCtrls.new_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"newPassCtrls.new_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span></mat-hint\r\n                    >\r\n                  </mat-form-field>\r\n                </form>\r\n                <br />\r\n                <div\r\n                  class=\"d-flex flex-sm-row flex-column justify-content-between\"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    (click)=\"resetPassword()\"\r\n                    class=\"btn btn-primary ml-sm-1 flex-right\"\r\n                  >\r\n                    {{ \"General.Save\" | translate }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Forgot Password Ends-->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AppStrings } from \"app/shared/data/app-strings\";\r\nimport { loginMV } from \"app/shared/models/auth/auth\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-login-page\",\r\n  templateUrl: \"./login-page.component.html\",\r\n  styleUrls: [\"./login-page.component.scss\"],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  submitted = false;\r\n  isFailed = false;\r\n  errMsg = \"\";\r\n  returnUrl?: any;\r\n\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private appStrings: AppStrings\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"];\r\n    this.loginForm = this.fb.group({\r\n      account_email: [\"\", [Validators.required, Validators.email]],\r\n      account_password: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  // login\r\n  login() {\r\n    Object.keys(localStorage).forEach((key) => {\r\n      if (!key.includes(this.appStrings.CURRENT_LANG)) delete localStorage[key];\r\n    });\r\n    this.submitted = true;\r\n    if (this.loginForm.valid) {\r\n      this.spinner.show();\r\n      this.authService\r\n        .login<loginMV, any>(this.loginForm.value)\r\n        .subscribe((res) => {\r\n          this.spinner.hide();\r\n          this.submitted = false;\r\n          this.isFailed = false;\r\n\r\n          if (res.returnValue == 0) {\r\n            localStorage.setItem(\"token\", res.authToken.token);\r\n            localStorage.setItem(\"user_type_Id\", res.user_type_id);\r\n            localStorage.setItem(\"yearId\", res.yearId);\r\n            localStorage.setItem(\"EduCompList\", res.authToken.EduCompList);\r\n            this.authService.setEduCompId(res.authToken?.EduCompList[0]);\r\n            //  localStorage.setItem(\"EduCompId\", res.authToken.EduCompList[0]);\r\n\r\n            if (res.user_type_id == 2)\r\n              this.router.navigateByUrl(this.returnUrl || \"student\");\r\n            else if (res.user_type_id == 6)\r\n              this.router.navigateByUrl(\"/support/search\" || \"home\");\r\n            else this.router.navigateByUrl(\"/home\");\r\n          }\r\n\r\n          // if login Error\r\n          else if (res.returnValue == -1) {\r\n            this.isFailed = true;\r\n            this.errMsg = \"البريد الإلكتروني او كلمه السر غير صحيحه\";\r\n          } else {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!--Login Page Starts-->\r\n<section id=\"login\">\r\n  <div class=\"row auth-height full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/login.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"300\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">{{ \"auth.Login\" | translate }}</h4>\r\n                <p>{{ \"auth.WelcomeBackMsg\" | translate }}</p>\r\n\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"loginForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"account_email\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_email.invalid &&\r\n                        (FormCtrls.account_email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span></mat-hint\r\n                    >\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Password\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"password\"\r\n                      formControlName=\"account_password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_password.invalid &&\r\n                        (FormCtrls.account_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        This is required\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <br />\r\n\r\n                  <div\r\n                    class=\"d-sm-flex justify-content-between mb-3 font-small-2\"\r\n                  >\r\n                    <a routerLink=\"/auth/reset-password\">\r\n                      {{ \"auth.ForgotPassword\" | translate }}</a\r\n                    >\r\n                  </div>\r\n                  <div\r\n                    class=\"d-flex justify-content-between flex-sm-row flex-column\"\r\n                  >\r\n                    <a\r\n                      mat-raised-button\r\n                      class=\"btn btn-primary mb-2 mb-sm-0\"\r\n                      (click)=\"login()\"\r\n                    >\r\n                      {{ \"auth.Login\" | translate }}\r\n                    </a>\r\n                    <!-- <a\r\n                      mat-raised-button\r\n                      routerLink=\"/auth/register\"\r\n                      class=\"btn bg-light-primary mb-2 mb-sm-0\"\r\n                    >\r\n                      {{ \"auth.CreateAccount\" | translate }}\r\n                    </a> -->\r\n                  </div>\r\n                </form>\r\n                <hr />\r\n                <ngx-spinner></ngx-spinner>\r\n                <!-- <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <h6 class=\"text-primary m-0\">Or Login With</h6>\r\n\r\n                  <div class=\"login-options\">\r\n                    <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\r\n                    <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\r\n                  </div>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Login Page Ends-->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RegisterMV } from \"app/shared/models/auth/auth\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.scss\"],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  isFailed = false;\r\n  errMsg = \"\";\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        Id: [null],\r\n        userTypeId: [2, Validators.required],\r\n\r\n        ar_name: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n\r\n        mobile: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n            Validators.minLength(11),\r\n            Validators.maxLength(11),\r\n            CustomeValidator.startsWith,\r\n          ],\r\n        ],\r\n\r\n        account_email: [\"\", [Validators.required, Validators.email]],\r\n\r\n        account_password: [\r\n          \"\",\r\n          [Validators.required, CustomeValidator.whiteSpace],\r\n        ],\r\n\r\n        confirmPassword: [\"\", [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\r\n          \"account_password\",\r\n          \"confirmPassword\"\r\n        ),\r\n      }\r\n    );\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log(this.myForm.value);\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.authService\r\n        .Registeration<RegisterMV, any>(this.myForm.value)\r\n        .subscribe((res) => {\r\n          //console.log(res);\r\n          this.spinner.hide();\r\n          this.submitted = false;\r\n          this.isFailed = false;\r\n          if (res.returnValue == 1) {\r\n            localStorage.setItem(\"token\", res.token.token);\r\n            localStorage.setItem(\"user_type_Id\", res.user_type_id);\r\n            if (res.user_type_id == \"2\") {\r\n              this.router.navigateByUrl(\"/auth/educational-details\");\r\n            } else {\r\n              this.router.navigateByUrl(\"/home\");\r\n            }\r\n          }\r\n\r\n          if (res.returnValue == 0) {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!--Registration Page Starts-->\r\n<section id=\"regestration\" class=\"auth-height\">\r\n  <div class=\"row full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/register.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"350\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"card-title mb-2\">\r\n                  {{ \"auth.CreateAccount\" | translate }}\r\n                </h4>\r\n                <p>\r\n                  {{ \"auth.FillFormMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"myForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"ar_name\"\r\n                      placeholder=\"Name\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.ar_name.invalid &&\r\n                        (FormCtrls.ar_name.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.ar_name.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.ar_name.errors?.whiteSpace ||\r\n                          FormCtrls.ar_name.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"mobile\"\r\n                      placeholder=\"Mobile\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.mobile.invalid &&\r\n                        (FormCtrls.mobile.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.mobile.errors?.required ||\r\n                          FormCtrls.mobile.errors?.whiteSpace ||\r\n                          FormCtrls.mobile.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.mobile.errors?.minlength ||\r\n                          FormCtrls.mobile.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.mobile.errors?.startsWith\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"account_email\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_email.invalid &&\r\n                        (FormCtrls.account_email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Password\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"password\"\r\n                      formControlName=\"account_password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.account_password.invalid &&\r\n                        (FormCtrls.account_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.account_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ConfirmPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      formControlName=\"confirmPassword\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.confirmPassword.invalid &&\r\n                        (FormCtrls.confirmPassword.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.confirmPassword.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        You must enter a confirm password.\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.confirmPassword.errors?.mustMatch\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        Password and confirm not match\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <!-- <mat-radio-group formControlName=\"userTypeId\" class=\"row\">\r\n                    <div class=\"col-6\">\r\n                      <mat-radio-button [value]=\"2\">\r\n                        {{ \"labels.Studnt\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-6\">\r\n                      <mat-radio-button [value]=\"3\">\r\n                        {{ \"labels.Parent\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group> -->\r\n                </form>\r\n\r\n                <br />\r\n                <div\r\n                  class=\"d-flex justify-content-between flex-sm-row flex-column\"\r\n                >\r\n                  <a\r\n                    mat-raised-button\r\n                    (click)=\"onSubmit()\"\r\n                    class=\"btn btn-primary mb-2 mb-sm-0\"\r\n                  >\r\n                    {{ \"auth.CreateAccount\" | translate }}\r\n                  </a>\r\n                  <a\r\n                    mat-raised-button\r\n                    routerLink=\"/auth/login\"\r\n                    class=\"btn bg-light-primary mb-2 mb-sm-0\"\r\n                  >\r\n                    {{ \"auth.BackToLogin\" | translate }}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Registration Page Ends-->\r\n<ngx-spinner></ngx-spinner>\r\n","import { EducationalDetailsComponent } from \"./educational-details/educational-details.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { NotUserGuard } from \"app/shared/services/auth/Guards/auth/not-user.guard\";\r\nimport { IsStudentGuard } from \"app/shared/services/auth/Guards/roles/is-student.guard\";\r\nimport { PendingChangesGuard } from \"app/shared/services/auth/Guards/auth/pending-changes.guard\";\r\nimport { AccessDeniedComponent } from \"./access-denied/access-denied.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"error\",\r\n        component: ErrorPageComponent,\r\n      },\r\n      {\r\n        path: \"access-denied\",\r\n        component: AccessDeniedComponent,\r\n      },\r\n\r\n      {\r\n        path: \"login\",\r\n        component: LoginPageComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n\r\n      {\r\n        path: \"register\",\r\n        component: RegisterComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n      {\r\n        path: \"reset-password\",\r\n        component: ForgotPasswordComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n\r\n      {\r\n        path: \"educational-details\",\r\n        component: EducationalDetailsComponent,\r\n        canActivate: [IsStudentGuard],\r\n        canDeactivate: [PendingChangesGuard],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistrationRoutingModule {}\r\n","import { TranslateModule } from \"@ngx-translate/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { MaterialModule } from \"./../shared/material/material.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nimport { RegistrationRoutingModule } from \"./registration-routing.module\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { EducationalDetailsComponent } from \"./educational-details/educational-details.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { AccessDeniedComponent } from './access-denied/access-denied.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RegistrationRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    TranslateModule,\r\n  ],\r\n  declarations: [\r\n    ErrorPageComponent,\r\n    LoginPageComponent,\r\n    RegisterComponent,\r\n    EducationalDetailsComponent,\r\n    ForgotPasswordComponent,\r\n    AccessDeniedComponent,\r\n  ],\r\n})\r\nexport class RegistrationModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from \"@angular/router\";\r\nimport { AuthService } from \"../../auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class NotUserGuard implements CanActivate {\r\n  constructor(private route: Router, private authservice: AuthService) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (!localStorage.getItem(\"token\")) {\r\n      return true;\r\n    } else {\r\n      this.route.navigateByUrl(\"\");\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"names":["AccessDeniedComponent","selectors","decls","vars","consts","template","i0","CustomeValidator","Validators","ErrorStateMatcher","EducationalDetailsComponent","authService","generalServ","studentServ","fb","router","toaster","spinner","myForm","valid","getEduStagesList","group","stageID","required","EduYearID","parentName","whiteSpace","pattern","parentPhoneNumber","minLength","maxLength","controls","getAllEduStagesList","subscribe","res","EduStages","stageId","EduYears","FormCtrls","setValue","getEduYearByStageId","submitted","show","SaveStudenStage","value","hide","returnValue","isFailed","success","logout","navigateByUrl","errMsg","returnString","hostBindings","ctx","ErrorPageComponent","ctx_r8","ctx_r17","ForgotPasswordComponent","authServ","toastr","resetForm","email","newPassForm","verificationCode","new_password","forgotPassword","console","log","ifHaveCode","newPassCtrls","resetPassword","LoginPageComponent","route","appStrings","returnUrl","snapshot","queryParams","loginForm","account_email","account_password","Object","keys","localStorage","forEach","key","includes","CURRENT_LANG","login","setItem","authToken","token","user_type_id","yearId","EduCompList","setEduCompId","_a","RegisterComponent","Id","userTypeId","ar_name","mobile","startsWith","confirmPassword","validator","mustMatch","Registeration","RouterModule","NotUserGuard","IsStudentGuard","PendingChangesGuard","routes","path","children","component","canActivate","canDeactivate","RegistrationRoutingModule","forChild","imports","exports","TranslateModule","MaterialModule","CommonModule","FormsModule","ReactiveFormsModule","NgbModule","NgxSpinnerModule","RegistrationModule","declarations","authservice","state","getItem","factory","providedIn"],"sourceRoot":"webpack:///"}