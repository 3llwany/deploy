{"version":3,"file":"default-src_app_admin_pages_exams-setup_exams_add-exam_add-exam_component_ts.js","mappings":"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","sources":["./src/app/admin/pages/exams-setup/exams/add-exam/add-exam.component.ts","./src/app/admin/pages/exams-setup/exams/add-exam/add-exam.component.html","./src/app/admin/pages/exams-setup/exams/add-sub-question/add-sub-question.component.ts","./src/app/admin/pages/exams-setup/exams/add-sub-question/add-sub-question.component.html"],"sourcesContent":["import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport {\r\n  IExamResponse,\r\n  IExamResponseInDetails,\r\n} from \"../../../../models/admin/addEditExam\";\r\nimport { DatePipe, Location } from \"@angular/common\";\r\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthService } from \"../../../../../shared/services/auth/auth.service\";\r\nimport { ExamsService } from \"../../../../services/Admin/exams.service\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  ICountrieDropModel,\r\n  IDiscountTypeModel,\r\n  IEducationYearDropModel,\r\n  IExamTypeModel,\r\n  ILessionModel,\r\n  IStageDropModel,\r\n  ISubjectDropModel,\r\n  ITeacherDropModel,\r\n  IUnitModel,\r\n} from \"../../../../models/admin/exam\";\r\nimport {\r\n  IAddEditExamHeaderModel,\r\n  IAddEditExamModel,\r\n} from \"../../../../models/admin/addEditExam\";\r\nimport { forkJoin, Observable } from \"rxjs\";\r\nimport {\r\n  IAddExamGroupHeaderModel,\r\n  IEditExamGroupHeaderModel,\r\n  IExamGroupHeaderModel,\r\n  IExamModel,\r\n} from \"../../../../models/admin/AddExamGroupHeader\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { AddSubQuestionComponent } from \"../add-sub-question/add-sub-question.component\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { IUnitDataGeneralVM } from \"app/admin/models/admin/setup/course\";\r\nimport { RadioButtonModel } from \"app/shared/components/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { AppStrings } from \"app/shared/data/app-strings\";\r\n\r\n@Component({\r\n  selector: \"app-add-exam\",\r\n  templateUrl: \"./add-exam.component.html\",\r\n  styleUrls: [\"./add-exam.component.scss\"],\r\n})\r\nexport class AddExamComponent implements OnInit {\r\n  functionId: number;\r\n  parentId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  EduCompId: any;\r\n  branchId: any;\r\n  countries: ICountrieDropModel[] = [];\r\n  stages: IStageDropModel[] = [];\r\n  educationYears: IEducationYearDropModel[] = [];\r\n  subjects: ISubjectDropModel[] = [];\r\n  teachers: teacherByEduCompId[];\r\n  examTypes: IExamTypeModel[] = [];\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n  discountTypes: IDiscountTypeModel[] = [];\r\n\r\n  examGroups: any[] = [];\r\n  examHeaders: any[] = [];\r\n  filteredExamGroups: Observable<any[]>;\r\n  filteredExamHeaders: Observable<any[]>;\r\n\r\n  GroupsHeadersList: IExamGroupHeaderModel[] = [];\r\n  type: number;\r\n  subId: number;\r\n  unitId: number;\r\n  examGroupHeaderIdToEdit: number = 0;\r\n  // sava last data in database not in form\r\n  exam_ar_name: string;\r\n  order: number;\r\n  isMandatory: boolean;\r\n\r\n  myForm!: FormGroup;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"questionNumber\",\r\n    \"questionType\",\r\n    \"question_title\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IExamGroupHeaderModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  GroupHeadersForm!: FormGroup;\r\n  submitted = false;\r\n  itemsCount: any;\r\n  GroupHeadsubmitted = false;\r\n  examId: number = 0;\r\n  editGroupHeaderMode: boolean = false;\r\n  isRepeatableExam: boolean = false;\r\n  isSendWhats: boolean = false;\r\n  examGroupHeaderId: any = 0;\r\n\r\n  constructor(\r\n    public location: Location,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private examService: ExamsService,\r\n    // private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private msg: MessagesService,\r\n    private generalService: GeneralService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService,\r\n    public appStrings: AppStrings,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<AddExamComponent>\r\n  ) {\r\n    this.type = data.type;\r\n    this.subId = data.subjectId;\r\n    this.unitId = data.unitId;\r\n    // route.paramMap.subscribe((params) => {\r\n    //   this.type = Number(params.get(\"typeId\"));\r\n    // });\r\n    // route.paramMap.subscribe((params) => {\r\n    //   this.subId = Number(params.get(\"courseId\"));\r\n    // });\r\n\r\n    this.examId = data.examId;\r\n    if (this.examId > 0) {\r\n      this.getExamById();\r\n      this.getAllGroupHeaderByExamId();\r\n    }\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      // this.examId = Number(params.get(\"examId\"));\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.parentId = Number(params.get(\"parentId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        // countryId: [\"\"],\r\n        // stageId: [\"\"],\r\n        // educationYearId: [\"\"],\r\n        // subjectId: [\"\", [Validators.required]],\r\n        // teacherUserId: [\"\", [Validators.required]],\r\n        // examTypeId: [\"\", [Validators.required]],\r\n        // unitId: [\"\"],\r\n        // lessionId: [\"\"],\r\n        examName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n        examHours: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        examMinutes: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        // examPrice: [0, [Validators.required, CustomeValidator.minusNum]],\r\n        // discount: [\"\"],\r\n        // discountType: [\"\"],\r\n        fromDate: [\"\"],\r\n        toDate: [\"\"],\r\n        formHour: [\"\"],\r\n        toHours: [\"\"],\r\n        // resualtDate: [\"\"],\r\n        // resualtTime: [\"\"],\r\n        // canSellIndividually: [true, Validators.required],\r\n        isRepeatable: [true, Validators.required],\r\n        repeatNumbers: [1000],\r\n        // repeatingPrice: [0],\r\n        // hasCustomDiscount: [false, Validators.required],\r\n        // sendWhatsAppMsg: [false, Validators.required],\r\n        // isPublish: [0],\r\n        degreeToPass: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n        order: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n        isMandatory: [true, [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomeValidator.dateBefore(\"fromDate\", \"toDate\"),\r\n      }\r\n    );\r\n\r\n    this.GroupHeadersForm = this.fb.group({\r\n      examGroup: [\"السؤال الاول\", Validators.required],\r\n      examHeader: [\"اختر  الإجابة الصحيحة\", Validators.required],\r\n      examContent: [null],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.FormCtrl.stageId?.disable();\r\n    this.FormCtrl.educationYearId?.disable();\r\n    this.FormCtrl.subjectId?.disable();\r\n    this.FormCtrl.teacherUserId?.disable();\r\n    this.FormCtrl.unitId?.disable();\r\n    this.FormCtrl.lessionId?.disable();\r\n\r\n    this.getAllCountieres();\r\n    this.getAllExamTypes();\r\n    this.getAllQuestionGroups();\r\n    this.getAllQuestionHeaders();\r\n\r\n    this.examTypeValidator();\r\n    this.RepeatableValidator();\r\n\r\n    // on closing dialog by clicking outside dialog\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    let data: IUnitDataGeneralVM = null;\r\n    if (this.examId) {\r\n      data = {\r\n        id: this.examId,\r\n        ar_name: this.exam_ar_name,\r\n        type: this.appStrings.stageExam,\r\n        order: this.order,\r\n        isMandatory: this.isMandatory,\r\n      };\r\n    }\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.examId > 0) this.getExamById();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  // filter question group\r\n  private filter_question_group(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examGroups.filter((option) =>\r\n      option.question_group_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  // filter question header\r\n  private filter_question_header(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examHeaders.filter((option) =>\r\n      option.question_head_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n  get GroupHeadersFormCtrl() {\r\n    return this.GroupHeadersForm.controls;\r\n  }\r\n\r\n  getExamById() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getExamById<IExamResponseInDetails>(this.examId)\r\n      .subscribe((response) => {\r\n        // console.log(\"getExamById\", response);\r\n        if (response) {\r\n          // this.FormCtrl.stageId?.enable();\r\n          // this.FormCtrl.educationYearId?.enable();\r\n          // this.FormCtrl.subjectId?.enable();\r\n          // this.FormCtrl.teacherUserId?.enable();\r\n          // this.FormCtrl.unitId?.enable();\r\n          // this.FormCtrl.lessionId?.enable();\r\n\r\n          this.FormCtrl.toHours?.setValue(response?.toHour);\r\n          // this.FormCtrl.isPublish?.setValue(response?.isPublish);\r\n          // this.FormCtrl.discount?.setValue(response?.Discount);\r\n          this.FormCtrl.examName?.setValue(response?.exam_ar_name);\r\n          this.exam_ar_name = response?.exam_ar_name;\r\n          this.FormCtrl.formHour?.setValue(response?.fromHour);\r\n          // this.FormCtrl.examPrice?.setValue(response?.price);\r\n          // this.FormCtrl.resualtTime?.setValue(response?.ResultTime);\r\n          // this.FormCtrl.discountType?.setValue(response?.DiscountType);\r\n          // this.FormCtrl.isRepeatable?.setValue(response?.repeatableExam);\r\n          // this.isRepeatableExam = response?.repeatableExam;\r\n          // this.FormCtrl.repeatNumbers?.setValue(response?.repeatableExam_Count);\r\n          // this.FormCtrl.sendWhatsAppMsg?.setValue(response?.SendWhatsApp);\r\n          // this.isSendWhats = response?.SendWhatsApp;\r\n          // this.FormCtrl.hasCustomDiscount?.setValue(response?.Discount > 0);\r\n          this.FormCtrl.canSellIndividually?.setValue(\r\n            response?.Individually_Purchased\r\n          );\r\n          // this.FormCtrl.countryId?.setValue(response.countryId);\r\n          //  this.FormCtrl.examTypeId?.setValue(response.examTypeId);\r\n          // this.FormCtrl.repeatingPrice?.setValue(response.StudentRepeatExamCost);\r\n\r\n          let exam_minute = response.exam_period_minute % 60;\r\n          let exam_hour = (response.exam_period_minute - exam_minute) / 60;\r\n          this.FormCtrl.examMinutes?.setValue(exam_minute);\r\n          this.FormCtrl.examHours?.setValue(exam_hour);\r\n\r\n          // if (response.Lesson_ID != null) this.FormCtrl.examTypeId?.setValue(1);\r\n          // if (response?.Unit_ID != null && response.Lesson_ID == null)\r\n          //   this.FormCtrl.examTypeId?.setValue(2);\r\n\r\n          if (\r\n            response?.Subject_ID != null\r\n            // response?.Unit_ID == null &&\r\n            // response.Lesson_ID == null\r\n          )\r\n            if (\r\n              response?.Subject_ID == null &&\r\n              // response?.Unit_ID == null &&\r\n              // response.Lesson_ID == null &&\r\n              response.quiz == 1\r\n            )\r\n              // this.FormCtrl.examTypeId?.setValue(3);\r\n\r\n              this.FormCtrl.examTypeId?.setValue(4);\r\n\r\n          this.FormCtrl.fromDate?.setValue(response.Avilable_Date_From);\r\n          this.FormCtrl.toDate?.setValue(response.Avilable_Date_To);\r\n          // this.FormCtrl.resualtDate?.setValue(response.ResultDate);\r\n\r\n          // this.FormCtrl.countryId?.setValue(1);\r\n          // this.onSelectCountry();\r\n          // this.FormCtrl.stageId?.setValue(response.stageId);\r\n          // this.onSelectStages();\r\n          // this.FormCtrl.educationYearId?.setValue(response.eduYearId);\r\n          // this.onSelectEducationYears();\r\n          // this.FormCtrl.subjectId?.setValue(response?.main_subject_id);\r\n          // this.onSelectSubjects();\r\n          // this.FormCtrl.teacherUserId?.setValue(response?.teacherUserId);\r\n          // this.FormCtrl.unitId?.setValue(response?.Unit_ID);\r\n\r\n          // this.onSelectUnit();\r\n          // this.FormCtrl.lessionId?.setValue(response?.Lesson_ID);\r\n\r\n          // this.FormCtrl.stageId?.setValue(response.stageId);\r\n          // this.FormCtrl.educationYearId?.setValue(response.eduYearId);\r\n          // this.FormCtrl.teacherUserId?.setValue(response?.teacherUserId);\r\n          // this.FormCtrl.unitId?.setValue(response?.Unit_ID);\r\n\r\n          this.FormCtrl.degreeToPass?.setValue(response.percentageToPass);\r\n          this.FormCtrl.order?.setValue(response.orderNum);\r\n          this.order = response.orderNum;\r\n          this.FormCtrl.isMandatory?.setValue(response.isMandatory);\r\n          this.isMandatory = response.isMandatory;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllGroupHeaderByExamId() {\r\n    this.examService\r\n      .getAllGroupHeaderByExamId<IExamGroupHeaderModel>(this.examId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"groupsHeadersLit : \", response);\r\n          this.GroupsHeadersList = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.itemsCount = response.length;\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllQuestionGroups() {\r\n    this.examService.getAllQuestionGroups<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examGroups = response;\r\n        //  console.log(\"examGroups\", this.examGroups);\r\n        this.filteredExamGroups =\r\n          this.GroupHeadersFormCtrl.examGroup?.valueChanges.pipe(\r\n            startWith(\"\"),\r\n            map((value) => this.filter_question_group(value || \"\"))\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllQuestionHeaders() {\r\n    this.examService.getAllQuestionHeaders<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examHeaders = response;\r\n        this.filteredExamHeaders =\r\n          this.GroupHeadersFormCtrl.examHeader?.valueChanges.pipe(\r\n            startWith(\"\"),\r\n            map((value) => this.filter_question_header(value || \"\"))\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    // todo .. check for mandatory firlds\r\n    let exam: IAddEditExamModel = {\r\n      id: this.examId,\r\n      Avilable_Date_From: this.datePipe.transform(\r\n        this.FormCtrl.fromDate?.value\r\n      ),\r\n      Avilable_Date_To: this.datePipe.transform(this.FormCtrl.toDate.value),\r\n      // CustomDiscountApplied: this.FormCtrl.hasCustomDiscount?.value,\r\n      // Discount: this.FormCtrl.discount?.value,\r\n      // DiscountType: this.FormCtrl.discountType?.value,\r\n      EduCompId: this.EduCompId,\r\n      // Individually_Purchased: this.FormCtrl.canSellIndividually?.value,\r\n      // ResultDate: this.datePipe.transform(this.FormCtrl.resualtDate.value),\r\n      // ResultTime: this.FormCtrl.resualtTime?.value,\r\n      // SendWhatsApp: this.FormCtrl.sendWhatsAppMsg?.value,\r\n      // StudentRepeatExamCost: this.FormCtrl.repeatingPrice?.value,\r\n      exam_ar_name: this.FormCtrl.examName?.value,\r\n      fromHour: this.FormCtrl.formHour?.value,\r\n      // lesson_ID: this.FormCtrl.lessionId?.value,\r\n      // price: this.FormCtrl.examPrice?.value,\r\n      repeatableExam: this.FormCtrl.isRepeatable?.value,\r\n      repeatableExam_Count: this.FormCtrl.repeatNumbers?.value,\r\n      Subject_ID: this.subId,\r\n      Unit_ID: this.unitId,\r\n      // teacherUserId: this.FormCtrl.teacherUserId?.value,\r\n      // teacher_subject_id: this.FormCtrl.subjectId?.value,\r\n      toHour: this.FormCtrl.toHours?.value,\r\n      // unit_ID: this.FormCtrl.unitId?.value,\r\n      // exam_hour: this.FormCtrl.examHours?.value,\r\n      // exam_minute: this.FormCtrl.examMinutes?.value,\r\n      // isPublish: this.FormCtrl.isPublish?.value,\r\n      percentageToPass: this.FormCtrl.degreeToPass.value,\r\n      orderNum: this.FormCtrl.order.value,\r\n      isMandatory: this.FormCtrl.isMandatory.value,\r\n      exam_type_id: this.type,\r\n    };\r\n\r\n    let toAddEdit: IAddEditExamHeaderModel = {\r\n      exam_hour: this.FormCtrl.examHours?.value,\r\n      exam_minute: this.FormCtrl.examMinutes?.value,\r\n      // exam_type_id: this.type,\r\n      exam: exam,\r\n    };\r\n\r\n    console.log(\"toAdd \", toAddEdit);\r\n\r\n    // if exam id = 0 the end point will add >> if the exam id > 0 the end point will edit\r\n    this.addExam(toAddEdit);\r\n  }\r\n\r\n  addExam(toAddEdit: IAddEditExamHeaderModel) {\r\n    let validGroupHeadersForm = this.GroupHeadersForm.valid;\r\n\r\n    this.submitted = true;\r\n    if (this.examId == 0 && !validGroupHeadersForm) {\r\n      this.GroupHeadsubmitted = true;\r\n    } else {\r\n      // if (\r\n      //   this.FormCtrl.hasCustomDiscount?.value == true &&\r\n      //   this.FormCtrl.repeatNumbers.value <= 0\r\n      // ) {\r\n      //   this.msg.warning(\"يجب ادخال عدد مرات التكرار\");\r\n      //   return;\r\n      // }\r\n\r\n      // if (\r\n      //   this.FormCtrl.hasCustomDiscount?.value == true &&\r\n      //   this.FormCtrl.repeatingPrice.value < 0\r\n      // ) {\r\n      //   this.msg.warning(\"يجب ادخال سعر تجديد الامتحان \");\r\n      //   return;\r\n      // }\r\n\r\n      if (this.myForm.valid) {\r\n        this.spinner.show();\r\n        this.examService\r\n          .addExam<IAddEditExamHeaderModel, any>(toAddEdit)\r\n          .subscribe((response) => {\r\n            if (response.returnValue == 1 && response.examId > 0) {\r\n              console.log(\"addExam\", response);\r\n              this.examId == 0\r\n                ? this.msg.success(\"General.AddSuccessfully\")\r\n                : this.msg.success(\"General.UpdeteSuccessfully\");\r\n\r\n              this.exam_ar_name = toAddEdit.exam.exam_ar_name;\r\n              this.order = toAddEdit.exam.orderNum;\r\n              this.isMandatory = toAddEdit.exam.isMandatory;\r\n\r\n              this.examId = response.examId;\r\n              this.router.navigate([], {\r\n                queryParams: {\r\n                  examId: response.examId,\r\n                },\r\n                queryParamsHandling: \"merge\",\r\n              });\r\n              this.onAddExamGroupHeader();\r\n\r\n              this.submitted = false;\r\n              // this.examId=0;\r\n              // this.myForm.reset();\r\n            } else this.msg.error(response?.returnString);\r\n            this.spinner.hide();\r\n          });\r\n      } else this.msg.error(\"General.FormNotValid\");\r\n    }\r\n  }\r\n\r\n  onAddExamGroupHeader() {\r\n    // let sameGroupWithSameHeader = this.GroupsHeadersList.find(\r\n    //   (gh) =>\r\n    //     gh.group_name == this.GroupHeadersFormCtrl.examGroup?.value &&\r\n    //     gh.head_name == this.GroupHeadersFormCtrl.examHeader?.value\r\n    // );\r\n    let sameGroupWithSameHeader = this.dataSource?.data?.find(\r\n      (gh) =>\r\n        gh.group_name == this.GroupHeadersFormCtrl.examGroup?.value &&\r\n        gh.head_name == this.GroupHeadersFormCtrl.examHeader?.value\r\n    );\r\n\r\n    if (sameGroupWithSameHeader) {\r\n      this.msg.info(\"Cannot add the same header with same group\");\r\n      return;\r\n    }\r\n\r\n    let tempExam: IExamModel = {\r\n      id: this.examId,\r\n    };\r\n\r\n    let ToAddExamGroupHeader: IAddExamGroupHeaderModel = {\r\n      exam_question_group_text: this.GroupHeadersFormCtrl.examGroup?.value,\r\n      exam_question_head_title: this.GroupHeadersFormCtrl.examContent?.value,\r\n      exam_question_head_text: this.GroupHeadersFormCtrl.examHeader?.value,\r\n      exam: tempExam,\r\n    };\r\n\r\n    if (this.GroupHeadersForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addExamGroupHeader<IAddExamGroupHeaderModel, any>(ToAddExamGroupHeader)\r\n        .subscribe((headerResponse) => {\r\n          if (headerResponse) {\r\n            //  console.log('addExamGroupHeader', headerResponse);\r\n            this.getAllGroupHeaderByExamId();\r\n            //   this.msg.success(\"General.AddSuccessfully\");\r\n            let tempExcamGroupHeader = {\r\n              Id: headerResponse.exam_question_head_id,\r\n              group_name: this.GroupHeadersFormCtrl.examGroup?.value,\r\n              head_name: this.GroupHeadersFormCtrl.examHeader?.value,\r\n              question_title: this.GroupHeadersFormCtrl.examContent?.value,\r\n            };\r\n\r\n            //   this.GroupsHeadersList.push(tempExcamGroupHeader);\r\n\r\n            // console.log(\"this.GroupsHeadersList\", this.GroupsHeadersList);\r\n\r\n            this.GroupHeadersFormCtrl.examContent?.setValue(null);\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else {\r\n      if (this.examId == 0) this.msg.error(\"General.FormNotValid\");\r\n    }\r\n  }\r\n\r\n  getExamHeadById(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.editGroupHeaderMode = true;\r\n    this.examGroupHeaderIdToEdit = examGroupHeader.id;\r\n    this.GroupHeadersFormCtrl.examGroup?.setValue(\r\n      examGroupHeader?.questionNumber\r\n    );\r\n    this.GroupHeadersFormCtrl.examContent?.setValue(\r\n      examGroupHeader?.question_title\r\n    );\r\n    this.GroupHeadersFormCtrl.examHeader?.setValue(\r\n      examGroupHeader?.questionType\r\n    );\r\n  }\r\n\r\n  editExamGroupHead() {\r\n    let toEdit: IEditExamGroupHeaderModel = {\r\n      exam_question_head_id: this.examGroupHeaderIdToEdit,\r\n      group: this.GroupHeadersFormCtrl.examGroup?.value,\r\n      head: this.GroupHeadersFormCtrl.examHeader?.value,\r\n      title: this.GroupHeadersFormCtrl.examContent?.value,\r\n    };\r\n\r\n    // console.log('toEdit', toEdit);\r\n    this.spinner.show();\r\n    this.examService\r\n      .editExamGroupHeader<IEditExamGroupHeaderModel, any>(toEdit)\r\n      .subscribe((editResponse) => {\r\n        if (editResponse) {\r\n          //   console.log('editResponse', editResponse);\r\n\r\n          let toReplace = this.dataSource.data.find(\r\n            (gh) => gh.id == this.examGroupHeaderIdToEdit\r\n          );\r\n\r\n          if (toReplace) {\r\n            toReplace.questionNumber = toEdit.group;\r\n            toReplace.questionType = toEdit.head;\r\n            toReplace.question_title =\r\n              this.GroupHeadersFormCtrl.examContent?.value;\r\n          }\r\n\r\n          this.editGroupHeaderMode = false;\r\n          this.GroupHeadersFormCtrl.examContent?.setValue(null);\r\n          this.msg.success(\"General.UpdeteSuccessfully\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamGroupHead(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.spinner.show();\r\n    this.examService\r\n      .deleteExamGroupHeader(examGroupHeader.id)\r\n      .subscribe((deleteResponse: any) => {\r\n        // console.log('deleteResponse', deleteResponse);\r\n        if (deleteResponse.returnValue == 1) {\r\n          let todeleteIndex = this.dataSource.data.findIndex(\r\n            (gh) => gh == examGroupHeader\r\n          );\r\n\r\n          this.dataSource.data.splice(todeleteIndex, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"General.DeleteSuccessfully\");\r\n        } else this.msg.error(deleteResponse.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(examGroupHeader: IExamGroupHeaderModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: examGroupHeader.questionNumber,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeExamGroupHead(examGroupHeader);\r\n      });\r\n  }\r\n\r\n  addSubQuestionDialog(groupHeader: IExamGroupHeaderModel): void {\r\n    console.log(groupHeader);\r\n    this.dialog\r\n      .open(AddSubQuestionComponent, {\r\n        data: {\r\n          examId: this.examId,\r\n          examGroupHeaderId: groupHeader.id,\r\n          subjectId: this.subId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) {\r\n        }\r\n      });\r\n  }\r\n\r\n  addSubQuestion(examGroupHeaderId: number) {\r\n    this.examGroupHeaderId = examGroupHeaderId;\r\n    let obj: any = {\r\n      examGroupHeaderId: examGroupHeaderId,\r\n      subjectId: this.FormCtrl.subjectId?.value,\r\n      unitId: this.FormCtrl.unitId?.value,\r\n      lessonId: this.FormCtrl.lessionId?.value,\r\n    };\r\n  }\r\n\r\n  getAllExamTypes() {\r\n    this.examService\r\n      .getAllExamType<IExamTypeModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.examTypes = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectExamType() {\r\n    //  console.log('exam type: ', this.FormCtrl.examTypeId?.value);\r\n\r\n    if (this.FormCtrl.examTypeId?.value == 1) {\r\n      this.FormCtrl.unitId?.enable();\r\n      this.FormCtrl.lessionId?.enable();\r\n    } else if (this.FormCtrl.examTypeId?.value == 2) {\r\n      this.FormCtrl.unitId?.enable();\r\n      this.FormCtrl.lessionId?.disable();\r\n    } else {\r\n      this.FormCtrl.unitId?.disable();\r\n      this.FormCtrl.lessionId?.disable();\r\n    }\r\n  }\r\n\r\n  getAllCountieres() {\r\n    this.examService\r\n      .getAllCountries<ICountrieDropModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //console.log(\"COUNTIRES: \", response);\r\n          this.countries = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectCountry() {\r\n    // this.FormCtrl.stageId?.setValue(\"\");\r\n    // this.FormCtrl.educationYearId?.setValue(\"\");\r\n    // this.FormCtrl.subjectId?.setValue(\"\");\r\n    // this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.countryId?.value) {\r\n      //   console.log('SELECTED country: ', this.FormCtrl.countryId?.value);\r\n      this.examService\r\n        .getAllStages<IStageDropModel[]>(this.FormCtrl.countryId?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.stages = response;\r\n            //console.log(\"STAGES:\", response);\r\n            this.FormCtrl.stageId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.stageId?.disable();\r\n      this.FormCtrl.educationYearId?.disable();\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectStages() {\r\n    // console.log('onSelectStages: ', this.FormCtrl.stageId?.value);\r\n    this.FormCtrl.educationYearId?.setValue(\"\");\r\n    this.FormCtrl.subjectId?.setValue(\"\");\r\n    this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.stageId?.value) {\r\n      this.examService\r\n        .getAllEducationYears<IEducationYearDropModel[]>(\r\n          this.FormCtrl.stageId?.value\r\n        )\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.educationYears = response;\r\n            //console.log(\"YEARS:\", response);\r\n            this.FormCtrl.educationYearId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.educationYearId?.disable();\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectEducationYears() {\r\n    //   console.log('onSelectEducationYears: ', this.FormCtrl.educationYearId?.value);\r\n    this.FormCtrl.subjectId?.setValue(\"\");\r\n    this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.educationYearId?.value) {\r\n      this.examService\r\n        .getAllSubjects<ISubjectDropModel[]>(\r\n          this.FormCtrl.educationYearId?.value\r\n        )\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.subjects = response;\r\n            //console.log(\"SUBJECTS:\", response);\r\n            this.FormCtrl.subjectId?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.FormCtrl.subjectId?.disable();\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectSubjects() {\r\n    // console.log('onSelectSubjects: ', this.FormCtrl.subjectId?.value);\r\n    //   this.FormCtrl.teacherUserId?.setValue(\"\");\r\n    if (this.FormCtrl.subjectId?.value) {\r\n      forkJoin([\r\n        this.generalService.getTeacherBySubjectAndEduCompId(\r\n          this.EduCompId,\r\n          this.FormCtrl.subjectId?.value\r\n        ),\r\n        this.examService.getAllUnitsBySublectId<any[]>(\r\n          this.FormCtrl.subjectId?.value\r\n        ),\r\n      ]).subscribe((results: any) => {\r\n        this.teachers = results[0].teachers;\r\n        this.units = results[1];\r\n        this.FormCtrl.teacherUserId?.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.teacherUserId?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectUnit() {\r\n    if (this.FormCtrl.unitId?.value != null) {\r\n      this.examService\r\n        .getAllLessonsByUnitId<any>(this.FormCtrl.unitId?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.lessions = response;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  examTypeValidator() {\r\n    let examTypeId = this.FormCtrl.examTypeId?.value;\r\n    if (examTypeId == 1) {\r\n      this.FormCtrl.unitId?.setValidators([Validators.required]);\r\n      this.FormCtrl.lessionId?.setValidators([Validators.required]);\r\n    } else if (examTypeId == 2) {\r\n      this.FormCtrl.unitId?.setValidators([Validators.required]);\r\n      this.FormCtrl.lessionId?.clearValidators();\r\n      this.FormCtrl.lessionId?.reset();\r\n    } else {\r\n      this.FormCtrl.unitId?.clearValidators();\r\n      this.FormCtrl.unitId?.reset();\r\n      this.FormCtrl.lessionId?.clearValidators();\r\n      this.FormCtrl.lessionId?.reset();\r\n    }\r\n    this.FormCtrl.unitId?.updateValueAndValidity();\r\n    this.FormCtrl.lessionId?.updateValueAndValidity();\r\n  }\r\n\r\n  RepeatableValidator() {\r\n    let CustomDiscount = this.FormCtrl.hasCustomDiscount?.value;\r\n    if (CustomDiscount == true) {\r\n      this.FormCtrl.repeatNumbers?.setValidators([Validators.required]);\r\n      this.FormCtrl.repeatingPrice?.setValidators([Validators.required]);\r\n    } else if (CustomDiscount == false) {\r\n      this.FormCtrl.repeatNumbers?.clearValidators();\r\n      this.FormCtrl.repeatingPrice?.clearValidators();\r\n      this.FormCtrl.repeatNumbers?.reset();\r\n      this.FormCtrl.repeatingPrice?.reset();\r\n    }\r\n    this.FormCtrl.repeatNumbers?.updateValueAndValidity();\r\n    this.FormCtrl.repeatingPrice?.updateValueAndValidity();\r\n  }\r\n\r\n  isMandatoryRadioList: RadioButtonModel[] = [\r\n    {\r\n      label: \"labels.Yes\",\r\n      value: true,\r\n    },\r\n    {\r\n      label: \"labels.No\",\r\n      value: false,\r\n    },\r\n  ];\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- Add Exam -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card> -->\r\n\r\n<h1 mat-dialog-title class=\"mb-1\">\r\n  <span *ngIf=\"examId == 0 && type == 3\">\r\n    {{ \"Navbar.newexam\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"examId == 0 && type == 5\">\r\n    {{ \"Navbar.newesurvay\" | translate }}\r\n  </span>\r\n  <span *ngIf=\"examId > 0\">\r\n    <span *ngIf=\"type == 3\">{{ \"labels.EditExam\" | translate }}</span>\r\n    <span *ngIf=\"type == 5\">{{ \"labels.EditSurvey\" | translate }}</span>\r\n\r\n    - {{ exam_ar_name }}\r\n  </span>\r\n  <!-- <a\r\n    mat-raised-button\r\n    routerLink=\"../\"\r\n    [queryParams]=\"{\r\n      functionId: functionId,\r\n      parentId: parentId\r\n    }\"\r\n    class=\"btn btn-warning bg-light-warning float-right\"\r\n  >\r\n    {{ \"General.Back\" | translate }}\r\n  </a> -->\r\n</h1>\r\n\r\n<mat-dialog-content>\r\n  <mat-tab-group mat-align-tabs=\"start\" class=\"no-margin-tab\">\r\n    <mat-tab label=\"{{ 'labels.Step1' | translate }}\">\r\n      <mat-card-title>{{ \"labels.MainData\" | translate }}</mat-card-title>\r\n\r\n      <form [formGroup]=\"myForm\">\r\n        <div class=\"row\">\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Country\" | translate }} </mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectCountry()\"\r\n                formControlName=\"countryId\"\r\n              >\r\n                <mat-option value=\"\">\r\n                  {{ \"labels.Country\" | translate }}\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let country of countries\"\r\n                  [value]=\"country.country_id\"\r\n                >\r\n                  {{ country.country_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.countryId?.invalid &&\r\n                  (FormCtrl.countryId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"myForm.FormCtrl.countryId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <!--\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Navbar.EducationalStage\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectStages()\"\r\n                formControlName=\"stageId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Navbar.EducationalStage\" | translate\r\n                }}</mat-option>\r\n                <mat-option *ngFor=\"let stage of stages\" [value]=\"stage.id\">\r\n                  {{ stage.stage_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.stageId?.invalid && (FormCtrl.stageId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"myForm.FormCtrl.stageId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.EducationalYear\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectEducationYears()\"\r\n                formControlName=\"educationYearId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"labels.EducationalYear\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let year of educationYears\"\r\n                  [value]=\"year.id\"\r\n                >\r\n                  {{ year.Educational_year_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.educationYearId?.invalid &&\r\n                  (FormCtrl.educationYearId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.educationYearId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.Subjects\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectSubjects()\"\r\n                formControlName=\"subjectId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Material.Subjects\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let sub of subjects\"\r\n                  [value]=\"sub.subject_id\"\r\n                >\r\n                  {{ sub.subject_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.subjectId?.invalid &&\r\n                  (FormCtrl.subjectId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.subjectId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <!--\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.Teacher\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectSubjects()\"\r\n                formControlName=\"teacherUserId\"\r\n              >\r\n                <mat-option>\r\n                  {{ \"Material.Teacher\" | translate }}\r\n                </mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let teacher of teachers\"\r\n                  [value]=\"teacher.teacherUserId\"\r\n                >\r\n                  {{ teacher.teacher_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.teacherUserId?.invalid &&\r\n                  (FormCtrl.teacherUserId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.teacherUserId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"Material.ExamType\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectExamType(); examTypeValidator()\"\r\n                formControlName=\"examTypeId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"Material.ExamType\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let type of examTypes\"\r\n                  [value]=\"type.exam_type_id\"\r\n                >\r\n                  {{ type.exam_ar_type_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.examTypeId?.invalid &&\r\n                  (FormCtrl.examTypeId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.examTypeId?.errors?.required\">\r\n                  {{ \"labels.MustChoosevalue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n              <mat-select\r\n                (selectionChange)=\"onSelectUnit()\"\r\n                formControlName=\"unitId\"\r\n              >\r\n                <mat-option value=\"\">{{\r\n                  \"labels.Unit\" | translate\r\n                }}</mat-option>\r\n                <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n                  {{ unit.unit_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.unitId?.invalid && (FormCtrl.unitId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.unitId?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n              <mat-select formControlName=\"lessionId\">\r\n                <mat-option value=\"\">{{\r\n                  \"labels.Lesson\" | translate\r\n                }}</mat-option>\r\n                <mat-option\r\n                  [value]=\"lession.id\"\r\n                  *ngFor=\"let lession of lessions\"\r\n                >\r\n                  {{ lession.lesson_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.lessionId?.invalid &&\r\n                  (FormCtrl.lessionId?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.lessionId?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.examName\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ExamNm\"\r\n              type=\"text\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.examHours\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ExamHours\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.examMinutes\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ExamMinute\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.ExamPrice\" | translate }} </mat-label>\r\n              <input matInput type=\"number\" formControlName=\"examPrice\" />\r\n              <mat-hint\r\n                class=\"danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.examPrice?.invalid &&\r\n                  (FormCtrl.examPrice?.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.examPrice?.errors?.required\">\r\n                  {{ \"labels.mustEnterValue\" | translate }}\r\n                </span>\r\n              </mat-hint>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </mat-label>\r\n              <input matInput type=\"number\" formControlName=\"discount\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>\r\n                {{ \"labels.DiscountType\" | translate }}\r\n              </mat-label>\r\n              <mat-select formControlName=\"discountType\">\r\n                <mat-option value=\"\"\r\n                  >{{ \"General.Choose\" | translate }}\r\n                </mat-option>\r\n                <mat-option value=\"1\">عام</mat-option>\r\n                <mat-option value=\"2\">خاص</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-datepicker\r\n              [control]=\"FormCtrl.fromDate\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.FromDate\"\r\n            ></app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-datepicker\r\n              [control]=\"FormCtrl.toDate\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ToDate\"\r\n            ></app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.formHour\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.FromTime\"\r\n              type=\"time\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.toHours\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.ToTime\"\r\n              type=\"time\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <!-- resualtDate -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label> {{ \"labels.ExamResultDate\" | translate }}</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"resualtDate\"\r\n                formControlName=\"resualtDate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"resualtDate\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #resualtDate></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-3 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.examResultTime\" | translate }}</mat-label>\r\n              <input matInput type=\"time\" formControlName=\"resualtTime\" />\r\n            </mat-form-field>\r\n          </div> -->\r\n\r\n          <!-- can Sell Individually -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.SellExamOnly\" | translate }}\r\n            </mat-label>\r\n            <mat-radio-group formControlName=\"canSellIndividually\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n          <!-- isRepeatable -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.RepeatedExam\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"isRepeatable\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button\r\n                  [value]=\"false\"\r\n                  (change)=\"RepeatableValidator()\"\r\n                >\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button\r\n                  [value]=\"true\"\r\n                  (change)=\"RepeatableValidator()\"\r\n                >\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n          <!-- send WhatsApp Msg -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"sendWhatsAppMsg\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n          <!-- Custom Discount -->\r\n          <!-- <div class=\"col-md-3 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.CustomDiscount\" | translate }}\r\n            </mat-label>\r\n\r\n            <mat-radio-group formControlName=\"hasCustomDiscount\" class=\"row\">\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"false\">\r\n                  {{ \"labels.No\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n              <div class=\"col-md-3 col-12\">\r\n                <mat-radio-button [value]=\"true\">\r\n                  {{ \"labels.Yes\" | translate }}\r\n                </mat-radio-button>\r\n              </div>\r\n            </mat-radio-group>\r\n          </div> -->\r\n\r\n          <!-- <ng-container *ngIf=\"FormCtrl.isRepeatable?.value == true\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.repeatNumbers\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"repeatNumbers\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.repeatNumbers?.invalid &&\r\n                    (FormCtrl.repeatNumbers?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.repeatNumbers?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.repeatNumbers?.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.repeatingPrice\" | translate }}</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  formControlName=\"repeatingPrice\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.repeatingPrice?.invalid &&\r\n                    (FormCtrl.repeatingPrice?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.repeatingPrice?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrl.repeatingPrice?.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </ng-container> -->\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.degreeToPass\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.percentageToPass\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"FormCtrl.order\"\r\n              [submitted]=\"submitted\"\r\n              label=\"labels.Order\"\r\n              type=\"number\"\r\n            ></app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-radio-button\r\n              [control]=\"FormCtrl.isMandatory\"\r\n              [radioList]=\"isMandatoryRadioList\"\r\n              label=\"labels.IsMandatory\"\r\n            ></app-radio-button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          (click)=\"onCloseDialog()\"\r\n          class=\"btn btn-warning bg-light-warning\"\r\n        >\r\n          {{ \"General.Close\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          (click)=\"onSubmit()\"\r\n          mat-raised-button\r\n          cdkFocusInitial\r\n          class=\"btn btn-info bg-light-info\"\r\n        >\r\n          <i class=\"fa fa-plus\" *ngIf=\"examId == 0\"></i>\r\n          {{ (examId == 0 ? \"General.Add\" : \"General.Update\") | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-tab>\r\n\r\n    <!-- add-questions -->\r\n    <mat-tab label=\"{{ 'labels.Step2' | translate }}\">\r\n      <app-add-edit-sub-question\r\n        [examId]=\"examId\"\r\n        [examGroupHeaderId]=\"GroupsHeadersList[0]?.id || 0\"\r\n        [subjectId]=\"subId\"\r\n        (closeDialog)=\"onCloseDialog()\"\r\n      ></app-add-edit-sub-question>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</mat-dialog-content>\r\n\r\n<!-- </mat-card>\r\n  </div>\r\n</div> -->\r\n\r\n<!-- START: ADD/EDIT EXAM GROUP AND HEADER -->\r\n<!-- <span>{{ \"labels.addSurveyGroups\" | translate }}</span> -->\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>{{ \"labels.addGxamGroups\" | translate }}</span>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"GroupHeadersForm\" class=\"form-horizontal\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.َQuestionNumber\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examGroup\"\r\n                  [matAutocomplete]=\"autoExamGroup\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamGroup=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamGroups | async\"\r\n                    [value]=\"val.question_group_ar_name\"\r\n                  >\r\n                    {{ val.question_group_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.examGroup?.invalid &&\r\n                    (FormCtrl.examGroup?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.examGroup?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.QuestionHeader\" | translate }}</mat-label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examHeader\"\r\n                  [matAutocomplete]=\"autoExamHeader\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamHeader=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamHeaders | async\"\r\n                    [value]=\"val.question_head_ar_name\"\r\n                  >\r\n                    {{ val.question_head_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrl.examHeader?.invalid &&\r\n                    (FormCtrl.examHeader?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrl.examHeader?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{\r\n                  \"labels.َQuestionContent\" | translate\r\n                }}</mat-label>\r\n                <textarea\r\n                  matInput\r\n                  formControlName=\"examContent\"\r\n                  cols=\"20\"\r\n                ></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"examId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"\r\n            GroupsHeadersList.length > 0 && !editGroupHeaderMode && examId > 0\r\n          \"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onAddExamGroupHeader()\"\r\n        >\r\n          {{ \"labels.AddQuestion\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"editGroupHeaderMode\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"editExamGroupHead()\"\r\n        >\r\n          {{ \"labels.UpdateQuestion\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n\r\n<!-- <div class=\"row\" *ngIf=\"GroupsHeadersList.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.QuestionsGroup\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"mat-elevation-z8 f-w\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"#\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n                  <td mat-cell *matCellDef=\"let i = index\">\r\n                    {{ i + 1 }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"questionNumber\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionNumber\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionNumber }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"questionType\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.QuestionHeader\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionType }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"question_title\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionContent\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.question_title }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    actions\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let groupHeader\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'EditGroup'\"\r\n                        (click)=\"getExamHeadById(groupHeader)\"\r\n                        class=\"success p-0\"\r\n                        matTooltip=\"Edit Group\"\r\n                      >\r\n                        <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'DeleteGroup'\"\r\n                        (click)=\"openDeleateDialog(groupHeader)\"\r\n                        class=\"danger p-0\"\r\n                        matTooltip=\"Delete Group\"\r\n                      >\r\n                        <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'addSubQuestion'\"\r\n                        (click)=\"addSubQuestionDialog(groupHeader)\"\r\n                        class=\"info p-0\"\r\n                        matTooltip=\"Add sub question\"\r\n                      >\r\n                        <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                  mat-row\r\n                  *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                  <td class=\"mat-cell\" colspan=\"4\">\r\n                    No data matching the filter \"{{ input.value }}\"\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n\r\n              <mat-paginator\r\n                [pageSizeOptions]=\"[10]\"\r\n                showFirstLastButtons\r\n                aria-label=\"Select page of users\"\r\n              >\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div> -->\r\n","import { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  IQuestionForGridModel,\r\n  examQuestionImage,\r\n  IAddEditQuestionTextModel,\r\n  IMcqChoices,\r\n  IAddEditQuestionMcqModel,\r\n  IAddedTextExamResponse,\r\n  IQuestionDetailsForEditModel,\r\n} from \"app/admin/models/admin/AddEditQuestionModel\";\r\nimport { IUnitModel, ILessionModel } from \"app/admin/models/admin/exam\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-edit-sub-question\",\r\n  templateUrl: \"./add-sub-question.component.html\",\r\n  styleUrls: [\"./add-sub-question.component.scss\"],\r\n})\r\nexport class AddSubQuestionComponent implements OnInit {\r\n  // examId: number;\r\n  // examGroupHeaderId: number;\r\n  // subjectId: number;\r\n  @Input(\"examId\") examId: number;\r\n  @Input(\"examGroupHeaderId\") examGroupHeaderId: number = 0;\r\n  @Input(\"subjectId\") subjectId: number = 0;\r\n  @Output(\"closeDialog\") closeDialog = new EventEmitter();\r\n\r\n  unitId: number = 0;\r\n  lessonId: number = 0;\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n\r\n  questionsInGrid: IQuestionForGridModel[] = [];\r\n\r\n  questionId: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  educationCompanyId: any;\r\n  oneIsCorrect: boolean = false;\r\n  twoIsCorrect: boolean = false;\r\n  threeIsCorrect: boolean = false;\r\n  fourIsCorrect: boolean = false;\r\n  questionFile: any = null;\r\n  answerOneFile: any = null;\r\n  answerTwoFile: any = null;\r\n  answerThreeFile: any = null;\r\n  answerFourFile: any = null;\r\n  perfectAnswerAttach_preview: any = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private examService: ExamsService,\r\n    public authserv: AuthService,\r\n    public toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    public uploadFileService: UploadFileService // @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    // this.examId = data.examId;\r\n    // this.examGroupHeaderId = data.examGroupHeaderId;\r\n    // this.subjectId = data.subjectId;\r\n    if (this.examGroupHeaderId != 0) this.getAllQuestionsByHeadId();\r\n    // if (this.subjectId != 0) this.getAllUnitsBySublectId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      mainQuestion: [null],\r\n      questionTypeId: [2, Validators.required],\r\n      questionImage: [null],\r\n      remove_image: [false],\r\n      // unitId: [null],\r\n      // lessionId: [null],\r\n      exam_question_text: [null],\r\n      questionPerfectAnswer: [null],\r\n      perfect_answer_attach: [null],\r\n      questionMark: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      answerOneId: [null],\r\n      answerOne: [null],\r\n      answerOneIsCorrect: [],\r\n      answerOneImage: [null],\r\n      answerTwoId: [null],\r\n      answerTwo: [null],\r\n      answerTwoIsCorrect: [],\r\n      answerTwoImage: [null],\r\n      answerThreeId: [null],\r\n      answerThree: [null],\r\n      answerThreeIsCorrect: [],\r\n      answerThreeImage: [null],\r\n      answerFourId: [null],\r\n      answerFour: [null],\r\n      answerFourIsCorrect: [],\r\n      answerFourImage: [null],\r\n      answerOneRemove_image: [false],\r\n      answerTwoRemove_image: [false],\r\n      answerThreeRemove_image: [false],\r\n      answerFourRemove_image: [false],\r\n    });\r\n    //remove_image: d.remove_image,\r\n    this.educationCompanyId = this.authserv.getEduCompId();\r\n    this.questionTypeValidation();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.examGroupHeaderId?.currentValue > 0)\r\n      this.getAllQuestionsByHeadId();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //get all question for this header\r\n  getAllQuestionsByHeadId() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getAllQuestionsByHeadId<IQuestionForGridModel[]>(this.examGroupHeaderId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"getAllQuestionsByHeadId\", response);\r\n          this.questionsInGrid = [];\r\n          this.questionsInGrid = response;\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  questionTypeValidation() {\r\n    if (this.FormCtrl.questionTypeId?.value === 1) {\r\n      // console.log(\"PerfectAnswer is required\");\r\n      // this.FormCtrl.questionPerfectAnswer?.setValidators(Validators.required);\r\n    } else {\r\n      // console.log(\"PerfectAnswer is not required\");\r\n      this.FormCtrl.questionPerfectAnswer?.clearAsyncValidators();\r\n      this.FormCtrl.questionPerfectAnswer?.reset();\r\n    }\r\n    this.FormCtrl.questionPerfectAnswer?.updateValueAndValidity();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // if (this.FormCtrl.questionTypeId?.value == 1) {\r\n    //   // مقالي\r\n\r\n    //   let image: examQuestionImage = this.questionFile || null;\r\n    //   // let image: examQuestionImage = this.questionFile || null {\r\n    //   //   FileAsBase64: this.questionFile.FileAsBase64 || null,\r\n    //   //   name: this.questionFile.name,\r\n    //   //   size: this.questionFile.size,\r\n    //   //   type: this.questionFile.type,\r\n    //   // };\r\n    //   let questionImagePath = this.FormCtrl.questionImage;\r\n\r\n    //   let toAddEdit: IAddEditQuestionTextModel = {\r\n    //     exam_question_main_question: this.FormCtrl.mainQuestion?.value,\r\n    //     exam_question_mark: this.FormCtrl.questionMark?.value,\r\n    //     exam_question_perfect_answer:\r\n    //       this.FormCtrl.questionPerfectAnswer?.value,\r\n    //     //   perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n    //     exam_question_text: this.FormCtrl.exam_question_text?.value,\r\n    //     exam_question_type_id: this.FormCtrl.questionTypeId?.value,\r\n    //     exam_selected_question_head_id: this.examGroupHeaderId,\r\n    //     exam_selected_subject_id: this.subjectId,\r\n    //     exam_question_image: image,\r\n    //     remove_image: this.FormCtrl.remove_image?.value,\r\n    //     exam_question_id: this.questionId,\r\n    //   };\r\n    //   console.log(\"toAddEdit_Text_question=> \", toAddEdit);\r\n    //   if (\r\n    //     !this.FormCtrl.exam_question_text?.value &&\r\n    //     image == null &&\r\n    //     questionImagePath == null\r\n    //   ) {\r\n    //     this.toastr.warning(\"Exam.QuestionMsgError\");\r\n    //     return;\r\n    //   } else {\r\n    //     if (this.questionId > 0) {\r\n    //       this.editTextQuestion(toAddEdit);\r\n    //     } else {\r\n    //       this.addTextQuestion(toAddEdit);\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    // MCQ\r\n    if (this.FormCtrl.questionTypeId?.value == 2) {\r\n      let image: examQuestionImage = this.questionFile || null;\r\n      let questionImagePath = this.FormCtrl.questionImage.value;\r\n      // let image: examQuestionImage = {\r\n      //   FileAsBase64: this.questionFile.FileAsBase64 || null,\r\n      //   name: this.questionFile.name,\r\n      //   size: this.questionFile.size,\r\n      //   type: this.questionFile.type,\r\n      // };\r\n\r\n      let imageOne: examQuestionImage = this.answerOneFile || null;\r\n      // let imageOne: examQuestionImage = {\r\n      //   FileAsBase64: this.answerOneFile.FileAsBase64 || null,\r\n      //   name: this.answerOneFile.name,\r\n      //   size: this.answerOneFile.size,\r\n      //   type: this.answerOneFile.type,\r\n      // };\r\n\r\n      let choice1: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerOneId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerOne?.value,\r\n        is_correct:\r\n          this.FormCtrl.answerOneIsCorrect.value === 0 ||\r\n          this.FormCtrl.answerOneIsCorrect.value\r\n            ? true\r\n            : false,\r\n        choice_image: imageOne,\r\n        remove_image: this.FormCtrl.answerOneRemove_image?.value,\r\n        path: this.FormCtrl.answerOneImage?.value,\r\n      };\r\n\r\n      let imageTwo: examQuestionImage = this.answerTwoFile || null;\r\n      // let imageTwo: examQuestionImage = {\r\n      //   FileAsBase64: this.answerTwoFile.FileAsBase64 || null,\r\n      //   name: this.answerTwoFile.name,\r\n      //   size: this.answerTwoFile.size,\r\n      //   type: this.answerTwoFile.type,\r\n      // };\r\n\r\n      let choice2: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerTwoId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerTwo?.value,\r\n        is_correct: this.FormCtrl.answerTwoIsCorrect?.value ? true : false,\r\n        choice_image: imageTwo,\r\n        remove_image: this.FormCtrl.answerTwoRemove_image?.value,\r\n        path: this.FormCtrl.answerTwoImage?.value,\r\n      };\r\n\r\n      let imageThree: examQuestionImage = this.answerThreeFile || null;\r\n      // let imageThree: examQuestionImage = {\r\n      //   FileAsBase64: this.answerThreeFile.FileAsBase64 || null,\r\n      //   name: this.answerThreeFile.name,\r\n      //   size: this.answerThreeFile.size,\r\n      //   type: this.answerThreeFile.type,\r\n      // };\r\n\r\n      let choice3: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerThreeId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerThree?.value,\r\n        is_correct: this.FormCtrl.answerThreeIsCorrect?.value ? true : false,\r\n        choice_image: imageThree,\r\n        remove_image: this.FormCtrl.answerThreeRemove_image?.value,\r\n        path: this.FormCtrl.answerThreeImage?.value,\r\n      };\r\n\r\n      let imageFour: examQuestionImage = this.answerFourFile || null;\r\n      // let imageFour: examQuestionImage = {\r\n      //   FileAsBase64: this.answerFourFile.FileAsBase64 || null,\r\n      //   name: this.answerFourFile.name,\r\n      //   size: this.answerFourFile.size,\r\n      //   type: this.answerFourFile.type,\r\n      // };\r\n\r\n      let choice4: IMcqChoices = {\r\n        choice_id: this.FormCtrl.answerFourId?.value ?? 0,\r\n        choice_text: this.FormCtrl.answerFour?.value,\r\n        is_correct: this.FormCtrl.answerFourIsCorrect?.value ? true : false,\r\n        choice_image: imageFour,\r\n        remove_image: this.FormCtrl.answerFourRemove_image?.value,\r\n        path: this.FormCtrl.answerFourImage?.value,\r\n      };\r\n\r\n      let toAddEdit: IAddEditQuestionMcqModel = {\r\n        exam_question_main_question: this.FormCtrl.mainQuestion?.value,\r\n        exam_question_mark: this.FormCtrl.questionMark?.value,\r\n        exam_question_perfect_answer:\r\n          this.FormCtrl.questionPerfectAnswer?.value,\r\n        //perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n        exam_question_text: this.FormCtrl.exam_question_text?.value,\r\n        exam_question_type_id: this.FormCtrl.questionTypeId?.value,\r\n        exam_selected_question_head_id: this.examGroupHeaderId,\r\n        exam_selected_subject_id: this.subjectId,\r\n        exam_question_image: image,\r\n        remove_image: this.FormCtrl.remove_image?.value,\r\n        exam_question_id: this.questionId,\r\n        mcq_choices: [choice1, choice2, choice3, choice4],\r\n      };\r\n\r\n      console.log(\"toAddEdit_mcq_question=> \", toAddEdit);\r\n      // if no question Text or img\r\n      if (\r\n        toAddEdit.exam_question_text === null &&\r\n        toAddEdit.exam_question_image === null &&\r\n        questionImagePath === null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if no correct answer\r\n      if (\r\n        !choice1.is_correct &&\r\n        !choice2.is_correct &&\r\n        !choice3.is_correct &&\r\n        !choice4.is_correct\r\n      ) {\r\n        this.toastr.warning(\"Exam.MustChooseCorrectAnswer\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 1 no text or img\r\n      if (\r\n        choice1.choice_text === null &&\r\n        choice1.choice_image === null &&\r\n        choice1.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionOneMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 2 no text or img\r\n      if (\r\n        choice2.choice_text === null &&\r\n        choice2.choice_image === null &&\r\n        choice2.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionTwoMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 3 no text or img\r\n      if (\r\n        choice3.choice_text === null &&\r\n        choice3.choice_image === null &&\r\n        choice3.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionThreeMsgError\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 4 no text or img\r\n      if (\r\n        choice4.choice_text === null &&\r\n        choice4.choice_image === null &&\r\n        choice4.path == null\r\n      ) {\r\n        this.toastr.warning(\"Exam.QuestionFourMsgError\");\r\n        return;\r\n      } else {\r\n        if (this.questionId > 0) {\r\n          this.editMcqQuestion(toAddEdit);\r\n        } else {\r\n          this.addMcqQuestion(toAddEdit);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // addTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n  //   //  console.log('on add ', toAddEdit);\r\n  //   this.spinner.show();\r\n  //   this.examService\r\n  //     .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n  //     .subscribe((response: any) => {\r\n  //       // console.log('respooooooonse', response);\r\n\r\n  //       if (response.returnValue == 200) {\r\n  //         this.getAllQuestionsByHeadId();\r\n\r\n  //         this.FormCtrl.mainQuestion?.setValue(null);\r\n  //         this.FormCtrl.questionMark?.setValue(null);\r\n  //         this.FormCtrl.questionTypeId?.setValue(null);\r\n  //         this.FormCtrl.questionImage?.setValue(null);\r\n  //         this.FormCtrl.exam_question_text?.setValue(null);\r\n  //         this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n  //         this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n  //         this.FormCtrl.unitId?.setValue(null);\r\n  //         this.FormCtrl.lessonId?.setValue(null);\r\n  //         this.myForm.reset();\r\n  //         this.resetFileInputs();\r\n  //       } else {\r\n  //         this.toastr.error(response.returnString);\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  // editTextQuestion(toAddEdit: IAddEditQuestionTextModel) {\r\n  //   //  console.log('tooEdiiiiiiit', toAddEdit);\r\n  //   this.spinner.show();\r\n  //   this.examService\r\n  //     .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n  //     .subscribe((response) => {\r\n  //       //  console.log('ediiiiiitResponse', response);\r\n  //       if (response) {\r\n  //         let toEdit = this.questionsInGrid.find(\r\n  //           (q: any) => q.Id == this.questionId\r\n  //         );\r\n\r\n  //         if (toEdit) {\r\n  //           toEdit.Text = this.FormCtrl.exam_question_text?.value;\r\n  //           toEdit.QuestionTypeAr = \"مقال\";\r\n  //           toEdit.Image = this.FormCtrl.questionImage?.value;\r\n  //         }\r\n\r\n  //         this.FormCtrl.mainQuestion?.setValue(null);\r\n  //         this.FormCtrl.questionMark?.setValue(null);\r\n  //         this.FormCtrl.questionTypeId?.setValue(null);\r\n  //         this.FormCtrl.questionImage?.setValue(null);\r\n  //         this.FormCtrl.exam_question_text?.setValue(null);\r\n  //         this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n  //         this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n\r\n  //         this.FormCtrl.unitId?.setValue(null);\r\n  //         this.FormCtrl.lessonId?.setValue(null);\r\n\r\n  //         this.myForm.reset();\r\n  //         this.resetFileInputs();\r\n\r\n  //         this.questionId = 0; // return to add mode\r\n  //       }\r\n  //       this.spinner.hide();\r\n  //     });\r\n  // }\r\n\r\n  addMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    // console.log('on add ', toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addQuestion<IAddedTextExamResponse>(toAddEdit)\r\n        .subscribe((response: any) => {\r\n          // console.log('respooooooonse', response);\r\n\r\n          if (response.returnValue == 200) {\r\n            this.getAllQuestionsByHeadId();\r\n\r\n            this.FormCtrl.mainQuestion?.setValue(null);\r\n            this.FormCtrl.questionMark?.setValue(null);\r\n            this.FormCtrl.questionTypeId?.setValue(null);\r\n            this.FormCtrl.questionImage?.setValue(null);\r\n            this.FormCtrl.exam_question_text?.setValue(null);\r\n            this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n            this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n            // this.FormCtrl.unitId?.setValue(null);\r\n            // this.FormCtrl.lessonId?.setValue(null);\r\n\r\n            this.myForm.reset();\r\n            // set type msq\r\n            this.FormCtrl.questionTypeId.setValue(2);\r\n            this.resetFileInputs();\r\n            this.submitted = false;\r\n            this.toastr.success(\"General.AddSuccessfully\");\r\n          } else {\r\n            this.toastr.error(response.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  editMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    //console.log(\"editMcqQuestion\", toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .editQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n        .subscribe((response) => {\r\n          //  console.log(\"editMcqQuestion\", response);\r\n          if (response) {\r\n            this.getAllQuestionsByHeadId();\r\n            this.FormCtrl.mainQuestion?.setValue(null);\r\n            this.FormCtrl.questionMark?.setValue(null);\r\n            this.FormCtrl.questionTypeId?.setValue(null);\r\n            this.FormCtrl.questionImage?.setValue(null);\r\n            this.FormCtrl.exam_question_text?.setValue(null);\r\n            this.FormCtrl.questionPerfectAnswer?.setValue(null);\r\n            this.FormCtrl.perfect_answer_attach?.setValue(null);\r\n            this.oneIsCorrect = false;\r\n            this.twoIsCorrect = false;\r\n            this.threeIsCorrect = false;\r\n            this.fourIsCorrect = false;\r\n            // this.FormCtrl.unitId?.setValue(null);\r\n            // this.FormCtrl.lessonId?.setValue(null);\r\n\r\n            this.myForm.reset();\r\n            // set type msq\r\n            this.FormCtrl.questionTypeId.setValue(2);\r\n            this.resetFileInputs();\r\n            this.toastr.success(\"General.UpdateSuccessfully\");\r\n            this.submitted = false;\r\n\r\n            this.questionId = 0; // return to add mode\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getQuestionForEditByID(questionId: number) {\r\n    //  console.log('questionIddddddddddddddd', questionId);\r\n    this.spinner.show();\r\n    this.examService\r\n      .getQuestionForEditByID<IQuestionDetailsForEditModel>(questionId)\r\n      .subscribe((response) => {\r\n        console.log(\"getQuestionForEditByID\", response);\r\n        if (response) {\r\n          this.FormCtrl.mainQuestion?.setValue(response.main_question);\r\n          this.FormCtrl.questionMark?.setValue(response.mark);\r\n          this.FormCtrl.exam_question_text?.setValue(response.question_text);\r\n          this.FormCtrl.questionImage?.setValue(\r\n            response?.attach_path != null\r\n              ? this.uploadFileService.previewPicture(response?.attach_path)\r\n              : null\r\n          );\r\n          // this.questionFile.FileAsBase64 = response.attach_path;\r\n          this.FormCtrl.questionTypeId?.setValue(response.question_type_id);\r\n          this.questionId = questionId;\r\n\r\n          // this.FormCtrl.questionPerfectAnswer?.setValue(\r\n          //   response.perfect_answer\r\n          // );\r\n          // this.FormCtrl.perfect_answer_attach?.setValue(\r\n          //   `mozakretyapi${response?.prefect_answer_attach_path}`\r\n          // );\r\n\r\n          if (response.question_type_id == 2) {\r\n            this.FormCtrl.answerOneId?.setValue(response.MCQ_Choices[0]?.Id);\r\n            this.FormCtrl.answerOne?.setValue(response.MCQ_Choices[0]?.Text);\r\n            this.FormCtrl.answerOneImage?.setValue(\r\n              response?.MCQ_Choices[0]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[0]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            // this.FormCtrl.answerOneImage?.setValue(response.MCQ_Choices[0].Image);\r\n            //  this.answerOneFile.FileAsBase64 = response.MCQ_Choices[0].Image;\r\n            this.FormCtrl.answerOneIsCorrect?.setValue(\r\n              response.MCQ_Choices[0]?.Is_Correct\r\n            );\r\n            this.oneIsCorrect = response.MCQ_Choices[0]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerTwoId?.setValue(response.MCQ_Choices[1]?.Id);\r\n            this.FormCtrl.answerTwo?.setValue(response.MCQ_Choices[1]?.Text);\r\n            this.FormCtrl.answerTwoImage?.setValue(\r\n              response?.MCQ_Choices[1]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[1]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            //  this.FormCtrl.answerTwoImage?.setValue(response.MCQ_Choices[1].Image);\r\n            // this.answerTwoFile.FileAsBase64 = response.MCQ_Choices[1].Image;\r\n            this.FormCtrl.answerTwoIsCorrect?.setValue(\r\n              response.MCQ_Choices[1]?.Is_Correct\r\n            );\r\n            this.twoIsCorrect = response.MCQ_Choices[1]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerThreeId?.setValue(response.MCQ_Choices[2]?.Id);\r\n            this.FormCtrl.answerThree?.setValue(response.MCQ_Choices[2]?.Text);\r\n            this.FormCtrl.answerThreeImage?.setValue(\r\n              response?.MCQ_Choices[2]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[2]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            // this.FormCtrl.answerThreeImage?.setValue(response.MCQ_Choices[2].Image);\r\n            //  this.answerThreeFile.FileAsBase64 = response.MCQ_Choices[2].Image;\r\n            this.FormCtrl.answerThreeIsCorrect?.setValue(\r\n              response.MCQ_Choices[2]?.Is_Correct\r\n            );\r\n            this.threeIsCorrect = response.MCQ_Choices[2]?.Is_Correct;\r\n\r\n            this.FormCtrl.answerFourId?.setValue(response.MCQ_Choices[3]?.Id);\r\n            this.FormCtrl.answerFour?.setValue(response.MCQ_Choices[3]?.Text);\r\n            this.FormCtrl.answerFourImage?.setValue(\r\n              response?.MCQ_Choices[3]?.Image != null\r\n                ? this.uploadFileService.previewPicture(\r\n                    response?.MCQ_Choices[3]?.Image\r\n                  )\r\n                : null\r\n            );\r\n            //  this.FormCtrl.answerFourImage?.setValue(response.MCQ_Choices[3].Image);\r\n            //  this.answerFourFile.FileAsBase64 = response.MCQ_Choices[3].Image;\r\n            this.FormCtrl.answerFourIsCorrect?.setValue(\r\n              response.MCQ_Choices[3]?.Is_Correct\r\n            );\r\n            this.fourIsCorrect = response.MCQ_Choices[3]?.Is_Correct;\r\n          }\r\n\r\n          // console.log(\"answer 1\", this.oneIsCorrect);\r\n          // console.log(\"answer 2\", this.twoIsCorrect);\r\n          // console.log(\"answer 3\", this.threeIsCorrect);\r\n          // console.log(\"answer 4\", this.fourIsCorrect);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamQuestion(questionId: number) {\r\n    let confirmed = confirm(\"هل انت متأكد من الحذف\");\r\n    // console.log('questionId', questionId);\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .deleteExamQuestion<any>(questionId)\r\n        .subscribe((response) => {\r\n          // console.log('deleteResponse', response);\r\n          if (response.returnString === \"Done\") {\r\n            let toDeleteIndex = this.questionsInGrid.findIndex(\r\n              (q: any) => q.Id == questionId\r\n            );\r\n            this.questionsInGrid.splice(toDeleteIndex, 1);\r\n          } else this.toastr.info(response.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  importFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.FormCtrl.questionImage.setValue(file.FileAsBase64);\r\n        this.questionFile = file;\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importOneFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerOneFile = file;\r\n        this.FormCtrl.answerOneImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importTwoFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerTwoFile = file;\r\n        this.FormCtrl.answerTwoImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importThreeFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerThreeFile = file;\r\n        this.FormCtrl.answerThreeImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  importFourFile(event: any) {\r\n    this.uploadFileService.uploadFile(event).then((file) => {\r\n      setTimeout(() => {\r\n        this.answerFourFile = file;\r\n        this.FormCtrl.answerFourImage.setValue(file.FileAsBase64);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  // perfectAnswerAttach(event: any) {\r\n  //   this.uploadFileService.uploadFile(event).then((file) => {\r\n  //     setTimeout(() => {\r\n  //       this.perfectAnswerAttach_preview = file;\r\n  //       this.FormCtrl.perfect_answer_attach.setValue(file);\r\n  //     }, 100);\r\n  //   });\r\n  // }\r\n\r\n  // getAllUnitsBySublectId() {\r\n  //   this.examService\r\n  //     .getAllUnitsBySublectId<any[]>(this.subjectId)\r\n  //     .subscribe((results) => {\r\n  //       this.units = results;\r\n  //       // console.log('this.units', this.units);\r\n  //     });\r\n  // }\r\n\r\n  // getAllLessonsByUnitId() {\r\n  //   this.examService\r\n  //     .getAllLessonsByUnitId<any>(this.FormCtrl.unitId?.value)\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         this.lessions = response;\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  onSelectCorrect(answerNumber: number) {\r\n    console.log(\"answer is Correct\", answerNumber);\r\n    if (answerNumber === 0) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(0);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 1) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(1);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 2) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(2);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(null);\r\n    }\r\n    if (answerNumber === 3) {\r\n      this.FormCtrl.answerOneIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerTwoIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerThreeIsCorrect?.setValue(null);\r\n      this.FormCtrl.answerFourIsCorrect?.setValue(3);\r\n    }\r\n  }\r\n\r\n  resetFileInputs() {\r\n    const FileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n    FileInputs.forEach((input: any) => {\r\n      input.value = null;\r\n    });\r\n    this.questionFile = null;\r\n    this.answerOneFile = null;\r\n    this.answerTwoFile = null;\r\n    this.answerThreeFile = null;\r\n    this.answerFourFile = null;\r\n  }\r\n}\r\n","<!-- <div>\r\n  <div class=\"btn btn-default\" (click)=\"onCancel()\">اغلاق</div>\r\n</div> -->\r\n<!-- <h1 mat-dialog-title>{{ \"labels.addSubQuestion\" | translate }}</h1> -->\r\n<mat-card-title>\r\n  <span>{{ \"labels.AddQuestion\" | translate }}</span>\r\n</mat-card-title>\r\n\r\n<div mat-dialog-content class=\"exam-model-box\">\r\n  <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.mainQuestion\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.mainQuestion\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!-- <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.QuestionType\" | translate }}\r\n          </mat-label>\r\n          <mat-select\r\n            formControlName=\"questionTypeId\"\r\n            (selectionChange)=\"questionTypeValidation()\"\r\n          > -->\r\n      <!-- <mat-option>\r\n              {{ \"General.Choose\" | translate }}\r\n            </mat-option> -->\r\n      <!-- <mat-option [value]=\"1\">\r\n              {{ \"labels.Article\" | translate }}\r\n            </mat-option>\r\n\r\n            <mat-option [value]=\"2\">\r\n              {{ \"labels.Mcq\" | translate }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              FormCtrl.questionTypeId?.invalid &&\r\n              (FormCtrl.questionTypeId?.touched || submitted)\r\n            \"\r\n          >\r\n            <span *ngIf=\"FormCtrl.questionTypeId?.errors?.required\">\r\n              {{ \"labels.MustChoosevalue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div> -->\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.questionMark\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.QuestionMark\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!--\r\n    <div class=\"col-md-6 col-12\" *ngIf=\"unitId == 0\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n        <mat-select\r\n          formControlName=\"unitId\"\r\n          (selectionChange)=\"getAllLessonsByUnitId()\"\r\n        >\r\n          <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n          <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n            {{ unit.unit_ar_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-12\" *ngIf=\"lessonId == 0\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n        <mat-select formControlName=\"lessionId\">\r\n          <mat-option>\r\n            {{ \"General.Choose\" | translate }}\r\n          </mat-option>\r\n          <mat-option *ngFor=\"let lesson of lessions\" [value]=\"lesson.id\">\r\n            {{ lesson.lesson_ar_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div> -->\r\n\r\n      <!-- question text -->\r\n      <div class=\"col-12\">\r\n        <app-input\r\n          [control]=\"FormCtrl.exam_question_text\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.question_ar_text\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <!-- question text Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>{{ \"labels.question_ar_text\" | translate }} </mat-label>\r\n        <quill-editor\r\n          formControlName=\"exam_question_text\"\r\n          [placeholder]=\"'labels.question_ar_text' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <div class=\"col-12\">\r\n        <!-- Question Picture -->\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.QuestionImage\" | translate }}\r\n            </mat-label>\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              name=\"questionImage\"\r\n              accept=\"image/*\"\r\n              (change)=\"importFile($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-md-8 col-12\">\r\n            <div class=\"question-img\">\r\n              <mat-checkbox\r\n                *ngIf=\"FormCtrl.questionImage.value\"\r\n                formControlName=\"remove_image\"\r\n                [value]=\"true\"\r\n                class=\"remove_image\"\r\n              >\r\n                Remove Image\r\n              </mat-checkbox>\r\n              <img class=\"img-fluid\" [src]=\"FormCtrl.questionImage?.value\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Perfect Answer  -->\r\n      <!-- <div class=\"col-12\" *ngIf=\"FormCtrl.questionTypeId?.value == 1\">\r\n        <app-input\r\n          [control]=\"FormCtrl.questionPerfectAnswer\"\r\n          [submitted]=\"submitted\"\r\n          label=\"labels.perfect_answer\"\r\n          type=\"text\"\r\n        ></app-input>\r\n      </div> -->\r\n\r\n      <!--  perfect Answer Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>\r\n          {{ \"labels.perfect_answer\" | translate }}\r\n        </mat-label>\r\n        <quill-editor\r\n          formControlName=\"questionPerfectAnswer\"\r\n          [placeholder]=\"'labels.perfect_answer' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <!-- perfect answer attach-->\r\n      <!-- <div class=\"col-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.perfectAnswerAttach\" | translate }}\r\n            </mat-label>\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              accept=\"xlsx,.xls,image/*,audio/*,.pdf\"\r\n              (change)=\"perfectAnswerAttach($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-md-8 col-12\">\r\n            <div class=\"question-img\">\r\n              <iframe\r\n                [src]=\"FormCtrl.perfect_answer_attach.value | safe\"\r\n                width=\"100%\"\r\n                class=\"border-0 img-fluid\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n\r\n    <hr />\r\n\r\n    <ng-container *ngIf=\"FormCtrl.questionTypeId?.value == 2\" class=\"row\">\r\n      <!-- answer one -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerOneIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"0\"\r\n            [checked]=\"FormCtrl.answerOneIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(0)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (1)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerOne\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer  one Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (1) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerOne\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (1)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerOneImage\"\r\n                    (change)=\"importOneFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <mat-checkbox\r\n                    *ngIf=\"FormCtrl.answerOneImage.value\"\r\n                    formControlName=\"answerOneRemove_image\"\r\n                    [value]=\"true\"\r\n                    class=\"remove_image\"\r\n                  >\r\n                    Remove Image\r\n                  </mat-checkbox>\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [src]=\"FormCtrl.answerOneImage.value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Two -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerTwoIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"1\"\r\n            [checked]=\"FormCtrl.answerTwoIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(1)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (2)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerTwo\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer two Editor-->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (2) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerTwo\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (2)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerTwoImage\"\r\n                    (change)=\"importTwoFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"FormCtrl.answerTwoImage.value\"\r\n                      formControlName=\"answerTwoRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [src]=\"FormCtrl.answerTwoImage.value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Three -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerThreeIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"2\"\r\n            [checked]=\"FormCtrl.answerThreeIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(2)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (3)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerThree\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer three  Editor-->\r\n              <!--\r\n              <mat-label> {{ \"labels.AnswerText\" | translate }} (3) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerThree\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (3)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerThreeImage\"\r\n                    (change)=\"importThreeFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"FormCtrl.answerThreeImage.value\"\r\n                      formControlName=\"answerThreeRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [src]=\"FormCtrl.answerThreeImage.value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Four -->\r\n      <mat-card>\r\n        <mat-radio-group formControlName=\"answerFourIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"3\"\r\n            [checked]=\"FormCtrl.answerFourIsCorrect.value\"\r\n            (click)=\"onSelectCorrect(3)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (4)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <app-input\r\n                [control]=\"FormCtrl.answerFour\"\r\n                [submitted]=\"submitted\"\r\n                label=\"labels.AnswerText\"\r\n                type=\"text\"\r\n              ></app-input>\r\n\r\n              <!-- answer four Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (4) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerFour\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (4)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerFourImage\"\r\n                    (change)=\"importFourFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"FormCtrl.answerFourImage.value\"\r\n                      formControlName=\"answerFourRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [src]=\"FormCtrl.answerFourImage.value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </ng-container>\r\n\r\n    <mat-card-actions class=\"col-12\" align=\"end\">\r\n      <button\r\n        mat-raised-button\r\n        class=\"btn btn-warning bg-light-warning\"\r\n        *ngIf=\"questionId > 0\"\r\n        (click)=\"\r\n          myForm.reset(); questionId = 0; FormCtrl.questionTypeId.setValue(2)\r\n        \"\r\n      >\r\n        {{ \"General.Reset\" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-info bg-light-info\"\r\n        [disabled]=\"examGroupHeaderId == 0\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"questionId == 0\"\r\n      >\r\n        <i class=\"fa fa-plus\"></i>\r\n        {{ \"General.Add\" | translate }}\r\n      </button>\r\n      <!-- <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"resetFileInputs()\"\r\n      >\r\n        reset\r\n      </button> -->\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"onSubmit()\"\r\n        id=\"editQuestionButton\"\r\n        class=\"btn btn-info bg-light-info\"\r\n        *ngIf=\"questionId > 0\"\r\n      >\r\n        {{ \"General.Update\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n\r\n    <div class=\"col-md-12\">\r\n      <div class=\"full-wid-table\" style=\"overflow: hidden !important\">\r\n        <table\r\n          class=\"table table-striped table-hover table-full-width rtl\"\r\n          id=\"sotbmod\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>{{ \"labels.question_ar_text\" | translate }}</th>\r\n              <!-- <th>{{ \"labels.QuestionImage\" | translate }}</th> -->\r\n              <th>{{ \"labels.QuestionType\" | translate }}</th>\r\n              <th>­</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"addedExamQuestionsHolder\">\r\n            <tr id=\"ExamQuestion-2626853\" *ngFor=\"let ques of questionsInGrid\">\r\n              <td>{{ ques.ExamQuestId }}</td>\r\n              <td>{{ ques.Text }}</td>\r\n              <!-- <td>\r\n                <a\r\n                  *ngIf=\"ques.Image != null || ques.Image != ''; else noImg\"\r\n                  [href]=\"ques.Image\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <img\r\n                    [src]=\"uploadFileService.previewPicture(ques.Image)\"\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                  />\r\n                  عرض\r\n                </a>\r\n                <span #noImg>لايوجد صورة</span>\r\n              </td> -->\r\n              <td>{{ ques.QuestionTypeAr }}</td>\r\n              <td>\r\n                <button\r\n                  (click)=\"getQuestionForEditByID(ques.ExamQuestId)\"\r\n                  mat-mini-fab\r\n                  color=\"primary\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n\r\n                <button\r\n                  (click)=\"removeExamQuestion(ques.ExamQuestId)\"\r\n                  mat-mini-fab\r\n                  color=\"warn\"\r\n                >\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-dialog-actions align=\"end\">\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"closeDialog.emit()\"\r\n        class=\"btn btn-warning bg-light-warning\"\r\n      >\r\n        {{ \"General.Close\" | translate }}\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n"],"names":["CustomeValidator","Validators","MatTableDataSource","forkJoin","MatPaginator","MatSort","DeleteDialogComponent","MAT_DIALOG_DATA","AddSubQuestionComponent","map","startWith","i0","AddExamComponent","location","fb","authserv","examService","route","router","msg","generalService","dialog","datePipe","spinner","appStrings","data","dialogRef","label","value","type","subId","subjectId","unitId","examId","getExamById","getAllGroupHeaderByExamId","queryParamMap","subscribe","params","functionId","Number","get","parentId","getUserRowFunctions","res","rowFunctions","myForm","group","examName","required","whiteSpace","examHours","minusNum","examMinutes","fromDate","toDate","formHour","toHours","isRepeatable","repeatNumbers","degreeToPass","order","bigZero","isMandatory","validator","dateBefore","GroupHeadersForm","examGroup","examHeader","examContent","EduCompId","getEduCompId","branchId","getBranchId","FormCtrl","stageId","_a","disable","educationYearId","_b","_c","teacherUserId","_d","_e","lessionId","_f","getAllCountieres","getAllExamTypes","getAllQuestionGroups","getAllQuestionHeaders","examTypeValidator","RepeatableValidator","backdropClick","ele","onCloseDialog","id","ar_name","exam_ar_name","stageExam","close","e","dataSource","paginator","sort","filterValue","toLowerCase","examGroups","filter","option","question_group_ar_name","includes","examHeaders","question_head_ar_name","controls","show","response","setValue","toHour","fromHour","canSellIndividually","Individually_Purchased","exam_minute","exam_period_minute","exam_hour","Subject_ID","quiz","examTypeId","_g","_h","Avilable_Date_From","_j","Avilable_Date_To","_k","percentageToPass","_l","orderNum","_m","hide","GroupsHeadersList","itemsCount","length","filteredExamGroups","GroupHeadersFormCtrl","valueChanges","pipe","filter_question_group","filteredExamHeaders","filter_question_header","exam","transform","repeatableExam","repeatableExam_Count","Unit_ID","exam_type_id","toAddEdit","console","log","addExam","validGroupHeadersForm","valid","submitted","GroupHeadsubmitted","returnValue","success","navigate","queryParams","queryParamsHandling","onAddExamGroupHeader","error","returnString","sameGroupWithSameHeader","find","gh","group_name","head_name","info","tempExam","ToAddExamGroupHeader","exam_question_group_text","exam_question_head_title","exam_question_head_text","addExamGroupHeader","headerResponse","tempExcamGroupHeader","Id","exam_question_head_id","question_title","examGroupHeader","editGroupHeaderMode","examGroupHeaderIdToEdit","questionNumber","questionType","toEdit","head","title","editExamGroupHeader","editResponse","toReplace","deleteExamGroupHeader","deleteResponse","todeleteIndex","findIndex","splice","open","afterClosed","confirm","removeExamGroupHead","groupHeader","examGroupHeaderId","obj","lessonId","getAllExamType","examTypes","enable","getAllCountries","countries","countryId","getAllStages","stages","getAllEducationYears","educationYears","getAllSubjects","subjects","getTeacherBySubjectAndEduCompId","getAllUnitsBySublectId","results","teachers","units","getAllLessonsByUnitId","lessions","setValidators","clearValidators","reset","updateValueAndValidity","CustomDiscount","hasCustomDiscount","repeatingPrice","selectors","viewQuery","ctx","EventEmitter","ctx_r10","ctx_r12","ctx_r13","ctx_r14","ctx_r15","ctx_r16","ctx_r17","ctx_r18","ctx_r1","ctx_r19","ctx_r21","ctx_r23","ctx_r26","ctx_r28","toastr","uploadFileService","getAllQuestionsByHeadId","mainQuestion","questionTypeId","questionImage","remove_image","exam_question_text","questionPerfectAnswer","perfect_answer_attach","questionMark","answerOneId","answerOne","answerOneIsCorrect","answerOneImage","answerTwoId","answerTwo","answerTwoIsCorrect","answerTwoImage","answerThreeId","answerThree","answerThreeIsCorrect","answerThreeImage","answerFourId","answerFour","answerFourIsCorrect","answerFourImage","answerOneRemove_image","answerTwoRemove_image","answerThreeRemove_image","answerFourRemove_image","educationCompanyId","questionTypeValidation","changes","currentValue","questionsInGrid","clearAsyncValidators","image","questionFile","questionImagePath","imageOne","answerOneFile","choice1","choice_id","choice_text","is_correct","choice_image","path","imageTwo","answerTwoFile","choice2","imageThree","answerThreeFile","choice3","_o","_p","_q","_r","_s","_t","imageFour","answerFourFile","choice4","_u","_v","_w","_x","_y","_z","exam_question_main_question","_0","exam_question_mark","_1","exam_question_perfect_answer","_2","_3","exam_question_type_id","_4","exam_selected_question_head_id","exam_selected_subject_id","exam_question_image","_5","exam_question_id","questionId","mcq_choices","warning","editMcqQuestion","addMcqQuestion","addQuestion","resetFileInputs","editQuestion","oneIsCorrect","twoIsCorrect","threeIsCorrect","fourIsCorrect","getQuestionForEditByID","main_question","mark","question_text","attach_path","previewPicture","question_type_id","MCQ_Choices","Text","Image","Is_Correct","_6","_7","_8","_9","_10","_11","_12","_13","_14","_15","_16","_17","_18","_19","_20","confirmed","deleteExamQuestion","toDeleteIndex","q","event","uploadFile","then","file","setTimeout","FileAsBase64","answerNumber","FileInputs","document","querySelectorAll","forEach","input","inputs","outputs","closeDialog","features","decls","vars","consts","template"],"sourceRoot":"webpack:///"}