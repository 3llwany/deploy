{"version":3,"file":"default-src_app_org-management_org-management_module_ts.js","mappings":"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","sources":["./src/app/org-management/components/jobs-profile/jobs-profile-index/jobs-profile-index.component.ts","./src/app/org-management/components/jobs-profile/jobs-profile-index/jobs-profile-index.component.html","./src/app/org-management/components/org-structure/add-org-structure-node/add-org-structure-node.component.ts","./src/app/org-management/components/org-structure/add-org-structure-node/add-org-structure-node.component.html","./src/app/org-management/components/org-structure/add-org-structure/add-org-structure.component.ts","./src/app/org-management/components/org-structure/add-org-structure/add-org-structure.component.html","./src/app/org-management/components/org-structure/employee-card/employee-card.component.ts","./src/app/org-management/components/org-structure/employee-card/employee-card.component.html","./src/app/org-management/components/org-structure/job-title-details-dialog/job-title-details-dialog.component.ts","./src/app/org-management/components/org-structure/job-title-details-dialog/job-title-details-dialog.component.html","./src/app/org-management/components/org-structure/job-title-org-chart/job-title-org-chart.component.ts","./src/app/org-management/components/org-structure/job-title-org-chart/job-title-org-chart.component.html","./src/app/org-management/components/org-structure/org-details-employees/org-details-employees.component.ts","./src/app/org-management/components/org-structure/org-details-employees/org-details-employees.component.html","./src/app/org-management/components/org-structure/org-kpis/org-kpis.component.ts","./src/app/org-management/components/org-structure/org-kpis/org-kpis.component.html","./src/app/org-management/components/org-structure/org-structure-details/org-structure-details.component.ts","./src/app/org-management/components/org-structure/org-structure-details/org-structure-details.component.html","./src/app/org-management/components/org-structure/org-structure-hierarchy-details/org-structure-hierarchy-details.component.ts","./src/app/org-management/components/org-structure/org-structure-hierarchy-details/org-structure-hierarchy-details.component.html","./src/app/org-management/components/org-structure/org-structure-index/org-structure-index.component.ts","./src/app/org-management/components/org-structure/org-structure-index/org-structure-index.component.html","./src/app/org-management/components/org-structure/resources-chart/resources-chart.component.ts","./src/app/org-management/components/org-structure/resources-chart/resources-chart.component.html","./src/app/org-management/components/policy-groups/add-policy-group/add-policy-group.component.ts","./src/app/org-management/components/policy-groups/add-policy-group/add-policy-group.component.html","./src/app/org-management/components/policy-groups/intersection-emp-dialog/intersection-emp-dialog.component.ts","./src/app/org-management/components/policy-groups/intersection-emp-dialog/intersection-emp-dialog.component.html","./src/app/org-management/components/policy-groups/policy-group-core/policy-group-core.component.ts","./src/app/org-management/components/policy-groups/policy-group-core/policy-group-core.component.html","./src/app/org-management/components/policy-groups/policy-group-index/policy-group-index.component.ts","./src/app/org-management/components/policy-groups/policy-group-index/policy-group-index.component.html","./src/app/org-management/export_chart.ts","./src/app/org-management/mapper/org-kpi.ts","./src/app/org-management/mapper/org-structure.ts","./src/app/org-management/org-management-routing.module.ts","./src/app/org-management/org-management.module.ts","./src/app/org-management/services/org-structure/job-title-chart.service.ts","./src/app/org-management/services/org-structure/org-kpis.service.ts","./src/app/org-management/services/org-structure/resources-chart.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-job-information.service.ts","./src/app/shared/enums/policy-group-grouping.ts","./src/app/shared/services/group-by.service.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { jobToMap } from \"app/org-management/mapper/job-title\";\r\nimport { IJobTitleModel } from \"app/org-management/model/job-title\";\r\nimport { JobTitleService } from \"app/org-management/services/job-profile/job-title.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"app-jobs-profile-index\",\r\n\ttemplateUrl: \"./jobs-profile-index.component.html\",\r\n\tstyleUrls: [\"./jobs-profile-index.component.scss\"],\r\n})\r\nexport class JobsProfileIndexComponent extends AppHelpers implements OnInit {\r\n\tmandatoryColomns: string[] = [\"Ser\", \"id\", \"code\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n\toptionalColomns: string[] = [\"jobFamily\"];\r\n\r\n\tdataSource: MatTableDataSource<IJobTitleModel>;\r\n\tisLoaded: boolean = false;\r\n\tconstructor(public jobTitleService: JobTitleService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.checkNoBusinessOrCompany())\r\n\t\t\tthis.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n\t}\r\n\r\n\tgetList(page: number, pageSize?: number) {\r\n\t\tthis.removePageParams();\r\n\t\tthis.page.pageIndex = page;\r\n\t\tif (pageSize) this.page.pageSize = pageSize;\r\n\t\tlet params: IPageParams = {\r\n\t\t\tPageNumber: page,\r\n\t\t\tpageSize: this.page.pageSize,\r\n\t\t};\r\n\t\tthis.jobTitleService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IJobTitleModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(jobToMap(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n\t}\r\n\r\n\tonDelete(jobProfile: IJobTitleModel): void {\r\n\t\tlet msg = this.msgTranslate(jobProfile.ar_Name, jobProfile.en_Name);\r\n\t\tthis.deleteDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(jobProfile);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(jobProfile: IJobTitleModel) {\r\n\t\tthis.showLoading();\r\n\t\tthis.jobTitleService.Delete(jobProfile.id).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tif (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n\t\t\t\t\t// if last item in list: get previous page\r\n\t\t\t\t\tthis.getList(this.prevPage, this.page.pageSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not last item in list: get current page\r\n\t\t\t\t\tthis.getList(this.currentPage, this.page.pageSize);\r\n\t\t\t\t}\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title\r\n          title=\"jobsProfile\"\r\n          [globalFunctions]=\"globalFunctions?.reverse()\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"jobTitleService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { OrganizationsComponent } from \"app/org-management-setup/components/organizations/organizations.component\";\r\nimport { IOrganizationModel } from \"app/org-management-setup/models/organizations\";\r\nimport { OrganizationsService } from \"app/org-management-setup/services/organizations.service\";\r\nimport {\r\n  IOrgStructureNodeModel,\r\n  IOrgStructureNodeRequest,\r\n} from \"app/org-management/model/org-structure\";\r\nimport { OrgStructureService } from \"app/org-management/services/org-structure/org-structure.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-add-org-structure-node\",\r\n  templateUrl: \"./add-org-structure-node.component.html\",\r\n  styleUrls: [\"./add-org-structure-node.component.scss\"],\r\n})\r\nexport class AddOrgStructureNodeComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  // organization dropdown\r\n  organizationList: IOrganizationModel[] = [];\r\n  viewName: string;\r\n\r\n  constructor(\r\n    private orgStructureService: OrgStructureService,\r\n    private organizationsService: OrganizationsService,\r\n    public dialogRef: MatDialogRef<AddOrgStructureNodeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    super();\r\n    // console.log(data);\r\n    this.viewName = ViewsManager.organizations;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      // oldId: [0, { nonNullable: true }],\r\n      org_Structure_ID: [null],\r\n      parenT_ID: [null],\r\n      orG_TYPE_ID: [null, [Validators.required]],\r\n      orG_ID: [null, [Validators.required]],\r\n    });\r\n\r\n    this.getFormValues();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (\r\n      this.formCtrls.org_Structure_ID.value > 0 &&\r\n      this.checkNoBusinessOrCompany()\r\n    ) {\r\n      this.getAllUnAssignedOrganizationsByStructureId();\r\n    }\r\n  }\r\n\r\n  getFormValues() {\r\n    this.form.patchValue(this.data);\r\n    // // save old org id to edit\r\n    // this.formCtrls.oldId.setValue(this.data.orG_ID);\r\n    setTimeout(() => {\r\n      // this.formCtrls.orG_TYPE_ID.setValue(this.data.orG_TYPE_ID);\r\n      if (!this.form.value.parenT_ID) {\r\n        this.formCtrls.orG_TYPE_ID.disable();\r\n        this.formCtrls.orG_TYPE_ID.setValue(1);\r\n      }\r\n      // this.formCtrls.orG_ID.setValue(this.data.orG_ID);\r\n    }, 100);\r\n    // console.log(this.data, this.form.value);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IOrgStructureNodeRequest = {\r\n        core_Org_Structure_Org: {\r\n          org_Structure_ID: this.formCtrls.org_Structure_ID.value,\r\n          orG_TYPE_ID: this.formCtrls.orG_TYPE_ID.value,\r\n          orG_ID: this.formCtrls.orG_ID.value,\r\n          parenT_ID: this.formCtrls.parenT_ID.value,\r\n        },\r\n      };\r\n\r\n      // this.form.value.oldId == 0 ? this.create(model) : this.update(model);\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IOrgStructureNodeRequest) {\r\n    this.showLoading();\r\n    this.orgStructureService\r\n      .createNode(model)\r\n      .subscribe((res: IResponse<IOrgStructureNodeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.dialogRef.close(true);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  // update(model: IOrgStructureNodeRequest) {\r\n  //   model.oldOrgID = this.form.value.oldId;\r\n  //   this.showLoading();\r\n  //   this.orgStructureService\r\n  //     .updateNode(model)\r\n  //     .subscribe((res: IResponse<IOrgStructureNodeModel>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.dialogRef.close(true);\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  // organization list\r\n  getAllUnAssignedOrganizationsByStructureId() {\r\n    this.showLoading();\r\n    this.organizationsService\r\n      .GetAllUnAssignedByStructureId(this.formCtrls.org_Structure_ID.value)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IOrganizationModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.organizationList = res.data;\r\n          // if (this.formCtrls.oldId.value > 0)\r\n          //   this.organizationList.unshift(this.data.currentOrganization);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  createDialog(value: string) {\r\n    this.dialogsService\r\n      .addFromDropdownDialog(OrganizationsComponent, value)\r\n      .afterClosed()\r\n      .subscribe((res) => {\r\n        this.getAllUnAssignedOrganizationsByStructureId();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\" #dialogContainer>\r\n  <div class=\"col-12\">\r\n    <div mat-dialog-title>\r\n      <!--\r\n        [id]=\"formCtrls.oldId.value\"\r\n        addTitle=\"orgStructureNode\"\r\n        editTitle=\"editOrgStructureNode\"\r\n       -->\r\n      <page-title title=\"orgStructureNode\"> </page-title>\r\n    </div>\r\n\r\n    <mat-dialog-content>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <form [formGroup]=\"form\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 col-12\">\r\n                <app-org-types-dropdown\r\n                  [control]=\"formCtrls.orG_TYPE_ID\"\r\n                  [submitted]=\"submitted\"\r\n                  [disableCompany]=\"formCtrls.parenT_ID.value ? true : false\"\r\n                  [appendTo]=\"dialogContainer\"\r\n                  [filter]=\"true\"\r\n                >\r\n                </app-org-types-dropdown>\r\n              </div>\r\n\r\n              <div class=\"col-md-6 col-12\">\r\n                <app-prime-dropdown\r\n                  [control]=\"formCtrls.orG_ID\"\r\n                  label=\"organization\"\r\n                  [submitted]=\"submitted\"\r\n                  [List]=\"organizationList\"\r\n                  [appendTo]=\"dialogContainer\"\r\n                  [filter]=\"true\"\r\n                  optionDisabled=\"assignStr\"\r\n                  [viewName]=\"viewName\"\r\n                  (createNewDialog)=\"createDialog($event)\"\r\n                >\r\n                </app-prime-dropdown>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </mat-dialog-content>\r\n\r\n    <mat-dialog-actions align=\"end\">\r\n      <submit-btn [id]=\"0\" (onClick)=\"submit()\"></submit-btn>\r\n      <button\r\n        mat-raised-button\r\n        class=\"btn btn-warning mr-1 ml-1\"\r\n        [mat-dialog-close]=\"false\"\r\n        cdkFocusInitial\r\n      >\r\n        {{ \"General.close\" | translate }}\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  IOrgStructureAddRequest,\r\n  IOrgStructureEditRequest,\r\n  IOrgStructureModel,\r\n} from \"app/org-management/model/org-structure\";\r\nimport { OrgStructureService } from \"app/org-management/services/org-structure/org-structure.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n@Component({\r\n  selector: \"app-add-org-structure\",\r\n  templateUrl: \"./add-org-structure.component.html\",\r\n  styleUrls: [\"./add-org-structure.component.scss\"],\r\n})\r\nexport class AddOrgStructureComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  orgStructure: IOrgStructureModel;\r\n  orgStructureId: number;\r\n  oldStructureIdToCopy: number;\r\n\r\n  todayDate: Date = new Date();\r\n\r\n  structureList: IOrgStructureModel[] = [];\r\n\r\n  constructor(private orgStructureService: OrgStructureService) {\r\n    super();\r\n    this.todayDate.setHours(0, 0, 0, 0);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      froM_DATE: [null, [Validators.required]],\r\n      CopyStructureID: [null],\r\n    });\r\n\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.orgStructureId = Number(params.get(\"orgStructureId\")) ?? 0;\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.orgStructureId == 0 ? this.getAllStructures() : this.getById();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getById() {\r\n    this.showLoading();\r\n    this.orgStructureService\r\n      .getById(this.orgStructureId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IOrgStructureModel[]>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.orgStructure = res.data[0];\r\n          this.orgStructureToEdit();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  orgStructureToEdit() {\r\n    this.form.patchValue(this.orgStructure);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      this.formCtrls.id.value == 0 ? this.create() : this.update();\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create() {\r\n    const model: IOrgStructureAddRequest = {\r\n      Core_Org_Structure: {\r\n        en_Name: this.form.value.en_Name,\r\n        ar_Name: this.form.value.ar_Name,\r\n        froM_DATE: HelpersFunctions.mapDateReverse(\r\n          this.form.value.froM_DATE ?? this.orgStructure?.froM_DATE\r\n        ),\r\n      },\r\n      CopyStructureID: this.formCtrls.CopyStructureID.value,\r\n    };\r\n\r\n    this.showLoading();\r\n    this.orgStructureService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IOrgStructureModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.orgStructureId = res.data.id;\r\n          this.formCtrls.id.setValue(this.orgStructureId);\r\n          let url = `/org-management/${this.moduleId}/org-structure/edit/${this.orgStructureId}`;\r\n          this.navigateTo(url);\r\n          this.orgStructure = res.data;\r\n          this.formCtrls.CopyStructureID.reset();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update() {\r\n    const model: IOrgStructureEditRequest = {\r\n      id: this.form.value.id,\r\n      en_Name: this.form.value.en_Name,\r\n      ar_Name: this.form.value.ar_Name,\r\n      froM_DATE: HelpersFunctions.mapDateReverse(\r\n        this.form.value.froM_DATE ?? this.orgStructure?.froM_DATE\r\n      ),\r\n      to_DATE: HelpersFunctions.mapDateReverse(this.orgStructure.tO_DATE),\r\n    };\r\n\r\n    this.showLoading();\r\n    this.orgStructureService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IOrgStructureModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.orgStructure = res.data;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    /* if (this.orgStructureId == 0)  */ this.form.reset({ id: 0 });\r\n    // else this.orgStructureToEdit();\r\n    this.submitted = false;\r\n  }\r\n\r\n  canNotEdit(): boolean {\r\n    // can edit if org structure from date greater than today date\r\n    return (\r\n      new Date(this.todayDate).getTime() >=\r\n      new Date(this.orgStructure?.froM_DATE).getTime()\r\n    );\r\n  }\r\n\r\n  // organization list\r\n  getAllStructures() {\r\n    this.orgStructureService\r\n      .getAll()\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IOrgStructureModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.structureList = [\r\n            {\r\n              id: 0,\r\n              ar_Name: \"انشاء جديد\",\r\n              en_Name: \"Create new\",\r\n            },\r\n            ...res.data,\r\n          ];\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"orgStructure\"\r\n          editTitle=\"editOrgStructure\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- add new btn -->\r\n        <app-add-new-btn\r\n          *ngIf=\"formCtrls.id.value > 0\"\r\n          url=\"/org-management/{{ moduleId }}/org-structure/add\"\r\n          [params]=\"parentParam\"\r\n        >\r\n        </app-add-new-btn>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          url=\"/org-management/{{ moduleId }}/org-structure/index\"\r\n          [params]=\"pageParams\"\r\n        ></app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.froM_DATE\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"froM_DATE\"\r\n                    [minDate]=\"todayDate\"\r\n                    [disabled]=\"canNotEdit()\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-prime-dropdown\r\n                    [control]=\"formCtrls.CopyStructureID\"\r\n                    label=\"copyFromPreviousStructure\"\r\n                    [submitted]=\"submitted\"\r\n                    [List]=\"structureList\"\r\n                    *ngIf=\"this.form.value.id == 0\"\r\n                  >\r\n                  </app-prime-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <p-messages severity=\"warn\" *ngIf=\"canNotEdit()\">\r\n        <ng-template pTemplate>\r\n          <span class=\"p-message-icon pi pi-exclamation-triangle\"></span>\r\n          <div class=\"p-message-detail\">\r\n            {{ \"canNotEditOrgStructure\" | translate }}\r\n          </div>\r\n        </ng-template>\r\n      </p-messages>\r\n\r\n      <!-- chart -->\r\n      <app-org-structure-hierarchy-details\r\n        [orgStructureId]=\"orgStructureId || formCtrls.CopyStructureID.value\"\r\n        [canNotEdit]=\"this.orgStructureId == 0 ? true : canNotEdit()\"\r\n      ></app-org-structure-hierarchy-details>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {Component, HostListener, Inject, OnInit,} from \"@angular/core\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {employeeToMap} from \"app/personnel-setup/mapper/employee\";\r\nimport {IEmployeeCardModel} from \"app/personnel-setup/models/employees\";\r\nimport {EmployeesService} from \"app/personnel-setup/services/employees/employees.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-employee-card\",\r\n  templateUrl: \"./employee-card.component.html\",\r\n  styleUrls: [\"./employee-card.component.scss\"],\r\n})\r\nexport class EmployeeCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number;\r\n  employeeData: IEmployeeCardModel;\r\n  loaded: boolean = false;\r\n  showMainData: boolean = false;\r\n\r\n  constructor(\r\n    private employeesService: EmployeesService,\r\n    public dialogRef: MatDialogRef<EmployeeCardComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    super();\r\n    if (data) {\r\n      this.employeeId = data.employeeId;\r\n      this.showMainData = data.showMainData ?? false;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany() && this.employeeId > 0) this.getEmployeeData();\r\n\r\n    const overlays = document.querySelectorAll(\".cdk-overlay-backdrop\");\r\n    if (overlays.length > 0)\r\n      overlays[overlays.length - 1].classList.add(\"no-overlay\");\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.employeeId > 0)\r\n      this.getEmployeeData();\r\n  }\r\n\r\n  getEmployeeData() {\r\n    this.employeesService\r\n      .getEmployeeCardById(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeCardModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length > 0) {\r\n            this.employeeData = employeeToMap(res.data)[0];\r\n          }\r\n          this.loaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  // close dilog on resize screen\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onWindowResize(event) {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"title\">\r\n  <h6 class=\"type-name info\">\r\n    {{ \"employeeDetails\" | translate | titlecase }}\r\n  </h6>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1\"\r\n    [mat-dialog-close]=\"false\"\r\n    [class.ar]=\"languageService.isArabic\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"employee-card\">\r\n  <ng-container *ngIf=\"employeeData && loaded\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 col-12 img-container\">\r\n        <p-image\r\n          *ngIf=\"employeeData.img && employeeData.img != ''; else noImg\"\r\n          [src]=\"fileService.preview(employeeData.img)\"\r\n          alt=\"{{ 'img' | translate }}\"\r\n          preview=\"true\"\r\n        >\r\n        </p-image>\r\n        <ng-template #noImg>\r\n          <div class=\"alt-img-preview\">\r\n            <i class=\"pi pi-user\"></i>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n      <div class=\"col-md-8 col-12\">\r\n        <p class=\"mtop-5\">\r\n          {{ msgTranslate(employeeData.ar_Name, employeeData.en_Name) }}\r\n        </p>\r\n        <p *ngIf=\"employeeData.contact\">\r\n          <i class=\"pi pi-phone\"></i>\r\n          <span class=\"mx-1\">{{ employeeData.contact }}</span>\r\n        </p>\r\n        <p *ngIf=\"employeeData.email\">\r\n          <i class=\"fa fa-envelope\"></i>\r\n          <span class=\"mx-1\">{{ employeeData.email }}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mtop-20\">\r\n      <div class=\"mbottom-14\" style=\"font-weight: bold\">\r\n        {{ \"employment\" | translate | titlecase }}\r\n      </div>\r\n      <p>\r\n        {{ employeeData.jobTitleName }}\r\n      </p>\r\n      <p>\r\n        {{ employeeData.organization }}\r\n      </p>\r\n\r\n      <ng-container *ngIf=\"!showMainData\">\r\n        <p>\r\n          <span\r\n            *ngIf=\"employeeData.isActive; else no\"\r\n            class=\"badge bg-light-success\"\r\n          >\r\n            {{ \"active\" | translate }}\r\n          </span>\r\n          <ng-template #no>\r\n            <span class=\"badge bg-light-danger\">\r\n              {{ \"notActive\" | translate }}\r\n            </span>\r\n          </ng-template>\r\n        </p>\r\n\r\n        <p class=\"mbottom-14 mtop-14\" style=\"font-weight: bold\">\r\n          {{ \"noOfEmployeeReporting\" | translate }}\r\n        </p>\r\n        <p class=\"font-size-14\">\r\n          <span class=\"d-inline-block\">\r\n            {{ \"asSolidManager\" | translate }} :\r\n          </span>\r\n          <span> {{ employeeData?.manageSolidEmpNo }}</span>\r\n        </p>\r\n        <p class=\"font-size-14\">\r\n          <span class=\"d-inline-block\">\r\n            {{ \"asDottedManager\" | translate }} :\r\n          </span>\r\n          <span> {{ employeeData?.manageDotesEmpNo }}</span>\r\n        </p>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <!-- on loading -->\r\n  <ng-container *ngIf=\"!employeeData && !loaded\">\r\n    <app-structure-employee-card-skeleton></app-structure-employee-card-skeleton>\r\n  </ng-container>\r\n</mat-dialog-content>\r\n","import { Component, HostListener, Inject, OnInit } from \"@angular/core\";\r\nimport {\r\n  DialogPosition,\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef,\r\n} from \"@angular/material/dialog\";\r\nimport {\r\n  IJobTitleModel\r\n} from \"app/org-management/model/job-title\";\r\nimport { IPerson } from \"app/personnel-setup/models/employees\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { GroupByService } from \"app/shared/services/group-by.service\";\r\nimport { EmployeeCardComponent } from \"../employee-card/employee-card.component\";\r\n\r\n@Component({\r\n  selector: \"app-job-title-details-dialog\",\r\n  templateUrl: \"./job-title-details-dialog.component.html\",\r\n  styleUrls: [\"./job-title-details-dialog.component.scss\"],\r\n})\r\nexport class JobTitleDetailsDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  nodeData: IJobTitleModel;\r\n  expandedIndex: number = 0;\r\n  employees: IPerson[] = [];\r\n  employeesGroups: {\r\n    key: string;\r\n    List: any[];\r\n  }[];\r\n  employeesGroupsFiltered: {\r\n    key: string;\r\n    List: any[];\r\n  }[];\r\n  loaded: boolean = false;\r\n\r\n  constructor(\r\n    private groupByService: GroupByService,\r\n    // opened ass dialog\r\n    public dialogRef: MatDialogRef<JobTitleDetailsDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // to open another dialog\r\n    private dialog: MatDialog\r\n  ) {\r\n    super();\r\n    this.expandedIndex = data.expandedIndex;\r\n    this.nodeData = data.nodeData;\r\n\r\n    this.employees = this.nodeData.core_Person_Instance_Job_Title.map(\r\n      (item) => item.core_Person_Instance?.core_Person\r\n    );\r\n    if (this.employees.length > 0) this.sortAndGroupEmployees();\r\n    else this.loaded = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const overlays = document.querySelectorAll(\".cdk-overlay-backdrop\");\r\n    if (overlays.length > 0)\r\n      overlays[overlays.length - 1].classList.add(\"no-overlay\");\r\n  }\r\n\r\n  sortAndGroupEmployees() {\r\n    this.employees = this.employees.filter((emp) => {\r\n      if (emp) return emp;\r\n    });\r\n    this.employeesGroups = this.groupByService\r\n      .groupByPartOfProperty(\r\n        this.employees,\r\n        this.languageService.isArabic ? \"ar_Name\" : \"en_Name\",\r\n        1\r\n      )\r\n      .sort((a, b) => {\r\n        if (a.key < b.key) return -1;\r\n        if (a.key > b.key) return 1;\r\n        return 0;\r\n      });\r\n    this.employeesGroupsFiltered = this.employeesGroups.slice();\r\n    this.loaded = true;\r\n  }\r\n\r\n  // open employee card dialog\r\n  openEmployeeCardDialog(target: HTMLElement, employeeId: number) {\r\n    let lastTarget: HTMLElement = this.getHeaderElement(target);\r\n    let targetPositions: DOMRect = lastTarget.getBoundingClientRect();\r\n\r\n    // dialog position x-axis (right or left)\r\n    let dialogWidth = 350;\r\n    let dialogPositions: DialogPosition = {};\r\n    // can open left\r\n    if (\r\n      targetPositions.left + targetPositions.width / 2 + dialogWidth <=\r\n      window.innerWidth\r\n    )\r\n      dialogPositions.left = `${\r\n        targetPositions.left + targetPositions.width / 2\r\n      }px`;\r\n    // can open right\r\n    else if (targetPositions.left - dialogWidth / 2 - 10 >= 0)\r\n      dialogPositions.left = `${targetPositions.left - dialogWidth / 2 - 10}px`;\r\n    // no left and no right\r\n    else dialogPositions.left = null;\r\n\r\n    return this.dialog\r\n      .open(EmployeeCardComponent, {\r\n        data: { employeeId: employeeId },\r\n        position: dialogPositions,\r\n        width: `${dialogWidth}px`,\r\n        // maxWidth: \"350px\",\r\n        maxHeight: \"80hv\",\r\n        autoFocus: false,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((closed: boolean) => {});\r\n  }\r\n\r\n  getHeaderElement(target: HTMLElement): HTMLElement {\r\n    return target.classList.contains(\"mat-expansion-panel-body\")\r\n      ? target\r\n      : this.getHeaderElement(target.parentElement);\r\n  }\r\n\r\n  // search in employees\r\n  searchEmployees(searchName: string) {\r\n    this.employeesGroupsFiltered = this.employeesGroups\r\n      .map((item) => ({\r\n        key: item.key,\r\n        List: item.List.filter(\r\n          (emp) =>\r\n            emp.en_Name.toLowerCase().includes(searchName.toLowerCase()) ||\r\n            emp.ar_Name.toLowerCase().includes(searchName.toLowerCase())\r\n        ),\r\n      }))\r\n      .filter((item) => item.List.length > 0);\r\n  }\r\n\r\n  // close dilog on resize screen\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onWindowResize(event) {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"details-dialog-title\">\r\n  <div class=\"mb-2\">\r\n    <button mat-icon-button class=\"float-right mb-1\" [mat-dialog-close]=\"false\">\r\n      <i class=\"pi pi-times\"></i>\r\n    </button>\r\n\r\n    <h6 class=\"type-name info\">\r\n      {{ msgTranslate(nodeData.ar_Name, nodeData.en_Name) }}\r\n    </h6>\r\n  </div>\r\n\r\n  <!-- <p class=\"code\">{{ nodeData.code }}</p> -->\r\n  <p class=\"clearfix\"></p>\r\n</div>\r\n\r\n<mat-dialog-content class=\"details-dialog jobtitle\">\r\n  <mat-accordion multi>\r\n    <mat-expansion-panel [expanded]=\"expandedIndex == 0\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>{{ \"details\" | translate }}</mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"expantion-body\">\r\n        <div class=\"table-container\">\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th>{{ \"code\" | translate | titlecase }}</th>\r\n                <td>{{ nodeData.code }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>{{ \"jobTitle\" | translate | titlecase }}</th>\r\n                <td>\r\n                  {{ msgTranslate(nodeData.ar_Name, nodeData.en_Name) }}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>{{ \"jobFamily\" | translate | titlecase }}</th>\r\n                <td>\r\n                  {{\r\n                    msgTranslate(\r\n                      nodeData.core_Job_Title_Family?.ar_Name,\r\n                      nodeData.core_Job_Title_Family?.en_Name\r\n                    )\r\n                  }}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <mat-divider></mat-divider>\r\n\r\n        <div\r\n          class=\"no-employees\"\r\n          *ngIf=\"nodeData.core_Org_Job_Title.length > 0\"\r\n        >\r\n          <p *ngFor=\"let orgJob of nodeData.core_Org_Job_Title\">\r\n            {{\r\n              msgTranslate(orgJob.core_Org?.ar_Name, orgJob.core_Org?.en_Name)\r\n            }}\r\n            ( {{ orgJob.currentEmployeeNumber ?? 0 }} {{ \"of\" | translate }}\r\n            {{\r\n              orgJob.max_Employee == 0\r\n                ? translate(\"unlimited\")\r\n                : orgJob.max_Employee\r\n            }}\r\n            FTE )\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel [expanded]=\"expandedIndex == 1\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>{{ \"employees\" | translate }}</mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"expantion-body employee-body\">\r\n        <ng-container *ngIf=\"employees.length > 0 && loaded\">\r\n          <input\r\n            class=\"form-control mbottom-15\"\r\n            (keyup)=\"searchEmployees($event.target.value)\"\r\n            placeholder=\"{{ 'search' | translate }}\"\r\n          />\r\n          <ng-container *ngFor=\"let group of employeesGroupsFiltered\">\r\n            <div class=\"key-emp\">{{ group.key }}</div>\r\n            <div role=\"button\">\r\n              <p\r\n                *ngFor=\"let employee of group.List\"\r\n                (click)=\"openEmployeeCardDialog($event.target, employee.id)\"\r\n                class=\"name-container\"\r\n              >\r\n                <!-- [matTooltip]=\"msgTranslate(employee.ar_Name, employee.en_Name)\" -->\r\n                <span\r\n                  class=\"img-small-icon\"\r\n                  [class]=\"msgTranslate('mleft-10', 'mright-10')\"\r\n                >\r\n                  <i class=\"pi pi-user\"></i>\r\n                </span>\r\n                <span class=\"emp-name\">\r\n                  {{ msgTranslate(employee.ar_Name, employee.en_Name) }}\r\n                </span>\r\n                <!-- <i\r\n                  class=\"pi pi-id-card mx-2 font-medium-3 info\"\r\n                  (click)=\"openEmployeeCardDialog($event.target, employee.id)\"\r\n                ></i> -->\r\n              </p>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"employees.length == 0 && !loaded\">\r\n          <app-org-details-employees-list-skeleton></app-org-details-employees-list-skeleton>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"employees.length == 0 && loaded\">\r\n          <p-messages severity=\"warn\">\r\n            <ng-template pTemplate>\r\n              <span class=\"p-message-icon pi pi-exclamation-triangle\"></span>\r\n              <div class=\"p-message-detail\">\r\n                {{ \"noEmployeeInJob\" | translate }}\r\n              </div>\r\n            </ng-template>\r\n          </p-messages>\r\n        </ng-container>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</mat-dialog-content>\r\n","import {Component, HostListener, OnInit, ViewChild} from \"@angular/core\";\r\nimport {DialogPosition, MatDialog} from \"@angular/material/dialog\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {TreeNode} from \"primeng/api\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {Idropdown} from \"app/shared/interfaces/dropdown.interface\";\r\nimport {IJobTitleModel} from \"app/org-management/model/job-title\";\r\nimport {EmployeeCardComponent} from \"../employee-card/employee-card.component\";\r\nimport {JobTitleDetailsDialogComponent} from \"../job-title-details-dialog/job-title-details-dialog.component\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {JobTitleChartService} from \"app/org-management/services/org-structure/job-title-chart.service\";\r\nimport {\r\n    EmployeeJobInformationService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-job-information.service\";\r\nimport {IEmpJobStatusPositionModel} from \"app/personnel-setup/models/employee-employment-info\";\r\nimport {jobTitleChartToMap} from \"app/org-management/mapper/org-structure\";\r\nimport {OrganizationChart} from \"primeng/organizationchart\";\r\nimport {exportChart} from \"../../../export_chart\";\r\n\r\n@Component({\r\n    selector: \"app-job-title-org-chart\",\r\n    templateUrl: \"./job-title-org-chart.component.html\",\r\n    styleUrls: [\"./job-title-org-chart.component.scss\"],\r\n})\r\nexport class JobTitleOrgChartComponent extends AppHelpers implements OnInit {\r\n    // all structure hierarchy\r\n    jobTitleOrgChart: TreeNode<IJobTitleModel>[];\r\n\r\n    form: FormGroup;\r\n    loading: boolean = false;\r\n    lastSelectedJobId: number = 0;\r\n\r\n    searchTypeList: Idropdown[] = [];\r\n    employeeJobTitles: IEmpJobStatusPositionModel[] = [];\r\n    @ViewChild(\"jobTitleChart\") jobTitleChart: OrganizationChart;\r\n\r\n    constructor(\r\n        private jobTitleChartService: JobTitleChartService,\r\n        private employeeJobInformationService: EmployeeJobInformationService,\r\n        private dialog: MatDialog\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form = this.fb.group({\r\n            searchTypeId: [null],\r\n            jobTitleId: [null],\r\n            employeeId: [null],\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.searchTypeList = [\r\n                {\r\n                    id: 1,\r\n                    ar_Name: \"الوظائف\",\r\n                    en_Name: \"Job titles\",\r\n                },\r\n                {\r\n                    id: 2,\r\n                    ar_Name: \"الموظفين\",\r\n                    en_Name: \"Employees\",\r\n                },\r\n            ];\r\n        }, 100);\r\n    }\r\n\r\n    override onChangeBusinessAndCompanyId(): void {\r\n        this.jobTitleOrgChart = null;\r\n        if (this.checkNoBusinessOrCompany())\r\n            this.getJobTitleOrgChart(this.formCtrls.jobTitleId.value);\r\n    }\r\n\r\n    get formCtrls() {\r\n        return this.form.controls;\r\n    }\r\n\r\n    getJobTitleOrgChart(jobTitleId: number) {\r\n        // console.log(this.form.value);\r\n        if (jobTitleId > 0) {\r\n            this.lastSelectedJobId = jobTitleId;\r\n            this.jobTitleOrgChart = null;\r\n            this.loading = true;\r\n            this.jobTitleChartService\r\n                .getJobTitleHierarchy(jobTitleId)\r\n                .pipe(this.cancelRequest())\r\n                .subscribe((res: IResponse<IJobTitleModel[]>) => {\r\n                    if (res.message.messageType == MessageTypes.Success) {\r\n                        this.jobTitleOrgChart = jobTitleChartToMap(res.data);\r\n                        setTimeout(() => {\r\n                            this.setPositionBtnUpOneLevel();\r\n                            this.setPositionUpOneLevelLine();\r\n                        }, 100);\r\n                        if (this.lastSelectedJobId == jobTitleId) this.loading = false;\r\n                    } else {\r\n                        this.errorList(res.message.messages);\r\n                        this.loading = false;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    onChangeSearchType() {\r\n        // console.log(\"change type\");\r\n        this.formCtrls.jobTitleId.reset();\r\n        this.formCtrls.employeeId.reset();\r\n    }\r\n\r\n    // on select job title or employee to start show from it\r\n    onChangeSearchValue() {\r\n        this.getJobTitleOrgChart(this.formCtrls.jobTitleId.value);\r\n    }\r\n\r\n    // up one level in chart\r\n    upOneLevel() {\r\n        this.onChangeSearchType();\r\n        // get job titles start from parent job title id\r\n        this.formCtrls.jobTitleId.setValue(\r\n            this.jobTitleOrgChart[0].data.parentJobTitleID\r\n        );\r\n        // this.getJobTitleOrgChart(this.jobTitleOrgChart[0].data.parentJobTitleID);\r\n    }\r\n\r\n    upOneLevelBtnPositions = {\r\n        btnLeft: 0,\r\n        lineLeft: 0,\r\n    };\r\n\r\n    setPositionBtnUpOneLevel() {\r\n        let btnWidth = document\r\n            .querySelector(\".upOneLevel-btn\")\r\n            .getBoundingClientRect().width;\r\n        let firstNodePositions = document\r\n            .querySelector(\".p-organizationchart-node-content\")\r\n            ?.getBoundingClientRect();\r\n        let firstNodeContainerPositions = document\r\n            .querySelector(\".p-organizationchart\")\r\n            ?.getBoundingClientRect();\r\n\r\n        this.upOneLevelBtnPositions.btnLeft =\r\n            firstNodePositions?.left -\r\n            firstNodeContainerPositions?.left +\r\n            firstNodePositions?.width / 2 -\r\n            btnWidth / 2 ?? 0;\r\n    }\r\n\r\n    setPositionUpOneLevelLine() {\r\n        let firstNodePositions = document\r\n            .querySelector(\".p-organizationchart-node-content\")\r\n            ?.getBoundingClientRect();\r\n        let firstNodeContainerPositions = document\r\n            .querySelector(\".p-organizationchart\")\r\n            ?.getBoundingClientRect();\r\n\r\n        this.upOneLevelBtnPositions.lineLeft =\r\n            firstNodePositions?.left -\r\n            firstNodeContainerPositions?.left +\r\n            firstNodePositions?.width / 2 ?? 0;\r\n    }\r\n\r\n    // node details dialog\r\n    openJobTitleDetailsDialog(\r\n        target: HTMLElement,\r\n        nodeData: IJobTitleModel,\r\n        expandedIndex: number\r\n    ) {\r\n        let targetNode: HTMLElement = this.getHeaderElement(target);\r\n        let targetPositions: DOMRect = targetNode.getBoundingClientRect();\r\n\r\n        let dialogWidth = 350;\r\n        let dialogPositions: DialogPosition = {};\r\n        // can open left\r\n        if (\r\n            targetPositions.left + targetPositions.width + 10 + dialogWidth <=\r\n            window.innerWidth\r\n        )\r\n            dialogPositions.left = `${\r\n                targetPositions.left + targetPositions.width + 10\r\n            }px`;\r\n        // can open right\r\n        else if (targetPositions.left - dialogWidth - 10 >= 0)\r\n            dialogPositions.left = `${targetPositions.left - dialogWidth - 10}px`;\r\n        // no left and no right\r\n        else dialogPositions.left = null;\r\n\r\n        return this.dialog\r\n            .open(JobTitleDetailsDialogComponent, {\r\n                data: {\r\n                    nodeData: nodeData,\r\n                    expandedIndex: expandedIndex,\r\n                },\r\n                position: dialogPositions,\r\n                width: `${dialogWidth}px`,\r\n                // maxWidth: \"350px\",\r\n                maxHeight: \"90hv\",\r\n                // disableClose: true,\r\n                autoFocus: false,\r\n            })\r\n            .afterClosed()\r\n            .subscribe((closed: boolean) => {\r\n            });\r\n    }\r\n\r\n    getHeaderElement(target: HTMLElement): HTMLElement {\r\n        return target.classList.contains(\"p-organizationchart-node-content\")\r\n            ? target\r\n            : this.getHeaderElement(target.parentElement);\r\n    }\r\n\r\n    // expand node\r\n    expandNode(node: TreeNode) {\r\n        node.expanded = !node.expanded;\r\n    }\r\n\r\n    // // assign employee to job title\r\n    // openAssignDialog(nodeData: IJobTitleModel) {\r\n    //   return this.dialog\r\n    //     .open(AssignEmployeeToJobTitleComponent, {\r\n    //       data: {\r\n    //         nodeData: nodeData,\r\n    //       },\r\n    //       minWidth: \"50vw\",\r\n    //       autoFocus: false,\r\n    //     })\r\n    //     .afterClosed()\r\n    //     .subscribe((updated: boolean) => {\r\n    //       if (updated) {\r\n    //         // to do >> get first node job title id\r\n    //         this.getJobTitleOrgChart(this.jobTitleOrgChart[0].data.id);\r\n    //       }\r\n    //     });\r\n    // }\r\n\r\n    // open employee card dialog\r\n    openEmployeeCardDialog(target: HTMLElement, employeeId: number) {\r\n        let lastTarget: HTMLElement = this.getHeaderElement(target);\r\n        let targetPositions: DOMRect = lastTarget.getBoundingClientRect();\r\n\r\n        // dialog position x-axis (right or left)\r\n        let dialogWidth = 350;\r\n        let dialogPositions: DialogPosition = {};\r\n        // can open left\r\n        if (\r\n            targetPositions.left + targetPositions.width / 2 + dialogWidth <=\r\n            window.innerWidth\r\n        )\r\n            dialogPositions.left = `${\r\n                targetPositions.left + targetPositions.width / 2\r\n            }px`;\r\n        // can open right\r\n        else if (\r\n            targetPositions.left - dialogWidth / 2 - targetPositions.width / 2 + 10 >=\r\n            0\r\n        )\r\n            dialogPositions.left = `${\r\n                targetPositions.left - dialogWidth / 2 - targetPositions.width / 2 + 10\r\n            }px`;\r\n        // no left and no right\r\n        else dialogPositions.left = null;\r\n\r\n        return this.dialog\r\n            .open(EmployeeCardComponent, {\r\n                data: {employeeId: employeeId},\r\n                position: dialogPositions,\r\n                width: `${dialogWidth}px`,\r\n                // maxWidth: \"350px\",\r\n                maxHeight: \"80hv\",\r\n                autoFocus: false,\r\n            })\r\n            .afterClosed()\r\n            .subscribe((closed: boolean) => {\r\n            });\r\n    }\r\n\r\n\r\n    // change up one level btn & line positions\r\n    @HostListener(\"window:resize\", [\"$event\"])\r\n    onWindowResize(event) {\r\n        // this.dialog.closeAll();\r\n        this.setPositionBtnUpOneLevel();\r\n        this.setPositionUpOneLevelLine();\r\n    }\r\n\r\n    // displayAssignEmployeeIcon(jobTitle: IJobTitleModel): boolean {\r\n    //   let display = false;\r\n    //   jobTitle.core_Org_Job_Title.map((item) => {\r\n    //     if (\r\n    //       item.max_Employee == 0 ||\r\n    //       item.currentEmployeeNumber <= item.max_Employee\r\n    //     )\r\n    //       display = true;\r\n    //   });\r\n    //   return display;\r\n    // }\r\n\r\n    getAllEmployeeJobTitles() {\r\n        let employeeId: number = this.formCtrls.employeeId.value;\r\n        if (employeeId > 0) {\r\n            this.showLoading();\r\n            this.employeeJobInformationService\r\n                .getAllCurrentJobsByEmployeeId(employeeId)\r\n                .pipe(this.cancelRequest())\r\n                .subscribe((res: IResponse<IEmpJobStatusPositionModel[]>) => {\r\n                    if (res.message.messageType == MessageTypes.Success) {\r\n                        this.employeeJobTitles = res.data;\r\n                    } else this.errorList(res.message.messages);\r\n                    this.hideLoading();\r\n                });\r\n        }\r\n    }\r\n\r\n    protected readonly exportChart = exportChart;\r\n}\r\n","<div class=\"organizationchart-container job-title-chart\">\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row mx-0\">\r\n      <div class=\"col-md-3 col-12\">\r\n        <app-prime-dropdown\r\n          [control]=\"formCtrls.searchTypeId\"\r\n          [List]=\"searchTypeList\"\r\n          label=\"searchBy\"\r\n          (change)=\"onChangeSearchType()\"\r\n        ></app-prime-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-3 col-12\">\r\n        <app-job-title-dropdown\r\n          *ngIf=\"formCtrls.searchTypeId.value == 1\"\r\n          [control]=\"formCtrls.jobTitleId\"\r\n          [filter]=\"true\"\r\n          (change)=\"onChangeSearchValue()\"\r\n        ></app-job-title-dropdown>\r\n\r\n        <app-employee-dropdown\r\n          *ngIf=\"formCtrls.searchTypeId.value == 2\"\r\n          [control]=\"formCtrls.employeeId\"\r\n          [filter]=\"true\"\r\n          (change)=\"getAllEmployeeJobTitles()\"\r\n        ></app-employee-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-3 col-12\" *ngIf=\"formCtrls.employeeId.value > 0\">\r\n        <app-prime-dropdown\r\n          [control]=\"formCtrls.jobTitleId\"\r\n          [filter]=\"true\"\r\n          (change)=\"onChangeSearchValue()\"\r\n          [List]=\"employeeJobTitles\"\r\n          label=\"jobTitle\"\r\n        ></app-prime-dropdown>\r\n      </div>\r\n\r\n      <div\r\n        class=\"col-md-3 col-12\"\r\n        [class.col-md-6]=\"!(formCtrls.employeeId.value > 0)\"\r\n      >\r\n        <div class=\"float-right\" *ngIf=\"jobTitleOrgChart != null\">\r\n          <i\r\n            class=\"ft-image font-large-1 info m-1\"\r\n            (click)=\"exportChart(jobTitleChart, 'jobTitleChart', 'image')\"\r\n            matTooltip=\"{{ 'exportAsImage' | translate }}\"\r\n          ></i>\r\n          <i\r\n            class=\"ft-file font-large-1 info m-1\"\r\n            (click)=\"exportChart(jobTitleChart, 'jobTitleChart', 'pdf')\"\r\n            matTooltip=\"{{ 'exportAsPdf' | translate }}\"\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div\r\n    class=\"upOneLevel-btn-container\"\r\n    [class.hidden]=\"\r\n      !(jobTitleOrgChart && jobTitleOrgChart[0]?.data?.parentJobTitleID > 0)\r\n    \"\r\n  >\r\n    <button\r\n      mat-button\r\n      class=\"btn bg-light-info upOneLevel-btn\"\r\n      [style.left.px]=\"upOneLevelBtnPositions.btnLeft\"\r\n      (click)=\"upOneLevel()\"\r\n    >\r\n      <i class=\"pi pi-angle-up\"></i>\r\n      {{ \"upOneLevel\" | translate }}\r\n    </button>\r\n    <div [style.left.px]=\"upOneLevelBtnPositions.lineLeft\"></div>\r\n  </div>\r\n  <div id=\"jobTitleChart\">\r\n    <p-organizationChart\r\n      [value]=\"jobTitleOrgChart\"\r\n      [preserveSpace]=\"false\"\r\n      #jobTitleChart\r\n    >\r\n      <ng-template let-node pTemplate=\"job-title\">\r\n        <div\r\n          class=\"node-header\"\r\n          [id]=\"node.data.id\"\r\n          (click)=\"openJobTitleDetailsDialog($event.target, node.data, 0)\"\r\n        >\r\n          <span [class]=\"msgTranslate('mleft-10', 'mright-10')\">\r\n            {{ node.data.code }} -\r\n            {{ msgTranslate(node.data.ar_Name, node.data.en_Name) }}\r\n          </span>\r\n\r\n          <div class=\"node-content main-data\">\r\n            <!-- job Family -->\r\n            <p>\r\n              {{\r\n                msgTranslate(\r\n                  node.data.core_Job_Title_Family?.ar_Name,\r\n                  node.data.core_Job_Title_Family?.en_Name\r\n                )\r\n              }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"node-content\">\r\n          <!-- <div class=\"icon\" *ngIf=\"displayAssignEmployeeIcon(node.data)\">\r\n            <i\r\n              class=\"pi pi-user-plus info\"\r\n              (click)=\"openAssignDialog(node.data)\"\r\n            >\r\n            </i>\r\n          </div> -->\r\n\r\n          <div\r\n            class=\"employees-no-section\"\r\n            *ngIf=\"node.data.core_Person_Instance_Job_Title?.length > 0\"\r\n          >\r\n            <i\r\n              class=\"pi pi-users\"\r\n              (click)=\"openJobTitleDetailsDialog($event.target, node.data, 1)\"\r\n            >\r\n              {{ node.data.core_Person_Instance_Job_Title.length }}\r\n            </i>\r\n          </div>\r\n\r\n          <!-- <ng-container\r\n            *ngIf=\"node.data.core_Person_Instance_Job_Title?.length > 0\"\r\n          >\r\n            <div class=\"employees-names\">\r\n              <p\r\n                *ngFor=\"let emp of node.data.core_Person_Instance_Job_Title\"\r\n                (click)=\"\r\n                  openEmployeeCardDialog($event.target, emp.person_Instance_ID)\r\n                \"\r\n              >\r\n                {{\r\n                  msgTranslate(\r\n                    emp.core_Person_Instance?.core_Person?.ar_Name,\r\n                    emp.core_Person_Instance?.core_Person?.en_Name\r\n                  )\r\n                }}\r\n              </p>\r\n            </div>\r\n          </ng-container> -->\r\n\r\n          <div\r\n            class=\"fte-content\"\r\n            *ngIf=\"node.data.core_Org_Job_Title?.length > 0\"\r\n          >\r\n            <p *ngFor=\"let orgJob of node.data.core_Org_Job_Title\">\r\n              {{\r\n                msgTranslate(orgJob.core_Org?.ar_Name, orgJob.core_Org?.en_Name)\r\n              }}\r\n              ( {{ orgJob.currentEmployeeNumber ?? 0 }} /\r\n              {{\r\n                orgJob.max_Employee == 0\r\n                  ? translate(\"unlimited\")\r\n                  : orgJob.max_Employee\r\n              }}\r\n              FTE )\r\n            </p>\r\n          </div>\r\n\r\n          <div\r\n            class=\"node-footer info\"\r\n            (click)=\"expandNode(node)\"\r\n            *ngIf=\"node.children.length > 0\"\r\n          >\r\n            {{ node.children.length }}\r\n            {{\r\n              (node.children.length == 1 ? \"jobTitleBelow\" : \"jobTitlesBelow\")\r\n                | translate\r\n            }}\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </p-organizationChart>\r\n  </div>\r\n\r\n  <app-chart-skeleton *ngIf=\"loading\" [width]=\"280\"></app-chart-skeleton>\r\n</div>\r\n","import { Component, HostListener, Inject, OnInit } from \"@angular/core\";\r\nimport { DialogPosition, MAT_DIALOG_DATA, MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { GroupByService } from \"app/shared/services/group-by.service\";\r\nimport { EmployeeCardComponent } from \"../employee-card/employee-card.component\";\r\nimport { ICompanyNodeChartData } from \"app/org-management/model/org-structure\";\r\nimport { IPerson } from \"app/personnel-setup/models/employees\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { EmployeesService } from \"app/personnel-setup/services/employees/employees.service\";\r\n\r\n@Component({\r\n\tselector: \"app-org-details-employees\",\r\n\ttemplateUrl: \"./org-details-employees.component.html\",\r\n\tstyleUrls: [\"./org-details-employees.component.scss\"],\r\n})\r\nexport class OrgDetailsEmployeesComponent extends AppHelpers implements OnInit {\r\n\tnodeData: ICompanyNodeChartData;\r\n\texpandedIndex: number = 0;\r\n\temployees: IPerson[] = [];\r\n\temployeesGroups: {\r\n\t\tkey: string;\r\n\t\tList: any[];\r\n\t}[];\r\n\temployeesGroupsFiltered: {\r\n\t\tkey: string;\r\n\t\tList: any[];\r\n\t}[];\r\n\tloaded: boolean = false;\r\n\tconstructor(\r\n\t\tprivate employeesService: EmployeesService,\r\n\t\tprivate groupByService: GroupByService,\r\n\t\t// opened ass dialog\r\n\t\tpublic dialogRef: MatDialogRef<OrgDetailsEmployeesComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n\t\t// to open another dialog\r\n\t\tprivate dialog: MatDialog\r\n\t) {\r\n\t\tsuper();\r\n\t\tthis.expandedIndex = data.expandedIndex;\r\n\t\tthis.nodeData = data.nodeData;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tif (\r\n\t\t\tthis.checkNoBusinessOrCompany() &&\r\n\t\t\tthis.nodeData.structureId > 0 &&\r\n\t\t\tthis.nodeData.org.id > 0\r\n\t\t)\r\n\t\t\tthis.getEmployeesByOrgId();\r\n\r\n\t\tconst overlays = document.querySelectorAll(\".cdk-overlay-backdrop\");\r\n\t\tif (overlays.length > 0) overlays[overlays.length - 1].classList.add(\"no-overlay\");\r\n\t}\r\n\r\n\tgetEmployeesByOrgId() {\r\n\t\tthis.employeesService\r\n\t\t\t.getAllByStructureAndOrgId(this.nodeData.structureId, this.nodeData.org.id)\r\n\t\t\t.pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IPerson[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.employees = res.data;\r\n\t\t\t\t\tif (this.employees.length > 0) this.sortAndGroupEmployees();\r\n\t\t\t\t\telse this.loaded = true;\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsortAndGroupEmployees() {\r\n\t\tthis.employeesGroups = this.groupByService\r\n\t\t\t.groupByPartOfProperty(\r\n\t\t\t\tthis.employees,\r\n\t\t\t\tthis.languageService.isArabic ? \"ar_Name\" : \"en_Name\",\r\n\t\t\t\t1\r\n\t\t\t)\r\n\t\t\t.sort((a, b) => {\r\n\t\t\t\tif (a.key < b.key) return -1;\r\n\t\t\t\tif (a.key > b.key) return 1;\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\t\tthis.employeesGroupsFiltered = this.employeesGroups.slice();\r\n\t\tthis.loaded = true;\r\n\t}\r\n\r\n\t// open employee card dialog\r\n\topenEmployeeCardDialog(target: HTMLElement, employeeId: number) {\r\n\t\tlet lastTarget: HTMLElement = this.getHeaderElement(target);\r\n\t\tlet targetPositions: DOMRect = lastTarget.getBoundingClientRect();\r\n\r\n\t\t// dialog position x-axis (right or left)\r\n\t\tlet dialogWidth = 350;\r\n\t\tlet dialogPositions: DialogPosition = {};\r\n\t\t// can open left\r\n\t\tif (targetPositions.left + targetPositions.width / 2 + dialogWidth <= window.innerWidth)\r\n\t\t\tdialogPositions.left = `${targetPositions.left + targetPositions.width / 2}px`;\r\n\t\t// can open right\r\n\t\telse if (targetPositions.left - dialogWidth / 2 - 10 >= 0)\r\n\t\t\tdialogPositions.left = `${targetPositions.left - dialogWidth / 2 - 10}px`;\r\n\t\t// no left and no right\r\n\t\telse dialogPositions.left = null;\r\n\r\n\t\treturn this.dialog\r\n\t\t\t.open(EmployeeCardComponent, {\r\n\t\t\t\tdata: { employeeId: employeeId },\r\n\t\t\t\tposition: dialogPositions,\r\n\t\t\t\twidth: `${dialogWidth}px`,\r\n\t\t\t\t// maxWidth: \"350px\",\r\n\t\t\t\tmaxHeight: \"80hv\",\r\n\t\t\t\tautoFocus: false,\r\n\t\t\t})\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((closed: boolean) => {});\r\n\t}\r\n\r\n\tgetHeaderElement(target: HTMLElement): HTMLElement {\r\n\t\treturn target.classList.contains(\"mat-expansion-panel-body\")\r\n\t\t\t? target\r\n\t\t\t: this.getHeaderElement(target.parentElement);\r\n\t}\r\n\r\n\t// search in employees\r\n\tsearchEmployees(searchName: string) {\r\n\t\tthis.employeesGroupsFiltered = this.employeesGroups\r\n\t\t\t.map((item) => ({\r\n\t\t\t\tkey: item.key,\r\n\t\t\t\tList: item.List.filter(\r\n\t\t\t\t\t(emp) =>\r\n\t\t\t\t\t\temp.en_Name.toLowerCase().includes(searchName.toLowerCase()) ||\r\n\t\t\t\t\t\temp.ar_Name.toLowerCase().includes(searchName.toLowerCase())\r\n\t\t\t\t),\r\n\t\t\t}))\r\n\t\t\t.filter((item) => item.List.length > 0);\r\n\t}\r\n\r\n\t// close dilog on resize screen\r\n\t@HostListener(\"window:resize\", [\"$event\"])\r\n\tonWindowResize(event) {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"details-dialog-title\">\r\n  <div class=\"mb-2\">\r\n    <h6 class=\"type-name info\">\r\n      {{ nodeData.org.code }} -\r\n      {{ msgTranslate(nodeData.org.ar_Name, nodeData.org.en_Name) }}\r\n    </h6>\r\n\r\n    <button mat-icon-button class=\"float-right mb-1\" [mat-dialog-close]=\"false\">\r\n      <i class=\"pi pi-times\"></i>\r\n    </button>\r\n  </div>\r\n\r\n  <p class=\"org-name\">\r\n    {{\r\n      msgTranslate(nodeData.orgType.ar_Name, nodeData.orgType.en_Name) ??\r\n        translate(\"orgTypeDeleted\")\r\n    }}\r\n  </p>\r\n</div>\r\n\r\n<mat-dialog-content class=\"details-dialog company\">\r\n  <mat-accordion multi>\r\n    <!-- <mat-expansion-panel [expanded]=\"expandedIndex == 0\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>{{ \"details\" | translate }}</mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"expantion-body\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>{{ \"code\" | translate | titlecase }}</th>\r\n              <td>{{ nodeData.org.code }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>{{ \"name\" | translate | titlecase }}</th>\r\n              <td>\r\n                {{ msgTranslate(nodeData.org.ar_Name, nodeData.org.en_Name) }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </mat-expansion-panel> -->\r\n\r\n    <mat-expansion-panel [expanded]=\"expandedIndex == 1\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>{{ \"employees\" | translate }}</mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"expantion-body\">\r\n        <ng-container *ngIf=\"employees.length > 0 && loaded\">\r\n          <input\r\n            class=\"form-control mbottom-15\"\r\n            (keyup)=\"searchEmployees($event.target.value)\"\r\n            placeholder=\"{{ 'search' | translate }}\"\r\n          />\r\n          <ng-container *ngFor=\"let group of employeesGroupsFiltered\">\r\n            <div class=\"key-emp\">{{ group.key }}</div>\r\n            <div role=\"button\">\r\n              <p\r\n                *ngFor=\"let employee of group.List\"\r\n                (click)=\"openEmployeeCardDialog($event.target, employee.id)\"\r\n                class=\"name-container\"\r\n              >\r\n                <!-- [matTooltip]=\"msgTranslate(employee.ar_Name, employee.en_Name)\" -->\r\n                <span\r\n                  class=\"img-small-icon\"\r\n                  [class]=\"msgTranslate('mleft-10', 'mright-10')\"\r\n                >\r\n                  <i class=\"pi pi-user\"></i>\r\n                </span>\r\n                <span class=\"emp-name\">\r\n                  {{ msgTranslate(employee.ar_Name, employee.en_Name) }}\r\n                </span>\r\n                <!-- <i\r\n                  class=\"pi pi-id-card mx-2 font-medium-3 info\"\r\n                  (click)=\"openEmployeeCardDialog($event.target, employee.id)\"\r\n                ></i> -->\r\n              </p>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"employees.length == 0 && !loaded\">\r\n          <app-org-details-employees-list-skeleton></app-org-details-employees-list-skeleton>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"employees.length == 0 && loaded\">\r\n          <p-messages severity=\"warn\">\r\n            <ng-template pTemplate>\r\n              <span class=\"p-message-icon pi pi-exclamation-triangle\"></span>\r\n              <div class=\"p-message-detail\">\r\n                {{ \"noEmployeeInOrg\" | translate }}\r\n              </div>\r\n            </ng-template>\r\n          </p-messages>\r\n        </ng-container>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</mat-dialog-content>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { orgKpiDisplay } from \"app/org-management/mapper/org-kpi\";\r\nimport {\r\n  IOrgKpiModel,\r\n  IOrgKpiRequest,\r\n} from \"app/org-management/model/org-kpis\";\r\nimport { OrgKpisService } from \"app/org-management/services/org-structure/org-kpis.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-org-kpis\",\r\n  templateUrl: \"./org-kpis.component.html\",\r\n  styleUrls: [\"./org-kpis.component.scss\"],\r\n})\r\nexport class OrgKpisComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\"Ser\", \"kpi\", \"actions\"];\r\n  isLoaded: boolean = true;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IOrgKpiModel>;\r\n\r\n  constructor(public orgKpisService: OrgKpisService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNullable: true }],\r\n      OrgTypeId: [null, [Validators.required]],\r\n      OrgId: [null, [Validators.required]],\r\n      KPI_Id: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    // if (this.checkNoBusinessOrCompany()) {\r\n    // }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n\r\n    let orgId = this.formCtrls.OrgId.value;\r\n    if (orgId > 0) {\r\n      this.isLoaded = false;\r\n      this.page.pageIndex = page;\r\n      if (pageSize) this.page.pageSize = pageSize;\r\n      let params: IPageParams = {\r\n        PageNumber: page,\r\n        pageSize: this.page.pageSize,\r\n      };\r\n      this.orgKpisService\r\n        .getList(params, orgId)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<IOrgKpiModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(orgKpiDisplay(res.data));\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n          } else this.errorList(res.message.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IOrgKpiRequest = {\r\n        OrgId: this.form.value.OrgId,\r\n        KPI_Id: this.form.value.KPI_Id,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IOrgKpiRequest) {\r\n    this.showLoading();\r\n    this.orgKpisService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IOrgKpiModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.lastPage);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(kpi: IOrgKpiModel): void {\r\n    let msg = kpi.kpi;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(kpi);\r\n    });\r\n  }\r\n\r\n  delete(kpi: IOrgKpiModel) {\r\n    this.showLoading();\r\n    this.orgKpisService.Delete(kpi.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.formCtrls.KPI_Id.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title title=\"orgKpis\"> </page-title>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          url=\"/org-management/{{ moduleId }}/org-structure\"\r\n          [params]=\"pageParams\"\r\n        >\r\n        </app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-org-types-dropdown-current-structure\r\n                    [control]=\"formCtrls.OrgTypeId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-org-types-dropdown-current-structure>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-organization-by-org-type-dropdown\r\n                    [control]=\"formCtrls.OrgId\"\r\n                    [orgTypeControl]=\"formCtrls.OrgTypeId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    (change)=\"getList(firstPage)\"\r\n                  >\r\n                  </app-organization-by-org-type-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-kpi-dropdown\r\n                    [control]=\"formCtrls.KPI_Id\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-kpi-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn (onClick)=\"submit()\"> </submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"formCtrls.OrgId.value > 0\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <!-- [exportService]=\"orgKpisService\" -->\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-org-structure-details\",\r\n  templateUrl: \"./org-structure-details.component.html\",\r\n  styleUrls: [\"./org-structure-details.component.scss\"],\r\n})\r\nexport class OrgStructureDetailsComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  orgStructureId: number = 0;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.orgStructureId = Number(params.get(\"orgStructureId\")) ?? 0;\r\n    });\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title title=\"orgStructureDetails\"> </page-title>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          url=\"/org-management/{{ moduleId }}/org-structure/index\"\r\n          [params]=\"pageParams\"\r\n        ></app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <!-- chart -->\r\n      <app-org-structure-hierarchy-details\r\n        *ngIf=\"orgStructureId > 0\"\r\n        [orgStructureId]=\"orgStructureId\"\r\n        [canNotEdit]=\"true\"\r\n      ></app-org-structure-hierarchy-details>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { DialogPosition, MatDialog } from \"@angular/material/dialog\";\r\nimport { IOrganizationModel } from \"app/org-management-setup/models/organizations\";\r\nimport { OrganizationsService } from \"app/org-management-setup/services/organizations.service\";\r\nimport {\r\n  ICompanyNodeChartData,\r\n  IOrgStructureModel,\r\n  IOrgStructureNodeDeleteParams,\r\n} from \"app/org-management/model/org-structure\";\r\nimport { OrgStructureService } from \"app/org-management/services/org-structure/org-structure.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { TreeNode } from \"primeng/api\";\r\nimport { AddOrgStructureNodeComponent } from \"../add-org-structure-node/add-org-structure-node.component\";\r\nimport { OrgDetailsEmployeesComponent } from \"../org-details-employees/org-details-employees.component\";\r\nimport { companyChartToMap } from \"app/org-management/mapper/org-structure\";\r\nimport { OrganizationChart } from \"primeng/organizationchart\";\r\nimport { exportChart } from \"app/org-management/export_chart\";\r\n\r\n@Component({\r\n  selector: \"app-org-structure-hierarchy-details\",\r\n  templateUrl: \"./org-structure-hierarchy-details.component.html\",\r\n  styleUrls: [\"./org-structure-hierarchy-details.component.scss\"],\r\n})\r\nexport class OrgStructureHierarchyDetailsComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  @Input() orgStructureId: number;\r\n  @Input() canNotEdit: boolean;\r\n\r\n  // all structure hierarchy\r\n  orgStructureDetails: TreeNode<ICompanyNodeChartData>[];\r\n  // selected part of structure hierarchy to show\r\n  orgStructureDetailsFiltered: TreeNode<ICompanyNodeChartData>[] = [];\r\n  // organization dropdown\r\n  organizationList: IOrganizationModel[] = [];\r\n\r\n  form: FormGroup;\r\n  loading: boolean = true;\r\n  @ViewChild(\"companyChart\") companyChart: OrganizationChart;\r\n\r\n  constructor(\r\n    private orgStructureService: OrgStructureService,\r\n    private organizationsService: OrganizationsService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      organizationTypeId: [null],\r\n      organization_ID: [\r\n        {\r\n          value: null,\r\n          disabled: true,\r\n        },\r\n      ],\r\n    });\r\n\r\n    // if (this.orgStructureId > 0 && this.CheckNoBusinessOrCompany()) {\r\n    //   this.getStructureDetails();\r\n    // }\r\n\r\n    this.formCtrls.organization_ID.valueChanges.subscribe((orgId) => {\r\n      // if orgId == 0 > don't change any thing\r\n      if (orgId == null || orgId > 0) this.onChangeOrg(orgId);\r\n    });\r\n  }\r\n\r\n  firstOnChange: boolean = true;\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // console.log(changes);\r\n    if (changes.orgStructureId)\r\n      this.firstOnChange\r\n        ? (this.firstOnChange = false)\r\n        : this.onChangeBusinessAndCompanyId();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.orgStructureId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.getStructureDetails();\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getStructureDetails() {\r\n    // this.showLoading();\r\n    this.loading = true;\r\n    this.orgStructureDetails = null;\r\n    this.orgStructureDetailsFiltered = [];\r\n    this.orgStructureService\r\n      .getByIdWithHierarchy(this.orgStructureId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IOrgStructureModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.orgStructureDetails = companyChartToMap(\r\n            res.data[0],\r\n            this.orgStructureId\r\n          );\r\n          this.orgStructureDetailsFiltered = this.orgStructureDetails.slice();\r\n          this.loading = false;\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.loading = false;\r\n        }\r\n        // this.hideLoading();\r\n      });\r\n  }\r\n\r\n  // on select organization to start show from it\r\n  onChangeOrg(orgId: number) {\r\n    this.orgStructureDetailsFiltered = [];\r\n    if (orgId > 0) this.getChartDataByOrg(orgId, this.orgStructureDetails[0]);\r\n    else this.orgStructureDetailsFiltered = this.orgStructureDetails;\r\n  }\r\n\r\n  getChartDataByOrg(orgId: number, item: TreeNode<ICompanyNodeChartData>) {\r\n    item.children.map((item) => {\r\n      if (item.data.org.id == orgId) {\r\n        this.orgStructureDetailsFiltered = [item];\r\n        setTimeout(() => {\r\n          this.setPositionBtnUpOneLevel();\r\n          this.setPositionUpOneLevelLine();\r\n        }, 50);\r\n        return;\r\n      }\r\n    });\r\n    item.children.map((childItem) => this.getChartDataByOrg(orgId, childItem));\r\n  }\r\n\r\n  // up one level in chart\r\n  upOneLevel() {\r\n    this.formCtrls.organization_ID.setValue(0);\r\n    let parentOrgId = this.orgStructureDetailsFiltered[0].data.parentId;\r\n    if (parentOrgId)\r\n      this.getChartDataByOrg(parentOrgId, this.orgStructureDetails[0]);\r\n    // if up from one company node to get all companies\r\n    else this.orgStructureDetailsFiltered = this.orgStructureDetails;\r\n  }\r\n\r\n  upOneLevelBtnPositions = {\r\n    btnLeft: 0,\r\n    lineLeft: 0,\r\n  };\r\n  setPositionBtnUpOneLevel() {\r\n    let btnWidth = document\r\n      .querySelector(\".upOneLevel-btn\")\r\n      .getBoundingClientRect().width;\r\n    let firstNodePositions = document\r\n      .querySelector(\".p-organizationchart-node-content\")\r\n      ?.getBoundingClientRect();\r\n    let firstNodeContainerPositions = document\r\n      .querySelector(\".p-organizationchart\")\r\n      ?.getBoundingClientRect();\r\n\r\n    this.upOneLevelBtnPositions.btnLeft =\r\n      firstNodePositions?.left -\r\n        firstNodeContainerPositions?.left +\r\n        firstNodePositions?.width / 2 -\r\n        btnWidth / 2 ?? 0;\r\n  }\r\n  setPositionUpOneLevelLine() {\r\n    let firstNodePositions = document\r\n      .querySelector(\".p-organizationchart-node-content\")\r\n      ?.getBoundingClientRect();\r\n    let firstNodeContainerPositions = document\r\n      .querySelector(\".p-organizationchart\")\r\n      ?.getBoundingClientRect();\r\n\r\n    this.upOneLevelBtnPositions.lineLeft =\r\n      firstNodePositions?.left -\r\n        firstNodeContainerPositions?.left +\r\n        firstNodePositions?.width / 2 ?? 0;\r\n  }\r\n\r\n  // delete node\r\n  onDelete(node: TreeNode<ICompanyNodeChartData>): void {\r\n    let msg = this.msgTranslate(node.data.org.ar_Name, node.data.org.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.deleteNode(node);\r\n    });\r\n  }\r\n\r\n  deleteNode(node: TreeNode<ICompanyNodeChartData>) {\r\n    let params: IOrgStructureNodeDeleteParams = {\r\n      StructureID: this.orgStructureId,\r\n      OrgID: node.data.org.id,\r\n    };\r\n    this.showLoading();\r\n    this.orgStructureService.DeleteNode(params).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.getStructureDetails();\r\n        // update exist organization dropdown after delete organization\r\n        this.getAllOrganizationsByOrgType();\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  // add, edit node dialog\r\n  openAddEditDialog(\r\n    node: TreeNode<ICompanyNodeChartData> /* , isAdd: boolean */\r\n  ) {\r\n    return this.dialog\r\n      .open(AddOrgStructureNodeComponent, {\r\n        data: {\r\n          org_Structure_ID: this.orgStructureId,\r\n          parenT_ID: node.data.org?.id ?? null,\r\n          // parenT_ID: isAdd ? node.data.org?.id ?? null : node.data.parentId,\r\n          // orG_TYPE_ID: isAdd ? 0 : node.data.orgType.id,\r\n          // orG_ID: isAdd ? 0 : node.data.org.id,\r\n          // currentOrganization: isAdd ? null : node.data.org,\r\n        },\r\n        minWidth: \"50vw\",\r\n        autoFocus: false,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.getStructureDetails();\r\n          // update exist organization dropdown after add organization\r\n          this.getAllOrganizationsByOrgType();\r\n        }\r\n      });\r\n  }\r\n\r\n  // node details dialog\r\n  openOrgDetailsDialog(\r\n    target: HTMLElement,\r\n    nodeData: ICompanyNodeChartData,\r\n    expandedIndex: number\r\n  ) {\r\n    let targetNode: HTMLElement = this.getHeaderElement(target);\r\n    let targetPositions: DOMRect = targetNode.getBoundingClientRect();\r\n\r\n    let dialogWidth = 350;\r\n    let dialogPositions: DialogPosition = {};\r\n    // can open left\r\n    if (\r\n      targetPositions.left + targetPositions.width + 10 + dialogWidth <=\r\n      window.innerWidth\r\n    )\r\n      dialogPositions.left = `${\r\n        targetPositions.left + targetPositions.width + 10\r\n      }px`;\r\n    // can open right\r\n    else if (targetPositions.left - dialogWidth - 10 >= 0)\r\n      dialogPositions.left = `${targetPositions.left - dialogWidth - 10}px`;\r\n    // no left and no right\r\n    else dialogPositions.left = null;\r\n\r\n    return this.dialog\r\n      .open(OrgDetailsEmployeesComponent, {\r\n        data: {\r\n          org_Structure_ID: this.orgStructureId,\r\n          nodeData: nodeData,\r\n          // 0 > details // 1 >> employees\r\n          expandedIndex: expandedIndex,\r\n        },\r\n        position: dialogPositions,\r\n        width: `${dialogWidth}px`,\r\n        // maxWidth: \"350px\",\r\n        maxHeight: \"90hv\",\r\n        // disableClose: true,\r\n        autoFocus: false,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((closed: boolean) => {});\r\n  }\r\n\r\n  getHeaderElement(target: HTMLElement): HTMLElement {\r\n    return target.classList.contains(\"p-organizationchart-node-content\")\r\n      ? target\r\n      : this.getHeaderElement(target.parentElement);\r\n  }\r\n\r\n  // expand node\r\n  expandNode(node: TreeNode) {\r\n    node.expanded = !node.expanded;\r\n  }\r\n\r\n  // organization list\r\n  getAllOrganizationsByOrgType() {\r\n    let orgTypeId: number = this.formCtrls.organizationTypeId.value;\r\n    this.formCtrls.organization_ID.setValue(null);\r\n    if (orgTypeId > 0) {\r\n      // this.showLoading();\r\n      this.organizationsService\r\n        .GetAllByOrgTypeAndStructure(orgTypeId, this.orgStructureId)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponse<IOrganizationModel[]>) => {\r\n          if ((res.message.messageType = MessageTypes.Success)) {\r\n            this.organizationList = res.data;\r\n          } else this.errorList(res.message.messages);\r\n          // this.hideLoading();\r\n        });\r\n      this.formCtrls.organization_ID.enable();\r\n    } else this.formCtrls.organization_ID.disable();\r\n  }\r\n\r\n  // change up one level btn & line positions\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onWindowResize(event) {\r\n    // this.dialog.closeAll();\r\n    this.setPositionBtnUpOneLevel();\r\n    this.setPositionUpOneLevelLine();\r\n  }\r\n\r\n  protected readonly exportChart = exportChart;\r\n}\r\n","<p-toast></p-toast>\r\n<ngx-spinner></ngx-spinner>\r\n\r\n<mat-tab-group\r\n  class=\"col-12 w-100\"\r\n  [dir]=\"languageService.isArabic ? 'rtl' : 'ltr'\"\r\n  *ngIf=\"orgStructureId > 0\"\r\n>\r\n  <mat-tab label=\"{{ 'companyOrgStructure' | translate | titlecase }}\">\r\n    <div\r\n      class=\"organizationchart-container company-chart\"\r\n      [class.ar]=\"languageService.isArabic\"\r\n    >\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row mx-0\" *ngIf=\"!loading\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-org-types-dropdown\r\n              [control]=\"formCtrls.organizationTypeId\"\r\n              (change)=\"getAllOrganizationsByOrgType()\"\r\n              [filter]=\"true\"\r\n            ></app-org-types-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-prime-dropdown\r\n              [control]=\"formCtrls.organization_ID\"\r\n              label=\"organization\"\r\n              [List]=\"organizationList\"\r\n            >\r\n            </app-prime-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <div class=\"float-right\">\r\n              <i\r\n                class=\"ft-image font-large-1 info m-1\"\r\n                (click)=\"exportChart(companyChart, 'companyChart', 'image')\"\r\n                matTooltip=\"{{ 'exportAsImage' | translate }}\"\r\n              ></i>\r\n              <i\r\n                class=\"ft-file font-large-1 info m-1\"\r\n                (click)=\"exportChart(companyChart, 'companyChart', 'pdf')\"\r\n                matTooltip=\"{{ 'exportAsPdf' | translate }}\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div\r\n        class=\"upOneLevel-btn-container\"\r\n        [class.hidden]=\"\r\n          !(\r\n            orgStructureDetailsFiltered &&\r\n            orgStructureDetailsFiltered[0]?.data?.parentId > 0\r\n          )\r\n        \"\r\n      >\r\n        <button\r\n          mat-button\r\n          class=\"btn bg-light-info upOneLevel-btn\"\r\n          [style.left.px]=\"upOneLevelBtnPositions.btnLeft\"\r\n          (click)=\"upOneLevel()\"\r\n        >\r\n          <i class=\"pi pi-angle-up\"></i>\r\n          {{ \"upOneLevel\" | translate }}\r\n        </button>\r\n        <div [style.left.px]=\"upOneLevelBtnPositions.lineLeft\"></div>\r\n      </div>\r\n\r\n      <div id=\"companyChart\">\r\n        <p-organizationChart\r\n          [value]=\"orgStructureDetailsFiltered\"\r\n          styleClass=\"company\"\r\n          [preserveSpace]=\"false\"\r\n          #companyChart\r\n        >\r\n          <ng-template let-node pTemplate=\"org\">\r\n            <!-- (click)=\"\r\n              node.data.org\r\n                ? openOrgDetailsDialog($event.target, node.data, 0)\r\n                : null\r\n            \" -->\r\n            <div class=\"node-header\" [id]=\"node.data.org?.id ?? null\">\r\n              <span [class]=\"msgTranslate('mleft-50', 'mright-50')\">\r\n                {{\r\n                  node.data.structure ? (node.label | translate) : node.label\r\n                }}\r\n              </span>\r\n\r\n              <!-- icons -->\r\n              <div class=\"action-icons\" *ngIf=\"!canNotEdit\">\r\n                <i\r\n                  mat-icon-button\r\n                  class=\"pi pi-trash danger\"\r\n                  (click)=\"onDelete(node)\"\r\n                  *ngIf=\"node.data.org\"\r\n                  matTooltip=\"{{ 'General.delete' | translate }}\"\r\n                ></i>\r\n\r\n                <i\r\n                  mat-icon-button\r\n                  class=\"pi pi-plus info\"\r\n                  (click)=\"openAddEditDialog(node)\"\r\n                  matTooltip=\"{{ 'General.add' | translate }}\"\r\n                ></i>\r\n              </div>\r\n\r\n              <!-- <div class=\"d-inline-block float-right\" *ngIf=\"!canNotEdit\">\r\n              <i\r\n                mat-icon-button\r\n                [matMenuTriggerFor]=\"menuRow\"\r\n                class=\"pi pi-cog\"\r\n                (click)=\"$event.stopPropagation()\"\r\n              ></i>\r\n\r\n              <mat-menu #menuRow=\"matMenu\">\r\n                <a mat-menu-item class=\"info\" (click)=\"openAddEditDialog(node)\">\r\n                  <span>\r\n                    <i class=\"pi pi-plus mr-2\"> </i>\r\n                    {{ \"General.add\" | translate }}\r\n                  </span>\r\n                </a>\r\n\r\n                <a\r\n                  mat-menu-item\r\n                  class=\"info\"\r\n                  (click)=\"openAddEditDialog(node, false)\"\r\n                  *ngIf=\"node.data.org\"\r\n                >\r\n                  <span>\r\n                    <i class=\"pi pi-pencil mr-2\"> </i>\r\n                    {{ \"General.edit\" | translate }}\r\n                  </span>\r\n                </a>\r\n\r\n                <a\r\n                  mat-menu-item\r\n                  class=\"info\"\r\n                  (click)=\"onDelete(node)\"\r\n                  *ngIf=\"node.data.org\"\r\n                >\r\n                  <span>\r\n                    <i class=\"pi pi-trash mr-2\"></i>\r\n                    {{ \"General.delete\" | translate }}\r\n                  </span>\r\n                </a>\r\n              </mat-menu>\r\n            </div> -->\r\n\r\n              <!-- normal node for any organization -->\r\n              <div class=\"node-content main-data\" *ngIf=\"node.data.org\">\r\n                <!-- <p>{{ node.data.org.code }}</p> -->\r\n                <p>\r\n                  {{\r\n                    this.msgTranslate(\r\n                      node.data.orgType?.ar_Name,\r\n                      node.data.orgType?.en_Name\r\n                    ) ?? this.translate(\"orgTypeDeleted\")\r\n                  }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- first node of structure -->\r\n              <div class=\"node-content main-data\" *ngIf=\"node.data.structure\">\r\n                <p>\r\n                  {{\r\n                    msgTranslate(\r\n                      node.data.structure.ar_Name,\r\n                      node.data.structure.en_Name\r\n                    )\r\n                  }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"node-content\">\r\n              <div class=\"employees-no-section\" *ngIf=\"node.data.numEmp > 0\">\r\n                <i\r\n                  class=\"pi pi-users\"\r\n                  (click)=\"openOrgDetailsDialog($event.target, node.data, 1)\"\r\n                >\r\n                  {{ node.data.numEmp }}\r\n                </i>\r\n              </div>\r\n\r\n              <div\r\n                class=\"node-footer\"\r\n                (click)=\"expandNode(node)\"\r\n                *ngIf=\"node.children.length > 0\"\r\n              >\r\n                {{ node.children.length }}\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n        </p-organizationChart>\r\n      </div>\r\n      <app-chart-skeleton *ngIf=\"loading\"></app-chart-skeleton>\r\n    </div>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"{{ 'jobtitleChart' | translate | titlecase }}\">\r\n    <app-job-title-org-chart></app-job-title-org-chart>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"{{ 'resources' | translate | titlecase }}\">\r\n    <app-resources-chart></app-resources-chart>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {orgStructureToMap} from \"app/org-management/mapper/org-structure\";\r\nimport {IOrgStructureModel} from \"app/org-management/model/org-structure\";\r\nimport {OrgStructureService} from \"app/org-management/services/org-structure/org-structure.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IPageParams} from \"app/shared/interfaces/params\";\r\nimport {IResponse, IResponseList} from \"app/shared/interfaces/responces\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"app-org-structure-index\",\r\n\ttemplateUrl: \"./org-structure-index.component.html\",\r\n\tstyleUrls: [\"./org-structure-index.component.scss\"],\r\n})\r\nexport class OrgStructureIndexComponent extends AppHelpers implements OnInit {\r\n\tmandatoryColomns: string[] = [\r\n\t\t\"Ser\",\r\n\t\t\"id\",\r\n\t\t\"en_Name\",\r\n\t\t\"ar_Name\",\r\n\t\t\"froM_DATE\",\r\n\t\t\"tO_DATE\",\r\n\t\t\"actions\",\r\n\t];\r\n\tisLoaded: boolean = false;\r\n\toptionalColomns: string[] = [];\r\n\r\n\tdataSource: MatTableDataSource<IOrgStructureModel>;\r\n\r\n\tconstructor(public orgStructureService: OrgStructureService) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\t// if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.checkNoBusinessOrCompany())\r\n\t\t\tthis.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n\t}\r\n\r\n\tgetList(page: number, pageSize?: number) {\r\n\t\tthis.removePageParams();\r\n\t\tthis.page.pageIndex = page;\r\n\t\tif (pageSize) this.page.pageSize = pageSize;\r\n\t\tlet params: IPageParams = {\r\n\t\t\tPageNumber: page,\r\n\t\t\tpageSize: this.page.pageSize,\r\n\t\t};\r\n\t\tthis.orgStructureService\r\n\t\t\t.getList(params)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponseList<IOrgStructureModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tif (res.data.length == 0 && page > 1) {\r\n\t\t\t\t\t\tthis.getList(this.prevPage);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(orgStructureToMap(res.data));\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t\tthis.page.length = res.meta.totalItemCount;\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tonDelete(orgStructure: IOrgStructureModel): void {\r\n\t\tlet msg = this.msgTranslate(orgStructure.ar_Name, orgStructure.en_Name);\r\n\t\tthis.deleteDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(orgStructure);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(orgStructure: IOrgStructureModel) {\r\n\t\tthis.showLoading();\r\n\t\tthis.orgStructureService.Delete(orgStructure.id).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tif (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n\t\t\t\t\t// if last item in list: get previous page\r\n\t\t\t\t\tthis.getList(this.prevPage, this.page.pageSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not last item in list: get current page\r\n\t\t\t\t\tthis.getList(this.currentPage, this.page.pageSize);\r\n\t\t\t\t}\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title title=\"orgStructure\" [globalFunctions]=\"globalFunctions\">\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"orgStructureService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { EmployeeCardComponent } from './../employee-card/employee-card.component';\r\nimport { Component, HostListener, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DialogPosition, MatDialog } from \"@angular/material/dialog\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { TreeNode } from \"primeng/api\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ResourcesChartService } from \"app/org-management/services/org-structure/resources-chart.service\";\r\nimport { IEmployeeCardModel } from \"app/personnel-setup/models/employees\";\r\nimport { employeeChartToMap } from \"app/org-management/mapper/org-structure\";\r\nimport { OrganizationChart } from 'primeng/organizationchart';\r\nimport {exportChart} from \"app/org-management/export_chart\";\r\n\r\n@Component({\r\n  selector: \"app-resources-chart\",\r\n  templateUrl: \"./resources-chart.component.html\",\r\n  styleUrls: [\"./resources-chart.component.scss\"],\r\n})\r\nexport class ResourcesChartComponent extends AppHelpers implements OnInit {\r\n  resourcesChart: TreeNode<IEmployeeCardModel>[];\r\n\r\n  form: FormGroup;\r\n  loading: boolean = false;\r\n  lastSelectedEmpId: number = 0;\r\n\t@ViewChild(\"resourceChart\") resourceChart: OrganizationChart;\r\n\r\n  constructor(\r\n    private resourcesChartService: ResourcesChartService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      employeeId: [null],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getResourcesChart(this.formCtrls.employeeId.value);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getResourcesChart(employeeId: number) {\r\n    // console.log(this.form.value);\r\n    if (employeeId > 0) {\r\n      this.lastSelectedEmpId = employeeId;\r\n      this.resourcesChart = null;\r\n      this.loading = true;\r\n      this.resourcesChartService\r\n        .getEmployeesChart(employeeId)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponse<IEmployeeCardModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.resourcesChart = employeeChartToMap(\r\n              res.data,\r\n              this.lastSelectedEmpId\r\n            );\r\n            setTimeout(() => {\r\n              this.setPositionBtnUpOneLevel();\r\n              this.setPositionUpOneLevelLine();\r\n            }, 100);\r\n            if (this.lastSelectedEmpId == employeeId) this.loading = false;\r\n          } else {\r\n            this.errorList(res.message.messages);\r\n            this.loading = false;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  // on select employee to start show from it\r\n  onChangeEmployee() {\r\n    this.getResourcesChart(this.formCtrls.employeeId.value);\r\n  }\r\n\r\n  // up one level in chart\r\n  upOneLevel() {\r\n    // get employees start from parent employee id\r\n    // after change dropdown value > call onChangeEmployee function\r\n    this.formCtrls.employeeId.setValue(this.resourcesChart[0].data.parentID);\r\n    // this.getResourcesChart(this.resourcesChart[0].data.parentID);\r\n  }\r\n\r\n  upOneLevelBtnPositions = {\r\n    btnLeft: 0,\r\n    lineLeft: 0,\r\n  };\r\n  setPositionBtnUpOneLevel() {\r\n    let btnWidth = document\r\n      .querySelector(\".upOneLevel-btn\")\r\n      .getBoundingClientRect().width;\r\n    let firstNodePositions = document\r\n      .querySelector(\".p-organizationchart-node-content\")\r\n      ?.getBoundingClientRect();\r\n    let firstNodeContainerPositions = document\r\n      .querySelector(\".p-organizationchart\")\r\n      ?.getBoundingClientRect();\r\n\r\n    this.upOneLevelBtnPositions.btnLeft =\r\n      firstNodePositions?.left -\r\n        firstNodeContainerPositions?.left +\r\n        firstNodePositions?.width / 2 -\r\n        btnWidth / 2 ?? 0;\r\n  }\r\n  setPositionUpOneLevelLine() {\r\n    let firstNodePositions = document\r\n      .querySelector(\".p-organizationchart-node-content\")\r\n      ?.getBoundingClientRect();\r\n    let firstNodeContainerPositions = document\r\n      .querySelector(\".p-organizationchart\")\r\n      ?.getBoundingClientRect();\r\n\r\n    this.upOneLevelBtnPositions.lineLeft =\r\n      firstNodePositions?.left -\r\n        firstNodeContainerPositions?.left +\r\n        firstNodePositions?.width / 2 ?? 0;\r\n  }\r\n\r\n  // node details dialog\r\n  openEmployeeDetailsDialog(target: HTMLElement, nodeData: IEmployeeCardModel) {\r\n    let targetNode: HTMLElement = this.getHeaderElement(target);\r\n    let targetPositions: DOMRect = targetNode.getBoundingClientRect();\r\n\r\n    let dialogWidth = 350;\r\n    let dialogPositions: DialogPosition = {};\r\n    // can open left\r\n    if (\r\n      targetPositions.left + targetPositions.width / 2 + dialogWidth <=\r\n      window.innerWidth\r\n    )\r\n      dialogPositions.left = `${\r\n        targetPositions.left + targetPositions.width / 2\r\n      }px`;\r\n    // can open right\r\n    else if (\r\n      targetPositions.left - dialogWidth / 2 - targetPositions.width / 2 + 10 >=\r\n      0\r\n    )\r\n      dialogPositions.left = `${\r\n        targetPositions.left - dialogWidth / 2 - targetPositions.width / 2 + 10\r\n      }px`;\r\n    // no left and no right\r\n    else dialogPositions.left = null;\r\n\r\n    return this.dialog\r\n      .open(EmployeeCardComponent, {\r\n        data: { employeeId: nodeData.id },\r\n        position: dialogPositions,\r\n        width: `${dialogWidth}px`,\r\n        // maxWidth: \"350px\",\r\n        maxHeight: \"80hv\",\r\n        // disableClose: true,\r\n        autoFocus: false,\r\n      })\r\n      .afterClosed()\r\n      .subscribe((closed: boolean) => {});\r\n  }\r\n\r\n  getHeaderElement(target: HTMLElement): HTMLElement {\r\n    return target.classList.contains(\"p-organizationchart-node-content\")\r\n      ? target\r\n      : this.getHeaderElement(target.parentElement);\r\n  }\r\n\r\n  // expand node\r\n  expandNode(node: TreeNode) {\r\n    node.expanded = !node.expanded;\r\n  }\r\n\r\n  // change up one level btn & line positions\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onWindowResize(event) {\r\n    // this.dialog.closeAll();\r\n    this.setPositionBtnUpOneLevel();\r\n    this.setPositionUpOneLevelLine();\r\n  }\r\n\r\n  protected readonly exportChart = exportChart;\r\n}\r\n","<div class=\"organizationchart-container resources-chart\">\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row mx-0\">\r\n      <div class=\"col-md-4 col-12\">\r\n        <app-employee-dropdown\r\n          [control]=\"formCtrls.employeeId\"\r\n          [filter]=\"true\"\r\n          (change)=\"onChangeEmployee()\"\r\n        ></app-employee-dropdown>\r\n      </div>\r\n      <div class=\"col-md-4 offset-md-4 col-12\">\r\n        <div class=\"float-right\" *ngIf=\"resourcesChart!=null\">\r\n          <i\r\n            class=\"ft-image font-large-1 info m-1\"\r\n            (click)=\"exportChart(resourceChart, 'resourceChart', 'image')\"\r\n            matTooltip=\"{{ 'exportAsImage' | translate }}\"\r\n          ></i>\r\n          <i\r\n            class=\"ft-file font-large-1 info m-1\"\r\n            (click)=\"exportChart(resourceChart, 'resourceChart', 'pdf')\"\r\n            matTooltip=\"{{ 'exportAsPdf' | translate }}\"\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div\r\n    class=\"upOneLevel-btn-container\"\r\n    [class.hidden]=\"!(resourcesChart && resourcesChart[0]?.data?.parentID > 0)\"\r\n  >\r\n    <button\r\n      mat-button\r\n      class=\"btn bg-light-info upOneLevel-btn\"\r\n      [style.left.px]=\"upOneLevelBtnPositions.btnLeft\"\r\n      (click)=\"upOneLevel()\"\r\n    >\r\n      <i class=\"pi pi-angle-up\"></i>\r\n      {{ \"upOneLevel\" | translate }}\r\n    </button>\r\n    <div [style.left.px]=\"upOneLevelBtnPositions.lineLeft\"></div>\r\n  </div>\r\n  <div id=\"resourceChart\">\r\n    <p-organizationChart\r\n      [value]=\"resourcesChart\"\r\n      [preserveSpace]=\"false\"\r\n      #resourceChart\r\n    >\r\n      <ng-template let-node pTemplate=\"resources\">\r\n        <div class=\"node-header\" [id]=\"node.data.id\">\r\n          <div class=\"node-content main-data\">\r\n            <div class=\"img-emp-chart\">\r\n              <p-image\r\n                *ngIf=\"node.data.img && node.data.img != '/'; else noImg\"\r\n                [src]=\"fileService.preview(node.data.img)\"\r\n                alt=\"{{ 'img' | translate }}\"\r\n                preview=\"true\"\r\n              >\r\n              </p-image>\r\n              <ng-template #noImg>\r\n                <div class=\"alt-img-preview\">\r\n                  <i class=\"pi pi-user\"></i>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n\r\n            <div\r\n              class=\"p-2 info-content\"\r\n              (click)=\"openEmployeeDetailsDialog($event.target, node.data)\"\r\n            >\r\n              <p class=\"info\">\r\n                <!-- employee name -->\r\n                {{\r\n                  msgTranslate(node.data.ar_Name, node.data.en_Name) | titlecase\r\n                }}\r\n              </p>\r\n\r\n              <!-- <div class=\"emp-data\"> -->\r\n              <p>\r\n                {{\r\n                  msgTranslate(node.data.jobTitleNameAr, node.data.jobTitleName)\r\n                    | titlecase\r\n                }}\r\n              </p>\r\n\r\n              <p>\r\n                {{ node.data.joiningDate | date : \"dd-MM-yyyy\" }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"node-content\">\r\n          <div\r\n            class=\"node-footer\"\r\n            (click)=\"expandNode(node)\"\r\n            *ngIf=\"node.children.length > 0\"\r\n          >\r\n            {{ node.children.length }}\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </p-organizationChart>\r\n  </div>\r\n\r\n  <app-chart-skeleton *ngIf=\"loading\"></app-chart-skeleton>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ICustomPolicyResponse, IPolicyGroupModel, IPolicyGroupRequest } from \"app/org-management/model/policy-group\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { PolicyGroupService } from \"app/org-management/services/policy-group.service\";\r\nimport {\r\n  IntersectionEmpDialogComponent\r\n} from \"app/org-management/components/policy-groups/intersection-emp-dialog/intersection-emp-dialog.component\";\r\nimport { PolicyGroupGrouping, PolicyGroupGroupingList } from \"app/shared/enums/policy-group-grouping\";\r\n\r\n@Component({\r\n  selector: \"app-add-policy-group\",\r\n  templateUrl: \"./add-policy-group.component.html\",\r\n  styleUrls: [\"./add-policy-group.component.scss\"]\r\n})\r\nexport class AddPolicyGroupComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  policyGroupId: number;\r\n  radioList = PolicyGroupGroupingList;\r\n\r\n  constructor(private policyGroupService: PolicyGroupService) {\r\n    super();\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      this.policyGroupId = Number(params.get(\"id\")) ?? 0;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      ar_Name: [null, Validators.required],\r\n      en_Name: [null, Validators.required],\r\n      policyGroup_Type_ID: [null, Validators.required],\r\n      groupingType: [null, Validators.required],\r\n      selectedEmployeesIDs: [null],\r\n      selectedOrgIDs: [null],\r\n      selectedLocationsIDs: [null],\r\n    });\r\n\r\n\r\n    // validations\r\n    this.formCtrls.groupingType.valueChanges.subscribe(val => {\r\n      // open validation\r\n      if (val == PolicyGroupGrouping.OPEN) {\r\n        this.formCtrls.selectedEmployeesIDs.setValidators([Validators.required]);\r\n      } else {\r\n        this.formCtrls.selectedEmployeesIDs.reset();\r\n        this.formCtrls.selectedEmployeesIDs.removeValidators([Validators.required]);\r\n      }\r\n\r\n      // organization validation\r\n      if (val == PolicyGroupGrouping.ORGANIZATIONS) {\r\n        this.formCtrls.selectedOrgIDs.setValidators([Validators.required]);\r\n      } else {\r\n        this.formCtrls.selectedOrgIDs.reset();\r\n        this.formCtrls.selectedOrgIDs.removeValidators([Validators.required]);\r\n      }\r\n\r\n      // location validation\r\n      if (val == PolicyGroupGrouping.LOCATION) {\r\n        this.formCtrls.selectedLocationsIDs.setValidators([Validators.required]);\r\n      } else {\r\n        this.formCtrls.selectedLocationsIDs.reset();\r\n        this.formCtrls.selectedLocationsIDs.removeValidators([Validators.required]);\r\n      }\r\n\r\n      // job title validation\r\n      // if (val == PolicyGroupGrouping.JOB_TITLE) {\r\n      //   this.formCtrls.selectedLocationsIDs.setValidators([Validators.required]);\r\n      // } else {\r\n      //   this.formCtrls.selectedLocationsIDs.reset();\r\n      //   this.formCtrls.selectedLocationsIDs.removeValidators([Validators.required]);\r\n      // }\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPolicyGroupRequest = {\r\n        core_PolicyGroup: {\r\n          id: this.form.value.id,\r\n          ar_Name: this.form.value.ar_Name,\r\n          en_Name: this.form.value.en_Name,\r\n          policyGroup_Type_ID: this.form.value.policyGroup_Type_ID,\r\n          groupingType: this.form.value.groupingType,\r\n        },\r\n        selectedEmployeesIDs: this.form.value.selectedEmployeesIDs,\r\n        selectedOrgIDs: this.form.value.selectedOrgIDs,\r\n        selectedLocationsIDs: this.form.value.selectedLocationsIDs,\r\n      };\r\n\r\n      model.core_PolicyGroup.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IPolicyGroupRequest) {\r\n    this.showLoading();\r\n    this.policyGroupService\r\n      .create(model)\r\n      .subscribe((res: ICustomPolicyResponse) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          if (res?.intersectionEmployees?.length > 0) {\r\n            this.intersectionEmpDialog(res);\r\n          }\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.clearForm();\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IPolicyGroupRequest) {\r\n    this.showLoading();\r\n    this.policyGroupService.edit(model).subscribe((res: IResponse<IPolicyGroupModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      } else {\r\n        this.errorList(res.message.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  intersectionEmpDialog(model: ICustomPolicyResponse) {\r\n    this.dialogsService\r\n      .addEditDialog(IntersectionEmpDialogComponent, model)\r\n      .afterClosed()\r\n      .subscribe(() => {\r\n        // this.getAll();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n}\r\n","<mat-card-content class=\"mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input [control]=\"formCtrls.ar_Name\"\r\n                       [submitted]=\"submitted\"\r\n                       label=\"ar_Name\">\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input [control]=\"formCtrls.en_Name\"\r\n                       [submitted]=\"submitted\"\r\n                       label=\"en_Name\">\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <policy-group-type-dropdown [control]=\"formCtrls.policyGroup_Type_ID\"\r\n                                        [submitted]=\"submitted\">\r\n            </policy-group-type-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-12 mt-1\">\r\n            <app-radio-button label=\"groupingType\" titleClass=\"col-2\"\r\n                              [control]=\"formCtrls.groupingType\"\r\n                              [radioList]=\"radioList\">\r\n            </app-radio-button>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { ICustomPolicyResponse, IIntersectionEmpRequest } from \"app/org-management/model/policy-group\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { PolicyGroupService } from \"app/org-management/services/policy-group.service\";\nimport { FormGroup } from \"@angular/forms\";\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\n\n@Component({\n  selector: \"app-intersection-emp-dialog\",\n  templateUrl: \"./intersection-emp-dialog.component.html\",\n  styleUrls: [\"./intersection-emp-dialog.component.scss\"]\n})\nexport class IntersectionEmpDialogComponent implements OnInit {\n  form: FormGroup;\n  submitted: boolean = false;\n  appHelper: AppHelpers = new AppHelpers();\n  selectedEmployeeIds: number[];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public model: ICustomPolicyResponse,\n              private policyGroupService: PolicyGroupService) {\n    console.log(model);\n  }\n\n  ngOnInit(): void {\n    this.form = this.appHelper.fb.group({\n      policyStartDate: [\"\"]\n    });\n  }\n\n\n  submit() {\n    this.submitted = true;\n    if (this.form.valid) {\n      const body: IIntersectionEmpRequest[] = [];\n      this.selectedEmployeeIds.forEach(empId => {\n        let item: IIntersectionEmpRequest = {\n          employeeId: empId,\n          policyGroupTypeId: this.model.data.policyGroup_Type_ID,\n          policyStartDate: this.form.controls[\"policyStartDate\"].value\n        };\n        body.push(item);\n      });\n\n      this.appHelper.showLoading();\n      this.policyGroupService\n        .saveIntersectionEmployees(body)\n        .subscribe((res: ICustomPolicyResponse) => {\n          if (res?.message?.messageType == MessageTypes.Success) {\n            if (res?.intersectionEmployees?.length > 0) {\n            }\n            this.appHelper.addSuccessfullyMsg(res?.message?.messageTypeName);\n          } else {\n            this.appHelper.errorList(res.message.messages);\n          }\n\n          this.appHelper.hideLoading();\n        });\n\n    } // else this.toastr.error(\"General.formNotValid\");\n  }\n\n  onSelectEmployee(selected: boolean, id: number) {\n    if (selected) {\n      this.selectedEmployeeIds.push(id);\n    } else {\n      let i = this.selectedEmployeeIds.indexOf(id);\n      this.selectedEmployeeIds.splice(i, 1);\n    }\n  }\n\n}\n","<p>intersection-emp-dialog works!</p>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\nimport { MatStepper } from \"@angular/material/stepper\";\n\n@Component({\n  selector: \"app-policy-group-core\",\n  templateUrl: \"./policy-group-core.component.html\",\n  styleUrls: [\"./policy-group-core.component.scss\"]\n})\nexport class PolicyGroupCoreComponent extends AppHelpers implements OnInit {\n  @ViewChild(\"stepper\") stepper: MatStepper;\n  policyGroupId: number;\n\n  constructor() {\n    super();\n    this.activatedRoute.paramMap.subscribe((params) => {\n      this.policyGroupId = Number(params.get(\"id\")) ?? 0;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  // ngAfterViewInit() {\n  //   this.stepper._getIndicatorType = () => \"number\";\n  // }\n\n  stepChanged() {\n    // prevent inputs to be invalid after next & back\n    this.stepper.selected.interacted = false;\n  }\n\n\n}\n","<mat-card-title class=\"title-no-margin title-section fixed-title\">\r\n  <page-title title=\"addPolicyGroup\"></page-title>\r\n\r\n  <ng-container>\r\n    <!-- add new btn -->\r\n    <app-add-new-btn\r\n      *ngIf=\"policyGroupId > 0\"\r\n      url=\"/org-management/{{ moduleId }}/policy-group/add\"\r\n      [params]=\"parentParam\"\r\n    >\r\n    </app-add-new-btn>\r\n\r\n    <app-back-btn\r\n      url=\"/org-management/{{ moduleId }}/policy-group\"\r\n      [params]=\"pageParams\"\r\n    >\r\n    </app-back-btn>\r\n  </ng-container>\r\n</mat-card-title>\r\n\r\n<ng-container>\r\n  <mat-card-content class=\"cards-no-shadow has-fixed-title\">\r\n    <mat-stepper #stepper [linear]=\"false\" (selectionChange)=\"stepChanged()\">\r\n      <mat-step label=\"{{ 'general' | translate | titlecase }}\" class=\"mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-card>\r\n              <mat-card-title class=\"title-no-margin\">\r\n                <page-title title=\"generalInfo\"></page-title>\r\n              </mat-card-title>\r\n\r\n              <mat-divider class=\"mt-2\"></mat-divider>\r\n              <div class=\"clearfix\"></div>\r\n\r\n              <app-add-policy-group></app-add-policy-group>\r\n\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n\r\n      <mat-step label=\"{{ 'PolicyGroupDetails' | translate | titlecase }}\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-card>\r\n              <mat-card-title class=\"title-no-margin\">\r\n                <page-title title=\"PolicyGroupDetails\"></page-title>\r\n              </mat-card-title>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n\r\n\r\n    </mat-stepper>\r\n  </mat-card-content>\r\n\r\n  <steps-footer [stepper]=\"stepper\" [parentParam]=\"parentParam\"></steps-footer>\r\n</ng-container>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { policyGroupDisplay } from \"app/org-management/mapper/policy-group\";\r\nimport { IPolicyGroupModel } from \"app/org-management/model/policy-group\";\r\nimport { PolicyGroupService } from \"app/org-management/services/policy-group.service\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-policy-group-index\",\r\n  templateUrl: \"./policy-group-index.component.html\",\r\n  styleUrls: [\"./policy-group-index.component.scss\"],\r\n})\r\nexport class PolicyGroupIndexComponent extends AppHelpers implements OnInit {\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"policyGroupType\",\r\n    \"noOfEmployees\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IPolicyGroupModel>;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(public policyGroupService: PolicyGroupService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.removePageParams();\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.policyGroupService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IPolicyGroupModel[]>) => {\r\n        if (res.message.messageType == 1) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(\r\n            policyGroupDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  onDelete(policyGroup: IPolicyGroupModel): void {\r\n    let msg = this.msgTranslate(policyGroup.ar_Name, policyGroup.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(policyGroup);\r\n    });\r\n  }\r\n\r\n  delete(policyGroup: IPolicyGroupModel) {\r\n    this.showLoading();\r\n    this.policyGroupService\r\n      .Delete(policyGroup.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == 1) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title title=\"policyGroups\" [globalFunctions]=\"globalFunctions\">\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [exportService]=\"policyGroupService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {OrganizationChart} from \"primeng/organizationchart\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nexport function exportChart(chart: OrganizationChart, elementId: string, type: string) {\r\n  const chartElement = chart.el.nativeElement;\r\n  const element = document.getElementById(elementId);\r\n  const fullWidth = element.offsetWidth + element.scrollWidth;\r\n  html2canvas(chartElement, {\r\n    width: fullWidth,\r\n    height: element.offsetWidth,\r\n  }).then((canvas) => {\r\n    //width,height define the dimensions of the canvas\r\n    const file = canvas.toDataURL(\"image/png\");\r\n    if (type == \"image\") {\r\n      const link = document.createElement(\"a\");\r\n      link.href = file;\r\n      link.download = elementId + \".jpeg\";\r\n      link.click();\r\n    } else if (type == \"pdf\") {\r\n      var x = 1200;\r\n      var y = elementId == \"companyChart\" ? x / 10 : x / 3;\r\n\r\n      var doc = new jsPDF(\"l\", \"mm\", [x, y]); // Landscape orientation, the dimensions of the page\r\n      const width = doc.internal.pageSize.getWidth(); //The width of the image on the PDF\r\n      const height = doc.internal.pageSize.getHeight(); // The height of the image on the PDF\r\n      doc.addImage(file, \"PNG\", 20, 20, width - 20, height - 20);\r\n      doc.save(elementId + \".pdf\");\r\n    }\r\n  });\r\n}\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { IOrgKpiModel } from \"../model/org-kpis\";\r\n\r\nexport function orgKpiDisplay(data: IOrgKpiModel[]): IOrgKpiModel[] {\r\n  return data.map((kpi) => {\r\n    return <IOrgKpiModel>{\r\n      ...kpi,\r\n      kpi: msgTranslate(kpi.core_KPI?.ar_Name, kpi.core_KPI?.en_Name),\r\n    };\r\n  });\r\n}\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  ICompanyNodeChartData,\r\n  IOrgStructureModel,\r\n  IOrgStructureNodeModel,\r\n} from \"../model/org-structure\";\r\nimport { IJobTitleModel } from \"../model/job-title\";\r\nimport { TreeNode } from \"primeng/api\";\r\nimport { IEmployeeCardModel } from \"app/personnel-setup/models/employees\";\r\n\r\nexport function orgStructureToMap(\r\n  orgStructures: IOrgStructureModel[]\r\n): IOrgStructureModel[] {\r\n  return orgStructures.map((orgStructure) => {\r\n    return <IOrgStructureModel>{\r\n      ...orgStructure,\r\n      froM_DATE: HelpersFunctions.mapDate(orgStructure.froM_DATE),\r\n      tO_DATE: HelpersFunctions.mapDate(orgStructure.tO_DATE),\r\n    };\r\n  });\r\n}\r\n\r\n/* /////////////////// company structure chart /////////////////// */\r\n\r\nexport function companyChartToMap(\r\n  StructureHierarchy: IOrgStructureModel,\r\n  orgStructureId: number\r\n): TreeNode<ICompanyNodeChartData>[] {\r\n  // sort nodes\r\n  let selectedIds: number[] = [];\r\n  let sortedOrgNodes: IOrgStructureNodeModel[] = [];\r\n  while (\r\n    sortedOrgNodes.length < StructureHierarchy.core_Org_Structure_Org.length\r\n  ) {\r\n    companySortDataBeforeMap(\r\n      StructureHierarchy.core_Org_Structure_Org,\r\n      sortedOrgNodes,\r\n      selectedIds\r\n    );\r\n  }\r\n  // console.log(selectedOrgNodes, selectedIds);\r\n\r\n  // all structure hierarchy\r\n  let orgStructureDetails: TreeNode<ICompanyNodeChartData>[];\r\n\r\n  orgStructureDetails = [\r\n    {\r\n      label: \"structure\",\r\n      type: \"org\",\r\n      styleClass: \"structure-node\",\r\n      expanded: true,\r\n      expandedIcon: \"pi pi-folder-open\",\r\n      collapsedIcon: \"pi pi-folder\",\r\n      data: {\r\n        parentId: null,\r\n        org: null,\r\n        orgType: null,\r\n        numEmp: 0,\r\n        structure: {\r\n          id: null,\r\n          ar_Name: StructureHierarchy.ar_Name,\r\n          en_Name: StructureHierarchy.en_Name,\r\n        },\r\n      },\r\n      children: [],\r\n    },\r\n  ];\r\n\r\n  // maping data\r\n  sortedOrgNodes.map((item) => {\r\n    let mapedItem: TreeNode<ICompanyNodeChartData> = {\r\n      label: `${item.core_Org?.code} - ${msgTranslate(\r\n        item.core_Org?.ar_Name,\r\n        item.core_Org?.en_Name\r\n      )}`,\r\n      type: \"org\",\r\n      styleClass: \"org-node\",\r\n      expanded: true,\r\n      data: {\r\n        parentId: item.parenT_ID,\r\n        org: item.core_Org,\r\n        orgType: {\r\n          id: item.core_Org_TYPE?.id,\r\n          ar_Name: item.core_Org_TYPE?.ar_Name,\r\n          en_Name: item.core_Org_TYPE?.en_Name,\r\n        },\r\n        structure: null,\r\n        structureId: orgStructureId,\r\n        numEmp: item.numEmp,\r\n      },\r\n      children: [],\r\n    };\r\n    // root nodes (company)\r\n    if (!item.parenT_ID) {\r\n      orgStructureDetails[0].children.push(mapedItem);\r\n    }\r\n    // other nodes\r\n    else companyMapChildrenData(mapedItem, orgStructureDetails[0].children);\r\n  });\r\n\r\n  return orgStructureDetails;\r\n}\r\n\r\n// to make sure that all parent nodes come before their children\r\nfunction companySortDataBeforeMap(\r\n  core_Org_Structure_Org: IOrgStructureNodeModel[],\r\n  sortedOrgNodes: IOrgStructureNodeModel[],\r\n  selectedIds: number[]\r\n) {\r\n  core_Org_Structure_Org.forEach((item) => {\r\n    if (\r\n      (item.parenT_ID == null || selectedIds.includes(item.parenT_ID)) &&\r\n      !selectedIds.includes(item.orG_ID)\r\n    ) {\r\n      sortedOrgNodes.push(item);\r\n      selectedIds.push(item.orG_ID);\r\n    }\r\n  });\r\n}\r\n\r\nfunction companyMapChildrenData(\r\n  mapedItem: TreeNode<ICompanyNodeChartData>,\r\n  chatDataParentArray: TreeNode<ICompanyNodeChartData>[]\r\n) {\r\n  chatDataParentArray.map((lastItem) => {\r\n    if (lastItem.data.org.id == mapedItem.data.parentId) {\r\n      lastItem.children.push(mapedItem);\r\n      return;\r\n    }\r\n  });\r\n  // if not found search in children\r\n  chatDataParentArray.map((childItem) => {\r\n    companyMapChildrenData(mapedItem, childItem.children);\r\n  });\r\n}\r\n\r\n/* /////////////////// job title chart /////////////////// */\r\n\r\nexport function jobTitleChartToMap(\r\n  jobTitles: IJobTitleModel[]\r\n): TreeNode<IJobTitleModel>[] {\r\n  let jobTitleOrgChart = [\r\n    {\r\n      label: jobTitles[0].code,\r\n      type: \"job-title\",\r\n      styleClass: \"job-title-node\",\r\n      expanded: true,\r\n      data: jobTitles[0],\r\n      children: [],\r\n    },\r\n  ];\r\n  jobTitleMapChildrenData(jobTitleOrgChart[0]);\r\n\r\n  return jobTitleOrgChart;\r\n}\r\n\r\nfunction jobTitleMapChildrenData(parentJobTitle: TreeNode<IJobTitleModel>) {\r\n  parentJobTitle.data.chiledJobTitles?.map((item) => {\r\n    // maping data\r\n    let mapedItem: TreeNode<IJobTitleModel> = {\r\n      label: item.code,\r\n      type: \"job-title\",\r\n      styleClass: \"job-title-node\",\r\n      expanded: true,\r\n      data: item,\r\n      children: [],\r\n    };\r\n    parentJobTitle.children.push(mapedItem);\r\n    jobTitleMapChildrenData(mapedItem);\r\n  });\r\n}\r\n\r\n/* /////////////////// employee chart /////////////////// */\r\n\r\nexport function employeeChartToMap(\r\n  employees: IEmployeeCardModel[],\r\n  lastSelectedEmpId\r\n): TreeNode<IEmployeeCardModel>[] {\r\n  let firstEmployeeIndex = employees.findIndex(\r\n    (emp) => emp.id == lastSelectedEmpId\r\n  );\r\n\r\n  let resourcesChart: TreeNode<IEmployeeCardModel>[] = [];\r\n  if (firstEmployeeIndex >= 0) {\r\n    resourcesChart = [\r\n      {\r\n        label: msgTranslate(\r\n          employees[firstEmployeeIndex]?.ar_Name,\r\n          employees[firstEmployeeIndex]?.en_Name\r\n        ),\r\n        type: \"resources\",\r\n        styleClass: employees[firstEmployeeIndex].isSolidEmp\r\n          ? \"\"\r\n          : \"dashed-border\",\r\n        expanded: true,\r\n        expandedIcon: \"pi pi-folder-open\",\r\n        collapsedIcon: \"pi pi-folder\",\r\n        data: employees[firstEmployeeIndex],\r\n        children: [],\r\n      },\r\n    ];\r\n\r\n    // maping data\r\n    employees\r\n      .filter((emp) => emp.id != lastSelectedEmpId)\r\n      .map((item) => {\r\n        let mapedItem: TreeNode<IEmployeeCardModel> = {\r\n          label: msgTranslate(item.ar_Name, item.en_Name),\r\n          type: \"resources\",\r\n          styleClass: item.isSolidEmp ? \"\" : \"dashed-border\",\r\n          expanded: true,\r\n          expandedIcon: \"pi pi-folder-open\",\r\n          collapsedIcon: \"pi pi-folder\",\r\n          data: item,\r\n          children: [],\r\n        };\r\n        // root node\r\n        if (item.parentID == lastSelectedEmpId) {\r\n          resourcesChart[0].children.push(mapedItem);\r\n        }\r\n        // other nodes\r\n        else if (item.id != lastSelectedEmpId)\r\n          employeeMapChildrenData(mapedItem, resourcesChart[0].children);\r\n      });\r\n  }\r\n\r\n  return resourcesChart;\r\n}\r\n\r\nfunction employeeMapChildrenData(\r\n  mapedItem: TreeNode<IEmployeeCardModel>,\r\n  chatDataParentArray: TreeNode<IEmployeeCardModel>[]\r\n) {\r\n  chatDataParentArray.map((lastItem) => {\r\n    if (lastItem.data.id == mapedItem.data.parentID) {\r\n      lastItem.children.push(mapedItem);\r\n      return;\r\n    }\r\n  });\r\n  // if not found search in children\r\n  chatDataParentArray.map((childItem) => {\r\n    employeeMapChildrenData(mapedItem, childItem.children);\r\n  });\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { OrgStructureIndexComponent } from \"./components/org-structure/org-structure-index/org-structure-index.component\";\r\nimport { AddOrgStructureComponent } from \"./components/org-structure/add-org-structure/add-org-structure.component\";\r\nimport { pathMatch } from \"app/shared/enums/route-path-match.enum\";\r\nimport { OrgStructureDetailsComponent } from \"./components/org-structure/org-structure-details/org-structure-details.component\";\r\nimport { JobsProfileIndexComponent } from \"./components/jobs-profile/jobs-profile-index/jobs-profile-index.component\";\r\nimport { AddJobProfileComponent } from \"./components/jobs-profile/add-job-profile/add-job-profile.component\";\r\nimport { AssignJobToOrgComponent } from \"./components/jobs-profile/assign-job-to-org/assign-job-to-org.component\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { OrgKpisComponent } from \"./components/org-structure/org-kpis/org-kpis.component\";\r\nimport { PolicyGroupIndexComponent } from \"./components/policy-groups/policy-group-index/policy-group-index.component\";\r\nimport { PolicyGroupCoreComponent } from \"app/org-management/components/policy-groups/policy-group-core/policy-group-core.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"org-structure\",\r\n    data: {view: ViewsManager.org_structure},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: OrgStructureIndexComponent,\r\n        data: {view: ViewsManager.org_structure_index},\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddOrgStructureComponent,\r\n        data: {view: ViewsManager.add_org_structure},\r\n      },\r\n      {\r\n        path: \"edit/:orgStructureId\",\r\n        component: AddOrgStructureComponent,\r\n        data: {view: ViewsManager.add_org_structure},\r\n      },\r\n      {\r\n        path: \"details/:orgStructureId\",\r\n        component: OrgStructureDetailsComponent,\r\n        data: {view: ViewsManager.org_structure_details},\r\n      },\r\n      {\r\n        path: \"kpis\",\r\n        component: OrgKpisComponent,\r\n        data: {view: ViewsManager.org_kpis},\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"job-profile\",\r\n    data: {view: ViewsManager.job_profile},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: JobsProfileIndexComponent,\r\n        data: {view: ViewsManager.job_profile_index},\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddJobProfileComponent,\r\n        data: {view: ViewsManager.add_job_profile},\r\n      },\r\n      {\r\n        path: \"edit/:jobId\",\r\n        component: AddJobProfileComponent,\r\n        data: {view: ViewsManager.add_job_profile},\r\n      },\r\n      {\r\n        path: \"assign-job-to-org\",\r\n        component: AssignJobToOrgComponent,\r\n        data: {view: ViewsManager.assign_job_to_org},\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"policy-group\",\r\n    data: {view: ViewsManager.policy_group},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: PolicyGroupIndexComponent,\r\n        data: {view: ViewsManager.policy_group_index},\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: PolicyGroupCoreComponent,\r\n        data: {view: ViewsManager.add_policy_group},\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: PolicyGroupCoreComponent,\r\n        data: {view: ViewsManager.add_policy_group},\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrgManagementRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { OrgManagementRoutingModule } from \"./org-management-routing.module\";\r\nimport { OrgStructureIndexComponent } from \"./components/org-structure/org-structure-index/org-structure-index.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { AddOrgStructureComponent } from \"./components/org-structure/add-org-structure/add-org-structure.component\";\r\nimport { OrgStructureHierarchyDetailsComponent } from \"./components/org-structure/org-structure-hierarchy-details/org-structure-hierarchy-details.component\";\r\nimport { AddOrgStructureNodeComponent } from \"./components/org-structure/add-org-structure-node/add-org-structure-node.component\";\r\nimport { OrgDetailsEmployeesComponent } from \"./components/org-structure/org-details-employees/org-details-employees.component\";\r\nimport { EmployeeCardComponent } from \"./components/org-structure/employee-card/employee-card.component\";\r\nimport { OrgStructureDetailsComponent } from \"./components/org-structure/org-structure-details/org-structure-details.component\";\r\nimport { JobTitleOrgChartComponent } from \"./components/org-structure/job-title-org-chart/job-title-org-chart.component\";\r\nimport { JobTitleDetailsDialogComponent } from \"./components/org-structure/job-title-details-dialog/job-title-details-dialog.component\";\r\nimport { JobsProfileIndexComponent } from \"./components/jobs-profile/jobs-profile-index/jobs-profile-index.component\";\r\nimport { AddJobProfileComponent } from \"./components/jobs-profile/add-job-profile/add-job-profile.component\";\r\nimport { JobCareerPathComponent } from \"./components/jobs-profile/job-career-path/job-career-path.component\";\r\nimport { JobCompetencesComponent } from \"./components/jobs-profile/job-competences/job-competences.component\";\r\nimport { JobKpiComponent } from \"./components/jobs-profile/job-kpi/job-kpi.component\";\r\nimport { JobCustodiesComponent } from \"./components/jobs-profile/job-custodies/job-custodies.component\";\r\nimport { JobTrainingPathComponent } from \"./components/jobs-profile/job-training-path/job-training-path.component\";\r\nimport { JobAppraisalMethodComponent } from \"./components/jobs-profile/job-appraisal-method/job-appraisal-method.component\";\r\nimport { JobDescriptionComponent } from \"./components/jobs-profile/job-description/job-description.component\";\r\nimport { JobCompetenceLevelDetailsDialogComponent } from \"./components/jobs-profile/job-competence-level-details-dialog/job-competence-level-details-dialog.component\";\r\nimport { AssignJobToOrgComponent } from \"./components/jobs-profile/assign-job-to-org/assign-job-to-org.component\";\r\nimport { ResourcesChartComponent } from \"./components/org-structure/resources-chart/resources-chart.component\";\r\nimport { LoadPoliciesGroupComponent } from \"./components/policy-groups/load-policies-group/load-policies-group.component\";\r\nimport { OrgKpisComponent } from \"./components/org-structure/org-kpis/org-kpis.component\";\r\nimport { PolicyGroupIndexComponent } from \"./components/policy-groups/policy-group-index/policy-group-index.component\";\r\nimport { AddPolicyGroupComponent } from './components/policy-groups/add-policy-group/add-policy-group.component';\nimport { IntersectionEmpDialogComponent } from './components/policy-groups/intersection-emp-dialog/intersection-emp-dialog.component';\nimport { PolicyGroupCoreComponent } from './components/policy-groups/policy-group-core/policy-group-core.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OrgStructureIndexComponent,\r\n    AddOrgStructureComponent,\r\n    OrgStructureHierarchyDetailsComponent,\r\n    AddOrgStructureNodeComponent,\r\n    OrgDetailsEmployeesComponent,\r\n    EmployeeCardComponent,\r\n    OrgStructureDetailsComponent,\r\n    JobTitleOrgChartComponent,\r\n    JobTitleDetailsDialogComponent,\r\n    JobsProfileIndexComponent,\r\n    AddJobProfileComponent,\r\n    JobCareerPathComponent,\r\n    JobCompetencesComponent,\r\n    JobKpiComponent,\r\n    JobCustodiesComponent,\r\n    JobTrainingPathComponent,\r\n    JobAppraisalMethodComponent,\r\n    JobDescriptionComponent,\r\n    JobCompetenceLevelDetailsDialogComponent,\r\n    AssignJobToOrgComponent,\r\n    ResourcesChartComponent,\r\n    OrgKpisComponent,\r\n    PolicyGroupIndexComponent,\r\n    AddPolicyGroupComponent,\r\n    IntersectionEmpDialogComponent,\r\n    PolicyGroupCoreComponent,\r\n  ],\r\n  imports: [CommonModule, OrgManagementRoutingModule, SharedModule],\r\n  exports: [LoadPoliciesGroupComponent],\r\n})\r\nexport class OrgManagementModule {}\r\n","import { db } from \"app/shared/resources/database-tabels\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IJobTitleModel } from \"../../model/job-title\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class JobTitleChartService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getJobTitleHierarchy(jobId: number) {\r\n    return this.get<IResponse<IJobTitleModel[]>>(\r\n      \"OrgManagement/JobTitle/GetAll_Structure\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${jobId}`,\r\n          $expand: `${db.core_Org_Job_Title}/${db.core_Org},${db.Core_Person_Instance_Job_Title}.${db.Core_Person_Instance}.${db.Core_Person},${db.Core_Job_Title_Family}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { orgKpiDisplay } from \"app/org-management/mapper/org-kpi\";\r\nimport {\r\n  IOrgKpiModel,\r\n  IOrgKpiRequest,\r\n} from \"app/org-management/model/org-kpis\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class OrgKpisService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IOrgKpiRequest) {\r\n    return this.post<IResponse<IOrgKpiModel>>(\r\n      \"OrgStructure/Create_KpiOrg\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams, orgId: number) {\r\n    return this.get<IResponseList<IOrgKpiModel[]>>(\r\n      \"OrgStructure/GetList_KpiOrg\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $expand: db.core_KPI,\r\n          $filter: `orgId eq ${orgId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IOrgKpiModel[]>>(\r\n      \"OrgStructure/GetAll_KpiOrg\"\r\n    ).pipe(\r\n      map((res) => {\r\n        res.data = orgKpiDisplay(res.data);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"OrgStructure/Delete_KpiOrg\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    // this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IEmployeeCardModel } from \"app/personnel-setup/models/employees\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ResourcesChartService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getEmployeesChart(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeCardModel[]>>(\r\n      \"personnel/Employees/GetAll_EmployeesCard_Structure\",\r\n      {\r\n        params: {\r\n          PerinsID: employeeId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IDeleteEmpStatusModel,\r\n  IEmpJobDataModel,\r\n  IEmpJobStatusPositionCardModel,\r\n  IEmpJobStatusPositionModel,\r\n  IEmpJobStatusPositionRequest,\r\n} from \"app/personnel-setup/models/employee-employment-info\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeJobInformationService extends AppClientService {\r\n\r\n  protected expand =\r\n    `${db.Core_Person_Instance_Org}/${db.core_Person_Instance_Job_Title},\r\n    ${db.Core_Person_Instance_Org}.${db.core_Org},${db.Core_Person_Instance_Org}/${db.core_Person_Instance_Job_Title}.${db.Core_Job_Title},\r\n    ${db.core_Status}, ${db.core_Status_Properties}`;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  create(data: IEmpJobStatusPositionRequest) {\r\n    return this.post<IResponse<IEmpJobStatusPositionRequest>>(\r\n      \"Personnel/Employees/Create_EmployeeStatusPosition\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmpJobStatusPositionRequest) {\r\n    return this.post<IResponse<IEmpJobStatusPositionRequest>>(\r\n      \"Personnel/Employees/Edit_EmployeeStatusPosition\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getStatusPositionCard(personInstanceID: number) {\r\n    return this.get<IResponse<IEmpJobStatusPositionCardModel>>(\r\n      \"Personnel/Employees/Get_StatusPositionCard\",\r\n      {\r\n        params: {\r\n          Person_Instance_ID: personInstanceID,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(employeeInstanceId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmpJobDataModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeStatusPosition\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_Instance_ID  eq ${employeeInstanceId}`,\r\n          $expand: this.expand,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeInstanceId: number) {\r\n    return this.get<IResponse<any[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeStatusPosition\",\r\n      {\r\n        params: {\r\n          $filter: `Person_Instance_ID  eq ${employeeInstanceId}`,\r\n          $expand: this.expand,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllCurrentJobsByEmployeeId(employeeId: number) { // using in jobTitle org chart\r\n    return this.get<IResponse<IEmpJobStatusPositionModel[]>>(\r\n      \"personnel/Employees/GetAll_Current_Job_Emp\",\r\n      {\r\n        params: {\r\n          PerinsID: employeeId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IDeleteEmpStatusModel) {\r\n    return this.delete<IResponse>(\"Personnel/Employees/Delete_EmployeeStatusPosition\", {\r\n      params: params\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { RadioButtonModel } from \"app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component\";\r\n\r\nexport enum PolicyGroupGrouping {\r\n  OPEN = 1,\r\n  ORGANIZATIONS = 2,\r\n  JOB_TITLE = 3,\r\n  LOCATION = 4,\r\n}\r\n\r\nexport const PolicyGroupGroupingList: RadioButtonModel[] = [\r\n  {\r\n    label: \"open\",\r\n    value: PolicyGroupGrouping.OPEN,\r\n    cssClass: \"col-sm-6 col-lg-2\"\r\n  },\r\n  {\r\n    label: \"organizations\",\r\n    value: PolicyGroupGrouping.ORGANIZATIONS,\r\n    cssClass: \"col-sm-6 col-lg-2\"\r\n  },\r\n  {\r\n    label: \"job\",\r\n    value: PolicyGroupGrouping.JOB_TITLE,\r\n    cssClass: \"col-sm-6 col-lg-2\"\r\n  },\r\n  {\r\n    label: \"location\",\r\n    value: PolicyGroupGrouping.LOCATION,\r\n    cssClass: \"col-sm-6 col-lg-2\"\r\n  },\r\n];\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class GroupByService {\r\n\tconstructor() {}\r\n\r\n\t//group response data by DayName\r\n\tstatic groupBy(collection: any[], property: string): any[] {\r\n\t\tif (!collection) {\r\n\t\t\t// return null;\r\n\t\t}\r\n\t\tconst groupedCollection = collection.reduce((previous, current) => {\r\n\t\t\tif (!previous[current[property]]) {\r\n\t\t\t\tprevious[current[property]] = [current];\r\n\t\t\t} else {\r\n\t\t\t\tprevious[current[property]].push(current);\r\n\t\t\t}\r\n\t\t\treturn previous;\r\n\t\t}, {});\r\n\t\treturn Object.keys(groupedCollection).map((key) => ({\r\n\t\t\tkey,\r\n\t\t\tList: groupedCollection[key],\r\n\t\t}));\r\n\t}\r\n\r\n\tgroupByPartOfProperty(collection: any[], property: string, noOfLetters: number): any[] {\r\n\t\tconst groupedCollection = collection.reduce((previous, current) => {\r\n\t\t\tlet searchKey = current[property].trim().slice(0, noOfLetters).toUpperCase();\r\n\t\t\tif (!previous[searchKey]) previous[searchKey] = [current];\r\n\t\t\telse previous[searchKey].push(current);\r\n\t\t\treturn previous;\r\n\t\t}, {});\r\n\t\treturn Object.keys(groupedCollection).map((key) => ({\r\n\t\t\tkey,\r\n\t\t\tList: groupedCollection[key],\r\n\t\t}));\r\n\t}\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}