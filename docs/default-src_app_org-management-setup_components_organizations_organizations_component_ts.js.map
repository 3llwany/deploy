{"version":3,"file":"default-src_app_org-management-setup_components_organizations_organizations_component_ts.js","mappings":"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","sources":["./src/app/org-management-setup/components/organizations/organizations.component.ts","./src/app/org-management-setup/components/organizations/organizations.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IOrganizationModel,\r\n  IOrganizationRequest,\r\n} from \"app/org-management-setup/models/organizations\";\r\nimport { OrganizationsService } from \"app/org-management-setup/services/organizations.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-organizations\",\r\n  templateUrl: \"./organizations.component.html\",\r\n  styleUrls: [\"./organizations.component.scss\"],\r\n})\r\nexport class OrganizationsComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"id\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"code\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\"logo\"];\r\n  dataSource: MatTableDataSource<IOrganizationModel>;\r\n  removeFiles: boolean = false;\r\n  isLoaded: boolean = false;\r\n  constructor(\r\n    private organizationsService: OrganizationsService,\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<OrganizationsComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      ar_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      code: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      logo: [null /* , [Validators.required] */],\r\n    });\r\n\t\tif (this.data.value) {\r\n\t\t\tthis.formCtrls.ar_name.setValue(this.data.value);\r\n\t\t\tthis.formCtrls.en_name.setValue(this.data.value);\r\n\t\t}\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.organizationsService\r\n      .getList(params)\r\n      .subscribe((res: IResponseList<IOrganizationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    this.removeFiles = false;\r\n    if (this.form.valid) {\r\n      const model: IOrganizationRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_name,\r\n        En_Name: this.form.value.en_name,\r\n        code: this.form.value.code,\r\n        logo: this.form.value.logo,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IOrganizationRequest) {\r\n    this.showLoading();\r\n    this.organizationsService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IOrganizationModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IOrganizationRequest) {\r\n    this.showLoading();\r\n    this.organizationsService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IOrganizationModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  organizationToEdit(organization: IOrganizationModel) {\r\n    this.form.patchValue(organization);\r\n    this.formCtrls.ar_name.setValue(organization.ar_Name);\r\n    this.formCtrls.en_name.setValue(organization.en_Name);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(organization: IOrganizationModel): void {\r\n    let msg = this.msgTranslate(organization.ar_Name, organization.en_Name);\r\n    this.deleateDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(organization);\r\n    });\r\n  }\r\n\r\n  delete(organization: IOrganizationModel) {\r\n    this.showLoading();\r\n    this.organizationsService\r\n      .Delete(organization.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (organization.id == this.formCtrls.id.value) this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n    this.removeFiles = true;\r\n  }\r\n\r\n\tonCloseDialog() {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"organizations\"\r\n          editTitle=\"editOrganization\"\r\n        >\r\n        </page-title>\r\n\r\n        <!-- close btn -->\r\n        <close-dialog-btn\r\n          *ngIf=\"data.isDialog\"\r\n          (click)=\"onCloseDialog()\"\r\n        ></close-dialog-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.code\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"code\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <app-file-upload\r\n                    [control]=\"formCtrls.logo\"\r\n                    label=\"logo\"\r\n                    [multiple]=\"false\"\r\n                    accept=\"image/*\"\r\n                    [isHexImg]=\"true\"\r\n                    [removeFiles]=\"removeFiles\"\r\n                    [isEdit]=\"formCtrls.id.value > 0\"\r\n                  >\r\n                  </app-file-upload>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"!data.isDialog\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [isHexImg]=\"true\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          [actions]=\"rowFunctions\"\r\n          (editRow)=\"organizationToEdit($event)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n        >\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}