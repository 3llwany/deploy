{"version":3,"file":"src_app_system-setup_training-setup_training-setup_module_ts.js","mappings":"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","sources":["./src/app/shared/Guards/check-is-allowd.guard.ts","./src/app/system-setup/training-setup/components/question-category/question-category.component.ts","./src/app/system-setup/training-setup/components/question-category/question-category.component.html","./src/app/system-setup/training-setup/components/survey-type/survey-type.component.ts","./src/app/system-setup/training-setup/components/survey-type/survey-type.component.html","./src/app/system-setup/training-setup/components/test-type/test-type.component.ts","./src/app/system-setup/training-setup/components/test-type/test-type.component.html","./src/app/system-setup/training-setup/services/question-category.service.ts","./src/app/system-setup/training-setup/services/survey-type.service.ts","./src/app/system-setup/training-setup/services/test-type.service.ts","./src/app/system-setup/training-setup/training-setup-routing.module.ts","./src/app/system-setup/training-setup/training-setup.module.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, } from \"@angular/router\";\r\nimport { UserViewsService } from \"app/auth/services/user-views.service\";\r\nimport { IUM_ModulesModel } from \"app/shared/interfaces/user-views\";\r\nimport { LoadingService } from \"app/shared/services/loading.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CheckIsViewAllowedGuard implements CanActivate {\r\n  UserModules: IUM_ModulesModel[];\r\n  public loadingService = inject(LoadingService);\r\n  loading: HTMLElement;\r\n\r\n  constructor(private viewsService: UserViewsService, private router: Router) {\r\n    this.UserModules = viewsService.UserModules$.getValue();\r\n    this.loading = document.getElementById(\"page-loading\");\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    return true;\r\n    // un comment code for used\r\n    // let view = route.data?.view;\r\n    // this.showLoading();\r\n    // if (this.UserModules?.length > 0) {\r\n    //   if (!this.viewsService.isViewAllowed(view)) {\r\n    //     this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //     this.hideLoading();\r\n    //   }\r\n    //   else {\r\n    //     this.hideLoading();\r\n    //     return true;\r\n    //   }\r\n    // }\r\n    //\r\n    // else {\r\n    //   this.viewsService.UserModules$.subscribe((val) => {\r\n    //     if (val?.length > 0) {\r\n    //       if (!this.viewsService.isViewAllowed(view)) {\r\n    //         this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //         this.hideLoading();\r\n    //       }\r\n    //       else {\r\n    //         this.hideLoading();\r\n    //         return true;\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  showLoading() {\r\n    this.loading.style.display = \"block\";\r\n    this.loading.style.opacity = \"1\";\r\n    this.loading.style.zIndex = \"998\";\r\n  }\r\n\r\n  hideLoading() {\r\n    this.loading.style.display = \"none\";\r\n    this.loading.style.opacity = \"0\";\r\n    this.loading.style.zIndex = \"0\";\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport {\r\n  IQuestionCategoryModel,\r\n  IQuestionCategoryRequest,\r\n} from \"app/system-setup/training-setup/models/question-category\";\r\nimport { QuestionCategoryService } from \"app/system-setup/training-setup/services/question-category.service\";\r\n\r\n@Component({\r\n  selector: \"app-question-category\",\r\n  templateUrl: \"./question-category.component.html\",\r\n  styleUrls: [\"./question-category.component.scss\"],\r\n})\r\nexport class QuestionCategoryComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IQuestionCategoryModel>;\r\n\r\n  constructor(public _questionCategoryService: QuestionCategoryService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this._questionCategoryService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IQuestionCategoryModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IQuestionCategoryRequest = {\r\n        id: this.formCtrls.id.value,\r\n        ar_Name: this.formCtrls.ar_Name.value,\r\n        en_Name: this.formCtrls.en_Name.value,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: IQuestionCategoryRequest) {\r\n    this.showLoading();\r\n    this._questionCategoryService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IQuestionCategoryModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IQuestionCategoryRequest) {\r\n    this.showLoading();\r\n    this._questionCategoryService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IQuestionCategoryModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  questionCategoryToEdit(questionCategory: IQuestionCategoryModel) {\r\n    this.form.patchValue(questionCategory);\r\n  }\r\n\r\n  onDelete(questionCategory: IQuestionCategoryModel): void {\r\n    let msg = this.msgTranslate(questionCategory.ar_Name, questionCategory.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(questionCategory);\r\n    });\r\n  }\r\n\r\n  delete(questionCategory: IQuestionCategoryModel) {\r\n    this.showLoading();\r\n    this._questionCategoryService.Delete(questionCategory.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (questionCategory.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"questionCategory\"\r\n          editTitle=\"editQuestionCategory\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [exportService]=\"_questionCategoryService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (editRow)=\"questionCategoryToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ISurveyTypeModel, ISurveyTypeRequest } from \"../../models/survey-type\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { SurveyTypeService } from \"app/system-setup/training-setup/services/survey-type.service\";\r\n\r\n@Component({\r\n  selector: \"app-survey-type\",\r\n  templateUrl: \"./survey-type.component.html\",\r\n  styleUrls: [\"./survey-type.component.scss\"],\r\n})\r\nexport class SurveyTypeComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<ISurveyTypeModel>;\r\n\r\n  constructor(public _surveyTypeService: SurveyTypeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this._surveyTypeService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ISurveyTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ISurveyTypeRequest = {\r\n        id: this.formCtrls.id.value,\r\n        ar_Name: this.formCtrls.ar_Name.value,\r\n        en_Name: this.formCtrls.en_Name.value,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: ISurveyTypeRequest) {\r\n    this.showLoading();\r\n    this._surveyTypeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ISurveyTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ISurveyTypeRequest) {\r\n    this.showLoading();\r\n    this._surveyTypeService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ISurveyTypeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  surveyTYPEToEdit(surveyType: ISurveyTypeModel) {\r\n    this.form.patchValue(surveyType);\r\n  }\r\n\r\n  onDelete(surveyType: ISurveyTypeModel): void {\r\n    let msg = this.msgTranslate(surveyType.ar_Name, surveyType.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(surveyType);\r\n    });\r\n  }\r\n\r\n  delete(surveyType: ISurveyTypeModel) {\r\n    this.showLoading();\r\n    this._surveyTypeService\r\n      .Delete(surveyType.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          if (surveyType.id == this.formCtrls.id.value) this.clearForm();\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"surveyTYPE\"\r\n          editTitle=\"editٍٍٍSurveyTYPE\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"_surveyTypeService\"\r\n        [actions]=\"rowFunctions\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (editRow)=\"surveyTYPEToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { ITestTypeModel, ITestTypeRequest } from \"app/system-setup/training-setup/models/test-type\";\r\nimport { TestTypeService } from \"app/system-setup/training-setup/services/test-type.service\";\r\n\r\n@Component({\r\n  selector: \"app-test-type\",\r\n  templateUrl: \"./test-type.component.html\",\r\n  styleUrls: [\"./test-type.component.scss\"],\r\n})\r\nexport class TestTypeComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<ITestTypeModel>;\r\n\r\n  constructor(public _testTypeService: TestTypeService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this._testTypeService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ITestTypeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: ITestTypeRequest = {\r\n        id: this.formCtrls.id.value,\r\n        ar_Name: this.formCtrls.ar_Name.value,\r\n        en_Name: this.formCtrls.en_Name.value,\r\n      };\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  create(model: ITestTypeRequest) {\r\n    this.showLoading();\r\n    this._testTypeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<ITestTypeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.lastPage, this.page.pageSize);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: ITestTypeRequest) {\r\n    this.showLoading();\r\n    this._testTypeService\r\n      .update(model)\r\n      .subscribe((res: IResponse<ITestTypeModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  testTYPEToEdit(testTYPE: ITestTypeModel) {\r\n    this.form.patchValue(testTYPE);\r\n  }\r\n\r\n  onDelete(testType: ITestTypeModel): void {\r\n    let msg = this.msgTranslate(testType.ar_Name, testType.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(testType);\r\n    });\r\n  }\r\n\r\n  delete(testType: ITestTypeModel) {\r\n    this.showLoading();\r\n    this._testTypeService.Delete(testType.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (testType.id == this.formCtrls.id.value) this.clearForm();\r\n      }\r\n      else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"testTYPE\"\r\n          editTitle=\"editTestTYPE\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.en_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"en_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n            <div class=\"col-md-6 col-12\">\r\n              <app-input\r\n                [control]=\"formCtrls.ar_Name\"\r\n                [submitted]=\"submitted\"\r\n                label=\"ar_Name\"\r\n              >\r\n              </app-input>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"_testTypeService\"\r\n        [actions]=\"rowFunctions\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (editRow)=\"testTYPEToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IQuestionCategoryModel,\r\n  IQuestionCategoryRequest,\r\n} from \"../models/question-category\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class QuestionCategoryService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IQuestionCategoryRequest) {\r\n    return this.post<IResponse<IQuestionCategoryModel>>(\r\n      \"TrainingSetup/QuestionCategory/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IQuestionCategoryRequest) {\r\n    return this.post<IResponse<IQuestionCategoryModel>>(\r\n      \"TrainingSetup/QuestionCategory/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IQuestionCategoryModel[]>>(\r\n      \"TrainingSetup/QuestionCategory/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IQuestionCategoryModel[]>>(\r\n      \"TrainingSetup/QuestionCategory/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"TrainingSetup/QuestionCategory/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { ISurveyTypeModel, ISurveyTypeRequest } from \"../models/survey-type\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class SurveyTypeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ISurveyTypeRequest) {\r\n    return this.post<IResponse<ISurveyTypeModel>>(\"TrainingSetup/SurveyType/Create\", data);\r\n  }\r\n\r\n  update(data: ISurveyTypeRequest) {\r\n    return this.post<IResponse<ISurveyTypeModel>>(\"TrainingSetup/SurveyType/Edit\", data);\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ISurveyTypeModel[]>>(\"TrainingSetup/SurveyType/GetList\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ISurveyTypeModel[]>>(\"TrainingSetup/SurveyType/GetAll\")\r\n  }\r\n\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"TrainingSetup/SurveyType/Delete\", {\r\n      params: { Id: id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { ITestTypeModel } from \"../models/test-type\";\r\nimport { ISurveyTypeRequest } from \"../models/survey-type\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TestTypeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: ISurveyTypeRequest) {\r\n    return this.post<IResponse<ITestTypeModel>>(\r\n      \"TrainingSetup/TestType/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ISurveyTypeRequest) {\r\n    return this.post<IResponse<ITestTypeModel>>(\r\n      \"TrainingSetup/TestType/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ITestTypeModel[]>>(\r\n      \"TrainingSetup/TestType/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ITestTypeModel[]>>(\r\n      \"TrainingSetup/TestType/GetAll\"\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"TrainingSetup/TestType/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { SurveyTypeComponent } from \"./components/survey-type/survey-type.component\";\r\nimport { TestTypeComponent } from \"./components/test-type/test-type.component\";\r\nimport { QuestionCategoryComponent } from \"./components/question-category/question-category.component\";\r\nimport { CourseTypeComponent } from \"./components/course-type/course-type.component\";\r\nimport { CourseCategoryComponent } from \"./components/course-category/course-category.component\";\r\nimport { ExpenseComponent } from \"./components/expense/expense.component\";\r\nimport { ReasonsComponent } from \"./components/reasons/reasons.component\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CheckIsViewAllowedGuard } from \"app/shared/Guards/check-is-allowd.guard\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"survey-type\",\r\n    component: SurveyTypeComponent,\r\n    data: {view: ViewsManager.survey_type},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n  {\r\n    path: \"test-type\",\r\n    component: TestTypeComponent,\r\n    data: {view: ViewsManager.test_type},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"question-category\",\r\n    component: QuestionCategoryComponent,\r\n    data: {view: ViewsManager.question_category},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"course-type\",\r\n    component: CourseTypeComponent,\r\n    data: {view: ViewsManager.course_type},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"course-category\",\r\n    component: CourseCategoryComponent,\r\n    data: {view: ViewsManager.course_category},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"expense\",\r\n    component: ExpenseComponent,\r\n    data: {view: ViewsManager.expense},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n\r\n  {\r\n    path: \"reasons\",\r\n    component: ReasonsComponent,\r\n    data: {view: ViewsManager.reasons},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TrainingSetupRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { TrainingSetupRoutingModule } from \"./training-setup-routing.module\";\r\nimport { TestTypeComponent } from \"./components/test-type/test-type.component\";\r\nimport { QuestionCategoryComponent } from \"./components/question-category/question-category.component\";\r\nimport { CourseCategoryComponent } from \"./components/course-category/course-category.component\";\r\nimport { ExpenseComponent } from \"./components/expense/expense.component\";\r\nimport { ReasonsComponent } from \"./components/reasons/reasons.component\";\r\nimport { CourseTypeComponent } from \"./components/course-type/course-type.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { SurveyTypeComponent } from \"./components/survey-type/survey-type.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SurveyTypeComponent,\r\n    TestTypeComponent,\r\n    QuestionCategoryComponent,\r\n    CourseTypeComponent,\r\n    CourseCategoryComponent,\r\n    ExpenseComponent,\r\n    ReasonsComponent,\r\n  ],\r\n  imports: [CommonModule, TrainingSetupRoutingModule, SharedModule],\r\n})\r\nexport class TrainingSetupModule {}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}