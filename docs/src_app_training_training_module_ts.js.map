{"version":3,"file":"src_app_training_training_module_ts.js","mappings":"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","sources":["./src/app/training/components/courses/course-index/course-index.component.ts","./src/app/training/components/courses/course-index/course-index.component.html","./src/app/training/components/implementation/add-implementation/add-implementation-core/add-implementation-core.component.ts","./src/app/training/components/implementation/add-implementation/add-implementation-core/add-implementation-core.component.html","./src/app/training/components/implementation/implementation-index/implementation-index.component.ts","./src/app/training/components/implementation/implementation-index/implementation-index.component.html","./src/app/training/components/instructor/instructor-index/instructor-index.component.ts","./src/app/training/components/instructor/instructor-index/instructor-index.component.html","./src/app/training/components/training-plan/add-paln/plan-core/plan-core.component.ts","./src/app/training/components/training-plan/add-paln/plan-core/plan-core.component.html","./src/app/training/components/training-plan/add-paln/plan-courses-and-expensis/plan-courses-and-expensis.component.ts","./src/app/training/components/training-plan/add-paln/plan-courses-and-expensis/plan-courses-and-expensis.component.html","./src/app/training/components/training-plan/add-paln/plan-expenses/plan-expenses.component.ts","./src/app/training/components/training-plan/add-paln/plan-expenses/plan-expenses.component.html","./src/app/training/components/training-plan/add-paln/plan-general-data/plan-general-data.component.ts","./src/app/training/components/training-plan/add-paln/plan-general-data/plan-general-data.component.html","./src/app/training/components/training-plan/add-paln/training-needs-analysis/training-needs-analysis.component.ts","./src/app/training/components/training-plan/add-paln/training-needs-analysis/training-needs-analysis.component.html","./src/app/training/components/training-plan/plan-view/general-info-plan-view/general-info-plan-view.component.ts","./src/app/training/components/training-plan/plan-view/general-info-plan-view/general-info-plan-view.component.html","./src/app/training/components/training-plan/plan-view/plan-view-core/plan-view-core.component.ts","./src/app/training/components/training-plan/plan-view/plan-view-core/plan-view-core.component.html","./src/app/training/components/training-plan/training-plan-index/training-plan-index.component.ts","./src/app/training/components/training-plan/training-plan-index/training-plan-index.component.html","./src/app/training/components/training-requests/add-training-request/add-training-request.component.ts","./src/app/training/components/training-requests/add-training-request/add-training-request.component.html","./src/app/training/components/training-requests/training-request-index/training-request-index.component.ts","./src/app/training/components/training-requests/training-request-index/training-request-index.component.html","./src/app/training/components/tsp/tsp-index/tsp-index.component.ts","./src/app/training/components/tsp/tsp-index/tsp-index.component.html","./src/app/training/mapper/implementation.ts","./src/app/training/mapper/training-plan.ts","./src/app/training/models/training-request.ts","./src/app/training/services/implementation/implementation.service.ts","./src/app/training/services/traning-plan/plan-expenses.service.ts","./src/app/training/services/traning-plan/training-needs-analysis.service.ts","./src/app/training/services/traning-plan/training-plan-index.service.ts","./src/app/training/training-routing.module.ts","./src/app/training/training.module.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { courseToDisplay } from \"app/training/mapper/course\";\r\nimport {\r\n  ICourseModel,\r\n  ICourseToDisplay,\r\n} from \"app/training/models/course/course\";\r\nimport { CourseService } from \"app/training/services/course/course.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-index\",\r\n  templateUrl: \"./course-index.component.html\",\r\n  styleUrls: [\"./course-index.component.scss\"],\r\n})\r\nexport class CourseIndexComponent extends AppHelpers implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<ICourseToDisplay>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"courseCode\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"abbrevation\",\r\n    \"courseCategory\",\r\n    \"courseType\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\r\n    \"id\",\r\n    \"isFree\",\r\n    \"courseValue\",\r\n    \"isHolding\",\r\n    \"holdingYears\",\r\n    \"courseValue\",\r\n    \"penaletyPercentege\",\r\n    \"threeMontheEvalution\",\r\n    \"isFree\",\r\n    \"sixMontheEvalution\",\r\n  ];\r\n\r\n  constructor(public courseService: CourseService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.courseService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ICourseModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(courseToDisplay(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  delete(course: ICourseModel) {\r\n    this.showLoading();\r\n    this.courseService.Delete(course.id).subscribe((res: IResponse) => {\r\n      if ((res.message.messageType = MessageTypes.Success)) {\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        } else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(course: ICourseModel) {\r\n    let msg = this.msgTranslate(course.ar_Name, course.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(course);\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>\r\n    <page-title\r\n      title=\"courses\"\r\n      class=\"mb-10\"\r\n      [globalFunctions]=\"globalFunctions\"\r\n    ></page-title>\r\n  </mat-card-title>\r\n  <mat-divider></mat-divider>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"courseService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-implementation-core',\r\n  templateUrl: './add-implementation-core.component.html',\r\n  styleUrls: ['./add-implementation-core.component.scss']\r\n})\r\nexport class AddImplementationCoreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  add-implementation-core works!\r\n</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { implementationToDisplay } from \"app/training/mapper/implementation\";\r\nimport { IImplementationModel } from \"app/training/models/implementation/implementation\";\r\nimport { ImplementationService } from \"app/training/services/implementation/implementation.service\";\r\n\r\n@Component({\r\n  selector: \"app-implementation-index\",\r\n  templateUrl: \"./implementation-index.component.html\",\r\n  styleUrls: [\"./implementation-index.component.scss\"],\r\n})\r\nexport class ImplementationIndexComponent extends AppHelpers implements OnInit {\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"title\",\r\n    \"en_Name\",\r\n    \"from_Date\",\r\n    \"to_Date\",\r\n    \"noOfEmployees\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\"id\"];\r\n\r\n  dataSource: MatTableDataSource<IImplementationModel>;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(public implementationService: ImplementationService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.removePageParams();\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.implementationService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IImplementationModel[]>) => {\r\n        if (res.message.messageType == 1) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(\r\n            implementationToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  onDelete(implementation: IImplementationModel): void {\r\n    let msg = implementation.id;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(implementation);\r\n    });\r\n  }\r\n\r\n  delete(implementation: IImplementationModel) {\r\n    this.showLoading();\r\n    this.implementationService\r\n      .Delete(implementation.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == 1) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title title=\"implementation\" [globalFunctions]=\"globalFunctions\">\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isRowClickable]=\"false\"\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [exportService]=\"implementationService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IInstructorModel } from \"app/training/models/instructor\";\r\nimport { InstructorService } from \"app/training/services/instructor.service\";\r\n\r\n@Component({\r\n  selector: \"app-instructor-index\",\r\n  templateUrl: \"./instructor-index.component.html\",\r\n  styleUrls: [\"./instructor-index.component.scss\"],\r\n})\r\nexport class InstructorIndexComponent extends AppHelpers implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<IInstructorModel>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"job\",\r\n    \"is_TOT\",\r\n    \"mobile\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\r\n    // \"id\",\r\n    \"code\",\r\n    \"phone\",\r\n    \"email\",\r\n    \"qualification\",\r\n    \"note\",\r\n  ];\r\n\r\n  constructor(public instructorService: InstructorService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.instructorService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IInstructorModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  delete(model: IInstructorModel) {\r\n    this.showLoading();\r\n    this.instructorService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if ((res.message.messageType = MessageTypes.Success)) {\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        } else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(model: IInstructorModel) {\r\n    let msg = this.msgTranslate(model.ar_Name, model.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(model);\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>\r\n    <page-title\r\n      title=\"instructors\"\r\n      [globalFunctions]=\"globalFunctions\"\r\n    ></page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"instructorService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatStepper } from \"@angular/material/stepper\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-plan-core\",\r\n  templateUrl: \"./plan-core.component.html\",\r\n  styleUrls: [\"./plan-core.component.scss\"],\r\n})\r\nexport class PlanCoreComponent extends AppHelpers implements OnInit {\r\n  planId: number = 0;\r\n  @ViewChild(\"stepper\") stepper: MatStepper;\r\n\r\n  updateCourseDropdown: boolean = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.planId = Number(param.id) ?? 0;\r\n    });\r\n  }\r\n\r\n  stepChanged() {\r\n    // prevent inputs to be invalid after next & back\r\n    this.stepper.selected.interacted = false;\r\n  }\r\n\r\n  getPlanId(value) {\r\n    this.planId = value;\r\n  }\r\n}\r\n","<mat-card-title class=\"title-no-margin title-section fixed-title\">\r\n  <page-title title=\"addPlan\"></page-title>\r\n\r\n  <ng-container>\r\n    <!-- add new btn -->\r\n    <app-add-new-btn\r\n      *ngIf=\"planId > 0\"\r\n      url=\"/training/{{ moduleId }}/training-plan/add\"\r\n      [params]=\"parentParam\"\r\n    >\r\n    </app-add-new-btn>\r\n\r\n    <app-back-btn\r\n      url=\"/training/{{ moduleId }}/training-plan/index\"\r\n      [params]=\"pageParams\"\r\n    >\r\n    </app-back-btn>\r\n  </ng-container>\r\n</mat-card-title>\r\n\r\n<ng-container>\r\n  <mat-card-content class=\"cards-no-shadow has-fixed-title\">\r\n    <mat-stepper #stepper [linear]=\"false\" (selectionChange)=\"stepChanged()\">\r\n      <mat-step label=\"{{ 'general' | translate | titlecase }}\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-card>\r\n              <mat-card-title class=\"title-no-margin\">\r\n                <page-title title=\"generalInfo\"></page-title>\r\n              </mat-card-title>\r\n\r\n              <mat-divider class=\"mt-2\"></mat-divider>\r\n              <div class=\"clearfix\"></div>\r\n\r\n              <app-plan-general-data\r\n                (changePlanId)=\"getPlanId($event)\"\r\n              ></app-plan-general-data>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n\r\n      <mat-step label=\"{{ 'trainingNeedsAnalysis' | translate | titlecase }}\"\r\n      >\r\n        <app-training-needs-analysis\r\n          [planId]=\"planId\"\r\n          (updateCourseDropdown)=\"updateCourseDropdown = !updateCourseDropdown\"\r\n        ></app-training-needs-analysis>\r\n      </mat-step>\r\n\r\n      <mat-step label=\"{{ 'planCoursesExpensis' | translate | titlecase }}\">\r\n        <app-plan-courses-and-expensis\r\n          [planId]=\"planId\"\r\n          [updateCourseDropdown]=\"updateCourseDropdown\"\r\n        ></app-plan-courses-and-expensis\r\n        >\r\n      </mat-step>\r\n    </mat-stepper>\r\n  </mat-card-content>\r\n\r\n  <steps-footer [stepper]=\"stepper\" [parentParam]=\"parentParam\"></steps-footer>\r\n</ng-container>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { IRowActionsModel } from \"app/shared/interfaces/user-views\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport {\r\n  planCourseEmployeeToDisplay,\r\n  planCourseToDisplay,\r\n} from \"app/training/mapper/training-plan\";\r\nimport {\r\n  IPlanCourseEmployeeDeleteParams,\r\n  IPlanCourseEmployeesSearchParams,\r\n  IPlanCourseModel,\r\n  IPlanCourseRequest,\r\n  IPlanCoursesEmployeeModel,\r\n} from \"app/training/models/training-plan/plan-courses-expenses\";\r\nimport { PlanCoursesService } from \"app/training/services/traning-plan/plan-courses.service\";\r\nimport { PlanExpensesComponent } from \"../plan-expenses/plan-expenses.component\";\r\n\r\n@Component({\r\n  selector: \"app-plan-courses-and-expensis\",\r\n  templateUrl: \"./plan-courses-and-expensis.component.html\",\r\n  styleUrls: [\"./plan-courses-and-expensis.component.scss\"],\r\n})\r\nexport class PlanCoursesAndExpensisComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  @Input() planId: number = 0;\r\n  @Input() isView: boolean = false;\r\n  showOnlyIndex = false;\r\n  @Output() updateViewDisplay = new EventEmitter<boolean>();\r\n\r\n  // change dropdown && employees\r\n  @Input() updateCourseDropdown: boolean;\r\n\r\n  @ViewChild(PlanExpensesComponent) expenseComponent: PlanExpensesComponent;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomnsSearch: string[] = [\r\n    // \"Ser\",\r\n    \"code\",\r\n    \"employeeNameEn\",\r\n    \"employeeNameAr\",\r\n    \"job\",\r\n    \"selectAll\",\r\n  ];\r\n  isLoadedSearch: boolean = false;\r\n  dataSourceSearch: MatTableDataSource<IPlanCoursesEmployeeModel>;\r\n\r\n  mandatoryColomnsEmployee: string[] = [\r\n    // \"Ser\",\r\n    \"code\",\r\n    \"employeeNameEn\",\r\n    \"employeeNameAr\",\r\n    \"job\",\r\n    \"actions\",\r\n  ];\r\n  isLoadedEmployee: boolean = false;\r\n  dataSourceEmployee: MatTableDataSource<IPlanCoursesEmployeeModel>;\r\n\r\n  mandatoryColomnsCourses: string[] = [\r\n    // \"Ser\",\r\n    \"title\",\r\n    \"plan\",\r\n    \"course\",\r\n    \"fromDate\",\r\n    \"toDate\",\r\n    \"online\",\r\n    \"budget\",\r\n    \"actions\",\r\n  ];\r\n  isLoadedCourses: boolean = false;\r\n  dataSourceCourses: MatTableDataSource<IPlanCourseModel>;\r\n\r\n  optionalColomns: string[] = [];\r\n\r\n  showIndexAfterSubmit: boolean = false;\r\n\r\n  rowFunctionsSelectedEmployees: IRowActionsModel;\r\n\r\n  constructor(private planCoursesService: PlanCoursesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNallable: true }],\r\n      course_ID: [null, [Validators.required]],\r\n      planCourseTitle: [null, [Validators.required]],\r\n      from_Date: [null, [Validators.required]],\r\n      to_Date: [null, [Validators.required]],\r\n      instructor_ID: [, [Validators.required]],\r\n      note: [null],\r\n      isOnline: [true],\r\n      tsP_ID: [null],\r\n    });\r\n\r\n    this.formCtrls.course_ID.valueChanges.subscribe((courseId) => {\r\n      if (courseId > 0) this.searchEmployees(courseId);\r\n    });\r\n\r\n    if (this.isView) this.showOnlyIndex = true;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    // if (this.dataSourceSearch?.data?.length > 0)\r\n    //   this.dataSourceSearch = new MatTableDataSource(null);\r\n    if (this.dataSourceCourses?.data?.length > 0)\r\n      this.dataSourceCourses = new MatTableDataSource(null);\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.planId > 0) {\r\n      this.getList(this.firstPage);\r\n    } else {\r\n      this.isLoadedCourses = true;\r\n    }\r\n  }\r\n\r\n  override onModulesChanged(): void {\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.plan_course\r\n    );\r\n\r\n    this.rowFunctionsSelectedEmployees = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.plan_course_general_data\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.updateCourseDropdown) {\r\n      this.searchEmployees(this.formCtrls?.course_ID.value);\r\n    }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // //////////////// section 1 >> course & employees //////////////// //\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPlanCourseRequest = {\r\n        plan_Course: {\r\n          id: this.form.value.id,\r\n          Plan_ID: this.planId,\r\n          Course_ID: this.form.value.course_ID,\r\n          Name: this.form.value.planCourseTitle,\r\n          From_Date: HelpersFunctions.mapDateReverse(this.form.value.from_Date),\r\n          To_Date: HelpersFunctions.mapDateReverse(this.form.value.to_Date),\r\n          TSP_ID: this.form.value.tsP_ID,\r\n          Instructor_ID: this.form.value.instructor_ID,\r\n          Note: this.form.value.note,\r\n        },\r\n        IsOnline: this.form.value.isOnline ?? false,\r\n        SelectedEmployeeInstanceIDs: [], // get from datasource employees\r\n      };\r\n      if (model.IsOnline) model.plan_Course.TSP_ID = null;\r\n\r\n      this.dataSourceSearch?.data\r\n        ?.filter((ele) => ele.isSelected)\r\n        .forEach((selected) => {\r\n          model.SelectedEmployeeInstanceIDs.push(selected.person_Instance_ID);\r\n        });\r\n\r\n      // employees added before\r\n      this.dataSourceEmployee?.data?.forEach((emp) => {\r\n        model.SelectedEmployeeInstanceIDs.push(emp.person_Instance_ID);\r\n      });\r\n\r\n      if (model.SelectedEmployeeInstanceIDs.length == 0) {\r\n        this.warning(\"selectOneEmployee\");\r\n        return;\r\n      }\r\n\r\n      model.plan_Course.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  // add course and employees\r\n  create(model: IPlanCourseRequest) {\r\n    this.showLoading();\r\n    this.planCoursesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IPlanCourseRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.formCtrls.id.setValue(res.data.plan_Course.id);\r\n          if (this.isView) this.getList(this.currentPage);\r\n          // update employees tables\r\n          this.searchEmployees(model.plan_Course.Course_ID);\r\n          this.getSelectedEmployees(model.plan_Course.Course_ID);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IPlanCourseRequest) {\r\n    this.showLoading();\r\n    this.planCoursesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IPlanCourseRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.isView) this.getList(this.currentPage);\r\n          if (\r\n            model.SelectedEmployeeInstanceIDs.length !=\r\n            this.dataSourceEmployee?.data?.length\r\n          ) {\r\n            // update employees tables\r\n            this.searchEmployees(model.plan_Course.Course_ID);\r\n            this.getSelectedEmployees(model.plan_Course.Course_ID);\r\n          }\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  // get employees when select course\r\n  searchEmployees(courseId: number) {\r\n    this.dataSourceSearch = new MatTableDataSource(null);\r\n    if (courseId > 0) {\r\n      this.isLoadedSearch = false;\r\n      let searchParams: IPlanCourseEmployeesSearchParams = {\r\n        planId: this.planId,\r\n        Course_ID: courseId,\r\n      };\r\n      this.planCoursesService\r\n        .getPlanEmployees(searchParams)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponse<IPlanCoursesEmployeeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSourceSearch = new MatTableDataSource(\r\n              planCourseEmployeeToDisplay(res.data)\r\n            );\r\n            this.isLoadedSearch = true;\r\n          } else this.errorList(res.message.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  // get employees selected >> in edit course\r\n  getSelectedEmployees(courseId: number) {\r\n    this.dataSourceEmployee = new MatTableDataSource(null);\r\n    if (courseId > 0) {\r\n      this.isLoadedEmployee = false;\r\n      let searchParams: IPlanCourseEmployeesSearchParams = {\r\n        planId: this.planId,\r\n        Course_ID: courseId,\r\n      };\r\n      this.planCoursesService\r\n        .getSelectedEmployees(searchParams)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponse<IPlanCoursesEmployeeModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSourceEmployee = new MatTableDataSource(\r\n              planCourseEmployeeToDisplay(res.data)\r\n            );\r\n            this.isLoadedEmployee = true;\r\n          } else this.errorList(res.message.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  changeIsOnline(value: boolean) {\r\n    if (value) this.formCtrls.tsP_ID.clearValidators();\r\n    else this.formCtrls.tsP_ID.setValidators([Validators.required]);\r\n    this.formCtrls.tsP_ID.updateValueAndValidity();\r\n  }\r\n\r\n  onDeleteEmployee(employee: IPlanCoursesEmployeeModel): void {\r\n    let msg = this.msgTranslate(\r\n      employee.employeeNameAr,\r\n      employee.employeeNameEn\r\n    );\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.deleteEmployee(employee);\r\n    });\r\n  }\r\n\r\n  deleteEmployee(employee: IPlanCoursesEmployeeModel) {\r\n    let deleteParams: IPlanCourseEmployeeDeleteParams = {\r\n      person_instance_id: employee.person_Instance_ID,\r\n      plan_course_id: this.formCtrls.id.value,\r\n    };\r\n    this.showLoading();\r\n    this.planCoursesService\r\n      .DeleteEmployee(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // update employees tables\r\n          this.searchEmployees(this.formCtrls.course_ID.value);\r\n          this.getSelectedEmployees(this.formCtrls.course_ID.value);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onClearAll(): void {\r\n    let msg = this.translate(\"allEmployees\");\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.clearAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  clearAll() {\r\n    this.showLoading();\r\n    this.planCoursesService\r\n      .DeleteAllEmployees(this.formCtrls.id.value)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // update employees tables\r\n          this.searchEmployees(this.formCtrls.course_ID.value);\r\n          this.dataSourceEmployee = new MatTableDataSource([]);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0, isOnline: true });\r\n    this.submitted = false;\r\n\r\n    this.dataSourceEmployee = new MatTableDataSource(null);\r\n  }\r\n\r\n  // //////////////// section 3 > index //////////////// //\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.dataSourceCourses = new MatTableDataSource(null);\r\n    this.isLoadedCourses = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.planCoursesService\r\n      .getList(this.planId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IPlanCourseModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSourceCourses = new MatTableDataSource(\r\n            planCourseToDisplay(res.data)\r\n          );\r\n          this.isLoadedCourses = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  courseAndExpensesToEdit(course: IPlanCourseModel) {\r\n    this.form.patchValue(course);\r\n    // this.formCtrls.course_ID.setValue(course.course_ID);\r\n    this.formCtrls.planCourseTitle.setValue(course.name);\r\n    this.formCtrls.isOnline.setValue(course.tsP_ID ? false : true);\r\n    if (this.isView) this.showAddInsideView();\r\n    this.getSelectedEmployees(course.course_ID);\r\n  }\r\n\r\n  onDelete(course: IPlanCourseModel): void {\r\n    let msg = course.title + \" - \" + course.course;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(course);\r\n    });\r\n  }\r\n\r\n  delete(course: IPlanCourseModel) {\r\n    this.showLoading();\r\n    this.planCoursesService.Delete(course.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSourceCourses.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        } else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  // //////////////// submit all //////////////// //\r\n\r\n  submitAll() {\r\n    this.getList(this.currentPage);\r\n    if (this.isView) this.returnToView();\r\n    else {\r\n      this.clearForm();\r\n      this.expenseComponent.clearForm();\r\n      this.showIndexAfterSubmit = true;\r\n    }\r\n  }\r\n\r\n  // //////////////// view //////////////// //\r\n\r\n  showAddInsideView() {\r\n    this.updateViewDisplay.emit(true);\r\n    this.showOnlyIndex = false;\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }\r\n\r\n  returnToView() {\r\n    this.updateViewDisplay.emit(false);\r\n    this.showOnlyIndex = true;\r\n    this.clearForm();\r\n    this.expenseComponent.clearForm();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\" [class.hidden]=\"showOnlyIndex\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title title=\"generalInformationAboutPlanCourse\"></page-title>\r\n        <span> 1/2 </span>\r\n\r\n        <button\r\n          mat-button\r\n          class=\"float-right section-edit-btn pright-6 pleft-6 darkBlue\"\r\n          id=\"section_edit_btn\"\r\n          (click)=\"returnToView()\"\r\n          *ngIf=\"!showOnlyIndex && isView\"\r\n        >\r\n          <i class=\"ft-corner-up-left font-medium-3\"></i>\r\n        </button>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-course-by-plan-dropdown\r\n                    [control]=\"formCtrls.course_ID\"\r\n                    [planId]=\"planId ?? 0\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    [changeList]=\"updateCourseDropdown\"\r\n                  ></app-course-by-plan-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.planCourseTitle\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"planCourseTitle\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.from_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"fromDate\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.to_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"toDate\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-instructor-dropdown\r\n                    [control]=\"formCtrls.instructor_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  ></app-instructor-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.note\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"notes\"\r\n                  ></app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12 mbottom-20 mtop-14\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isOnline\"\r\n                    label=\"online\"\r\n                    labelPosition=\"before\"\r\n                    class=\"w-100\"\r\n                    (onChange)=\"changeIsOnline($event)\"\r\n                  ></app-check-box>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"col-md-4 col-lg-3 col-12\"\r\n                  [class.hidden]=\"formCtrls.isOnline.value\"\r\n                >\r\n                  <app-tsp-dropdown\r\n                    [control]=\"formCtrls.tsP_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  ></app-tsp-dropdown>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <!-- display after choose course -->\r\n      <ng-container *ngIf=\"formCtrls.course_ID.value > 0\">\r\n        <mat-card-content>\r\n          <mat-divider class=\"w-75 m-auto\"></mat-divider>\r\n\r\n          <app-material-table\r\n            [isLoaded]=\"isLoadedSearch\"\r\n            [dataSource]=\"dataSourceSearch\"\r\n            [mandatoryColomns]=\"mandatoryColomnsSearch\"\r\n            [optionalColomns]=\"optionalColomns\"\r\n            class=\"table-in-forms\"\r\n            [showPaginator]=\"false\"\r\n            [showFilter]=\"false\"\r\n            checkboxColumnName=\"isSelected\"\r\n          >\r\n          </app-material-table>\r\n        </mat-card-content>\r\n      </ng-container>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn\r\n          [disabled]=\"!planId\"\r\n          [id]=\"formCtrls.id.value\"\r\n          [color]=\"btn.darkBlue\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [iconPositionBefore]=\"false\"\r\n          (onClick)=\"submit()\"\r\n        >\r\n        </submit-btn>\r\n\r\n        <reset-form-btn\r\n          *ngIf=\"formCtrls.id.value > 0 && (isView || showIndexAfterSubmit)\"\r\n          (click)=\"clearForm()\"\r\n        >\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- display selected employees (edit course mode) -->\r\n<div class=\"row mtop-26\" *ngIf=\"formCtrls.id.value > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title title=\"selectedEmployees\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content>\r\n        <mat-divider class=\"w-75 m-auto\"></mat-divider>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoadedEmployee\"\r\n          [dataSource]=\"dataSourceEmployee\"\r\n          [mandatoryColomns]=\"mandatoryColomnsEmployee\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [actions]=\"rowFunctionsSelectedEmployees\"\r\n          (deleteRow)=\"onDeleteEmployee($event)\"\r\n          class=\"table-in-forms\"\r\n          [showPaginator]=\"false\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"clearAll\"\r\n          [color]=\"btn.darkBlueBorder\"\r\n          (click)=\"clearAll()\"\r\n        >\r\n        </app-button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- expenses -->\r\n<div class=\"row mtop-26\" [class.hidden]=\"showOnlyIndex\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <app-plan-expenses\r\n        [planId]=\"planId\"\r\n        [planCourseId]=\"formCtrls.id.value\"\r\n      ></app-plan-expenses>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <app-button\r\n          [disabled]=\"!planId || formCtrls.id.value == 0\"\r\n          label=\"saveAndSubmitPlan\"\r\n          [color]=\"btn.darkBlue\"\r\n          (click)=\"submitAll()\"\r\n        >\r\n        </app-button>\r\n        <div class=\"clearfix\"></div>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- plan courses index -->\r\n<div class=\"row mtop-26\" *ngIf=\"planId > 0 && (isView || showIndexAfterSubmit)\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title title=\"planCoursesIndex\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-35\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"addPlan\"\r\n          class=\"float-right mb-1\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [iconPositionBefore]=\"false\"\r\n          [color]=\"btn.darkBlue\"\r\n          (click)=\"showAddInsideView()\"\r\n          *ngIf=\"showOnlyIndex\"\r\n        >\r\n        </app-button>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoadedCourses\"\r\n          [dataSource]=\"dataSourceCourses\"\r\n          [mandatoryColomns]=\"mandatoryColomnsCourses\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [page]=\"page\"\r\n          [actions]=\"rowFunctions\"\r\n          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n          (editRow)=\"courseAndExpensesToEdit($event)\"\r\n          [showPaginator]=\"false\"\r\n          class=\"table-in-forms\"\r\n          [showSpaceTop]=\"false\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { planCourseExpenseToDisplay } from \"app/training/mapper/training-plan\";\r\nimport {\r\n  IPlanCourseExpensesDeleteParams,\r\n  IPlanCourseExpensesModel,\r\n  IPlanCourseExpensesRequest,\r\n} from \"app/training/models/training-plan/plan-courses-expenses\";\r\nimport { PlanExpensesService } from \"app/training/services/traning-plan/plan-expenses.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-plan-expenses\",\r\n  templateUrl: \"./plan-expenses.component.html\",\r\n  styleUrls: [\"./plan-expenses.component.scss\"],\r\n})\r\nexport class PlanExpensesComponent extends AppHelpers implements OnInit {\r\n  @Input() planId: number = 0;\r\n  @Input() planCourseId: number = 0;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    // \"Ser\",\r\n    \"expense\",\r\n    \"value\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<IPlanCourseExpensesModel>;\r\n\r\n  constructor(private planExpensesService: PlanExpensesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNallable: true }],\r\n      expenseId: [null, [Validators.required]],\r\n      budget: [null, [Validators.required, CustomValidators.gte(0)]],\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes.planCourseId?.currentValue > 0 &&\r\n      this.checkNoBusinessOrCompany()\r\n    )\r\n      this.getAll();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.planCourseId > 0) this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  override onModulesChanged(): void {\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.plan_course_expense\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.planExpensesService\r\n      .getAll(this.planCourseId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPlanCourseExpensesModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            planCourseExpenseToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPlanCourseExpensesRequest = {\r\n        plan_Course_ID: this.planCourseId,\r\n        expense_ID: this.form.value.expenseId,\r\n        expense_Value: this.form.value.budget,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IPlanCourseExpensesRequest) {\r\n    this.showLoading();\r\n    this.planExpensesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IPlanCourseExpensesModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.clearForm();\r\n          this.getAll();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(expense: IPlanCourseExpensesModel): void {\r\n    let msg = expense.expense + \" - \" + expense.value;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(expense);\r\n    });\r\n  }\r\n\r\n  delete(expense: IPlanCourseExpensesModel) {\r\n    let deleteParams: IPlanCourseExpensesDeleteParams = {\r\n      plan_course_id: expense.plan_Course_ID,\r\n      expense_id: expense.expense_ID,\r\n    };\r\n    this.showLoading();\r\n    this.planExpensesService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset(/* { id: 0 } */);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<mat-card-title>\r\n  <page-title title=\"planCourseExpenses\"></page-title>\r\n  <span> 2/2 </span>\r\n</mat-card-title>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<mat-card-content class=\"container-fluid mtop-45\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <courseForm [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-expenses-dropdown\r\n              [control]=\"formCtrls.expenseId\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n            ></app-expenses-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.budget\"\r\n              [submitted]=\"submitted\"\r\n              label=\"budget\"\r\n              type=\"number\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-3 col-12\">\r\n            <submit-btn\r\n              [disabled]=\"!planCourseId\"\r\n              [color]=\"btn.darkBlue\"\r\n              icon=\"pi pi-plus-circle\"\r\n              class=\"btn-large mt-1 line-height-3\"\r\n              [iconPositionBefore]=\"false\"\r\n              (onClick)=\"submit()\"\r\n            >\r\n            </submit-btn>\r\n          </div>\r\n        </div>\r\n      </courseForm>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<!-- expenses index -->\r\n<ng-container *ngIf=\"planCourseId\">\r\n  <mat-card-content>\r\n    <mat-divider class=\"w-75 m-auto\"></mat-divider>\r\n\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [dataSource]=\"dataSource\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [actions]=\"rowFunctions\"\r\n      class=\"table-in-forms small-table\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n      [showPaginator]=\"false\"\r\n      [showFilter]=\"false\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</ng-container>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport {\r\n  ITrainingPlanModel,\r\n  ITrainingPlanRequest,\r\n} from \"app/training/models/training-plan/training-plan\";\r\nimport { TrainingPlanIndexService } from \"app/training/services/traning-plan/training-plan-index.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-plan-general-data\",\r\n  templateUrl: \"./plan-general-data.component.html\",\r\n  styleUrls: [\"./plan-general-data.component.scss\"],\r\n})\r\nexport class PlanGeneralDataComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  planId: number = 0;\r\n  @Output() changePlanId = new EventEmitter<number>();\r\n\r\n  // use in view\r\n  @Input() plan: ITrainingPlanModel;\r\n  @Output() closeAfterUpdate = new EventEmitter<ITrainingPlanModel>();\r\n\r\n  constructor(private trainingPlanIndexService: TrainingPlanIndexService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.planId > 0 && this.checkNoBusinessOrCompany) this.getPlanById();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [this.planId, { nonNullable: true }],\r\n        ar_Name: [null, [Validators.required]],\r\n        en_Name: [null, [Validators.required]],\r\n        from_Date: [null, Validators.required],\r\n        to_Date: [null, Validators.required],\r\n        note: [null],\r\n        budget: [null, [CustomValidators.gte(0)]],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"from_Date\", \"to_Date\"),\r\n      }\r\n    );\r\n\r\n    if (this.plan) this.planId = this.plan.id;\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let data = {} as ITrainingPlanRequest;\r\n      data.id = this.formCtrls.id.value;\r\n      data.ar_Name = this.formCtrls.ar_Name.value;\r\n      data.en_Name = this.formCtrls.en_Name.value;\r\n      data.from_Date = HelpersFunctions.mapDateReverse(\r\n        this.formCtrls.from_Date.value\r\n      );\r\n      data.to_Date = HelpersFunctions.mapDateReverse(\r\n        this.formCtrls.to_Date.value\r\n      );\r\n      data.budget = this.formCtrls.budget.value;\r\n      data.note = this.formCtrls.note.value;\r\n\r\n      if (data.id == 0) this.create(data);\r\n      else this.update(data);\r\n    }\r\n  }\r\n\r\n  getPlanById() {\r\n    // edit in view\r\n    if (this.plan) this.form.patchValue(this.plan);\r\n    // edit after add if change company\r\n    else {\r\n      this.showLoading();\r\n      this.trainingPlanIndexService\r\n        .getById(this.planId)\r\n        .subscribe((res: IResponse<ITrainingPlanModel[]>) => {\r\n          if ((res.message.messageType = MessageTypes.Success)) {\r\n            this.form.patchValue(res.data[0]);\r\n          } else this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        });\r\n    }\r\n  }\r\n\r\n  create(data: ITrainingPlanRequest) {\r\n    this.showLoading();\r\n    this.trainingPlanIndexService\r\n      .create(data)\r\n      .subscribe((res: IResponse<ITrainingPlanModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.planId = res.data.id;\r\n          this.formCtrls.id.setValue(this.planId);\r\n          let url = `/training/${this.moduleId}/training-plan/edit/${this.planId}`;\r\n          this.navigateTo(url);\r\n          this.changePlanId.emit(this.planId);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(data: ITrainingPlanRequest) {\r\n    this.showLoading();\r\n    this.trainingPlanIndexService\r\n      .update(data)\r\n      .subscribe((res: IResponse<ITrainingPlanModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.closeAfterUpdate.emit(res.data);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<mat-card-content class=\"container-fluid mtop-40\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.ar_Name\"\r\n              [submitted]=\"submitted\"\r\n              label=\"ar_Name\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.en_Name\"\r\n              [submitted]=\"submitted\"\r\n              label=\"en_Name\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.budget\"\r\n              [submitted]=\"submitted\"\r\n              label=\"budget\"\r\n              type=\"number\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.from_Date\"\r\n              [submitted]=\"submitted\"\r\n              label=\"froM_DATE\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.to_Date\"\r\n              [submitted]=\"submitted\"\r\n              label=\"tO_DATE\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.note\"\r\n              [submitted]=\"submitted\"\r\n              label=\"notes\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\" [style]=\"{ 'margin-bottom': '-15px' }\">\r\n  <submit-btn\r\n    (onClick)=\"submit()\"\r\n    [id]=\"formCtrls.id.value\"\r\n    [color]=\"btn.darkBlue\"\r\n    icon=\"pi pi-plus-circle\"\r\n    [iconPositionBefore]=\"false\"\r\n  >\r\n  </submit-btn>\r\n\r\n  <reset-form-btn\r\n    *ngIf=\"formCtrls.id.value == 0\"\r\n    (click)=\"clearForm()\"\r\n  ></reset-form-btn>\r\n</mat-card-actions>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { planTnaToDisplay } from \"app/training/mapper/training-plan\";\r\nimport {\r\n  IPlanTrainingNeedsEmployeeDeleteParams,\r\n  IPlanTrainingNeedsEmployeeModel,\r\n  IPlanTrainingNeedsRequest,\r\n  ITNAPlanSearchRequest,\r\n} from \"app/training/models/training-plan/training-needs-analysis\";\r\nimport { TrainingNeedsAnalysisService } from \"app/training/services/traning-plan/training-needs-analysis.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-training-needs-analysis\",\r\n  templateUrl: \"./training-needs-analysis.component.html\",\r\n  styleUrls: [\"./training-needs-analysis.component.scss\"],\r\n})\r\nexport class TrainingNeedsAnalysisComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  @Input() planId: number = 0;\r\n  @Input() isView: boolean = false;\r\n  showOnlyIndex = false;\r\n  @Output() updateViewDisplay = new EventEmitter<boolean>();\r\n  @Output() updateCourseDropdown = new EventEmitter<any>();\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomnsSearch: string[] = [\r\n    // \"Ser\",\r\n    \"code\",\r\n    \"employee\",\r\n    \"department\",\r\n    \"job\",\r\n    \"noOfTakenCourses\",\r\n    \"selectAll\",\r\n  ];\r\n  isLoadedSearch: boolean = false;\r\n  dataSourceSearch: MatTableDataSource<IPlanTrainingNeedsEmployeeModel>;\r\n  showSearchSection: boolean = false;\r\n\r\n  mandatoryColomnsEmployees: string[] = [\r\n    // \"Ser\",\r\n    \"code\",\r\n    \"employee\",\r\n    \"department\",\r\n    \"job\",\r\n    \"noOfTakenCourses\",\r\n    \"actions\",\r\n  ];\r\n  isLoadedEmployees: boolean = false;\r\n  dataSourceEmployees: MatTableDataSource<IPlanTrainingNeedsEmployeeModel>;\r\n\r\n  optionalColomns: string[] = [];\r\n\r\n  lastSearchModel: ITNAPlanSearchRequest;\r\n  showIndexAfterAdd: boolean = false;\r\n\r\n  constructor(private tNAService: TrainingNeedsAnalysisService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      // training path\r\n      trainingPath: [false],\r\n      TrainhgPathPrioritySelected: [[]],\r\n      // training requests\r\n      trainingRequests: [false],\r\n      reasonId: [[], [Validators.required]],\r\n      selfServiceRequest: [true],\r\n      // pms\r\n      pms: [false],\r\n      appraisalFrom: [null],\r\n      appraisalTo: [null],\r\n      PMS_Grade: [0, [CustomValidators.gte(0)]],\r\n      competenceId: [[], [Validators.required]],\r\n      // with implementation\r\n      withImplementation: [false],\r\n    });\r\n\r\n    if (this.isView) this.showOnlyIndex = true;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    // if (this.dataSourceEmployees?.data?.length > 0) {\r\n    //   this.dataSourceEmployees = new MatTableDataSource(null);\r\n    // }\r\n\r\n    if (this.dataSourceSearch?.data?.length > 0) {\r\n      this.dataSourceSearch = new MatTableDataSource(null);\r\n    }\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.planId > 0) {\r\n      this.getAll();\r\n    } else {\r\n      this.isLoadedEmployees = true;\r\n    }\r\n  }\r\n\r\n  override onModulesChanged(): void {\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.plan_tna\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.dataSourceEmployees = new MatTableDataSource(null);\r\n    this.isLoadedEmployees = false;\r\n\r\n    let searchModel: ITNAPlanSearchRequest = {\r\n      Plan_ID: this.planId,\r\n      IsEditMode: true,\r\n      TrainingPath: false,\r\n      TrainhgPathPrioritySelected: [],\r\n      TrainingRequest: false,\r\n      TrainingRequestReasonsSelected: [],\r\n      TrainingRequestFromSelfService: false,\r\n      PMS: false,\r\n      AppraisalFromDate: null,\r\n      AppraisalToDate: null,\r\n      PMS_Grade: 0,\r\n      PMS_competenciesSelected: [],\r\n      WithImplementation: false,\r\n    };\r\n\r\n    this.tNAService\r\n      .searchEmployees(searchModel)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPlanTrainingNeedsEmployeeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSourceEmployees = new MatTableDataSource(\r\n            planTnaToDisplay(res.data.filter((emp) => emp.isSelected))\r\n          );\r\n          this.isLoadedEmployees = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IPlanTrainingNeedsRequest = {\r\n        Plan_ID: this.planId,\r\n        person_Courses: [],\r\n      };\r\n\r\n      this.dataSourceSearch.data\r\n        .filter((ele) => ele.isSelected)\r\n        .forEach((selected) => {\r\n          model.person_Courses.push({\r\n            Course_ID: selected.course_ID,\r\n            Person_Instance_ID: selected.person_Instance_ID,\r\n          });\r\n        });\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IPlanTrainingNeedsRequest) {\r\n    this.showLoading();\r\n    this.tNAService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IPlanTrainingNeedsEmployeeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n          if (this.isView) this.returnToView();\r\n          else {\r\n            this.showIndexAfterAdd = true;\r\n          }\r\n          // update course list in next tab\r\n          this.updateCourseDropdown.emit();\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(employee: IPlanTrainingNeedsEmployeeModel): void {\r\n    let msg = employee.employee;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(employee);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(employee: IPlanTrainingNeedsEmployeeModel) {\r\n    let params: IPlanTrainingNeedsEmployeeDeleteParams = {\r\n      plan_id: this.planId,\r\n      course_id: employee.course_ID,\r\n      person_instance_id: employee.person_Instance_ID,\r\n    };\r\n    this.showLoading();\r\n    this.tNAService.Delete(params).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.getAll();\r\n        this.searchEmployees(this.lastSearchModel);\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onClearAll(): void {\r\n    let msg = this.translate(\"allEmployees\");\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.clearAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  clearAll() {\r\n    this.showLoading();\r\n    this.tNAService.DeleteAll(this.planId).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        this.dataSourceEmployees = new MatTableDataSource([]);\r\n        if (this.lastSearchModel) this.searchEmployees(this.lastSearchModel);\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onSubmitSearchEmployees() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      // if no filter box checked\r\n      if (\r\n        !this.formCtrls.trainingPath.value &&\r\n        !this.formCtrls.trainingRequests.value &&\r\n        !this.formCtrls.pms.value &&\r\n        !this.formCtrls.withImplementation.value\r\n      ) {\r\n        this.warning(\"selectAnyFilter\");\r\n        return;\r\n      }\r\n\r\n      // if no priority selected in training path\r\n      if (\r\n        this.formCtrls.trainingPath.value &&\r\n        this.formCtrls.TrainhgPathPrioritySelected.value.length == 0\r\n      )\r\n        return;\r\n\r\n      this.showSearchSection = true;\r\n\r\n      let searchModel: ITNAPlanSearchRequest = {\r\n        Plan_ID: this.planId,\r\n        IsEditMode: false,\r\n        TrainingPath: this.form.value.trainingPath,\r\n        TrainhgPathPrioritySelected:\r\n          this.form.value.TrainhgPathPrioritySelected ?? [],\r\n        TrainingRequest: this.form.value.trainingRequests,\r\n        TrainingRequestReasonsSelected: this.form.value.reasonId ?? [],\r\n        TrainingRequestFromSelfService:\r\n          this.form.value.selfServiceRequest ?? false,\r\n        PMS: this.form.value.pms,\r\n        AppraisalFromDate: this.form.value.appraisalFrom,\r\n        AppraisalToDate: this.form.value.appraisalTo,\r\n        PMS_Grade: this.form.value.PMS_Grade ?? 0,\r\n        PMS_competenciesSelected: this.form.value.competenceId ?? [],\r\n        WithImplementation: this.form.value.withImplementation,\r\n      };\r\n      if (!searchModel.TrainingPath)\r\n        searchModel.TrainhgPathPrioritySelected = [];\r\n      // console.log(\"search\", searchModel);\r\n\r\n      this.searchEmployees(searchModel);\r\n    }\r\n  }\r\n\r\n  searchEmployees(searchModel: ITNAPlanSearchRequest) {\r\n    this.dataSourceSearch = new MatTableDataSource(null);\r\n    this.isLoadedSearch = false;\r\n\r\n    this.tNAService\r\n      .searchEmployees(searchModel)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IPlanTrainingNeedsEmployeeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSourceSearch = new MatTableDataSource(\r\n            planTnaToDisplay(res.data)\r\n          );\r\n          this.isLoadedSearch = true;\r\n          this.lastSearchModel = searchModel;\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({\r\n      id: 0,\r\n      selfServiceRequest: true,\r\n      PMS_Grade: 0,\r\n      trainingPath: false,\r\n      trainingRequests: false,\r\n      pms: false,\r\n      withImplementation: false,\r\n      TrainhgPathPrioritySelected: [],\r\n      reasonId: [],\r\n      competenceId: [],\r\n    });\r\n    this.submitted = false;\r\n  }\r\n\r\n  showAddInsideView() {\r\n    this.updateViewDisplay.emit(true);\r\n    this.showOnlyIndex = false;\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }\r\n\r\n  returnToView() {\r\n    this.updateViewDisplay.emit(false);\r\n    this.showOnlyIndex = true;\r\n    this.clearForm();\r\n    this.dataSourceSearch = new MatTableDataSource(null);\r\n    this.showSearchSection = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\" [class.hidden]=\"showOnlyIndex\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title title=\"searchEmployees\"></page-title>\r\n\r\n        <button\r\n          mat-button\r\n          class=\"float-right section-edit-btn pright-6 pleft-6 darkBlue\"\r\n          id=\"section_edit_btn\"\r\n          (click)=\"returnToView()\"\r\n          *ngIf=\"!showOnlyIndex && isView\"\r\n        >\r\n          <i class=\"ft-corner-up-left font-medium-3\"></i>\r\n        </button>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row justify-content-between\">\r\n                <div class=\"col-sm-6 col-lg-3 col-12\">\r\n                  <div class=\"inputs-box-with-label\">\r\n                    <div class=\"box-label\">\r\n                      <app-check-box\r\n                        [control]=\"formCtrls.trainingPath\"\r\n                        label=\"trainingPath\"\r\n                        labelPosition=\"before\"\r\n                        class=\"w-100\"\r\n                      ></app-check-box>\r\n                    </div>\r\n\r\n                    <div class=\"box-inputs pr-1 pl-3\">\r\n                      <app-priorities-checkboxs\r\n                        [control]=\"formCtrls.TrainhgPathPrioritySelected\"\r\n                        [disable]=\"!formCtrls.trainingPath.value\"\r\n                      >\r\n                      </app-priorities-checkboxs>\r\n                      <span\r\n                        class=\"danger\"\r\n                        [style]=\"{ 'font-size': '11px' }\"\r\n                        *ngIf=\"\r\n                          formCtrls.TrainhgPathPrioritySelected?.value?.length ==\r\n                            0 &&\r\n                          submitted &&\r\n                          formCtrls.trainingPath.value\r\n                        \"\r\n                      >\r\n                        {{ \"selectOnePriority\" | translate }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6 col-lg-3 col-12\">\r\n                  <div class=\"inputs-box-with-label\">\r\n                    <div class=\"box-label\">\r\n                      <app-check-box\r\n                        [control]=\"formCtrls.trainingRequests\"\r\n                        label=\"trainingRequests\"\r\n                        labelPosition=\"before\"\r\n                        class=\"w-100\"\r\n                      ></app-check-box>\r\n                    </div>\r\n\r\n                    <div class=\"box-inputs\">\r\n                      <app-reason-dropdown\r\n                        [control]=\"formCtrls.reasonId\"\r\n                        [submitted]=\"submitted\"\r\n                        [filter]=\"true\"\r\n                        [multi]=\"true\"\r\n                        [disable]=\"!formCtrls.trainingRequests.value\"\r\n                      ></app-reason-dropdown>\r\n\r\n                      <div>\r\n                        <app-check-box\r\n                          [control]=\"formCtrls.selfServiceRequest\"\r\n                          label=\"selfServiceRequest\"\r\n                          labelPosition=\"before\"\r\n                          [disabled]=\"!formCtrls.trainingRequests.value\"\r\n                        ></app-check-box>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6 col-lg-3 col-12\">\r\n                  <div class=\"inputs-box-with-label\">\r\n                    <div class=\"box-label\">\r\n                      <app-check-box\r\n                        [control]=\"formCtrls.pms\"\r\n                        label=\"PMS\"\r\n                        labelPosition=\"before\"\r\n                        class=\"w-100\"\r\n                      ></app-check-box>\r\n                    </div>\r\n\r\n                    <div class=\"box-inputs\">\r\n                      <app-datepicker\r\n                        [control]=\"formCtrls.appraisalFrom\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"appraisalFrom\"\r\n                        [disabled]=\"!formCtrls.pms.value\"\r\n                      >\r\n                      </app-datepicker>\r\n\r\n                      <app-datepicker\r\n                        [control]=\"formCtrls.appraisalTo\"\r\n                        [submitted]=\"submitted\"\r\n                        label=\"appraisalTo\"\r\n                        [disabled]=\"!formCtrls.pms.value\"\r\n                      >\r\n                      </app-datepicker>\r\n\r\n                      <app-input\r\n                        [control]=\"formCtrls.PMS_Grade\"\r\n                        [submitted]=\"submitted\"\r\n                        type=\"number\"\r\n                        label=\"PMS_Grade\"\r\n                        [disabled]=\"!formCtrls.pms.value\"\r\n                      >\r\n                      </app-input>\r\n\r\n                      <app-competence-dropdown\r\n                        [control]=\"formCtrls.competenceId\"\r\n                        [submitted]=\"submitted\"\r\n                        [filter]=\"true\"\r\n                        [multi]=\"true\"\r\n                        [disable]=\"!formCtrls.pms.value\"\r\n                      >\r\n                      </app-competence-dropdown>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6 col-lg-3 col-12\">\r\n                  <div class=\"inputs-box-with-label\">\r\n                    <div class=\"box-label no-content\">\r\n                      <app-check-box\r\n                        [control]=\"formCtrls.withImplementation\"\r\n                        label=\"withImplementation\"\r\n                        labelPosition=\"before\"\r\n                        class=\"w-100\"\r\n                      ></app-check-box>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"General.search\"\r\n          [color]=\"btn.darkBlue\"\r\n          (click)=\"onSubmitSearchEmployees()\"\r\n        >\r\n        </app-button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- display after search -->\r\n<div class=\"row mtop-26\" *ngIf=\"showSearchSection && !showOnlyIndex\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <span>{{ dataSourceSearch?.data?.length ?? \"\" }}</span>\r\n        <page-title title=\"result\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <app-material-table\r\n          *ngIf=\"planId > 0\"\r\n          [isLoaded]=\"isLoadedSearch\"\r\n          [dataSource]=\"dataSourceSearch\"\r\n          [mandatoryColomns]=\"mandatoryColomnsSearch\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          class=\"table-in-forms\"\r\n          [showPaginator]=\"false\"\r\n          [showSpaceTop]=\"false\"\r\n          checkboxColumnName=\"isSelected\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn\r\n          [color]=\"btn.darkBlue\"\r\n          icon=\"pi pi-plus-circle\"\r\n          (onClick)=\"submit()\"\r\n          [disabled]=\"!planId\"\r\n        >\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- display selected employees (after add them) -->\r\n<div class=\"row mtop-26\" *ngIf=\"planId > 0 && (isView || showIndexAfterAdd)\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title title=\"selectedEmployees\"></page-title>\r\n        <span> (TNA)</span>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-35\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"addEmployee\"\r\n          class=\"float-right mb-1\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [iconPositionBefore]=\"false\"\r\n          [color]=\"btn.darkBlue\"\r\n          (click)=\"showAddInsideView()\"\r\n          *ngIf=\"showOnlyIndex\"\r\n        >\r\n        </app-button>\r\n\r\n        <app-material-table\r\n          [isLoaded]=\"isLoadedEmployees\"\r\n          *ngIf=\"planId > 0\"\r\n          [dataSource]=\"dataSourceEmployees\"\r\n          [mandatoryColomns]=\"mandatoryColomnsEmployees\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          [actions]=\"rowFunctions\"\r\n          class=\"table-in-forms\"\r\n          (deleteRow)=\"onDelete($event)\"\r\n          [showPaginator]=\"false\"\r\n          [showSpaceTop]=\"false\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <app-button\r\n          [disabled]=\"!planId\"\r\n          label=\"clearAll\"\r\n          [color]=\"btn.darkBlueBorder\"\r\n          (click)=\"clearAll()\"\r\n        >\r\n        </app-button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ITrainingPlanModel } from \"app/training/models/training-plan/training-plan\";\r\nimport { TrainingPlanIndexService } from \"app/training/services/traning-plan/training-plan-index.service\";\r\n\r\n@Component({\r\n  selector: \"app-general-info-plan-view\",\r\n  templateUrl: \"./general-info-plan-view.component.html\",\r\n  styleUrls: [\"./general-info-plan-view.component.scss\"],\r\n})\r\nexport class GeneralInfoPlanViewComponent extends AppHelpers implements OnInit {\r\n  isUpdate: boolean = false;\r\n  @Input() planId: number = 0;\r\n  plan: ITrainingPlanModel;\r\n\r\n  constructor(private trainingPlanIndexService: TrainingPlanIndexService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.planId > 0 && this.checkNoBusinessOrCompany) this.getPlanById();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getPlanById() {\r\n    this.showLoading();\r\n    this.trainingPlanIndexService\r\n      .getById(this.planId)\r\n      .subscribe((res: IResponse<ITrainingPlanModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.plan = res.data[0];\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  returnToView(updatedPlan: ITrainingPlanModel) {\r\n    this.isUpdate = false;\r\n    this.plan = updatedPlan;\r\n  }\r\n}\r\n","<!-- <br /> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title class=\"title-no-margin\">\r\n        <page-title title=\"generalInfo\"></page-title>\r\n        <button\r\n          mat-button\r\n          class=\"float-right section-edit-btn pright-6 pleft-6 darkBlue\"\r\n          id=\"section_edit_btn\"\r\n          (click)=\"isUpdate = true\"\r\n          *ngIf=\"!isUpdate\"\r\n        >\r\n          <i class=\"ft-edit-1 font-medium-3\"></i>\r\n        </button>\r\n        <button\r\n          mat-button\r\n          class=\"float-right section-edit-btn pright-6 pleft-6 darkBlue\"\r\n          id=\"section_edit_btn\"\r\n          (click)=\"isUpdate = false\"\r\n          *ngIf=\"isUpdate\"\r\n        >\r\n          <i class=\"ft-corner-up-left font-medium-3\"></i>\r\n        </button>\r\n      </mat-card-title>\r\n\r\n      <mat-divider class=\"mt-2\"></mat-divider>\r\n\r\n      <mat-card-content>\r\n        <div class=\"mtop-30\" *ngIf=\"!isUpdate; else form\">\r\n          <div class=\"view-data-row-container\">\r\n            <app-view-data-row-item\r\n              label=\"en_Name\"\r\n              [value]=\"plan?.en_Name\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"ar_Name\"\r\n              [value]=\"plan?.ar_Name\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"froM_DATE\"\r\n              [value]=\"plan?.from_Date\"\r\n              [isDate]=\"true\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"tO_DATE\"\r\n              [value]=\"plan?.to_Date\"\r\n              [isDate]=\"true\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"budget\"\r\n              [value]=\"plan?.budget\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"notes\"\r\n              [value]=\"plan?.note\"\r\n            ></app-view-data-row-item>\r\n          </div>\r\n\r\n          <!-- <div class=\"table-responsive\">\r\n            <table class=\"table m-0\">\r\n              <thead>\r\n                <tr style=\"color: #5a5a5a\">\r\n                  <th>{{ \"en_Name\" | translate }}</th>\r\n                  <th>{{ \"ar_Name\" | translate }}</th>\r\n                  <th>{{ \"froM_DATE\" | translate }}</th>\r\n                  <th>{{ \"tO_DATE\" | translate }}</th>\r\n                  <th>{{ \"budget\" | translate }}</th>\r\n                  <th>{{ \"notes\" | translate }}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr style=\"color: #374761\">\r\n                  <td>{{ plan?.en_Name }}</td>\r\n                  <td>{{ plan?.ar_Name }}</td>\r\n                  <td>{{ plan?.from_Date | date : \"dd/MM/yyyy\" }}</td>\r\n                  <td>{{ plan?.to_Date | date : \"dd/MM/yyyy\" }}</td>\r\n                  <td>{{ plan?.budget ?? \"---\" }}</td>\r\n                  <td>{{ plan?.note ?? \"---\" }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div> -->\r\n        </div>\r\n\r\n        <ng-template #form>\r\n          <app-plan-general-data\r\n            [plan]=\"plan\"\r\n            (closeAfterUpdate)=\"returnToView($event)\"\r\n          ></app-plan-general-data>\r\n        </ng-template>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-plan-view-core\",\r\n  templateUrl: \"./plan-view-core.component.html\",\r\n  styleUrls: [\"./plan-view-core.component.scss\"],\r\n})\r\nexport class PlanViewCoreComponent extends AppHelpers implements OnInit {\r\n  planId: number;\r\n\r\n  showTna: boolean = false;\r\n  showCourses: boolean = false;\r\n\r\n  updateCourseDropdown: boolean = false;\r\n\r\n  viewsManager = ViewsManager;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.planId = Number(param.id) ?? 0;\r\n    });\r\n  }\r\n\r\n  scrollToSection(sectionId: string) {\r\n    const element = document.getElementById(sectionId);\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<mat-card-title class=\"title-no-margin title-section\">\r\n  <page-title title=\"planViewcore\"></page-title>\r\n\r\n  <ng-container>\r\n    <app-add-new-btn\r\n      url=\"/training/{{ moduleId }}/training-plan/add\"\r\n      [params]=\"parentParam\"\r\n    >\r\n    </app-add-new-btn>\r\n\r\n    <app-back-btn\r\n      url=\"/training/{{ moduleId }}/training-plan/index\"\r\n      [params]=\"pageParams\"\r\n    >\r\n    </app-back-btn>\r\n  </ng-container>\r\n</mat-card-title>\r\n\r\n<app-general-info-plan-view\r\n  [planId]=\"planId\"\r\n  [class.hidden]=\"showCourses || showTna\"\r\n></app-general-info-plan-view>\r\n\r\n<app-training-needs-analysis\r\n  [id]=\"viewsManager.plan_tna\"\r\n  [class.hidden]=\"showCourses\"\r\n  [isView]=\"true\"\r\n  [planId]=\"planId\"\r\n  (updateViewDisplay)=\"showTna = $event; scrollToSection(viewsManager.plan_tna)\"\r\n  (updateCourseDropdown)=\"updateCourseDropdown = !updateCourseDropdown\"\r\n></app-training-needs-analysis>\r\n\r\n<app-plan-courses-and-expensis\r\n  [id]=\"viewsManager.plan_course\"\r\n  [class.hidden]=\"showTna\"\r\n  [isView]=\"true\"\r\n  [planId]=\"planId\"\r\n  (updateViewDisplay)=\"\r\n    showCourses = $event; scrollToSection(viewsManager.plan_course)\r\n  \"\r\n  [updateCourseDropdown]=\"updateCourseDropdown\"\r\n></app-plan-courses-and-expensis>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ITrainingPlanListModel } from \"app/training/models/training-plan/training-plan\";\r\nimport { TrainingPlanIndexService } from \"app/training/services/traning-plan/training-plan-index.service\";\r\n@Component({\r\n  selector: \"app-training-plan-index\",\r\n  templateUrl: \"./training-plan-index.component.html\",\r\n  styleUrls: [\"./training-plan-index.component.scss\"],\r\n})\r\nexport class TrainingPlanIndexComponent extends AppHelpers implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<ITrainingPlanListModel>;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"from_Date\",\r\n    \"to_Date\",\r\n    \"budget\",\r\n    \"count_Courses\",\r\n    \"count_Persons\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\"note\", \"id\"];\r\n  constructor(public TrainingPlanIndexService: TrainingPlanIndexService) {\r\n    super();\r\n  }\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.TrainingPlanIndexService.getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ITrainingPlanListModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          res.data.map((e) => {\r\n            (e.id = e.plan_ID),\r\n              (e.from_Date = HelpersFunctions.mapDate(e.from_Date));\r\n            e.to_Date = HelpersFunctions.mapDate(e.to_Date);\r\n          });\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n  delete(model: ITrainingPlanListModel) {\r\n    this.showLoading();\r\n    this.TrainingPlanIndexService.Delete(model.id).subscribe(\r\n      (res: IResponse) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          } else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      }\r\n    );\r\n  }\r\n  onDelete(model: ITrainingPlanListModel) {\r\n    let msg = this.msgTranslate(model.ar_Name, model.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(model);\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>\r\n    <page-title\r\n      title=\"trainingPlanIndex\"\r\n      class=\"mb-10\"\r\n      [globalFunctions]=\"globalFunctions\"\r\n    ></page-title>\r\n  </mat-card-title>\r\n  <mat-divider></mat-divider>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isRowClickable]=\"true\"\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"TrainingPlanIndexService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormGroup, Validators} from '@angular/forms';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport {AppHelpers} from 'app/shared/resources/app-helpers';\r\nimport {HelpersFunctions} from 'app/shared/resources/helpers-functions';\r\nimport {CustomValidator} from 'app/shared/validators/custom.validator';\r\nimport {ITrainingReqModel, ITrainingReqRequest, ITrainingRequestIndexModel,} from 'app/training/models/training-request';\r\nimport {TrainingRequestService} from 'app/training/services/training-request.service';\r\nimport {IReasonsModel} from 'app/training-setup/models/reasons';\r\n\r\n@Component({\r\n  selector: 'app-add-training-request',\r\n  templateUrl: './add-training-request.component.html',\r\n  styleUrls: ['./add-training-request.component.scss'],\r\n})\r\nexport class AddTrainingRequestComponent extends AppHelpers implements OnInit {\r\n  trainingRequestId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  allowBusinessObjective: boolean = false;\r\n\r\n  constructor(private trainingRequestService: TrainingRequestService) {\r\n    super();\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.trainingRequestId = Number(param.id ?? 0);\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.trainingRequestId > 0 && this.checkNoBusinessOrCompany) {\r\n      this.getTrainingRequestById();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [this.trainingRequestId, {nonNullable: true}],\r\n        course_Category_ID: [Validators.required],\r\n        course_ID: [null, [Validators.required]],\r\n        reason_ID: [null, [Validators.required]],\r\n        from_Date: [null, Validators.required],\r\n        to_Date: [null, Validators.required],\r\n        note: [null],\r\n        employee_id: [null, Validators.required],\r\n        SelectedBusinessObjectiveIDs: [],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates('from_Date', 'to_Date'),\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let body: ITrainingReqRequest = {\r\n        training_request: {\r\n          id: this.formCtrls.id.value,\r\n          course_ID: this.formCtrls.course_ID.value,\r\n          reason_ID: this.formCtrls.reason_ID.value,\r\n          from_Date: HelpersFunctions.mapDateReverse(this.formCtrls.from_Date.value),\r\n          to_Date: HelpersFunctions.mapDateReverse(this.formCtrls.to_Date.value),\r\n          note: this.formCtrls.note.value,\r\n        },\r\n        SelectedSubOrdenateEmployeeInstanceIDs: this.formCtrls.employee_id.value,\r\n        SelectedBusinessObjectiveIDs: this.formCtrls.SelectedBusinessObjectiveIDs.value\r\n      }\r\n      console.log(body)\r\n      body.training_request.id > 0 ? this.update(body) : this.create(body);\r\n    }\r\n  }\r\n\r\n  getTrainingRequestById() {\r\n    this.showLoading();\r\n    this.trainingRequestService\r\n      .getById(this.trainingRequestId)\r\n      .subscribe((res: IResponse<ITrainingReqModel>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.formCtrls.course_Category_ID.setValue(res.data.training_request.trA_Course.course_Category_ID)\r\n          this.form.patchValue(res.data.training_request);\r\n          this.formCtrls.SelectedBusinessObjectiveIDs.setValue(res.data.selectedBusinessObjectiveIDs)\r\n          this.formCtrls.employee_id.setValue(res.data.selectedSubOrdenateEmployeeInstanceIDs)\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  create(data: ITrainingReqRequest) {\r\n    this.showLoading();\r\n    this.trainingRequestService\r\n      .create(data)\r\n      .subscribe((res: IResponse<ITrainingReqRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          // this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.trainingRequestId = res.data.training_request.id;\r\n          this.formCtrls.id.setValue(this.trainingRequestId)\r\n          let url = `/training/${this.moduleId}/training-request/edit/${this.trainingRequestId}`;\r\n          this.navigateTo(url);\r\n          console.log(this.form.value)\r\n          console.log(res)\r\n          console.log(url)\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(data: ITrainingReqRequest) {\r\n    this.showLoading();\r\n    this.trainingRequestService\r\n      .update(data)\r\n      .subscribe((res: IResponse<ITrainingReqRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n\r\n  onReasonChange(model: IReasonsModel[]) {\r\n    if (model[0]?.hasBusinessObjectives) {\r\n      this.allowBusinessObjective = true\r\n      this.formCtrls?.SelectedBusinessObjectiveIDs.addValidators([Validators.required])\r\n    } else {\r\n      this.allowBusinessObjective = false;\r\n      this.formCtrls?.SelectedBusinessObjectiveIDs.setValue([])\r\n      this.formCtrls?.SelectedBusinessObjectiveIDs.removeValidators([Validators.required])\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12 cards-no-shadow\">\r\n    <mat-card #container>\r\n      <mat-card-title class=\"title-no-margin\">\r\n        <page-title title=\"trainingRequest\"></page-title>\r\n\r\n        <ng-container>\r\n          <!-- button add new-->\r\n          <app-add-new-btn\r\n            *ngIf=\"trainingRequestId > 0\"\r\n            url=\"/training/{{ moduleId }}/training-request/add\"\r\n            [params]=\"parentParam\"\r\n          >\r\n          </app-add-new-btn>\r\n\r\n          <!-- button back-->\r\n          <app-back-btn\r\n            url=\"/training/{{ moduleId }}/training-request/index\"\r\n            [params]=\"pageParams\"\r\n          >\r\n          </app-back-btn>\r\n        </ng-container>\r\n      </mat-card-title>\r\n\r\n      <mat-divider class=\"mt-2\"></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-employee-dropdown\r\n                    [control]=\"formCtrls.employee_id\"\r\n                    [submitted]=\"submitted\"\r\n                    [multi]=\"true\"\r\n                    [filter]=\"true\"\r\n                    label=\"employees\"\r\n                  >\r\n                  </app-employee-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-course-category-dropdown\r\n                    [control]=\"formCtrls.course_Category_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-course-category-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-course-by-course-category-dropdown\r\n                    [control]=\"formCtrls.course_ID\"\r\n                    [courseCategoryControl]=\"formCtrls.course_Category_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-course-by-course-category-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <app-reason-dropdown\r\n                    [control]=\"formCtrls.reason_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    [multi]=\"false\"\r\n                    (change)=\"onReasonChange($event)\"\r\n                  >\r\n                  </app-reason-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <business-objective-dropdown\r\n                    [control]=\"formCtrls.SelectedBusinessObjectiveIDs\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    [multi]=\"true\"\r\n                    [disable]=\"!allowBusinessObjective\"\r\n                  >\r\n                  </business-objective-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.from_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"froM_DATE\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.to_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"tO_DATE\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.note\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"notes\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn\r\n          (onClick)=\"submit()\"\r\n          [id]=\"formCtrls.id.value\"\r\n          [color]=\"btn.darkBlue\"\r\n          [iconPositionBefore]=\"false\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [id]=\"formCtrls.id.value\"\r\n        >\r\n        </submit-btn>\r\n\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {IPageParams} from 'app/shared/interfaces/params';\r\nimport {IResponse, IResponseList} from 'app/shared/interfaces/responces';\r\nimport {AppHelpers} from 'app/shared/resources/app-helpers';\r\nimport {trainingRequestToDisplay} from 'app/training/mapper/training-request';\r\nimport {\r\n  ITrainingRequestIndexModel,\r\n  ITrainingToDisplayModel,\r\n} from 'app/training/models/training-request';\r\nimport {TrainingRequestService} from 'app/training/services/training-request.service';\r\n\r\n@Component({\r\n  selector: 'app-training-request-index',\r\n  templateUrl: './training-request-index.component.html',\r\n  styleUrls: ['./training-request-index.component.scss'],\r\n})\r\nexport class TrainingRequestIndexComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<ITrainingToDisplayModel>;\r\n\r\n  mandatoryColomns: string[] = [\r\n    'Ser',\r\n    'course_name',\r\n    'reason',\r\n    'fromDate',\r\n    'toDate',\r\n    'actions',\r\n  ];\r\n  optionalColomns: string[] = ['note'];\r\n\r\n  constructor(public trainingRequestService: TrainingRequestService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    }\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.trainingRequestService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ITrainingRequestIndexModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(\r\n            trainingRequestToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  delete(model: ITrainingToDisplayModel) {\r\n    this.showLoading();\r\n    this.trainingRequestService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if ((res.message.messageType = MessageTypes.Success)) {\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        } else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n      } else {\r\n        this.errorList(res.message.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(model: ITrainingToDisplayModel) {\r\n    let msg = this.msgTranslate(model.course_name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(model);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>\r\n    <page-title\r\n      title=\"trainingRequest\"\r\n      class=\"mb-10\"\r\n      [globalFunctions]=\"globalFunctions\"\r\n    ></page-title>\r\n  </mat-card-title>\r\n  <mat-divider></mat-divider>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"trainingRequestService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ISTPModel } from \"app/training/models/tsp\";\r\nimport { TspService } from \"app/training/services/tsp.service\";\r\n\r\n@Component({\r\n  selector: \"app-tsp-index\",\r\n  templateUrl: \"./tsp-index.component.html\",\r\n  styleUrls: [\"./tsp-index.component.scss\"],\r\n})\r\nexport class TspIndexComponent extends AppHelpers implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<ISTPModel>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"breif_Name\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"location\",\r\n    \"webSite_URL\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\r\n    \"address\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"phone\",\r\n    \"fax\",\r\n    \"contactPersonName\",\r\n    \"contactPersonEmail\",\r\n    \"contactPersonMobile\",\r\n    \"contactPersonPhone\",\r\n    \"i_M_C_Code\",\r\n    \"note\",\r\n  ];\r\n\r\n  constructor(public tspService: TspService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.tspService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ISTPModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  delete(model: ISTPModel) {\r\n    this.showLoading();\r\n    this.tspService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if ((res.message.messageType = MessageTypes.Success)) {\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        } else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(model: ISTPModel) {\r\n    let msg = this.msgTranslate(model.ar_Name, model.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(model);\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>\r\n    <page-title title=\"TSP\" [globalFunctions]=\"globalFunctions\"></page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"tspService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { IImplementationModel } from \"../models/implementation/implementation\";\r\n\r\nexport function implementationToDisplay(\r\n  data: IImplementationModel[]\r\n): IImplementationModel[] {\r\n  return data.map((ele) => {\r\n    return <IImplementationModel>{\r\n      ...ele,\r\n      title: ele.trA_Plan_Course?.name, // ??\r\n      en_Name: ele.trA_Plan_Course?.trA_Course?.en_Name, // ??\r\n      from_Date: HelpersFunctions.mapDate(ele.from_Date),\r\n      to_Date: HelpersFunctions.mapDate(ele.to_Date),\r\n    };\r\n  });\r\n}\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IPlanCourseExpensesModel,\r\n  IPlanCourseModel,\r\n  IPlanCoursesEmployeeModel,\r\n} from \"../models/training-plan/plan-courses-expenses\";\r\nimport { IPlanTrainingNeedsEmployeeModel } from \"../models/training-plan/training-needs-analysis\";\r\n\r\nexport function planTnaToDisplay(\r\n  data: IPlanTrainingNeedsEmployeeModel[]\r\n): IPlanTrainingNeedsEmployeeModel[] {\r\n  return data\r\n    .filter((ele) => ele.core_Person != null)\r\n    .map((ele) => {\r\n      return <IPlanTrainingNeedsEmployeeModel>{\r\n        ...ele,\r\n        code: ele.core_Person?.code,\r\n        employee: msgTranslate(\r\n          ele.core_Person?.ar_Name,\r\n          ele.core_Person?.en_Name\r\n        ),\r\n        department: ele.core_Org\r\n          ?.map((org) => msgTranslate(org.ar_Name, org.en_Name))\r\n          .join(\", \"),\r\n        job: ele.core_Job_Title\r\n          ?.map((job) => msgTranslate(job.ar_Name, job.en_Name))\r\n          .join(\", \"),\r\n        noOfTakenCourses: `${msgTranslate(\r\n          ele.courseNameAr,\r\n          ele.courseNameEn\r\n        )} - (${ele.courseCount})`,\r\n        // isAdded: ele.isSelected,\r\n      };\r\n    });\r\n}\r\n\r\nexport function planCourseEmployeeToDisplay(\r\n  data: IPlanCoursesEmployeeModel[]\r\n): IPlanCoursesEmployeeModel[] {\r\n  return data.map((ele) => {\r\n    return <IPlanCoursesEmployeeModel>{\r\n      ...ele,\r\n      employeeNameAr: ele.ar_Name,\r\n      employeeNameEn: ele.en_Name,\r\n      job: msgTranslate(ele.ar_Job, ele.en_Job),\r\n      isSelected: false,\r\n    };\r\n  });\r\n}\r\n\r\nexport function planCourseToDisplay(\r\n  data: IPlanCourseModel[]\r\n): IPlanCourseModel[] {\r\n  return data.map((ele) => {\r\n    return <IPlanCourseModel>{\r\n      ...ele,\r\n      title: ele.name,\r\n      course: msgTranslate(ele.trA_Course?.ar_Name, ele.trA_Course?.en_Name),\r\n      plan: msgTranslate(ele.trA_PLan?.ar_Name, ele.trA_PLan?.en_Name),\r\n      fromDate: HelpersFunctions.mapDate(ele.from_Date),\r\n      toDate: HelpersFunctions.mapDate(ele.to_Date),\r\n      online: ele.tsP_ID ? false : true,\r\n      budget: ele.trA_PLan?.budget,\r\n    };\r\n  });\r\n}\r\n\r\nexport function planCourseExpenseToDisplay(\r\n  data: IPlanCourseExpensesModel[]\r\n): IPlanCourseExpensesModel[] {\r\n  return data.map((ele) => {\r\n    return <IPlanCourseExpensesModel>{\r\n      ...ele,\r\n      // id: ele.plan_Course_ID,\r\n      expense: msgTranslate(ele.trA_Expense?.ar_Name, ele.trA_Expense?.en_Name),\r\n      value: ele.expense_Value,\r\n    };\r\n  });\r\n}\r\n","import {ICourseModel} from 'app/training/models/course/course';\r\nimport {IReasonsModel} from 'app/training-setup/models/reasons';\r\n\r\n\r\n//BODY\r\nexport interface ITrainingReqRequest {\r\n  training_request: ITrainingReq;\r\n  SelectedSubOrdenateEmployeeInstanceIDs: number[];\r\n  SelectedBusinessObjectiveIDs: number[];\r\n}\r\n\r\ninterface ITrainingReq {\r\n  id: number;\r\n  course_ID: number;\r\n  reason_ID: number;\r\n  from_Date: string;\r\n  to_Date: string;\r\n  note: string;\r\n}\r\n\r\n//Display\r\nexport interface ITrainingToDisplayModel {\r\n  id: number;\r\n  fromDate: string;\r\n  toDate: string;\r\n  course_name: string;\r\n  reason: string;\r\n  employee_Name: string;\r\n  note: string;\r\n  course_ID: number;\r\n  reason_id: number;\r\n  course_Category_ID: number;\r\n  employee_id: number[];\r\n}\r\n\r\n// getList model\r\nexport interface ITrainingRequestIndexModel {\r\n  id: number;\r\n  from_Date: string;\r\n  to_Date: string;\r\n  trA_Course: ICourseModel;\r\n  trA_Reason: IReasonsModel;\r\n  note: string;\r\n  course_ID: number;\r\n}\r\n\r\nexport interface ITrainingReqModel {\r\n  training_request: ITrainingRequestIndexModel;\r\n  selectedSubOrdenateEmployeeInstanceIDs: number[];\r\n  selectedBusinessObjectiveIDs: number[];\r\n}\r\n\r\n// export interface ITrainingRequestsModel {\r\n//   training_Request_ID: number;\r\n//   person_Instance_ID: number;\r\n//   trA_Training_Request: ITrainingRequestModel;\r\n//   core_Person: IPerson;\r\n// }\r\n\r\n// export interface ITrA_CourseModel {\r\n//   id: number;\r\n//   ar_Name: string;\r\n//   en_Name: string;\r\n//   course_Category_ID: number;\r\n// }\r\n//\r\n// export interface ITrA_ReasonModel {\r\n//   id: number;\r\n//   ar_Name: string;\r\n//   en_Name: string;\r\n// }\r\n\r\nexport interface ITrA_EmployeeModel {\r\n  id: number;\r\n  ar_Name: string;\r\n  en_Name: string;\r\n}\r\n\r\nexport interface ITrA_EmployeeToDispalyModel {\r\n  id: number;\r\n  employee_Name: string;\r\n}\r\n\r\n\r\nexport interface IBusinessObjectiveModel {\r\n  id: number;\r\n  ar_Name: string;\r\n  en_Name: string;\r\n  from_Date: string;\r\n  to_Date: string;\r\n  ar_Description: string,\r\n  en_Description: string,\r\n  objective_MOU_ID: number,\r\n  objective_Category_ID: number,\r\n  target_value: number,\r\n  objective_Weight: number,\r\n  objective_Plan_ID: number,\r\n  parent_ID: number,\r\n  evidence: any,\r\n  evidenceType: number,\r\n  note: string,\r\n  business_Entity_ID: number,\r\n  company_ID: number,\r\n  pmS_Objective_Category: any,\r\n  pmS_Objective_MOU: any,\r\n  pmS_Objective_Plan: any,\r\n  pmS_Employee_Objective: any[],\r\n  chiled_Business_Objectives: any[],\r\n  parent_Business_Objectives: any\r\n\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IImplementationModel,\r\n  IImplementationRequest,\r\n} from \"app/training/models/implementation/implementation\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ImplementationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IImplementationRequest) {\r\n    return this.post<IResponse<IImplementationModel>>(\r\n      \"training/Implementation/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  edit(data: IImplementationRequest) {\r\n    return this.post<IResponse<IImplementationModel>>(\r\n      \"training/Implementation/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IImplementationModel[]>>(\r\n      \"training/Implementation/GetAll\"\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IImplementationModel[]>>(\r\n      \"training/Implementation/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"training/Implementation/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IPlanCourseExpensesDeleteParams,\r\n  IPlanCourseExpensesModel,\r\n  IPlanCourseExpensesRequest\r\n} from \"app/training/models/training-plan/plan-courses-expenses\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PlanExpensesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll(planId: number) {\r\n    return this.get<IResponse<IPlanCourseExpensesModel[]>>(\r\n      \"Training/PlanCourseExpenses/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `plan_Course_ID eq ${planId}`,\r\n          $expand: `${db.TRA_expense}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  create(data: IPlanCourseExpensesRequest) {\r\n    return this.post<IResponse<IPlanCourseExpensesModel>>(\r\n      \"Training/PlanCourseExpenses/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  Delete(params: IPlanCourseExpensesDeleteParams) {\r\n    return this.delete<IResponse>(\"Training/PlanCourseExpenses/Delete\", {\r\n      params: params,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IPlanTrainingNeedsEmployeeDeleteParams,\r\n  IPlanTrainingNeedsEmployeeModel,\r\n  IPlanTrainingNeedsRequest,\r\n  ITNAPlanSearchRequest,\r\n} from \"app/training/models/training-plan/training-needs-analysis\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TrainingNeedsAnalysisService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  searchEmployees(model: ITNAPlanSearchRequest) {\r\n    return this.post<IResponse<IPlanTrainingNeedsEmployeeModel[]>>(\r\n      \"Training/TNA/GetSearchTNAResults\",\r\n      model\r\n    );\r\n  }\r\n\r\n  create(data: IPlanTrainingNeedsRequest) {\r\n    return this.post<IResponse<IPlanTrainingNeedsEmployeeModel>>(\r\n      \"Training/TNA/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  Delete(params: IPlanTrainingNeedsEmployeeDeleteParams) {\r\n    return this.delete<IResponse>(\"Training/TNA/Delete\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  DeleteAll(planId: number) {\r\n    return this.delete<IResponse>(\"Training/TNA/DeleteAll\", {\r\n      params: { plan_id: planId },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  ITrainingPlanListModel,\r\n  ITrainingPlanModel,\r\n  ITrainingPlanRequest,\r\n} from \"app/training/models/training-plan/training-plan\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TrainingPlanIndexService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<ITrainingPlanListModel[]>>(\r\n      \"Training/plan/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Training/plan/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  create(data: ITrainingPlanRequest) {\r\n    return this.post<IResponse<ITrainingPlanModel>>(\r\n      \"Training/plan/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: ITrainingPlanRequest) {\r\n    return this.post<IResponse<ITrainingPlanModel>>(\"Training/plan/Edit\", data);\r\n  }\r\n\r\n  // getList(params: IPageParams) {\r\n  //   return this.get<IResponseList<IPlanModel[]>>(\"Training/Plan/GetList\", {\r\n  //     params: params,\r\n  //   });\r\n  // }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<ITrainingPlanModel[]>>(\r\n      \"Training/Plan/GetAll\"\r\n    ).pipe();\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<ITrainingPlanModel[]>>(\"Training/Plan/GetAll\", {\r\n      params: {\r\n        $filter: `id eq ${id}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  deleteInstructorAttachments(instructorID: number, attchmentId: number) {\r\n    return this.delete<IResponse>(\r\n      \"Training/Instructor/DeleteInstructorAttachment\",\r\n      {\r\n        params: {\r\n          InstructorID: instructorID,\r\n          AttachmentID: attchmentId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll();\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CourseIndexComponent } from \"app/training/components/courses/course-index/course-index.component\";\r\nimport { pathMatch } from \"app/shared/enums/route-path-match.enum\";\r\nimport { TspIndexComponent } from \"./components/tsp/tsp-index/tsp-index.component\";\r\nimport { AddTspComponent } from \"./components/tsp/add-tsp/add-tsp.component\";\r\nimport { InstructorIndexComponent } from \"./components/instructor/instructor-index/instructor-index.component\";\r\nimport { AddInstructorComponent } from \"./components/instructor/add-instructor/add-instructor.component\";\r\nimport { AddCourseComponent } from \"app/training/components/courses/add-course/add-course-core/add-course.component\";\r\nimport { TrainingRequestIndexComponent } from \"./components/training-requests/training-request-index/training-request-index.component\";\r\nimport { AddTrainingRequestComponent } from \"./components/training-requests/add-training-request/add-training-request.component\";\r\nimport { TrainingPlanIndexComponent } from \"./components/training-plan/training-plan-index/training-plan-index.component\";\r\nimport { PlanCoreComponent } from \"./components/training-plan/add-paln/plan-core/plan-core.component\";\r\nimport { PlanViewCoreComponent } from \"./components/training-plan/plan-view/plan-view-core/plan-view-core.component\";\r\nimport { ImplementationIndexComponent } from \"./components/implementation/implementation-index/implementation-index.component\";\r\nimport { AddImplementationCoreComponent } from \"./components/implementation/add-implementation/add-implementation-core/add-implementation-core.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ViewsManager.course, // course\r\n    data: { view: ViewsManager.course },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: CourseIndexComponent,\r\n        data: { view: ViewsManager.course_index },\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddCourseComponent,\r\n        data: { view: ViewsManager.add_course },\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddCourseComponent,\r\n        data: { view: ViewsManager.add_course },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"tsp\", //tsp\r\n    data: { view: ViewsManager.tsp },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: TspIndexComponent,\r\n        data: { view: ViewsManager.tsp_index },\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddTspComponent,\r\n        data: { view: ViewsManager.add_tsp },\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddTspComponent,\r\n        data: { view: ViewsManager.add_tsp },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"instructor\", //instructor\r\n    data: { view: ViewsManager.instructor },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: InstructorIndexComponent,\r\n        data: { view: ViewsManager.instructor_index },\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddInstructorComponent,\r\n        data: { view: ViewsManager.add_instructor },\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddInstructorComponent,\r\n        data: { view: ViewsManager.add_instructor },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"training-request\", //training-request\r\n    data: { view: ViewsManager.training_request },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: TrainingRequestIndexComponent,\r\n        data: { view: ViewsManager.training_request_index },\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddTrainingRequestComponent,\r\n        data: { view: ViewsManager.add_training_request },\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddTrainingRequestComponent,\r\n        data: { view: ViewsManager.add_training_request },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"training-plan\", //training-plan\r\n    data: { view: ViewsManager.training_plan },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: TrainingPlanIndexComponent,\r\n        data: { view: ViewsManager.training_plan_index },\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: PlanCoreComponent,\r\n        data: { view: ViewsManager.add_training_plan },\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: PlanViewCoreComponent,\r\n        data: { view: ViewsManager.add_training_plan },\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"implementation\", // implementation\r\n    data: { view: ViewsManager.implementation },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: ImplementationIndexComponent,\r\n        data: { view: ViewsManager.implementation_index },\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddImplementationCoreComponent,\r\n        data: { view: ViewsManager.add_implementation },\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddImplementationCoreComponent,\r\n        data: { view: ViewsManager.add_implementation },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TrainingRoutingModule {}\r\n","import { AddImplementationCoreComponent } from './components/implementation/add-implementation/add-implementation-core/add-implementation-core.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { TrainingRoutingModule } from \"./training-routing.module\";\r\nimport { CourseIndexComponent } from \"./components/courses/course-index/course-index.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { CourseCompetenceComponent } from \"./components/courses/add-course/course-competence/course-competence.component\";\r\nimport { CourseOutlineComponent } from \"./components/courses/add-course/course-outline/course-outline.component\";\r\nimport { CourseAttachmentsComponent } from \"./components/courses/add-course/course-attachments/course-attachments.component\";\r\nimport { CourseTspAndInstructorComponent } from \"./components/courses/add-course/course-tsp-and-instructor/course-tsp-and-instructor.component\";\r\nimport { AddTspComponent } from \"./components/tsp/add-tsp/add-tsp.component\";\r\nimport { TspIndexComponent } from \"./components/tsp/tsp-index/tsp-index.component\";\r\nimport { AddCourseFormComponent } from \"./components/courses/add-course/add-course-form/add-course-form.component\";\r\nimport { InstructorIndexComponent } from \"./components/instructor/instructor-index/instructor-index.component\";\r\nimport { AddInstructorComponent } from \"./components/instructor/add-instructor/add-instructor.component\";\r\nimport { CourseGeneralDataComponent } from \"app/training/components/courses/add-course/course-general-data/course-general-data.component\";\r\nimport { AddCourseComponent } from \"app/training/components/courses/add-course/add-course-core/add-course.component\";\r\nimport { TrainingRequestIndexComponent } from \"./components/training-requests/training-request-index/training-request-index.component\";\r\nimport { AddTrainingRequestComponent } from \"./components/training-requests/add-training-request/add-training-request.component\";\r\nimport { TrainingPlanIndexComponent } from \"./components/training-plan/training-plan-index/training-plan-index.component\";\r\nimport { PlanGeneralDataComponent } from \"./components/training-plan/add-paln/plan-general-data/plan-general-data.component\";\r\nimport { TrainingNeedsAnalysisComponent } from \"./components/training-plan/add-paln/training-needs-analysis/training-needs-analysis.component\";\r\nimport { PlanCoursesAndExpensisComponent } from \"./components/training-plan/add-paln/plan-courses-and-expensis/plan-courses-and-expensis.component\";\r\nimport { PlanCoreComponent } from \"./components/training-plan/add-paln/plan-core/plan-core.component\";\r\nimport { GeneralInfoPlanViewComponent } from \"./components/training-plan/plan-view/general-info-plan-view/general-info-plan-view.component\";\r\nimport { PlanViewCoreComponent } from './components/training-plan/plan-view/plan-view-core/plan-view-core.component';\r\nimport { PlanExpensesComponent } from \"./components/training-plan/add-paln/plan-expenses/plan-expenses.component\";\r\nimport { ImplementationIndexComponent } from \"./components/implementation/implementation-index/implementation-index.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CourseIndexComponent,\r\n    AddCourseComponent,\r\n    CourseGeneralDataComponent,\r\n    CourseCompetenceComponent,\r\n    CourseOutlineComponent,\r\n    CourseAttachmentsComponent,\r\n    AddTspComponent,\r\n    CourseTspAndInstructorComponent,\r\n    TspIndexComponent,\r\n    AddCourseFormComponent,\r\n    InstructorIndexComponent,\r\n    AddInstructorComponent,\r\n    TrainingRequestIndexComponent,\r\n    AddTrainingRequestComponent,\r\n    TrainingPlanIndexComponent,\r\n    PlanGeneralDataComponent,\r\n    TrainingNeedsAnalysisComponent,\r\n    PlanCoursesAndExpensisComponent,\r\n    PlanCoreComponent,\r\n    GeneralInfoPlanViewComponent,\r\n    PlanViewCoreComponent,\r\n    PlanExpensesComponent,\r\n    ImplementationIndexComponent,\r\n    AddImplementationCoreComponent,\r\n  ],\r\n  imports: [CommonModule, TrainingRoutingModule, SharedModule],\r\n})\r\nexport class TrainingModule {}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}