{"version":3,"file":"src_app_training_training_module_ts.js","mappings":"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","sources":["./src/app/shared/Guards/check-is-allowd.guard.ts","./src/app/training/components/courses/course-index/course-index.component.ts","./src/app/training/components/courses/course-index/course-index.component.html","./src/app/training/components/implementation/add-implementation/add-implementation-core/add-implementation-core.component.ts","./src/app/training/components/implementation/add-implementation/add-implementation-core/add-implementation-core.component.html","./src/app/training/components/implementation/add-implementation/implementation-employees/implementation-employees.component.ts","./src/app/training/components/implementation/add-implementation/implementation-employees/implementation-employees.component.html","./src/app/training/components/implementation/add-implementation/implementation-expenses/implementation-expenses.component.ts","./src/app/training/components/implementation/add-implementation/implementation-expenses/implementation-expenses.component.html","./src/app/training/components/implementation/add-implementation/implementation-general-data/implementation-general-data.component.ts","./src/app/training/components/implementation/add-implementation/implementation-general-data/implementation-general-data.component.html","./src/app/training/components/implementation/add-implementation/implementation-lectures/implementation-lectures.component.ts","./src/app/training/components/implementation/add-implementation/implementation-lectures/implementation-lectures.component.html","./src/app/training/components/implementation/implementation-index/implementation-index.component.ts","./src/app/training/components/implementation/implementation-index/implementation-index.component.html","./src/app/training/components/instructor/instructor-index/instructor-index.component.ts","./src/app/training/components/instructor/instructor-index/instructor-index.component.html","./src/app/training/components/training-plan/plan-view/general-info-plan-view/general-info-plan-view.component.ts","./src/app/training/components/training-plan/plan-view/general-info-plan-view/general-info-plan-view.component.html","./src/app/training/components/training-plan/plan-view/plan-view-core/plan-view-core.component.ts","./src/app/training/components/training-plan/plan-view/plan-view-core/plan-view-core.component.html","./src/app/training/components/training-plan/training-plan-index/training-plan-index.component.ts","./src/app/training/components/training-plan/training-plan-index/training-plan-index.component.html","./src/app/training/components/training-requests/add-training-request/add-training-request.component.ts","./src/app/training/components/training-requests/add-training-request/add-training-request.component.html","./src/app/training/components/training-requests/training-request-index/training-request-index.component.ts","./src/app/training/components/training-requests/training-request-index/training-request-index.component.html","./src/app/training/components/tsp/tsp-index/tsp-index.component.ts","./src/app/training/components/tsp/tsp-index/tsp-index.component.html","./src/app/training/mapper/implementation.ts","./src/app/training/services/implementation/implementation-employee.service.ts","./src/app/training/services/implementation/implementation-expenses.service.ts","./src/app/training/services/implementation/implementation-lectures.service.ts","./src/app/training/services/implementation/implementation.service.ts","./src/app/training/training-routing.module.ts","./src/app/training/training.module.ts"],"sourcesContent":["import { inject, Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, } from \"@angular/router\";\r\nimport { UserViewsService } from \"app/auth/services/user-views.service\";\r\nimport { IUM_ModulesModel } from \"app/shared/interfaces/user-views\";\r\nimport { LoadingService } from \"app/shared/services/loading.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CheckIsViewAllowedGuard implements CanActivate {\r\n  UserModules: IUM_ModulesModel[];\r\n  public loadingService = inject(LoadingService);\r\n  loading: HTMLElement;\r\n\r\n  constructor(private viewsService: UserViewsService, private router: Router) {\r\n    this.UserModules = viewsService.UserModules$.getValue();\r\n    this.loading = document.getElementById(\"page-loading\");\r\n  }\r\n\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    return true;\r\n    // un comment code for used\r\n    // let view = route.data?.view;\r\n    // this.showLoading();\r\n    // if (this.UserModules?.length > 0) {\r\n    //   if (!this.viewsService.isViewAllowed(view)) {\r\n    //     this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //     this.hideLoading();\r\n    //   }\r\n    //   else {\r\n    //     this.hideLoading();\r\n    //     return true;\r\n    //   }\r\n    // }\r\n    //\r\n    // else {\r\n    //   this.viewsService.UserModules$.subscribe((val) => {\r\n    //     if (val?.length > 0) {\r\n    //       if (!this.viewsService.isViewAllowed(view)) {\r\n    //         this.router.navigateByUrl(\"/auth/access-denied\");\r\n    //         this.hideLoading();\r\n    //       }\r\n    //       else {\r\n    //         this.hideLoading();\r\n    //         return true;\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  showLoading() {\r\n    this.loading.style.display = \"block\";\r\n    this.loading.style.opacity = \"1\";\r\n    this.loading.style.zIndex = \"998\";\r\n  }\r\n\r\n  hideLoading() {\r\n    this.loading.style.display = \"none\";\r\n    this.loading.style.opacity = \"0\";\r\n    this.loading.style.zIndex = \"0\";\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { courseToDisplay } from \"app/training/mapper/course\";\r\nimport {\r\n  ICourseModel,\r\n  ICourseToDisplay,\r\n} from \"app/training/models/course/course\";\r\nimport { CourseService } from \"app/training/services/course/course.service\";\r\n\r\n@Component({\r\n  selector: \"app-course-index\",\r\n  templateUrl: \"./course-index.component.html\",\r\n  styleUrls: [\"./course-index.component.scss\"],\r\n})\r\nexport class CourseIndexComponent extends AppHelpers implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<ICourseToDisplay>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"courseCode\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"abbrevation\",\r\n    \"courseCategory\",\r\n    \"courseType\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\r\n    \"id\",\r\n    \"isFree\",\r\n    \"courseValue\",\r\n    \"isHolding\",\r\n    \"holdingYears\",\r\n    \"courseValue\",\r\n    \"penaletyPercentege\",\r\n    \"threeMontheEvalution\",\r\n    \"isFree\",\r\n    \"sixMontheEvalution\",\r\n  ];\r\n\r\n  constructor(public courseService: CourseService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.courseService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ICourseModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(courseToDisplay(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  delete(course: ICourseModel) {\r\n    this.showLoading();\r\n    this.courseService.Delete(course.id).subscribe((res: IResponse) => {\r\n      if ((res.message.messageType = MessageTypes.Success)) {\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n      }\r\n      else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(course: ICourseModel) {\r\n    let msg = this.msgTranslate(course.ar_Name, course.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(course);\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"index-card\">\r\n  <mat-card-title>\r\n    <page-title\r\n      title=\"courses\"\r\n      class=\"mb-10\"\r\n      [globalFunctions]=\"globalFunctions\"\r\n    ></page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"courseService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatStepper } from \"@angular/material/stepper\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ImplementationEmployeesComponent } from \"../implementation-employees/implementation-employees.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-implementation-core\",\r\n  templateUrl: \"./add-implementation-core.component.html\",\r\n  styleUrls: [\"./add-implementation-core.component.scss\"],\r\n})\r\nexport class AddImplementationCoreComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  implementationId: number = 0;\r\n  @ViewChild(\"stepper\") stepper: MatStepper;\r\n  @ViewChild(ImplementationEmployeesComponent)\r\n  implementationEmployeesComponent: ImplementationEmployeesComponent;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.implementationId = Number(param.id ?? 0);\r\n    });\r\n  }\r\n\r\n  stepChanged() {\r\n    // prevent inputs to be invalid after next & back\r\n    this.stepper.selected.interacted = false;\r\n  }\r\n\r\n  getImplementationId(value) {\r\n    this.implementationId = value;\r\n  }\r\n\r\n  updateEmployeeIndex() {\r\n    this.implementationEmployeesComponent.getAll();\r\n  }\r\n}\r\n","<mat-card-title class=\"title-no-margin title-section fixed-title\">\r\n  <page-title title=\"addImplementation\"></page-title>\r\n\r\n  <ng-container>\r\n    <!-- add new btn -->\r\n    <app-add-new-btn\r\n      *ngIf=\"implementationId > 0\"\r\n      url=\"/training/{{ moduleId }}/implementation/add\"\r\n      [params]=\"parentParam\"\r\n    >\r\n    </app-add-new-btn>\r\n\r\n    <app-back-btn\r\n      url=\"/training/{{ moduleId }}/implementation/index\"\r\n      [params]=\"pageParams\"\r\n    >\r\n    </app-back-btn>\r\n  </ng-container>\r\n</mat-card-title>\r\n\r\n<ng-container>\r\n  <mat-card-content class=\"cards-no-shadow has-fixed-title\">\r\n    <mat-stepper #stepper [linear]=\"false\" (selectionChange)=\"stepChanged()\">\r\n      <mat-step label=\"{{ 'general' | translate | titlecase }}\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-card>\r\n              <mat-card-title class=\"title-no-margin\">\r\n                <page-title title=\"generalInfo\"></page-title>\r\n              </mat-card-title>\r\n\r\n              <mat-divider class=\"mt-2\"></mat-divider>\r\n              <div class=\"clearfix\"></div>\r\n\r\n              <app-implementation-general-data\r\n                [implementationId]=\"implementationId\"\r\n                (changeImplementationId)=\"getImplementationId($event)\"\r\n                (updateEmployeeIndex)=\"updateEmployeeIndex()\"\r\n              ></app-implementation-general-data>\r\n            </mat-card>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n\r\n      <mat-step label=\"{{ 'employees' | translate | titlecase }}\">\r\n        <app-implementation-employees\r\n          [implementationId]=\"implementationId\"\r\n        ></app-implementation-employees>\r\n      </mat-step>\r\n\r\n      <mat-step label=\"{{ 'lectures' | translate | titlecase }}\">\r\n        <app-implementation-lectures\r\n          [implementationId]=\"implementationId\"\r\n        ></app-implementation-lectures>\r\n      </mat-step>\r\n\r\n      <mat-step label=\"{{ 'expenses' | translate | titlecase }}\">\r\n        <app-implementation-expenses\r\n          [implementationId]=\"implementationId\"\r\n        ></app-implementation-expenses>\r\n      </mat-step>\r\n    </mat-stepper>\r\n  </mat-card-content>\r\n\r\n  <steps-footer\r\n    [stepper]=\"stepper\"\r\n    [parentParam]=\"parentParam\"\r\n    url=\"/training/{{ moduleId }}/implementation\"\r\n    [pageParams]=\"pageParams\"\r\n  ></steps-footer>\r\n</ng-container>\r\n","import { Component, Input, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { implementationEmployeeToDisplay } from \"app/training/mapper/implementation\";\r\nimport {\r\n  IImplementationEmployeeDisplayModel,\r\n  IImplementationEmployeeModel,\r\n  IImplementationEmployeeRequest,\r\n} from \"app/training/models/implementation/employees\";\r\nimport { ImplementationEmployeeService } from \"app/training/services/implementation/implementation-employee.service\";\r\n\r\n@Component({\r\n  selector: \"app-implementation-employees\",\r\n  templateUrl: \"./implementation-employees.component.html\",\r\n  styleUrls: [\"./implementation-employees.component.scss\"],\r\n})\r\nexport class ImplementationEmployeesComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  @Input() implementationId: number = 0;\r\n\r\n  mandatoryColomns: string[] = [\r\n    // \"Ser\",\r\n    \"code\",\r\n    \"employee\",\r\n    \"department\",\r\n    \"job\",\r\n    \"selectAll\",\r\n  ];\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<IImplementationEmployeeDisplayModel>;\r\n  optionalColomns: string[] = [];\r\n\r\n  constructor(\r\n    private implementationEmployeeService: ImplementationEmployeeService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // after add implementation general data\r\n    if (\r\n      changes.implementationId.currentValue > 0 &&\r\n      !changes.implementationId.previousValue &&\r\n      !changes.implementationId.firstChange && // first time will be 0\r\n      this.checkNoBusinessOrCompany()\r\n    ) {\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) {\r\n      this.dataSource = new MatTableDataSource(null);\r\n    }\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.implementationId > 0) {\r\n      this.getAll();\r\n    } else {\r\n      this.isLoaded = true;\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n\r\n    this.implementationEmployeeService\r\n      .getAll(this.implementationId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IImplementationEmployeeModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // display selected first\r\n          res.data.sort((a, b) =>\r\n            a.isSelected === b.isSelected ? 0 : a.isSelected ? -1 : 1\r\n          );\r\n          this.dataSource = new MatTableDataSource(\r\n            implementationEmployeeToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    const model: IImplementationEmployeeRequest = {\r\n      Implementation_ID: this.implementationId,\r\n      SelectedEmployees: [],\r\n    };\r\n\r\n    this.dataSource.data\r\n      .filter((ele) => ele.isSelected)\r\n      .forEach((selected) => {\r\n        model.SelectedEmployees.push(\r\n          selected.person.core_Person_Instance[0].id\r\n        );\r\n      });\r\n\r\n    if (model.SelectedEmployees.length == 0) {\r\n      this.warning(\"selectOneEmployee\");\r\n      return;\r\n    }\r\n\r\n    this.create(model);\r\n  }\r\n\r\n  create(model: IImplementationEmployeeRequest) {\r\n    this.showLoading();\r\n    this.implementationEmployeeService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IImplementationEmployeeModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title title=\"employees\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <!-- *ngIf=\"implementationId > 0\" -->\r\n        <app-material-table\r\n          [isLoaded]=\"isLoaded\"\r\n          [dataSource]=\"dataSource\"\r\n          [mandatoryColomns]=\"mandatoryColomns\"\r\n          [optionalColomns]=\"optionalColomns\"\r\n          class=\"table-in-forms\"\r\n          [showPaginator]=\"false\"\r\n          [showSpaceTop]=\"false\"\r\n          checkboxColumnName=\"isSelected\"\r\n        >\r\n        </app-material-table>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn\r\n          [color]=\"btn.darkBlue\"\r\n          icon=\"pi pi-plus-circle\"\r\n          (onClick)=\"submit()\"\r\n          [disabled]=\"!implementationId\"\r\n        >\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { implementationExpenseToDisplay } from \"app/training/mapper/implementation\";\r\nimport {\r\n  IImplementationExpensesDeleteParams,\r\n  IImplementationExpensesDisplayModel,\r\n  IImplementationExpensesModel,\r\n  IImplementationExpensesRequest,\r\n} from \"app/training/models/implementation/expenses\";\r\nimport { ImplementationExpensesService } from \"app/training/services/implementation/implementation-expenses.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-implementation-expenses\",\r\n  templateUrl: \"./implementation-expenses.component.html\",\r\n  styleUrls: [\"./implementation-expenses.component.scss\"],\r\n})\r\nexport class ImplementationExpensesComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  @Input() implementationId: number = 0;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    // \"Ser\",\r\n    \"expense\",\r\n    \"value\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<IImplementationExpensesDisplayModel>;\r\n\r\n  constructor(\r\n    private implementationExpensesService: ImplementationExpensesService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNallable: true }],\r\n      expenseId: [null, [Validators.required]],\r\n      budget: [null, [Validators.required, CustomValidators.gte(0)]],\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes.implementationId?.currentValue > 0 &&\r\n      this.checkNoBusinessOrCompany()\r\n    )\r\n      this.getAll();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.implementationId > 0)\r\n      this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  override onModulesChanged(): void {\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.implementation_expense\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.implementationExpensesService\r\n      .getAll(this.implementationId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IImplementationExpensesModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            implementationExpenseToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IImplementationExpensesRequest = {\r\n        implementation_ID: this.implementationId,\r\n        expense_ID: this.form.value.expenseId,\r\n        expense_Value: this.form.value.budget,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IImplementationExpensesRequest) {\r\n    this.showLoading();\r\n    this.implementationExpensesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IImplementationExpensesModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.clearForm();\r\n          this.getAll();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(expense: IImplementationExpensesDisplayModel): void {\r\n    let msg = expense.expense + \" - \" + expense.value;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(expense);\r\n    });\r\n  }\r\n\r\n  delete(expense: IImplementationExpensesDisplayModel) {\r\n    let deleteParams: IImplementationExpensesDeleteParams = {\r\n      implementation_id: expense.implementation_ID,\r\n      expense_id: expense.expense_ID,\r\n    };\r\n    this.showLoading();\r\n    this.implementationExpensesService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset(/* { id: 0 } */);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title title=\"expenses\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <courseForm [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-expenses-dropdown\r\n                    [control]=\"formCtrls.expenseId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  ></app-expenses-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.budget\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"budget\"\r\n                    type=\"number\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <submit-btn\r\n                    [disabled]=\"!implementationId\"\r\n                    [color]=\"btn.darkBlue\"\r\n                    icon=\"pi pi-plus-circle\"\r\n                    class=\"btn-large mt-1 line-height-3\"\r\n                    [iconPositionBefore]=\"false\"\r\n                    (onClick)=\"submit()\"\r\n                  >\r\n                  </submit-btn>\r\n                </div>\r\n              </div>\r\n            </courseForm>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <!-- expenses index -->\r\n      <ng-container *ngIf=\"implementationId > 0\">\r\n        <mat-card-content>\r\n          <mat-divider class=\"w-75 m-auto\"></mat-divider>\r\n\r\n          <app-material-table\r\n            [isLoaded]=\"isLoaded\"\r\n            [dataSource]=\"dataSource\"\r\n            [mandatoryColomns]=\"mandatoryColomns\"\r\n            [optionalColomns]=\"optionalColomns\"\r\n            [actions]=\"rowFunctions\"\r\n            class=\"table-in-forms small-table\"\r\n            (deleteRow)=\"onDelete($event)\"\r\n            [showPaginator]=\"false\"\r\n            [showFilter]=\"false\"\r\n          >\r\n          </app-material-table>\r\n        </mat-card-content>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport {\r\n  IImplementationModel,\r\n  IImplementationRequest,\r\n} from \"app/training/models/implementation/implementation\";\r\nimport { ImplementationService } from \"app/training/services/implementation/implementation.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-implementation-general-data\",\r\n  templateUrl: \"./implementation-general-data.component.html\",\r\n  styleUrls: [\"./implementation-general-data.component.scss\"],\r\n})\r\nexport class ImplementationGeneralDataComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  @Input() implementationId: number = 0;\r\n  @Output() changeImplementationId = new EventEmitter<number>();\r\n  @Output() updateEmployeeIndex = new EventEmitter<number>(); // after update\r\n\r\n  // use in view\r\n  @Input() implementation: IImplementationModel;\r\n  @Output() closeAfterUpdate = new EventEmitter<IImplementationModel>();\r\n\r\n  constructor(private implementationService: ImplementationService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.implementationId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getImplementationById();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [this.implementationId, { nonNullable: true }],\r\n        plan_ID: [null, [Validators.required]],\r\n        plan_Course_ID: [null, [Validators.required]],\r\n        instructor_ID: [null, [Validators.required]],\r\n        tsP_ID: [null, [Validators.required]],\r\n        from_Date: [null, [Validators.required]],\r\n        to_Date: [null, [Validators.required]],\r\n        attendance_Percentage: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomValidators.gte(0),\r\n            CustomValidators.lte(100),\r\n          ],\r\n        ],\r\n        note: [null],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"from_Date\", \"to_Date\"),\r\n      }\r\n    );\r\n\r\n    if (this.implementation) this.implementationId = this.implementation.id;\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let model: IImplementationRequest = {\r\n        id: this.formCtrls.id.value,\r\n        plan_Course_ID: this.formCtrls.plan_Course_ID.value,\r\n        instructor_ID: this.formCtrls.instructor_ID.value,\r\n        tsP_ID: this.formCtrls.tsP_ID.value,\r\n        from_Date: HelpersFunctions.mapDateReverse(\r\n          this.formCtrls.from_Date.value\r\n        ),\r\n        to_Date: HelpersFunctions.mapDateReverse(this.formCtrls.to_Date.value),\r\n        attendance_Percentage: this.formCtrls.attendance_Percentage.value,\r\n        note: this.formCtrls.note.value,\r\n      };\r\n\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    }\r\n  }\r\n\r\n  getImplementationById() {\r\n    // edit in view\r\n    if (this.implementation) this.form.patchValue(this.implementation);\r\n    // edit after add if change company\r\n    else {\r\n      this.showLoading();\r\n      this.implementationService\r\n        .getById(this.implementationId)\r\n        .subscribe((res: IResponse<IImplementationModel[]>) => {\r\n          if ((res.message.messageType = MessageTypes.Success)) {\r\n            this.form.patchValue(res.data[0]);\r\n            this.formCtrls.plan_ID.setValue(\r\n              res.data[0].trA_Plan_Course?.plan_ID\r\n            );\r\n            this.formCtrls.plan_Course_ID.setValue(res.data[0].plan_Course_ID);\r\n          } else this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        });\r\n    }\r\n  }\r\n\r\n  create(data: IImplementationRequest) {\r\n    this.showLoading();\r\n    this.implementationService\r\n      .create(data)\r\n      .subscribe((res: IResponse<IImplementationModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.implementationId = res.data.id;\r\n          this.formCtrls.id.setValue(this.implementationId);\r\n          let url = `/training/${this.moduleId}/implementation/edit/${this.implementationId}`;\r\n          this.navigateTo(url);\r\n          this.changeImplementationId.emit(this.implementationId);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(data: IImplementationRequest) {\r\n    this.showLoading();\r\n    this.implementationService\r\n      .update(data)\r\n      .subscribe((res: IResponse<IImplementationModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.closeAfterUpdate.emit(res.data);\r\n          this.updateEmployeeIndex.emit();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<mat-card-content class=\"container-fluid mtop-40\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-lg-3 col-12\">\r\n            <app-training-plan-dropdown\r\n              [control]=\"formCtrls.plan_ID\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n            >\r\n            </app-training-plan-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-lg-3 col-12\">\r\n            <app-course-by-training-plan-dropdown\r\n              [control]=\"formCtrls.plan_Course_ID\"\r\n              [planControl]=\"formCtrls.plan_ID\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n            >\r\n            </app-course-by-training-plan-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-lg-3 col-12\">\r\n            <app-instructor-dropdown\r\n              [control]=\"formCtrls.instructor_ID\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n            ></app-instructor-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-lg-3 col-12\">\r\n            <app-tsp-dropdown\r\n              [control]=\"formCtrls.tsP_ID\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n            ></app-tsp-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-lg-3 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.from_Date\"\r\n              [submitted]=\"submitted\"\r\n              label=\"from_Date\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-lg-3 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.to_Date\"\r\n              [submitted]=\"submitted\"\r\n              label=\"to_Date\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-lg-3 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.attendance_Percentage\"\r\n              [submitted]=\"submitted\"\r\n              label=\"attendance_Percentage\"\r\n              type=\"number\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-lg-3 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.note\"\r\n              [submitted]=\"submitted\"\r\n              label=\"notes\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card-content>\r\n\r\n<mat-card-actions align=\"end\" [style]=\"{ 'margin-bottom': '-15px' }\">\r\n  <submit-btn\r\n    (onClick)=\"submit()\"\r\n    [id]=\"formCtrls.id.value\"\r\n    [color]=\"btn.darkBlue\"\r\n    icon=\"pi pi-plus-circle\"\r\n    [iconPositionBefore]=\"false\"\r\n  >\r\n  </submit-btn>\r\n\r\n  <reset-form-btn\r\n    *ngIf=\"formCtrls.id.value == 0\"\r\n    (click)=\"clearForm()\"\r\n  ></reset-form-btn>\r\n</mat-card-actions>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { implementationLectureToDisplay } from \"app/training/mapper/implementation\";\r\nimport {\r\n  IImplementationLectureModel,\r\n  IImplementationLectureRequest,\r\n} from \"app/training/models/implementation/lectures\";\r\nimport { ImplementationLecturesService } from \"app/training/services/implementation/implementation-lectures.service\";\r\n\r\n@Component({\r\n  selector: \"app-implementation-lectures\",\r\n  templateUrl: \"./implementation-lectures.component.html\",\r\n  styleUrls: [\"./implementation-lectures.component.scss\"],\r\n})\r\nexport class ImplementationLecturesComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  @Input() implementationId: number = 0;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    // \"Ser\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"dayDate\",\r\n    \"startHour\",\r\n    \"endHour\",\r\n    \"location\",\r\n    \"note\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<IImplementationLectureModel>;\r\n\r\n  constructor(\r\n    private implementationLectureService: ImplementationLecturesService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, { nonNallable: true }],\r\n        ar_Name: [null, [Validators.required]],\r\n        en_Name: [null, [Validators.required]],\r\n        day_Date: [null, [Validators.required]],\r\n        start_Houre: [null, [Validators.required]],\r\n        end_Houre: [null, [Validators.required]],\r\n        location: [null],\r\n        note: [null],\r\n        isRepeated: [null],\r\n        repeatEndDate: [null],\r\n        days: [[]],\r\n      },\r\n      {\r\n        validator: [\r\n          CustomValidator.timeBefore(\"start_Houre\", \"end_Houre\"),\r\n          CustomValidator.compareDates(\"day_Date\", \"repeatEndDate\"),\r\n        ],\r\n      }\r\n    );\r\n  }\r\n\r\n  // ngOnChanges(changes: SimpleChanges): void {\r\n  //   if (\r\n  //     changes.implementationId?.currentValue > 0 &&\r\n  //     this.checkNoBusinessOrCompany()\r\n  //   )\r\n  //     this.getAll(this.firstPage);\r\n  // }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.implementationId > 0)\r\n      this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  override onModulesChanged(): void {\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.implementation_lecture\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getAll() {\r\n    this.implementationLectureService\r\n      .getAll(this.implementationId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IImplementationLectureModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            implementationLectureToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          // this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IImplementationLectureRequest = {\r\n        implementation_ID: this.implementationId,\r\n        id: this.form.value.id,\r\n        ar_Name: this.form.value.ar_Name,\r\n        en_Name: this.form.value.en_Name,\r\n        day_Date: HelpersFunctions.mapDateReverse(this.form.value.day_Date),\r\n        start_Houre: this.form.value.start_Houre,\r\n        end_Houre: this.form.value.end_Houre,\r\n        location: this.form.value.location,\r\n        note: this.form.value.note,\r\n        isRepeated: this.form.value.isRepeated ?? false,\r\n        repeatEndDate: null,\r\n        weekDays: [],\r\n      };\r\n      if (model.isRepeated) {\r\n        model.repeatEndDate = HelpersFunctions.mapDateReverse(\r\n          this.form.value.repeatEndDate\r\n        );\r\n        model.weekDays = this.form.value.days ?? [];\r\n      }\r\n\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IImplementationLectureRequest) {\r\n    this.showLoading();\r\n    this.implementationLectureService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IImplementationLectureModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.clearForm();\r\n          this.getAll();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IImplementationLectureRequest) {\r\n    this.showLoading();\r\n    this.implementationLectureService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IImplementationLectureModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.clearForm();\r\n          this.getAll();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  lectureToEdit(lecture: IImplementationLectureModel) {\r\n    this.form.patchValue(lecture);\r\n    // console.log(this.form);\r\n  }\r\n\r\n  onDelete(lecture: IImplementationLectureModel): void {\r\n    let msg = this.msgTranslate(lecture.ar_Name, lecture.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(lecture);\r\n    });\r\n  }\r\n\r\n  delete(lecture: IImplementationLectureModel) {\r\n    this.showLoading();\r\n    this.implementationLectureService\r\n      .Delete(lecture.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0, days: [] });\r\n    this.submitted = false;\r\n  }\r\n\r\n  onChangeIsRepeated(value) {\r\n    // console.log(value);\r\n    if (value) {\r\n      this.formCtrls.repeatEndDate.addValidators([Validators.required]);\r\n      this.formCtrls.days.addValidators([Validators.required]);\r\n    } else {\r\n      this.formCtrls.repeatEndDate.clearValidators();\r\n      this.formCtrls.days.clearValidators();\r\n    }\r\n    this.formCtrls.repeatEndDate.updateValueAndValidity();\r\n    this.formCtrls.days.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title>\r\n        <page-title title=\"lectures\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-content class=\"container-fluid mtop-45\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <courseForm [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12 checkbox-below-input\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.day_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"dayDate\"\r\n                  >\r\n                  </app-datepicker>\r\n\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.isRepeated\"\r\n                    label=\"isRepeated\"\r\n                    labelPosition=\"before\"\r\n                    class=\"w-100\"\r\n                    (onChange)=\"onChangeIsRepeated($event)\"\r\n                  >\r\n                  </app-check-box>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.repeatEndDate\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"repeatEndDate\"\r\n                    [disabled]=\"!formCtrls.isRepeated.value\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"col-12 pright-15 pleft-15 mbottom-15\"\r\n                  [class.hidden]=\"!formCtrls.isRepeated.value\"\r\n                >\r\n                  <weekdays-checkboxes\r\n                    [control]=\"formCtrls.days\"\r\n                    [submitted]=\"submitted\"\r\n                  ></weekdays-checkboxes>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-timepicker\r\n                    [control]=\"formCtrls.start_Houre\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"startHour\"\r\n                  >\r\n                  </app-timepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-timepicker\r\n                    [control]=\"formCtrls.end_Houre\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"endHour\"\r\n                  >\r\n                  </app-timepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.location\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"location\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-lg-3 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.note\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"notes\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </courseForm>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn\r\n          [disabled]=\"!implementationId\"\r\n          [id]=\"formCtrls.id.value\"\r\n          [color]=\"btn.darkBlue\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [iconPositionBefore]=\"false\"\r\n          (onClick)=\"submit()\"\r\n        >\r\n        </submit-btn>\r\n\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <!-- lecture index -->\r\n      <ng-container *ngIf=\"implementationId > 0\">\r\n        <mat-card-content>\r\n          <mat-divider class=\"w-75 m-auto\"></mat-divider>\r\n\r\n          <app-material-table\r\n            [isRowClickable]=\"false\"\r\n            [isLoaded]=\"isLoaded\"\r\n            [dataSource]=\"dataSource\"\r\n            [mandatoryColomns]=\"mandatoryColomns\"\r\n            [optionalColomns]=\"optionalColomns\"\r\n            [actions]=\"rowFunctions\"\r\n            class=\"table-in-forms\"\r\n            (editRow)=\"lectureToEdit($event)\"\r\n            (deleteRow)=\"onDelete($event)\"\r\n            [showFilter]=\"false\"\r\n            [showPaginator]=\"false\"\r\n          >\r\n          </app-material-table>\r\n        </mat-card-content>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { implementationListToDisplay } from \"app/training/mapper/implementation\";\r\nimport { IImplementationListDisplayModel, IImplementationListModel } from \"app/training/models/implementation/implementation\";\r\nimport { ImplementationService } from \"app/training/services/implementation/implementation.service\";\r\n\r\n@Component({\r\n  selector: \"app-implementation-index\",\r\n  templateUrl: \"./implementation-index.component.html\",\r\n  styleUrls: [\"./implementation-index.component.scss\"],\r\n})\r\nexport class ImplementationIndexComponent extends AppHelpers implements OnInit {\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"planName\",\r\n    \"course\",\r\n    \"from_Date\",\r\n    \"to_Date\",\r\n    \"count_Employees\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\"id\"];\r\n\r\n  dataSource: MatTableDataSource<IImplementationListDisplayModel>;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(public implementationService: ImplementationService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.removePageParams();\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.implementationService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IImplementationListModel[]>) => {\r\n        if (res.message.messageType == 1) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(\r\n            implementationListToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  onDelete(implementation: IImplementationListDisplayModel): void {\r\n    let msg = implementation.planName + \" - \" + implementation.course;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(implementation);\r\n    });\r\n  }\r\n\r\n  delete(implementation: IImplementationListDisplayModel) {\r\n    this.showLoading();\r\n    this.implementationService\r\n      .Delete(implementation.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == 1) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"index-card\">\r\n      <mat-card-title>\r\n        <page-title title=\"implementation\" [globalFunctions]=\"globalFunctions\">\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <app-material-table\r\n        [isRowClickable]=\"true\"\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        [exportService]=\"implementationService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IInstructorModel } from \"app/training/models/instructor\";\r\nimport { InstructorService } from \"app/training/services/instructor.service\";\r\n\r\n@Component({\r\n  selector: \"app-instructor-index\",\r\n  templateUrl: \"./instructor-index.component.html\",\r\n  styleUrls: [\"./instructor-index.component.scss\"],\r\n})\r\nexport class InstructorIndexComponent extends AppHelpers implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<IInstructorModel>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"job\",\r\n    \"is_TOT\",\r\n    \"mobile\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\r\n    // \"id\",\r\n    \"code\",\r\n    \"phone\",\r\n    \"email\",\r\n    \"qualification\",\r\n    \"note\",\r\n  ];\r\n\r\n  constructor(public instructorService: InstructorService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.instructorService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IInstructorModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  delete(model: IInstructorModel) {\r\n    this.showLoading();\r\n    this.instructorService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if ((res.message.messageType = MessageTypes.Success)) {\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n      }\r\n      else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(model: IInstructorModel) {\r\n    let msg = this.msgTranslate(model.ar_Name, model.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(model);\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"index-card\">\r\n  <mat-card-title>\r\n    <page-title\r\n      title=\"instructors\"\r\n      [globalFunctions]=\"globalFunctions\"\r\n    ></page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"instructorService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ITrainingPlanModel } from \"app/training/models/training-plan/training-plan\";\r\nimport { TrainingPlanIndexService } from \"app/training/services/traning-plan/training-plan-index.service\";\r\n\r\n@Component({\r\n  selector: \"app-general-info-plan-view\",\r\n  templateUrl: \"./general-info-plan-view.component.html\",\r\n  styleUrls: [\"./general-info-plan-view.component.scss\"],\r\n})\r\nexport class GeneralInfoPlanViewComponent extends AppHelpers implements OnInit {\r\n  isUpdate: boolean = false;\r\n  @Input() planId: number = 0;\r\n  plan: ITrainingPlanModel;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private trainingPlanIndexService: TrainingPlanIndexService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.planId > 0 && this.checkNoBusinessOrCompany()) this.getPlanById();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getPlanById() {\r\n    this.isLoaded = false;\r\n    // this.showLoading();\r\n    this.trainingPlanIndexService\r\n      .getById(this.planId)\r\n      .subscribe((res: IResponse<ITrainingPlanModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.plan = res.data[0];\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        //  this.hideLoading();\r\n      });\r\n  }\r\n\r\n  returnToView(updatedPlan: ITrainingPlanModel) {\r\n    this.isUpdate = false;\r\n    this.plan = updatedPlan;\r\n  }\r\n}\r\n","<!-- <br /> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card #container>\r\n      <mat-card-title class=\"title-no-margin\">\r\n        <page-title title=\"generalInfo\"></page-title>\r\n        <button mat-button\r\n                class=\"float-right section-edit-btn pright-6 pleft-6 darkBlue\"\r\n                id=\"section_edit_btn\"\r\n                (click)=\"isUpdate = true\"\r\n                *ngIf=\"!isUpdate\">\r\n          <i class=\"ft-edit-1 font-medium-3\"></i>\r\n        </button>\r\n        <button mat-button\r\n                class=\"float-right section-edit-btn pright-6 pleft-6 darkBlue\"\r\n                id=\"section_edit_btn\"\r\n                (click)=\"isUpdate = false\"\r\n                *ngIf=\"isUpdate\">\r\n          <i class=\"ft-corner-up-left font-medium-3\"></i>\r\n        </button>\r\n      </mat-card-title>\r\n\r\n      <mat-divider class=\"mt-2\"></mat-divider>\r\n\r\n      <mat-card-content>\r\n        <div class=\"mtop-30\" *ngIf=\"!isUpdate; else form\">\r\n          <div *ngIf=\"isLoaded\" class=\"view-data-row-container\">\r\n            <app-view-data-row-item\r\n              label=\"en_Name\"\r\n              [value]=\"plan?.en_Name\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"ar_Name\"\r\n              [value]=\"plan?.ar_Name\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"froM_DATE\"\r\n              [value]=\"plan?.from_Date\"\r\n              [isDate]=\"true\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"tO_DATE\"\r\n              [value]=\"plan?.to_Date\"\r\n              [isDate]=\"true\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"budget\"\r\n              [value]=\"plan?.budget\"\r\n            ></app-view-data-row-item>\r\n\r\n            <app-view-data-row-item\r\n              label=\"notes\"\r\n              [value]=\"plan?.note\"\r\n            ></app-view-data-row-item>\r\n          </div>\r\n          <app-view-card-row-skeleton *ngIf=\"!isLoaded\"></app-view-card-row-skeleton>\r\n          <!-- <div class=\"table-responsive\">\r\n            <table class=\"table m-0\">\r\n              <thead>\r\n                <tr style=\"color: #5a5a5a\">\r\n                  <th>{{ \"en_Name\" | translate }}</th>\r\n                  <th>{{ \"ar_Name\" | translate }}</th>\r\n                  <th>{{ \"froM_DATE\" | translate }}</th>\r\n                  <th>{{ \"tO_DATE\" | translate }}</th>\r\n                  <th>{{ \"budget\" | translate }}</th>\r\n                  <th>{{ \"notes\" | translate }}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr style=\"color: #374761\">\r\n                  <td>{{ plan?.en_Name }}</td>\r\n                  <td>{{ plan?.ar_Name }}</td>\r\n                  <td>{{ plan?.from_Date | date : \"dd/MM/yyyy\" }}</td>\r\n                  <td>{{ plan?.to_Date | date : \"dd/MM/yyyy\" }}</td>\r\n                  <td>{{ plan?.budget ?? \"---\" }}</td>\r\n                  <td>{{ plan?.note ?? \"---\" }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div> -->\r\n        </div>\r\n\r\n        <ng-template #form>\r\n          <app-plan-general-data [plan]=\"plan\"\r\n                                 (closeAfterUpdate)=\"returnToView($event)\">\r\n          </app-plan-general-data>\r\n        </ng-template>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-plan-view-core\",\r\n  templateUrl: \"./plan-view-core.component.html\",\r\n  styleUrls: [\"./plan-view-core.component.scss\"],\r\n})\r\nexport class PlanViewCoreComponent extends AppHelpers implements OnInit {\r\n  planId: number;\r\n\r\n  showTna: boolean = false;\r\n  showCourses: boolean = false;\r\n\r\n  updateCourseDropdown: boolean = false;\r\n\r\n  viewsManager = ViewsManager;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.planId = Number(param.id) ?? 0;\r\n    });\r\n  }\r\n\r\n  scrollToSection(sectionId: string) {\r\n    const element = document.getElementById(sectionId);\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<mat-card-title class=\"title-no-margin title-section\">\r\n  <page-title title=\"planViewcore\"></page-title>\r\n\r\n  <ng-container>\r\n    <app-add-new-btn\r\n      url=\"/training/{{ moduleId }}/training-plan/add\"\r\n      [params]=\"parentParam\"\r\n    >\r\n    </app-add-new-btn>\r\n\r\n    <app-back-btn\r\n      url=\"/training/{{ moduleId }}/training-plan/index\"\r\n      [params]=\"pageParams\"\r\n    >\r\n    </app-back-btn>\r\n  </ng-container>\r\n</mat-card-title>\r\n\r\n<app-general-info-plan-view [planId]=\"planId\"\r\n                            [class.hidden]=\"showCourses || showTna\">\r\n</app-general-info-plan-view>\r\n\r\n<app-training-needs-analysis [id]=\"viewsManager.plan_tna\"\r\n                             [class.hidden]=\"showCourses\"\r\n                             [isView]=\"true\"\r\n                             [planId]=\"planId\"\r\n                             (updateViewDisplay)=\"showTna = $event; scrollToSection(viewsManager.plan_tna)\"\r\n                             (updateCourseDropdown)=\"updateCourseDropdown = !updateCourseDropdown\">\r\n</app-training-needs-analysis>\r\n\r\n<app-plan-courses-and-expensis [id]=\"viewsManager.plan_course\"\r\n                               [class.hidden]=\"showTna\"\r\n                               [isView]=\"true\"\r\n                               [planId]=\"planId\"\r\n                               (updateViewDisplay)=\"\r\n    showCourses = $event; scrollToSection(viewsManager.plan_course)\" [updateCourseDropdown]=\"updateCourseDropdown\">\r\n</app-plan-courses-and-expensis>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ITrainingPlanListModel } from \"app/training/models/training-plan/training-plan\";\r\nimport { TrainingPlanIndexService } from \"app/training/services/traning-plan/training-plan-index.service\";\r\n\r\n@Component({\r\n  selector: \"app-training-plan-index\",\r\n  templateUrl: \"./training-plan-index.component.html\",\r\n  styleUrls: [\"./training-plan-index.component.scss\"],\r\n})\r\nexport class TrainingPlanIndexComponent extends AppHelpers implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<ITrainingPlanListModel>;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"ar_Name\",\r\n    \"en_Name\",\r\n    \"from_Date\",\r\n    \"to_Date\",\r\n    \"budget\",\r\n    \"count_Courses\",\r\n    \"count_Persons\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\"note\", \"id\"];\r\n\r\n  constructor(public TrainingPlanIndexService: TrainingPlanIndexService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.TrainingPlanIndexService.getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ITrainingPlanListModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          res.data.map((e) => {\r\n            (e.id = e.plan_ID),\r\n              (e.from_Date = HelpersFunctions.mapDate(e.from_Date));\r\n            e.to_Date = HelpersFunctions.mapDate(e.to_Date);\r\n          });\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  delete(model: ITrainingPlanListModel) {\r\n    this.showLoading();\r\n    this.TrainingPlanIndexService.Delete(model.id).subscribe(\r\n      (res: IResponse) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          }\r\n          else {\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n          this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      }\r\n    );\r\n  }\r\n\r\n  onDelete(model: ITrainingPlanListModel) {\r\n    let msg = this.msgTranslate(model.ar_Name, model.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(model);\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"index-card\">\r\n  <mat-card-title>\r\n    <page-title\r\n      title=\"trainingPlanIndex\"\r\n      class=\"mb-10\"\r\n      [globalFunctions]=\"globalFunctions\"\r\n    ></page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isRowClickable]=\"true\"\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"TrainingPlanIndexService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormGroup, Validators} from '@angular/forms';\r\nimport {MessageTypes} from 'app/shared/enums/message-types.enum';\r\nimport {IResponse} from 'app/shared/interfaces/responces';\r\nimport {AppHelpers} from 'app/shared/resources/app-helpers';\r\nimport {HelpersFunctions} from 'app/shared/resources/helpers-functions';\r\nimport {CustomValidator} from 'app/shared/validators/custom.validator';\r\nimport {ITrainingReqModel, ITrainingReqRequest} from 'app/training/models/training-request';\r\nimport {TrainingRequestService} from 'app/training/services/training-request.service';\r\nimport { IReasonsModel } from \"app/system-setup/training-setup/models/reasons\";\r\n\r\n@Component({\r\n  selector: 'app-add-training-request',\r\n  templateUrl: './add-training-request.component.html',\r\n  styleUrls: ['./add-training-request.component.scss'],\r\n})\r\nexport class AddTrainingRequestComponent extends AppHelpers implements OnInit {\r\n  trainingRequestId: number = 0;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  allowBusinessObjective: boolean = false;\r\n\r\n  constructor(private trainingRequestService: TrainingRequestService) {\r\n    super();\r\n    this.activatedRoute.params.subscribe((param) => {\r\n      this.trainingRequestId = Number(param.id ?? 0);\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.trainingRequestId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.getTrainingRequestById();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [this.trainingRequestId, {nonNullable: true}],\r\n        course_Category_ID: [Validators.required],\r\n        course_ID: [null, [Validators.required]],\r\n        reason_ID: [null, [Validators.required]],\r\n        from_Date: [null, Validators.required],\r\n        to_Date: [null, Validators.required],\r\n        note: [null],\r\n        employee_id: [null, Validators.required],\r\n        SelectedBusinessObjectiveIDs: [],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates('from_Date', 'to_Date'),\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      let body: ITrainingReqRequest = {\r\n        training_request: {\r\n          id: this.formCtrls.id.value,\r\n          course_ID: this.formCtrls.course_ID.value,\r\n          reason_ID: this.formCtrls.reason_ID.value,\r\n          from_Date: HelpersFunctions.mapDateReverse(this.formCtrls.from_Date.value),\r\n          to_Date: HelpersFunctions.mapDateReverse(this.formCtrls.to_Date.value),\r\n          note: this.formCtrls.note.value,\r\n        },\r\n        SelectedSubOrdenateEmployeeInstanceIDs: this.formCtrls.employee_id.value,\r\n        SelectedBusinessObjectiveIDs: this.formCtrls.SelectedBusinessObjectiveIDs.value\r\n      }\r\n      console.log(body)\r\n      body.training_request.id > 0 ? this.update(body) : this.create(body);\r\n    }\r\n  }\r\n\r\n  getTrainingRequestById() {\r\n    this.showLoading();\r\n    this.trainingRequestService\r\n      .getById(this.trainingRequestId)\r\n      .subscribe((res: IResponse<ITrainingReqModel>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          this.formCtrls.course_Category_ID.setValue(res.data.training_request.trA_Course.course_Category_ID)\r\n          this.form.patchValue(res.data.training_request);\r\n          this.formCtrls.SelectedBusinessObjectiveIDs.setValue(res.data.selectedBusinessObjectiveIDs)\r\n          this.formCtrls.employee_id.setValue(res.data.selectedSubOrdenateEmployeeInstanceIDs)\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  create(data: ITrainingReqRequest) {\r\n    this.showLoading();\r\n    this.trainingRequestService\r\n      .create(data)\r\n      .subscribe((res: IResponse<ITrainingReqRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          // this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.trainingRequestId = res.data.training_request.id;\r\n          this.formCtrls.id.setValue(this.trainingRequestId)\r\n          let url = `/training/${this.moduleId}/training-request/edit/${this.trainingRequestId}`;\r\n          this.navigateTo(url);\r\n          console.log(this.form.value)\r\n          console.log(res)\r\n          console.log(url)\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(data: ITrainingReqRequest) {\r\n    this.showLoading();\r\n    this.trainingRequestService\r\n      .update(data)\r\n      .subscribe((res: IResponse<ITrainingReqRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n\r\n  onReasonChange(model: IReasonsModel[]) {\r\n    if (model[0]?.hasBusinessObjectives) {\r\n      this.allowBusinessObjective = true\r\n      this.formCtrls?.SelectedBusinessObjectiveIDs.addValidators([Validators.required])\r\n    } else {\r\n      this.allowBusinessObjective = false;\r\n      this.formCtrls?.SelectedBusinessObjectiveIDs.setValue([])\r\n      this.formCtrls?.SelectedBusinessObjectiveIDs.removeValidators([Validators.required])\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12 cards-no-shadow\">\r\n    <mat-card #container class=\"form-card\">\r\n      <mat-card-title class=\"title-no-margin\">\r\n        <page-title title=\"trainingRequest\"></page-title>\r\n\r\n        <ng-container>\r\n          <!-- button add new-->\r\n          <app-add-new-btn\r\n            *ngIf=\"trainingRequestId > 0\"\r\n            url=\"/training/{{ moduleId }}/training-request/add\"\r\n            [params]=\"parentParam\"\r\n          >\r\n          </app-add-new-btn>\r\n\r\n          <!-- button back-->\r\n          <app-back-btn\r\n            url=\"/training/{{ moduleId }}/training-request/index\"\r\n            [params]=\"pageParams\"\r\n          >\r\n          </app-back-btn>\r\n        </ng-container>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid mt-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-employee-dropdown\r\n                    [control]=\"formCtrls.employee_id\"\r\n                    [submitted]=\"submitted\"\r\n                    [multi]=\"true\"\r\n                    [filter]=\"true\"\r\n                    label=\"employees\"\r\n                  >\r\n                  </app-employee-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-course-category-dropdown\r\n                    [control]=\"formCtrls.course_Category_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-course-category-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-course-by-course-category-dropdown\r\n                    [control]=\"formCtrls.course_ID\"\r\n                    [courseCategoryControl]=\"formCtrls.course_Category_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-course-by-course-category-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <app-reason-dropdown\r\n                    [control]=\"formCtrls.reason_ID\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    [multi]=\"false\"\r\n                    (change)=\"onReasonChange($event)\"\r\n                  >\r\n                  </app-reason-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <business-objective-dropdown\r\n                    [control]=\"formCtrls.SelectedBusinessObjectiveIDs\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    [multi]=\"true\"\r\n                    [disable]=\"!allowBusinessObjective\"\r\n                  >\r\n                  </business-objective-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.from_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"froM_DATE\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.to_Date\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"tO_DATE\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12 ptop-15\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.note\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"notes\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value == 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n        <submit-btn\r\n          (onClick)=\"submit()\"\r\n          [id]=\"formCtrls.id.value\"\r\n          [color]=\"btn.darkBlue\"\r\n          [iconPositionBefore]=\"false\"\r\n          icon=\"pi pi-plus-circle\"\r\n          [id]=\"formCtrls.id.value\"\r\n        >\r\n        </submit-btn>\r\n\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { trainingRequestToDisplay } from \"app/training/mapper/training-request\";\r\nimport {\r\n  ITrainingRequestIndexModel,\r\n  ITrainingToDisplayModel,\r\n} from \"app/training/models/training-request\";\r\nimport { TrainingRequestService } from \"app/training/services/training-request.service\";\r\n\r\n@Component({\r\n  selector: \"app-training-request-index\",\r\n  templateUrl: \"./training-request-index.component.html\",\r\n  styleUrls: [\"./training-request-index.component.scss\"],\r\n})\r\nexport class TrainingRequestIndexComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<ITrainingToDisplayModel>;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"course_name\",\r\n    \"reason\",\r\n    \"fromDate\",\r\n    \"toDate\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\"note\"];\r\n\r\n  constructor(public trainingRequestService: TrainingRequestService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    }\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.trainingRequestService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ITrainingRequestIndexModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(\r\n            trainingRequestToDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  delete(model: ITrainingToDisplayModel) {\r\n    this.showLoading();\r\n    this.trainingRequestService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if ((res.message.messageType = MessageTypes.Success)) {\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n      }\r\n      else {\r\n        this.errorList(res.message.messages);\r\n      }\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(model: ITrainingToDisplayModel) {\r\n    let msg = this.msgTranslate(model.course_name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(model);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"index-card\">\r\n  <mat-card-title>\r\n    <page-title\r\n      title=\"trainingRequest\"\r\n      class=\"mb-10\"\r\n      [globalFunctions]=\"globalFunctions\"\r\n    ></page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"trainingRequestService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ISTPModel } from \"app/training/models/tsp\";\r\nimport { TspService } from \"app/training/services/tsp.service\";\r\n\r\n@Component({\r\n  selector: \"app-tsp-index\",\r\n  templateUrl: \"./tsp-index.component.html\",\r\n  styleUrls: [\"./tsp-index.component.scss\"],\r\n})\r\nexport class TspIndexComponent extends AppHelpers implements OnInit {\r\n  isLoaded: boolean = false;\r\n  dataSource: MatTableDataSource<ISTPModel>;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"breif_Name\",\r\n    \"en_Name\",\r\n    \"ar_Name\",\r\n    \"location\",\r\n    \"webSite_URL\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\r\n    \"address\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"phone\",\r\n    \"fax\",\r\n    \"contactPersonName\",\r\n    \"contactPersonEmail\",\r\n    \"contactPersonMobile\",\r\n    \"contactPersonPhone\",\r\n    \"i_M_C_Code\",\r\n    \"note\",\r\n  ];\r\n\r\n  constructor(public tspService: TspService) {\r\n    super();\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    this.removePageParams();\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.tspService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<ISTPModel[]>) => {\r\n        if ((res.message.messageType = MessageTypes.Success)) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  delete(model: ISTPModel) {\r\n    this.showLoading();\r\n    this.tspService.Delete(model.id).subscribe((res: IResponse) => {\r\n      if ((res.message.messageType = MessageTypes.Success)) {\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        this.deleteSuccessfullyMsg(res.message.messageTypeName);\r\n      }\r\n      else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  onDelete(model: ISTPModel) {\r\n    let msg = this.msgTranslate(model.ar_Name, model.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(model);\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"index-card\">\r\n  <mat-card-title>\r\n    <page-title title=\"TSP\" [globalFunctions]=\"globalFunctions\"></page-title>\r\n  </mat-card-title>\r\n\r\n  <mat-card-content>\r\n    <app-material-table\r\n      [isLoaded]=\"isLoaded\"\r\n      [mandatoryColomns]=\"mandatoryColomns\"\r\n      [optionalColomns]=\"optionalColomns\"\r\n      [page]=\"page\"\r\n      [actions]=\"rowFunctions\"\r\n      [dataSource]=\"dataSource\"\r\n      [exportService]=\"tspService\"\r\n      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n      (deleteRow)=\"onDelete($event)\"\r\n    >\r\n    </app-material-table>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IImplementationEmployeeDisplayModel,\r\n  IImplementationEmployeeModel,\r\n} from \"../models/implementation/employees\";\r\nimport {\r\n  IImplementationExpensesDisplayModel,\r\n  IImplementationExpensesModel,\r\n} from \"../models/implementation/expenses\";\r\nimport {\r\n  IImplementationListDisplayModel,\r\n  IImplementationListModel,\r\n  IImplementationModel,\r\n} from \"../models/implementation/implementation\";\r\nimport {\r\n  IImplementationLectureDisplayModel,\r\n  IImplementationLectureModel,\r\n} from \"../models/implementation/lectures\";\r\n\r\nexport function implementationToDisplay(\r\n  data: IImplementationModel[]\r\n): IImplementationModel[] {\r\n  return data.map((ele) => {\r\n    return <IImplementationModel>{\r\n      id: ele.id,\r\n      plan: msgTranslate(\r\n        ele.trA_Plan_Course?.trA_PLan?.ar_Name,\r\n        ele.trA_Plan_Course?.trA_PLan?.en_Name\r\n      ),\r\n      course: ele.trA_Plan_Course?.name,\r\n      from_Date: HelpersFunctions.mapDate(ele.from_Date),\r\n      to_Date: HelpersFunctions.mapDate(ele.to_Date),\r\n      attendance_Percentage: ele.attendance_Percentage,\r\n      note: ele.note,\r\n    };\r\n  });\r\n}\r\n\r\nexport function implementationListToDisplay(\r\n  data: IImplementationListModel[]\r\n): IImplementationListDisplayModel[] {\r\n  return data.map((ele) => {\r\n    return <IImplementationListDisplayModel>{\r\n      ...ele,\r\n      id: ele.impelementation_ID,\r\n      planName: msgTranslate(ele.plan?.ar_Name, ele.plan?.en_Name),\r\n      course: ele.plan_Course?.name,\r\n      from_Date: HelpersFunctions.mapDate(ele.from_Date),\r\n      to_Date: HelpersFunctions.mapDate(ele.to_Date),\r\n    };\r\n  });\r\n}\r\n\r\nexport function implementationExpenseToDisplay(\r\n  data: IImplementationExpensesModel[]\r\n): IImplementationExpensesDisplayModel[] {\r\n  return data.map((ele) => {\r\n    return <IImplementationExpensesDisplayModel>{\r\n      ...ele,\r\n      expense: msgTranslate(ele.trA_Expense?.ar_Name, ele.trA_Expense?.en_Name),\r\n      value: ele.expense_Value,\r\n    };\r\n  });\r\n}\r\n\r\nexport function implementationEmployeeToDisplay(\r\n  data: IImplementationEmployeeModel[]\r\n): IImplementationEmployeeDisplayModel[] {\r\n  return data.map((ele) => {\r\n    return <IImplementationEmployeeDisplayModel>{\r\n      ...ele,\r\n      code: ele.person?.code,\r\n      employee: msgTranslate(ele.person?.ar_Name, ele.person?.en_Name),\r\n      department: msgTranslate(ele.org?.ar_Name, ele.org?.en_Name),\r\n      job: msgTranslate(ele.job_Title?.ar_Name, ele.job_Title?.en_Name),\r\n    };\r\n  });\r\n}\r\n\r\nexport function implementationLectureToDisplay(\r\n  data: IImplementationLectureModel[]\r\n): IImplementationLectureDisplayModel[] {\r\n  return data.map((ele) => {\r\n    return <IImplementationLectureDisplayModel>{\r\n      ...ele,\r\n      dayDate: HelpersFunctions.mapDate(ele.day_Date),\r\n      startHour: HelpersFunctions.mapTime(ele.start_Houre),\r\n      endHour: HelpersFunctions.mapTime(ele.end_Houre),\r\n    };\r\n  });\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IImplementationEmployeeModel,\r\n  IImplementationEmployeeRequest,\r\n} from \"app/training/models/implementation/employees\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ImplementationEmployeeService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IImplementationEmployeeRequest) {\r\n    return this.post<IResponse<IImplementationEmployeeModel>>(\r\n      \"training/ImplementationEmployees/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll(implementationId: number) {\r\n    return this.get<IResponse<IImplementationEmployeeModel[]>>(\r\n      \"Training/ImplementationEmployees/GetEmployees\",\r\n      {\r\n        params: {\r\n          Implementation_ID: implementationId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IImplementationExpensesDeleteParams,\r\n  IImplementationExpensesModel,\r\n  IImplementationExpensesRequest,\r\n} from \"app/training/models/implementation/expenses\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ImplementationExpensesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getAll(implementationId: number) {\r\n    return this.get<IResponse<IImplementationExpensesModel[]>>(\r\n      \"Training/ImplementationExpenses/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `Implementation_ID eq ${implementationId}`,\r\n          $expand: `${db.TRA_expense}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  create(data: IImplementationExpensesRequest) {\r\n    return this.post<IResponse<IImplementationExpensesModel>>(\r\n      \"Training/ImplementationExpenses/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  Delete(params: IImplementationExpensesDeleteParams) {\r\n    return this.delete<IResponse>(\"Training/ImplementationExpenses/Delete\", {\r\n      params: params,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IImplementationLectureModel,\r\n  IImplementationLectureRequest,\r\n} from \"app/training/models/implementation/lectures\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ImplementationLecturesService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // getList(implementationId: number, params: IPageParams) {\r\n  //   return this.get<IResponse<IImplementationLectureModel[]>>(\r\n  //     \"Training/ImplementationLecture/GetAll\",\r\n  //     {\r\n  //       params: {\r\n  //         ...params,\r\n  //         $filter: `Implementation_ID eq ${implementationId}`,\r\n  //       },\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  getAll(implementationId: number) {\r\n    return this.get<IResponse<IImplementationLectureModel[]>>(\r\n      \"Training/ImplementationLecture/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `Implementation_ID eq ${implementationId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  create(data: IImplementationLectureRequest) {\r\n    return this.post<IResponse<IImplementationLectureModel>>(\r\n      \"Training/ImplementationLecture/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IImplementationLectureRequest) {\r\n    return this.post<IResponse<IImplementationLectureModel>>(\r\n      \"Training/ImplementationLecture/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  Delete(id: number) {\r\n    return this.delete<IResponse>(\"Training/ImplementationLecture/Delete\", {\r\n      params: { lecture_id: id },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IImplementationListModel,\r\n  IImplementationModel,\r\n  IImplementationRequest,\r\n} from \"app/training/models/implementation/implementation\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { implementationToDisplay } from \"app/training/mapper/implementation\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ImplementationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IImplementationRequest) {\r\n    return this.post<IResponse<IImplementationModel>>(\r\n      \"training/Implementation/Create\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IImplementationRequest) {\r\n    return this.post<IResponse<IImplementationModel>>(\r\n      \"training/Implementation/Edit\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IImplementationModel[]>>(\r\n      \"training/Implementation/GetAll\",\r\n      {\r\n        params: {\r\n          $expand: `${db.TRA_plan_course}.${db.trA_PLan},${db.TRA_plan_course}.${db.TRA_Course}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.get<IResponse<IImplementationModel[]>>(\r\n      \"Training/Implementation/GetAll\",\r\n      {\r\n        params: {\r\n          $filter: `ID eq ${id}`,\r\n          $expand: db.TRA_plan_course,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IImplementationListModel[]>>(\r\n      \"training/Implementation/GetList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"training/Implementation/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    return this.getAll().pipe(\r\n      map((res) => {\r\n        res.data = implementationToDisplay(res.data);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CourseIndexComponent } from \"app/training/components/courses/course-index/course-index.component\";\r\nimport { pathMatch } from \"app/shared/enums/route-path-match.enum\";\r\nimport { TspIndexComponent } from \"./components/tsp/tsp-index/tsp-index.component\";\r\nimport { AddTspComponent } from \"./components/tsp/add-tsp/add-tsp.component\";\r\nimport { InstructorIndexComponent } from \"./components/instructor/instructor-index/instructor-index.component\";\r\nimport { AddInstructorComponent } from \"./components/instructor/add-instructor/add-instructor.component\";\r\nimport { AddCourseComponent } from \"app/training/components/courses/add-course/add-course-core/add-course.component\";\r\nimport { TrainingRequestIndexComponent } from \"./components/training-requests/training-request-index/training-request-index.component\";\r\nimport { AddTrainingRequestComponent } from \"./components/training-requests/add-training-request/add-training-request.component\";\r\nimport { TrainingPlanIndexComponent } from \"./components/training-plan/training-plan-index/training-plan-index.component\";\r\nimport { PlanCoreComponent } from \"./components/training-plan/add-paln/plan-core/plan-core.component\";\r\nimport { PlanViewCoreComponent } from \"./components/training-plan/plan-view/plan-view-core/plan-view-core.component\";\r\nimport { ImplementationIndexComponent } from \"./components/implementation/implementation-index/implementation-index.component\";\r\nimport {\r\n  AddImplementationCoreComponent\r\n} from \"./components/implementation/add-implementation/add-implementation-core/add-implementation-core.component\";\r\nimport { CheckIsViewAllowedGuard } from \"app/shared/Guards/check-is-allowd.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ViewsManager.course, // course\r\n    data: {view: ViewsManager.course},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: CourseIndexComponent,\r\n        data: {view: ViewsManager.course_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddCourseComponent,\r\n        data: {view: ViewsManager.add_course},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddCourseComponent,\r\n        data: {view: ViewsManager.add_course},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"tsp\", //tsp\r\n    data: {view: ViewsManager.tsp},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: TspIndexComponent,\r\n        data: {view: ViewsManager.tsp_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddTspComponent,\r\n        data: {view: ViewsManager.add_tsp},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddTspComponent,\r\n        data: {view: ViewsManager.add_tsp},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"instructor\", //instructor\r\n    data: {view: ViewsManager.instructor},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: InstructorIndexComponent,\r\n        data: {view: ViewsManager.instructor_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddInstructorComponent,\r\n        data: {view: ViewsManager.add_instructor},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddInstructorComponent,\r\n        data: {view: ViewsManager.add_instructor},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"training-request\", //training-request\r\n    data: {view: ViewsManager.training_request},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: TrainingRequestIndexComponent,\r\n        data: {view: ViewsManager.training_request_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddTrainingRequestComponent,\r\n        data: {view: ViewsManager.add_training_request},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddTrainingRequestComponent,\r\n        data: {view: ViewsManager.add_training_request},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"training-plan\", //training-plan\r\n    data: {view: ViewsManager.training_plan},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: TrainingPlanIndexComponent,\r\n        data: {view: ViewsManager.training_plan_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: PlanCoreComponent,\r\n        data: {view: ViewsManager.add_training_plan},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: PlanViewCoreComponent,\r\n        data: {view: ViewsManager.add_training_plan},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"implementation\", // implementation\r\n    data: {view: ViewsManager.implementation},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: ImplementationIndexComponent,\r\n        data: {view: ViewsManager.implementation_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddImplementationCoreComponent,\r\n        data: {view: ViewsManager.add_implementation},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:id\",\r\n        component: AddImplementationCoreComponent,\r\n        data: {view: ViewsManager.add_implementation},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TrainingRoutingModule {}\r\n","import {\r\n  AddImplementationCoreComponent\r\n} from \"./components/implementation/add-implementation/add-implementation-core/add-implementation-core.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { TrainingRoutingModule } from \"./training-routing.module\";\r\nimport { CourseIndexComponent } from \"./components/courses/course-index/course-index.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { CourseCompetenceComponent } from \"./components/courses/add-course/course-competence/course-competence.component\";\r\nimport { CourseOutlineComponent } from \"./components/courses/add-course/course-outline/course-outline.component\";\r\nimport { CourseAttachmentsComponent } from \"./components/courses/add-course/course-attachments/course-attachments.component\";\r\nimport {\r\n  CourseTspAndInstructorComponent\r\n} from \"./components/courses/add-course/course-tsp-and-instructor/course-tsp-and-instructor.component\";\r\nimport { AddTspComponent } from \"./components/tsp/add-tsp/add-tsp.component\";\r\nimport { TspIndexComponent } from \"./components/tsp/tsp-index/tsp-index.component\";\r\nimport { AddCourseFormComponent } from \"./components/courses/add-course/add-course-form/add-course-form.component\";\r\nimport { InstructorIndexComponent } from \"./components/instructor/instructor-index/instructor-index.component\";\r\nimport { AddInstructorComponent } from \"./components/instructor/add-instructor/add-instructor.component\";\r\nimport { CourseGeneralDataComponent } from \"app/training/components/courses/add-course/course-general-data/course-general-data.component\";\r\nimport { AddCourseComponent } from \"app/training/components/courses/add-course/add-course-core/add-course.component\";\r\nimport { TrainingRequestIndexComponent } from \"./components/training-requests/training-request-index/training-request-index.component\";\r\nimport { AddTrainingRequestComponent } from \"./components/training-requests/add-training-request/add-training-request.component\";\r\nimport { TrainingPlanIndexComponent } from \"./components/training-plan/training-plan-index/training-plan-index.component\";\r\nimport { PlanGeneralDataComponent } from \"./components/training-plan/add-paln/plan-general-data/plan-general-data.component\";\r\nimport {\r\n  TrainingNeedsAnalysisComponent\r\n} from \"./components/training-plan/add-paln/training-needs-analysis/training-needs-analysis.component\";\r\nimport {\r\n  PlanCoursesAndExpensisComponent\r\n} from \"./components/training-plan/add-paln/plan-courses-and-expensis/plan-courses-and-expensis.component\";\r\nimport { PlanCoreComponent } from \"./components/training-plan/add-paln/plan-core/plan-core.component\";\r\nimport { GeneralInfoPlanViewComponent } from \"./components/training-plan/plan-view/general-info-plan-view/general-info-plan-view.component\";\r\nimport { PlanViewCoreComponent } from \"./components/training-plan/plan-view/plan-view-core/plan-view-core.component\";\r\nimport { PlanExpensesComponent } from \"./components/training-plan/add-paln/plan-expenses/plan-expenses.component\";\r\nimport { ImplementationIndexComponent } from \"./components/implementation/implementation-index/implementation-index.component\";\r\nimport {\r\n  ImplementationGeneralDataComponent\r\n} from \"./components/implementation/add-implementation/implementation-general-data/implementation-general-data.component\";\r\nimport {\r\n  ImplementationEmployeesComponent\r\n} from \"./components/implementation/add-implementation/implementation-employees/implementation-employees.component\";\r\nimport {\r\n  ImplementationLecturesComponent\r\n} from \"./components/implementation/add-implementation/implementation-lectures/implementation-lectures.component\";\r\nimport {\r\n  ImplementationExpensesComponent\r\n} from \"./components/implementation/add-implementation/implementation-expenses/implementation-expenses.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CourseIndexComponent,\r\n    AddCourseComponent,\r\n    CourseGeneralDataComponent,\r\n    CourseCompetenceComponent,\r\n    CourseOutlineComponent,\r\n    CourseAttachmentsComponent,\r\n    AddTspComponent,\r\n    CourseTspAndInstructorComponent,\r\n    TspIndexComponent,\r\n    AddCourseFormComponent,\r\n    InstructorIndexComponent,\r\n    AddInstructorComponent,\r\n    TrainingRequestIndexComponent,\r\n    AddTrainingRequestComponent,\r\n    TrainingPlanIndexComponent,\r\n    PlanGeneralDataComponent,\r\n    TrainingNeedsAnalysisComponent,\r\n    PlanCoursesAndExpensisComponent,\r\n    PlanCoreComponent,\r\n    GeneralInfoPlanViewComponent,\r\n    PlanViewCoreComponent,\r\n    PlanExpensesComponent,\r\n    ImplementationIndexComponent,\r\n    AddImplementationCoreComponent,\r\n    ImplementationGeneralDataComponent,\r\n    ImplementationEmployeesComponent,\r\n    ImplementationLecturesComponent,\r\n    ImplementationExpensesComponent,\r\n  ],\r\n  imports: [CommonModule, TrainingRoutingModule, SharedModule],\r\n})\r\nexport class TrainingModule {}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}