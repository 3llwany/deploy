{"version":3,"file":"src_app_personnel-setup_personnel-setup_module_ts.js","mappings":"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","sources":["./src/app/personnel-setup/components/employees-activation/employees-activation.component.ts","./src/app/personnel-setup/components/employees-activation/employees-activation.component.html","./src/app/personnel-setup/components/employees/add-employee/add-employee.component.ts","./src/app/personnel-setup/components/employees/add-employee/add-employee.component.html","./src/app/personnel-setup/components/employees/assign-plan/assign-plan.component.ts","./src/app/personnel-setup/components/employees/assign-plan/assign-plan.component.html","./src/app/personnel-setup/components/employees/card-shared-components/card-header/card-header.component.ts","./src/app/personnel-setup/components/employees/card-shared-components/card-header/card-header.component.html","./src/app/personnel-setup/components/employees/card-shared-components/card-row-item/card-row-item.component.ts","./src/app/personnel-setup/components/employees/card-shared-components/card-row-item/card-row-item.component.html","./src/app/personnel-setup/components/employees/card-shared-components/see-more-btn/see-more-btn.component.ts","./src/app/personnel-setup/components/employees/card-shared-components/see-more-btn/see-more-btn.component.html","./src/app/personnel-setup/components/employees/employee-balances/emp-permission/emp-permission-card/emp-permission-card.component.ts","./src/app/personnel-setup/components/employees/employee-balances/emp-permission/emp-permission-card/emp-permission-card.component.html","./src/app/personnel-setup/components/employees/employee-balances/emp-permission/emp-permission-dialog/emp-permission-dialog.component.ts","./src/app/personnel-setup/components/employees/employee-balances/emp-permission/emp-permission-dialog/emp-permission-dialog.component.html","./src/app/personnel-setup/components/employees/employee-balances/emp-vacation/emp-vacation-card/emp-vacation-card.component.ts","./src/app/personnel-setup/components/employees/employee-balances/emp-vacation/emp-vacation-card/emp-vacation-card.component.html","./src/app/personnel-setup/components/employees/employee-balances/emp-vacation/emp-vacation-dialog/emp-vacation-dialog.component.ts","./src/app/personnel-setup/components/employees/employee-balances/emp-vacation/emp-vacation-dialog/emp-vacation-dialog.component.html","./src/app/personnel-setup/components/employees/employee-balances/employee-balances-core/employee-balances-core.component.ts","./src/app/personnel-setup/components/employees/employee-balances/employee-balances-core/employee-balances-core.component.html","./src/app/personnel-setup/components/employees/employee-career/emp-career-core/emp-career-core.component.ts","./src/app/personnel-setup/components/employees/employee-career/emp-career-core/emp-career-core.component.html","./src/app/personnel-setup/components/employees/employee-career/emp-education/emp-education-card/emp-education-card.component.ts","./src/app/personnel-setup/components/employees/employee-career/emp-education/emp-education-card/emp-education-card.component.html","./src/app/personnel-setup/components/employees/employee-career/emp-education/emp-education-dialog/emp-education-dialog.component.ts","./src/app/personnel-setup/components/employees/employee-career/emp-education/emp-education-dialog/emp-education-dialog.component.html","./src/app/personnel-setup/components/employees/employee-career/emp-education/emp-education-table/emp-education-table.component.ts","./src/app/personnel-setup/components/employees/employee-career/emp-education/emp-education-table/emp-education-table.component.html","./src/app/personnel-setup/components/employees/employee-career/emp-work-experience/emp-work-experience-card/emp-work-experience-card.component.ts","./src/app/personnel-setup/components/employees/employee-career/emp-work-experience/emp-work-experience-card/emp-work-experience-card.component.html","./src/app/personnel-setup/components/employees/employee-career/emp-work-experience/emp-work-experience-dialog/employee-work-experience-dialog.component.ts","./src/app/personnel-setup/components/employees/employee-career/emp-work-experience/emp-work-experience-dialog/employee-work-experience-dialog.component.html","./src/app/personnel-setup/components/employees/employee-career/emp-work-experience/emp-work-experience-table/emp-work-experience-table.component.ts","./src/app/personnel-setup/components/employees/employee-career/emp-work-experience/emp-work-experience-table/emp-work-experience-table.component.html","./src/app/personnel-setup/components/employees/employee-general-info/emp-general-info-card/emp-general-info-card.component.ts","./src/app/personnel-setup/components/employees/employee-general-info/emp-general-info-card/emp-general-info-card.component.html","./src/app/personnel-setup/components/employees/employee-general-info/emp-general-info-core/emp-general-info-core.component.ts","./src/app/personnel-setup/components/employees/employee-general-info/emp-general-info-core/emp-general-info-core.component.html","./src/app/personnel-setup/components/employees/employees-index/employees-index.component.ts","./src/app/personnel-setup/components/employees/employees-index/employees-index.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-custodies/emp-custodies-card/emp-custodies-card.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-custodies/emp-custodies-card/emp-custodies-card.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-custodies/emp-custodies-dialog/emp-custodies-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-custodies/emp-custodies-dialog/emp-custodies-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-hiring-documents/emp-hiring-documents-card/emp-hiring-documents-card.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-hiring-documents/emp-hiring-documents-card/emp-hiring-documents-card.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-hiring-documents/emp-hiring-documents-dialog/emp-hiring-documents-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-hiring-documents/emp-hiring-documents-dialog/emp-hiring-documents-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/assign-as-org-manager-dialog/assign-as-org-manager-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/assign-as-org-manager-dialog/assign-as-org-manager-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/close-job-dialog/close-job-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/close-job-dialog/close-job-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-contract-attachment-section/emp-contract-attachment-section.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-contract-attachment-section/emp-contract-attachment-section.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-contract-section/emp-contract-section.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-contract-section/emp-contract-section.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-job-info-card/emp-job-info-card.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-job-info-card/emp-job-info-card.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-job-info-dialog/emp-job-info-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-job-info-dialog/emp-job-info-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-job-section/emp-job-section.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-job-section/emp-job-section.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-supervisor-section/emp-supervisor-section.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-job-info/emp-supervisor-section/emp-supervisor-section.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-location/emp-location-card/emp-location-card.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-location/emp-location-card/emp-location-card.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-location/emp-location-dialog/emp-location-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-location/emp-location-dialog/emp-location-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-medical-insurance/emp-blood-type-section/emp-blood-type-section.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-medical-insurance/emp-blood-type-section/emp-blood-type-section.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-medical-insurance/emp-medical-insurance-card/emp-medical-insurance-card.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-medical-insurance/emp-medical-insurance-card/emp-medical-insurance-card.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-medical-insurance/emp-medical-insurance-dialog/emp-medical-insurance-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-medical-insurance/emp-medical-insurance-dialog/emp-medical-insurance-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-social-insurance/emp-insurance-office-dialog/emp-social-insurance-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-social-insurance/emp-insurance-office-dialog/emp-social-insurance-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-social-insurance/emp-social-insurance-card/emp-social-insurance-card.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-social-insurance/emp-social-insurance-card/emp-social-insurance-card.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-work-schedule/emp-work-schedule-card/emp-work-schedule-card.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-work-schedule/emp-work-schedule-card/emp-work-schedule-card.component.html","./src/app/personnel-setup/components/employees/employement-information/emp-work-schedule/emp-work-schedule-dialog/emp-work-schedule-dialog.component.ts","./src/app/personnel-setup/components/employees/employement-information/emp-work-schedule/emp-work-schedule-dialog/emp-work-schedule-dialog.component.html","./src/app/personnel-setup/components/employees/employement-information/employement-info-core/employement-info-core.component.ts","./src/app/personnel-setup/components/employees/employement-information/employement-info-core/employement-info-core.component.html","./src/app/personnel-setup/components/employees/payments-information/emp-banking-account-data/emp-banking-account-data-card/emp-banking-account-data-card.component.ts","./src/app/personnel-setup/components/employees/payments-information/emp-banking-account-data/emp-banking-account-data-card/emp-banking-account-data-card.component.html","./src/app/personnel-setup/components/employees/payments-information/emp-banking-account-data/emp-banking-account-data-dialog/emp-banking-account-data-dialog.component.ts","./src/app/personnel-setup/components/employees/payments-information/emp-banking-account-data/emp-banking-account-data-dialog/emp-banking-account-data-dialog.component.html","./src/app/personnel-setup/components/employees/payments-information/emp-payments-info-core/emp-payments-info-core.component.ts","./src/app/personnel-setup/components/employees/payments-information/emp-payments-info-core/emp-payments-info-core.component.html","./src/app/personnel-setup/components/employees/payments-information/emp-payroll-data/emp-payroll-data-card/emp-payroll-data-card.component.ts","./src/app/personnel-setup/components/employees/payments-information/emp-payroll-data/emp-payroll-data-card/emp-payroll-data-card.component.html","./src/app/personnel-setup/components/employees/payments-information/emp-payroll-data/emp-payroll-data-dialog/emp-payroll-data-dialog.component.ts","./src/app/personnel-setup/components/employees/payments-information/emp-payroll-data/emp-payroll-data-dialog/emp-payroll-data-dialog.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-address/emp-address-card/emp-address-card.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-address/emp-address-card/emp-address-card.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-address/emp-address-dialog/emp-address-dialog.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-address/emp-address-dialog/emp-address-dialog.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-address/emp-address-table/emp-address-table.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-address/emp-address-table/emp-address-table.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-contact/emp-contact-card/emp-contact-card.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-contact/emp-contact-card/emp-contact-card.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-contact/emp-contact-dialog/emp-contact-dialog.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-contact/emp-contact-dialog/emp-contact-dialog.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-contact/emp-contact-table/emp-contact-table.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-contact/emp-contact-table/emp-contact-table.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-dependants/emp-dependants-card/emp-dependants-card.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-dependants/emp-dependants-card/emp-dependants-card.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-dependants/emp-dependants-dialog/emp-dependants-dialog.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-dependants/emp-dependants-dialog/emp-dependants-dialog.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-dependants/emp-dependants-table/emp-dependants-table.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-dependants/emp-dependants-table/emp-dependants-table.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-documents/emp-documents-card/emp-documents-card.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-documents/emp-documents-card/emp-documents-card.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-documents/emp-documents-dialog/emp-documents-dialog.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-documents/emp-documents-dialog/emp-documents-dialog.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-documents/emp-documents-table/emp-documents-table.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-documents/emp-documents-table/emp-documents-table.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-military-data/emp-military-data-card/emp-military-data-card.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-military-data/emp-military-data-card/emp-military-data-card.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-military-data/emp-military-data-dialog/emp-military-data-dialog.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-military-data/emp-military-data-dialog/emp-military-data-dialog.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-military-data/emp-military-table/emp-military-table.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-military-data/emp-military-table/emp-military-table.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-personal-info-core/empl-personal-info-core.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-personal-info-core/empl-personal-info-core.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-personal-info/emp-marital-status-table/emp-marital-status-table.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-personal-info/emp-marital-status-table/emp-marital-status-table.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-personal-info/emp-personal-info-card/emp-personal-info-card.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-personal-info/emp-personal-info-card/emp-personal-info-card.component.html","./src/app/personnel-setup/components/employees/personal-information/emp-personal-info/emp-personal-info-dialog/emp-personal-info-dialog.component.ts","./src/app/personnel-setup/components/employees/personal-information/emp-personal-info/emp-personal-info-dialog/emp-personal-info-dialog.component.html","./src/app/personnel-setup/components/employees/personal-information/old-emp-contact-and-address/emp-address-section/emp-address-section.component.ts","./src/app/personnel-setup/components/employees/personal-information/old-emp-contact-and-address/emp-address-section/emp-address-section.component.html","./src/app/personnel-setup/components/employees/personal-information/old-emp-contact-and-address/emp-contact-and-address-card/emp-contact-and-address-card.component.ts","./src/app/personnel-setup/components/employees/personal-information/old-emp-contact-and-address/emp-contact-and-address-card/emp-contact-and-address-card.component.html","./src/app/personnel-setup/components/employees/personal-information/old-emp-contact-and-address/emp-contact-and-address-dialog/emp-contact-and-address-dialog.component.ts","./src/app/personnel-setup/components/employees/personal-information/old-emp-contact-and-address/emp-contact-and-address-dialog/emp-contact-and-address-dialog.component.html","./src/app/personnel-setup/components/employees/personal-information/old-emp-contact-and-address/emp-contact-section/emp-contact-section.component.ts","./src/app/personnel-setup/components/employees/personal-information/old-emp-contact-and-address/emp-contact-section/emp-contact-section.component.html","./src/app/personnel-setup/components/employees/sap-integration/emp-s4-hana/emp-s4-hana-card/emp-s4-hana-card.component.ts","./src/app/personnel-setup/components/employees/sap-integration/emp-s4-hana/emp-s4-hana-card/emp-s4-hana-card.component.html","./src/app/personnel-setup/components/employees/sap-integration/emp-s4-hana/emp-s4-hana-dialog/emp-s4-hana-dialog.component.ts","./src/app/personnel-setup/components/employees/sap-integration/emp-s4-hana/emp-s4-hana-dialog/emp-s4-hana-dialog.component.html","./src/app/personnel-setup/components/employees/sap-integration/emp-sap-b1/emp-sap-b1-card/emp-sap-b1-card.component.ts","./src/app/personnel-setup/components/employees/sap-integration/emp-sap-b1/emp-sap-b1-card/emp-sap-b1-card.component.html","./src/app/personnel-setup/components/employees/sap-integration/emp-sap-b1/emp-sap-b1-dialog/emp-sap-b1-dialog.component.ts","./src/app/personnel-setup/components/employees/sap-integration/emp-sap-b1/emp-sap-b1-dialog/emp-sap-b1-dialog.component.html","./src/app/personnel-setup/components/employees/sap-integration/emp-sap-integration-core/emp-sap-integration-core.component.ts","./src/app/personnel-setup/components/employees/sap-integration/emp-sap-integration-core/emp-sap-integration-core.component.html","./src/app/personnel-setup/mapper/emp-balances.ts","./src/app/personnel-setup/mapper/emp-contact-address.ts","./src/app/personnel-setup/mapper/emp-employment.ts","./src/app/personnel-setup/mapper/emp-payments-info.ts","./src/app/personnel-setup/mapper/emp-sap-integration.ts","./src/app/personnel-setup/mapper/emp_status_position.ts","./src/app/personnel-setup/mapper/employee-personal-info.ts","./src/app/personnel-setup/mapper/employees-activation.ts","./src/app/personnel-setup/personnel-setup-routing.module.ts","./src/app/personnel-setup/personnel-setup.module.ts","./src/app/personnel-setup/services/employees-activation.service.ts","./src/app/personnel-setup/services/employees/career/employee-work-experience.service.ts","./src/app/personnel-setup/services/employees/employee-balances/employee-permission.service.ts","./src/app/personnel-setup/services/employees/employee-balances/employee-vacation.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-assign-as-org-manager.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-contract-attachment.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-contract-details.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-location.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-medical-insurance.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-social-insurance.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-supervisor.service.ts","./src/app/personnel-setup/services/employees/employement-information/employee-work-schedule.service.ts","./src/app/personnel-setup/services/employees/payments-info/employee-banking-account.service.ts","./src/app/personnel-setup/services/employees/payments-info/employee-payroll.service.ts","./src/app/personnel-setup/services/employees/personal-info/employee-address.service.ts","./src/app/personnel-setup/services/employees/personal-info/employee-contact.service.ts","./src/app/personnel-setup/services/employees/personal-info/employee-documents.service.ts","./src/app/personnel-setup/services/employees/personal-info/employee-marital-data.service.ts","./src/app/personnel-setup/services/employees/personal-info/employee-military-data.service.ts","./src/app/personnel-setup/services/employees/sap-integration/employee-sap-b1.service.ts","./src/app/shared/animations/custom-animations.ts","./src/app/shared/enums/emp-hire-doc-type.enum.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empActivationDisplay } from \"app/personnel-setup/mapper/employees-activation\";\r\nimport { IEmployeeCardModel } from \"app/personnel-setup/models/employees\";\r\nimport { IEmployeeActivationModel } from \"app/personnel-setup/models/employees-activation\";\r\nimport { EmployeesActivationService } from \"app/personnel-setup/services/employees-activation.service\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-employees-activation\",\r\n  templateUrl: \"./employees-activation.component.html\",\r\n  styleUrls: [\"./employees-activation.component.scss\"],\r\n})\r\nexport class EmployeesActivationComponent extends AppHelpers implements OnInit {\r\n  mandatoryColomns: string[] = [\"Ser\", \"employee\", \"job\", \"actions\"];\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IEmployeeActivationModel>;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(public employeesActivationService: EmployeesActivationService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.removePageParams();\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.employeesActivationService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeActivationModel[]>) => {\r\n        if (res.message.messageType == 1) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(\r\n            empActivationDisplay(res.data)\r\n          );\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  activate(employee: IEmployeeCardModel) {\r\n    console.log(employee);\r\n    this.showLoading();\r\n    this.employeesActivationService\r\n      .activate(employee.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == 1) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          title=\"employeesActivation\"\r\n          [globalFunctions]=\"globalFunctions\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <!-- [exportService]=\"employeesActivationService\" -->\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [actions]=\"rowFunctions\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        (rowactions)=\"activate($event.data)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, HostListener, Inject, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { IEmployee } from \"app/personnel-setup/models/employees\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { ICreateDialog } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { IEmpStatusCardDisplayModel } from \"app/personnel-setup/models/employee-employment-info\";\r\nimport { Storage } from \"app/shared/resources/local-storage\";\r\nimport { Languages } from \"app/shared/enums/languages.enum\";\r\n\r\n@Component({\r\n  selector: \"app-add-employee\",\r\n  templateUrl: \"./add-employee.component.html\",\r\n  styleUrls: [\"./add-employee.component.scss\"],\r\n})\r\nexport class AddEmployeeComponent extends AppHelpers implements OnInit {\r\n  @ViewChild(\"tabs\", { static: true }) tabs: ElementRef<HTMLDivElement>;\r\n\r\n  employeeId: number = 0; // get from route\r\n  activeTab: number = 0;\r\n  viewsManager = ViewsManager;\r\n  employee: IEmployee;\r\n  StatusPosition: IEmpStatusCardDisplayModel;\r\n  isEmpDataLoaded: boolean = false;\r\n\r\n  showLeftArrow: boolean = false;\r\n  showRightArrow: boolean = false;\r\n  customBorderWidth: string = '100%';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: ICreateDialog,\r\n    public dialogRef: MatDialogRef<AddEmployeeComponent>,\r\n    private empGeneralInfoService: EmpGeneralInfoService\r\n  ) {\r\n    super();\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      this.employeeId = Number(params.employeeId ?? 0);\r\n      EmpGeneralInfoService.employeeInstanceId$.next(null);\r\n      EmpGeneralInfoService.employeeId$.next(this.employeeId);\r\n      this.onChangeBusinessAndCompanyId();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.employee = this.empGeneralInfoService.employee$.getValue();\r\n    this.empGeneralInfoService.employee$.subscribe((emp) => {\r\n      this.employee = emp;\r\n    });\r\n\r\n    // load employee status position\r\n    EmpGeneralInfoService.employeeStatusPosition$.subscribe((info: IEmpStatusCardDisplayModel) => {\r\n      this.StatusPosition = info;\r\n      if (info) this.isEmpDataLoaded = true;\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    this.empGeneralInfoService.employee$.next(null);\r\n    if (this.checkNoBusinessOrCompany() && this.employeeId > 0) {\r\n      this.empGeneralInfoService.getEmployeeShared(this.employeeId);\r\n    }\r\n  }\r\n\r\n  scrollToSection(event, sectionId: string) {\r\n    event.preventDefault();\r\n    const element = document.getElementById(sectionId);\r\n    if (element) {\r\n      element.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n    }\r\n  }\r\n\r\n  changeEmployeeId(employeeId: number) {\r\n    this.employeeId = employeeId;\r\n  }\r\n\r\n  @HostListener(\"window:scroll\", [\"$event\"])\r\n  onScroll($event) {\r\n    let scrollTop = window.pageYOffset;\r\n    const element = document.getElementById(\"top-tools\");\r\n\r\n    // arrow buttons\r\n    let arrows = document.querySelectorAll(\".arrow-button\");\r\n\r\n    // add nav-fixed to tabs\r\n    if (scrollTop >= this.tabs.nativeElement.parentElement.offsetTop + 23) {\r\n      this.tabs.nativeElement.classList.add(\"nav-fixed\");\r\n      element.classList.add(\"mt-2\");\r\n      arrows.forEach(ele => ele.classList.add(\"arrow-fixed\"));\r\n    }\r\n    else {\r\n      this.tabs.nativeElement.classList.remove(\"nav-fixed\");\r\n      element.classList.remove(\"mt-2\");\r\n      arrows.forEach(ele => ele.classList.remove(\"arrow-fixed\"));\r\n    }\r\n\r\n    // change active tab\r\n    this.customViews?.forEach((sec, index) => {\r\n      const element = document.getElementById(sec.viewName);\r\n      if (scrollTop >= element.offsetTop) {\r\n        this.activeTab = index;\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddNew() {\r\n    this.ngOnDestroy();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.empGeneralInfoService.cancelRequest$.next();\r\n    this.empGeneralInfoService.cancelRequest$.complete();\r\n    EmpGeneralInfoService.employeeInstanceId$.next(null);\r\n    //  EmpGeneralInfoService.employeeInstanceId$.complete();\r\n    EmpGeneralInfoService.employeeId$.next(null);\r\n    //  EmpGeneralInfoService.employeeId$.complete();\r\n    this.empGeneralInfoService.employee$.next(null);\r\n    //  this.empGeneralInfoService.employee$.complete();\r\n  }\r\n\r\n  override onModulesChanged() {\r\n    setTimeout(() => {\r\n      this.checkForOverflow();\r\n    }, 100);\r\n  }\r\n\r\n  checkForOverflow() {\r\n    const tabsContainer = this.tabs.nativeElement;\r\n    if (Storage.getLocalLang == Languages.ar) {\r\n      this.showRightArrow = tabsContainer.scrollLeft < -5;\r\n      this.showLeftArrow =\r\n        tabsContainer.scrollWidth -\r\n          tabsContainer.clientWidth +\r\n          tabsContainer.scrollLeft >\r\n        10;\r\n    } else {\r\n      this.showRightArrow =\r\n        tabsContainer.scrollWidth -\r\n          tabsContainer.clientWidth -\r\n          tabsContainer.scrollLeft >\r\n        20;\r\n      this.showLeftArrow = tabsContainer.scrollLeft > 20;\r\n    }\r\n    // console.log(menuContainer.scrollLeft, menuContainer.scrollWidth, menuContainer.clientWidth, this.showLeftArrow, this.showRightArrow);\r\n    this.customBorderWidth = `${tabsContainer.scrollWidth}px`;\r\n  }\r\n\r\n  scrollLeft() {\r\n    this.tabs.nativeElement.scrollLeft -= 200;\r\n    setTimeout(() => {\r\n      this.checkForOverflow();\r\n    }, 200);\r\n  }\r\n\r\n  scrollRight() {\r\n    this.tabs.nativeElement.scrollLeft += 200;\r\n    setTimeout(() => {\r\n      this.checkForOverflow();\r\n    }, 200);\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onResize() {\r\n    this.checkForOverflow();\r\n  }\r\n}\r\n","<div class=\"add-employee-container\">\r\n  <mat-card class=\"pl-4 pt-1 pl-1 pb-1 rounded-0\">\r\n    <mat-card-content>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\" *ngIf=\"false\">\r\n          <section class=\"page-user-profile\">\r\n            <div class=\"user-profile-images\">\r\n\r\n              <p class=\"title-overlay\">\r\n                {{ \"good_evening\" | translate }}\r\n              </p>\r\n\r\n              <!-- user timeline image -->\r\n              <img [src]=\"assets.emp_profile_banner\"\r\n                   class=\"img-fluid rounded-top user-timeline-image\"\r\n                   alt=\"User Timeline Image\"/>\r\n\r\n              <!-- user profile image -->\r\n              <p-image *ngIf=\"employee\"\r\n                       [src]=\"employee.img?.length > 1 ? fileService.preview(employee.img) : assets.user_avatar\"\r\n                       class=\"user-profile-image rounded\"\r\n                       alt=\"User Profile Image\"\r\n                       [preview]=\"true\"\r\n                       height=\"140\"\r\n                       width=\"140\">\r\n              </p-image>\r\n            </div>\r\n\r\n            <ng-container *ngIf=\"employee\">\r\n              <div class=\"user-profile-text\">\r\n                <h4 class=\"profile-text-color mb-0\">\r\n                  {{ msgTranslate(employee.person.ar_Name, employee.person.en_Name) }}\r\n                </h4>\r\n                <small>{{ StatusPosition?.job_name }}</small>\r\n              </div>\r\n              <!-- user profile body start -->\r\n              <div class=\"card-content\">\r\n                <div class=\"card-body\">\r\n                  <div\r\n                    class=\"user-profile-buttons d-flex justify-content-center justify-content-sm-start\">\r\n                    <!--                <i-->\r\n                    <!--                  class=\"fab fa-linkedin font-large-1 mr-3\"-->\r\n                    <!--                  style=\"line-height: 1; color: rgb(30, 48, 80)\"-->\r\n                    <!--                ></i>-->\r\n                    <!--                <i-->\r\n                    <!--                  class=\"fab fa-github font-large-1 mr-3\"-->\r\n                    <!--                  style=\"line-height: 1; color: rgb(30, 48, 80)\">-->\r\n                    <!--                  -->\r\n                    <!--                </i>-->\r\n\r\n                    <div class=\"badge bg-light-info font-medium-1 mr-3\">\r\n                      <i class=\"far fa-calendar-check font-medium-2 mr-1 ml-0\"></i>\r\n                      <span>\r\n                    {{ employee.person.hireDate | date : \"dd-MM-yyyy\" }}\r\n                  </span>\r\n                    </div>\r\n\r\n                    <!--                                <div class=\"badge bg-light-info font-medium-1 mr-3\">-->\r\n                    <!--                                  <i class=\"fas fa-phone-alt font-medium-2 mr-1 ml-0\"></i>-->\r\n                    <!--                                  <span> 019383673 </span>-->\r\n                    <!--                                </div>-->\r\n\r\n                    <!--                                <div class=\"badge bg-light-info font-medium-1 mr-3\">-->\r\n                    <!--                                  <i class=\"far fa-envelope font-medium-2 mr-1 ml-0\"></i>-->\r\n                    <!--                                  <span> email@gmil.com </span>-->\r\n                    <!--                                </div>-->\r\n\r\n\r\n                    <!-- Employee policy group -->\r\n                    <div class=\"badge bg-light-info mr-3\" *ngIf=\"StatusPosition?.policies\">\r\n                      <mat-nav-list>\r\n                    <span *ngFor=\"let policy of StatusPosition?.policies\" class=\"mr-1 ml-1\">\r\n                      <i class=\"ft-list font-medium-2\"></i>\r\n                      <mat-list-item\r\n                        class=\"pleft-4 pright-4\"> {{ msgTranslate(policy.ar_Name, policy.en_Name) }}</mat-list-item>\r\n                      <span class=\"text-muted\">\r\n                        {{ msgTranslate(policy?.core_PolicyGroup_Type?.ar_Name, policy?.core_PolicyGroup_Type?.en_Name) }}\r\n                      </span>\r\n                    </span>\r\n                      </mat-nav-list>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <!-- user profile body ends -->\r\n              </div>\r\n            </ng-container>\r\n          </section>\r\n        </div>\r\n\r\n\r\n        <!-- user data -->\r\n        <div class=\"col-12 col-sm-7\">\r\n          <div class=\"media d-flex align-items-center\" *ngIf=\"employee\">\r\n            <!-- user profile image -->\r\n            <p-image *ngIf=\"employee\"\r\n                     [src]=\"employee.img?.length > 1 ? fileService.preview(employee?.img) : assets.user_avatar_rounded\"\r\n                     [preview]=\"true\"\r\n                     imageClass=\"users-avatar-shadow avatar\"\r\n                     alt=\"User Profile Image\"\r\n                     height=\"80\"\r\n                     width=\"80\">\r\n            </p-image>\r\n            <div class=\"media-body ml-3\">\r\n              <h4 class=\"mb-1\">\r\n                <span class=\"users-view-name\">\r\n                  {{ msgTranslate(employee?.person?.ar_Name, employee?.person?.en_Name) }}\r\n                </span>\r\n              </h4>\r\n              <span *ngIf=\"isEmpDataLoaded\" class=\"text-muted\"> {{ StatusPosition?.job_name }} </span>\r\n              <span> <p-skeleton *ngIf=\"!isEmpDataLoaded && employee\"\r\n                                 width=\"8rem\"\r\n                                 height=\".5rem\">\r\n              </p-skeleton>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Back & add new  bts -->\r\n        <div class=\"col-12 col-sm-5 d-flex justify-content-end align-items-center\">\r\n          <!-- add new btn -->\r\n          <app-add-new-btn *ngIf=\"employeeId > 0\"\r\n                           url=\"/personnel-setup/{{ moduleId }}/employees/add\"\r\n                           [params]=\"parentParam\"\r\n                           (onClick)=\"onAddNew()\">\r\n          </app-add-new-btn>\r\n\r\n          <!-- back btn -->\r\n          <app-back-btn url=\"/personnel-setup/{{ moduleId }}/employees/index\"\r\n                        [params]=\"pageParams\">\r\n          </app-back-btn>\r\n        </div>\r\n\r\n        <!-- tabs & nav -->\r\n        <!-- <div class=\"col-12\">\r\n          <ul class=\"nav nav-tabs my-1 profile-tabs\" #tabs>\r\n            <ng-container *ngIf=\"customViews; else tabsLoading\">\r\n              <li\r\n                class=\"nav-item\"\r\n                *ngFor=\"let tab of customViews; index as i\"\r\n                [class.active]=\"activeTab === i\"\r\n                (click)=\"activeTab = i\">\r\n                <a class=\"nav-link\" (click)=\"scrollToSection($event, tab.viewName)\"> -->\r\n                  <!-- <i [class]=\"tab.icon\" class=\"mr-1\"></i> -->\r\n                  <!-- <span class=\"d-none d-sm-inline-block\">\r\n                        <page-title [title]=\"tab.name\" class=\"font-size-15\"></page-title>\r\n                  </span>\r\n                </a>\r\n              </li>\r\n            </ng-container> -->\r\n\r\n            <!-- tabs loading -->\r\n            <!-- <ng-template #tabsLoading>\r\n              <div class=\"m-1\" *ngFor=\"let item of [1, 2, 3, 4, 5, 6, 7]\">\r\n                <p-skeleton width=\"8rem\" height=\"2rem\"></p-skeleton>\r\n              </div>\r\n            </ng-template>\r\n          </ul>\r\n        </div> -->\r\n\r\n        <!-- tabs & nav -->\r\n        <div class=\"col-12 tabs-menu-container\">\r\n          <button\r\n            class=\"arrow-button left darkBlue\"\r\n            (click)=\"scrollLeft()\"\r\n            [class.hidden]=\"!(showLeftArrow && customViews)\"\r\n          >\r\n            <i class=\"fas fa-chevron-left\"></i>\r\n          </button>\r\n\r\n          <div class=\"tabs-menu-sub-container\">\r\n            <div class=\"tabs-menu my-1\" #tabs [style]=\"{'--custom-width': customBorderWidth}\">\r\n              <ng-container *ngIf=\"customViews; else tabsLoading\">\r\n                <div\r\n                  class=\"tab-item\"\r\n                  *ngFor=\"let tab of customViews; index as i\"\r\n                  [class.active]=\"activeTab === i\"\r\n                  (click)=\"activeTab = i\">\r\n                  <a class=\"tab-link\" (click)=\"scrollToSection($event, tab.viewName)\">\r\n                    <span class=\"d-none d-sm-inline-block\">\r\n                      <page-title [title]=\"tab.name\" class=\"font-size-15\"></page-title>\r\n                    </span>\r\n                  </a>\r\n                </div>\r\n              </ng-container>\r\n\r\n              <ng-template #tabsLoading>\r\n                <div class=\"m-1\" *ngFor=\"let item of [1, 2, 3, 4, 5, 6, 7]\">\r\n                  <p-skeleton width=\"8rem\" height=\"2rem\"></p-skeleton>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n            <style [innerHTML]=\"getPseudoElementStyles()\"></style>\r\n          </div>\r\n\r\n          <button\r\n            class=\"arrow-button right darkBlue\"\r\n            (click)=\"scrollRight()\"\r\n            [class.hidden]=\"!(showRightArrow && customViews)\"\r\n          >\r\n            <i class=\"fas fa-chevron-right\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <div class=\"row\" *ngIf=\"\">\r\n    <div class=\"col-12\">\r\n      <ul class=\"nav nav-tabs my-1 spynav\" #tabs>\r\n        <ng-container *ngIf=\"customViews; else tabsLoading\">\r\n          <li\r\n            class=\"nav-item\"\r\n            *ngFor=\"let tab of customViews; index as i\"\r\n            [class.active]=\"activeTab === i\"\r\n            (click)=\"activeTab = i\">\r\n            <a class=\"nav-link\" (click)=\"scrollToSection($event, tab.viewName)\">\r\n              <!-- <i [class]=\"tab.icon\" class=\"mr-1\"></i> -->\r\n              <span class=\"d-none d-sm-inline-block\">\r\n                <page-title [title]=\"tab.name\" [icon]=\"tab.icon\"> </page-title>\r\n              </span>\r\n            </a>\r\n          </li>\r\n        </ng-container>\r\n\r\n        <!-- tabs loading -->\r\n        <ng-template #tabsLoading>\r\n          <div class=\"m-1\" *ngFor=\"let item of [1, 2, 3, 4, 5, 6, 7]\">\r\n            <p-skeleton width=\"8rem\" height=\"2rem\"></p-skeleton>\r\n          </div>\r\n        </ng-template>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- START: Back & add new button -->\r\n  <div class=\"pb-4 pl-4 pr-4 pt-2\" id=\"top-tools\">\r\n\r\n    <!-- START: Tabs Content -->\r\n    <ng-container *ngIf=\"customViews; else loading\">\r\n      <ng-container *ngFor=\"let tab of customViews\">\r\n        <!-- employee general info -->\r\n\r\n        <div [id]=\"tab.viewName\"\r\n             class=\"mbottom-10\"\r\n             *ngIf=\"tab.viewName == viewsManager.emp_general_info_tab\">\r\n          <emp-general-info-core [icon]=\"tab.icon\"\r\n                                 (changeEmployeeId)=\"changeEmployeeId($event)\">\r\n          </emp-general-info-core>\r\n          <!-- <mat-divider class=\"divider\"></mat-divider> -->\r\n        </div>\r\n\r\n        <!--  personal info -->\r\n        <div [id]=\"tab.viewName\"\r\n             class=\"mbottom-10\"\r\n             *ngIf=\"tab.viewName == viewsManager.emp_personal_info_tab\">\r\n          <emp-personal-info-core [icon]=\"tab.icon\"></emp-personal-info-core>\r\n          <!-- <mat-divider class=\"divider\"></mat-divider> -->\r\n        </div>\r\n\r\n        <!--  career info -->\r\n        <div [id]=\"tab.viewName\"\r\n             class=\"mbottom-10\"\r\n             *ngIf=\"tab.viewName == viewsManager.emp_career_tab\">\r\n          <emp-career-core [icon]=\"tab.icon\"></emp-career-core>\r\n          <!-- <mat-divider class=\"divider\"></mat-divider> -->\r\n        </div>\r\n\r\n        <!-- employement information -->\r\n        <div [id]=\"tab.viewName\"\r\n             class=\"mbottom-10\"\r\n             *ngIf=\"tab.viewName == viewsManager.employment_info_tab\">\r\n          <employement-information-core [icon]=\"tab.icon\"></employement-information-core>\r\n          <!-- <mat-divider class=\"divider\"></mat-divider> -->\r\n        </div>\r\n\r\n        <!--  balances info -->\r\n        <div [id]=\"tab.viewName\"\r\n             class=\"mbottom-10\"\r\n             *ngIf=\"tab.viewName == viewsManager.emp_balances_tab\">\r\n          <employee-balances-core [icon]=\"tab.icon\"></employee-balances-core>\r\n          <!-- <mat-divider class=\"divider\"></mat-divider> -->\r\n        </div>\r\n\r\n        <!-- sap-integration info -->\r\n        <div [id]=\"tab.viewName\"\r\n             class=\"mbottom-10\"\r\n             *ngIf=\"tab.viewName == viewsManager.emp_sap_integration_tab\">\r\n          <emp-sap-integration-core [icon]=\"tab.icon\"></emp-sap-integration-core>\r\n          <!-- <mat-divider class=\"divider\"></mat-divider> -->\r\n        </div>\r\n\r\n        <!--  payments info -->\r\n        <div [id]=\"tab.viewName\" class=\"mbottom-10\"\r\n             *ngIf=\"tab.viewName == viewsManager.emp_payments_info_tab\">\r\n          <emp-payments-info-core [icon]=\"tab.icon\"></emp-payments-info-core>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <!-- loading content -->\r\n    <ng-template #loading>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 mb-3\" *ngFor=\"let item of [1, 2]\">\r\n          <mat-card>\r\n            <mat-card-title class=\"border-bottom pb-2\">\r\n              <p-skeleton width=\"7rem\" styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n              <div class=\"row\">\r\n                <div class=\"col-12 mb-2\" *ngFor=\"let item of [1, 2]; let lst = last\">\r\n                  <app-employee-profile-card-skeleton [rowNo]=\"5\"></app-employee-profile-card-skeleton>\r\n                  <mat-divider *ngIf=\"!lst\"></mat-divider>\r\n                </div>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empWorkScheduleDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {\r\n  IEmpWorkScheduleDeleteParams,\r\n  IEmployeeWorkScheduleModel,\r\n} from \"app/personnel-setup/models/emp-employment-info/work-schedule\";\r\nimport { AssignPlanService } from \"app/personnel-setup/services/employees/assign-plan.service\";\r\nimport { EmployeeWorkScheduleService } from \"app/personnel-setup/services/employees/employement-information/employee-work-schedule.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IAssignPlanEmployeesRequest } from \"app/personnel-setup/models/assign-plan\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\n\r\n@Component({\r\n  selector: \"app-assign-plan\",\r\n  templateUrl: \"./assign-plan.component.html\",\r\n  styleUrls: [\"./assign-plan.component.scss\"],\r\n})\r\nexport class AssignPlanComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"employee\",\r\n    \"plan\",\r\n    \"startDate\",\r\n    \"toDate\",\r\n    \"actions\",\r\n  ];\r\n  isLoaded: boolean = true;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IEmployeeWorkScheduleModel>;\r\n\r\n  constructor(\r\n    private employeeWorkScheduleService: EmployeeWorkScheduleService,\r\n    private assignPlanService: AssignPlanService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      policyGroupId: [null, [Validators.required]],\r\n      plan_ID: [null, [Validators.required]],\r\n      employeeIds: [null, [Validators.required]],\r\n      fromDate: [null, [Validators.required]],\r\n      is_Apply_Rules: [null],\r\n    });\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    // if (this.checkNoBusinessOrCompany()) {\r\n    // }\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n\r\n    let planId = this.formCtrls.plan_ID.value;\r\n    if (planId > 0) {\r\n      this.isLoaded = false;\r\n      this.page.pageIndex = page;\r\n      if (pageSize) this.page.pageSize = pageSize;\r\n      let params: IPageParams = {\r\n        PageNumber: page,\r\n        pageSize: this.page.pageSize,\r\n      };\r\n      this.assignPlanService\r\n        .getList(planId, params)\r\n        .pipe(this.cancelRequest())\r\n        .subscribe((res: IResponseList<IEmployeeWorkScheduleModel[]>) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.dataSource = new MatTableDataSource(\r\n              empWorkScheduleDisplay(res.data)\r\n            );\r\n            this.isLoaded = true;\r\n            this.page.length = res.meta.totalItemCount;\r\n          } else this.errorList(res.message.messages);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IAssignPlanEmployeesRequest = {\r\n        EmployeeData: {\r\n          Plan_ID: this.formCtrls.plan_ID.value,\r\n          FromDate: HelpersFunctions.mapDateReverse(\r\n            this.formCtrls.fromDate.value\r\n          ),\r\n          Is_Apply_Rules: this.formCtrls.is_Apply_Rules.value ?? false,\r\n        },\r\n        SelectedEmployeeIDs: this.formCtrls.employeeIds.value,\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IAssignPlanEmployeesRequest) {\r\n    this.showLoading();\r\n    this.assignPlanService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeWorkScheduleModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onDelete(employee: IEmployeeWorkScheduleModel): void {\r\n    let msg = employee.employee + \" - \" + employee.plan;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employee);\r\n    });\r\n  }\r\n\r\n  delete(employee: IEmployeeWorkScheduleModel) {\r\n    let deleteParams: IEmpWorkScheduleDeleteParams = {\r\n      Person_Instance_ID: employee.person_Instance_ID,\r\n      Plan_ID: employee.plan_ID,\r\n      FromDate: employee.fromDate,\r\n      ToDate: employee.toDateOriginal,\r\n    };\r\n    this.showLoading();\r\n    this.employeeWorkScheduleService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.pageSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.pageSize);\r\n          }\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.formCtrls.employeeIds.reset();\r\n    this.formCtrls.fromDate.reset();\r\n    this.formCtrls.is_Apply_Rules.reset();\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <page-title title=\"assignPlan\"></page-title>\r\n\r\n        <!-- back btn -->\r\n        <app-back-btn\r\n          url=\"/personnel-setup/{{ moduleId }}/employees\"\r\n          [params]=\"pageParams\"\r\n        >\r\n        </app-back-btn>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-policy-groups-dropdown\r\n                    [control]=\"formCtrls.policyGroupId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                  >\r\n                  </app-policy-groups-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-plan-by-policy-group-dropdown\r\n                    [control]=\"formCtrls.plan_ID\"\r\n                    [policyGroupCtrl]=\"formCtrls.policyGroupId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    (change)=\"getList(firstPage)\"\r\n                  >\r\n                  </app-plan-by-policy-group-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-employee-by-policy-group-dropdown\r\n                    [control]=\"formCtrls.employeeIds\"\r\n                    [policyGroupCtrl]=\"formCtrls.policyGroupId\"\r\n                    [submitted]=\"submitted\"\r\n                    [filter]=\"true\"\r\n                    [multi]=\"true\"\r\n                  >\r\n                  </app-employee-by-policy-group-dropdown>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <app-datepicker\r\n                    [control]=\"formCtrls.fromDate\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"fromDate\"\r\n                  >\r\n                  </app-datepicker>\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12 ptop-15 pbottom-15\">\r\n                  <app-check-box\r\n                    [control]=\"formCtrls.is_Apply_Rules\"\r\n                    label=\"is_Apply_Rules\"\r\n                  >\r\n                  </app-check-box>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn (onClick)=\"submit()\"></submit-btn>\r\n      </mat-card-actions>\r\n\r\n      <ng-container *ngIf=\"formCtrls.plan_ID.value > 0\">\r\n        <mat-divider></mat-divider>\r\n\r\n        <app-material-table [isLoaded]=\"isLoaded\"\r\n                            [dataSource]=\"dataSource\"\r\n                            [mandatoryColomns]=\"mandatoryColomns\"\r\n                            [optionalColomns]=\"optionalColomns\"\r\n                            [page]=\"page\"\r\n                            [actions]=\"rowFunctions\"\r\n                            (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                            (deleteRow)=\"onDelete($event)\"\r\n                            class=\"table-in-forms\">\r\n        </app-material-table>\r\n      </ng-container>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"card-header\",\r\n  templateUrl: \"./card-header.component.html\",\r\n  styleUrls: [\"./card-header.component.scss\"],\r\n})\r\nexport class CardHeaderComponent implements OnInit {\r\n  // @Input() canMadeAction: boolean = false;\r\n  @Input() isEdit: boolean | any = false;\r\n  @Input() cardTitle: string;\r\n  @Input() class: string;\r\n  @Input() isLoaded: boolean = false;\r\n  @Output() onClickIcon? = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes): void {\r\n    // console.log(this.cardId, this.cardTitle, this.isLoaded);\r\n  }\r\n\r\n  click($event) {\r\n    this.onClickIcon.emit($event);\r\n  }\r\n}\r\n","<div class=\"cardSectionTitle\" [class]=\"class\">\r\n  <h5 class=\"mb-0\">\r\n    {{ cardTitle | translate | titlecase }}\r\n  </h5>\r\n\r\n  <a *ngIf=\"isLoaded\"\r\n     (click)=\"click($event)\"\r\n     [matTooltip]=\"(isEdit ? 'edit' : 'add') | translate\"\r\n     matTooltipPosition=\"above\">\r\n    <i *ngIf=\"!isEdit\" class=\"ft-plus-square darkBlue\"></i>\r\n    <i *ngIf=\"isEdit\" class=\"fas fa-pen darkBlue\"></i>\r\n  </a>\r\n</div>\r\n<ng-content></ng-content>\r\n\r\n\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"card-row-item\",\r\n  templateUrl: \"./card-row-item.component.html\",\r\n  styleUrls: [\"./card-row-item.component.scss\"],\r\n})\r\nexport class CardRowItemComponent implements OnInit {\r\n  @Input() label: string = \"\";\r\n  @Input() labelClass: string = \"col-6\";\r\n  @Input() value: string | number;\r\n  @Input() valueClass: string = \"col-6\";\r\n  @Input() isDate: boolean = false;\r\n  @Input() displayPlaceholder: boolean = true;\r\n\r\n  // @Output() onClick? = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.value == \"null\") this.value = null;\r\n  }\r\n\r\n  // click(event) {\r\n  //   this.onClick.emit(event);\r\n  // }\r\n}\r\n","<!--<div class=\"rowItem\">-->\r\n<!--  <div class=\"row\">-->\r\n<!--    <div [class]=\"labelClass\">-->\r\n<!--      <p>{{ label | translate | titlecase }}</p>-->\r\n<!--    </div>-->\r\n<!--    <div [class]=\"valueClass\">-->\r\n<!--      <ng-container *ngIf=\"displayPlaceholder\">-->\r\n<!--        <p *ngIf=\"!isDate\">-->\r\n<!--          {{ value ?? \"-&#45;&#45;\" }}-->\r\n<!--        </p>-->\r\n<!--        <p *ngIf=\"isDate\">-->\r\n<!--          {{ value ? (value | date : \"dd/MM/yyyy\") : \"-&#45;&#45;\" }}-->\r\n<!--        </p>-->\r\n\r\n<!--        <ng-content></ng-content>-->\r\n<!--      </ng-container>-->\r\n<!--      <ng-container *ngIf=\"!displayPlaceholder\">-->\r\n<!--        <ng-content></ng-content>-->\r\n<!--      </ng-container>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n\r\n<app-view-data-row-item [label]=\"label\"\r\n                        [value]=\"value\"\r\n                        [isDate]=\"isDate\"\r\n                        class=\"emp-custom-view\">\r\n</app-view-data-row-item>\r\n\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"see-more-btn\",\r\n  templateUrl: \"./see-more-btn.component.html\",\r\n  styleUrls: [\"./see-more-btn.component.scss\"],\r\n})\r\nexport class SeeMoreBtnComponent implements OnInit {\r\n  @Input() isTableView: boolean = false;\r\n  @Output() toggleTable = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onToggleTable() {\r\n    this.toggleTable.emit();\r\n  }\r\n}\r\n","<div class=\"see-more-box\">\r\n  <a class=\"view_see_more\" (click)=\"onToggleTable()\">\r\n    {{ (isTableView ? \"see_less\" : \"see_more\") | translate }}\r\n    <i class=\"fas font-size-13\"\r\n       [ngClass]=\"isTableView ? 'fa-chevron-up' : 'fa-chevron-down'\">\r\n    </i>\r\n  </a>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { empPermissionDisplay } from \"app/personnel-setup/mapper/emp-balances\";\r\nimport {\r\n  IEmpPermissionDisplayModel,\r\n  IEmpPermissionModel,\r\n} from \"app/personnel-setup/models/emp-balances/permission\";\r\nimport { EmployeePermissionService } from \"app/personnel-setup/services/employees/employee-balances/employee-permission.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmpPermissionDialogComponent } from \"../emp-permission-dialog/emp-permission-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"emp-permission-card\",\r\n  templateUrl: \"./emp-permission-card.component.html\",\r\n  styleUrls: [\"./emp-permission-card.component.scss\"],\r\n})\r\nexport class EmpPermissionCardComponent extends AppHelpers implements OnInit {\r\n  employeeInstanceId: number = 0;\r\n  permissions: IEmpPermissionDisplayModel[];\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private employeePermissionService: EmployeePermissionService) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.permissions = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.permissions = null;\r\n    this.employeePermissionService\r\n      .getAll(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpPermissionModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length > 5) {\r\n            let list1: IEmpPermissionModel[] = [];\r\n            let list2: IEmpPermissionModel[] = [];\r\n            // general permission\r\n            res.data.forEach((permission) => {\r\n              if (this.isGeneralPermission(permission)) list1.push(permission);\r\n              else list2.push(permission);\r\n            });\r\n            let sortedList: IEmpPermissionModel[] = [\r\n              // sort by end date (from new to old) > without general\r\n              ...list1,\r\n              ...list2\r\n                .sort(\r\n                  (a, b) =>\r\n                    new Date(b.closing_balance_date).getTime() -\r\n                    new Date(a.closing_balance_date).getTime()\r\n                )\r\n                .slice(0, 5 - list1.length),\r\n            ];\r\n            // sort by end date (from new to old) > all list\r\n            sortedList.sort(\r\n              (a, b) =>\r\n                new Date(b.closing_balance_date).getTime() -\r\n                new Date(a.closing_balance_date).getTime()\r\n            );\r\n            this.permissions = empPermissionDisplay(sortedList).reverse();\r\n          } else {\r\n            let sortedList: IEmpPermissionModel[] = res.data;\r\n            sortedList.sort(\r\n              (a, b) =>\r\n                new Date(b.closing_balance_date).getTime() -\r\n                new Date(a.closing_balance_date).getTime()\r\n            );\r\n            this.permissions = empPermissionDisplay(sortedList).reverse();\r\n          }\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpPermissionDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAll();\r\n        }\r\n      });\r\n  }\r\n\r\n  isGeneralPermission(permission: IEmpPermissionModel) {\r\n    return (\r\n      permission.permission_Setup_Name\r\n        .toLocaleLowerCase()\r\n        .includes(\"general\") ||\r\n      permission.permission_Setup_Name.toLocaleLowerCase().includes(\"gp\")\r\n    );\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"permissions?.length\"\r\n    cardTitle=\"permission\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <ng-container *ngIf=\"permissions?.length > 0; else noData\">\r\n      <ng-container *ngFor=\"let permission of permissions\">\r\n        <div class=\"rowItem\">\r\n          <div class=\"row\">\r\n            <div class=\"col-6\">\r\n              <p>{{ permission?.permission | translate | titlecase }}</p>\r\n            </div>\r\n            <div class=\"col-6 text-center mb-2\">\r\n              <div>\r\n                <table\r\n                  class=\"table m-0 smalltable\"\r\n                  style=\"margin-top: 0 !important\"\r\n                >\r\n                  <thead>\r\n                    <tr>\r\n                      <th\r\n                        [matTooltip]=\"'balance' | translate\"\r\n                        matTooltipPosition=\"above\"\r\n                      >\r\n                        B\r\n                      </th>\r\n                      <th\r\n                        [matTooltip]=\"'used' | translate\"\r\n                        matTooltipPosition=\"above\"\r\n                      >\r\n                        U\r\n                      </th>\r\n                      <th\r\n                        [matTooltip]=\"'remaining' | translate\"\r\n                        matTooltipPosition=\"above\"\r\n                      >\r\n                        R\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{{ permission?.balance }}{{ \"hr\" | translate }}</td>\r\n                      <td>{{ permission?.used }}{{ \"hr\" | translate }}</td>\r\n                      <td>{{ permission?.remaining }}{{ \"hr\" | translate }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <span class=\"text-muted\">\r\n                  {{ permission?.startDate }} - {{ permission?.endDate }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <ng-template #noData>\r\n      <card-row-item label=\"permission\" [value]=\"null\"></card-row-item>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"6\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empPermissionDisplay } from \"app/personnel-setup/mapper/emp-balances\";\r\nimport {\r\n  IEmpPermissionDisplayModel,\r\n  IEmpPermissionModel,\r\n} from \"app/personnel-setup/models/emp-balances/permission\";\r\nimport { EmployeePermissionService } from \"app/personnel-setup/services/employees/employee-balances/employee-permission.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"emp-permission-dialog\",\r\n  templateUrl: \"./emp-permission-dialog.component.html\",\r\n  styleUrls: [\"./emp-permission-dialog.component.scss\"],\r\n})\r\nexport class EmpPermissionDialogComponent extends AppHelpers implements OnInit {\r\n  employeeInstanceId: number = 0;\r\n  // updated: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"permission\",\r\n    \"startDate\",\r\n    \"endDate\",\r\n    \"balance\",\r\n    \"used\",\r\n    \"remaining\",\r\n    // \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\"newHireBalance\", \"newHireCloseDate\"];\r\n  dataSource: MatTableDataSource<IEmpPermissionDisplayModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private employeePermissionService: EmployeePermissionService,\r\n    public dialogRef: MatDialogRef<EmpPermissionDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.form = this.fb.group(\r\n    //   {\r\n    //     id: [0, { nonNullable: true }],\r\n    //     permissionId: [null, [Validators.required]],\r\n    //     startDate: [null, [Validators.required]],\r\n    //     endDate: [null],\r\n    //     balance: [null, [Validators.required]],\r\n    //     used: [null, [Validators.required]],\r\n    //     remaining: [null],\r\n    //     permissionTaken: [null],\r\n    //     newHireBalance: [null],\r\n    //     newHireCloseDate: [null],\r\n    //   },\r\n    //   {\r\n    //     validator: CustomValidator.compareDates(\"startDate\", \"endDate\"),\r\n    //   }\r\n    // );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(/* this.updated */ false);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany() && this.employeeInstanceId > 0)\r\n      this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeePermissionService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpPermissionModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empPermissionDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  // submit() {\r\n  //   // console.log(this.form.value);\r\n  //   this.submitted = true;\r\n  //   if (this.form.valid) {\r\n  //     const model: IEmpPermissionRequest = {\r\n  //       Person_ID: this.employeeInstanceId,\r\n  //       id: this.form.value.id,\r\n  //       permissionId: this.form.value.permissionId,\r\n  //       startDate: this.form.value.startDate,\r\n  //       endDate: this.form.value.endDate,\r\n  //       balance: this.form.value.balance,\r\n  //       used: this.form.value.used,\r\n  //       permissionTaken: this.form.value.permissionTaken,\r\n  //       newHireBalance: this.form.value.newHireBalance,\r\n  //       newHireCloseDate: this.form.value.newHireCloseDate,\r\n  //     };\r\n\r\n  //     model.id == 0 ? this.create(model) : this.update(model);\r\n  //   } // else this.toastr.error(\"General.formNotValid\");\r\n  // }\r\n\r\n  // create(model: IEmpPermissionRequest) {\r\n  //   this.showLoading();\r\n  //   this.employeePermissionService\r\n  //     .create(model)\r\n  //     .subscribe((res: IResponse<IEmpPermissionModel>) => {\r\n  //       if (res?.message?.messageType == MessageTypes.Success) {\r\n  //         this.clearForm();\r\n  //         this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getList(this.currentPage);\r\n  //         this.updated = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  // update(model: IEmpPermissionRequest) {\r\n  //   this.showLoading();\r\n  //   this.employeePermissionService\r\n  //     .update(model)\r\n  //     .subscribe((res: IResponse<IEmpPermissionModel>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.clearForm();\r\n  //         this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getList(this.currentPage);\r\n  //         this.updated = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  // employeePermissionToEdit(permission: IEmpPermissionDisplayModel) {\r\n  //   this.form.patchValue(permission);\r\n  //   // console.log(this.form.value);\r\n  // }\r\n\r\n  // onDelete(permission: IEmpPermissionDisplayModel): void {\r\n  //   let msg = permission.permission;\r\n  //   this.deleateDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(permission);\r\n  //   });\r\n  // }\r\n\r\n  // delete(permission: IEmpPermissionDisplayModel) {\r\n  //   this.showLoading();\r\n  //   this.employeePermissionService\r\n  //     .Delete(permission.id)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n  //           // if last item in list: get previous page\r\n  //           this.getList(this.prevPage, this.page.dialogSize);\r\n  //         } else {\r\n  //           // if not last item in list: get current page\r\n  //           this.getList(this.currentPage, this.page.dialogSize);\r\n  //         }\r\n  //         this.updated = true;\r\n  //         if (permission.id == this.formCtrls.id.value)\r\n  //           this.clearForm();\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"permission\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <!-- <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-permission-type-dropdown\r\n          [control]=\"formCtrls.permissionId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-permission-type-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.startDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"startDate\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.endDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"endDate\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.balance\"\r\n          [submitted]=\"submitted\"\r\n          label=\"balance\"\r\n          type=\"number\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.used\"\r\n          [submitted]=\"submitted\"\r\n          label=\"used\"\r\n          type=\"number\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.remaining\"\r\n          [submitted]=\"submitted\"\r\n          label=\"remaining\"\r\n          type=\"number\"\r\n          [disabled]=\"true\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.permissionTaken\"\r\n          [submitted]=\"submitted\"\r\n          label=\"permissionTaken\"\r\n          type=\"number\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.newHireBalance\"\r\n          [submitted]=\"submitted\"\r\n          label=\"newHireBalance\"\r\n          type=\"number\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.newHireCloseDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"newHireCloseDate\"\r\n        ></app-datepicker>\r\n      </div>\r\n    </div>\r\n  </form> -->\r\n\r\n  <!-- <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      color=\"btn-lightGreen\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div> -->\r\n\r\n  <!--\r\n    (editRow)=\"employeePermissionToEdit($event)\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n   -->\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0; else noData\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      [showSpaceTop]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n\r\n  <ng-template #noData>\r\n    <p-messages severity=\"warn\">\r\n      <ng-template pTemplate>\r\n        <span class=\"p-message-icon pi pi-exclamation-triangle\"></span>\r\n        <div class=\"p-message-detail\">\r\n          {{ \"noDataToDisplay\" | translate }}\r\n        </div>\r\n      </ng-template>\r\n    </p-messages>\r\n  </ng-template>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { empVacationDisplay } from \"app/personnel-setup/mapper/emp-balances\";\r\nimport { IEmpVacationModel } from \"app/personnel-setup/models/emp-balances/vacation\";\r\nimport { EmployeeVacationService } from \"app/personnel-setup/services/employees/employee-balances/employee-vacation.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmpVacationDialogComponent } from \"../emp-vacation-dialog/emp-vacation-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"emp-vacation-card\",\r\n  templateUrl: \"./emp-vacation-card.component.html\",\r\n  styleUrls: [\"./emp-vacation-card.component.scss\"],\r\n})\r\nexport class EmpVacationCardComponent extends AppHelpers implements OnInit {\r\n  employeeInstanceId: number = 0;\r\n  vacations: IEmpVacationModel[] = [];\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private employeeVacationService: EmployeeVacationService) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getCard();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.vacations = [];\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getCard();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getCard() {\r\n    this.vacations = [];\r\n    this.employeeVacationService\r\n      .getCard(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpVacationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length > 0) {\r\n            let list1: IEmpVacationModel[] = [];\r\n            let list2: IEmpVacationModel[] = [];\r\n            // annual & casual vacations\r\n            res.data.forEach((vacation) => {\r\n              if (this.isAnnualOrCasualVacations(vacation))\r\n                list1.push(vacation);\r\n              else list2.push(vacation);\r\n            });\r\n            let sortedList: IEmpVacationModel[] = [\r\n              // sort by end date (from new to old) > without annual & casual\r\n              ...list1,\r\n              ...list2\r\n                .sort(\r\n                  (a, b) =>\r\n                    new Date(b.closing_balance_date).getTime() -\r\n                    new Date(a.closing_balance_date).getTime()\r\n                )\r\n                .slice(0, 5 - list1.length),\r\n            ];\r\n            // sort by end date (from new to old) > all list\r\n            sortedList.sort(\r\n              (a, b) =>\r\n                new Date(b.closing_balance_date).getTime() -\r\n                new Date(a.closing_balance_date).getTime()\r\n            );\r\n            this.vacations = empVacationDisplay(sortedList).reverse();\r\n          } else {\r\n            let sortedList: IEmpVacationModel[] = res.data;\r\n            sortedList.sort(\r\n              (a, b) =>\r\n                new Date(b.closing_balance_date).getTime() -\r\n                new Date(a.closing_balance_date).getTime()\r\n            );\r\n            this.vacations = empVacationDisplay(sortedList).reverse();\r\n          }\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpVacationDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getCard();\r\n        }\r\n      });\r\n  }\r\n\r\n  isAnnualOrCasualVacations(vacation: IEmpVacationModel) {\r\n    return (\r\n      vacation.vacation_EnName.toLocaleLowerCase().includes(\"annual\") ||\r\n      vacation.vacation_ArName.toLocaleLowerCase().includes(\"annual\") ||\r\n      vacation.vacation_EnName.toLocaleLowerCase().includes(\"casual\") ||\r\n      vacation.vacation_ArName.toLocaleLowerCase().includes(\"casual\")\r\n    );\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"vacations?.length\"\r\n    cardTitle=\"vacation\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <ng-container *ngIf=\"vacations?.length > 0; else noData\">\r\n      <ng-container *ngFor=\"let vacation of vacations\">\r\n        <div class=\"rowItem\">\r\n          <div class=\"row\">\r\n            <div class=\"col-6\">\r\n              <p>{{ vacation?.vacation | translate | titlecase }}</p>\r\n            </div>\r\n            <div class=\"col-6 text-center mb-2\">\r\n              <div>\r\n                <table\r\n                  class=\"table m-0 smalltable\"\r\n                  style=\"margin-top: 0 !important\"\r\n                >\r\n                  <thead>\r\n                    <tr>\r\n                      <th\r\n                        [matTooltip]=\"'balance' | translate\"\r\n                        matTooltipPosition=\"above\"\r\n                      >\r\n                        B\r\n                      </th>\r\n                      <th\r\n                        [matTooltip]=\"'used' | translate\"\r\n                        matTooltipPosition=\"above\"\r\n                      >\r\n                        U\r\n                      </th>\r\n                      <th\r\n                        [matTooltip]=\"'remaining' | translate\"\r\n                        matTooltipPosition=\"above\"\r\n                      >\r\n                        R\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{{ vacation?.balance }}</td>\r\n                      <td>{{ vacation?.used ?? 0 }}</td>\r\n                      <td>{{ vacation?.remaining }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <span class=\"text-muted\">\r\n                  {{ vacation?.startDate }} - {{ vacation?.endDate }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <ng-template #noData>\r\n      <card-row-item label=\"vacation\" [value]=\"null\"></card-row-item>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"6\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empVacationDisplay } from \"app/personnel-setup/mapper/emp-balances\";\r\nimport {\r\n  IEmpVacationDisplayModel,\r\n  IEmpVacationModel,\r\n  IEmpVacationRequest,\r\n} from \"app/personnel-setup/models/emp-balances/vacation\";\r\nimport { EmployeeVacationService } from \"app/personnel-setup/services/employees/employee-balances/employee-vacation.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"emp-vacation-dialog\",\r\n  templateUrl: \"./emp-vacation-dialog.component.html\",\r\n  styleUrls: [\"./emp-vacation-dialog.component.scss\"],\r\n})\r\nexport class EmpVacationDialogComponent extends AppHelpers implements OnInit {\r\n  employeeInstanceId: number = 0;\r\n  updated: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"vacation\",\r\n    \"startDate\",\r\n    \"endDate\",\r\n    \"balance\",\r\n    \"used\",\r\n    \"remaining\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpVacationDisplayModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  selectedVacation: IEmpVacationDisplayModel = null;\r\n\r\n  constructor(\r\n    private employeeVacationService: EmployeeVacationService,\r\n    public dialogRef: MatDialogRef<EmpVacationDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_vacation_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, { nonNullable: true }],\r\n        vacation_ID: [null, [Validators.required]],\r\n        opening_balance_date: [null, [Validators.required]],\r\n        closing_balance_date: [null, [Validators.required]],\r\n        vacationBalanceOriginal: [null, [Validators.required]],\r\n        vacation_Done_Balance: [null], // used\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\r\n          \"opening_balance_date\",\r\n          \"closing_balance_date\"\r\n        ),\r\n      }\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.updated);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany() && this.employeeInstanceId > 0)\r\n      this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeVacationService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpVacationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empVacationDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpVacationRequest = {\r\n        person_Instance_ID: this.employeeInstanceId,\r\n        vacation_ID: this.formCtrls.vacation_ID.value,\r\n        opening_balance_date: HelpersFunctions.mapDateReverse(\r\n          this.formCtrls.opening_balance_date.value\r\n        ),\r\n        closing_balance_date: HelpersFunctions.mapDateReverse(\r\n          this.formCtrls.closing_balance_date.value\r\n        ),\r\n        vacation_balance: this.formCtrls.vacationBalanceOriginal.value,\r\n      };\r\n\r\n      this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  update(model: IEmpVacationRequest) {\r\n    this.showLoading();\r\n    this.employeeVacationService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmpVacationModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n          this.selectedVacation = null;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeVacationToEdit(vacation: IEmpVacationDisplayModel) {\r\n    this.form.patchValue(vacation);\r\n    // only to detect edit\r\n    this.formCtrls.id.setValue(vacation.vacation_ID);\r\n    this.selectedVacation = vacation;\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(vacation: IEmpVacationDisplayModel): void {\r\n    let msg = vacation.vacation;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(vacation);\r\n    });\r\n  }\r\n\r\n  delete(vacation: IEmpVacationDisplayModel) {\r\n    let deleteData: IEmpVacationRequest = {\r\n      vacation_ID: vacation.vacation_ID,\r\n      person_Instance_ID: this.employeeInstanceId,\r\n      opening_balance_date: HelpersFunctions.mapDateReverse(\r\n        vacation.opening_balance_date\r\n      ),\r\n      closing_balance_date: HelpersFunctions.mapDateReverse(\r\n        vacation.closing_balance_date\r\n      ),\r\n      vacation_balance: vacation.vacationBalanceOriginal,\r\n    };\r\n    this.showLoading();\r\n    this.employeeVacationService\r\n      .Delete(deleteData)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.updated = true;\r\n          if (\r\n            vacation.vacation_ID == this.selectedVacation?.vacation_ID &&\r\n            vacation.opening_balance_date ==\r\n              this.selectedVacation?.opening_balance_date &&\r\n            vacation.closing_balance_date ==\r\n              this.selectedVacation?.closing_balance_date &&\r\n            vacation.vacationBalanceOriginal ==\r\n              this.selectedVacation?.vacationBalanceOriginal &&\r\n            this.formCtrls.id.value > 0\r\n          )\r\n            this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n\r\n  regenerateBalance() {\r\n    this.showLoading();\r\n    this.employeeVacationService\r\n      .regenerateBalance(this.employeeInstanceId)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"vacation\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-vacation-type-dropdown\r\n          [control]=\"formCtrls.vacation_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n          [disable]=\"true\"\r\n        ></app-vacation-type-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.opening_balance_date\"\r\n          [submitted]=\"submitted\"\r\n          label=\"startDate\"\r\n          [disabled]=\"true\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.closing_balance_date\"\r\n          [submitted]=\"submitted\"\r\n          label=\"endDate\"\r\n          [disabled]=\"true\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.vacationBalanceOriginal\"\r\n          [submitted]=\"submitted\"\r\n          label=\"balance\"\r\n          type=\"number\"\r\n          [disabled]=\"formCtrls.id.value == 0\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.vacation_Done_Balance\"\r\n          [submitted]=\"submitted\"\r\n          label=\"used\"\r\n          type=\"number\"\r\n          [disabled]=\"true\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <app-button\r\n      [color]=\"btn.darkBlue\"\r\n      label=\"regenerateBalance\"\r\n      class=\"float-left\"\r\n      (onClick)=\"regenerateBalance()\"\r\n    ></app-button>\r\n\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n  <div class=\"clearfix\"></div>\r\n\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeVacationToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n\t<button mat-raised-button class=\"btn bg-light-secondary\" (click)=\"onCloseDialog()\">\r\n\t\t{{ \"General.close\" | translate }}\r\n\t</button>\r\n</mat-dialog-actions> -->\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { IGUIModel } from \"app/shared/interfaces/user-views\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"employee-balances-core\",\r\n\ttemplateUrl: \"./employee-balances-core.component.html\",\r\n\tstyleUrls: [\"./employee-balances-core.component.scss\"],\r\n})\r\nexport class EmployeeBalancesCoreComponent extends AppHelpers implements OnInit {\r\n\t@Input() icon: string;\r\n\tallowedSections: IGUIModel[];\r\n\tviewsManager = ViewsManager;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\toverride onModulesChanged() {\r\n\t\tthis.allowedSections = this.getCustomViewChildren(\r\n\t\t\tthis.getParentViewName,\r\n\t\t\tViewsManager.emp_balances_tab\r\n\t\t);\r\n\t\t// console.log(\"balances_info\", this.allowedSections);\r\n\t}\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title class=\"main-card-title border-bottom\">\r\n        <page-title\r\n          title=\"employeeBalances\"\r\n          [icon]=\"icon\"\r\n          color=\"info\"\r\n        ></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid p-0\">\r\n        <div class=\"row mx-md-n2\">\r\n          <!-- vacation  -->\r\n          <div\r\n            class=\"col-md-6 col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_vacation_sec)\"\r\n          >\r\n            <emp-vacation-card></emp-vacation-card>\r\n          </div>\r\n\r\n          <!-- work Schedule -->\r\n          <div\r\n            class=\"col-md-6 col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_permission_sec)\"\r\n          >\r\n            <emp-permission-card></emp-permission-card>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { IGUIModel } from \"app/shared/interfaces/user-views\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"emp-career-core\",\r\n\ttemplateUrl: \"./emp-career-core.component.html\",\r\n\tstyleUrls: [\"./emp-career-core.component.scss\"],\r\n})\r\nexport class EmployeeCareerCoreComponent extends AppHelpers implements OnInit {\r\n\t@Input() icon: string;\r\n\tallowedSections: IGUIModel[];\r\n\tviewsManager = ViewsManager;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\toverride onModulesChanged() {\r\n\t\tthis.allowedSections = this.getCustomViewChildren(\r\n\t\t\tthis.getParentViewName,\r\n\t\t\tViewsManager.emp_career_tab\r\n\t\t);\r\n\t}\r\n\r\n\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title class=\"main-card-title border-bottom\">\r\n        <page-title\r\n          title=\"career\"\r\n          color=\"font-dark\"\r\n          class=\"font-size-17 font-weight-bold\"\r\n        ></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid p-0 px-4\">\r\n        <div class=\"row mx-md-n2\">\r\n          <div\r\n            class=\"col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_education_sec)\"\r\n          >\r\n            <emp-education-card></emp-education-card>\r\n          </div>\r\n\r\n          <div\r\n            class=\"col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_work_experience_sec)\"\r\n          >\r\n            <emp-work-experience-card></emp-work-experience-card>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { empEducationDisplay } from \"app/personnel-setup/mapper/emp-career\";\r\nimport { IEmployeeEducationModel } from \"app/personnel-setup/models/employee-career/emp-education\";\r\nimport { EmployeeEducationService } from \"app/personnel-setup/services/employees/career/employee-education.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmployeeEducationDialogComponent } from \"../emp-education-dialog/emp-education-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"emp-education-card\",\r\n  templateUrl: \"./emp-education-card.component.html\",\r\n  styleUrls: [\"./emp-education-card.component.scss\"],\r\n})\r\nexport class EmployeeEducationCardComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeId: number = 0;\r\n  // employeeInstanceId: number = 0;\r\n  empEducation: IEmployeeEducationModel;\r\n\r\n  isLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(private employeeEducationService: EmployeeEducationService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    // this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empEducation = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllByEmployeeId();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAllByEmployeeId() {\r\n    this.empEducation = null;\r\n    this.employeeEducationService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeEducationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          let sortedList: IEmployeeEducationModel[] = res.data;\r\n          // sort by year (from new to old)\r\n          sortedList.sort((a, b) => b.year - a.year);\r\n          this.empEducation = empEducationDisplay(sortedList)[0];\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmployeeEducationDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAllByEmployeeId();\r\n        }\r\n      });\r\n  }\r\n\r\n  afterDelete(education: IEmployeeEducationModel) {\r\n    if (education) {\r\n      this.isLoaded = false;\r\n      this.getAllByEmployeeId();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n}\r\n","<div class=\"card-view border-bottom\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">\r\n      <card-header\r\n        [isEdit]=\"empEducation\"\r\n        cardTitle=\"education\"\r\n        [isLoaded]=\"isLoaded\"\r\n        (onClickIcon)=\"openAddEditDialog()\"\r\n        class=\"side_title\"\r\n      ></card-header>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n      <div *ngIf=\"!isTableView\" class=\"view-data-row-container\">\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"institution\"\r\n          [value]=\"empEducation?.institution\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"major\"\r\n          [value]=\"empEducation?.major\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"degree\"\r\n          [value]=\"empEducation?.degree\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"year\"\r\n          [value]=\"empEducation?.year\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"gpaGrade\"\r\n          [value]=\"empEducation?.gpaGrade\"\r\n        ></card-row-item>\r\n      </div>\r\n\r\n      <emp-education-table\r\n        *ngIf=\"isTableView\"\r\n        [isMatPaginator]=\"true\"\r\n        [hideActions]=\"true\"\r\n        (afterDelete)=\"afterDelete($event)\"\r\n      >\r\n      </emp-education-table>\r\n    </div>\r\n\r\n    <div class=\"col-2\">\r\n      <see-more-btn\r\n        [isTableView]=\"isTableView\"\r\n        (toggleTable)=\"toggleTable()\"\r\n      ></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"5\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  IEditEmployeeEducationRequest,\r\n  IEmployeeEducationModel,\r\n  IEmployeeEducationRequest,\r\n} from \"app/personnel-setup/models/employee-career/emp-education\";\r\nimport { EmployeeEducationService } from \"app/personnel-setup/services/employees/career/employee-education.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-employee-education-dialog\",\r\n  templateUrl: \"./emp-education-dialog.component.html\",\r\n  styleUrls: [\"./emp-education-dialog.component.scss\"],\r\n})\r\nexport class EmployeeEducationDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeId: number = 0;\r\n  // employeeInstanceId: number = 0;\r\n  hasUpdate: boolean = false;\r\n\r\n  // mandatoryColomns: string[] = [\r\n  //   \"Ser\",\r\n  //   // \"id\",\r\n  //   \"institution\",\r\n  //   \"major\",\r\n  //   \"degree\",\r\n  //   \"year\",\r\n  //   \"gpaGrade\",\r\n  //   \"actions\",\r\n  // ];\r\n  // optionalColomns: string[] = [];\r\n  // dataSource: MatTableDataSource<IEmployeeEducationModel>;\r\n  // isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  selectedEducation: IEmployeeEducationModel;\r\n\r\n  constructor(\r\n    private employeeEducationService: EmployeeEducationService,\r\n    public dialogRef: MatDialogRef<EmployeeEducationDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    // this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_education_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      institutionID: [null, [Validators.required]],\r\n      major: [null],\r\n      academicID: [null, [Validators.required]],\r\n      year: [null, [Validators.required]],\r\n      gradeID: [null, [Validators.required]],\r\n      gpa: [null, [Validators.required]],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.hasUpdate);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {\r\n  //   if (this.dataSource?.data?.length > 0)\r\n  //     this.dataSource = new MatTableDataSource(null);\r\n  //   if (this.checkNoBusinessOrCompany()) {\r\n  //     if (this.employeeId > 0) this.getList(this.firstPage);\r\n  //   }\r\n  // }\r\n\r\n  // getList(page: number, pageSize?: number) {\r\n  //   this.page.pageIndex = page;\r\n  //   if (pageSize) this.page.dialogSize = pageSize;\r\n  //   let params: IPageParams = {\r\n  //     PageNumber: page,\r\n  //     pageSize: this.page.dialogSize,\r\n  //   };\r\n  //   this.employeeEducationService\r\n  //     .getList(this.employeeId, params)\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponseList<IEmployeeEducationModel[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.dataSource = new MatTableDataSource(\r\n  //           empEducationDisplay(res.data)\r\n  //         );\r\n  //         this.page.length = res.meta.totalItemCount;\r\n  //         this.isLoaded = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //     });\r\n  // }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeEducationRequest = {\r\n        Education: {\r\n          PersonID: this.employeeId,\r\n          InstitutionID: this.form.value.institutionID,\r\n          Major: this.form.value.major,\r\n          GradeID: this.form.value.gradeID,\r\n          AcademicID: this.form.value.academicID,\r\n          Year: this.form.value.year,\r\n          GPA: this.form.value.gpa,\r\n        },\r\n      };\r\n\r\n      this.formCtrls.id.value == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeEducationRequest) {\r\n    this.showLoading();\r\n    this.employeeEducationService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeEducationModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeEducationRequest) {\r\n    let editModel: IEditEmployeeEducationRequest = {\r\n      ...model,\r\n      OriginalEducation: {\r\n        PersonID: this.employeeId,\r\n        AcademicID: this.selectedEducation.academicID,\r\n        GradeID: this.selectedEducation.gradeID,\r\n      },\r\n    };\r\n    this.showLoading();\r\n    this.employeeEducationService\r\n      .update(editModel)\r\n      .subscribe((res: IResponse<IEmployeeEducationModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n          this.selectedEducation = null;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeEducationToEdit(employeeEducationInfo: IEmployeeEducationModel) {\r\n    this.form.patchValue(employeeEducationInfo);\r\n    // not real id >> only to detect edit mode\r\n    this.formCtrls.id.setValue(\r\n      employeeEducationInfo.comm_Education_Degree?.id ?? 1\r\n    );\r\n    // to use in edit request\r\n    this.selectedEducation = employeeEducationInfo;\r\n  }\r\n\r\n  // onDelete(employeeEducationInfo: IEmployeeEducationModel): void {\r\n  //   let msg = `${employeeEducationInfo.degree} - ${employeeEducationInfo.grade}`;\r\n  //   this.deleteDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(employeeEducationInfo);\r\n  //   });\r\n  // }\r\n\r\n  // delete(employeeEducationInfo: IEmployeeEducationModel) {\r\n  //   let deleteParams: IEmployeeEducationDeleteParams = {\r\n  //     PersonID: this.employeeId,\r\n  //     GradeID: employeeEducationInfo.gradeID,\r\n  //     AcademicID: employeeEducationInfo.academicID,\r\n  //   };\r\n  //   this.showLoading();\r\n  //   this.employeeEducationService\r\n  //     .Delete(deleteParams)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n  //           // if last item in list: get previous page\r\n  //           this.getList(this.prevPage, this.page.dialogSize);\r\n  //         } else {\r\n  //           // if not last item in list: get current page\r\n  //           this.getList(this.currentPage, this.page.dialogSize);\r\n  //         }\r\n  //         this.updated = true;\r\n  //         if (\r\n  //           employeeEducationInfo.academicID ==\r\n  //             this.selectedEducation?.academicID &&\r\n  //           employeeEducationInfo.gradeID == this.selectedEducation?.gradeID &&\r\n  //           this.formCtrls.id.value > 0\r\n  //         )\r\n  //           this.clearForm();\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  afterDelete(education: IEmployeeEducationModel) {\r\n    if (\r\n      education.academicID == this.selectedEducation?.academicID &&\r\n      education.gradeID == this.selectedEducation?.gradeID &&\r\n      this.formCtrls.id.value > 0\r\n    )\r\n      this.clearForm();\r\n    if (education) this.hasUpdate = true;\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"education\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-institution-dropdown\r\n          [control]=\"formCtrls.institutionID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-institution-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.major\"\r\n          [submitted]=\"submitted\"\r\n          label=\"major\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-education-degree-dropdown\r\n          [control]=\"formCtrls.academicID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-education-degree-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <!-- <app-calendar\r\n          [control]=\"formCtrls.year\"\r\n          [submitted]=\"submitted\"\r\n          label=\"year\"\r\n          view=\"year\"\r\n          dateFormat=\"yy\"\r\n          [appendTo]=\"dialogContainer\"\r\n        >\r\n        </app-calendar> -->\r\n\r\n        <app-education-year-dropdown\r\n          [control]=\"formCtrls.year\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-education-year-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-education-grade-dropdown\r\n          [control]=\"formCtrls.gradeID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          label=\"grade\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-education-grade-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.gpa\"\r\n          [submitted]=\"submitted\"\r\n          label=\"gpa\"\r\n          type=\"number\"\r\n        ></app-input>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <!-- <app-material-table\r\n    *ngIf=\"employeeId > 0\"\r\n    [isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [page]=\"page\"\r\n    [actions]=\"rowFunctions\"\r\n    [isDialogSize]=\"true\"\r\n    [showFilter]=\"false\"\r\n    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n    (editRow)=\"employeeEducationToEdit($event)\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    class=\"table-in-forms\"\r\n  >\r\n  </app-material-table> -->\r\n\r\n  <emp-education-table\r\n    [hasUpdate]=\"hasUpdate\"\r\n    (rowToEdit)=\"employeeEducationToEdit($event)\"\r\n    (afterDelete)=\"afterDelete($event)\"\r\n  ></emp-education-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empEducationDisplay } from \"app/personnel-setup/mapper/emp-career\";\r\nimport {\r\n  IEmployeeEducationDeleteParams,\r\n  IEmployeeEducationModel,\r\n} from \"app/personnel-setup/models/employee-career/emp-education\";\r\nimport { EmpDataTableImplement } from \"app/personnel-setup/models/implements/emp-data-table.implement\";\r\nimport { EmployeeEducationService } from \"app/personnel-setup/services/employees/career/employee-education.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"emp-education-table\",\r\n  templateUrl: \"./emp-education-table.component.html\",\r\n  styleUrls: [\"./emp-education-table.component.scss\"],\r\n})\r\nexport class EmpEducationTableComponent\r\n  extends AppHelpers\r\n  implements EmpDataTableImplement, OnChanges\r\n{\r\n  @Input() hasUpdate: boolean;\r\n  @Input() hideActions: boolean = false;\r\n  @Input() isMatPaginator: boolean = false;\r\n  @Output() rowToEdit = new EventEmitter<IEmployeeEducationModel>();\r\n  @Output() afterDelete = new EventEmitter<IEmployeeEducationModel>();\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"institution\",\r\n    \"major\",\r\n    \"degree\",\r\n    \"year\",\r\n    \"gpaGrade\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeEducationModel>;\r\n  isLoaded: boolean = false;\r\n  employeeId: number = 0;\r\n\r\n  constructor(private employeeEducationService: EmployeeEducationService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_education_sec\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasUpdate && this.employeeId > 0) this.getList(this.firstPage);\r\n    if (this.hideActions) {\r\n      let editIndex = this.rowFunctions.basic.findIndex(\r\n        (e) => e.name.toLowerCase() == \"edit\"\r\n      );\r\n      this.rowFunctions.basic.splice(editIndex, 1);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeEducationService\r\n      .getList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeEducationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empEducationDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  toEdit(education: IEmployeeEducationModel) {\r\n    this.rowToEdit.emit(education);\r\n  }\r\n\r\n  onDelete(education: IEmployeeEducationModel): void {\r\n    let msg = `${education.degree} - ${education.grade}`;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(education);\r\n    });\r\n  }\r\n\r\n  delete(education: IEmployeeEducationModel) {\r\n    let deleteParams: IEmployeeEducationDeleteParams = {\r\n      PersonID: this.employeeId,\r\n      GradeID: education.gradeID,\r\n      AcademicID: education.academicID,\r\n    };\r\n    this.showLoading();\r\n    this.employeeEducationService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.afterDelete.emit(education);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<app-material-table\r\n  *ngIf=\"employeeId > 0\"\r\n  [isLoaded]=\"isLoaded\"\r\n  [dataSource]=\"dataSource\"\r\n  [mandatoryColomns]=\"mandatoryColomns\"\r\n  [optionalColomns]=\"optionalColomns\"\r\n  [actions]=\"rowFunctions\"\r\n  [isDialogSize]=\"true\"\r\n  [showFilter]=\"false\"\r\n  [page]=\"page\"\r\n  (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n  (editRow)=\"toEdit($event)\"\r\n  (deleteRow)=\"onDelete($event)\"\r\n  class=\"table-in-forms\"\r\n  [isMatPaginator]=\"isMatPaginator\"\r\n  [showFirstLastButtons]=\"false\"\r\n  [showSpaceTop]=\"false\"\r\n>\r\n</app-material-table>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  IEmpWorkExperienceDisplay,\r\n  IEmpWorkExperienceModel,\r\n} from \"app/personnel-setup/models/employee-career/emp-work-experience\";\r\nimport { EmployeeWorkExperienceService } from \"app/personnel-setup/services/employees/career/employee-work-experience.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmployeeWorkExperienceDialogComponent } from \"../emp-work-experience-dialog/employee-work-experience-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"emp-work-experience-card\",\r\n  templateUrl: \"./emp-work-experience-card.component.html\",\r\n  styleUrls: [\"./emp-work-experience-card.component.scss\"],\r\n})\r\nexport class EmployeeWorkExperienceCardComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeInstanceId: number = 0;\r\n  empWorkExperience: IEmpWorkExperienceModel;\r\n\r\n  isLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(\r\n    private employeeWorkExperienceService: EmployeeWorkExperienceService\r\n  ) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empWorkExperience = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.getAll();\r\n    } else this.isLoaded = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.empWorkExperience = null;\r\n    this.employeeWorkExperienceService\r\n      .getAll(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpWorkExperienceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          var filter: IEmpWorkExperienceModel[] = res.data;\r\n          filter.sort(\r\n            (a, b) =>\r\n              new Date(b.to_Date).getTime() - new Date(a.to_Date).getTime()\r\n          );\r\n          this.empWorkExperience = filter[0];\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmployeeWorkExperienceDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((isHaseChange: boolean) => {\r\n        if (isHaseChange) {\r\n          this.isLoaded = false;\r\n          this.getAll();\r\n        }\r\n      });\r\n  }\r\n\r\n  afterDelete(workExperience: IEmpWorkExperienceDisplay) {\r\n    if (workExperience) {\r\n      this.isLoaded = false;\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n}\r\n","<div class=\"card-view border-bottom\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">\r\n      <card-header\r\n        [isEdit]=\"empWorkExperience\"\r\n        cardTitle=\"workExperience\"\r\n        [isLoaded]=\"isLoaded\"\r\n        (onClickIcon)=\"openAddEditDialog()\"\r\n        class=\"side_title\"\r\n      ></card-header>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n      <div *ngIf=\"!isTableView\" class=\"view-data-row-container\">\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"companyName\"\r\n          [value]=\"empWorkExperience?.companyName\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"department\"\r\n          [value]=\"empWorkExperience?.org_Name\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"position\"\r\n          [value]=\"empWorkExperience?.job_Title_Name\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"startDate\"\r\n          [value]=\"empWorkExperience?.from_Date\"\r\n          [isDate]=\"true\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          class=\"col\"\r\n          label=\"endDate\"\r\n          [value]=\"empWorkExperience?.to_Date\"\r\n          [isDate]=\"true\"\r\n        ></card-row-item>\r\n      </div>\r\n\r\n      <emp-work-experience-table\r\n        *ngIf=\"isTableView\"\r\n        [isMatPaginator]=\"true\"\r\n        [hideActions]=\"true\"\r\n        (afterDelete)=\"afterDelete($event)\"\r\n      >\r\n      </emp-work-experience-table>\r\n    </div>\r\n\r\n    <div class=\"col-2\">\r\n      <see-more-btn\r\n        [isTableView]=\"isTableView\"\r\n        (toggleTable)=\"toggleTable()\"\r\n      ></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"5\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  IEmpWorkExperienceDisplay,\r\n  IEmpWorkExperienceModel,\r\n  IEmpWorkExperienceRequest,\r\n} from \"app/personnel-setup/models/employee-career/emp-work-experience\";\r\nimport { EmployeeWorkExperienceService } from \"app/personnel-setup/services/employees/career/employee-work-experience.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-employee-work-experience-dialog\",\r\n  templateUrl: \"./employee-work-experience-dialog.component.html\",\r\n  styleUrls: [\"./employee-work-experience-dialog.component.scss\"],\r\n})\r\nexport class EmployeeWorkExperienceDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  // employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  hasUpdate: boolean = false;\r\n\r\n  // mandatoryColomns: string[] = [\r\n  //   \"Ser\",\r\n  //   \"companyName\",\r\n  //   \"department\",\r\n  //   \"position\",\r\n  //   \"startDate\",\r\n  //   \"endDate\",\r\n  //   \"actions\",\r\n  // ];\r\n  // optionalColomns: string[] = [];\r\n  // dataSource: MatTableDataSource<IEmpWorkExperienceDisplay>;\r\n  // isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private empWorkExperienceService: EmployeeWorkExperienceService,\r\n    public dialogRef: MatDialogRef<EmployeeWorkExperienceDialogComponent>\r\n  ) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_work_experience_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, { nonNullable: true }],\r\n        companyName: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n        department: [null],\r\n        position: [null],\r\n        startDate: [null, [Validators.required, CustomValidators.date]],\r\n        endDate: [null, [Validators.required, CustomValidators.date]],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"startDate\", \"endDate\"),\r\n      }\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.hasUpdate);\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {\r\n  //   if (this.dataSource?.data?.length > 0)\r\n  //     this.dataSource = new MatTableDataSource(null);\r\n  //   if (this.checkNoBusinessOrCompany()) {\r\n  //     if (this.employeeInstanceId > 0) this.getList(this.firstPage);\r\n  //   }\r\n  // }\r\n\r\n  // getList(page: number, pageSize?: number) {\r\n  //   this.page.pageIndex = page;\r\n  //   if (pageSize) this.page.dialogSize = pageSize;\r\n  //   let params: IPageParams = {\r\n  //     PageNumber: page,\r\n  //     pageSize: this.page.dialogSize,\r\n  //   };\r\n  //   this.empWorkExperienceService\r\n  //     .getList(this.employeeInstanceId, params)\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponseList<IEmpWorkExperienceModel[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.dataSource = new MatTableDataSource(empCareerDisplay(res.data));\r\n  //         this.page.length = res.meta.totalItemCount;\r\n  //         this.isLoaded = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //     });\r\n  // }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpWorkExperienceRequest = {\r\n        WorkExperience: {\r\n          person_Instance_ID: this.employeeInstanceId,\r\n          id: this.form.value.id,\r\n          companyName: this.form.value.companyName,\r\n          org_Name: this.form.value.department,\r\n          job_Title_Name: this.form.value.position,\r\n          from_Date: HelpersFunctions.mapDateReverse(this.form.value.startDate),\r\n          to_Date: HelpersFunctions.mapDateReverse(this.form.value.endDate),\r\n        },\r\n      };\r\n\r\n      model.WorkExperience.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpWorkExperienceRequest) {\r\n    this.showLoading();\r\n    this.empWorkExperienceService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmpWorkExperienceModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.firstPage);\r\n          this.hasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmpWorkExperienceRequest) {\r\n    this.showLoading();\r\n    this.empWorkExperienceService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmpWorkExperienceModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeWorkExperienceToEdit(empWork: IEmpWorkExperienceDisplay) {\r\n    this.form.patchValue(empWork);\r\n    this.formCtrls.startDate.setValue(empWork.from_Date);\r\n    this.formCtrls.endDate.setValue(empWork.to_Date);\r\n    // console.log(\"empWork\", empWork);\r\n    // console.log(\"form\", this.form.value);\r\n  }\r\n\r\n  // onDelete(empWork: IEmpWorkExperienceDisplay): void {\r\n  //   let msg = this.msgTranslate(empWork.companyName);\r\n  //   this.deleteDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(empWork);\r\n  //   });\r\n  // }\r\n\r\n  // delete(empWork: IEmpWorkExperienceDisplay) {\r\n  //   this.showLoading();\r\n  //   this.empWorkExperienceService\r\n  //     .Delete(empWork.id)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n  //           // if last item in list: get previous page\r\n  //           this.getList(this.prevPage, this.page.dialogSize);\r\n  //         } else {\r\n  //           // if not last item in list: get current page\r\n  //           this.getList(this.currentPage, this.page.dialogSize);\r\n  //         }\r\n  //         this.hasUpdate = true;\r\n  //         if (empWork.id == this.formCtrls.id.value) this.clearForm();\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  afterDelete(empWork: IEmpWorkExperienceDisplay) {\r\n    if (empWork.id == this.formCtrls.id.value) this.clearForm();\r\n    if (empWork) this.hasUpdate = true;\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title\r\n      class=\"d-inline-block mtop-5\"\r\n      title=\"workExperience\"\r\n    ></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.companyName\"\r\n          [submitted]=\"submitted\"\r\n          label=\"companyName\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.department\"\r\n          [submitted]=\"submitted\"\r\n          label=\"department\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.position\"\r\n          [submitted]=\"submitted\"\r\n          label=\"position\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.startDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"startDate\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.endDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"endDate\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <!-- <app-material-table\r\n    *ngIf=\"employeeId > 0\"\r\n    [isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [actions]=\"rowFunctions\"\r\n    [page]=\"page\"\r\n    [showFilter]=\"false\"\r\n    [isDialogSize]=\"true\"\r\n    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n    (editRow)=\"employeeWorkExperienceToEdit($event)\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    class=\"table-in-forms\"\r\n  >\r\n  </app-material-table> -->\r\n\r\n  <emp-work-experience-table\r\n    [hasUpdate]=\"hasUpdate\"\r\n    (rowToEdit)=\"employeeWorkExperienceToEdit($event)\"\r\n    (afterDelete)=\"afterDelete($event)\"\r\n  ></emp-work-experience-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empCareerDisplay } from \"app/personnel-setup/mapper/emp-career\";\r\nimport {\r\n  IEmpWorkExperienceDisplay,\r\n  IEmpWorkExperienceModel,\r\n} from \"app/personnel-setup/models/employee-career/emp-work-experience\";\r\nimport { EmpDataTableImplement } from \"app/personnel-setup/models/implements/emp-data-table.implement\";\r\nimport { EmployeeWorkExperienceService } from \"app/personnel-setup/services/employees/career/employee-work-experience.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"emp-work-experience-table\",\r\n  templateUrl: \"./emp-work-experience-table.component.html\",\r\n  styleUrls: [\"./emp-work-experience-table.component.scss\"],\r\n})\r\nexport class EmpWorkExperienceTableComponent\r\n  extends AppHelpers\r\n  implements EmpDataTableImplement, OnChanges\r\n{\r\n  @Input() hasUpdate: boolean;\r\n  @Input() hideActions: boolean = false;\r\n  @Input() isMatPaginator: boolean = false;\r\n  @Output() rowToEdit = new EventEmitter<IEmpWorkExperienceDisplay>();\r\n  @Output() afterDelete = new EventEmitter<IEmpWorkExperienceDisplay>();\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"companyName\",\r\n    \"department\",\r\n    \"position\",\r\n    \"startDate\",\r\n    \"endDate\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpWorkExperienceDisplay>;\r\n  isLoaded: boolean = false;\r\n  employeeInstanceId: number = 0;\r\n\r\n  constructor(private empWorkExperienceService: EmployeeWorkExperienceService) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_work_experience_sec\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasUpdate && this.employeeInstanceId > 0)\r\n      this.getList(this.firstPage);\r\n    if (this.hideActions) {\r\n      let editIndex = this.rowFunctions.basic.findIndex(\r\n        (e) => e.name.toLowerCase() == \"edit\"\r\n      );\r\n      this.rowFunctions.basic.splice(editIndex, 1);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeInstanceId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.empWorkExperienceService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpWorkExperienceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(empCareerDisplay(res.data));\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  toEdit(education: IEmpWorkExperienceDisplay) {\r\n    this.rowToEdit.emit(education);\r\n  }\r\n\r\n  onDelete(empWork: IEmpWorkExperienceDisplay): void {\r\n    let msg = this.msgTranslate(empWork.companyName);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(empWork);\r\n    });\r\n  }\r\n\r\n  delete(empWork: IEmpWorkExperienceDisplay) {\r\n    this.showLoading();\r\n    this.empWorkExperienceService\r\n      .Delete(empWork.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.afterDelete.emit(empWork);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<app-material-table\r\n  *ngIf=\"employeeInstanceId > 0\"\r\n  [isLoaded]=\"isLoaded\"\r\n  [dataSource]=\"dataSource\"\r\n  [mandatoryColomns]=\"mandatoryColomns\"\r\n  [optionalColomns]=\"optionalColomns\"\r\n  [actions]=\"rowFunctions\"\r\n  [isDialogSize]=\"true\"\r\n  [showFilter]=\"false\"\r\n  [page]=\"page\"\r\n  (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n  (editRow)=\"toEdit($event)\"\r\n  (deleteRow)=\"onDelete($event)\"\r\n  class=\"table-in-forms\"\r\n  [isMatPaginator]=\"isMatPaginator\"\r\n  [showFirstLastButtons]=\"false\"\r\n  [showSpaceTop]=\"false\"\r\n>\r\n</app-material-table>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import {Component, EventEmitter, OnInit, Output} from \"@angular/core\";\r\nimport {IEmployee, IEmployeeRequest} from \"app/personnel-setup/models/employees\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport {IGUIModel} from \"app/shared/interfaces/user-views\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\nimport {EmployeeGeneralInfoDialogComponent} from \"../emp-general-info-dialog/emp-general-info-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"employee-general-info-card\",\r\n  templateUrl: \"./emp-general-info-card.component.html\",\r\n  styleUrls: [\"./emp-general-info-card.component.scss\"],\r\n})\r\nexport class EmployeeGeneralInfoCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number;\r\n  @Output() changeEmployeeId = new EventEmitter<number>();\r\n  employee: IEmployee;\r\n  isLoaded: boolean = false;\r\n  isCanMadeAction: boolean = false;\r\n  allowedSections: IGUIModel[];\r\n\r\n  constructor(private empGeneralInfoService: EmpGeneralInfoService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.employee = this.empGeneralInfoService.employee$.getValue();\r\n    this.empGeneralInfoService.employee$.subscribe((emp) => {\r\n      this.employee = emp;\r\n      this.isLoadedFun();\r\n    });\r\n    this.isLoadedFun();\r\n  }\r\n\r\n  isLoadedFun() {\r\n    this.isLoaded = false;\r\n    if (this.employee != null && this.employeeId > 0) this.isLoaded = true;\r\n    if (this.employee == null && this.employeeId == 0) this.isLoaded = true;\r\n  }\r\n\r\n  override onModulesChanged() {\r\n    this.allowedSections = this.getCustomViewChildren(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_general_info_tab\r\n    );\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    if (!this.businessCompanyParams.CompanyID) {\r\n      this.warning(\"chooseCompanyId\");\r\n      return;\r\n    }\r\n\r\n    let dialogRef = this.dialogsService.addEditDialog(\r\n      EmployeeGeneralInfoDialogComponent,\r\n      this.employee\r\n    );\r\n\r\n    // let dialogRef = this.dialog.open(EmployeeGeneralInfoDialogComponent, {\r\n    // \tdata: {\r\n    // \t\temployee: this.employee,\r\n    // \t},\r\n    // \tposition: {\r\n    // \t\ttop: \"40px\",\r\n    // \t},\r\n    // \tminWidth: \"600px\",\r\n    // \tpanelClass: \"dialog-emp-form\",\r\n    // \tautoFocus: false,\r\n    // });\r\n    //\tafter add employee\r\n    // dialogRef.componentInstance.afterAdd.subscribe((employeeInfo: IEmployee) => {\r\n    // \tthis.changeEmployeeId.emit(employeeInfo.person.id);\r\n    // \tlet url = `/personnel-setup/${this.moduleId}/employees/edit/${employeeInfo.person.id}`;\r\n    // \tthis.navigateTo(url);\r\n    // \tthis.employee = employeeInfo;\r\n    // });\r\n    // after close dialog\r\n    dialogRef.afterClosed().subscribe((res: { isUpdate: boolean; data: IEmployeeRequest }) => {\r\n      if (res && res.isUpdate) {\r\n        // update case\r\n        //\tthis.empGeneralInfoService.getEmployeeShared(this.employeeId);\r\n      } else if (res && !res.isUpdate) {\r\n        // create case : Go tO update\r\n        let url = `/personnel-setup/${this.moduleId}/employees/edit/${res.data.person.id}`;\r\n        this.router.navigate([url], {queryParams: this.parentParam});\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"card-view\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <!-- [canMadeAction]=\"isCanMadeAction\" -->\r\n  <card-header [isEdit]=\"employeeId\"\r\n               cardTitle=\"generalInfo\"\r\n               [isLoaded]=\"isLoaded\"\r\n               (onClickIcon)=\"openAddEditDialog()\">\r\n  </card-header>\r\n\r\n\r\n  <div class=\"view-data-row-container mtop-20\">\r\n\r\n    <card-row-item class=\"w-20\" label=\"employeeCode\" [value]=\"employee?.person?.code\"></card-row-item>\r\n\r\n\r\n    <card-row-item class=\"w-20\" label=\"ar_Name\" [value]=\"employee?.person?.ar_Name\"></card-row-item>\r\n\r\n\r\n    <card-row-item class=\"w-20\" label=\"en_Name\" [value]=\"employee?.person?.en_Name\"></card-row-item>\r\n\r\n\r\n    <card-row-item class=\"w-20\" label=\"nationalid\" [value]=\"employee?.person?.nationalid\"></card-row-item>\r\n    <card-row-item class=\"w-20\" label=\"companyCode\" [value]=\"employee?.companyCode\"></card-row-item>\r\n\r\n\r\n  </div>\r\n\r\n  <div class=\"view-data-row-container mt-3\">\r\n\r\n    <card-row-item class=\"w-20\" label=\"hireDate\" [value]=\"employee?.person?.hireDate\" [isDate]=\"true\">\r\n    </card-row-item>\r\n\r\n    <card-row-item class=\"w-20\"\r\n                   label=\"gender\"\r\n                   [value]=\"\r\n\t\t\t\tmsgTranslate(employee?.person?.core_Gender?.ar_Name, employee?.person?.core_Gender?.en_NAme)\r\n\t\t\t\">\r\n    </card-row-item>\r\n\r\n    <card-row-item class=\"w-20\"\r\n                   label=\"religion\"\r\n                   [value]=\"\r\n\t\t\t\tmsgTranslate(\r\n\t\t\t\t\temployee?.person?.core_Religion?.ar_Name,\r\n\t\t\t\t\temployee?.person?.core_Religion?.en_Name\r\n\t\t\t\t)\r\n\t\t\t\">\r\n    </card-row-item>\r\n\r\n    <card-row-item class=\"w-20\"\r\n                   label=\"nationality\"\r\n                   [value]=\"msgTranslate(employee?.nationality?.ar_Name, employee?.nationality?.en_NAme)\">\r\n\r\n    </card-row-item>\r\n\r\n    <card-row-item class=\"w-20\" label=\"SharedCompanies\" [displayPlaceholder]=\"false\">\r\n      <ng-container *ngIf=\"employee?.sharedCompanies; else emptyCompanies\">\r\n\t\t\t\t<span *ngFor=\"let company of employee.sharedCompanies; let last = last\">\r\n\t\t\t\t\t{{ msgTranslate(company?.core_Company.ar_Name, company?.core_Company?.en_Name) }}\r\n          <span *ngIf=\"!last\"> - </span>\r\n\t\t\t\t</span>\r\n      </ng-container>\r\n      <ng-template #emptyCompanies> ---</ng-template>\r\n    </card-row-item>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton [rowNo]=\"8\"></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { IGUIModel } from \"app/shared/interfaces/user-views\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"emp-general-info-core\",\r\n\ttemplateUrl: \"./emp-general-info-core.component.html\",\r\n\tstyleUrls: [\"./emp-general-info-core.component.scss\"],\r\n})\r\nexport class EmpGeneralInfoCoreComponent extends AppHelpers implements OnInit {\r\n\t@Input() icon: string;\r\n\tallowedSections: IGUIModel[];\r\n\tviewsManager = ViewsManager;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit(): void {}\r\n\r\n\toverride onModulesChanged() {\r\n\t\tthis.allowedSections = this.getCustomViewChildren(\r\n\t\t\tthis.getParentViewName,\r\n\t\t\tViewsManager.emp_general_info_tab\r\n\t\t);\r\n\t}\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n<!--      <mat-card-title>-->\r\n<!--        <page-title title=\"generalInfo\" [icon]=\"icon\" color=\"info\"></page-title>-->\r\n<!--      </mat-card-title>-->\r\n\r\n      <mat-card-content class=\"container-fluid p-0\">\r\n        <div class=\"row mx-md-n2\">\r\n          <!-- personal-info  -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_general_info_sec)\">\r\n            <employee-general-info-card></employee-general-info-card>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { employeeToMap } from \"app/personnel-setup/mapper/employee\";\r\nimport { IEmployeeCardModel } from \"app/personnel-setup/models/employees\";\r\nimport { EmployeesService } from \"app/personnel-setup/services/employees/employees.service\";\r\nimport { IMergeImgWithColumnData } from \"app/shared/components/resources/material-table/material-table.component\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-employees-index\",\r\n  templateUrl: \"./employees-index.component.html\",\r\n  styleUrls: [\"./employees-index.component.scss\"],\r\n})\r\nexport class EmployeesIndexComponent extends AppHelpers implements OnInit {\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"code\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  optionalColomns: string[] = [\r\n    \"jobTitleName\",\r\n    \"organization\",\r\n    \"email\",\r\n    \"status\",\r\n    \"statusProperty\",\r\n    \"address\",\r\n    \"contact\",\r\n    \"isActive\",\r\n  ];\r\n\r\n  // rowFunctionsMap: IRowActionsModel;\r\n  dataSource: MatTableDataSource<IEmployeeCardModel>;\r\n  isLoaded: boolean = false;\r\n\r\n  simpleSearchForm: FormGroup;\r\n  advancedSearchForm: FormGroup;\r\n\r\n  constructor(public employeesService: EmployeesService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n    this.simpleSearchForm = this.fb.group({\r\n      employeeId: [null],\r\n      orgTypeId: [null],\r\n      orgId: [null],\r\n    });\r\n\r\n    this.advancedSearchForm = this.fb.group({\r\n      name: [null],\r\n      operator: [null],\r\n      value: [null],\r\n    });\r\n  }\r\n\r\n  get simpleSearchFormCtrls() {\r\n    return this.simpleSearchForm.controls;\r\n  }\r\n\r\n  get advancedSearchFormCtrls() {\r\n    return this.advancedSearchForm.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany())\r\n      this.getList(this.pageFromUrl > 0 ? this.pageFromUrl : this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.isLoaded = false;\r\n    this.removePageParams();\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.employeesService\r\n      .getListCard(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeCardModel[]>) => {\r\n        if (res.message.messageType == 1) {\r\n          if (res.data.length == 0 && page > 1) {\r\n            this.getList(this.prevPage);\r\n            return;\r\n          }\r\n          this.dataSource = new MatTableDataSource(employeeToMap(res.data));\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  onDelete(employee: IEmployeeCardModel): void {\r\n    let msg = this.msgTranslate(employee.ar_Name, employee.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employee);\r\n    });\r\n  }\r\n\r\n  delete(employee: IEmployeeCardModel) {\r\n    this.showLoading();\r\n    this.employeesService.Delete(employee.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == 1) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        }\r\n        else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n      }\r\n      else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  //////////// search\r\n  onAction(selectedAction) {\r\n    // console.log(selectedAction);\r\n    if (selectedAction?.name == \"simpleSearch\") this.toggleSimpleSearchPanel();\r\n    if (selectedAction?.name == \"advancedSearch\") this.toggleAdvancedSearchPanel();\r\n  }\r\n\r\n  // collapsed --> true >> closed & false >> opened\r\n  isSimpleExpanded: boolean = true;\r\n\r\n  toggleSimpleSearchPanel() {\r\n    this.isAdvancedExpanded = true;\r\n    this.isSimpleExpanded = !this.isSimpleExpanded;\r\n  }\r\n\r\n  isAdvancedExpanded: boolean = true;\r\n\r\n  toggleAdvancedSearchPanel() {\r\n    this.isSimpleExpanded = true;\r\n    this.isAdvancedExpanded = !this.isAdvancedExpanded;\r\n  }\r\n\r\n  mergingTableColumn: IMergeImgWithColumnData = {\r\n    isMerge: true,\r\n    columnImgName: \"img\",\r\n    columnTextName: \"en_Name\",\r\n  };\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"index-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          title=\"employees\"\r\n          [globalFunctions]=\"globalFunctions\"\r\n          (action)=\"onAction($event)\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <!-- simple search inputs -->\r\n      <p-panel\r\n        [toggleable]=\"true\"\r\n        [showHeader]=\"false\"\r\n        [collapsed]=\"isSimpleExpanded\"\r\n      >\r\n        <ng-template pTemplate=\"content\">\r\n          <form [formGroup]=\"simpleSearchForm\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <app-employee-dropdown\r\n                  [control]=\"simpleSearchFormCtrls.employeeId\"\r\n                  [filter]=\"true\"\r\n                >\r\n                </app-employee-dropdown>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\">\r\n                <app-input\r\n                  [control]=\"simpleSearchFormCtrls.orgTypeId\"\r\n                  label=\"org\"\r\n                ></app-input>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\">\r\n                <app-input\r\n                  [control]=\"simpleSearchFormCtrls.orgId\"\r\n                  label=\"org\"\r\n                ></app-input>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <button\r\n            mat-raised-button\r\n            class=\"btn bg-light-secondary float-right btn-sm\"\r\n          >\r\n            {{ \"clear\" | translate }}\r\n          </button>\r\n\r\n          <button\r\n            mat-raised-button\r\n            class=\"btn btn-info bg-light-info float-right mx-2 btn-sm\"\r\n          >\r\n            {{ \"General.search\" | translate }}\r\n          </button>\r\n\r\n          <div class=\"clearfix\"></div>\r\n        </ng-template>\r\n      </p-panel>\r\n\r\n      <!-- advanced search inputs -->\r\n      <p-panel\r\n        [toggleable]=\"true\"\r\n        [showHeader]=\"false\"\r\n        [collapsed]=\"isAdvancedExpanded\"\r\n      >\r\n        <ng-template pTemplate=\"content\">\r\n          <p>advanced</p>\r\n        </ng-template>\r\n      </p-panel>\r\n\r\n      <!-- (editRow)=\"employeeToEdit($event)\" -->\r\n      <app-material-table [isRowClickable]=\"false\"\r\n                          [isLoaded]=\"isLoaded\"\r\n                          [dataSource]=\"dataSource\"\r\n                          [mandatoryColomns]=\"mandatoryColomns\"\r\n                          [optionalColomns]=\"optionalColomns\"\r\n                          [page]=\"page\"\r\n                          [actions]=\"rowFunctions\"\r\n                          [exportService]=\"employeesService\"\r\n                          [mergeImgWithName]=\"mergingTableColumn\"\r\n                          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                          (deleteRow)=\"onDelete($event)\">\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n\r\n<side-helping-menu title=\"Employee dashboard\" subTitle=\"employee reports & employee dashboard\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <button class=\"btn btn-darkBlue\"> reports</button>\r\n    </div>\r\n    <div class=\"col\">\r\n      <button class=\"btn btn-outline-secondary\"> dashboard</button>\r\n    </div>\r\n  </div>\r\n</side-helping-menu>\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {EmpCustodiesDialogComponent} from \"../emp-custodies-dialog/emp-custodies-dialog.component\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {IEmpCustodyModel} from \"app/personnel-setup/models/emp-employment-info/custodies\";\r\nimport {\r\n  EmployeeCustodiesService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-custodies.service\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport {empCustodyDisplay} from \"app/personnel-setup/mapper/emp-employment\";\r\n\r\n@Component({\r\n  selector: \"app-emp-custodies-card\",\r\n  templateUrl: \"./emp-custodies-card.component.html\",\r\n  styleUrls: [\"./emp-custodies-card.component.scss\"],\r\n})\r\nexport class EmpCustodiesCardComponent extends AppHelpers implements OnInit {\r\n  // employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  custodies: IEmpCustodyModel[];\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private employeeCustodiesService: EmployeeCustodiesService) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getAllByEmployeeId();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.custodies = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllByEmployeeId();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAllByEmployeeId() {\r\n    this.custodies = null;\r\n    this.employeeCustodiesService\r\n      .getAll(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpCustodyModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // show only first three custodies\r\n          this.custodies = empCustodyDisplay(res.data.slice(0, 3));\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpCustodiesDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAllByEmployeeId();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"custodies?.length\"\r\n    cardTitle=\"custodies\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <ng-container *ngIf=\"custodies?.length > 0; else noData\">\r\n      <card-row-item\r\n        *ngFor=\"let custody of custodies\"\r\n        [label]=\"custody.custodies\"\r\n        [value]=\"custody.date\"\r\n      ></card-row-item>\r\n    </ng-container>\r\n\r\n    <ng-template #noData>\r\n      <card-row-item label=\"custodies\" [value]=\"null\"></card-row-item>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"2\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empCustodyDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {\r\n  IEmpCustodyModel,\r\n  IEmpCustodyRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/custodies\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeCustodiesService } from \"app/personnel-setup/services/employees/employement-information/employee-custodies.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-emp-custodies-dialog\",\r\n  templateUrl: \"./emp-custodies-dialog.component.html\",\r\n  styleUrls: [\"./emp-custodies-dialog.component.scss\"],\r\n})\r\nexport class EmpCustodiesDialogComponent extends AppHelpers implements OnInit {\r\n  // employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  updated: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"custodies\",\r\n    \"froM_DATE\",\r\n    \"endDate\",\r\n    \"notes\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpCustodyModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private employeeCustodiesService: EmployeeCustodiesService,\r\n    public dialogRef: MatDialogRef<EmpCustodiesDialogComponent>\r\n  ) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_custodies_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, { nonNullable: true }],\r\n        covenantId: [null, [Validators.required]],\r\n        froM_DATE: [null, [Validators.required]],\r\n        endDate: [null/* , [Validators.required] */],\r\n        notes: [null],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"froM_DATE\", \"endDate\"),\r\n      }\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.updated);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeInstanceId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeCustodiesService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpCustodyModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(empCustodyDisplay(res.data));\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpCustodyRequest = {\r\n        EmployeeData: {\r\n          PersonInstanceId: this.employeeInstanceId,\r\n          ID: this.form.value.id,\r\n          CovenantId: this.form.value.covenantId,\r\n          FromDate: HelpersFunctions.mapDateReverse(this.form.value.froM_DATE),\r\n          ToDate: HelpersFunctions.mapDateReverse(this.form.value.endDate),\r\n          Notes: this.form.value.notes,\r\n        },\r\n      };\r\n\r\n      model.EmployeeData.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpCustodyRequest) {\r\n    this.showLoading();\r\n    this.employeeCustodiesService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmpCustodyModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmpCustodyRequest) {\r\n    this.showLoading();\r\n    this.employeeCustodiesService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmpCustodyModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeCustodyToEdit(employeeCustodyInfo: IEmpCustodyModel) {\r\n    this.form.patchValue(employeeCustodyInfo);\r\n    this.formCtrls.froM_DATE.setValue(employeeCustodyInfo.fromDate);\r\n    this.formCtrls.endDate.setValue(employeeCustodyInfo.toDate);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(employeeCustodyInfo: IEmpCustodyModel): void {\r\n    let msg = employeeCustodyInfo.custodies;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employeeCustodyInfo);\r\n    });\r\n  }\r\n\r\n  delete(employeeCustodyInfo: IEmpCustodyModel) {\r\n    this.showLoading();\r\n    this.employeeCustodiesService\r\n      .Delete(employeeCustodyInfo.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.updated = true;\r\n          if (employeeCustodyInfo.id == this.formCtrls.id.value)\r\n            this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"custodies\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-custodies-by-employee-dropdown\r\n          [control]=\"formCtrls.covenantId\"\r\n          [employeeInstanceId]=\"employeeInstanceId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-custodies-by-employee-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.froM_DATE\"\r\n          [submitted]=\"submitted\"\r\n          label=\"froM_DATE\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.endDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"endDate\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.notes\"\r\n          [submitted]=\"submitted\"\r\n          label=\"notes\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    >\r\n\r\n    </reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeCustodyToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { empHiringDocumentDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {\r\n  IEmpHiringDocumentDisplayModel,\r\n  IEmpHiringDocumentModel,\r\n} from \"app/personnel-setup/models/emp-employment-info/hiring-documents\";\r\nimport { EmployeeHiringDocumentService } from \"app/personnel-setup/services/employees/employement-information/employee-hiring-document.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmpHiringDocumentsDialogComponent } from \"../emp-hiring-documents-dialog/emp-hiring-documents-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"emp-hiring-documents-card\",\r\n  templateUrl: \"./emp-hiring-documents-card.component.html\",\r\n  styleUrls: [\"./emp-hiring-documents-card.component.scss\"],\r\n})\r\nexport class EmpHiringDocumentsCardComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeInstanceId: number = 0;\r\n  hiringDocuments: IEmpHiringDocumentDisplayModel[];\r\n  docCompletePercentage: number = 0;\r\n\r\n  isLoaded: boolean = false;\r\n  isLoadedPercentage: boolean = false;\r\n\r\n  constructor(\r\n    private employeeHiringDocumentService: EmployeeHiringDocumentService\r\n  ) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.isLoadedPercentage = false;\r\n        this.getAll();\r\n        this.getPercentage();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.hiringDocuments = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.getAll();\r\n      this.getPercentage();\r\n    } else {\r\n      this.isLoaded = true;\r\n      this.isLoadedPercentage = true;\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.hiringDocuments = null;\r\n    this.employeeHiringDocumentService\r\n      .getAll(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpHiringDocumentModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // get last three documents\r\n          this.hiringDocuments = empHiringDocumentDisplay(\r\n            res.data.length > 3 ? res.data.slice(-3) : res.data\r\n          );\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  getPercentage() {\r\n    this.docCompletePercentage = 0;\r\n    this.employeeHiringDocumentService\r\n      .getCard(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<number>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.docCompletePercentage = res.data;\r\n          this.isLoadedPercentage = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpHiringDocumentsDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.isLoadedPercentage = false;\r\n          this.getAll();\r\n          this.getPercentage();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded && isLoadedPercentage; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"hiringDocuments?.length\"\r\n    cardTitle=\"hiringDocuments\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <ng-container *ngIf=\"hiringDocuments?.length > 0; else noData\">\r\n      <div class=\"rowItem\" *ngFor=\"let hiringDocument of hiringDocuments\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <p>{{ hiringDocument?.documentName | titlecase }}</p>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <p *ngIf=\"hiringDocument?.attachmentID > 0; else noAttach\">\r\n              <i\r\n                class=\"fas fa-cloud-download-alt font-size-20 icon-lightGreen\"\r\n                (click)=\"\r\n                  fileService.downloadFromServer(hiringDocument.attachmentID)\r\n                \"\r\n              >\r\n              </i>\r\n            </p>\r\n            <ng-template #noAttach> --- </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-template #noData>\r\n      <card-row-item label=\"hiringDocuments\" [value]=\"null\"></card-row-item>\r\n    </ng-template>\r\n\r\n    <card-row-item\r\n      label=\"documentsCompletionPercentage\"\r\n      [value]=\"docCompletePercentage + '%'\"\r\n    ></card-row-item>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"4\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empHiringDocumentDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {\r\n  IEmpHiringDocumentAddRequest,\r\n  IEmpHiringDocumentDeleteRequest,\r\n  IEmpHiringDocumentDisplayModel,\r\n  IEmpHiringDocumentEditRequest,\r\n  IEmpHiringDocumentModel,\r\n  IEmpHiringDocumentRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/hiring-documents\";\r\nimport { EmployeeHiringDocumentService } from \"app/personnel-setup/services/employees/employement-information/employee-hiring-document.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { RadioButtonModel } from \"app/shared/components/resources/dynamic-form-field/radio-button/radio-button.component\";\r\nimport { IAttachIconColumnData } from \"app/shared/components/resources/material-table/material-table.component\";\r\nimport { EEmpHireDocType } from \"app/shared/enums/emp-hire-doc-type.enum\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IFileData } from \"app/shared/interfaces/files\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"emp-hiring-documents-dialog\",\r\n  templateUrl: \"./emp-hiring-documents-dialog.component.html\",\r\n  styleUrls: [\"./emp-hiring-documents-dialog.component.scss\"],\r\n})\r\nexport class EmpHiringDocumentsDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeInstanceId: number = 0;\r\n  updated: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"documentName\",\r\n    \"attachmentType\",\r\n    \"attachment\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpHiringDocumentDisplayModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  removeFiles: boolean = false;\r\n\r\n  selectedAttachmentTypeId: number = 0;\r\n  selectedis_Attached: number = 0;\r\n\r\n  constructor(\r\n    private employeeHiringDocumentService: EmployeeHiringDocumentService,\r\n    public dialogRef: MatDialogRef<EmpHiringDocumentsDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_hiring_documents_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      att_Type_ID: [null, [Validators.required]],\r\n      file: [null /* , [Validators.required] */],\r\n      is_Attached: [EEmpHireDocType.attached, [Validators.required]],\r\n      attachmentID: [null],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.updated);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeHiringDocumentService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpHiringDocumentModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          let mapedData = empHiringDocumentDisplay(res.data);\r\n          mapedData.forEach(\r\n            (ele) => (ele.attachmentType = this.translate(ele.attachmentType))\r\n          );\r\n          this.dataSource = new MatTableDataSource(mapedData);\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    this.removeFiles = false;\r\n    if (this.form.valid) {\r\n      const model: IEmpHiringDocumentRequest = {\r\n        Person_Instance_ID: this.employeeInstanceId,\r\n        files: this.form.value.file,\r\n        Is_Attached: this.form.value.is_Attached,\r\n      };\r\n\r\n      this.formCtrls.id.value == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpHiringDocumentRequest) {\r\n    let addModel: IEmpHiringDocumentAddRequest = {\r\n      ...model,\r\n      Attachment_Type_ID: this.form.value.att_Type_ID,\r\n    };\r\n    let formData = HelpersFunctions.objectToFormData(addModel);\r\n\r\n    this.showLoading();\r\n    this.employeeHiringDocumentService\r\n      .create(formData)\r\n      .subscribe((res: IResponse<IEmpHiringDocumentModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmpHiringDocumentRequest) {\r\n    if (this.formCtrls.file.value?.id > 0) model.files = null;\r\n\r\n    let editModel: IEmpHiringDocumentEditRequest = {\r\n      ...model,\r\n      Att_Type_ID: this.form.value.att_Type_ID,\r\n      AttachmentID:\r\n        this.selectedis_Attached != model.Is_Attached\r\n          ? this.form.value.attachmentID\r\n          : 0,\r\n      Att_Type_ID_Old: this.selectedAttachmentTypeId,\r\n    };\r\n    let formData = HelpersFunctions.objectToFormData(editModel);\r\n\r\n    this.showLoading();\r\n    this.employeeHiringDocumentService\r\n      .update(formData)\r\n      .subscribe((res: IResponse<IEmpHiringDocumentModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n          this.selectedAttachmentTypeId = 0;\r\n          this.selectedis_Attached = 0;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeHiringDocumentToEdit(hiringDocument: IEmpHiringDocumentDisplayModel) {\r\n    this.form.patchValue(hiringDocument);\r\n\r\n    if (hiringDocument.attachmentID) {\r\n      // get file size && type\r\n      this.showLoading();\r\n      this.fileService\r\n        .downloadByAttachId(hiringDocument.attachmentID)\r\n        .subscribe((res) => {\r\n          let file: IFileData = {\r\n            id: hiringDocument.attachmentID,\r\n            path: hiringDocument.attachment,\r\n            name: \"\",\r\n            type: res.type,\r\n            size: res.size,\r\n          };\r\n          this.formCtrls.file.setValue(file);\r\n          this.hideLoading();\r\n        });\r\n    } else this.formCtrls.file.setValue(null);\r\n\r\n    // not real id >> only to detect edit mode\r\n    this.formCtrls.id.setValue(hiringDocument.att_Type_ID);\r\n    // to use in edit request\r\n    this.selectedAttachmentTypeId = hiringDocument.att_Type_ID;\r\n    this.selectedis_Attached = hiringDocument.is_Attached;\r\n  }\r\n\r\n  onDelete(hiringDocument: IEmpHiringDocumentDisplayModel): void {\r\n    let msg = hiringDocument.documentName;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(hiringDocument);\r\n    });\r\n  }\r\n\r\n  delete(hiringDocument: IEmpHiringDocumentDisplayModel) {\r\n    let deleteParams: IEmpHiringDocumentDeleteRequest = {\r\n      perInsId: this.employeeInstanceId,\r\n      DocTypeId: hiringDocument.att_Type_ID,\r\n      AttachmentID: hiringDocument.attachmentID,\r\n    };\r\n\r\n    this.showLoading();\r\n    this.employeeHiringDocumentService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.updated = true;\r\n          if (\r\n            hiringDocument.att_Type_ID == this.selectedAttachmentTypeId &&\r\n            // if edit\r\n            this.formCtrls.id.value > 0\r\n          )\r\n            this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  deleteFile(file: IFileData) {\r\n    this.showLoading();\r\n    this.employeeHiringDocumentService\r\n      .DeleteFile(this.employeeInstanceId, file.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.formCtrls.file.reset();\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0, is_Attached: EEmpHireDocType.attached });\r\n    this.submitted = false;\r\n    this.removeFiles = true;\r\n  }\r\n\r\n  attachIconColumnData: IAttachIconColumnData = {\r\n    columnName: \"attachment\",\r\n    icon: \"fas fa-file-alt\",\r\n  };\r\n\r\n  hireDocType = EEmpHireDocType;\r\n  hireDocTypeRadioList: RadioButtonModel[] = [\r\n    {\r\n      value: EEmpHireDocType.attached,\r\n      label: EEmpHireDocType.getValue(EEmpHireDocType.attached),\r\n      cssClass: \"col-md-4 col-sm-6 col-12\",\r\n    },\r\n    {\r\n      value: EEmpHireDocType.handDelivery,\r\n      label: EEmpHireDocType.getValue(EEmpHireDocType.handDelivery),\r\n      cssClass: \"col-md-4 col-sm-6 col-12\",\r\n    },\r\n    {\r\n      value: EEmpHireDocType.notNeed,\r\n      label: EEmpHireDocType.getValue(EEmpHireDocType.notNeed),\r\n      cssClass: \"col-md-4 col-sm-6 col-12\",\r\n    },\r\n  ];\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title\r\n      class=\"d-inline-block mtop-5\"\r\n      title=\"hiringDocuments\"\r\n    ></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-attachment-types-by-employee-id-dropdown\r\n          [control]=\"formCtrls.att_Type_ID\"\r\n          [employeeInstanceId]=\"employeeInstanceId\"\r\n          [submitted]=\"submitted\"\r\n          label=\"documentName\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-attachment-types-by-employee-id-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <app-radio-button\r\n          [control]=\"formCtrls.is_Attached\"\r\n          [radioList]=\"hireDocTypeRadioList\"\r\n          [submitted]=\"submitted\"\r\n          class=\"mtop-14\"\r\n        ></app-radio-button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"col-12\"\r\n        *ngIf=\"formCtrls.is_Attached.value == hireDocType.attached\"\r\n      >\r\n        <primeng-file-upload\r\n          [control]=\"formCtrls.file\"\r\n          [submitted]=\"submitted\"\r\n          [multiple]=\"false\"\r\n          [isEdit]=\"formCtrls.id.value > 0\"\r\n          [removeFiles]=\"removeFiles\"\r\n          (ondelete)=\"deleteFile($event)\"\r\n        ></primeng-file-upload>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeHiringDocumentToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      [attachIconColumnData]=\"attachIconColumnData\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IPersonInstanceOrg } from \"app/org-management/model/org-structure\";\r\nimport { empAssignManagerDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {\r\n  IEmpAssignManagerDeleteRequest,\r\n  IEmpAssignManagerDisplayModel,\r\n  IEmpAssignManagerModel,\r\n  IEmpAssignManagerRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/assign-as-org-manager\";\r\nimport { EmployeeAssignAsOrgManagerService } from \"app/personnel-setup/services/employees/employement-information/employee-assign-as-org-manager.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-assign-as-org-manager-dialog\",\r\n  templateUrl: \"./assign-as-org-manager-dialog.component.html\",\r\n  styleUrls: [\"./assign-as-org-manager-dialog.component.scss\"],\r\n})\r\nexport class AssignAsOrgManagerDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"employee\",\r\n    \"startDate\",\r\n    \"endDate\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpAssignManagerDisplayModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private EmployeeAssignAsOrgManagerService: EmployeeAssignAsOrgManagerService,\r\n    @Inject(MAT_DIALOG_DATA) public org: IPersonInstanceOrg,\r\n    public dialogRef: MatDialogRef<AssignAsOrgManagerDialogComponent>\r\n  ) {\r\n    super();\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_job_info_assign_manager_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNullable: true }],\r\n      from_Date: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n\r\n    if (this.checkNoBusinessOrCompany() && this.org.person_Instance_ID > 0) {\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) {\r\n      this.page.dialogSize = pageSize;\r\n    }\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.EmployeeAssignAsOrgManagerService.getList(\r\n      // this.org.person_Instance_ID,\r\n      this.org.core_Org?.id,\r\n      params\r\n    )\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpAssignManagerModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empAssignManagerDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpAssignManagerRequest = {\r\n        Person_Instance_ID: this.org.person_Instance_ID,\r\n        Person_Instance_Org_ID: this.org.id,\r\n        From_Date: HelpersFunctions.mapDateReverse(this.form.value.from_Date),\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpAssignManagerRequest) {\r\n    this.showLoading();\r\n    this.EmployeeAssignAsOrgManagerService.create(model).subscribe(\r\n      (res: IResponse<IEmpAssignManagerModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.firstPage);\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onDelete(manager: IEmpAssignManagerDisplayModel): void {\r\n    let msg = `${manager.employee} (${manager.startDate} - ${manager.endDate})`;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(manager);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(manager: IEmpAssignManagerDisplayModel) {\r\n    let deleteParams: IEmpAssignManagerDeleteRequest = {\r\n      prtid: manager.person_Instance_ID,\r\n      orgperid: manager.person_Instance_Org_ID,\r\n      fromdate: HelpersFunctions.mapDateReverse(manager.from_Date),\r\n    };\r\n    this.showLoading();\r\n    this.EmployeeAssignAsOrgManagerService.Delete(deleteParams).subscribe(\r\n      (res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          // this.isUpdated(true);\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset(/* { id: 0 } */);\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title\r\n      class=\"d-inline-block mtop-5\"\r\n      title=\"assignManager\"\r\n    ></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 bg-light-danger mr-1\"\r\n    mat-dialog-close\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\">\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-6 col-4\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.from_Date\"\r\n          [submitted]=\"submitted\"\r\n          label=\"date\">\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-4\">\r\n        <submit-btn (onClick)=\"submit()\"\r\n                    [color]=\"btn.darkBlue\"\r\n                    class=\"btn-large mt-1 line-height-3\">\r\n\r\n        </submit-btn>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <!--  <div class=\"emp-form-btns-float\">-->\r\n  <!--    <submit-btn (onClick)=\"submit()\" color=\"btn-lightGreen\"></submit-btn>-->\r\n  <!--    <div class=\"clearfix\"></div>-->\r\n  <!--  </div>-->\r\n  <mat-divider></mat-divider>\r\n  <app-material-table [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      [showSpaceTop]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n","import { Component, Inject } from \"@angular/core\";\nimport { IEmployeeJobTitleModel } from \"app/org-management/model/job-title\";\nimport { ICloseEmpStatusModel } from \"app/personnel-setup/models/employee-employment-info\";\nimport { IResponse } from \"app/shared/interfaces/responces\";\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\nimport {\n  EmployeeJobInformationService\n} from \"app/personnel-setup/services/employees/employement-information/employee-job-information.service\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\n\n@Component({\n  selector: \"app-close-job-dialog\",\n  templateUrl: \"./close-job-dialog.component.html\",\n  styleUrls: [\"./close-job-dialog.component.scss\"]\n})\nexport class CloseJobDialogComponent extends AppHelpers {\n  CloseDate = new FormControl(\"\", Validators.required);\n  submitted: boolean = false;\n\n  constructor(private employeeJobInfoService: EmployeeJobInformationService,\n              private dialogRef: MatDialogRef<CloseJobDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public job: IEmployeeJobTitleModel) {\n    super();\n  }\n\n\n  submit() {\n    this.submitted = true;\n    if (this.CloseDate.valid) {\n      this.showLoading();\n      let params: ICloseEmpStatusModel = {\n        Employee_Job_Title_ID: this.job?.id,\n        CloseDate: HelpersFunctions.transformData(this.CloseDate.value)\n      };\n      this.employeeJobInfoService\n        .close(params)\n        .subscribe((res: IResponse) => {\n          if (res.message.messageType == MessageTypes.Success) {\n            this.success(res?.message?.messageTypeName);\n            this.CloseDate.reset();\n            this.submitted = false;\n            this.dialogRef.close();\n          } else {\n            this.errorList(res.message.messages);\n          }\n          this.hideLoading();\n        });\n    }\n  }\n\n}\n","<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\n  <h4>\n    <page-title class=\"d-inline-block mtop-5\" title=\"close_job\"></page-title>\n    {{ msgTranslate(job?.core_Job_Title?.ar_Name, job?.core_Job_Title?.en_Name) }}\n  </h4>\n  <button mat-icon-button\n          class=\"float-right mb-1 bg-light-danger mr-1\"\n          [mat-dialog-close]=\"false\">\n    <i class=\"pi pi-times\"></i>\n  </button>\n</div>\n\n<mat-dialog-content class=\"container-fluid mx-0 mt-3\">\n  <div class=\"row\">\n    <div class=\"col-md-4 col-5\">\n      <app-datepicker [control]=\"CloseDate\" [submitted]=\"submitted\" label=\"date\">\n      </app-datepicker>\n    </div>\n\n    <div class=\"col-4\">\n      <submit-btn [color]=\"btn.darkBlue\"\n                  label=\"close_job\"\n                  (onClick)=\"submit()\"\n                  class=\"btn-large mt-1 line-height-3 mr-0 ml-0\">\n      </submit-btn>\n    </div>\n  </div>\n\n\n</mat-dialog-content>\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button\n          [mat-dialog-close]=\"false\"\n          class=\"btn btn-light\">\n    {{ \"General.cancel\" | translate }}\n  </button>\n</div>\n\n<ngx-spinner></ngx-spinner>\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  IEmpContractAttachmentParamsRequest,\r\n  IEmpContractDeleteRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/contract\";\r\nimport { EmployeeContractAttachmentService } from \"app/personnel-setup/services/employees/employement-information/employee-contract-attachment.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IFileApiModel, IFileData } from \"app/shared/interfaces/files\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-emp-contract-attachment-section\",\r\n  templateUrl: \"./emp-contract-attachment-section.component.html\",\r\n  styleUrls: [\"./emp-contract-attachment-section.component.scss\"],\r\n})\r\nexport class EmpContractAttachmentSectionComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  @Input() contractId: number;\r\n  // @Output() changUpdated = new EventEmitter<boolean>();\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  files: IFileData[] = [];\r\n  removeFiles: boolean = false;\r\n  addAttachParams: IEmpContractAttachmentParamsRequest;\r\n\r\n  constructor(\r\n    private employeeContractAttachmentService: EmployeeContractAttachmentService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNullable: true }],\r\n      files: [null],\r\n    });\r\n\r\n    this.addAttachParams = {\r\n      ContractID: this.contractId,\r\n    };\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany() && this.contractId > 0) this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.showLoading();\r\n    this.employeeContractAttachmentService\r\n      .getAll(this.contractId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IFileApiModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.files = [];\r\n          res.data.forEach((attach) => {\r\n            this.files.push({\r\n              id: attach.id,\r\n              name: attach.en_Name,\r\n              path: \"/\" + attach.path,\r\n              size: attach.size,\r\n              type: attach.mime,\r\n            });\r\n          });\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    this.removeFiles = false;\r\n    if (this.form.valid) this.showLoading();\r\n  }\r\n\r\n  afterCreate() {\r\n    this.clearForm();\r\n    this.getAll();\r\n    // this.changUpdated.emit(true);\r\n  }\r\n\r\n  delete(file: IFileData) {\r\n    if (file.id) {\r\n      let deleteParams: IEmpContractDeleteRequest = {\r\n        ContractID: this.contractId,\r\n        AttachmentID: file.id,\r\n      };\r\n\r\n      this.showLoading();\r\n      this.employeeContractAttachmentService\r\n        .Delete(deleteParams)\r\n        .subscribe((res: IResponse) => {\r\n          if (res.message.messageType == MessageTypes.Success) {\r\n            this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n            this.getAll();\r\n            // this.changUpdated.emit(true);\r\n          } else {\r\n            this.errorList(res.message.messages);\r\n            this.hideLoading();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n    this.removeFiles = true;\r\n  }\r\n}\r\n","<div class=\"row mtop-20\">\r\n  <div class=\"col-12\">\r\n    <primeng-file-upload\r\n      [control]=\"formCtrls.files\"\r\n      [submitted]=\"submitted\"\r\n      [multiple]=\"false\"\r\n      [existingFiles]=\"files\"\r\n      [removeFiles]=\"removeFiles\"\r\n      url=\"Personnel/Employees/Create_EmployeeContract_Attachments\"\r\n      [params]=\"addAttachParams\"\r\n      [isFormValid]=\"form.valid\"\r\n      [disabled]=\"!contractId\"\r\n      (onsubmit)=\"submit()\"\r\n      (afterupload)=\"afterCreate()\"\r\n      (ondelete)=\"delete($event)\"\r\n    >\r\n    </primeng-file-upload>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empContractDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {\r\n  IContractModel,\r\n  IEmpContractDetailsRequest,\r\n  IEmpContractDisplayModel,\r\n} from \"app/personnel-setup/models/emp-employment-info/contract\";\r\nimport {\r\n  EmployeeContractDetailsService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-contract-details.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { Idropdown } from \"app/shared/interfaces/dropdown.interface\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"emp-contract-section\",\r\n  templateUrl: \"./emp-contract-section.component.html\",\r\n  styleUrls: [\"./emp-contract-section.component.scss\"],\r\n})\r\nexport class EmpContractDetailsDialogComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  @Output() changUpdated = new EventEmitter<boolean>();\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"contractType\",\r\n    \"contracT_NO\",\r\n    \"start_date\",\r\n    \"end_date\",\r\n    \"autO_RENEWAL\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\r\n    \"autO_Resign\",\r\n    \"include_In_Previous_Duration\",\r\n    \"actual_End_Date\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmpContractDisplayModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  autoRenewalList: Idropdown[] = [\r\n    {\r\n      id: \"null\",\r\n      ar_Name: \"غير محدد\",\r\n      en_Name: \"Not set\",\r\n    },\r\n    {\r\n      id: \"true\",\r\n      ar_Name: \"صحيح\",\r\n      en_Name: \"True\",\r\n    },\r\n    {\r\n      id: \"false\",\r\n      ar_Name: \"خطأ\",\r\n      en_Name: \"False\",\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private employeeContractDetailsService: EmployeeContractDetailsService\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_job_info_contract_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNullable: true}],\r\n        contracT_TYPE_ID: [null, [Validators.required]],\r\n        contracT_NO: [null, [Validators.required]],\r\n        starT_DATE: [null, [Validators.required]],\r\n        enD_DATE: [null, [Validators.required]],\r\n        autO_RENEWAL: [\"false\"],\r\n        autO_Resign: [null],\r\n        include_In_Previous_Duration: [null],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"starT_DATE\", \"enD_DATE\"),\r\n      }\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) {\r\n      this.dataSource = new MatTableDataSource(null);\r\n    }\r\n    if (this.checkNoBusinessOrCompany() && this.employeeId > 0) {\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) {\r\n      this.page.dialogSize = pageSize;\r\n    }\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeContractDetailsService\r\n      .getList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IContractModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empContractDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n          this.hideLoading();\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpContractDetailsRequest = {\r\n        EmployeeData: {\r\n          person_ID: this.employeeId,\r\n          id: this.form.value.id,\r\n          contracT_TYPE_ID: this.form.value.contracT_TYPE_ID,\r\n          contracT_NO: this.form.value.contracT_NO,\r\n          starT_DATE: HelpersFunctions.mapDateReverse(\r\n            this.form.value.starT_DATE\r\n          ),\r\n          enD_DATE: HelpersFunctions.mapDateReverse(this.form.value.enD_DATE),\r\n          autO_RENEWAL:\r\n            this.form.value.autO_RENEWAL == \"null\"\r\n              ? null\r\n              : this.form.value.autO_RENEWAL == \"false\"\r\n                ? false\r\n                : true,\r\n          autO_Resign: this.form.value.autO_Resign ?? false,\r\n          include_In_Previous_Duration:\r\n            this.form.value.include_In_Previous_Duration ?? false,\r\n        },\r\n      };\r\n\r\n      model.EmployeeData.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpContractDetailsRequest) {\r\n    this.showLoading();\r\n    this.employeeContractDetailsService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IContractModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          // this.clearForm();\r\n          this.formCtrls.id.setValue(res.data.id);\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.isUpdated(true);\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      });\r\n  }\r\n\r\n  update(model: IEmpContractDetailsRequest) {\r\n    this.showLoading();\r\n    this.employeeContractDetailsService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IContractModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.isUpdated(true);\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      });\r\n  }\r\n\r\n  employeeContractDetailsToEdit(contract: IEmpContractDisplayModel) {\r\n    this.form.patchValue(contract);\r\n    this.formCtrls.autO_RENEWAL.setValue(String(contract.autO_RENEWAL));\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(contract: IEmpContractDisplayModel): void {\r\n    let msg = `${contract.contractType} -\r\n      ${contract.start_date} -\r\n      ${contract.end_date}`;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(contract);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(contract: IEmpContractDisplayModel) {\r\n    this.showLoading();\r\n    this.employeeContractDetailsService\r\n      .Delete(contract.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.isUpdated(true);\r\n          if (contract.id == this.formCtrls.id.value) {\r\n            this.clearForm();\r\n          }\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0, autO_RENEWAL: \"false\"});\r\n    this.submitted = false;\r\n  }\r\n\r\n  isUpdated(value: boolean) {\r\n    this.changUpdated.emit(value);\r\n  }\r\n}\r\n","<div #dialogContainer class=\"p-1\">\r\n  <mat-card class=\"form-card\">\r\n    <mat-card-title>\r\n      <p class=\"divider-title\">\r\n        {{ \"contractDetails\" | translate | titlecase }}\r\n      </p>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row ptop-20\">\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-contract-type-dropdown\r\n              [control]=\"formCtrls.contracT_TYPE_ID\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n              [appendTo]=\"dialogContainer\"\r\n            ></app-contract-type-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-input\r\n              [control]=\"formCtrls.contracT_NO\"\r\n              [submitted]=\"submitted\"\r\n              label=\"contracT_NO\"\r\n            >\r\n            </app-input>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.starT_DATE\"\r\n              [submitted]=\"submitted\"\r\n              label=\"start_date\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.enD_DATE\"\r\n              [submitted]=\"submitted\"\r\n              label=\"end_date\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-prime-dropdown\r\n              [control]=\"formCtrls.autO_RENEWAL\"\r\n              label=\"autO_RENEWAL\"\r\n              [submitted]=\"submitted\"\r\n              [List]=\"autoRenewalList\"\r\n              [appendTo]=\"dialogContainer\"\r\n            >\r\n            </app-prime-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12 mbottom-20 mtop-14\">\r\n            <app-check-box\r\n              [control]=\"formCtrls.autO_Resign\"\r\n              label=\"autO_Resign\"\r\n            ></app-check-box>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12 mbottom-20 mtop-14\">\r\n            <app-check-box\r\n              [control]=\"formCtrls.include_In_Previous_Duration\"\r\n              label=\"include_In_Previous_Duration\"\r\n            ></app-check-box>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"emp-form-btns-float\">\r\n\r\n        <submit-btn [id]=\"formCtrls.id.value\"\r\n                    (onClick)=\"submit()\"\r\n                    [color]=\"btn.darkBlue\"\r\n                    [disabled]=\"!employeeId\">\r\n        </submit-btn>\r\n\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\"\r\n                        (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n        <div class=\"clearfix\"></div>\r\n      </div>\r\n\r\n      <!-- (changUpdated)=\"isUpdated($event)\" -->\r\n      <app-emp-contract-attachment-section *ngIf=\"formCtrls.id.value\"\r\n                                           [contractId]=\"formCtrls.id.value\">\r\n      </app-emp-contract-attachment-section>\r\n\r\n      <app-material-table *ngIf=\"employeeId > 0\"\r\n                          [isLoaded]=\"isLoaded\"\r\n                          [dataSource]=\"dataSource\"\r\n                          [mandatoryColomns]=\"mandatoryColomns\"\r\n                          [optionalColomns]=\"optionalColomns\"\r\n                          [page]=\"page\"\r\n                          [actions]=\"rowFunctions\"\r\n                          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                          (editRow)=\"employeeContractDetailsToEdit($event)\"\r\n                          (deleteRow)=\"onDelete($event)\"\r\n                          [isDialogSize]=\"true\"\r\n                          [showFilter]=\"false\"\r\n                          class=\"table-in-forms\">\r\n      </app-material-table>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { IEmpJobStatusPositionCardModel, IEmpStatusCardDisplayModel } from \"app/personnel-setup/models/employee-employment-info\";\r\nimport {\r\n  EmployeeJobInformationService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-job-information.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmpJobInfoDialogComponent } from \"./../emp-job-info-dialog/emp-job-info-dialog.component\";\r\nimport { empStatusCardDisplay } from \"app/personnel-setup/mapper/emp_status_position\";\r\nimport { IEmployeeAddress } from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\n\r\n@Component({\r\n  selector: \"emp-job-info-card\",\r\n  templateUrl: \"./emp-job-info-card.component.html\",\r\n  styleUrls: [\"./emp-job-info-card.component.scss\"],\r\n})\r\nexport class EmpJobInfoCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  statusCard: IEmpStatusCardDisplayModel;\r\n  isLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(\r\n    private employeeJobInformationService: EmployeeJobInformationService,\r\n    // private employeeContractDetailsService: EmployeeContractDetailsService\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getStatusPositionCard();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeInstanceId > 0) {\r\n        this.getStatusPositionCard();\r\n      }\r\n      else {\r\n        this.isLoaded = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  getStatusPositionCard() {\r\n    return this.employeeJobInformationService\r\n      .getStatusPositionCard(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpJobStatusPositionCardModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.isLoaded = true;\r\n          this.statusCard = empStatusCardDisplay(res.data);\r\n          EmpGeneralInfoService.employeeStatusPosition$.next(this.statusCard);\r\n          //  console.log(\"getStatusPositionCard\", res.data);\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpJobInfoDialogComponent, {}, {width: \"95vw\", height: \"98vh\"})\r\n      .afterClosed()\r\n      .subscribe(\r\n        (data: { isJobUpdated: boolean; isContractUpdated: boolean }) => {\r\n          if (data.isJobUpdated) {\r\n            this.isLoaded = false;\r\n            this.getStatusPositionCard();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  afterDelete(position: IEmpJobStatusPositionCardModel) {\r\n    if (position) {\r\n      this.isLoaded = false;\r\n      this.getStatusPositionCard();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n}\r\n","<div class=\"card-view border-bottom\" *ngIf=\"isLoaded ; else notLoaded\">\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">\r\n      <card-header [isEdit]=\"statusCard\"\r\n                   cardTitle=\"jobInfo\"\r\n                   [isLoaded]=\"isLoaded\"\r\n                   (onClickIcon)=\"openAddEditDialog()\">\r\n      </card-header>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n      <ng-container *ngIf=\"!isTableView\">\r\n        <div class=\"view-data-row-container\">\r\n          <!--    <emp-card-item-skeleton *ngIf=\"!isLoaded\"></emp-card-item-skeleton>-->\r\n          <!--    <emp-card-item-skeleton *ngIf=\"!isContractLoaded\"></emp-card-item-skeleton>-->\r\n\r\n          <card-row-item class=\"col\" label=\"status\" [value]=\"statusCard?.status_name\">\r\n\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"col\" [value]=\"statusCard?.status_from_date\"\r\n                         valueClass=\"col-6 text-muted\">\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"col\" label=\"reasons\"\r\n                         [value]=\"statusCard?.status_properties_name\">\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"col\" label=\"organization\"\r\n                         [value]=\"statusCard?.org_name\">\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"col\" label=\"orgStartDate\"\r\n                         [value]=\"statusCard?.org_from_date\">\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"col\" label=\"job\" [value]=\"statusCard?.job_name\"></card-row-item>\r\n        </div>\r\n\r\n        <div class=\"view-data-row-container mt-1\">\r\n          <card-row-item class=\"col\" label=\"timeInPosition\"\r\n                         [value]=\"statusCard?.time_in_position\">\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"col\" label=\"timeInCompany\"\r\n                         [value]=\"statusCard?.time_in_company\">\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"col\" label=\"contract\"\r\n                         [value]=\"statusCard?.contract_name\">\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"col\" label=\"contractDuration\"\r\n                         [value]=\"statusCard?.contract_duration\">\r\n          </card-row-item>\r\n\r\n          <!--    <card-row-item label=\"policyGroups\" value=\"\">-->\r\n          <!--    </card-row-item>-->\r\n          <div class=\"rowItem\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <p>{{ \"policyGroups\" | translate | titlecase }}</p>\r\n              </div>\r\n              <div class=\"col-6 text-center mb-2\">\r\n                <div>\r\n                  <table class=\"table m-0 smalltable\"\r\n                         style=\"margin-top: 0 !important\">\r\n                    <thead>\r\n                    <tr>\r\n                      <th>\r\n                        {{ 'name'|translate }}\r\n                      </th>\r\n                      <th>\r\n                        {{ 'type'|translate }}\r\n                      </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr *ngFor=\"let policy of statusCard?.policies\">\r\n                      <td>{{ msgTranslate(policy?.ar_Name, policy?.en_Name) }}</td>\r\n                      <td>{{ msgTranslate(policy?.core_PolicyGroup_Type?.ar_Name, policy?.core_PolicyGroup_Type?.en_Name) }}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!--    <ng-container *ngFor=\"let policy of statusCard.policies\">-->\r\n          <!--      <card-row-item [value]=\"msgTranslate(policy.ar_Name,policy.en_Name)\"></card-row-item>-->\r\n          <!--      <card-row-item-->\r\n          <!--        [value]=\"msgTranslate(policy?.core_PolicyGroup_Type?.ar_Name,policy?.core_PolicyGroup_Type?.en_Name)\"-->\r\n          <!--        valueClass=\"col-6 text-muted\">-->\r\n          <!--      </card-row-item>-->\r\n          <!--    </ng-container>-->\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <div class=\"col-2\">\r\n      <see-more-btn [isTableView]=\"isTableView\" (toggleTable)=\"toggleTable()\"></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"9\">\r\n  </app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"emp-job-info-dialog\",\r\n  templateUrl: \"./emp-job-info-dialog.component.html\",\r\n  styleUrls: [\"./emp-job-info-dialog.component.scss\"],\r\n})\r\nexport class EmpJobInfoDialogComponent extends AppHelpers implements OnInit {\r\n  isJobUpdated: boolean = false;\r\n  isContractUpdated: boolean = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<EmpJobInfoDialogComponent>) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close({\r\n      isJobUpdated: this.isJobUpdated,\r\n      isContractUpdated: this.isContractUpdated,\r\n    });\r\n  }\r\n\r\n  jobUpdated(value: boolean) {\r\n    this.isJobUpdated = value;\r\n  }\r\n\r\n  contractUpdated(value: boolean) {\r\n    this.isContractUpdated = value;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"jobInfo\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\">\r\n  <emp-job-section (changUpdated)=\"jobUpdated($event)\"></emp-job-section>\r\n  <div class=\"clearfix\"></div>\r\n\r\n  <mat-divider class=\"mtop-20 mbottom-20\"></mat-divider>\r\n\r\n  <emp-supervisor-section></emp-supervisor-section>\r\n\r\n  <mat-divider class=\"mtop-20 mbottom-20\"></mat-divider>\r\n\r\n  <emp-contract-section (changUpdated)=\"contractUpdated($event)\">\r\n  </emp-contract-section>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import {\r\n  IDeleteEmpStatusModel,\r\n  IEmpJobDataModel,\r\n  IEmpJobStatusPositionRequest, IEmpStatusAppendJobRequest, IEmpStatusAssignOrgAndJobRequest,\r\n} from \"app/personnel-setup/models/employee-employment-info\";\r\nimport { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport {\r\n  EmployeeJobInformationService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-job-information.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { ICoreStatusPropertiesModel, IJobStatusModel } from \"app/system-setup/hr-setup/models/emp-job-status\";\r\nimport { Constants } from \"app/shared/resources/constants\";\r\nimport { IPersonInstanceOrg } from \"app/org-management/model/org-structure\";\r\nimport { IEmployeeJobTitleModel } from \"app/org-management/model/job-title\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IGUIModel, IRowActionsModel } from \"app/shared/interfaces/user-views\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { AssignAsOrgManagerDialogComponent } from \"../assign-as-org-manager-dialog/assign-as-org-manager-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  CloseJobDialogComponent\r\n} from \"app/personnel-setup/components/employees/employement-information/emp-job-info/close-job-dialog/close-job-dialog.component\";\r\n\r\nenum ActionType {\r\n  assign = \"assign\",\r\n  append = \"append\",\r\n  edit = \"edit\",\r\n  delete = \"delete\",\r\n  close = \"close\",\r\n  assignManager = \"assignManager\",\r\n}\r\n\r\n@Component({\r\n  selector: \"emp-job-section\",\r\n  templateUrl: \"./emp-job-section.component.html\",\r\n  styleUrls: [\"./emp-job-section.component.scss\"],\r\n})\r\nexport class EmpJobDataDialogComponent extends AppHelpers implements OnInit {\r\n  @Output() changUpdated = new EventEmitter<boolean>();\r\n  employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n\r\n  displayedColumns: string[] = [\r\n    \"Ser\",\r\n    \"status\",\r\n    \"status_date\",\r\n    \"status_end_date\",\r\n    // \"reasons\",\r\n    \"org\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmpJobDataModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  reasonsList: ICoreStatusPropertiesModel[];\r\n  protected readonly Constants = Constants;\r\n  protected readonly actionType = ActionType;\r\n\r\n\r\n  jobRowFunctions: IRowActionsModel = {basic: [], dropdown: []};\r\n  orgRowFunctions: IRowActionsModel = {basic: [], dropdown: []};\r\n  statusRowFunctions: IRowActionsModel = {basic: [], dropdown: []};\r\n  currentAction: string;\r\n\r\n  constructor(\r\n    private employeeJobInformationService: EmployeeJobInformationService,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe(id => this.employeeInstanceId = id);\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_job_info_sec\r\n    );\r\n\r\n\r\n    // row functions on (job org nested table)\r\n    this.jobRowFunctions.basic = this.rowFunctions.basic.filter(ele => {\r\n      let fun = ele.name.toLocaleLowerCase();\r\n      return fun.includes(ActionType.edit) || fun.includes(ActionType.delete) || fun.includes(ActionType.close);\r\n    });\r\n    // row functions on (org first nested table)\r\n    this.orgRowFunctions.basic = this.rowFunctions.basic.filter((ele) =>\r\n      !this.jobRowFunctions.basic.map((job) => job.id).includes(ele.id)\r\n    );\r\n\r\n    // row functions on (status table)\r\n    this.statusRowFunctions.basic = this.rowFunctions.dropdown;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      // FORM AS GROUPS\r\n      employee_Status: this.fb.group({\r\n        id: [0, {nonNullable: true}],\r\n        Status_ID: [null, [Validators.required]],\r\n        From_Date: [null, [Validators.required]],\r\n        StatusPropertiesId: [],\r\n        NewDefaultCompany: [],\r\n      }),\r\n\r\n      core_Person_Instance_Org: this.fb.group({\r\n        id: [0, {nonNullable: true}],\r\n        orgTypeId: [null],\r\n        person_Instance_Status_ID: [null],\r\n        Org_ID: [null],\r\n        From_Date: [null],\r\n      }),\r\n\r\n      core_Person_Instance_Job_Title: this.fb.group({\r\n        id: [0, {nonNullable: true}],\r\n        Job_Title_ID: [null],\r\n        person_Instance_Org_ID: [null],\r\n        From_Date: [null],\r\n        Is_Manpower_Affected: [false],\r\n        policy_groups: []\r\n      }),\r\n    });\r\n\r\n    // START: Dates validation\r\n    // this.form.valueChanges.subscribe(() => {\r\n    //\r\n    //   if ( // Org Date Must > Status date\r\n    //     new Date(this.empStatusCtrls.From_Date.value).getTime() >\r\n    //     new Date(this.corePersonOrgCtrls.From_Date.value).getTime()\r\n    //   ) {\r\n    //     this.corePersonOrgCtrls.From_Date.setErrors({orgDateMustBigStatus: true});\r\n    //   } else {\r\n    //     this.corePersonOrgCtrls.From_Date.setErrors(null);\r\n    //   }\r\n    //\r\n    //   if ( // Job Date Must > Org date\r\n    //     new Date(this.corePersonOrgCtrls.From_Date.value).getTime() >\r\n    //     new Date(this.corePersonJobCtrls.From_Date.value).getTime()\r\n    //   ) {\r\n    //     this.corePersonJobCtrls.From_Date.setErrors({jobDateMustBigOrg: true});\r\n    //   } else {\r\n    //     this.corePersonJobCtrls.From_Date.setErrors(null);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  get empStatusCtrls() {\r\n    return (this.form.get(\"employee_Status\") as FormGroup).controls;\r\n  }\r\n\r\n  get corePersonOrgCtrls() {\r\n    return (this.form.get(\"core_Person_Instance_Org\") as FormGroup).controls;\r\n  }\r\n\r\n  get corePersonJobCtrls() {\r\n    return (this.form.get(\"core_Person_Instance_Job_Title\") as FormGroup).controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    this.isLoaded = false;\r\n    if (pageSize) {\r\n      this.page.dialogSize = pageSize;\r\n    }\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeJobInformationService\r\n      .getList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpJobDataModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpJobStatusPositionRequest = {\r\n        employee_Status: {\r\n          PersonInstanceStatus: {\r\n            id: this.empStatusCtrls.id.value,\r\n            Person_Instance_ID: this.employeeInstanceId,\r\n            Status_ID: this.empStatusCtrls.Status_ID.value,\r\n            From_Date: HelpersFunctions.transformData(this.empStatusCtrls.From_Date.value),\r\n            StatusPropertiesId: this.empStatusCtrls.StatusPropertiesId.value\r\n          },\r\n          NewDefaultCompany: this.empStatusCtrls.NewDefaultCompany.value\r\n        },\r\n\r\n        core_Person_Instance_Org: {\r\n          id: this.corePersonOrgCtrls.id.value,\r\n          Person_Instance_ID: this.employeeInstanceId,\r\n          Org_ID: this.corePersonOrgCtrls.Org_ID.value,\r\n          person_Instance_Status_ID: this.corePersonOrgCtrls.person_Instance_Status_ID.value,\r\n          From_Date: HelpersFunctions.transformData(this.corePersonOrgCtrls.From_Date.value)\r\n        },\r\n\r\n        core_Person_Instance_Job_Title: {\r\n          id: this.corePersonJobCtrls.id.value,\r\n          Person_Instance_ID: this.employeeInstanceId,\r\n          Job_Title_ID: this.corePersonJobCtrls.Job_Title_ID.value,\r\n          From_Date: HelpersFunctions.transformData(this.corePersonJobCtrls.From_Date.value),\r\n          Is_Manpower_Affected: this.corePersonJobCtrls.Is_Manpower_Affected.value,\r\n          person_Instance_Org_ID: this.corePersonJobCtrls.person_Instance_Org_ID.value,\r\n        },\r\n\r\n        SelectedPolicygroup: this.corePersonJobCtrls.policy_groups.value\r\n      };\r\n      //  console.log(\"model\", model);\r\n      if (this.empStatusCtrls.Status_ID.value == Constants.endOfServiceID) {\r\n        model.core_Person_Instance_Job_Title = null;\r\n        model.core_Person_Instance_Org = null;\r\n      }\r\n\r\n      // assign\r\n      if (this.currentAction === ActionType.assign) {\r\n        let assignBody: IEmpStatusAssignOrgAndJobRequest = {\r\n          core_Person_Instance_Org: model.core_Person_Instance_Org,\r\n          core_Person_Instance_Job_Title: model.core_Person_Instance_Job_Title,\r\n          SelectedPolicygroup: model.SelectedPolicygroup\r\n        };\r\n        this.assign(assignBody);\r\n\r\n      }\r\n\r\n      // append\r\n      else if (this.currentAction === ActionType.append) {\r\n        let appendBody: IEmpStatusAppendJobRequest = {\r\n          core_Person_Instance_Job_Title: model.core_Person_Instance_Job_Title,\r\n          SelectedPolicygroup: model.SelectedPolicygroup\r\n        };\r\n        this.append(appendBody);\r\n      }\r\n\r\n      // create & edit\r\n      else {\r\n        model.employee_Status.PersonInstanceStatus.id == 0 ? this.create(model) : this.update(model);\r\n      }\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n\r\n\r\n  }\r\n\r\n  create(model: IEmpJobStatusPositionRequest) {\r\n    this.showLoading();\r\n    this.employeeJobInformationService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmpJobStatusPositionRequest>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.changUpdated.emit(true);\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmpJobStatusPositionRequest) {\r\n    this.showLoading();\r\n    this.employeeJobInformationService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmpJobStatusPositionRequest>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.changUpdated.emit(true);\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n\r\n  append(model: IEmpStatusAppendJobRequest) {\r\n    this.showLoading();\r\n    this.employeeJobInformationService\r\n      .appendJob(model)\r\n      .subscribe((res: IResponse<IEmpJobStatusPositionRequest>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.success(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.changUpdated.emit(true);\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  assign(model: IEmpStatusAssignOrgAndJobRequest) {\r\n    this.showLoading();\r\n    this.employeeJobInformationService\r\n      .assignOrgAndJob(model)\r\n      .subscribe((res: IResponse<IEmpJobStatusPositionRequest>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.success(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.changUpdated.emit(true);\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  jobToEdit(status: IEmpJobDataModel, org: IPersonInstanceOrg, job: IEmployeeJobTitleModel) {\r\n\r\n    // set employee Status Data\r\n    if (status) {\r\n      this.empStatusCtrls.id.setValue(status.id);\r\n      this.empStatusCtrls.Status_ID.setValue(status.status_ID);\r\n      this.empStatusCtrls.From_Date.setValue(status.from_Date);\r\n      this.empStatusCtrls.StatusPropertiesId.setValue(status.statusPropertiesId);\r\n      this.empStatusCtrls.NewDefaultCompany.setValue(status.statusPropertiesId);\r\n      this.corePersonOrgCtrls.person_Instance_Status_ID.setValue(status.id);\r\n    }\r\n\r\n    // set core_Person_Instance_Org\r\n    if (org) {\r\n      let org_type_id = org.core_Org?.core_Org_Structure_Org[0]?.orG_TYPE_ID;\r\n      this.corePersonOrgCtrls.id.setValue(org.id);\r\n      this.corePersonOrgCtrls.orgTypeId.setValue(org_type_id);\r\n      // this.corePersonOrgCtrls.Org_ID.setValue(org.org_ID);\r\n      this.corePersonOrgCtrls.From_Date.setValue(org.from_Date);\r\n      this.corePersonJobCtrls.person_Instance_Org_ID.setValue(org.id);\r\n      setTimeout(() => {\r\n        this.corePersonOrgCtrls.Org_ID.setValue(org.org_ID);\r\n      }, 100);\r\n    }\r\n\r\n    // set job\r\n    if (job) {\r\n      this.corePersonJobCtrls.id.setValue(job.id);\r\n      //   this.corePersonJobCtrls.Job_Title_ID.setValue(job.job_Title_ID);\r\n      this.corePersonJobCtrls.From_Date.setValue(job.from_Date);\r\n      this.corePersonJobCtrls.Is_Manpower_Affected.setValue(job.is_Manpower_Affected);\r\n      setTimeout(() => {\r\n        this.corePersonJobCtrls.Job_Title_ID.setValue(job.job_Title_ID);\r\n      }, 200);\r\n    }\r\n\r\n    // if (this.currentAction == ActionType.assign) {\r\n    //   console.log(\"###### Status 1\");\r\n    //   Object.keys(this.empStatusCtrls).forEach(e => {\r\n    //     this.empStatusCtrls[e].disable();\r\n    //     console.log(this.empStatusCtrls[e]);\r\n    //   });\r\n    // }\r\n\r\n    if (this.currentAction == ActionType.append) {\r\n      Object.keys(this.empStatusCtrls).forEach(e => {\r\n        this.empStatusCtrls[e]?.disable();\r\n      });\r\n\r\n      //   console.log(\"###### org\");\r\n      //   Object.keys(this.corePersonOrgCtrls).forEach(e => {\r\n      //     this.empStatusCtrls[e]?.disable();\r\n      //     console.log(this.empStatusCtrls[e]);\r\n      //   });\r\n    }\r\n\r\n    // this.form.patchValue(employeeJobData);\r\n  }\r\n\r\n\r\n  //on delete job\r\n  onDeleteJob(StatusID: number, org: IPersonInstanceOrg, job: IEmployeeJobTitleModel): void {\r\n    let msg = this.msgTranslate(job.core_Job_Title.ar_Name, job.core_Job_Title.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(StatusID, org, job);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  //on delete status\r\n  onDeleteStatus(status: IEmpJobDataModel): void {\r\n    let msg = this.msgTranslate(status.core_Status.ar_Name, status.core_Status.en_Name);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(status.id, null, null, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(StatusID: number, org: IPersonInstanceOrg, job: IEmployeeJobTitleModel, deleteStatus = false) {\r\n    this.showLoading();\r\n    let params: IDeleteEmpStatusModel = {\r\n      employeeStatusID: StatusID,\r\n      employeeJobTitleID: job?.id ?? 0,\r\n      DeleteStatusIfOrphan: deleteStatus\r\n    };\r\n    this.employeeJobInformationService\r\n      .Delete(params)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          }\r\n          else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.changUpdated.emit(true);\r\n          if (job.job_Title_ID == this.formCtrls.id.value) {\r\n            this.clearForm();\r\n          }\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n        }\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n\r\n  openCloseDialog(job: IEmployeeJobTitleModel): void {\r\n    let msg = this.msgTranslate(job.core_Job_Title.ar_Name, job.core_Job_Title.en_Name);\r\n    this.dialog\r\n      .open(CloseJobDialogComponent, {\r\n        data: job,\r\n        height: \"auto\",\r\n        minWidth: \"40%\",\r\n        autoFocus: false,\r\n        panelClass: \"dialog-emp-form\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {});\r\n\r\n  }\r\n\r\n\r\n// get reasons List when change status\r\n  onChangeStatus(item: IJobStatusModel[]) {\r\n    this.reasonsList = item[0]?.core_Status_Properties;\r\n    if (item[0]?.id == Constants.endOfServiceID) {\r\n      this.empStatusCtrls.StatusPropertiesId.setValidators([Validators.required]);\r\n    }\r\n    else {\r\n      this.empStatusCtrls.StatusPropertiesId.removeValidators([Validators.required]);\r\n      this.empStatusCtrls.StatusPropertiesId.reset();\r\n    }\r\n  }\r\n\r\n  // statusOnAction(event: { data; fun: IGUIModel }, org: IPersonInstanceOrg) {\r\n  //   if (event.fun.name == \"assignManager\") this.openAssignManagerDialog(org);\r\n  // }\r\n\r\n  onAssign(status: IEmpJobDataModel) {\r\n    this.currentAction = ActionType.assign;\r\n    this.jobToEdit(status, null, null);\r\n    // console.log(\"onAssign\", this.currentAction);\r\n  }\r\n\r\n  orgOnAction(event: { data; fun: IGUIModel }, status: IEmpJobDataModel, org: IPersonInstanceOrg) {\r\n    if (event.fun.name == ActionType.assignManager) this.openAssignManagerDialog(org);\r\n    if (event.fun.name == ActionType.append) {\r\n      this.currentAction = ActionType.append;\r\n      this.jobToEdit(status, org, null);\r\n\r\n      // console.log(\"onAppend\", this.currentAction);\r\n    }\r\n  }\r\n\r\n  jobOnAction(event: { data; fun: IGUIModel }, job: IEmployeeJobTitleModel) {\r\n    if (event.fun.name == \"close\") this.openCloseDialog(job);\r\n  }\r\n\r\n  openAssignManagerDialog(org: IPersonInstanceOrg) {\r\n    this.dialog\r\n      .open(AssignAsOrgManagerDialogComponent, {\r\n        data: org,\r\n        minWidth: \"50%\",\r\n        height: \"auto\",\r\n        autoFocus: false,\r\n        panelClass: \"dialog-emp-form\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe((data) => {});\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({\r\n      employee_Status: {id: 0},\r\n      core_Person_Instance_Org: {id: 0},\r\n      core_Person_Instance_Job_Title: {\r\n        id: 0,\r\n        Is_Manpower_Affected: false\r\n      },\r\n    });\r\n    this.submitted = false;\r\n    this.currentAction = null;\r\n    Object.keys(this.empStatusCtrls).forEach(e => {\r\n      this.empStatusCtrls[e]?.enable();\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div #dialogContainer class=\"p-1\">\r\n  <mat-card class=\"form-card\">\r\n    <mat-card-title>\r\n      <p class=\"divider-title\">\r\n        {{ \"status\" | translate | titlecase }}\r\n      </p>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\">\r\n\r\n        <!-- ###### START:  status ############################# -->\r\n        <div formGroupName=\"employee_Status\" class=\"row ptop-20\">\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-job-status-dropdown [control]=\"empStatusCtrls.Status_ID\"\r\n                                     [submitted]=\"submitted\"\r\n                                     [filter]=\"true\"\r\n                                     [disable]=\"currentAction === (actionType.assign || actionType.append)\"\r\n                                     [appendTo]=\"dialogContainer\"\r\n                                     (change)=\"onChangeStatus($event)\">\r\n\r\n            </app-job-status-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-datepicker [control]=\"empStatusCtrls.From_Date\"\r\n                            [disabled]=\"currentAction === (actionType.assign || actionType.append)\"\r\n                            [submitted]=\"submitted\"\r\n                            label=\"status_From_Date\">\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-prime-dropdown *ngIf=\"empStatusCtrls.Status_ID.value==Constants.endOfServiceID\"\r\n                                [control]=\"empStatusCtrls.StatusPropertiesId\"\r\n                                [submitted]=\"submitted\"\r\n                                [List]=\"reasonsList\"\r\n                                [disable]=\"currentAction === (actionType.assign || actionType.append)\"\r\n                                [appendTo]=\"dialogContainer\"\r\n                                label=\"reasons\">\r\n            </app-prime-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\"\r\n               *ngIf=\"empStatusCtrls.Status_ID.value==Constants.endOfServiceID && empStatusCtrls?.id.value > 0\">\r\n            <employees-shared-company [control]=\"empStatusCtrls.NewDefaultCompany\"\r\n                                      [person_ID]=\"employeeId\"\r\n                                      [submitted]=\"submitted\"\r\n                                      [disable]=\"currentAction === (actionType.assign || actionType.append)\"\r\n                                      [appendTo]=\"dialogContainer\">\r\n            </employees-shared-company>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <!-- ###### START: organization data ############################################## -->\r\n        <p class=\"divider-title\">\r\n          {{ \"organizationData\" | translate | titlecase }}\r\n        </p>\r\n\r\n        <div formGroupName=\"core_Person_Instance_Org\" class=\"row ptop-20\">\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-org-types-dropdown-current-structure [control]=\"corePersonOrgCtrls.orgTypeId\"\r\n                                                      [submitted]=\"submitted\"\r\n                                                      [filter]=\"true\"\r\n                                                      [disable]=\"currentAction === actionType.append\"\r\n                                                      [appendTo]=\"dialogContainer\">\r\n            </app-org-types-dropdown-current-structure>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-organization-by-org-type-dropdown [orgTypeControl]=\"corePersonOrgCtrls.orgTypeId\"\r\n                                                   [control]=\"corePersonOrgCtrls.Org_ID\"\r\n                                                   [submitted]=\"submitted\"\r\n                                                   [filter]=\"true\"\r\n                                                   [disable]=\"currentAction === actionType.append\"\r\n                                                   [appendTo]=\"dialogContainer\">\r\n\r\n            </app-organization-by-org-type-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-datepicker [control]=\"corePersonOrgCtrls.From_Date\"\r\n                            [submitted]=\"submitted\"\r\n                            [disabled]=\"currentAction === actionType.append\"\r\n                            label=\"orgStartDate\">\r\n            </app-datepicker>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <!-- ###### START:  job data #############################################-->\r\n        <p class=\"divider-title\">\r\n          {{ \"jobData\" | translate | titlecase }}\r\n        </p>\r\n\r\n        <div formGroupName=\"core_Person_Instance_Job_Title\" class=\"row ptop-20\">\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-job-title-by-org-dropdown [control]=\"corePersonJobCtrls.Job_Title_ID\"\r\n                                           [organizationControl]=\"corePersonOrgCtrls.Org_ID\"\r\n                                           [organizationControlRequired]=\"true\"\r\n                                           [submitted]=\"submitted\"\r\n                                           [filter]=\"true\"\r\n                                           [appendTo]=\"dialogContainer\">\r\n\r\n            </app-job-title-by-org-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-datepicker [control]=\"corePersonJobCtrls.From_Date\"\r\n                            [submitted]=\"submitted\"\r\n                            label=\"startDate\">\r\n            </app-datepicker>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12 mbottom-20 mtop-14\">\r\n            <app-check-box [control]=\"corePersonJobCtrls.Is_Manpower_Affected\"\r\n                           label=\"counted\">\r\n            </app-check-box>\r\n          </div>\r\n\r\n\r\n          <div class=\"col-12\" *ngIf=\"corePersonJobCtrls.Job_Title_ID.value > 0\">\r\n            <load-policies-group [control]=\"corePersonJobCtrls.policy_groups\"\r\n                                 [jobControl]=\"corePersonJobCtrls.Job_Title_ID\"\r\n                                 [orgControl]=\"corePersonOrgCtrls.Org_ID\"\r\n                                 [submitted]=\"submitted\"\r\n                                 [filterByOrgAndJob]=\"true\">\r\n            </load-policies-group>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <reset-form-btn *ngIf=\"empStatusCtrls.id.value > 0\"\r\n                        (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n\r\n        <submit-btn (onClick)=\"submit()\"\r\n                    [color]=\"btn.darkBlue\"\r\n                    [disabled]=\"!employeeId\">\r\n        </submit-btn>\r\n      </mat-card-actions>\r\n\r\n\r\n      <!--  START: Table -->\r\n      <ng-container *ngIf=\"dataSource?.data?.length > 0 \">\r\n        <mat-card-content>\r\n\r\n          <!-- table -->\r\n          <div class=\"mat-elevation-z8 f-w table-container\">\r\n            <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n              <!-- Ser  col   -->\r\n              <ng-container matColumnDef=\"Ser\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Ser</th>\r\n                <td mat-cell *matCellDef=\"let i = index\">\r\n                  <i class=\"fas fa-bars\"></i>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <!-- status  col   -->\r\n              <ng-container matColumnDef=\"status\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'status' | translate }}</th>\r\n                <td mat-cell *matCellDef=\"let ele\">\r\n                  {{ msgTranslate(ele.core_Status?.ar_Name, ele.core_Status?.en_Name) }}\r\n                </td>\r\n              </ng-container>\r\n\r\n              <!-- status start date  col   -->\r\n              <ng-container matColumnDef=\"status_date\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'from_Date' | translate }}</th>\r\n                <td mat-cell *matCellDef=\"let ele\">\r\n                  {{ ele?.from_Date | date : \"dd-MM-yyyy\" }}\r\n                </td>\r\n              </ng-container>\r\n\r\n\r\n              <!-- status end date  col   -->\r\n              <ng-container matColumnDef=\"status_end_date\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'to_Date' | translate }}</th>\r\n                <td mat-cell *matCellDef=\"let ele\">\r\n                  {{ ele?.to_Date | date : \"dd-MM-yyyy\" }}\r\n                </td>\r\n              </ng-container>\r\n\r\n\r\n              <!-- reasons  col   -->\r\n              <!--              <ng-container matColumnDef=\"reasons\">-->\r\n              <!--                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'reasons' | translate }}</th>-->\r\n              <!--                <td mat-cell *matCellDef=\"let ele\">-->\r\n              <!--                  {{ msgTranslate(ele.core_Status_Properties?.ar_Name, ele.core_Status_Properties?.en_Name) }}-->\r\n              <!--                </td>-->\r\n              <!--              </ng-container>-->\r\n\r\n              <!-- organization  col   -->\r\n              <ng-container matColumnDef=\"org\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{ \"organization\" | translate }}</th>\r\n                <td mat-cell *matCellDef=\"let status\">\r\n                  <table class=\"table table-responsive-sm m-0\" *ngIf=\"status?.core_Person_Instance_Org?.length>0\">\r\n                    <thead>\r\n                    <tr style=\"color: #5a5a5a\">\r\n                      <th class=\"border-top-0 padding-10\"> {{ \"organization\" | translate }}</th>\r\n                      <th class=\"border-top-0 padding-10\"> {{ \"job\" | translate }}</th>\r\n                      <th class=\"border-top-0 padding-10\"> {{ \"from_Date\" | translate }}</th>\r\n                      <th class=\"border-top-0 padding-10\"> {{ \"counted\" | translate }}</th>\r\n                      <th class=\"border-top-0 padding-10\"> {{ \"job actions\" | translate }}</th>\r\n                      <th class=\"border-top-0 padding-10\"> {{ \"org actions\" | translate }}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                    <ng-container *ngFor=\"let org of status?.core_Person_Instance_Org\">\r\n                      <tr *ngFor=\"let job of org.core_Person_Instance_Job_Title; index as i\"\r\n                          style=\"color: #374761\"\r\n                          class=\"border-top-0 border-bottom-1\">\r\n                        <td class=\"padding-10 vertical-align-middle\"\r\n                            [rowSpan]=\"org.core_Person_Instance_Job_Title?.length\" *ngIf=\"i == 0\">\r\n                          {{ msgTranslate(org?.core_Org?.ar_Name, org?.core_Org?.en_Name) }}\r\n                        </td>\r\n\r\n                        <td class=\"padding-10\">\r\n                          {{ msgTranslate(job?.core_Job_Title?.ar_Name, job?.core_Job_Title?.en_Name) }}\r\n                        </td>\r\n\r\n                        <td class=\"padding-10 \">\r\n                          {{ job?.from_Date  | date : \"dd-MM-yyyy\" }}\r\n                        </td>\r\n\r\n                        <td class=\"padding-10\">\r\n                          <!-- yes col-->\r\n                          <span *ngIf=\"job?.is_Manpower_Affected; else no\"\r\n                                class=\"badge bg-light-success\">\r\n                              {{ \"yes\" | translate }}\r\n                          </span>\r\n\r\n                          <!-- no col -->\r\n                          <ng-template #no>\r\n                            <span class=\"badge bg-light-danger\">\r\n                              {{ \"no\" | translate }}\r\n                            </span>\r\n                          </ng-template>\r\n                        </td>\r\n\r\n\r\n                        <!-- job row functions  -->\r\n                        <td class=\"padding-10\">\r\n                          <app-row-functions [actions]=\"jobRowFunctions\"\r\n                                             iconSize=\"font-small-3\"\r\n                                             (editRow)=\"jobToEdit(status, org, job)\"\r\n                                             (deleteRow)=\"onDeleteJob(status.id, org, job)\"\r\n                                             (onAction)=\"jobOnAction($event, job)\">\r\n                          </app-row-functions>\r\n                        </td>\r\n\r\n                        <!-- org row functions  -->\r\n                        <td class=\"padding-10 vertical-align-middle\"\r\n                            [rowSpan]=\"org.core_Person_Instance_Job_Title?.length\" *ngIf=\"i == 0\">\r\n                          <app-row-functions [actions]=\"orgRowFunctions\"\r\n                                             iconSize=\"font-small-3\"\r\n                                             (onAction)=\"orgOnAction($event, status, org)\">\r\n                          </app-row-functions>\r\n                        </td>\r\n\r\n                      </tr>\r\n                    </ng-container>\r\n\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </ng-container>\r\n\r\n\r\n              <!-- Status actions  col   -->\r\n              <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{ 'actions' | translate }}</th>\r\n                <td mat-cell *matCellDef=\"let ele\">\r\n                  <ng-container *ngFor=\"let fun of statusRowFunctions.basic\">\r\n\r\n\r\n                    <!--  Delete   -->\r\n                    <a *ngIf=\"fun.name.toLowerCase() == 'delete' && ele.core_Person_Instance_Org?.length==0\"\r\n                       [class]=\"fun.color\"\r\n                       [matTooltip]=\"fun.name | translate\"\r\n                       (click)=\"onDeleteStatus(ele)\">\r\n\r\n                      <i [class]=\"fun.icon\" class=\"font-medium-1 mr-2 p-0\"></i>\r\n                    </a>\r\n\r\n                    <!--  assign  -->\r\n                    <a *ngIf=\"fun.name.toLowerCase() == 'assign'\"\r\n                       [class]=\"fun.color\"\r\n                       (click)=\"onAssign(ele)\"\r\n                       [matTooltip]=\"fun.name | translate\">\r\n\r\n                      <i [class]=\"fun.icon\" class=\"font-medium-1 mr-2 p-0\"></i>\r\n                    </a>\r\n\r\n                  </ng-container>\r\n                  <!--              <app-row-functions [actions]=\"statusRowFunctions\"-->\r\n                  <!--                                 (editRow)=\"employeeJobDataToEdit(ele)\"-->\r\n                  <!--                                 (deleteRow)=\"onDeleteStatus(ele)\">-->\r\n                  <!--              </app-row-functions>-->\r\n                </td>\r\n              </ng-container>\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n            </table>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n\r\n        <!--  Paginator  -->\r\n        <app-prime-paginator [page]=\"page\" [isDialogSize]=\"true\"\r\n                             (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\">\r\n\r\n        </app-prime-paginator>\r\n\r\n      </ng-container>\r\n\r\n      <!--  Loading Table-->\r\n      <div *ngIf=\"!isLoaded && !dataSource?.data\" class=\"mtop-25\">\r\n        <app-table-skeleton [displayedColumns]=\"displayedColumns\"></app-table-skeleton>\r\n      </div>\r\n\r\n      <!--  Empty table-->\r\n      <div class=\"text-center\" *ngIf=\"(dataSource?.data?.length == 0 && isLoaded) || (!dataSource && isLoaded)\">\r\n        <img [src]=\"assets.empty\"/>\r\n        <br/>\r\n        {{ \"emptytable\" | translate }}\r\n      </div>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empSupervisorDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {\r\n  IEmpSupervisorDeleteRequest,\r\n  IEmpSupervisorDisplayModel,\r\n  IEmpSupervisorModel,\r\n  IEmpSupervisorRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/supervisor\";\r\nimport { EmployeeSupervisorService } from \"app/personnel-setup/services/employees/employement-information/employee-supervisor.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"emp-supervisor-section\",\r\n  templateUrl: \"./emp-supervisor-section.component.html\",\r\n  styleUrls: [\"./emp-supervisor-section.component.scss\"],\r\n})\r\nexport class EmpSupervisorSectionComponent extends AppHelpers implements OnInit {\r\n  employeeInstanceId: number = 0;\r\n  // @Output() changUpdated = new EventEmitter<boolean>();\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"supervisor\",\r\n    \"fromDate\",\r\n    \"toDate\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpSupervisorDisplayModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private employeeSupervisorService: EmployeeSupervisorService) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_job_info_supervisor_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      // id: [0, { nonNullable: true }],\r\n      supervisor_id: [null, [Validators.required]],\r\n      from_Date: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) {\r\n      this.dataSource = new MatTableDataSource(null);\r\n    }\r\n    if (this.checkNoBusinessOrCompany() && this.employeeInstanceId > 0) {\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.dataSource = new MatTableDataSource(null);\r\n    this.isLoaded = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) {\r\n      this.page.dialogSize = pageSize;\r\n    }\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeSupervisorService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpSupervisorModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empSupervisorDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpSupervisorRequest = {\r\n        Person_Instance_ID: this.employeeInstanceId,\r\n        Manager_ID: this.form.value.supervisor_id,\r\n        From_Date: HelpersFunctions.mapDateReverse(this.form.value.from_Date),\r\n      };\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpSupervisorRequest) {\r\n    this.showLoading();\r\n    this.employeeSupervisorService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmpSupervisorModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.firstPage);\r\n          // this.isUpdated(true);\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      });\r\n  }\r\n\r\n  onDelete(supervisor: IEmpSupervisorDisplayModel): void {\r\n    let msg = `${supervisor.supervisor} (${supervisor.fromDate} - ${supervisor.toDate})`;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.delete(supervisor);\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(supervisor: IEmpSupervisorDisplayModel) {\r\n    let deleteParams: IEmpSupervisorDeleteRequest = {\r\n      prtid: this.employeeInstanceId,\r\n      mangerid: supervisor.manager_ID,\r\n      fromdate: HelpersFunctions.mapDateReverse(supervisor.from_Date),\r\n      todate: HelpersFunctions.mapDateReverse(supervisor.tO_Date),\r\n    };\r\n    this.showLoading();\r\n    this.employeeSupervisorService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          // this.isUpdated(true);\r\n        } else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset(/* { id: 0 } */);\r\n    this.submitted = false;\r\n  }\r\n\r\n  // isUpdated(value: boolean) {\r\n  //   this.changUpdated.emit(value);\r\n  // }\r\n}\r\n","<div #dialogContainer class=\"p-1\">\r\n  <mat-card class=\"form-card\">\r\n    <mat-card-title>\r\n      <p class=\"divider-title\">\r\n        {{ \"supervisor\" | translate | titlecase }}\r\n      </p>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row ptop-20\">\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-employee-dropdown\r\n              [control]=\"formCtrls.supervisor_id\"\r\n              [submitted]=\"submitted\"\r\n              [filter]=\"true\"\r\n              label=\"supervisor\"\r\n              [appendTo]=\"dialogContainer\"\r\n            ></app-employee-dropdown>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-12\">\r\n            <app-datepicker\r\n              [control]=\"formCtrls.from_Date\"\r\n              [submitted]=\"submitted\"\r\n              label=\"date\"\r\n            >\r\n            </app-datepicker>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"emp-form-btns-float\">\r\n        <submit-btn\r\n          (onClick)=\"submit()\"\r\n          [color]=\"btn.darkBlue\"\r\n          [disabled]=\"!employeeInstanceId\"\r\n        >\r\n        </submit-btn>\r\n\r\n        <div class=\"clearfix\"></div>\r\n      </div>\r\n\r\n      <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                          [isLoaded]=\"isLoaded\"\r\n                          [dataSource]=\"dataSource\"\r\n                          [mandatoryColomns]=\"mandatoryColomns\"\r\n                          [optionalColomns]=\"optionalColomns\"\r\n                          [page]=\"page\"\r\n                          [actions]=\"rowFunctions\"\r\n                          (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                          (deleteRow)=\"onDelete($event)\"\r\n                          [isDialogSize]=\"true\"\r\n                          [showFilter]=\"false\"\r\n                          class=\"table-in-forms\">\r\n      </app-material-table>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { EmpLocationDialogComponent } from \"../emp-location-dialog/emp-location-dialog.component\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmployeeLocationService } from \"app/personnel-setup/services/employees/employement-information/employee-location.service\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { IEmpLocationModel } from \"app/personnel-setup/models/emp-employment-info/emp-location\";\r\nimport { empLocationDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\n\r\n@Component({\r\n  selector: \"app-emp-location-card\",\r\n  templateUrl: \"./emp-location-card.component.html\",\r\n  styleUrls: [\"./emp-location-card.component.scss\"],\r\n})\r\nexport class EmpLocationCardComponent extends AppHelpers implements OnInit {\r\n  employeeInstanceId: number = 0;\r\n  empLocation: IEmpLocationModel[];\r\n  isLoaded: boolean = true;\r\n\r\n  constructor(private employeeLocationService: EmployeeLocationService) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empLocation = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.empLocation = null;\r\n    this.employeeLocationService\r\n      .getAll(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpLocationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          let sortedList: IEmpLocationModel[] = res.data;\r\n          // sort by from date (from new to old)\r\n          sortedList.sort(\r\n            (a, b) =>\r\n              new Date(b.from_Date).getTime() - new Date(a.from_Date).getTime()\r\n          );\r\n          // show only first two locations\r\n          this.empLocation = empLocationDisplay(sortedList.slice(0, 2));\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpLocationDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAll();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"empLocation?.length\"\r\n    cardTitle=\"location\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <ng-container *ngIf=\"empLocation?.length > 0; else noData\">\r\n      <ng-container *ngFor=\"let location of empLocation\">\r\n        <card-row-item\r\n          [label]=\"location.country\"\r\n          [value]=\"location.allAddress\"\r\n        ></card-row-item>\r\n\r\n        <card-row-item\r\n          [value]=\"location.date\"\r\n          valueClass=\"col-6 text-muted\"\r\n        ></card-row-item>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <ng-template #noData>\r\n      <card-row-item label=\"location\" [value]=\"null\"></card-row-item>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"3\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeLocationService } from \"app/personnel-setup/services/employees/employement-information/employee-location.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport {\r\n  IEmpLocationDeleteRequest,\r\n  IEmpLocationDisplayModel,\r\n  IEmpLocationEditRequest,\r\n  IEmpLocationModel,\r\n  IEmpLocationRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/emp-location\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { empLocationDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\n\r\n@Component({\r\n  selector: \"app-emp-location-dialog\",\r\n  templateUrl: \"./emp-location-dialog.component.html\",\r\n  styleUrls: [\"./emp-location-dialog.component.scss\"],\r\n})\r\nexport class EmpLocationDialogComponent extends AppHelpers implements OnInit {\r\n  employeeInstanceId: number = 0;\r\n  updated: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"country\",\r\n    \"governorate\",\r\n    \"location\",\r\n    \"froM_DATE\",\r\n    \"tO_DATE\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpLocationDisplayModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  selectedLocation: IEmpLocationDisplayModel;\r\n\r\n  constructor(\r\n    private employeeLocationService: EmployeeLocationService,\r\n    public dialogRef: MatDialogRef<EmpLocationDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_location_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, { nonNullable: true }],\r\n        countryId: [null, [Validators.required]],\r\n        governorate_ID: [null, [Validators.required]],\r\n        location_ID: [null, [Validators.required]],\r\n        from_Date: [null, [Validators.required]],\r\n        to_Date: [null],\r\n        policy_groups: [null /* , [Validators.required] */],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"from_Date\", \"to_Date\"),\r\n      }\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.updated);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeLocationService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpLocationModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empLocationDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpLocationRequest = {\r\n        EmployeeData: {\r\n          person_Instance_ID: this.employeeInstanceId,\r\n          location_ID: this.form.value.location_ID,\r\n          from_Date: HelpersFunctions.mapDateReverse(this.form.value.from_Date),\r\n          to_Date: HelpersFunctions.mapDateReverse(this.form.value.to_Date),\r\n        },\r\n        SelectedPolicygroup: this.form.value.policy_groups,\r\n      };\r\n\r\n      this.formCtrls.id.value == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpLocationRequest) {\r\n    this.showLoading();\r\n    this.employeeLocationService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmpLocationModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmpLocationRequest) {\r\n    let body: IEmpLocationEditRequest = {\r\n      ...model,\r\n      OldEmployeeData: {\r\n        person_Instance_ID: this.employeeInstanceId,\r\n        location_ID: this.selectedLocation.location_ID,\r\n        from_Date: this.selectedLocation.from_Date,\r\n      },\r\n    };\r\n    this.showLoading();\r\n    this.employeeLocationService\r\n      .update(body)\r\n      .subscribe((res: IResponse<IEmpLocationModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n          this.selectedLocation = null;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  locationToEdit(location: IEmpLocationDisplayModel) {\r\n    this.form.patchValue(location);\r\n    this.formCtrls.countryId.setValue(location.comm_Country.id);\r\n    this.formCtrls.governorate_ID.setValue(location.comm_Governorate.id);\r\n    this.formCtrls.location_ID.setValue(location.location_ID);\r\n    this.formCtrls.policy_groups.setValue(location.selectedPolicygroup);\r\n    // to detect edit\r\n    this.formCtrls.id.setValue(location.location_ID);\r\n\r\n    // to use in edit request\r\n    this.selectedLocation = location;\r\n  }\r\n\r\n  onDelete(location: IEmpLocationDisplayModel): void {\r\n    let msg = location.country + \" - \" + location.location;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(location);\r\n    });\r\n  }\r\n\r\n  delete(location: IEmpLocationDisplayModel) {\r\n    this.showLoading();\r\n    let params: IEmpLocationDeleteRequest = {\r\n      person_Instance_ID: location.person_Instance_ID,\r\n      location_ID: location.location_ID,\r\n      FromDate: HelpersFunctions.mapDateReverse(location.from_Date),\r\n    };\r\n    this.employeeLocationService.Delete(params).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.dialogSize);\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.dialogSize);\r\n        }\r\n        this.updated = true;\r\n        if (\r\n          location.location_ID == this.selectedLocation.location_ID &&\r\n          location.from_Date == this.selectedLocation.from_Date &&\r\n          this.formCtrls.id.value > 0\r\n        )\r\n          this.clearForm();\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n\r\n  protected readonly FormControl = FormControl;\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"location\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-country-dropdown\r\n          [control]=\"formCtrls.countryId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-country-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-governorate-by-country-dropdown\r\n          [control]=\"formCtrls.governorate_ID\"\r\n          [countryControl]=\"formCtrls.countryId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-governorate-by-country-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <org-location-dropdown\r\n          [control]=\"formCtrls.location_ID\"\r\n          [governorateControl]=\"formCtrls.governorate_ID\"\r\n          [filterByGov]=\"true\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        >\r\n        </org-location-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.from_Date\"\r\n          [submitted]=\"submitted\"\r\n          label=\"froM_DATE\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.to_Date\"\r\n          [submitted]=\"submitted\"\r\n          label=\"tO_DATE\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-12\" *ngIf=\"formCtrls.location_ID.value > 0\">\r\n        <load-policies-group [control]=\"formCtrls.policy_groups\"\r\n                             [locationControl]=\"formCtrls.location_ID\"\r\n                             [submitted]=\"submitted\">\r\n\r\n        </load-policies-group>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn *ngIf=\"formCtrls.id.value > 0\"\r\n                    (click)=\"clearForm()\">\r\n    </reset-form-btn>\r\n\r\n    <submit-btn [id]=\"formCtrls.id.value\"\r\n                (onClick)=\"submit()\"\r\n                [color]=\"btn.darkBlue\"\r\n                [disabled]=\"!employeeInstanceId\">\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"locationToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"emp-blood-type-section\",\r\n  templateUrl: \"./emp-blood-type-section.component.html\",\r\n  styleUrls: [\"./emp-blood-type-section.component.scss\"],\r\n})\r\nexport class EmpMedicalAndBloodTypeDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  updated: boolean = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EmpMedicalAndBloodTypeDialogComponent>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.updated);\r\n  }\r\n\r\n  changUpdated(value: boolean) {\r\n    this.updated = value;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title\r\n      class=\"d-inline-block mtop-5\"\r\n      title=\"medicalInsurance\"\r\n    ></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\">\r\n  <p class=\"divider-title\">\r\n    {{ \"bloodType\" | translate | titlecase }}\r\n  </p>\r\n\r\n  <emp-general-info-form [isBlood_type]=\"true\"> </emp-general-info-form>\r\n\r\n  <mat-divider class=\"mtop-20\"></mat-divider>\r\n\r\n  <app-emp-medical-insurance-dialog\r\n    (changUpdated)=\"changUpdated($event)\"\r\n  ></app-emp-medical-insurance-dialog>\r\n  <div class=\"clearfix\"></div>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {IEmpMedicalInsuranceModel} from \"app/personnel-setup/models/employee-employment-info\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {\r\n  EmployeeMedicalInsuranceService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-medical-insurance.service\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {EmpMedicalAndBloodTypeDialogComponent} from \"../emp-blood-type-section/emp-blood-type-section.component\";\r\nimport {IEmployee} from \"app/personnel-setup/models/employees\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\n\r\n@Component({\r\n\tselector: \"app-emp-medical-insurance-card\",\r\n\ttemplateUrl: \"./emp-medical-insurance-card.component.html\",\r\n\tstyleUrls: [\"./emp-medical-insurance-card.component.scss\"],\r\n})\r\nexport class EmpMedicalInsuranceCardComponent extends AppHelpers implements OnInit {\r\n\temployeeId: number = 0;\r\n\temployeeInstanceId: number = 0;\r\n\temployeeMedicalInsuranceInfo: IEmpMedicalInsuranceModel;\r\n\temployee: IEmployee;\r\n\r\n\tisLoaded: boolean = false;\r\n\r\n\tconstructor(\r\n\t\tprivate employeeMedicalInsuranceService: EmployeeMedicalInsuranceService,\r\n\t\tprivate empGeneralInfoService: EmpGeneralInfoService\r\n\t) {\r\n\t\tsuper();\r\n\t\tthis.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\t\tthis.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.employee = this.empGeneralInfoService.employee$.getValue();\r\n\t\tthis.empGeneralInfoService.employee$.subscribe((emp) => {\r\n\t\t\tthis.employee = emp;\r\n\t\t\tthis.isLoadedFun();\r\n\t\t});\r\n\t\tthis.isLoadedFun();\r\n\t}\r\n\r\n\tisLoadedFun() {\r\n\t\tthis.isLoaded = false;\r\n\t\tif (this.employee != null && this.employeeId > 0) this.isLoaded = true;\r\n\t\tif (this.employee == null && this.employeeId == 0) this.isLoaded = true;\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tthis.employeeMedicalInsuranceInfo = null;\r\n\t\tif (this.employeeId > 0 && this.checkNoBusinessOrCompany()){} //this.getAllByEmployeeId();\r\n\t\telse this.isLoaded = true;\r\n\t}\r\n\r\n\tgetAllByEmployeeId() {\r\n\t\tthis.employeeMedicalInsuranceInfo = null;\r\n\t\tthis.employeeMedicalInsuranceService\r\n\t\t\t.getAllByEmployeeId(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponse<IEmpMedicalInsuranceModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.employeeMedicalInsuranceInfo = res.data[0];\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\topenAddEditDialog(): void {\r\n\t\tthis.dialogsService\r\n\t\t\t.addEditDialog(EmpMedicalAndBloodTypeDialogComponent)\r\n\t\t\t.afterClosed()\r\n\t\t\t.subscribe((updated: boolean) => {\r\n\t\t\t\tif (updated) {\r\n\t\t\t\t\tthis.isLoaded = false;\r\n\t\t\t\t\tthis.getAllByEmployeeId();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n\t<card-header\r\n\t\t[isEdit]=\"employeeMedicalInsuranceInfo\"\r\n\t\tcardTitle=\"medicalInsurance\"\r\n\t\t[isLoaded]=\"isLoaded\"\r\n\t\t(onClickIcon)=\"openAddEditDialog()\"\r\n\t></card-header>\r\n\r\n\t<div class=\"cardSectionBody\">\r\n\t\t<card-row-item\r\n\t\t\tlabel=\"medicalInsuranceCompany\"\r\n\t\t\t[value]=\"employeeMedicalInsuranceInfo?.medicalInsuranceCompany\"\r\n\t\t></card-row-item>\r\n\r\n\t\t<card-row-item\r\n\t\t\t[value]=\"employeeMedicalInsuranceInfo?.date\"\r\n\t\t\tvalueClass=\"col-6 text-muted\"\r\n\t\t></card-row-item>\r\n\r\n\t\t<card-row-item\r\n\t\t\tlabel=\"medicalID\"\r\n\t\t\t[value]=\"employeeMedicalInsuranceInfo?.medicalID\"\r\n\t\t></card-row-item>\r\n\r\n\t\t<card-row-item\r\n\t\t\tlabel=\"bloodType\"\r\n\t\t\t[value]=\"\r\n\t\t\t\tmsgTranslate(\r\n\t\t\t\t\temployee?.person?.core_Blood_Type?.ar_Name,\r\n\t\t\t\t\temployee?.person?.core_Blood_Type?.en_NAme\r\n\t\t\t\t)\r\n\t\t\t\"\r\n\t\t></card-row-item>\r\n\r\n\t\t<card-row-item\r\n\t\t\tlabel=\"medicalSubscription\"\r\n\t\t\t[value]=\"employeeMedicalInsuranceInfo?.medicalSubscription\"\r\n\t\t></card-row-item>\r\n\r\n\t\t<card-row-item\r\n\t\t\tlabel=\"companyShare\"\r\n\t\t\t[value]=\"employeeMedicalInsuranceInfo?.companyShare\"\r\n\t\t></card-row-item>\r\n\r\n\t\t<card-row-item\r\n\t\t\tlabel=\"employeeShare\"\r\n\t\t\t[value]=\"employeeMedicalInsuranceInfo?.employeeShare\"\r\n\t\t></card-row-item>\r\n\t</div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n\t<app-employee-profile-card-skeleton [rowNo]=\"7\"></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  IEmpMedicalInsuranceModel,\r\n  IEmpMedicalInsuranceRequest,\r\n} from \"app/personnel-setup/models/employee-employment-info\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeMedicalInsuranceService } from \"app/personnel-setup/services/employees/employement-information/employee-medical-insurance.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-emp-medical-insurance-dialog\",\r\n  templateUrl: \"./emp-medical-insurance-dialog.component.html\",\r\n  styleUrls: [\"./emp-medical-insurance-dialog.component.scss\"],\r\n})\r\nexport class EmpMedicalInsuranceDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  @Output() changUpdated = new EventEmitter<boolean>();\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"medicalInsuranceCompany\",\r\n    \"medicalID\",\r\n    \"bloodType\",\r\n    \"from\",\r\n    \"to\",\r\n    \"medicalSubscription\",\r\n    \"companyShare\",\r\n    \"employeeShare\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpMedicalInsuranceModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private employeeMedicalInsuranceService: EmployeeMedicalInsuranceService\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, { nonNullable: true }],\r\n        medicalInsuranceCompany: [null, [Validators.required]],\r\n        medicalID: [null, [Validators.required]],\r\n        from: [null, [Validators.required]],\r\n        to: [null, [Validators.required]],\r\n        medicalSubscription: [null, [Validators.required]],\r\n        companyShare: [null, [Validators.required]],\r\n        employeeShare: [null, [Validators.required]],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"from\", \"to\"),\r\n      }\r\n    );\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeId > 0) this.getAll();\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.employeeMedicalInsuranceService\r\n      .getAllByEmployeeId(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpMedicalInsuranceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpMedicalInsuranceRequest = {\r\n        Person_ID: this.employeeId,\r\n        id: this.form.value.id,\r\n        medicalInsuranceCompany: this.form.value.medicalInsuranceCompany,\r\n        medicalID: this.form.value.medicalID,\r\n        from: this.form.value.from,\r\n        to: this.form.value.to,\r\n        medicalSubscription: this.form.value.medicalSubscription,\r\n        companyShare: this.form.value.companyShare,\r\n        employeeShare: this.form.value.employeeShare,\r\n      };\r\n\r\n      model.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpMedicalInsuranceRequest) {\r\n    this.showLoading();\r\n    this.employeeMedicalInsuranceService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmpMedicalInsuranceModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n          this.changUpdated.emit(true);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmpMedicalInsuranceRequest) {\r\n    this.showLoading();\r\n    this.employeeMedicalInsuranceService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmpMedicalInsuranceModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n          this.changUpdated.emit(true);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeMedicalInsuranceToEdit(\r\n    employeeMedicalInsuranceInfo: IEmpMedicalInsuranceModel\r\n  ) {\r\n    this.form.patchValue(employeeMedicalInsuranceInfo);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(employeeMedicalInsuranceInfo: IEmpMedicalInsuranceModel): void {\r\n    let msg = this.msgTranslate(employeeMedicalInsuranceInfo.medicalID);\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employeeMedicalInsuranceInfo);\r\n    });\r\n  }\r\n\r\n  delete(employeeMedicalInsuranceInfo: IEmpMedicalInsuranceModel) {\r\n    this.showLoading();\r\n    this.employeeMedicalInsuranceService\r\n      .Delete(employeeMedicalInsuranceInfo.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getAll();\r\n          this.changUpdated.emit(true);\r\n          if (employeeMedicalInsuranceInfo.id == this.formCtrls.id.value)\r\n            this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<div #dialogContainer>\r\n  <p class=\"divider-title\">\r\n    {{ \"medicalInsurance\" | translate | titlecase }}\r\n  </p>\r\n\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.medicalInsuranceCompany\"\r\n          [submitted]=\"submitted\"\r\n          label=\"medicalInsuranceCompany\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.medicalID\"\r\n          [submitted]=\"submitted\"\r\n          label=\"medicalID\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.from\"\r\n          [submitted]=\"submitted\"\r\n          label=\"from\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.to\"\r\n          [submitted]=\"submitted\"\r\n          label=\"to\"\r\n        ></app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.medicalSubscription\"\r\n          [submitted]=\"submitted\"\r\n          label=\"medicalSubscription\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.companyShare\"\r\n          [submitted]=\"submitted\"\r\n          label=\"companyShare\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.employeeShare\"\r\n          [submitted]=\"submitted\"\r\n          label=\"employeeShare\"\r\n        ></app-input>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (editRow)=\"employeeMedicalInsuranceToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [showPaginator]=\"false\"\r\n                      [showFilter]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</div>\r\n","import {IResponse, IResponseList} from \"app/shared/interfaces/responces\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {FormGroup, Validators} from \"@angular/forms\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {\r\n  EmployeeSocialInsuranceService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-social-insurance.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {CustomValidator} from \"app/shared/validators/custom.validator\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport {ISaveEmpGeneralInfo} from \"app/personnel-setup/models/employees\";\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {\r\n  IEmpSocialInsuranceDelete,\r\n  IEmpSocialInsuranceEditRequest,\r\n  IEmpSocialInsuranceModel,\r\n  IEmpSocialInsuranceRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/social-insurance\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\nimport {IPageParams} from \"app/shared/interfaces/params\";\r\nimport {HelpersFunctions} from \"app/shared/resources/helpers-functions\";\r\nimport {empInsuranceOfficeDisplay} from \"app/personnel-setup/mapper/emp-employment\";\r\n\r\n@Component({\r\n  selector: \"emp-Social-insurance-dialog\",\r\n  templateUrl: \"./emp-social-insurance-dialog.component.html\",\r\n  styleUrls: [\"./emp-social-insurance-dialog.component.scss\"],\r\n})\r\nexport class EmpSocialInsuranceDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  employeeId: number = 0;\r\n  // employeeInstanceId: number = 0;\r\n  isHasUpdate: boolean;\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"insuranceOffice\",\r\n    \"fromDate\",\r\n    \"endDate\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmpSocialInsuranceModel>;\r\n\r\n  isLoaded: boolean = false;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  oldEmployeeData: {\r\n    insurance_Office_ID: number;\r\n    from_date: string;\r\n  };\r\n\r\n  constructor(\r\n    private employeeSocialInsuranceService: EmployeeSocialInsuranceService,\r\n    public dialogRef: MatDialogRef<EmpSocialInsuranceDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    // this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_social_insurance_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNullable: true}],\r\n        insurance_Office_ID: [null, [Validators.required]],\r\n        fromDate: [null, [Validators.required]],\r\n        endDate: [null],\r\n        // worked_at: [null],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"fromDate\", \"endDate\"),\r\n      }\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.isHasUpdate);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeSocialInsuranceService\r\n      .getList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmpSocialInsuranceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empInsuranceOfficeDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmpSocialInsuranceRequest = {\r\n        employeeData: {\r\n          person_ID: this.employeeId,\r\n          insurance_Office_ID: this.form.value.insurance_Office_ID,\r\n          from_date: HelpersFunctions.mapDateReverse(this.form.value.fromDate),\r\n          end_date: HelpersFunctions.mapDateReverse(this.form.value.endDate),\r\n          // worked_at: this.form.value.worked_at,\r\n        },\r\n      };\r\n\r\n      this.form.value.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmpSocialInsuranceRequest) {\r\n    this.showLoading();\r\n    this.employeeSocialInsuranceService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmpSocialInsuranceModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.firstPage);\r\n          this.isHasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmpSocialInsuranceRequest) {\r\n    this.showLoading();\r\n    let body: IEmpSocialInsuranceEditRequest = {\r\n      employeeData: model.employeeData,\r\n      oldEmployeeData: {\r\n        person_ID: this.employeeId,\r\n        ...this.oldEmployeeData,\r\n      },\r\n    };\r\n    this.employeeSocialInsuranceService\r\n      .update(body)\r\n      .subscribe((res: IResponse<IEmpSocialInsuranceModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.oldEmployeeData = null;\r\n          this.isHasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  socialInsuranceToEdit(socialInsurance: IEmpSocialInsuranceModel) {\r\n    this.form.patchValue(socialInsurance);\r\n    this.oldEmployeeData = {\r\n      insurance_Office_ID: socialInsurance.insurance_Office_ID,\r\n      from_date: socialInsurance.froM_DATE,\r\n    };\r\n    this.formCtrls.fromDate.setValue(socialInsurance.froM_DATE);\r\n    this.formCtrls.endDate.setValue(socialInsurance.enD_DATE);\r\n    // to detect edit\r\n    this.formCtrls.id.setValue(socialInsurance.core_Insurance_Office.id);\r\n  }\r\n\r\n  onDelete(socialInsurance: IEmpSocialInsuranceModel): void {\r\n    let msg = socialInsurance.insuranceOffice;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(socialInsurance);\r\n    });\r\n  }\r\n\r\n  delete(socialInsurance: IEmpSocialInsuranceModel) {\r\n    this.showLoading();\r\n    let params: IEmpSocialInsuranceDelete = {\r\n      PersonID: this.employeeId,\r\n      insuranceoffice: socialInsurance.insurance_Office_ID,\r\n      fromdate: socialInsurance.froM_DATE,\r\n    };\r\n    this.employeeSocialInsuranceService\r\n      .Delete(params)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.isHasUpdate = true;\r\n          if (\r\n            socialInsurance.froM_DATE == this.oldEmployeeData.from_date &&\r\n            socialInsurance.insurance_Office_ID ==\r\n            this.oldEmployeeData.insurance_Office_ID &&\r\n            this.formCtrls.id.value > 0\r\n          )\r\n            this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  onSaveInsuranceNumber(data: ISaveEmpGeneralInfo) {\r\n    //  this.empGeneralInfoService.getEmployeeShared(this.employeeId);\r\n    //this.dialogRef.close(data);\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"socialInsurance\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n<mat-dialog-content class=\"container-fluid mx-0\">\r\n\r\n\r\n  <!--  START: Insurance Number-->\r\n  <p class=\"divider-title\">\r\n    {{ \"socialInsuranceNumber\" | translate | titlecase }}\r\n  </p>\r\n\r\n  <emp-general-info-form [isSocialInsurance]=\"true\" (onSave)=\"onSaveInsuranceNumber($event)\">\r\n  </emp-general-info-form>\r\n\r\n\r\n  <mat-divider class=\"mtop-20\"></mat-divider>\r\n\r\n\r\n  <!--  START: Insurance Office-->\r\n  <div #dialogContainer>\r\n    <p class=\"divider-title\">\r\n      {{ \"socialInsuranceOffice\" | translate | titlecase }}\r\n    </p>\r\n\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row ptop-20\">\r\n        <div class=\"col-md-4 col-sm-6 col-12\">\r\n          <insurance-office-dropdown\r\n            [control]=\"formCtrls.insurance_Office_ID\"\r\n            [submitted]=\"submitted\"\r\n            [appendTo]=\"dialogContainer\"\r\n          ></insurance-office-dropdown>\r\n        </div>\r\n\r\n\r\n        <!--        <div class=\"col-md-4 col-sm-6 col-12\">-->\r\n        <!--          <app-input-->\r\n        <!--            [control]=\"formCtrls.worked_at\"-->\r\n        <!--            [submitted]=\"submitted\"-->\r\n        <!--            label=\"worked_at\"-->\r\n        <!--          ></app-input>-->\r\n        <!--        </div>-->\r\n\r\n        <div class=\"col-md-4 col-sm-6 col-12\">\r\n          <app-datepicker\r\n            [control]=\"formCtrls.fromDate\"\r\n            [submitted]=\"submitted\"\r\n            label=\"froM_DATE\"\r\n          ></app-datepicker>\r\n        </div>\r\n\r\n        <div class=\"col-md-4 col-sm-6 col-12\">\r\n          <app-datepicker\r\n            [control]=\"formCtrls.endDate\"\r\n            [submitted]=\"submitted\"\r\n            label=\"endDate\"\r\n          >\r\n\r\n          </app-datepicker>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"emp-form-btns-float\">\r\n      <reset-form-btn\r\n        *ngIf=\"formCtrls.id.value > 0\"\r\n        (click)=\"clearForm()\"\r\n      ></reset-form-btn>\r\n\r\n      <submit-btn\r\n        [id]=\"formCtrls.id.value\"\r\n        (onClick)=\"submit()\"\r\n        [color]=\"btn.darkBlue\"\r\n        [disabled]=\"!employeeId\"\r\n      >\r\n      </submit-btn>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n  <app-material-table *ngIf=\"employeeId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"socialInsuranceToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n","import {empInsuranceOfficeDisplay} from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {\r\n  EmployeeSocialInsuranceService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-social-insurance.service\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {IEmployee} from \"app/personnel-setup/models/employees\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport {\r\n  EmpSocialInsuranceDialogComponent\r\n} from \"app/personnel-setup/components/employees/employement-information/emp-social-insurance/emp-insurance-office-dialog/emp-social-insurance-dialog.component\";\r\nimport {IEmpSocialInsuranceModel} from \"app/personnel-setup/models/emp-employment-info/social-insurance\";\r\n\r\n@Component({\r\n  selector: \"app-emp-social-insurance-card\",\r\n  templateUrl: \"./emp-social-insurance-card.component.html\",\r\n  styleUrls: [\"./emp-social-insurance-card.component.scss\"],\r\n})\r\nexport class EmpSocialInsuranceCardComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  emp_social_insurance: IEmpSocialInsuranceModel;\r\n  employee: IEmployee;\r\n  isInsuranceNumLoaded: boolean = false;\r\n  isInsuranceOfficeLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private employeeSocialInsuranceService: EmployeeSocialInsuranceService,\r\n    private empGeneralInfoService: EmpGeneralInfoService\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.employee = this.empGeneralInfoService.employee$.getValue();\r\n    this.empGeneralInfoService.employee$.subscribe((emp) => {\r\n      this.employee = emp;\r\n      this.isLoadedFun();\r\n    });\r\n    this.isLoadedFun();\r\n  }\r\n\r\n  isLoadedFun() {\r\n    this.isInsuranceNumLoaded = false;\r\n    if (this.employee != null && this.employeeId > 0)\r\n      this.isInsuranceNumLoaded = true;\r\n    if (this.employee == null && this.employeeId == 0)\r\n      this.isInsuranceNumLoaded = true;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.emp_social_insurance = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) this.getAll();\r\n    else this.isInsuranceOfficeLoaded = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.emp_social_insurance = null;\r\n    this.employeeSocialInsuranceService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpSocialInsuranceModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data.sort(\r\n            (a, b) =>\r\n              new Date(b.froM_DATE).getTime() - new Date(a.froM_DATE).getTime()\r\n          );\r\n          this.emp_social_insurance = empInsuranceOfficeDisplay(res.data)[0];\r\n          this.isInsuranceOfficeLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpSocialInsuranceDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isInsuranceOfficeLoaded = false;\r\n          this.getAll();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div\r\n  class=\"cardSection\"\r\n  *ngIf=\"isInsuranceNumLoaded || isInsuranceOfficeLoaded; else notLoaded\"\r\n>\r\n  <card-header\r\n    [isEdit]=\"isInsuranceNumLoaded || isInsuranceOfficeLoaded\"\r\n    cardTitle=\"socialInsurance\"\r\n    [isLoaded]=\"isInsuranceNumLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  >\r\n  </card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <!--        <emp-card-item-skeleton *ngIf=\"!isInsuranceNumLoaded\"></emp-card-item-skeleton>-->\r\n    <!--        <emp-card-item-skeleton *ngIf=\"!isInsuranceNumLoaded\"></emp-card-item-skeleton>-->\r\n\r\n    <card-row-item\r\n      label=\"insurance_No\"\r\n      [value]=\"employee?.person?.insurance_No\"\r\n    >\r\n    </card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"insurance_Years\"\r\n      [value]=\"employee?.person?.insurance_Years\"\r\n    >\r\n    </card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"insuranceOffice\"\r\n      [value]=\"emp_social_insurance?.insuranceOffice\"\r\n    >\r\n    </card-row-item>\r\n\r\n    <card-row-item\r\n      [value]=\"emp_social_insurance?.date\"\r\n      valueClass=\"col-6 text-muted\"\r\n    >\r\n    </card-row-item>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"4\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse, IResponseMsg} from \"app/shared/interfaces/responces\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {EmpWorkScheduleDialogComponent} from \"../emp-work-schedule-dialog/emp-work-schedule-dialog.component\";\r\nimport {\r\n  EmployeeWorkScheduleService\r\n} from \"app/personnel-setup/services/employees/employement-information/employee-work-schedule.service\";\r\nimport {\r\n  IEmpPlanCardDayModel,\r\n  IEmpWorkScheduleCardModel,\r\n} from \"app/personnel-setup/models/emp-employment-info/work-schedule\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport {HelpersFunctions, msgTranslate} from \"app/shared/resources/helpers-functions\";\r\n\r\n@Component({\r\n  selector: \"emp-work-schedule-card\",\r\n  templateUrl: \"./emp-work-schedule-card.component.html\",\r\n  styleUrls: [\"./emp-work-schedule-card.component.scss\"],\r\n})\r\nexport class EmpWorkScheduleCardComponent extends AppHelpers implements OnInit {\r\n  employeeInstanceId: number;\r\n  empWorkSchedule: IEmpWorkScheduleCardModel;\r\n  isLoaded: boolean = false;\r\n  today: Date = new Date();\r\n  numberOfDaysInMonth: number;\r\n  calendarArray: IEmpPlanCardDayModel[] = [];\r\n  messages: IResponseMsg[]\r\n\r\n  constructor(\r\n    private employeeWorkScheduleService: EmployeeWorkScheduleService\r\n  ) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getCardData();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.numberOfDaysInMonth = HelpersFunctions.numberOfDaysInMonth(\r\n      this.today.getFullYear(),\r\n      // return current month (0-11)\r\n      this.today.getMonth()\r\n    );\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empWorkSchedule = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getCardData();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getCardData() {\r\n    this.empWorkSchedule = null;\r\n    this.employeeWorkScheduleService\r\n      .getCard(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmpWorkScheduleCardModel>) => {\r\n        this.isLoaded = true;\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          res.data.currentPlan.start_Date = HelpersFunctions.mapDate(\r\n            res.data.currentPlan.start_Date\r\n          );\r\n\r\n          res.data.currentPlan.end_Date = HelpersFunctions.mapDate(\r\n            res.data.currentPlan.end_Date\r\n          );\r\n          this.empWorkSchedule = res.data;\r\n          this.createCalendarArray();\r\n        }\r\n        if (res.message.messageType == MessageTypes.Warning) {\r\n          this.messages = res.message.messages\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  createCalendarArray() {\r\n    this.calendarArray = [];\r\n    // calendar array\r\n    for (let i = 1; i <= this.numberOfDaysInMonth; i++) {\r\n\r\n      let isWeekend = this.empWorkSchedule?.weekEnds\r\n        .map((date) => new Date(date).getDate())\r\n        .includes(i);\r\n\r\n      let isVacation = this.empWorkSchedule?.vacations\r\n        .map((vac) => new Date(vac.vacation_Date_Duration.vacation_date).getDate())\r\n        .includes(i);\r\n\r\n      let vacation = this.empWorkSchedule?.vacations\r\n        .find((vac) => new Date(vac.vacation_Date_Duration.vacation_date).getDate() === i)?.vacation;\r\n\r\n      let date = new Date();\r\n      date.setDate(i)\r\n\r\n\r\n      this.calendarArray.push({\r\n        value: i,\r\n        isCurrentDay: this.today.getDate() == i,\r\n        isWeekend: isWeekend,\r\n        isVacation: isVacation,\r\n        hoverContent: \"\",\r\n        date: date,\r\n        vacation: msgTranslate(vacation?.ar_Name, vacation?.en_Name) ?? null\r\n      });\r\n    }\r\n  }\r\n\r\n  getDayPopOver(day: IEmpPlanCardDayModel): string {\r\n    if (day.isWeekend) return `${HelpersFunctions.getDayName(day.date)} - ${this.translate(\"weekend\")}`\r\n    if (day.isVacation) return `${HelpersFunctions.getDayName(day.date)} - ${day.vacation}`;\r\n    else return HelpersFunctions.getDayName(day.date);\r\n\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpWorkScheduleDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getCardData();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"empWorkSchedule\"\r\n    cardTitle=\"workSchedule\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  >\r\n  </card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n\r\n    <!-- plan name -->\r\n    <card-row-item\r\n      label=\"plan\"\r\n      [value]=\"\r\n        msgTranslate(\r\n          empWorkSchedule?.currentPlan.ar_Name,\r\n          empWorkSchedule?.currentPlan.en_Name\r\n        )\r\n      \">\r\n    </card-row-item>\r\n\r\n    <!-- plan start Date -->\r\n    <card-row-item\r\n      value=\" {{empWorkSchedule? (today | date : 'MMMM dd, y' ):null}}\"\r\n      valueClass=\"col-6 text-muted\"\r\n    >\r\n    </card-row-item>\r\n\r\n\r\n    <div class=\"calendar-view\" *ngIf=\"empWorkSchedule && isLoaded; else noPlan\">\r\n\r\n      <!--  number Of Working days for this month  -->\r\n      <div class=\"calendar-header\">\r\n        <p>\r\n          <!-- current  month name  -->\r\n          {{ today | date : \"MMMM - y\" }}\r\n          <span class=\"workdays\">\r\n             (\r\n            {{ empWorkSchedule?.noOfWorkingDayes }}\r\n            {{ \"workDaysShort\" | translate }}\r\n            )\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <!-- calendar body -->\r\n      <div class=\"calendar-body\">\r\n        <ng-container *ngFor=\"let day of calendarArray\">\r\n          <div\r\n            class=\"square\"\r\n            [ngClass]=\"{\r\n              'current-day': day.isCurrentDay,\r\n              'has-weekend': day.isWeekend,\r\n              'has-annual-vacations': day.isVacation\r\n            }\"\r\n            [popoverTitle]=\"getDayPopOver(day)\"\r\n            [ngbPopover]=\"day.hoverContent\"\r\n            triggers=\"mouseenter:mouseleave\"\r\n          >\r\n            {{ day.value }}\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n      <div class=\"calendar-footer mt-1\">\r\n\r\n        <!-- current-day -->\r\n        <div class=\"map-box\">\r\n          <span class=\"font-small-1 map-text current-day-color\"> {{\"currentday\" | translate }}</span>\r\n        </div>\r\n\r\n        <!-- weekend -->\r\n        <div class=\"map-box\">\r\n          <span class=\"font-small-1 map-text weekend-color\"> {{\"weekend\"| translate}} </span>\r\n        </div>\r\n\r\n        <!-- annualVacation -->\r\n        <div class=\"map-box\">\r\n          <span class=\"font-small-1 map-text annual-color\">{{ \"vacation\" | translate }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ng-template #noPlan>\r\n      <p-messages severity=\"warn\" *ngFor=\"let msg of messages\">\r\n        <ng-template pTemplate>\r\n          <span class=\"p-message-icon pi pi-exclamation-triangle\"></span>\r\n          <div class=\"p-message-detail\">\r\n            {{msg.message }}\r\n          </div>\r\n        </ng-template>\r\n\r\n        <!--        <p-messages severity=\"warn\" *ngFor=\"let msg of messages\" [enableService]=\"false\" [value]=\"msg.message\"> </p-message>-->\r\n      </p-messages>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"2\"\r\n  >\r\n  </app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empWorkScheduleDisplay } from \"app/personnel-setup/mapper/emp-employment\";\r\nimport {\r\n  IEditEmployeeWorkScheduleRequest,\r\n  IEmpWorkScheduleDeleteParams,\r\n  IEmployeeWorkScheduleModel,\r\n  IEmployeeWorkScheduleRequest,\r\n  IHoursSummary,\r\n  IVacationSummary,\r\n} from \"app/personnel-setup/models/emp-employment-info/work-schedule\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeWorkScheduleService } from \"app/personnel-setup/services/employees/employement-information/employee-work-schedule.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"emp-work-schedule-dialog\",\r\n  templateUrl: \"./emp-work-schedule-dialog.component.html\",\r\n  styleUrls: [\"./emp-work-schedule-dialog.component.scss\"],\r\n})\r\nexport class EmpWorkScheduleDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  // employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  updated: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"plan\",\r\n    \"startDate\",\r\n    \"toDate\",\r\n    \"is_Apply_Rules\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeWorkScheduleModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  selectedPlan: IEmployeeWorkScheduleModel;\r\n\r\n  vacationDays: IVacationSummary;\r\n  sickDays: IVacationSummary;\r\n  workingHours: IHoursSummary;\r\n  isLoadedVacation: boolean = false;\r\n  isLoadedSick: boolean = false;\r\n  isLoadedWorking: boolean = false;\r\n\r\n  constructor(\r\n    private employeeWorkScheduleService: EmployeeWorkScheduleService,\r\n    public dialogRef: MatDialogRef<EmpWorkScheduleDialogComponent>\r\n  ) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_work_schedule_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      plan_ID: [null, [Validators.required]],\r\n      fromDate: [null, [Validators.required]],\r\n      is_Apply_Rules: [null],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.updated);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany() && this.employeeInstanceId > 0) {\r\n      this.getVacationDays();\r\n      this.getSickDays();\r\n      this.getWorkingDays();\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeWorkScheduleService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeWorkScheduleModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empWorkScheduleDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeWorkScheduleRequest = {\r\n        EmployeeData: {\r\n          Person_Instance_ID: this.employeeInstanceId,\r\n          Plan_ID: this.formCtrls.plan_ID.value,\r\n          FromDate: HelpersFunctions.mapDateReverse(\r\n            this.formCtrls.fromDate.value\r\n          ),\r\n          Is_Apply_Rules: this.formCtrls.is_Apply_Rules.value ?? false,\r\n        },\r\n      };\r\n\r\n      this.formCtrls.id.value == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeWorkScheduleRequest) {\r\n    this.showLoading();\r\n    this.employeeWorkScheduleService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeWorkScheduleModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeWorkScheduleRequest) {\r\n    let editModel: IEditEmployeeWorkScheduleRequest = {\r\n      ...model,\r\n      OldEmployeeData: {\r\n        Person_Instance_ID: this.employeeInstanceId,\r\n        Plan_ID: this.selectedPlan.plan_ID,\r\n        FromDate: this.selectedPlan.fromDate,\r\n        ToDate: this.selectedPlan.toDateOriginal,\r\n      },\r\n    };\r\n    this.showLoading();\r\n    this.employeeWorkScheduleService\r\n      .update(editModel)\r\n      .subscribe((res: IResponse<IEmployeeWorkScheduleModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n          this.selectedPlan = null;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeWorkScheduleToEdit(\r\n    employeeWorkScheduleInfo: IEmployeeWorkScheduleModel\r\n  ) {\r\n    this.form.patchValue(employeeWorkScheduleInfo);\r\n    // not real id >> only to detect edit mode\r\n    this.formCtrls.id.setValue(employeeWorkScheduleInfo.plan_ID);\r\n    // to use in edit request\r\n    this.selectedPlan = employeeWorkScheduleInfo;\r\n  }\r\n\r\n  onDelete(employeeWorkScheduleInfo: IEmployeeWorkScheduleModel): void {\r\n    let msg = employeeWorkScheduleInfo.plan;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employeeWorkScheduleInfo);\r\n    });\r\n  }\r\n\r\n  delete(employeeWorkScheduleInfo: IEmployeeWorkScheduleModel) {\r\n    let deleteParams: IEmpWorkScheduleDeleteParams = {\r\n      Person_Instance_ID: this.employeeInstanceId,\r\n      Plan_ID: employeeWorkScheduleInfo.plan_ID,\r\n      FromDate: employeeWorkScheduleInfo.fromDate,\r\n      ToDate: employeeWorkScheduleInfo.toDateOriginal,\r\n    };\r\n    this.showLoading();\r\n    this.employeeWorkScheduleService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.updated = true;\r\n          if (\r\n            employeeWorkScheduleInfo.plan_ID == this.selectedPlan?.plan_ID &&\r\n            employeeWorkScheduleInfo.fromDate == this.selectedPlan?.fromDate &&\r\n            employeeWorkScheduleInfo.toDateOriginal ==\r\n              this.selectedPlan?.toDateOriginal &&\r\n            this.formCtrls.id.value > 0\r\n          )\r\n            this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n\r\n  // Dashboards\r\n\r\n  getVacationDays() {\r\n    this.employeeWorkScheduleService\r\n      .getAnnualCasualDashboard(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IVacationSummary>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.vacationDays = res.data;\r\n          this.isLoadedVacation = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  getSickDays() {\r\n    this.employeeWorkScheduleService\r\n      .getSickLeaveDashboard(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IVacationSummary>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.sickDays = res.data;\r\n          this.isLoadedSick = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  getWorkingDays() {\r\n    this.employeeWorkScheduleService\r\n      .getWorkingHoursDashboard(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IHoursSummary>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.workingHours = res.data;\r\n          this.isLoadedWorking = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"workSchedule\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <div class=\"row mtop-15\" *ngIf=\"employeeInstanceId\">\r\n    <div class=\"col-md-4\">\r\n      <div\r\n        class=\"card card-vacations-custom card-inverse\"\r\n        *ngIf=\"isLoadedVacation; else loadingVacation\"\r\n      >\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body\">\r\n            <div class=\"media\">\r\n              <div class=\"media-body text-left\">\r\n                <ng-container\r\n                  *ngIf=\"vacationDays?.totalBalance > 0; else noVacationBalance\"\r\n                >\r\n                  <span> {{ \"vacation\" | translate }} </span>\r\n                  <h3 class=\"card-text\">{{ vacationDays?.used }}</h3>\r\n                  <p class=\"ca-title\">\r\n                    {{ \"daysUsed\" | translate | titlecase }}\r\n                    <br/>\r\n                    <span class=\"pspan\">\r\n                      {{ vacationDays?.totalBalance }}\r\n                      {{ \"daysScheduled\" | translate }}\r\n                    </span>\r\n                  </p>\r\n                </ng-container>\r\n                <ng-template #noVacationBalance>\r\n                  <span>{{ \"noVacationBalance\" | translate }}</span>\r\n                </ng-template>\r\n              </div>\r\n              <div class=\"media-right align-self-center\">\r\n                <i class=\"ft-umbrella font-large-2 float-right\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-template #loadingVacation>\r\n        <emp-plan-card-dashboard-skeleton></emp-plan-card-dashboard-skeleton>\r\n      </ng-template>\r\n    </div>\r\n\r\n    <div class=\"col-md-4\">\r\n      <div\r\n        class=\"card card-vacations-custom card-inverse\"\r\n        *ngIf=\"isLoadedSick; else loadingSick\"\r\n      >\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body\">\r\n            <div class=\"media\">\r\n              <div class=\"media-body text-left\">\r\n                <ng-container\r\n                  *ngIf=\"sickDays?.totalBalance > 0; else noSickBalance\"\r\n                >\r\n                  <span> {{ \"sick\" | translate }} </span>\r\n                  <h3 class=\"card-text\">{{ sickDays?.used }}</h3>\r\n                  <p class=\"ca-title\">\r\n                    {{ \"daysUsed\" | translate | titlecase }}\r\n                    <br/>\r\n                    <span class=\"pspan\">\r\n                      {{ sickDays?.totalBalance }}\r\n                      {{ \"daysScheduled\" | translate }}\r\n                    </span>\r\n                  </p>\r\n                </ng-container>\r\n                <ng-template #noSickBalance>\r\n                  <span>{{ \"noSickBalance\" | translate }}</span>\r\n                </ng-template>\r\n              </div>\r\n              <div class=\"media-right align-self-center\">\r\n                <i class=\"ft-thermometer font-large-2 float-right\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-template #loadingSick>\r\n        <emp-plan-card-dashboard-skeleton></emp-plan-card-dashboard-skeleton>\r\n      </ng-template>\r\n    </div>\r\n\r\n    <div class=\"col-md-4\">\r\n      <div\r\n        class=\"card card-vacations-custom card-inverse\"\r\n        *ngIf=\"isLoadedWorking; else loadingWorking\"\r\n      >\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body\">\r\n            <div class=\"media\">\r\n              <div class=\"media-body text-left\">\r\n                <ng-container\r\n                  *ngIf=\"workingHours?.hoursScheduled > 0; else noWorkBalance\"\r\n                >\r\n                  <span> {{ \"workingHours\" | translate }} </span>\r\n                  <h3 class=\"card-text\">{{ workingHours?.hoursAchieved }}</h3>\r\n                  <p class=\"ca-title\">\r\n                    {{ \"hoursAchieved\" | translate | titlecase }}\r\n                    <br/>\r\n                    <span class=\"pspan\">\r\n                      {{ workingHours?.hoursScheduled }}\r\n                      {{ \"hoursScheduled\" | translate }}\r\n                    </span>\r\n                  </p>\r\n                </ng-container>\r\n                <ng-template #noWorkBalance>\r\n                  <span>{{ \"noWorkingBalance\" | translate }}</span>\r\n                </ng-template>\r\n              </div>\r\n              <div class=\"media-right align-self-center\">\r\n                <i class=\"ft-clock font-large-2 float-right\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-template #loadingWorking>\r\n        <emp-plan-card-dashboard-skeleton></emp-plan-card-dashboard-skeleton>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-attendance-plan-dropdown\r\n          [control]=\"formCtrls.plan_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          label=\"plan\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-attendance-plan-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.fromDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"startDate\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12 ptop-15 pbottom-15\">\r\n        <app-check-box\r\n          [control]=\"formCtrls.is_Apply_Rules\"\r\n          label=\"is_Apply_Rules\"\r\n        >\r\n        </app-check-box>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeWorkScheduleToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { IGUIModel } from \"app/shared/interfaces/user-views\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"employement-information-core\",\r\n\ttemplateUrl: \"./employement-info-core.component.html\",\r\n\tstyleUrls: [\"./employement-info-core.component.scss\"],\r\n})\r\nexport class EmployementInformationComponent extends AppHelpers implements OnInit {\r\n\t@Input() icon: string;\r\n\tallowedSections: IGUIModel[];\r\n\tviewsManager = ViewsManager;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\toverride onModulesChanged() {\r\n\t\tthis.allowedSections = this.getCustomViewChildren(\r\n\t\t\tthis.getParentViewName,\r\n\t\t\tViewsManager.employment_info_tab\r\n\t\t);\r\n\t\t//  console.log(\"employment_info\", this.allowedSections);\r\n\t}\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title class=\"main-card-title border-bottom\">\r\n        <page-title title=\"employmentInfo\"\r\n                    [icon]=\"icon\"\r\n                    color=\"info\">\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid p-0\">\r\n        <div class=\"row mx-md-n2\">\r\n          <!-- Job-info  -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_job_info_sec)\">\r\n            <emp-job-info-card></emp-job-info-card>\r\n          </div>\r\n\r\n          <!-- work Schedule -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_work_schedule_sec)\">\r\n            <emp-work-schedule-card></emp-work-schedule-card>\r\n          </div>\r\n\r\n          <!-- Hiring Documents -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_hiring_documents_sec)\">\r\n            <emp-hiring-documents-card></emp-hiring-documents-card>\r\n          </div>\r\n\r\n          <!-- Location -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_location_sec)\">\r\n            <app-emp-location-card></app-emp-location-card>\r\n          </div>\r\n\r\n          <!-- Custodies -->\r\n          <div class=\"col-12 p-0 px-md-2\" *ngIf=\"isViewAllowed(viewsManager.emp_custodies_sec)\">\r\n            <app-emp-custodies-card></app-emp-custodies-card>\r\n          </div>\r\n\r\n          <!-- Social Insurance -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_social_insurance_sec)\">\r\n            <app-emp-social-insurance-card></app-emp-social-insurance-card>\r\n          </div>\r\n\r\n          <!-- Medical insurance -->\r\n          <!-- <div\r\n            class=\"col-md-4 col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_medical_insurance_sec)\"\r\n          >\r\n            <app-emp-medical-insurance-card></app-emp-medical-insurance-card>\r\n          </div> -->\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { empBankingAccountDisplay } from \"app/personnel-setup/mapper/emp-payments-info\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmpBankingAccountDataDialogComponent } from \"../emp-banking-account-data-dialog/emp-banking-account-data-dialog.component\";\r\nimport { IEmployeeBankingAccountModel } from \"app/personnel-setup/models/payments-information/emp-bank-account\";\r\nimport { EmployeeBankingAccountService } from \"app/personnel-setup/services/employees/payments-info/employee-banking-account.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\n\r\n@Component({\r\n  selector: \"app-emp-banking-account-data-card\",\r\n  templateUrl: \"./emp-banking-account-data-card.component.html\",\r\n  styleUrls: [\"./emp-banking-account-data-card.component.scss\"],\r\n})\r\nexport class EmpBankingAccountDataCardComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeInstanceId: number;\r\n  employeeBankingAccountInfo: IEmployeeBankingAccountModel;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private employeeBankingAccountService: EmployeeBankingAccountService\r\n  ) {\r\n    super();\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.employeeBankingAccountInfo = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.employeeBankingAccountInfo = null;\r\n    this.employeeBankingAccountService\r\n      .getAll(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeBankingAccountModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // sort by start date (from new to old)\r\n          res.data.sort(\r\n            (a, b) =>\r\n              new Date(b.from_Date).getTime() - new Date(a.from_Date).getTime()\r\n          );\r\n          this.employeeBankingAccountInfo = empBankingAccountDisplay(\r\n            res.data.slice(0, 1)\r\n          )[0];\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpBankingAccountDataDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAll();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"employeeInstanceId\"\r\n    cardTitle=\"bankingAccountData\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <card-row-item\r\n      label=\"bank\"\r\n      [value]=\"employeeBankingAccountInfo?.bank\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"accountNo\"\r\n      [value]=\"employeeBankingAccountInfo?.accountNo\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      [value]=\"employeeBankingAccountInfo?.startDate\"\r\n      valueClass=\"col-6 text-muted\"\r\n    ></card-row-item>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"3\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import {HelpersFunctions} from \"app/shared/resources/helpers-functions\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {FormGroup, Validators} from \"@angular/forms\";\r\nimport {MatDialogRef} from \"@angular/material/dialog\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {\r\n  IEditEmployeeBankingAccountRequest,\r\n  IEmployeeBankingAccountDeleteParams,\r\n  IEmployeeBankingAccountModel,\r\n  IEmployeeBankingAccountRequest,\r\n} from \"app/personnel-setup/models/payments-information/emp-bank-account\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport {\r\n  EmployeeBankingAccountService\r\n} from \"app/personnel-setup/services/employees/payments-info/employee-banking-account.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse, IResponseList} from \"app/shared/interfaces/responces\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {IPageParams} from \"app/shared/interfaces/params\";\r\nimport {CustomValidators} from \"ngx-custom-validators\";\r\nimport {empBankingAccountDisplay} from \"app/personnel-setup/mapper/emp-payments-info\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-emp-banking-account-data-dialog\",\r\n  templateUrl: \"./emp-banking-account-data-dialog.component.html\",\r\n  styleUrls: [\"./emp-banking-account-data-dialog.component.scss\"],\r\n})\r\nexport class EmpBankingAccountDataDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  employeeInstanceId: number = 0;\r\n  isHaseUpdate: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"bank\",\r\n    \"accountNo\",\r\n    \"startDate\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeBankingAccountModel>;\r\n\r\n  isLoaded: boolean = false;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  selectedAccountBank: IEmployeeBankingAccountModel;\r\n\r\n  constructor(\r\n    private empBankingService: EmployeeBankingAccountService,\r\n    public dialogRef: MatDialogRef<EmpBankingAccountDataDialogComponent>\r\n  ) {\r\n    super();\r\n    //  this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    // this.form?.get('statusDate').setValue()\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_banking_account_data_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNullable: true}],\r\n        bank_ID: [null, [Validators.required]],\r\n        accountNo: [null, [Validators.required, CustomValidators.number]],\r\n        startDate: [null, [Validators.required, CustomValidators.date]],\r\n        cardNumber: [null], // not used in screen yet value (null)\r\n        isDebit: [false], // not used in screen yet value (null)\r\n        branchId: [null], // not used in screen yet value (null)\r\n      },\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.isHaseUpdate);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeInstanceId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.empBankingService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeBankingAccountModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empBankingAccountDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeBankingAccountRequest = {\r\n        employeeData: {\r\n          person_Instance_ID: this.employeeInstanceId,\r\n          bank_ID: this.form.value.bank_ID,\r\n          accountNo: this.form.value.accountNo,\r\n          from_Date: HelpersFunctions.mapDateReverse(this.form.value.startDate),\r\n          cardNumber: this.form.value.cardNumber,\r\n          isDebit: this.form.value.isDebit ?? false,\r\n          branchId: this.form.value.branchId,\r\n        },\r\n      };\r\n\r\n      this.formCtrls.id.value == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeBankingAccountRequest) {\r\n    this.showLoading();\r\n    this.empBankingService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeBankingAccountModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.isHaseUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeBankingAccountRequest) {\r\n    let editModel: IEditEmployeeBankingAccountRequest = {\r\n      ...model,\r\n      OldEmployeeData: {\r\n        person_Instance_ID: this.employeeInstanceId,\r\n        bank_ID: this.selectedAccountBank.bank_ID,\r\n        accountNo: this.selectedAccountBank.accountNo,\r\n      },\r\n    };\r\n    this.showLoading();\r\n    this.empBankingService\r\n      .update(editModel)\r\n      .subscribe((res: IResponse<IEmployeeBankingAccountModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.isHaseUpdate = true;\r\n          this.selectedAccountBank = null;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeBankingAccountToEdit(\r\n    employeeBankingAccountInfo: IEmployeeBankingAccountModel\r\n  ) {\r\n    this.form.patchValue(employeeBankingAccountInfo);\r\n    this.formCtrls.startDate.setValue(employeeBankingAccountInfo.from_Date);\r\n    // to detect edit mode\r\n    this.formCtrls.id.setValue(employeeBankingAccountInfo.bank_ID);\r\n    this.selectedAccountBank = employeeBankingAccountInfo;\r\n  }\r\n\r\n  onDelete(employeeBankingAccountInfo: IEmployeeBankingAccountModel): void {\r\n    let msg = employeeBankingAccountInfo.bank;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employeeBankingAccountInfo);\r\n    });\r\n  }\r\n\r\n  delete(employeeBankingAccountInfo: IEmployeeBankingAccountModel) {\r\n    let deleteParams: IEmployeeBankingAccountDeleteParams = {\r\n      Person_Instance_ID: this.employeeInstanceId,\r\n      Bank_ID: employeeBankingAccountInfo.bank_ID,\r\n      AccountNum: employeeBankingAccountInfo.accountNo,\r\n    };\r\n    this.showLoading();\r\n    this.empBankingService.Delete(deleteParams).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.dialogSize);\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.dialogSize);\r\n        }\r\n        this.isHaseUpdate = true;\r\n        if (\r\n          employeeBankingAccountInfo.comm_Bank?.id ==\r\n          this.selectedAccountBank?.bank_ID &&\r\n          employeeBankingAccountInfo.accountNo ==\r\n          this.selectedAccountBank?.accountNo &&\r\n          // if edit\r\n          this.formCtrls.id.value > 0\r\n        )\r\n          this.clearForm();\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    //  this.form.reset({id: 0, statusDate: this.statusDate});\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title\r\n      class=\"d-inline-block mtop-5\"\r\n      title=\"bankingAccountData\"\r\n    >\r\n    </page-title>\r\n  </h4>\r\n\r\n  <button mat-icon-button class=\"float-right mb-1 mr-1\" (click)=\"onCloseDialog()\">\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-bank-dropdown\r\n          [control]=\"formCtrls.bank_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-bank-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.accountNo\"\r\n          [submitted]=\"submitted\"\r\n          label=\"accountNo\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.startDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"startDate\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeBankingAccountToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { IGUIModel } from \"app/shared/interfaces/user-views\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"emp-payments-info-core\",\r\n\ttemplateUrl: \"./emp-payments-info-core.component.html\",\r\n\tstyleUrls: [\"./emp-payments-info-core.component.scss\"],\r\n})\r\nexport class EmpPaymentsInfoCoreComponent extends AppHelpers implements OnInit {\r\n\t@Input() icon: string;\r\n\tallowedSections: IGUIModel[];\r\n\tviewsManager = ViewsManager;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\toverride onModulesChanged() {\r\n\t\tthis.allowedSections = this.getCustomViewChildren(\r\n\t\t\tthis.getParentViewName,\r\n\t\t\tViewsManager.emp_payments_info_tab\r\n\t\t);\r\n\t\t//  console.log(\"payments_info\", this.allowedSections);\r\n\t}\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title class=\"main-card-title border-bottom\">\r\n        <page-title\r\n          title=\"paymentsInfo\"\r\n          [icon]=\"icon\"\r\n          color=\"info\"\r\n        ></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid p-0\">\r\n        <div class=\"row mx-md-n2\">\r\n          <!-- Payroll Data -->\r\n          <div\r\n            class=\"col-md-6 col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_payroll_data_sec)\"\r\n          >\r\n            <app-emp-payroll-data-card> </app-emp-payroll-data-card>\r\n          </div>\r\n\r\n          <!-- Banking Account Data -->\r\n          <div\r\n            class=\"col-md-6 col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_banking_account_data_sec)\"\r\n          >\r\n            <app-emp-banking-account-data-card> </app-emp-banking-account-data-card>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  IEmployeePayrollDisplayModel,\r\n  IEmployeePayrollModel,\r\n} from \"app/personnel-setup/models/payments-information/emp-payroll-data\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeePayrollService } from \"app/personnel-setup/services/employees/payments-info/employee-payroll.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmpPayrollDataDialogComponent } from \"../emp-payroll-data-dialog/emp-payroll-data-dialog.component\";\r\nimport { empPayrollDisplay } from \"app/personnel-setup/mapper/emp-payments-info\";\r\n\r\n@Component({\r\n  selector: \"app-emp-payroll-data-card\",\r\n  templateUrl: \"./emp-payroll-data-card.component.html\",\r\n  styleUrls: [\"./emp-payroll-data-card.component.scss\"],\r\n})\r\nexport class EmpPayrollDataCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number;\r\n\r\n  paymentsAndVariables: IEmployeePayrollDisplayModel[];\r\n  firstExpandedIndex: number = 0;\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private employeePayrollService: EmployeePayrollService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.paymentsAndVariables = [];\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllByEmployeeId();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAllByEmployeeId() {\r\n    this.paymentsAndVariables = [];\r\n    this.employeePayrollService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeePayrollModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.paymentsAndVariables = empPayrollDisplay(res.data);\r\n          this.firstExpandedIndex = this.paymentsAndVariables.findIndex(\r\n            (ele) => ele.variables.length > 0\r\n          );\r\n          if (this.firstExpandedIndex == -1) this.firstExpandedIndex = 0;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpPayrollDataDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAllByEmployeeId();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"\r\n      paymentsAndVariables?.length > 1 ||\r\n      paymentsAndVariables[0]?.variables?.length > 0\r\n    \"\r\n    cardTitle=\"payrollData\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <ng-container\r\n      *ngFor=\"let payment of paymentsAndVariables; index as mainIndex\"\r\n    >\r\n      <div class=\"rowItem\" *ngIf=\"mainIndex <= firstExpandedIndex\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <p>{{ payment?.payment | titlecase }}</p>\r\n          </div>\r\n          <div\r\n            class=\"col-6 mb-2\"\r\n            *ngIf=\"payment?.variables?.length > 0; else noVariables\"\r\n          >\r\n            <div class=\"row\" *ngFor=\"let variable of payment?.variables\">\r\n              <p class=\"col-md-7 col-12\">{{ variable?.variable }}</p>\r\n              <p class=\"col-md-5 col-12\">{{ variable?.value }}</p>\r\n            </div>\r\n          </div>\r\n          <ng-template #noVariables>\r\n            <div class=\"col-6\">\r\n              {{ \"---\" }}\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <card-row-item\r\n      *ngIf=\"employeeId == 0\"\r\n      label=\"globalVariable\"\r\n    ></card-row-item>\r\n\r\n    <!-- <card-row-item\r\n      label=\"paymentMethod\"\r\n      [value]=\"employeePayrollInfo?.paymentMethod\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"lastCalculatedMonth\"\r\n      [value]=\"employeePayrollInfo?.accountNumber\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      [value]=\"employeePayrollInfo?.date\"\r\n      valueClass=\"col-6 text-muted\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"netSalary\"\r\n      [value]=\"employeePayrollInfo?.netSalary\"\r\n    ></card-row-item> -->\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"4\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { empPayrollDisplay } from \"app/personnel-setup/mapper/emp-payments-info\";\r\nimport {\r\n  IEmployeePayrollDisplayModel,\r\n  IEmployeePayrollModel,\r\n} from \"app/personnel-setup/models/payments-information/emp-payroll-data\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeePayrollService } from \"app/personnel-setup/services/employees/payments-info/employee-payroll.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n  selector: \"app-emp-payroll-data-dialog\",\r\n  templateUrl: \"./emp-payroll-data-dialog.component.html\",\r\n  styleUrls: [\"./emp-payroll-data-dialog.component.scss\"],\r\n})\r\nexport class EmpPayrollDataDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit\r\n{\r\n  employeeId: number = 0;\r\n  // updated: boolean = false;\r\n\r\n  // mandatoryColomns: string[] = [\r\n  //   \"Ser\",\r\n  //   // \"id\",\r\n  //   \"bank\",\r\n  //   \"accountNumber\",\r\n  //   \"startDate\",\r\n  //   \"actions\",\r\n  // ];\r\n  // optionalColomns: string[] = [];\r\n  // dataSource: MatTableDataSource<IEmployeePayrollModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  paymentsAndVariables: IEmployeePayrollDisplayModel[];\r\n  firstExpandedIndex: number = 0;\r\n\r\n  constructor(\r\n    private employeePayrollService: EmployeePayrollService,\r\n    public dialogRef: MatDialogRef<EmpPayrollDataDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.form = this.fb.group({\r\n    //   id: [0, { nonNullable: true }],\r\n    //   paymentMethodId: [null, [Validators.required]],\r\n    //   basicSalary: [null, [Validators.required]],\r\n    //   insuranceEmployee: [null, [Validators.required]],\r\n    //   netSalary: [null, [Validators.required]],\r\n    //   allowance: [null, [Validators.required]],\r\n    // });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(/* this.updated */ false);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    // if (this.dataSource?.data?.length > 0)\r\n    //   this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany() && this.employeeId > 0) this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.employeePayrollService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeePayrollModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.paymentsAndVariables = empPayrollDisplay(res.data);\r\n          console.log(this.paymentsAndVariables);\r\n\r\n          this.firstExpandedIndex = this.paymentsAndVariables.findIndex(\r\n            (ele) => ele.variables.length > 0\r\n          );\r\n          // this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  // submit() {\r\n  //   // console.log(this.form.value);\r\n  //   this.submitted = true;\r\n  //   if (this.form.valid) {\r\n  //     const model: IEmployeePayrollRequest = {\r\n  //       Person_ID: this.employeeId,\r\n  //       id: this.form.value.id,\r\n  //       paymentMethodId: this.form.value.paymentMethodId,\r\n  //       basicSalary: this.form.value.basicSalary,\r\n  //       insuranceEmployee: this.form.value.insuranceEmployee,\r\n  //       netSalary: this.form.value.netSalary,\r\n  //       allowance: this.form.value.allowance,\r\n  //     };\r\n\r\n  //     model.id == 0 ? this.create(model) : this.update(model);\r\n  //   } // else this.toastr.error(\"General.formNotValid\");\r\n  // }\r\n\r\n  // create(model: IEmployeePayrollRequest) {\r\n  //   this.showLoading();\r\n  //   this.employeePayrollService\r\n  //     .create(model)\r\n  //     .subscribe((res: IResponse<IEmployeePayrollModel>) => {\r\n  //       if (res?.message?.messageType == MessageTypes.Success) {\r\n  //         this.clearForm();\r\n  //         this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getAll();\r\n  //         this.updated = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  // update(model: IEmployeePayrollRequest) {\r\n  //   this.showLoading();\r\n  //   this.employeePayrollService\r\n  //     .update(model)\r\n  //     .subscribe((res: IResponse<IEmployeePayrollModel>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.clearForm();\r\n  //         this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getAll();\r\n  //         this.updated = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  // employeePayrollToEdit(employeePayrollInfo: IEmployeePayrollModel) {\r\n  //   this.form.patchValue(employeePayrollInfo);\r\n  //   // console.log(this.form.value);\r\n  // }\r\n\r\n  // onDelete(employeePayrollInfo: IEmployeePayrollModel): void {\r\n  //   let msg = this.msgTranslate(employeePayrollInfo.paymentMethod);\r\n  //   this.deleateDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(employeePayrollInfo);\r\n  //   });\r\n  // }\r\n\r\n  // delete(employeePayrollInfo: IEmployeePayrollModel) {\r\n  //   this.showLoading();\r\n  //   this.employeePayrollService\r\n  //     .Delete(employeePayrollInfo.id)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getAll();\r\n  //         this.updated = true;\r\n  //         if (employeePayrollInfo.id == this.formCtrls.id.value)\r\n  //           this.clearForm();\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"payrollData\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <ng-container *ngIf=\"employeeId > 0\">\r\n    <mat-accordion class=\"emp-payroll\" multi *ngIf=\"isLoaded; else notLoaded\">\r\n      <ng-container *ngFor=\"let payment of paymentsAndVariables; index as i\">\r\n        <mat-expansion-panel\r\n          [hideToggle]=\"payment.variables == 0\"\r\n          [expanded]=\"i == firstExpandedIndex\"\r\n          [disabled]=\"payment.variables.length == 0\"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              {{ payment.payment | titlecase }}\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <div *ngFor=\"let variable of payment.variables\">\r\n            <div class=\"row\">\r\n              <p class=\"col-8\">{{ variable.variable }}</p>\r\n              <p class=\"col-4\">{{ variable.value }}</p>\r\n            </div>\r\n          </div>\r\n        </mat-expansion-panel>\r\n      </ng-container>\r\n    </mat-accordion>\r\n\r\n    <ng-template #notLoaded>\r\n      <app-emp-payment-skeleton></app-emp-payment-skeleton>\r\n    </ng-template>\r\n  </ng-container>\r\n\r\n  <!-- <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-payment-method-dropdown\r\n          [control]=\"formCtrls.paymentMethodId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-payment-method-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.basicSalary\"\r\n          [submitted]=\"submitted\"\r\n          label=\"basicSalary\"\r\n          type=\"number\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.insuranceEmployee\"\r\n          [submitted]=\"submitted\"\r\n          label=\"insuranceEmployee\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.netSalary\"\r\n          [submitted]=\"submitted\"\r\n          label=\"netSalary\"\r\n          type=\"number\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.allowance\"\r\n          [submitted]=\"submitted\"\r\n          label=\"allowance\"\r\n          type=\"number\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n    </div>\r\n  </form> -->\r\n\r\n  <!-- <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      color=\"btn-lightGreen\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div> -->\r\n\r\n  <!-- <app-material-table\r\n    *ngIf=\"employeeId > 0\"\r\n    [isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [actions]=\"rowFunctions\"\r\n    (editRow)=\"employeePayrollToEdit($event)\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    [showPaginator]=\"false\"\r\n    [showFilter]=\"false\"\r\n  >\r\n  </app-material-table> -->\r\n\r\n  <p-messages severity=\"warn\" *ngIf=\"employeeId == 0\">\r\n    <ng-template pTemplate>\r\n      <span class=\"p-message-icon pi pi-exclamation-triangle\"></span>\r\n      <div class=\"p-message-detail\">\r\n        {{ \"noDataToDisplay\" | translate }}\r\n      </div>\r\n    </ng-template>\r\n  </p-messages>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { employeeAddressToMap } from \"app/personnel-setup/mapper/emp-contact-address\";\r\nimport { IEmployeeAddress, IEmployeeAddressModel, } from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeAddressService } from \"app/personnel-setup/services/employees/personal-info/employee-address.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmpAddressDialogComponent } from \"../emp-address-dialog/emp-address-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"emp-address-card\",\r\n  templateUrl: \"./emp-address-card.component.html\",\r\n  styleUrls: [\"./emp-address-card.component.scss\"],\r\n})\r\nexport class EmpAddressCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number;\r\n  employeeAddressInfo: IEmployeeAddress;\r\n\r\n  isAddressLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(private employeeAddressService: EmployeeAddressService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.employeeAddressInfo = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.GetAllEmpAddress();\r\n    } else {\r\n      this.isAddressLoaded = true;\r\n    }\r\n  }\r\n\r\n  GetAllEmpAddress() {\r\n    return this.employeeAddressService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeAddressModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.isAddressLoaded = true;\r\n          let employeeAddressesFromNewest: IEmployeeAddress[] =\r\n            employeeAddressToMap(res.data).reverse();\r\n          this.employeeAddressInfo =\r\n            employeeAddressesFromNewest.find(\r\n              (address) => address.primary == true\r\n            ) ?? employeeAddressesFromNewest[0];\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpAddressDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((isUpdated: boolean) => {\r\n        if (isUpdated) {\r\n          this.isAddressLoaded = false;\r\n          this.GetAllEmpAddress();\r\n        }\r\n      });\r\n  }\r\n\r\n  afterDelete(address: IEmployeeAddress) {\r\n    if (address) {\r\n      this.isAddressLoaded = false;\r\n      this.GetAllEmpAddress();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n}\r\n","<div\r\n  class=\"card-view border-bottom\"\r\n  *ngIf=\"isAddressLoaded; else notLoaded\"\r\n>\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">\r\n      <card-header\r\n        [isEdit]=\"employeeAddressInfo\"\r\n        [isLoaded]=\"isAddressLoaded\"\r\n        (onClickIcon)=\"openAddEditDialog()\"\r\n        cardTitle=\"address\"\r\n        class=\"side_title\">\r\n\r\n      </card-header>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n      <div *ngIf=\"!isTableView\" class=\"view-data-row-container\">\r\n        <card-row-item class=\"w-25\"\r\n                       label=\"country\"\r\n                       [value]=\"employeeAddressInfo?.country\">\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\"\r\n                       label=\"governorate\"\r\n                       [value]=\"employeeAddressInfo?.governorate\">\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\"\r\n                       label=\"address\"\r\n                       [value]=\"employeeAddressInfo?.address\">\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\"\r\n                       label=\"primary\"\r\n                       [value]=\"employeeAddressInfo?.primary\">\r\n        </card-row-item>\r\n\r\n      </div>\r\n\r\n      <emp-address-table *ngIf=\"isTableView\"\r\n                         [isMatPaginator]=\"true\"\r\n                         [hideActions]=\"true\"\r\n                         (afterDelete)=\"afterDelete($event)\">\r\n      </emp-address-table>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <see-more-btn [isTableView]=\"isTableView\" (toggleTable)=\"toggleTable()\"></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton [rowNo]=\"4\"></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  IEmployeeAddress,\r\n  IEmployeeAddressModel,\r\n  IEmployeeAddressRequest,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeAddressService } from \"app/personnel-setup/services/employees/personal-info/employee-address.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-emp-address-dialog\",\r\n  templateUrl: \"./emp-address-dialog.component.html\",\r\n  styleUrls: [\"./emp-address-dialog.component.scss\"],\r\n})\r\nexport class EmpAddressDialogComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  // @Output() changUpdated = new EventEmitter<boolean>();\r\n  hasUpdate: boolean = false;\r\n\r\n  // mandatoryColomns: string[] = [\r\n  //   \"Ser\",\r\n  //   // \"id\",\r\n  //   \"country\",\r\n  //   \"governorate\",\r\n  //   \"address\",\r\n  //   \"primary\",\r\n  //   \"actions\",\r\n  // ];\r\n  // optionalColomns: string[] = [];\r\n  // dataSource: MatTableDataSource<IEmployeeAddress>;\r\n  // isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private employeeAddressService: EmployeeAddressService,\r\n    public dialogRef: MatDialogRef<EmpAddressDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_contact_address_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      countryId: [null, [Validators.required]],\r\n      Governorate_ID: [null, [Validators.required]],\r\n      address: [null, [Validators.required]],\r\n      primary: [null],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.hasUpdate);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {\r\n  //   if (this.dataSource?.data?.length > 0)\r\n  //     this.dataSource = new MatTableDataSource(null);\r\n  //   if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) {\r\n  //     this.getList(this.firstPage);\r\n  //   }\r\n  // }\r\n\r\n  // getList(page: number, pageSize?: number) {\r\n  //   this.page.pageIndex = page;\r\n  //   if (pageSize) this.page.dialogSize = pageSize;\r\n  //   let params: IPageParams = {\r\n  //     PageNumber: page,\r\n  //     pageSize: this.page.dialogSize,\r\n  //   };\r\n  //   this.employeeAddressService\r\n  //     .GetList(this.employeeId, params)\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponseList<IEmployeeAddressModel[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.dataSource = new MatTableDataSource(\r\n  //           employeeAddressToMap(res.data)\r\n  //         );\r\n  //         this.page.length = res.meta.totalItemCount;\r\n  //         this.isLoaded = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //     });\r\n  // }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeAddressRequest = {\r\n        EmployeeData: {\r\n          Person_ID: this.employeeId,\r\n          Comm_Address: {\r\n            ID: this.form.value.id,\r\n            Governorate_ID: this.form.value.Governorate_ID,\r\n            En_Name: this.form.value.address,\r\n            IsVaild: this.form.value.primary ?? false,\r\n          },\r\n        },\r\n      };\r\n\r\n      model.EmployeeData.Comm_Address.ID == 0\r\n        ? this.create(model)\r\n        : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeAddressRequest) {\r\n    this.showLoading();\r\n    this.employeeAddressService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeAddressModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.firstPage);\r\n          this.hasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeAddressRequest) {\r\n    this.showLoading();\r\n    this.employeeAddressService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmployeeAddressModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeAddressToEdit(address: IEmployeeAddress) {\r\n    this.form.patchValue(address);\r\n    this.formCtrls.countryId.setValue(address.comm_Governorate.comm_Country.id);\r\n    this.formCtrls.Governorate_ID.setValue(address.governorate_ID);\r\n  }\r\n\r\n  // onDelete(address: IEmployeeAddress): void {\r\n  //   let msg = address.address;\r\n  //   this.deleteDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(address);\r\n  //   });\r\n  // }\r\n\r\n  // delete(address: IEmployeeAddress) {\r\n  //   let deleteParams: IEmployeeAddressDeleteParams = {\r\n  //     Person_ID: this.employeeId,\r\n  //     ADDRESS_ID: address.id,\r\n  //   };\r\n  //   this.showLoading();\r\n  //   this.employeeAddressService\r\n  //     .Delete(deleteParams)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n  //           // if last item in list: get previous page\r\n  //           this.getList(this.prevPage, this.page.dialogSize);\r\n  //         } else {\r\n  //           // if not last item in list: get current page\r\n  //           this.getList(this.currentPage, this.page.dialogSize);\r\n  //         }\r\n  //         // this.changUpdated.emit(true);\r\n  //         this.updated = true;\r\n  //         if (address.id == this.formCtrls.id.value)\r\n  //           this.clearForm();\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  afterDelete(address: IEmployeeAddress) {\r\n    if (address?.id == this.formCtrls.id.value) this.clearForm();\r\n    if (address) this.hasUpdate = true;\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"address\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-country-dropdown\r\n          [control]=\"formCtrls.countryId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-country-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-governorate-by-country-dropdown\r\n          [control]=\"formCtrls.Governorate_ID\"\r\n          [countryControl]=\"formCtrls.countryId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-governorate-by-country-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.address\"\r\n          [submitted]=\"submitted\"\r\n          label=\"address\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12 mbottom-20 mtop-14\">\r\n        <app-check-box\r\n          [control]=\"formCtrls.primary\"\r\n          label=\"primary\"\r\n        ></app-check-box>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <!-- <app-material-table\r\n    *ngIf=\"employeeId > 0\"\r\n    [isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [actions]=\"rowFunctions\"\r\n    [isDialogSize]=\"true\"\r\n    [showFilter]=\"false\"\r\n    [page]=\"page\"\r\n    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n    (editRow)=\"employeeAddressToEdit($event)\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    class=\"table-in-forms\"\r\n  >\r\n  </app-material-table> -->\r\n\r\n  <emp-address-table\r\n    [hasUpdate]=\"hasUpdate\"\r\n    (rowToEdit)=\"employeeAddressToEdit($event)\"\r\n    (afterDelete)=\"afterDelete($event)\"\r\n  ></emp-address-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { employeeAddressToMap } from \"app/personnel-setup/mapper/emp-contact-address\";\r\nimport {\r\n  IEmployeeAddress,\r\n  IEmployeeAddressDeleteParams,\r\n  IEmployeeAddressModel,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeAddressService } from \"app/personnel-setup/services/employees/personal-info/employee-address.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { EmpDataTableImplement } from \"app/personnel-setup/models/implements/emp-data-table.implement\";\r\n\r\n@Component({\r\n  selector: \"emp-address-table\",\r\n  templateUrl: \"./emp-address-table.component.html\",\r\n  styleUrls: [\"./emp-address-table.component.scss\"],\r\n})\r\nexport class EmpAddressTableComponent extends AppHelpers implements EmpDataTableImplement, OnChanges {\r\n  @Input() hasUpdate: boolean;\r\n  @Input() hideActions: boolean = false;\r\n  @Input() isMatPaginator: boolean = false;\r\n  @Output() rowToEdit = new EventEmitter<IEmployeeAddress>();\r\n  @Output() afterDelete = new EventEmitter<IEmployeeAddress>();\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"country\",\r\n    \"governorate\",\r\n    \"address\",\r\n    \"primary\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeAddress>;\r\n  isLoaded: boolean = false;\r\n  employeeId: number = 0;\r\n\r\n  constructor(private employeeAddressService: EmployeeAddressService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_contact_address_sec\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasUpdate && changes.hasUpdate.currentValue && this.employeeId > 0) this.getList(this.firstPage);\r\n    if (this.hideActions) {\r\n      let editIndex = this.rowFunctions.basic.findIndex(e => e.name.toLowerCase() == \"edit\");\r\n      this.rowFunctions.basic.splice(editIndex, 1);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeAddressService\r\n      .GetList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeAddressModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            employeeAddressToMap(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  toEdit(address: IEmployeeAddress) {\r\n    this.rowToEdit.emit(address);\r\n  }\r\n\r\n  onDelete(address: IEmployeeAddress): void {\r\n    let msg = address.address;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(address);\r\n    });\r\n  }\r\n\r\n  delete(address: IEmployeeAddress) {\r\n    let deleteParams: IEmployeeAddressDeleteParams = {\r\n      Person_ID: this.employeeId,\r\n      ADDRESS_ID: address.id,\r\n    };\r\n    this.showLoading();\r\n    this.employeeAddressService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.afterDelete.emit(address);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          }\r\n          else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<app-material-table *ngIf=\"employeeId > 0\"\r\n                    [isLoaded]=\"isLoaded\"\r\n                    [dataSource]=\"dataSource\"\r\n                    [mandatoryColomns]=\"mandatoryColomns\"\r\n                    [optionalColomns]=\"optionalColomns\"\r\n                    [actions]=\"rowFunctions\"\r\n                    [isDialogSize]=\"true\"\r\n                    [showFilter]=\"false\"\r\n                    [page]=\"page\"\r\n                    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                    (editRow)=\"toEdit($event)\"\r\n                    (deleteRow)=\"onDelete($event)\"\r\n                    class=\"table-in-forms\"\r\n                    [isMatPaginator]=\"isMatPaginator\"\r\n                    [showFirstLastButtons]=\"false\"\r\n                    [showSpaceTop]=\"false\">\r\n</app-material-table>\r\n<ngx-spinner></ngx-spinner>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { empContactCard } from \"app/personnel-setup/mapper/emp-contact-address\";\r\nimport {\r\n  IEmployeeContactCard,\r\n  IEmployeeContactDisplay,\r\n  IEmployeeContactResponse,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeContactService } from \"app/personnel-setup/services/employees/personal-info/employee-contact.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmpContactDialogComponent } from \"../emp-contact-dialog/emp-contact-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"emp-contact-card\",\r\n  templateUrl: \"./emp-contact-card.component.html\",\r\n  styleUrls: [\"./emp-contact-card.component.scss\"],\r\n})\r\nexport class EmpContactCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number;\r\n  empContacts: IEmployeeContactCard;\r\n\r\n  isContactLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(private employeeContactService: EmployeeContactService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empContacts = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.GetAllEmpContacts();\r\n    }\r\n    else {\r\n      this.isContactLoaded = true;\r\n    }\r\n  }\r\n\r\n  GetAllEmpContacts() {\r\n    return this.employeeContactService\r\n      .GetAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeContactResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.isContactLoaded = true;\r\n          this.empContacts = empContactCard(res.data);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpContactDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((isUpdated: boolean) => {\r\n        if (isUpdated) {\r\n          this.isContactLoaded = false;\r\n          this.GetAllEmpContacts();\r\n        }\r\n      });\r\n  }\r\n\r\n  afterDelete(contact: IEmployeeContactDisplay) {\r\n    if (contact) {\r\n      this.isContactLoaded = false;\r\n      this.GetAllEmpContacts();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n\r\n  iteration(a, b): number {\r\n    return a.key - b.key;\r\n  }\r\n}\r\n","<div\r\n  class=\"card-view border-bottom\"\r\n  *ngIf=\"isContactLoaded; else notLoaded\"\r\n>\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">\r\n      <card-header [isEdit]=\"empContacts\"\r\n                   [isLoaded]=\"isContactLoaded\"\r\n                   (onClickIcon)=\"openAddEditDialog()\"\r\n                   cardTitle=\"contact\"\r\n                   class=\"side_title\">\r\n      </card-header>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n      <div *ngIf=\"!isTableView\" class=\"view-data-row-container\">\r\n        <div class=\"w-25\"\r\n             *ngFor=\"let contactType of empContacts | keyvalue : iteration\">\r\n          <div class=\"col\">\r\n            <p class=\"view-data-title\">\r\n              {{ contactType.key | translate | titlecase }}\r\n            </p>\r\n            <div class=\"view-data-value\">\r\n              <div class=\"d-inline-block\">\r\n                <ng-container *ngFor=\"let contact of contactType.value; let lst = last\">\r\n                  <!-- if not Social Accounts (haven't ICON) -->\r\n                  <span *ngIf=\"!contact?.comm_Contact_Category?.icon\">\r\n                    {{ contact.value }} {{ !lst ? \"-\" : \"\" }}\r\n                  </span>\r\n\r\n                  <!-- if Social Accounts (have ICON) -->\r\n                  <span *ngIf=\"contact?.comm_Contact_Category?.icon\">\r\n                    <a [href]=\"contact.value\"\r\n                       target=\"_blank\"\r\n                       class=\"mr-1 ml-1 font-medium-3\">\r\n                      <i [class]=\"contact.comm_Contact_Category.icon\"></i>\r\n                    </a>\r\n                  </span>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!--        <div class=\"rowItem\">-->\r\n          <!--          <div class=\"row\">-->\r\n          <!--            <div class=\"col-6\">-->\r\n          <!--              <p>{{ contactType.key | translate | titlecase }}</p>-->\r\n          <!--            </div>-->\r\n          <!--            <div class=\"col-6\">-->\r\n          <!--              <ng-container *ngFor=\"let contact of contactType.value; let lst = last\">-->\r\n\r\n          <!--                &lt;!&ndash; if not Social Accounts (haven't ICON) &ndash;&gt;-->\r\n          <!--                <span *ngIf=\"!contact?.comm_Contact_Category?.icon\">-->\r\n          <!--\t\t\t\t\t    \t{{ contact.value }} {{ !lst ? \"-\" : \"\" }}-->\r\n          <!--\t\t\t\t\t    </span>-->\r\n\r\n          <!--                &lt;!&ndash; if Social Accounts (have ICON) &ndash;&gt;-->\r\n          <!--                <span *ngIf=\"contact?.comm_Contact_Category?.icon\">-->\r\n          <!--                <a [href]=\"contact.value\" target=\"_blank\" class=\"mr-1 ml-1 font-medium-3\">-->\r\n          <!--                  <i [class]=\"contact.comm_Contact_Category.icon\"></i>-->\r\n          <!--                </a>-->\r\n          <!--              </span>-->\r\n          <!--              </ng-container>-->\r\n          <!--            </div>-->\r\n          <!--          </div>-->\r\n          <!--        </div>-->\r\n\r\n          <!--          <card-row-item [label]=\"contactType.key\" [displayPlaceholder]=\"false\">-->\r\n          <!--            <ng-container *ngFor=\"let contact of contactType.value; let lst = last\">-->\r\n\r\n          <!--              &lt;!&ndash; if not Social Accounts (haven't ICON) &ndash;&gt;-->\r\n          <!--              <span *ngIf=\"!contact?.comm_Contact_Category?.icon\">-->\r\n          <!--        \t\t\t\t\t    \t{{ contact.value }} {{ !lst ? \"-\" : \"\" }}-->\r\n          <!--        \t\t\t\t\t    </span>-->\r\n\r\n          <!--              &lt;!&ndash; if Social Accounts (have ICON) &ndash;&gt;-->\r\n          <!--              <span *ngIf=\"contact?.comm_Contact_Category?.icon\">-->\r\n          <!--                        <a [href]=\"contact.value\" target=\"_blank\" class=\"mr-1 ml-1 font-medium-3\">-->\r\n          <!--                          <i [class]=\"contact.comm_Contact_Category.icon\"></i>-->\r\n          <!--                        </a>-->\r\n          <!--                      </span>-->\r\n          <!--            </ng-container>-->\r\n          <!--          </card-row-item>-->\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"(empContacts | json) == '{}'\">\r\n          <card-row-item class=\"w-15\" label=\"contact\"></card-row-item>\r\n        </ng-container>\r\n      </div>\r\n      <emp-contact-table *ngIf=\"isTableView\"\r\n                         [isMatPaginator]=\"true\"\r\n                         [hideActions]=\"true\"\r\n                         (afterDelete)=\"afterDelete($event)\">\r\n      </emp-contact-table>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <see-more-btn [isTableView]=\"isTableView\" (toggleTable)=\"toggleTable()\"></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"5\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  IEmployeeContactDisplay,\r\n  IEmployeeContactRequest,\r\n  IEmployeeContactResponse,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { IContactTypeModel } from \"app/system-setup/hr-setup/models/contact-type\";\r\n\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { EmployeeContactService } from \"app/personnel-setup/services/employees/personal-info/employee-contact.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-emp-contact-dialog\",\r\n  templateUrl: \"./emp-contact-dialog.component.html\",\r\n  styleUrls: [\"./emp-contact-dialog.component.scss\"],\r\n})\r\nexport class EmpContactDialogComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  // @Output() changUpdated = new EventEmitter<boolean>();\r\n  hasUpdate: boolean = false;\r\n\r\n  // mandatoryColomns: string[] = [\r\n  //   \"Ser\",\r\n  //   \"contactType\",\r\n  //   \"contactCategory\",\r\n  //   \"contact\",\r\n  //   \"primary\",\r\n  //   \"display_in_emp_card\",\r\n  //   \"actions\",\r\n  // ];\r\n  // optionalColomns: string[] = [];\r\n  // dataSource: MatTableDataSource<IEmployeeContactDisplay>;\r\n  // isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private employeeContactService: EmployeeContactService,\r\n    public dialogRef: MatDialogRef<EmpContactDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_contact_address_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      contacT_TYPE_ID: [null, [Validators.required]],\r\n      contacT_Category_ID: [null],\r\n      value: [null, [Validators.required]],\r\n      isPrimary: [null],\r\n      isShow: [null],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.hasUpdate);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {\r\n  //   if (this.dataSource?.data?.length > 0)\r\n  //     this.dataSource = new MatTableDataSource(null);\r\n  //   if (this.checkNoBusinessOrCompany()) {\r\n  //     if (this.employeeId > 0) this.getList(this.firstPage);\r\n  //   }\r\n  // }\r\n\r\n  // getList(page: number, pageSize?: number) {\r\n  //   this.page.pageIndex = page;\r\n  //   if (pageSize) this.page.dialogSize = pageSize;\r\n  //   let params: IPageParams = {\r\n  //     PageNumber: page,\r\n  //     pageSize: this.page.dialogSize,\r\n  //   };\r\n  //   this.employeeContactService\r\n  //     .GetList(this.employeeId, params)\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponseList<IEmployeeContactResponse[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.dataSource = new MatTableDataSource(empContactDisplay(res.data));\r\n  //         this.page.length = res.meta.totalItemCount;\r\n  //         this.isLoaded = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //     });\r\n  // }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeContactRequest = {\r\n        EmployeeData: {\r\n          Person_ID: this.employeeId,\r\n          Comm_Contact: {\r\n            id: this.form.value.id,\r\n            contacT_TYPE_ID: this.form.value.contacT_TYPE_ID,\r\n            contacT_Category_ID: this.form.value.contacT_Category_ID,\r\n            value: this.form.value.value,\r\n            isVaild: this.form.value.isPrimary ?? false,\r\n            isShow: this.form.value.isShow ?? false,\r\n          },\r\n        },\r\n      };\r\n\r\n      model.EmployeeData.Comm_Contact.id == 0\r\n        ? this.create(model)\r\n        : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeContactRequest) {\r\n    this.showLoading();\r\n    this.employeeContactService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeContactResponse>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.firstPage);\r\n          this.hasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeContactRequest) {\r\n    this.showLoading();\r\n    this.employeeContactService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmployeeContactResponse>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeContactToEdit(empContacts: IEmployeeContactDisplay) {\r\n    this.form.patchValue(empContacts);\r\n    this.formCtrls.value.setValue(empContacts.contact);\r\n    this.formCtrls.id.setValue(empContacts.contact_ID);\r\n    this.formCtrls.isPrimary.setValue(empContacts.primary);\r\n    this.formCtrls.isShow.setValue(empContacts.display_in_emp_card);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  // onDelete(contact: IEmployeeContactDisplay): void {\r\n  //   let msg = contact.contact;\r\n  //   this.deleteDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(contact);\r\n  //   });\r\n  // }\r\n\r\n  // delete(contact: IEmployeeContactDisplay) {\r\n  //   let deleteParams: IEmployeeContactDeleteParams = {\r\n  //     Person_ID: this.employeeId,\r\n  //     Contact_ID: contact.contact_ID,\r\n  //   };\r\n  //   this.showLoading();\r\n  //   this.employeeContactService\r\n  //     .Delete(deleteParams)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n  //           // if last item in list: get previous page\r\n  //           this.getList(this.prevPage, this.page.dialogSize);\r\n  //         } else {\r\n  //           // if not last item in list: get current page\r\n  //           this.getList(this.currentPage, this.page.dialogSize);\r\n  //         }\r\n  //         // this.changUpdated.emit(true);\r\n  //         this.updated = true;\r\n  //         if (contact.contact_ID == this.formCtrls.id.value) this.clearForm();\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  afterDelete(contact: IEmployeeContactDisplay) {\r\n    if (contact.contact_ID == this.formCtrls.id.value) this.clearForm();\r\n    if (contact) this.hasUpdate = true;\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n\r\n  onChangeContactType(contact: IContactTypeModel[]) {\r\n    if (contact)\r\n      this.formCtrls.value.setValidators([\r\n        Validators.pattern(contact[0]?.regularExpression),\r\n      ]);\r\n    else\r\n      this.formCtrls.value.removeValidators([\r\n        Validators.pattern(contact[0]?.regularExpression),\r\n      ]);\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"contact\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-contact-type-dropdown\r\n          [control]=\"formCtrls.contacT_TYPE_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n          (change)=\"onChangeContactType($event)\"\r\n        >\r\n        </app-contact-type-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <contact-categories-by-contact-dropdown\r\n          [control]=\"formCtrls.contacT_Category_ID\"\r\n          [contactTypControl]=\"formCtrls.contacT_TYPE_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        >\r\n        </contact-categories-by-contact-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.value\"\r\n          [submitted]=\"submitted\"\r\n          label=\"contact\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12 mbottom-14 mtop-14\">\r\n        <app-check-box\r\n          [control]=\"formCtrls.isPrimary\"\r\n          label=\"primary\"\r\n        ></app-check-box>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12 mbottom-14 mtop-14\">\r\n        <app-check-box\r\n          [control]=\"formCtrls.isShow\"\r\n          label=\"display_in_emp_card\"\r\n        ></app-check-box>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <!-- <app-material-table\r\n    *ngIf=\"employeeId > 0\"\r\n    [isLoaded]=\"isLoaded\"\r\n    [dataSource]=\"dataSource\"\r\n    [mandatoryColomns]=\"mandatoryColomns\"\r\n    [optionalColomns]=\"optionalColomns\"\r\n    [page]=\"page\"\r\n    [actions]=\"rowFunctions\"\r\n    [showFilter]=\"false\"\r\n    [isDialogSize]=\"true\"\r\n    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n    (editRow)=\"employeeContactToEdit($event)\"\r\n    (deleteRow)=\"onDelete($event)\"\r\n    class=\"table-in-forms\"\r\n  >\r\n  </app-material-table> -->\r\n\r\n  <emp-contact-table\r\n    [hasUpdate]=\"hasUpdate\"\r\n    (rowToEdit)=\"employeeContactToEdit($event)\"\r\n    (afterDelete)=\"afterDelete($event)\"\r\n  ></emp-contact-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empContactDisplay } from \"app/personnel-setup/mapper/emp-contact-address\";\r\nimport {\r\n  IEmployeeContactDeleteParams,\r\n  IEmployeeContactDisplay,\r\n  IEmployeeContactResponse,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeContactService } from \"app/personnel-setup/services/employees/personal-info/employee-contact.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { EmpDataTableImplement } from \"app/personnel-setup/models/implements/emp-data-table.implement\";\r\n\r\n@Component({\r\n  selector: \"emp-contact-table\",\r\n  templateUrl: \"./emp-contact-table.component.html\",\r\n  styleUrls: [\"./emp-contact-table.component.scss\"],\r\n})\r\nexport class EmpContactTableComponent extends AppHelpers implements EmpDataTableImplement, OnChanges {\r\n  @Input() hasUpdate: boolean;\r\n  @Input() hideActions: boolean = false;\r\n  @Input() isMatPaginator: boolean = false;\r\n  @Output() rowToEdit = new EventEmitter<IEmployeeContactDisplay>();\r\n  @Output() afterDelete = new EventEmitter<IEmployeeContactDisplay>();\r\n  mandatoryColomns: string[] = [\r\n    \"contactType\",\r\n    \"contactCategory\",\r\n    \"contact\",\r\n    \"primary\",\r\n    \"display_in_emp_card\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeContactDisplay>;\r\n  isLoaded: boolean = false;\r\n  employeeId: number = 0;\r\n\r\n  constructor(private employeeContactService: EmployeeContactService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_contact_address_sec\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasUpdate && changes.hasUpdate.currentValue && this.employeeId > 0) this.getList(this.firstPage);\r\n    if (this.hideActions) {\r\n      let editIndex = this.rowFunctions.basic.findIndex(e => e.name.toLowerCase() == \"edit\");\r\n      this.rowFunctions.basic.splice(editIndex, 1);\r\n    }\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeContactService\r\n      .GetList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeContactResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(empContactDisplay(res.data));\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  toEdit(contact: IEmployeeContactDisplay) {\r\n    this.rowToEdit.emit(contact);\r\n  }\r\n\r\n  onDelete(contact: IEmployeeContactDisplay): void {\r\n    let msg = contact.contact;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(contact);\r\n    });\r\n  }\r\n\r\n  delete(contact: IEmployeeContactDisplay) {\r\n    let deleteParams: IEmployeeContactDeleteParams = {\r\n      Person_ID: this.employeeId,\r\n      Contact_ID: contact.contact_ID,\r\n    };\r\n    this.showLoading();\r\n    this.employeeContactService\r\n      .Delete(deleteParams)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.afterDelete.emit(contact);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          }\r\n          else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n}\r\n","<app-material-table *ngIf=\"employeeId > 0\"\r\n                    [isLoaded]=\"isLoaded\"\r\n                    [dataSource]=\"dataSource\"\r\n                    [mandatoryColomns]=\"mandatoryColomns\"\r\n                    [optionalColomns]=\"optionalColomns\"\r\n                    [page]=\"page\"\r\n                    [actions]=\"rowFunctions\"\r\n                    [showFilter]=\"false\"\r\n                    [isDialogSize]=\"true\"\r\n                    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                    (editRow)=\"toEdit($event)\"\r\n                    (deleteRow)=\"onDelete($event)\"\r\n                    class=\"table-in-forms\"\r\n                    [isMatPaginator]=\"isMatPaginator\"\r\n                    [showFirstLastButtons]=\"false\"\r\n                    [showSpaceTop]=\"false\">\r\n</app-material-table>\r\n<ngx-spinner></ngx-spinner>\r\n","import { employeeDependentToMap } from \"app/personnel-setup/mapper/employee-personal-info\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { IEmployeeDependantModel } from \"app/personnel-setup/models/emp-personal-info/dependants\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmployeeDependantsDialogComponent } from \"../emp-dependants-dialog/emp-dependants-dialog.component\";\r\nimport { EmployeeDependantService } from \"app/personnel-setup/services/employees/personal-info/employee-dependant.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { FadeIn, FadeInOut, fadeOut } from \"app/shared/animations/custom-animations\";\r\n\r\n@Component({\r\n  selector: \"emp-dependants-card\",\r\n  templateUrl: \"./emp-dependants-card.component.html\",\r\n  styleUrls: [\"./emp-dependants-card.component.scss\"],\r\n  animations: [\r\n    FadeIn(600),\r\n    fadeOut(300),\r\n    FadeInOut(600, 300),\r\n  ]\r\n})\r\nexport class EmployeeDependantsCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number;\r\n  empDependant: IEmployeeDependantModel;\r\n  isLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(private employeeDependantService: EmployeeDependantService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empDependant = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllDependant();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAllDependant() {\r\n    this.empDependant = null;\r\n    this.employeeDependantService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeDependantModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // get oldest emergency one\r\n          let employeeDependentFromOld: IEmployeeDependantModel[] =\r\n            employeeDependentToMap(res.data);\r\n          this.empDependant =\r\n            employeeDependentFromOld.find(\r\n              (dependent) => dependent.isEmergcy == true\r\n            ) ?? employeeDependentFromOld[0];\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmployeeDependantsDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAllDependant();\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  afterDelete(Dependant: IEmployeeDependantModel) {\r\n    if (Dependant) {\r\n      this.isLoaded = false;\r\n      this.getAllDependant();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n}\r\n","<div class=\"card-view border-bottom\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <div class=\"row\">\r\n    <div class=\"col-2\">\r\n      <card-header [isEdit]=\"empDependant\"\r\n                   [isLoaded]=\"isLoaded\"\r\n                   (onClickIcon)=\"openAddEditDialog()\"\r\n                   cardTitle=\"dependants\"\r\n                   class=\"side_title\">\r\n      </card-header>\r\n    </div>\r\n    <div class=\"col-8\">\r\n      <div *ngIf=\"!isTableView\" class=\"view-data-row-container\">\r\n        <card-row-item class=\"w-25\"\r\n                       label=\"name\"\r\n                       [value]=\"empDependant?.flower_Name\">\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\"\r\n                       label=\"relationship\"\r\n                       [value]=\"empDependant?.relationship\">\r\n\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\"\r\n                       label=\"dob\"\r\n                       [value]=\"empDependant?.birthDate\">\r\n\r\n        </card-row-item>\r\n\r\n        <div class=\"col-3 w-25\">\r\n          <p class=\"view-data-title\">{{ \"phoneNumber\" | translate | titlecase }}</p>\r\n          <div class=\"view-data-value\">\r\n            <div class=\"d-inline-block\">\r\n              {{ empDependant?.phoneNumber ?? \"---\" }}\r\n            </div>\r\n            <span *ngIf=\"empDependant?.isEmergcy\">\r\n              {{ \" \" }} <i class=\"fas fa-bell danger\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <!--        <div class=\"rowItem\">-->\r\n        <!--          <div class=\"row\">-->\r\n        <!--            <div class=\"col-6\">-->\r\n        <!--              <p>{{ \"phoneNumber\" | translate | titlecase }}</p>-->\r\n        <!--            </div>-->\r\n        <!--            <div class=\"col-6\">-->\r\n        <!--              <p class=\"d-inline-block\">-->\r\n        <!--                {{ empDependant?.phoneNumber ?? \"-&#45;&#45;\" }}-->\r\n        <!--              </p>-->\r\n        <!--              <span *ngIf=\"empDependant?.isEmergcy\">-->\r\n        <!--            {{ \" \" }} <i class=\"fas fa-bell danger\"></i>-->\r\n        <!--          </span>-->\r\n        <!--            </div>-->\r\n        <!--          </div>-->\r\n        <!--        </div>-->\r\n      </div>\r\n      <app-emp-dependants-table *ngIf=\"isTableView\"\r\n                                [isMatPaginator]=\"true\"\r\n                                [hideActions]=\"true\"\r\n                                (afterDelete)=\"afterDelete($event)\">\r\n      </app-emp-dependants-table>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <see-more-btn [isTableView]=\"isTableView\" (toggleTable)=\"toggleTable()\"></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton [rowNo]=\"4\">\r\n  </app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { IEmployeeDependantModel, IEmployeeDependantRequest, } from \"app/personnel-setup/models/emp-personal-info/dependants\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { EmployeeDependantService } from \"app/personnel-setup/services/employees/personal-info/employee-dependant.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\n\r\n@Component({\r\n  selector: \"app-employee-dependants-dialog\",\r\n  templateUrl: \"./emp-dependants-dialog.component.html\",\r\n  styleUrls: [\"./emp-dependants-dialog.component.scss\"],\r\n})\r\nexport class EmployeeDependantsDialogComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  hasUpdate: boolean = false;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  // mandatoryColomns: string[] = [\r\n  //   \"Ser\",\r\n  //   // \"id\",\r\n  //   \"dependentName\",\r\n  //   \"relationship\",\r\n  //   \"birthDate\",\r\n  //   \"phoneNumber\",\r\n  //   \"isEmergcy\",\r\n  //   \"actions\",\r\n  // ];\r\n  // optionalColomns: string[] = [];\r\n  // dataSource: MatTableDataSource<IEmployeeDependantModel>;\r\n  // isLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private employeeDependantService: EmployeeDependantService,\r\n    public dialogRef: MatDialogRef<EmployeeDependantsDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    // this.rowFunctions = this.getSubRowFunctions(\r\n    //   this.getParentViewName,\r\n    //   ViewsManager.emp_dependants_sec\r\n    // );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      relationship_ID: [null, [Validators.required]],\r\n      birthDate: [null, [CustomValidators.date]],\r\n      phoneNumber: [\r\n        null,\r\n        [\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n          CustomValidator.MobileStartsWith,\r\n          CustomValidator.mobileLength,\r\n        ],\r\n      ],\r\n      isEmergcy: [null],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.hasUpdate);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {\r\n  //   if (this.dataSource?.data?.length > 0)\r\n  //     this.dataSource = new MatTableDataSource(null);\r\n  //   if (this.checkNoBusinessOrCompany()) {\r\n  //     if (this.employeeId > 0) this.getList(this.firstPage);\r\n  //   }\r\n  // }\r\n  //\r\n  // getList(page: number, pageSize?: number) {\r\n  //   this.page.pageIndex = page;\r\n  //   if (pageSize) this.page.dialogSize = pageSize;\r\n  //   let params: IPageParams = {\r\n  //     PageNumber: page,\r\n  //     pageSize: this.page.dialogSize,\r\n  //   };\r\n  //   this.employeeDependantService\r\n  //     .getList(this.employeeId, params)\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponseList<IEmployeeDependantModel[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.dataSource = new MatTableDataSource(\r\n  //           employeeDependentToMap(res.data)\r\n  //         );\r\n  //         this.page.length = res.meta.totalItemCount;\r\n  //         this.isLoaded = true;\r\n  //       }\r\n  //       else this.errorList(res.message.messages);\r\n  //     });\r\n  // }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    this.hasUpdate = false;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeDependantRequest = {\r\n        employeeData: {\r\n          person_ID: this.employeeId,\r\n          id: this.form.value.id,\r\n          flower_Name: this.form.value.name,\r\n          relationship_ID: this.form.value.relationship_ID,\r\n          birthDate: this.form.value.birthDate,\r\n          phoneNumber: this.form.value.phoneNumber,\r\n          isEmergcy: this.form.value.isEmergcy ?? false,\r\n        },\r\n      };\r\n\r\n      model.employeeData.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeDependantRequest) {\r\n    this.showLoading();\r\n    this.employeeDependantService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeDependantModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeDependantRequest) {\r\n    this.showLoading();\r\n    this.employeeDependantService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmployeeDependantModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          //   this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeDependantToEdit(employeeDependantInfo: IEmployeeDependantModel) {\r\n    this.form.patchValue(employeeDependantInfo);\r\n    this.formCtrls.name.setValue(employeeDependantInfo.flower_Name);\r\n    this.formCtrls.birthDate.setValue(\r\n      employeeDependantInfo.originalBirthDateFormat\r\n    );\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  afterDelete(dependant: IEmployeeDependantModel) {\r\n    if (dependant?.id == this.formCtrls.id.value) this.clearForm();\r\n    if (dependant) this.hasUpdate = true;\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  // onDelete(employeeDependantInfo: IEmployeeDependantModel): void {\r\n  //   let msg = employeeDependantInfo.flower_Name;\r\n  //   this.deleteDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(employeeDependantInfo);\r\n  //   });\r\n  // }\r\n  //\r\n  // delete(employeeDependantInfo: IEmployeeDependantModel) {\r\n  //   this.showLoading();\r\n  //   this.employeeDependantService\r\n  //     .Delete(employeeDependantInfo.id)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n  //           // if last item in list: get previous page\r\n  //           this.getList(this.prevPage, this.page.dialogSize);\r\n  //         }\r\n  //         else {\r\n  //           // if not last item in list: get current page\r\n  //           this.getList(this.currentPage, this.page.dialogSize);\r\n  //         }\r\n  //         this.updated = true;\r\n  //         if (employeeDependantInfo.id == this.formCtrls.id.value)\r\n  //           this.clearForm();\r\n  //       }\r\n  //       else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"dependants\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.name\"\r\n          [submitted]=\"submitted\"\r\n          label=\"name\"\r\n        ></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-relationship-dropdown\r\n          [control]=\"formCtrls.relationship_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-relationship-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.birthDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"birthDate\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.phoneNumber\"\r\n          [submitted]=\"submitted\"\r\n          label=\"phone\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12 mbottom-20 mtop-14\">\r\n        <app-check-box\r\n          [control]=\"formCtrls.isEmergcy\"\r\n          label=\"emergencyContact\"\r\n        ></app-check-box>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn *ngIf=\"formCtrls.id.value > 0\"\r\n                    (click)=\"clearForm()\">\r\n    </reset-form-btn>\r\n\r\n    <submit-btn [id]=\"formCtrls.id.value\"\r\n                (onClick)=\"submit()\"\r\n                [color]=\"btn.darkBlue\"\r\n                [disabled]=\"!employeeId\">\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-emp-dependants-table (rowToEdit)=\"employeeDependantToEdit($event)\"\r\n                            (afterDelete)=\"afterDelete($event)\"\r\n                            [hasUpdate]=\"hasUpdate\">\r\n  </app-emp-dependants-table>\r\n\r\n  <!--  <app-material-table *ngIf=\"employeeId > 0\"-->\r\n  <!--                      [isLoaded]=\"isLoaded\"-->\r\n  <!--                      [dataSource]=\"dataSource\"-->\r\n  <!--                      [mandatoryColomns]=\"mandatoryColomns\"-->\r\n  <!--                      [optionalColomns]=\"optionalColomns\"-->\r\n  <!--                      [page]=\"page\"-->\r\n  <!--                      [actions]=\"rowFunctions\"-->\r\n  <!--                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"-->\r\n  <!--                      (editRow)=\"employeeDependantToEdit($event)\"-->\r\n  <!--                      (deleteRow)=\"onDelete($event)\"-->\r\n  <!--                      [isDialogSize]=\"true\"-->\r\n  <!--                      [showFilter]=\"false\"-->\r\n  <!--                      class=\"table-in-forms\">-->\r\n  <!--  </app-material-table>-->\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IEmployeeDependantModel } from \"app/personnel-setup/models/emp-personal-info/dependants\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { employeeDependentToMap } from \"app/personnel-setup/mapper/employee-personal-info\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeDependantService } from \"app/personnel-setup/services/employees/personal-info/employee-dependant.service\";\r\nimport { EmpDataTableImplement } from \"app/personnel-setup/models/implements/emp-data-table.implement\";\r\n\r\n@Component({\r\n  selector: \"app-emp-dependants-table\",\r\n  templateUrl: \"./emp-dependants-table.component.html\",\r\n  styleUrls: [\"./emp-dependants-table.component.scss\"]\r\n})\r\nexport class EmpDependantsTableComponent extends AppHelpers implements EmpDataTableImplement, OnChanges {\r\n  @Input() hasUpdate: boolean;\r\n  @Input() hideActions: boolean = false;\r\n  @Input() isMatPaginator: boolean = false;\r\n  @Output() rowToEdit = new EventEmitter<IEmployeeDependantModel>();\r\n  @Output() afterDelete = new EventEmitter<IEmployeeDependantModel>();\r\n  mandatoryColomns: string[] = [\r\n    \"dependentName\",\r\n    \"relationship\",\r\n    \"birthDate\",\r\n    \"phoneNumber\",\r\n    \"isEmergcy\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeDependantModel>;\r\n  isLoaded: boolean = false;\r\n  employeeId: number;\r\n\r\n  constructor(private employeeDependantService: EmployeeDependantService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_dependants_sec\r\n    );\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasUpdate && changes.hasUpdate.currentValue && this.employeeId > 0) this.getList(this.firstPage);\r\n    if (this.hideActions) {\r\n      let editIndex = this.rowFunctions.basic.findIndex(e => e.name.toLowerCase() == \"edit\");\r\n      this.rowFunctions.basic.splice(editIndex, 1);\r\n    }\r\n  }\r\n\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    // this.hasUpdate = false;\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeDependantService\r\n      .getList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeDependantModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            employeeDependentToMap(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  toEdit(dependant: IEmployeeDependantModel) {\r\n    this.rowToEdit.emit(dependant);\r\n  }\r\n\r\n  onDelete(employeeDependantInfo: IEmployeeDependantModel): void {\r\n    let msg = employeeDependantInfo.flower_Name;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employeeDependantInfo);\r\n    });\r\n  }\r\n\r\n  delete(dependant: IEmployeeDependantModel) {\r\n    this.showLoading();\r\n    this.employeeDependantService\r\n      .Delete(dependant.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.afterDelete.emit(dependant); // emit to parent\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          }\r\n          else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","<app-material-table *ngIf=\"employeeId > 0\"\r\n                    [isLoaded]=\"isLoaded\"\r\n                    [dataSource]=\"dataSource\"\r\n                    [mandatoryColomns]=\"mandatoryColomns\"\r\n                    [optionalColomns]=\"optionalColomns\"\r\n                    [page]=\"page\"\r\n                    [actions]=\"rowFunctions\"\r\n                    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                    (editRow)=\"toEdit($event)\"\r\n                    (deleteRow)=\"onDelete($event)\"\r\n                    [isDialogSize]=\"true\"\r\n                    [isMatPaginator]=\"isMatPaginator\"\r\n                    [showFirstLastButtons]=\"false\"\r\n                    [showFilter]=\"false\"\r\n                    [showSpaceTop]=\"false\"\r\n                    class=\"table-in-forms\">\r\n</app-material-table>\r\n<ngx-spinner></ngx-spinner>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { IEmployeeDocumentDataModel, IEmployeeDocumentModel, } from \"app/personnel-setup/models/emp-personal-info/employee-documents\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmployeeDocumentsService } from \"app/personnel-setup/services/employees/personal-info/employee-documents.service\";\r\nimport { EmployeeDocumentsDialogComponent } from \"../emp-documents-dialog/emp-documents-dialog.component\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { employeePersonalDocumentToMap } from \"app/personnel-setup/mapper/employee-personal-info\";\r\n\r\n@Component({\r\n  selector: \"emp-documents-card\",\r\n  templateUrl: \"./emp-documents-card.component.html\",\r\n  styleUrls: [\"./emp-documents-card.component.scss\"],\r\n})\r\nexport class EmployeeDocumentsCardComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  employeeId: number;\r\n  document: IEmployeeDocumentDataModel;\r\n  isLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(private employeeDocumentsService: EmployeeDocumentsService) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.document = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) this.getAll();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.document = null;\r\n    this.employeeDocumentsService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeDocumentModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          let sortedList: IEmployeeDocumentModel[] = res.data ?? [];\r\n          // sort by Issuing date (from new to old)\r\n          sortedList.sort(\r\n            (a, b) =>\r\n              new Date(b.employeeData.dateof_issue).getTime() -\r\n              new Date(a.employeeData.dateof_issue).getTime()\r\n          );\r\n          this.document = employeePersonalDocumentToMap(sortedList)[0];\r\n          this.isLoaded = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmployeeDocumentsDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n           this.isLoaded = false;\r\n          this.getAll();\r\n        }\r\n      });\r\n  }\r\n\r\n  afterDelete(document: IEmployeeDocumentDataModel) {\r\n    if (document) {\r\n      this.isLoaded = false;\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n}\r\n","<div class=\"card-view border-bottom\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">\r\n      <card-header [isEdit]=\"document\"\r\n                   [isLoaded]=\"isLoaded\"\r\n                   (onClickIcon)=\"openAddEditDialog()\"\r\n                   cardTitle=\"employeeDocuments\"\r\n                   class=\"side_title\">\r\n      </card-header>\r\n    </div>\r\n    <div class=\"col-8\">\r\n      <div *ngIf=\"!isTableView\" class=\"view-data-row-container\">\r\n        <card-row-item class=\"w-25\" label=\"name\"\r\n                       [value]=\"document?.documentName\">\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\" label=\"dateof_issue\"\r\n                       [value]=\"document?.dateof_issue\">\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\" label=\"expire_Date\"\r\n                       [value]=\"document?.expire_Date\">\r\n        </card-row-item>\r\n\r\n        <div class=\"col-3 w-25\">\r\n          <p class=\"view-data-title\">{{ \"attachment\" | translate | titlecase }}</p>\r\n          <div class=\"view-data-value\">\r\n            <span *ngIf=\"document?.attachmentID > 0; else noAttach\">\r\n             <i class=\"fas fa-cloud-download-alt font-size-20 icon-lightGreen\"\r\n                (click)=\"fileService.downloadFromServer(document.attachmentID)\">\r\n                </i>\r\n            </span>\r\n            <ng-template #noAttach> ---</ng-template>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <app-emp-documents-table *ngIf=\"isTableView\"\r\n                               [isMatPaginator]=\"true\"\r\n                               [hideActions]=\"true\"\r\n                               (afterDelete)=\"afterDelete($event)\">\r\n      </app-emp-documents-table>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <see-more-btn [isTableView]=\"isTableView\" (toggleTable)=\"toggleTable()\"></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"4\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  IEmployeeDocumentDataModel,\r\n  IEmployeeDocumentModel,\r\n  IEmployeeDocumentRequest,\r\n} from \"app/personnel-setup/models/emp-personal-info/employee-documents\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { EmployeeDocumentsService } from \"app/personnel-setup/services/employees/personal-info/employee-documents.service\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { IFileData } from \"app/shared/interfaces/files\";\r\n\r\n@Component({\r\n  selector: \"app-employee-documents-dialog\",\r\n  templateUrl: \"./emp-documents-dialog.component.html\",\r\n  styleUrls: [\"./emp-documents-dialog.component.scss\"],\r\n})\r\nexport class EmployeeDocumentsDialogComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  employeeId: number = 0;\r\n  hasUpdate: boolean = false;\r\n\r\n  // mandatoryColomns: string[] = [\r\n  //   \"Ser\",\r\n  //   \"documentName\",\r\n  //   \"dateof_issue\",\r\n  //   \"expire_Date\",\r\n  //   \"identity_Number\",\r\n  //   \"attachment\",\r\n  //   \"actions\",\r\n  // ];\r\n  // optionalColomns: string[] = [];\r\n  // dataSource: MatTableDataSource<IEmployeeDocumentDataModel>;\r\n  //\r\n  // isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  removeFiles: boolean = false;\r\n\r\n  constructor(\r\n    private employeeDocumentsService: EmployeeDocumentsService,\r\n    public dialogRef: MatDialogRef<EmployeeDocumentsDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    // this.rowFunctions = this.getSubRowFunctions(\r\n    //   this.getParentViewName,\r\n    //   ViewsManager.emp_documents_sec\r\n    // );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNullable: true}],\r\n        documentId: [null, [Validators.required]],\r\n        issuingDate: [null, [Validators.required]],\r\n        expirationDate: [null, [CustomValidators.date]],\r\n        identity_Number: [null, [CustomValidators.digits]],\r\n        file: [null],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\r\n          \"issuingDate\",\r\n          \"expirationDate\"\r\n        ),\r\n      }\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.hasUpdate);\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {\r\n  //   if (this.dataSource?.data?.length > 0) {\r\n  //     this.dataSource = new MatTableDataSource(null);\r\n  //   }\r\n  //   if (this.checkNoBusinessOrCompany()) {\r\n  //     if (this.employeeId > 0) this.getList(this.firstPage);\r\n  //   }\r\n  // }\r\n  //\r\n  // getList(page: number, pageSize?: number) {\r\n  //   this.page.pageIndex = page;\r\n  //   if (pageSize) this.page.dialogSize = pageSize;\r\n  //   let params: IPageParams = {\r\n  //     PageNumber: page,\r\n  //     pageSize: this.page.dialogSize,\r\n  //   };\r\n  //   this.employeeDocumentsService\r\n  //     .getList(this.employeeId, params)\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponseList<IEmployeeDocumentModel[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.dataSource = new MatTableDataSource(\r\n  //           res.data?.length > 0 ? employeePersonalDocumentToMap(res.data) : []\r\n  //         );\r\n  //         this.page.length = res.meta.totalItemCount;\r\n  //         this.isLoaded = true;\r\n  //       }\r\n  //       else this.errorList(res.message.messages);\r\n  //     });\r\n  // }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    this.removeFiles = false;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeDocumentRequest = {\r\n        personID: this.employeeId,\r\n        empIdentityID: this.form.value.id,\r\n        identity_TypeID: this.form.value.documentId,\r\n        dateof_issue: HelpersFunctions.mapDateReverse(\r\n          this.form.value.issuingDate\r\n        ),\r\n        expire_Date:\r\n          HelpersFunctions.mapDateReverse(this.form.value.expirationDate) ?? \"\",\r\n        identity_Number: this.form.value.identity_Number ?? \"\",\r\n        files: this.form.value.file,\r\n      };\r\n\r\n      const formData = HelpersFunctions.objectToFormData(model);\r\n\r\n      model.empIdentityID == 0 ? this.create(formData) : this.update(formData);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: FormData) {\r\n    this.showLoading();\r\n    this.employeeDocumentsService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeDocumentModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          //   this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: FormData) {\r\n    // if file not change\r\n    if (this.formCtrls.file.value?.id > 0) model.set(\"files\", null);\r\n    this.showLoading();\r\n    this.employeeDocumentsService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmployeeDocumentModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          // this.getList(this.currentPage);\r\n          this.hasUpdate = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeDocumentToEdit(document: IEmployeeDocumentDataModel) {\r\n    this.form.patchValue(document);\r\n    this.formCtrls.id.setValue(document.empIdentityID);\r\n    this.formCtrls.documentId.setValue(document.identity_TypeID);\r\n    this.formCtrls.issuingDate.setValue(document.originalIssuingDate);\r\n    this.formCtrls.expirationDate.setValue(document.originalExpirationDate);\r\n\r\n    if (document.attachmentID) {\r\n      // get file size && type\r\n      this.showLoading();\r\n      this.fileService\r\n        .downloadByAttachId(document.attachmentID)\r\n        .subscribe((res) => {\r\n          let file: IFileData = {\r\n            id: document.attachmentID,\r\n            path: document.attachment,\r\n            name: document.attachment_En_Name,\r\n            type: res.type,\r\n            size: res.size,\r\n          };\r\n          this.formCtrls.file.setValue(file);\r\n          this.hideLoading();\r\n        });\r\n    }\r\n    else this.formCtrls.file.setValue(null);\r\n\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  // onDelete(document: IEmployeeDocumentDataModel): void {\r\n  //   let msg = this.msgTranslate(document.documentName);\r\n  //   this.deleteDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) {\r\n  //       this.delete(document);\r\n  //     }\r\n  //   });\r\n  // }\r\n  //\r\n  // delete(document: IEmployeeDocumentDataModel) {\r\n  //   this.showLoading();\r\n  //   this.employeeDocumentsService\r\n  //     .Delete(document.empIdentityID)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n  //           // if last item in list: get previous page\r\n  //           this.getList(this.prevPage, this.page.dialogSize);\r\n  //         }\r\n  //         else {\r\n  //           // if not last item in list: get current page\r\n  //           this.getList(this.currentPage, this.page.dialogSize);\r\n  //         }\r\n  //         this.hasUpdate = true;\r\n  //         if (document.empIdentityID == this.formCtrls.id.value) {\r\n  //           this.clearForm();\r\n  //         }\r\n  //       }\r\n  //       else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n    this.removeFiles = true;\r\n  }\r\n\r\n  // attachIconColumnData: IAttachIconColumnData = {\r\n  //   columnName: \"attachment\",\r\n  //   icon: \"fas fa-file-alt\",\r\n  // };\r\n\r\n  deleteFile() {\r\n    this.showLoading();\r\n    this.employeeDocumentsService\r\n      .DeleteAttachment(this.formCtrls.id.value)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.hasUpdate = true;\r\n          // this.getList(this.currentPage);\r\n          this.formCtrls.file.reset();\r\n        }\r\n        else {\r\n          this.errorList(res.message.messages);\r\n          this.hideLoading();\r\n        }\r\n      });\r\n  }\r\n\r\n  afterDelete(document: IEmployeeDocumentDataModel) {\r\n    if (document.empIdentityID == this.formCtrls.id.value) this.clearForm();\r\n    if (document) this.hasUpdate = true;\r\n  }\r\n\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title\r\n      class=\"d-inline-block mtop-5\"\r\n      title=\"employeeDocuments\"\r\n    ></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-identity-type-dropdown\r\n          [control]=\"formCtrls.documentId\"\r\n          [submitted]=\"submitted\"\r\n          label=\"documentName\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-identity-type-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.issuingDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"dateof_issue\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-datepicker\r\n          [control]=\"formCtrls.expirationDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"expire_Date\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.identity_Number\"\r\n          [submitted]=\"submitted\"\r\n          label=\"identity_Number\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <primeng-file-upload\r\n          [control]=\"formCtrls.file\"\r\n          [submitted]=\"submitted\"\r\n          [multiple]=\"false\"\r\n          [isEdit]=\"formCtrls.id.value > 0\"\r\n          [removeFiles]=\"removeFiles\"\r\n          (ondelete)=\"deleteFile()\"\r\n        ></primeng-file-upload>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-emp-documents-table (rowToEdit)=\"employeeDocumentToEdit($event)\"\r\n                           (afterDelete)=\"afterDelete($event)\"\r\n                           [hasUpdate]=\"hasUpdate\">\r\n  </app-emp-documents-table>\r\n  <!--  <app-material-table *ngIf=\"employeeId > 0\"-->\r\n  <!--                      [isLoaded]=\"isLoaded\"-->\r\n  <!--                      [dataSource]=\"dataSource\"-->\r\n  <!--                      [mandatoryColomns]=\"mandatoryColomns\"-->\r\n  <!--                      [optionalColomns]=\"optionalColomns\"-->\r\n  <!--                      [page]=\"page\"-->\r\n  <!--                      [actions]=\"rowFunctions\"-->\r\n  <!--                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"-->\r\n  <!--                      (editRow)=\"employeeDocumentToEdit($event)\"-->\r\n  <!--                      (deleteRow)=\"onDelete($event)\"-->\r\n  <!--                      [isDialogSize]=\"true\"-->\r\n  <!--                      [showFilter]=\"false\"-->\r\n  <!--                      [attachIconColumnData]=\"attachIconColumnData\"-->\r\n  <!--                      class=\"table-in-forms\">-->\r\n  <!--  </app-material-table>-->\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\nimport { EmpDataTableImplement } from \"app/personnel-setup/models/implements/emp-data-table.implement\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { IEmployeeDocumentDataModel, IEmployeeDocumentModel } from \"app/personnel-setup/models/emp-personal-info/employee-documents\";\nimport { EmployeeDocumentsService } from \"app/personnel-setup/services/employees/personal-info/employee-documents.service\";\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\nimport { IPageParams } from \"app/shared/interfaces/params\";\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\nimport { employeePersonalDocumentToMap } from \"app/personnel-setup/mapper/employee-personal-info\";\nimport { IAttachIconColumnData } from \"app/shared/components/resources/material-table/material-table.component\";\n\n@Component({\n  selector: \"app-emp-documents-table\",\n  templateUrl: \"./emp-documents-table.component.html\",\n  styleUrls: [\"./emp-documents-table.component.scss\"]\n})\nexport class EmpDocumentsTableComponent extends AppHelpers implements EmpDataTableImplement, OnChanges {\n  @Input() hasUpdate: boolean;\n  @Input() hideActions: boolean = false;\n  @Input() isMatPaginator: boolean = false;\n  @Output() rowToEdit = new EventEmitter<IEmployeeDocumentDataModel>();\n  @Output() afterDelete = new EventEmitter<IEmployeeDocumentDataModel>();\n  mandatoryColomns: string[] = [\n    \"documentName\",\n    \"dateof_issue\",\n    \"expire_Date\",\n    \"identity_Number\",\n    \"attachment\",\n    \"actions\",\n  ];\n  optionalColomns: string[] = [];\n  dataSource: MatTableDataSource<IEmployeeDocumentDataModel>;\n  attachIconColumnData: IAttachIconColumnData = {\n    columnName: \"attachment\",\n    icon: \"fas fa-file-alt\",\n  };\n\n  isLoaded: boolean = false;\n  employeeId: number = 0;\n\n  constructor(\n    private employeeDocumentsService: EmployeeDocumentsService,\n  ) {\n    super();\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\n\n    this.rowFunctions = this.getSubRowFunctions(\n      this.getParentViewName,\n      ViewsManager.emp_documents_sec\n    );\n  }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasUpdate && changes.hasUpdate.currentValue && this.employeeId > 0) this.getList(this.firstPage);\n    if (this.hideActions) {\n      let editIndex = this.rowFunctions.basic.findIndex(e => e.name.toLowerCase() == \"edit\");\n      this.rowFunctions.basic.splice(editIndex, 1);\n    }\n  }\n\n  override onChangeBusinessAndCompanyId(): void {\n    if (this.dataSource?.data?.length > 0) {\n      this.dataSource = new MatTableDataSource(null);\n    }\n    if (this.checkNoBusinessOrCompany()) {\n      if (this.employeeId > 0) this.getList(this.firstPage);\n    }\n  }\n\n  getList(page: number, pageSize?: number) {\n    this.page.pageIndex = page;\n    if (pageSize) this.page.dialogSize = pageSize;\n    let params: IPageParams = {\n      PageNumber: page,\n      pageSize: this.page.dialogSize,\n    };\n    this.employeeDocumentsService\n      .getList(this.employeeId, params)\n      .pipe(this.cancelRequest())\n      .subscribe((res: IResponseList<IEmployeeDocumentModel[]>) => {\n        if (res.message.messageType == MessageTypes.Success) {\n          this.dataSource = new MatTableDataSource(\n            res.data?.length > 0 ? employeePersonalDocumentToMap(res.data) : []\n          );\n          this.page.length = res.meta.totalItemCount;\n          this.isLoaded = true;\n        }\n        else this.errorList(res.message.messages);\n      });\n  }\n\n  onDelete(document: IEmployeeDocumentDataModel): void {\n    let msg = this.msgTranslate(document.documentName);\n    this.deleteDialog(msg).subscribe((confirm) => {\n      if (confirm) {\n        this.delete(document);\n      }\n    });\n  }\n\n  toEdit(document: IEmployeeDocumentDataModel) {\n    this.rowToEdit.emit(document);\n  }\n\n  delete(document: IEmployeeDocumentDataModel) {\n    this.showLoading();\n    this.employeeDocumentsService\n      .Delete(document.empIdentityID)\n      .subscribe((res: IResponse) => {\n        if (res.message.messageType == MessageTypes.Success) {\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\n          this.hasUpdate = true;\n          this.afterDelete.emit(document);\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\n            // if last item in list: get previous page\n            this.getList(this.prevPage, this.page.dialogSize);\n          }\n          else {\n            // if not last item in list: get current page\n            this.getList(this.currentPage, this.page.dialogSize);\n          }\n\n        }\n        else this.errorList(res.message.messages);\n        this.hideLoading();\n      });\n  }\n\n\n}\n","<app-material-table *ngIf=\"employeeId > 0\"\n                    [isLoaded]=\"isLoaded\"\n                    [dataSource]=\"dataSource\"\n                    [mandatoryColomns]=\"mandatoryColomns\"\n                    [optionalColomns]=\"optionalColomns\"\n                    [page]=\"page\"\n                    [actions]=\"rowFunctions\"\n                    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\n                    (editRow)=\"toEdit($event)\"\n                    (deleteRow)=\"onDelete($event)\"\n                    [isDialogSize]=\"true\"\n                    [isMatPaginator]=\"isMatPaginator\"\n                    [showFirstLastButtons]=\"false\"\n                    [showFilter]=\"false\"\n                    [showSpaceTop]=\"false\"\n                    [attachIconColumnData]=\"attachIconColumnData\"\n                    class=\"table-in-forms\">\n</app-material-table>\n<ngx-spinner></ngx-spinner>\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { IEmployeeMilitaryModel } from \"app/personnel-setup/models/emp-personal-info/military-status\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmployeeMilitaryDataService } from \"app/personnel-setup/services/employees/personal-info/employee-military-data.service\";\r\nimport { EmployeeMilitaryDataDialogComponent } from \"../emp-military-data-dialog/emp-military-data-dialog.component\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { employeeMilitaryStatusToMap } from \"app/personnel-setup/mapper/employee-personal-info\";\r\n\r\n@Component({\r\n  selector: \"emp-military-data-card\",\r\n  templateUrl: \"./emp-military-data-card.component.html\",\r\n  styleUrls: [\"./emp-military-data-card.component.scss\"],\r\n})\r\nexport class EmployeeMilitaryDataCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number;\r\n  empMilitary: IEmployeeMilitaryModel;\r\n\r\n  isLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(\r\n    private employeeMilitaryDataService: EmployeeMilitaryDataService\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empMilitary = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllEmpMilitary();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAllEmpMilitary() {\r\n    this.empMilitary = null;\r\n    this.employeeMilitaryDataService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeMilitaryModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          if (res.data.length > 1) {\r\n            let sortedList: IEmployeeMilitaryModel[] = res.data;\r\n            // get last create date\r\n            const lastCreateDate = res.data.reduce((prev, current) =>\r\n              new Date(prev.create_Date).getTime() >\r\n              new Date(current.statusDate).getTime()\r\n                ? prev\r\n                : current\r\n            ).create_Date;\r\n            // get all objects with lastCreateDate\r\n            sortedList = sortedList.filter(\r\n              (ele) => ele.create_Date == lastCreateDate\r\n            );\r\n            // console.log(sortedList);\r\n\r\n            if (sortedList.length == 1)\r\n              this.empMilitary = employeeMilitaryStatusToMap(sortedList)[0];\r\n            else {\r\n              // sort by status date\r\n              sortedList.sort(\r\n                (a, b) =>\r\n                  new Date(a.statusDate).getTime() -\r\n                  new Date(b.statusDate).getTime()\r\n              );\r\n              this.empMilitary = employeeMilitaryStatusToMap([\r\n                sortedList[sortedList.length - 1],\r\n              ])[0];\r\n            }\r\n          }\r\n          else this.empMilitary = employeeMilitaryStatusToMap(res.data)[0];\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.isLoaded = true;\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmployeeMilitaryDataDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAllEmpMilitary();\r\n        }\r\n      });\r\n  }\r\n\r\n  afterDelete(address: IEmployeeMilitaryModel) {\r\n    if (address) {\r\n      this.isLoaded = false;\r\n      this.getAllEmpMilitary();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n}\r\n","<div class=\"card-view border-bottom\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">\r\n      <card-header [isEdit]=\"empMilitary\"\r\n                   [isLoaded]=\"isLoaded\"\r\n                   (onClickIcon)=\"openAddEditDialog()\"\r\n                   cardTitle=\"militaryData\"\r\n                   class=\"side_title\">\r\n      </card-header>\r\n    </div>\r\n    <div class=\"col-8\">\r\n      <div *ngIf=\"!isTableView\" class=\"view-data-row-container\">\r\n        <card-row-item class=\"w-25\" label=\"status\" [value]=\"empMilitary?.status\"></card-row-item>\r\n\r\n        <card-row-item class=\"w-25\" *ngIf=\"empMilitary?.comm_Military_Status.showGrade\"\r\n                       label=\"grade\"\r\n                       [value]=\"empMilitary?.grade\">\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\" *ngIf=\"!empMilitary || empMilitary?.comm_Military_Status.dateMandatory > 0\"\r\n                       [label]=\"empMilitary?.comm_Military_Status.dateMandatory == 1? 'date' : 'startDate'\"\r\n                       [value]=\"empMilitary?.statusDate\">\r\n        </card-row-item>\r\n\r\n        <card-row-item class=\"w-25\" *ngIf=\"empMilitary?.comm_Military_Status.dateMandatory == 2\"\r\n                       label=\"endDate\"\r\n                       [value]=\"empMilitary?.endDate\">\r\n        </card-row-item>\r\n      </div>\r\n\r\n      <app-emp-military-table *ngIf=\"isTableView\"\r\n                              [isMatPaginator]=\"true\"\r\n                              [hideActions]=\"true\"\r\n                              (afterDelete)=\"afterDelete($event)\">\r\n      </app-emp-military-table>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <see-more-btn [isTableView]=\"isTableView\" (toggleTable)=\"toggleTable()\"></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton [rowNo]=\"4\"></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IMilitaryStatusModel } from \"app/system-setup/hr-setup/models/military\";\r\nimport { IEmployeeMilitaryModel, IEmployeeMilitaryRequest, } from \"app/personnel-setup/models/emp-personal-info/military-status\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeMilitaryDataService } from \"app/personnel-setup/services/employees/personal-info/employee-military-data.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\n\r\n@Component({\r\n  selector: \"app-employee-military-data-dialog\",\r\n  templateUrl: \"./emp-military-data-dialog.component.html\",\r\n  styleUrls: [\"./emp-military-data-dialog.component.scss\"],\r\n})\r\nexport class EmployeeMilitaryDataDialogComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  hasUpdate: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"status\",\r\n    \"grade\",\r\n    \"statusDate\",\r\n    \"endDate\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeMilitaryModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  selectedStatus: IMilitaryStatusModel;\r\n\r\n  constructor(\r\n    private employeeMilitaryDataService: EmployeeMilitaryDataService,\r\n    public dialogRef: MatDialogRef<EmployeeMilitaryDataDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    // this.rowFunctions = this.getSubRowFunctions(\r\n    //   this.getParentViewName,\r\n    //   ViewsManager.emp_military_data_sec\r\n    // );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        id: [0, {nonNullable: true}],\r\n        militaryID: [null, [Validators.required]],\r\n        gradeID: [null],\r\n        statusDate: [null, [CustomValidators.date]],\r\n        endDate: [null, [CustomValidators.date]],\r\n      },\r\n      {\r\n        validator: CustomValidator.compareDates(\"statusDate\", \"endDate\"),\r\n      }\r\n    );\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.hasUpdate);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {\r\n  //   if (this.dataSource?.data?.length > 0)\r\n  //     this.dataSource = new MatTableDataSource(null);\r\n  //   if (this.checkNoBusinessOrCompany()) {\r\n  //     if (this.employeeId > 0) this.getAll();\r\n  //   }\r\n  // }\r\n\r\n  // getAll() {\r\n  //   this.employeeMilitaryDataService\r\n  //     .getAll(this.employeeId)\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponse<IEmployeeMilitaryModel[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.dataSource = new MatTableDataSource(\r\n  //           employeeMilitaryStatusToMap(res.data)\r\n  //         );\r\n  //         this.isLoaded = true;\r\n  //       }\r\n  //       else this.errorList(res.message.messages);\r\n  //     });\r\n  // }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeMilitaryRequest = {\r\n        EmployeeData: {\r\n          PersonID: this.employeeId,\r\n          militaryID: this.form.value.militaryID,\r\n        },\r\n      };\r\n      if (this.selectedStatus.showGrade)\r\n        model.EmployeeData.gradeID = this.form.value.gradeID;\r\n\r\n      if (this.selectedStatus.dateMandatory > 0) {\r\n        model.EmployeeData.statusDate = HelpersFunctions.mapDateReverse(\r\n          this.form.value.statusDate\r\n        );\r\n        if (this.selectedStatus.dateMandatory == 2)\r\n          model.EmployeeData.endDate = HelpersFunctions.mapDateReverse(\r\n            this.form.value.endDate\r\n          );\r\n      }\r\n\r\n      this.create(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeMilitaryRequest) {\r\n    this.showLoading();\r\n    this.employeeMilitaryDataService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeMilitaryModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.hasUpdate = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  // update(model: IEmployeeMilitaryRequest) {\r\n  //   this.showLoading();\r\n  //   this.employeeMilitaryDataService\r\n  //     .update(model)\r\n  //     .subscribe((res: IResponse<IEmployeeMilitaryModel>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.clearForm();\r\n  //         this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getAll();\r\n  //         this.updated = true;\r\n  //       } else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  // employeeMilitaryToEdit(employeeMilitaryInfo: IEmployeeMilitaryModel) {\r\n  //   this.form.patchValue(employeeMilitaryInfo);\r\n  //   // console.log(this.form.value);\r\n  // }\r\n\r\n  // onDelete(employeeMilitaryInfo: IEmployeeMilitaryModel): void {\r\n  //   let msg = employeeMilitaryInfo.status;\r\n  //   this.deleteDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(employeeMilitaryInfo);\r\n  //   });\r\n  // }\r\n  //\r\n  // delete(employeeMilitaryInfo: IEmployeeMilitaryModel) {\r\n  //   let deleteParams: IEmployeeMilitaryDeleteParams = {\r\n  //     PersonID: this.employeeId,\r\n  //     MilitaryID: employeeMilitaryInfo.militaryID,\r\n  //   };\r\n  //   this.showLoading();\r\n  //   this.employeeMilitaryDataService\r\n  //     .Delete(deleteParams)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getAll();\r\n  //         this.hasUpdate = true;\r\n  //         // if (employeeMilitaryInfo.id == this.formCtrls.id.value)\r\n  //         //   this.clearForm();\r\n  //       }\r\n  //       else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  afterDelete(Military: IEmployeeMilitaryModel) {\r\n    if (Military?.comm_Military_Status.id == this.formCtrls.id.value) this.clearForm();\r\n    if (Military) this.hasUpdate = true;\r\n  }\r\n\r\n  onChangeStatus(values: IMilitaryStatusModel[]) {\r\n    this.selectedStatus = values?.length > 0 ? values[0] : null;\r\n    if (this.selectedStatus?.showGrade)\r\n      this.formCtrls.gradeID.setValidators([Validators.required]);\r\n    else this.formCtrls.gradeID.clearValidators();\r\n    this.formCtrls.gradeID.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"militaryData\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-military-status-dropdown\r\n          [control]=\"formCtrls.militaryID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n          (change)=\"onChangeStatus($event)\"\r\n        ></app-military-status-dropdown>\r\n      </div>\r\n\r\n      <div\r\n        class=\"col-md-4 col-sm-6 col-12\"\r\n        *ngIf=\"!formCtrls.militaryID.value || selectedStatus?.showGrade\"\r\n      >\r\n        <app-military-grade-dropdown\r\n          [control]=\"formCtrls.gradeID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-military-grade-dropdown>\r\n      </div>\r\n\r\n      <div\r\n        class=\"col-md-4 col-sm-6 col-12\"\r\n        *ngIf=\"!formCtrls.militaryID.value || selectedStatus?.dateMandatory > 0\"\r\n      >\r\n        <app-datepicker\r\n          [control]=\"formCtrls.statusDate\"\r\n          [submitted]=\"submitted\"\r\n          [label]=\"selectedStatus?.dateMandatory == 1 ? 'date' : 'startDate'\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n\r\n      <div\r\n        class=\"col-md-4 col-sm-6 col-12\"\r\n        *ngIf=\"selectedStatus?.dateMandatory == 2\"\r\n      >\r\n        <app-datepicker\r\n          [control]=\"formCtrls.endDate\"\r\n          [submitted]=\"submitted\"\r\n          label=\"endDate\"\r\n        >\r\n        </app-datepicker>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-emp-military-table [hasUpdate]=\"hasUpdate\"\r\n                          (afterDelete)=\"afterDelete($event)\">\r\n  </app-emp-military-table>\r\n  <!-- (editRow)=\"employeeMilitaryToEdit($event)\" -->\r\n  <!--  <app-material-table *ngIf=\"employeeId > 0\"-->\r\n  <!--                      [isLoaded]=\"isLoaded\"-->\r\n  <!--                      [dataSource]=\"dataSource\"-->\r\n  <!--                      [mandatoryColomns]=\"mandatoryColomns\"-->\r\n  <!--                      [optionalColomns]=\"optionalColomns\"-->\r\n  <!--                      [actions]=\"rowFunctions\"-->\r\n  <!--                      (deleteRow)=\"onDelete($event)\"-->\r\n  <!--                      [showPaginator]=\"false\"-->\r\n  <!--                      [showFilter]=\"false\"-->\r\n  <!--                      class=\"table-in-forms\">-->\r\n  <!--  </app-material-table>-->\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\nimport { EmpDataTableImplement } from \"app/personnel-setup/models/implements/emp-data-table.implement\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { IEmployeeMilitaryDeleteParams, IEmployeeMilitaryModel } from \"app/personnel-setup/models/emp-personal-info/military-status\";\nimport { EmployeeMilitaryDataService } from \"app/personnel-setup/services/employees/personal-info/employee-military-data.service\";\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\nimport { IResponse } from \"app/shared/interfaces/responces\";\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\nimport { employeeMilitaryStatusToMap } from \"app/personnel-setup/mapper/employee-personal-info\";\n\n@Component({\n  selector: \"app-emp-military-table\",\n  templateUrl: \"./emp-military-table.component.html\",\n  styleUrls: [\"./emp-military-table.component.scss\"]\n})\nexport class EmpMilitaryTableComponent extends AppHelpers implements EmpDataTableImplement, OnChanges {\n  @Input() hasUpdate: boolean;\n  @Input() hideActions: boolean = false;\n  @Input() isMatPaginator: boolean = false;\n  @Output() rowToEdit = new EventEmitter<IEmployeeMilitaryModel>();\n  @Output() afterDelete = new EventEmitter<IEmployeeMilitaryModel>();\n  mandatoryColomns: string[] = [\n    \"status\",\n    \"grade\",\n    \"statusDate\",\n    \"endDate\",\n    \"actions\",\n  ];\n  optionalColomns: string[] = [];\n  dataSource: MatTableDataSource<IEmployeeMilitaryModel>;\n  employeeId: number = 0;\n  isLoaded: boolean = false;\n\n  constructor(private employeeMilitaryDataService: EmployeeMilitaryDataService,) {\n    super();\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\n    this.rowFunctions = this.getSubRowFunctions(\n      this.getParentViewName,\n      ViewsManager.emp_military_data_sec\n    );\n  }\n\n  getList(page: number, pageSize?: number): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasUpdate && changes.hasUpdate.currentValue && this.employeeId > 0) this.getAll();\n    // if (this.hideActions) {\n    //   let editIndex = this.rowFunctions.basic.findIndex(e => e.name.toLowerCase() == \"edit\");\n    //   this.rowFunctions.basic.splice(editIndex, 1);\n    // }\n  }\n\n  override onChangeBusinessAndCompanyId(): void {\n    if (this.dataSource?.data?.length > 0)\n      this.dataSource = new MatTableDataSource(null);\n    if (this.checkNoBusinessOrCompany()) {\n      if (this.employeeId > 0) this.getAll();\n    }\n  }\n\n  getAll() {\n    this.employeeMilitaryDataService\n      .getAll(this.employeeId)\n      .pipe(this.cancelRequest())\n      .subscribe((res: IResponse<IEmployeeMilitaryModel[]>) => {\n        if (res.message.messageType == MessageTypes.Success) {\n          this.dataSource = new MatTableDataSource(\n            employeeMilitaryStatusToMap(res.data)\n          );\n          this.isLoaded = true;\n        }\n        else this.errorList(res.message.messages);\n      });\n  }\n\n\n  onDelete(employeeMilitaryInfo: IEmployeeMilitaryModel): void {\n    let msg = employeeMilitaryInfo.status;\n    this.deleteDialog(msg).subscribe((confirm) => {\n      if (confirm) this.delete(employeeMilitaryInfo);\n    });\n  }\n\n  delete(employeeMilitaryInfo: IEmployeeMilitaryModel) {\n    let deleteParams: IEmployeeMilitaryDeleteParams = {\n      PersonID: this.employeeId,\n      MilitaryID: employeeMilitaryInfo.militaryID,\n    };\n    this.showLoading();\n    this.employeeMilitaryDataService\n      .Delete(deleteParams)\n      .subscribe((res: IResponse) => {\n        if (res.message.messageType == MessageTypes.Success) {\n          this.afterDelete.emit(employeeMilitaryInfo);\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\n          this.getAll();\n        }\n        else this.errorList(res.message.messages);\n        this.hideLoading();\n      });\n  }\n\n\n  toEdit(Military: IEmployeeMilitaryModel) {\n    this.rowToEdit.emit(Military);\n  }\n\n}\n","<app-material-table *ngIf=\"employeeId > 0\"\n                    [isLoaded]=\"isLoaded\"\n                    [dataSource]=\"dataSource\"\n                    [mandatoryColomns]=\"mandatoryColomns\"\n                    [optionalColomns]=\"optionalColomns\"\n                    [actions]=\"rowFunctions\"\n                    [isDialogSize]=\"true\"\n                    [showFilter]=\"false\"\n                    [page]=\"page\"\n                    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\n                    (editRow)=\"toEdit($event)\"\n                    (deleteRow)=\"onDelete($event)\"\n                    class=\"table-in-forms\"\n                    [isMatPaginator]=\"isMatPaginator\"\n                    [showFirstLastButtons]=\"false\"\n                    [showSpaceTop]=\"false\">\n</app-material-table>\n<ngx-spinner></ngx-spinner>\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { IGUIModel } from \"app/shared/interfaces/user-views\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"emp-personal-info-core\",\r\n\ttemplateUrl: \"./empl-personal-info-core.component.html\",\r\n\tstyleUrls: [\"./empl-personal-info-core.component.scss\"],\r\n})\r\nexport class EmployeePersonalInfoCoreComponent extends AppHelpers implements OnInit {\r\n\t@Input() icon: string;\r\n\tallowedSections: IGUIModel[];\r\n\tviewsManager = ViewsManager;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\toverride onModulesChanged() {\r\n\t\tthis.allowedSections = this.getCustomViewChildren(\r\n\t\t\tthis.getParentViewName,\r\n\t\t\tViewsManager.emp_personal_info_tab\r\n\t\t);\r\n\t\t//\t\tconsole.log(\"personal-info\", this.allowedSections);\r\n\t}\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title class=\"main-card-title border-bottom\">\r\n        <page-title title=\"personalInformation\" color=\"font-dark\" class=\"font-size-17 font-weight-bold\"></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid p-0 px-4\">\r\n        <div class=\"row mx-md-n2\">\r\n          <!-- personal-info  -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_personal_info_sec)\">\r\n            <emp-personal-info-card></emp-personal-info-card>\r\n          </div>\r\n\r\n          <mat-divider></mat-divider>\r\n\r\n          <!-- contact-and-address -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_contact_address_sec)\">\r\n            <emp-contact-card></emp-contact-card>\r\n          </div>\r\n\r\n          <mat-divider></mat-divider>\r\n\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_contact_address_sec)\">\r\n            <emp-address-card></emp-address-card>\r\n          </div>\r\n\r\n          <mat-divider></mat-divider>\r\n\r\n          <!-- dependants -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_dependants_sec)\">\r\n            <emp-dependants-card></emp-dependants-card>\r\n          </div>\r\n\r\n          <!-- military-data -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_military_data_sec)\">\r\n            <emp-military-data-card></emp-military-data-card>\r\n          </div>\r\n\r\n          <!-- documents -->\r\n          <div class=\"col-12 p-0 px-md-2\"\r\n               *ngIf=\"isViewAllowed(viewsManager.emp_documents_sec)\">\r\n            <emp-documents-card></emp-documents-card>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\nimport { EmpDataTableImplement } from \"app/personnel-setup/models/implements/emp-data-table.implement\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { IEmployeeMaritalDeleteParams, IEmployeeMaritalModel } from \"app/personnel-setup/models/emp-personal-info/marital-status\";\nimport { EmployeeMaritalDataService } from \"app/personnel-setup/services/employees/personal-info/employee-marital-data.service\";\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\nimport { IResponse } from \"app/shared/interfaces/responces\";\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\nimport { employeeMaritalStatusToMap } from \"app/personnel-setup/mapper/employee-personal-info\";\n\n@Component({\n  selector: \"app-emp-marital-status-table\",\n  templateUrl: \"./emp-marital-status-table.component.html\",\n  styleUrls: [\"./emp-marital-status-table.component.scss\"]\n})\nexport class EmpMaritalStatusTableComponent extends AppHelpers implements EmpDataTableImplement, OnChanges {\n  @Input() hasUpdate: boolean;\n  @Input() hideActions: boolean = false;\n  @Input() isMatPaginator: boolean = false;\n  @Output() rowToEdit = new EventEmitter<IEmployeeMaritalModel>;\n  @Output() afterDelete = new EventEmitter<IEmployeeMaritalModel>;\n  mandatoryColomns: string[] = [\n    \"maritalStatus\",\n    \"statusDate\",\n    \"actions\",\n  ];\n  optionalColomns: string[] = [];\n  dataSource: MatTableDataSource<IEmployeeMaritalModel>;\n  employeeId: number;\n  isLoaded: boolean;\n\n  constructor(private employeeMaritalDataService: EmployeeMaritalDataService) {\n    super();\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\n\n    // marital status index\n    this.rowFunctions = this.getSubRowFunctions(\n      this.getParentViewName,\n      ViewsManager.emp_personal_info_sec\n    );\n  }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasUpdate && changes.hasUpdate.currentValue && this.employeeId > 0) this.getAllMaritalStatus();\n    if (this.hideActions) {\n      let editIndex = this.rowFunctions.basic.findIndex(e => e.name.toLowerCase() == \"edit\");\n      this.rowFunctions.basic.splice(editIndex, 1);\n    }\n  }\n\n\n  getList(page: number, pageSize?: number): void {\n  }\n\n  override onChangeBusinessAndCompanyId(): void {\n    if (this.dataSource?.data?.length > 0)\n      this.dataSource = new MatTableDataSource(null);\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) {\n      this.getAllMaritalStatus();\n    }\n    else this.isLoaded = true;\n  }\n\n  getAllMaritalStatus() {\n    this.employeeMaritalDataService\n      .getAll(this.employeeId)\n      .pipe(this.cancelRequest())\n      .subscribe((res: IResponse<IEmployeeMaritalModel[]>) => {\n        if (res.message.messageType == MessageTypes.Success) {\n          this.dataSource = new MatTableDataSource(\n            employeeMaritalStatusToMap(res.data)\n          );\n          this.isLoaded = true;\n        }\n        else this.errorList(res.message.messages);\n      });\n  }\n\n  onDelete(employeeMaritalInfo: IEmployeeMaritalModel): void {\n    let msg = this.msgTranslate(\n      employeeMaritalInfo.comm_Marital_Status?.ar_Name,\n      employeeMaritalInfo.comm_Marital_Status?.en_Name\n    );\n    this.deleteDialog(msg).subscribe((confirm) => {\n      if (confirm) this.delete(employeeMaritalInfo);\n    });\n  }\n\n  delete(empMarital: IEmployeeMaritalModel) {\n    let deleteParams: IEmployeeMaritalDeleteParams = {\n      PersonID: this.employeeId,\n      MaritalID: empMarital.comm_Marital_Status?.id,\n    };\n    this.showLoading();\n    this.employeeMaritalDataService\n      .Delete(deleteParams)\n      .subscribe((res: IResponse) => {\n        if (res.message.messageType == MessageTypes.Success) {\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\n          this.getAllMaritalStatus();\n          this.afterDelete.emit(empMarital); // emit to parent\n        }\n        else this.errorList(res.message.messages);\n        this.hideLoading();\n      });\n  }\n\n\n  toEdit(empMarital: IEmployeeMaritalModel) {\n    this.rowToEdit.emit(empMarital);\n  }\n\n\n}\n","<app-material-table *ngIf=\"employeeId > 0\"\n                    [isLoaded]=\"isLoaded\"\n                    [dataSource]=\"dataSource\"\n                    [mandatoryColomns]=\"mandatoryColomns\"\n                    [optionalColomns]=\"optionalColomns\"\n                    [page]=\"page\"\n                    [actions]=\"rowFunctions\"\n                    (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\n                    (editRow)=\"toEdit($event)\"\n                    (deleteRow)=\"onDelete($event)\"\n                    [isDialogSize]=\"true\"\n                    [isMatPaginator]=\"isMatPaginator\"\n                    [showFirstLastButtons]=\"false\"\n                    [showFilter]=\"false\"\n                    [showSpaceTop]=\"false\"\n                    class=\"table-in-forms\">\n</app-material-table>\n<ngx-spinner></ngx-spinner>\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { IEmployeeMaritalModel } from \"app/personnel-setup/models/emp-personal-info/marital-status\";\r\nimport { IEmployee } from \"app/personnel-setup/models/employees\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeMaritalDataService } from \"app/personnel-setup/services/employees/personal-info/employee-marital-data.service\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmployeePersonalInfoDialogComponent } from \"../emp-personal-info-dialog/emp-personal-info-dialog.component\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Component({\r\n  selector: \"emp-personal-info-card\",\r\n  templateUrl: \"./emp-personal-info-card.component.html\",\r\n  styleUrls: [\"./emp-personal-info-card.component.scss\"],\r\n})\r\nexport class EmployeePersonalInfoCardComponent extends AppHelpers implements OnInit {\r\n  employeeId: number;\r\n  empMarital: IEmployeeMaritalModel;\r\n  employee: IEmployee;\r\n  isPersonalLoaded: boolean = false;\r\n  isMaritalLoaded: boolean = false;\r\n  isTableView: boolean = false;\r\n\r\n  constructor(\r\n    private empGeneralInfoService: EmpGeneralInfoService,\r\n    private employeeMaritalDataService: EmployeeMaritalDataService\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.employee = this.empGeneralInfoService.employee$.getValue();\r\n    this.empGeneralInfoService.employee$.subscribe((emp) => {\r\n      this.employee = emp;\r\n      this.personalLoadedFun();\r\n    });\r\n    this.personalLoadedFun();\r\n  }\r\n\r\n  personalLoadedFun() {\r\n    this.isPersonalLoaded = false;\r\n    if (this.employee != null && this.employeeId > 0)\r\n      this.isPersonalLoaded = true;\r\n    if (this.employee == null && this.employeeId == 0)\r\n      this.isPersonalLoaded = true;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empMarital = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) this.getAll();\r\n    else this.isMaritalLoaded = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.empMarital = null;\r\n    this.employeeMaritalDataService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeMaritalModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          let sortedList: IEmployeeMaritalModel[] = res.data;\r\n          // if at least one with status date sort by status date // else sort by create date\r\n          // from old to new\r\n          if (sortedList.some((ele) => ele.statusDate))\r\n            sortedList.sort(\r\n              (a, b) =>\r\n                new Date(a.statusDate).getTime() -\r\n                new Date(b.statusDate).getTime()\r\n            );\r\n          else\r\n            sortedList.sort(\r\n              (a, b) =>\r\n                new Date(a.create_Date).getTime() -\r\n                new Date(b.create_Date).getTime()\r\n            );\r\n          // console.log(sortedList);\r\n          this.empMarital = sortedList[sortedList.length - 1];\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.isMaritalLoaded = true;\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmployeePersonalInfoDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isMaritalLoaded = false;\r\n          this.getAll();\r\n        }\r\n        // if (res?.isPersonal) {\r\n        // \tthis.empGeneralInfoService.getEmployee(this.employeeId);\r\n        // } else if (res?.isMarital) {\r\n        // \tthis.getEmpAll_Military();\r\n        //   this.empGeneralInfoService.getEmployee(this.employeeId);\r\n        // }\r\n      });\r\n  }\r\n\r\n  afterDelete(Marital: IEmployeeMaritalModel) {\r\n    if (Marital) {\r\n      this.isMaritalLoaded = false;\r\n      this.getAll();\r\n    }\r\n  }\r\n\r\n  toggleTable() {\r\n    this.isTableView = !this.isTableView;\r\n  }\r\n}\r\n","<div class=\"card-view border-bottom\"\r\n     *ngIf=\"isPersonalLoaded || isMaritalLoaded; else notLoaded\">\r\n  <div class=\"row\">\r\n    <div class=\"col-2\">\r\n      <card-header [isEdit]=\"employeeId\"\r\n                   [isLoaded]=\"isPersonalLoaded\"\r\n                   (onClickIcon)=\"openAddEditDialog()\"\r\n                   cardTitle=\"personalInfo\"\r\n                   class=\"side_title\">\r\n      </card-header>\r\n    </div>\r\n    <div class=\"col-8\">\r\n      <div *ngIf=\"!isTableView\" class=\"view-data-row-container\">\r\n        <div class=\"w-25 m-auto\" *ngIf=\"!isPersonalLoaded\">\r\n          <p-skeleton width=\"7rem\" styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n        </div>\r\n\r\n        <div class=\"w-25  m-auto\" *ngIf=\"!isPersonalLoaded\">\r\n          <p-skeleton width=\"7rem\" styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n        </div>\r\n\r\n        <div class=\"w-25  m-auto\" *ngIf=\"!isMaritalLoaded\">\r\n          <p-skeleton width=\"7rem\" styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n        </div>\r\n\r\n\r\n        <ng-container *ngIf=\"isPersonalLoaded\">\r\n          <card-row-item class=\"w-25\" label=\"dob\" [value]=\"employee?.person.dob\" [isDate]=\"true\">\r\n          </card-row-item>\r\n\r\n          <card-row-item class=\"w-25\"\r\n                         label=\"placeOfBirth\"\r\n                         [value]=\"\r\n          msgTranslate(employee?.country?.ar_Name, employee?.country?.en_NAme)\">\r\n          </card-row-item>\r\n        </ng-container>\r\n\r\n\r\n        <card-row-item class=\"w-25\"\r\n                       *ngIf=\"isMaritalLoaded\"\r\n                       label=\"maritalStatus\"\r\n                       [value]=\"msgTranslate(empMarital?.comm_Marital_Status?.ar_Name,empMarital?.comm_Marital_Status?.en_Name)\">\r\n        </card-row-item>\r\n      </div>\r\n      <app-emp-marital-status-table *ngIf=\"isTableView\"\r\n                                    [isMatPaginator]=\"true\"\r\n                                    [hideActions]=\"true\"\r\n                                    (afterDelete)=\"afterDelete($event)\">\r\n      </app-emp-marital-status-table>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <see-more-btn [isTableView]=\"isTableView\" (toggleTable)=\"toggleTable()\"></see-more-btn>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton [rowNo]=\"5\">\r\n  </app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport {\r\n  IEditEmployeeMaritalRequest,\r\n  IEmployeeMaritalModel,\r\n  IEmployeeMaritalRequest,\r\n} from \"app/personnel-setup/models/emp-personal-info/marital-status\";\r\nimport { ISaveEmpGeneralInfo } from \"app/personnel-setup/models/employees\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeMaritalDataService } from \"app/personnel-setup/services/employees/personal-info/employee-marital-data.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { HelpersFunctions } from \"app/shared/resources/helpers-functions\";\r\n\r\n@Component({\r\n  selector: \"app-employee-personal-info-dialog\",\r\n  templateUrl: \"./emp-personal-info-dialog.component.html\",\r\n  styleUrls: [\"./emp-personal-info-dialog.component.scss\"],\r\n})\r\nexport class EmployeePersonalInfoDialogComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  hasUpdate: boolean = false;\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  selectedMaritalId: number = 0;\r\n\r\n  // mandatoryColomns: string[] = [\r\n  //   \"Ser\",\r\n  //   \"maritalStatus\",\r\n  //   \"statusDate\",\r\n  //   \"actions\",\r\n  // ];\r\n  // optionalColomns: string[] = [];\r\n  // dataSource: MatTableDataSource<IEmployeeMaritalModel>;\r\n  // isLoaded: boolean = false;\r\n  // @ViewChild(EmployeePersonalInfoCardComponent, { static: true })\r\n  // personalInfoCard: EmployeePersonalInfoCardComponent;\r\n\r\n  constructor(\r\n    private employeeMaritalDataService: EmployeeMaritalDataService,\r\n    public dialogRef: MatDialogRef<EmployeePersonalInfoDialogComponent>\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n    // marital status index\r\n    // this.rowFunctions = this.getSubRowFunctions(\r\n    //   this.getParentViewName,\r\n    //   ViewsManager.emp_personal_info_sec\r\n    // );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      maritalID: [null, [Validators.required]],\r\n      statusDate: [null],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.hasUpdate);\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  // override onChangeBusinessAndCompanyId(): void {\r\n  //   if (this.dataSource?.data?.length > 0)\r\n  //     this.dataSource = new MatTableDataSource(null);\r\n  //   if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) {\r\n  //     this.getAllMaritalStatus();\r\n  //   }\r\n  //   else this.isLoaded = true;\r\n  // }\r\n\r\n  // getAllMaritalStatus() {\r\n  //   this.employeeMaritalDataService\r\n  //     .getAll(this.employeeId)\r\n  //     .pipe(this.cancelRequest())\r\n  //     .subscribe((res: IResponse<IEmployeeMaritalModel[]>) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.dataSource = new MatTableDataSource(\r\n  //           employeeMaritalStatusToMap(res.data)\r\n  //         );\r\n  //         this.isLoaded = true;\r\n  //       }\r\n  //       else this.errorList(res.message.messages);\r\n  //     });\r\n  // }\r\n\r\n  submit() {\r\n    // console.log(this.personalInfoCard);\r\n    // if (this.personalInfoCard) this.personalInfoCard?.getEmpAll_Military();\r\n\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeMaritalRequest = {\r\n        EmployeeData: {\r\n          personID: this.employeeId,\r\n          maritalID: this.formCtrls.maritalID.value,\r\n          statusDate: HelpersFunctions.mapDateReverse(\r\n            this.formCtrls.statusDate.value\r\n          ),\r\n        },\r\n      };\r\n\r\n      this.formCtrls.id.value == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeMaritalRequest) {\r\n    this.showLoading();\r\n    this.employeeMaritalDataService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeMaritalModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          //  this.getAllMaritalStatus();\r\n          this.hasUpdate = true;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeMaritalRequest) {\r\n    let editModel: IEditEmployeeMaritalRequest = {\r\n      ...model,\r\n      OriginalEmployeeData: {\r\n        PersonID: this.employeeId,\r\n        MaritalID: this.selectedMaritalId,\r\n      },\r\n    };\r\n    this.showLoading();\r\n    this.employeeMaritalDataService\r\n      .update(editModel)\r\n      .subscribe((res: IResponse<IEmployeeMaritalModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          //   this.getAllMaritalStatus();\r\n          this.hasUpdate = true;\r\n          this.selectedMaritalId = 0;\r\n        }\r\n        else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeMaritalToEdit(employeeMaritalInfo: IEmployeeMaritalModel) {\r\n    this.form.patchValue(employeeMaritalInfo);\r\n    this.formCtrls.statusDate.setValue(employeeMaritalInfo.originalDateFormat);\r\n    // not real id >> only to detect edit mode\r\n    this.formCtrls.id.setValue(\r\n      employeeMaritalInfo.comm_Marital_Status?.id ?? 1\r\n    );\r\n\r\n    // to use in edit request\r\n    this.selectedMaritalId = employeeMaritalInfo.maritalID;\r\n  }\r\n\r\n  // onDelete(employeeMaritalInfo: IEmployeeMaritalModel): void {\r\n  //   let msg = this.msgTranslate(\r\n  //     employeeMaritalInfo.comm_Marital_Status?.ar_Name,\r\n  //     employeeMaritalInfo.comm_Marital_Status?.en_Name\r\n  //   );\r\n  //   this.deleteDialog(msg).subscribe((confirm) => {\r\n  //     if (confirm) this.delete(employeeMaritalInfo);\r\n  //   });\r\n  // }\r\n  //\r\n  // delete(employeeMaritalInfo: IEmployeeMaritalModel) {\r\n  //   let deleteParams: IEmployeeMaritalDeleteParams = {\r\n  //     PersonID: this.employeeId,\r\n  //     MaritalID: employeeMaritalInfo.comm_Marital_Status?.id,\r\n  //   };\r\n  //   this.showLoading();\r\n  //   this.employeeMaritalDataService\r\n  //     .Delete(deleteParams)\r\n  //     .subscribe((res: IResponse) => {\r\n  //       if (res.message.messageType == MessageTypes.Success) {\r\n  //         this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n  //         this.getAllMaritalStatus();\r\n  //         this.updated = true;\r\n  //         if (\r\n  //           employeeMaritalInfo.comm_Marital_Status?.id ==\r\n  //           this.selectedMaritalId &&\r\n  //           // if edit\r\n  //           this.formCtrls.id.value > 0\r\n  //         )\r\n  //           this.clearForm();\r\n  //       }\r\n  //       else this.errorList(res.message.messages);\r\n  //       this.hideLoading();\r\n  //     });\r\n  // }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onSave(data: ISaveEmpGeneralInfo) {\r\n    // this.empGeneralInfoService.getEmployee(this.data.employeeId);\r\n    // this.dialogRef.close(data);\r\n  }\r\n\r\n  afterDelete(Marital: IEmployeeMaritalModel) {\r\n    if (Marital?.comm_Marital_Status.id == this.formCtrls.id.value) this.clearForm();\r\n    if (Marital) this.hasUpdate = true;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"personalInfo\">\r\n    </page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\">\r\n  <p class=\"divider-title\">\r\n    {{ \"personalData\" | translate | titlecase }}\r\n  </p>\r\n\r\n  <emp-general-info-form [isPersonal]=\"true\" (onSave)=\"onSave($event)\">\r\n  </emp-general-info-form>\r\n\r\n  <mat-divider class=\"mtop-20\"></mat-divider>\r\n\r\n  <!-- marital data -->\r\n\r\n  <div #dialogContainer>\r\n    <p class=\"divider-title\">\r\n      {{ \"maritalData\" | translate | titlecase }}\r\n    </p>\r\n\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row ptop-20\">\r\n        <div class=\"col-md-6 col-12\">\r\n          <app-marital-status-dropdown\r\n            [control]=\"formCtrls.maritalID\"\r\n            [submitted]=\"submitted\"\r\n            [filter]=\"true\"\r\n            [appendTo]=\"dialogContainer\"\r\n          ></app-marital-status-dropdown>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-12\">\r\n          <app-datepicker\r\n            [control]=\"formCtrls.statusDate\"\r\n            [submitted]=\"submitted\"\r\n            label=\"date\"\r\n          ></app-datepicker>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"emp-form-btns-float\">\r\n      <reset-form-btn\r\n        *ngIf=\"formCtrls.id.value > 0\"\r\n        (click)=\"clearForm()\"\r\n      ></reset-form-btn>\r\n\r\n      <submit-btn\r\n        [id]=\"formCtrls.id.value\"\r\n        (onClick)=\"submit()\"\r\n        [color]=\"btn.darkBlue\"\r\n        [disabled]=\"!employeeId\"\r\n      >\r\n      </submit-btn>\r\n    </div>\r\n\r\n    <app-emp-marital-status-table (rowToEdit)=\"employeeMaritalToEdit($event)\"\r\n                                  (afterDelete)=\"afterDelete($event)\"\r\n                                  [hasUpdate]=\"hasUpdate\">\r\n    </app-emp-marital-status-table>\r\n\r\n    <!--    <app-material-table *ngIf=\"employeeId > 0\"-->\r\n    <!--                        [isLoaded]=\"isLoaded\"-->\r\n    <!--                        [dataSource]=\"dataSource\"-->\r\n    <!--                        [mandatoryColomns]=\"mandatoryColomns\"-->\r\n    <!--                        [optionalColomns]=\"optionalColomns\"-->\r\n    <!--                        [actions]=\"rowFunctions\"-->\r\n    <!--                        (editRow)=\"employeeMaritalToEdit($event)\"-->\r\n    <!--                        (deleteRow)=\"onDelete($event)\"-->\r\n    <!--                        [showPaginator]=\"false\"-->\r\n    <!--                        [showFilter]=\"false\"-->\r\n    <!--                        class=\"table-in-forms\">-->\r\n    <!--    </app-material-table>-->\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n\t<button mat-raised-button class=\"btn bg-light-secondary\" (click)=\"onCloseDialog()\">\r\n\t\t{{ \"General.close\" | translate }}\r\n\t</button>\r\n</mat-dialog-actions> -->\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { employeeAddressToMap } from \"app/personnel-setup/mapper/emp-contact-address\";\r\nimport {\r\n\tIEmployeeAddress,\r\n\tIEmployeeAddressModel,\r\n\tIEmployeeAddressRequest,\r\n\tIEmployeeAddressDeleteParams,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeAddressService } from \"app/personnel-setup/services/employees/personal-info/employee-address.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n\tselector: \"employee-address-section\",\r\n\ttemplateUrl: \"./emp-address-section.component.html\",\r\n\tstyleUrls: [\"./emp-address-section.component.scss\"],\r\n})\r\nexport class EmployeeAddressDialogComponent extends AppHelpers implements OnInit {\r\n\temployeeId: number = 0;\r\n\t@Output() changUpdated = new EventEmitter<boolean>();\r\n\r\n\tmandatoryColomns: string[] = [\r\n\t\t\"Ser\",\r\n\t\t// \"id\",\r\n\t\t\"country\",\r\n\t\t\"governorate\",\r\n\t\t\"address\",\r\n\t\t\"primary\",\r\n\t\t\"actions\",\r\n\t];\r\n\toptionalColomns: string[] = [];\r\n\tdataSource: MatTableDataSource<IEmployeeAddress>;\r\n\r\n\tisLoaded: boolean = false;\r\n\r\n\tform: FormGroup;\r\n\tsubmitted: boolean = false;\r\n\r\n\tconstructor(private employeeAddressService: EmployeeAddressService) {\r\n\t\tsuper();\r\n\t\tthis.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\r\n\t\tthis.rowFunctions = this.getSubRowFunctions(\r\n\t\t\tthis.getParentViewName,\r\n\t\t\tViewsManager.emp_contact_address_sec\r\n\t\t);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.form = this.fb.group({\r\n\t\t\tid: [0, { nonNullable: true }],\r\n\t\t\tcountryId: [null, [Validators.required]],\r\n\t\t\tGovernorate_ID: [null, [Validators.required]],\r\n\t\t\taddress: [null, [Validators.required]],\r\n\t\t\tprimary: [null],\r\n\t\t});\r\n\t}\r\n\r\n\tget formCtrls() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\toverride onChangeBusinessAndCompanyId(): void {\r\n\t\tif (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n\t\tif (this.employeeId > 0 && this.checkNoBusinessOrCompany()) {\r\n\t\t\tthis.getList(this.firstPage);\r\n\t\t}\r\n\t}\r\n\r\n\tgetList(page: number, pageSize?: number) {\r\n\t\tthis.page.pageIndex = page;\r\n\t\tif (pageSize) this.page.dialogSize = pageSize;\r\n\t\tlet params: IPageParams = {\r\n\t\t\tPageNumber: page,\r\n\t\t\tpageSize: this.page.dialogSize,\r\n\t\t};\r\n\t\tthis.employeeAddressService\r\n\t\t\t.GetList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n\t\t\t.subscribe((res: IResponseList<IEmployeeAddressModel[]>) => {\r\n\t\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\t\tthis.dataSource = new MatTableDataSource(employeeAddressToMap(res.data));\r\n\t\t\t\t\tthis.page.length = res.meta.totalItemCount;\r\n\t\t\t\t\tthis.isLoaded = true;\r\n\t\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\t// console.log(this.form.value);\r\n\t\tthis.submitted = true;\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst model: IEmployeeAddressRequest = {\r\n\t\t\t\tEmployeeData: {\r\n\t\t\t\t\tPerson_ID: this.employeeId,\r\n\t\t\t\t\tComm_Address: {\r\n\t\t\t\t\t\tID: this.form.value.id,\r\n\t\t\t\t\t\tGovernorate_ID: this.form.value.Governorate_ID,\r\n\t\t\t\t\t\tEn_Name: this.form.value.address,\r\n\t\t\t\t\t\tIsVaild: this.form.value.primary ?? false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tmodel.EmployeeData.Comm_Address.ID == 0 ? this.create(model) : this.update(model);\r\n\t\t} // else this.toastr.error(\"General.formNotValid\");\r\n\t}\r\n\r\n\tcreate(model: IEmployeeAddressRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.employeeAddressService.create(model).subscribe((res: IResponse<IEmployeeAddressModel>) => {\r\n\t\t\tif (res?.message?.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getList(this.firstPage);\r\n\t\t\t\tthis.changUpdated.emit(true);\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(model: IEmployeeAddressRequest) {\r\n\t\tthis.showLoading();\r\n\t\tthis.employeeAddressService.update(model).subscribe((res: IResponse<IEmployeeAddressModel>) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.clearForm();\r\n\t\t\t\tthis.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tthis.getList(this.currentPage);\r\n\t\t\t\tthis.changUpdated.emit(true);\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\temployeeAddressToEdit(employeeAddressInfo: IEmployeeAddress) {\r\n\t\tthis.form.patchValue(employeeAddressInfo);\r\n\t\tthis.formCtrls.countryId.setValue(employeeAddressInfo.comm_Governorate.comm_Country.id);\r\n\t\tthis.formCtrls.Governorate_ID.setValue(employeeAddressInfo.governorate_ID);\r\n\t}\r\n\r\n\tonDelete(employeeAddressInfo: IEmployeeAddress): void {\r\n\t\tlet msg = employeeAddressInfo.address;\r\n\t\tthis.deleteDialog(msg).subscribe((confirm) => {\r\n\t\t\tif (confirm) this.delete(employeeAddressInfo);\r\n\t\t});\r\n\t}\r\n\r\n\tdelete(employeeAddressInfo: IEmployeeAddress) {\r\n\t\tlet deleteParams: IEmployeeAddressDeleteParams = {\r\n\t\t\tPerson_ID: this.employeeId,\r\n\t\t\tADDRESS_ID: employeeAddressInfo.id,\r\n\t\t};\r\n\t\tthis.showLoading();\r\n\t\tthis.employeeAddressService.Delete(deleteParams).subscribe((res: IResponse) => {\r\n\t\t\tif (res.message.messageType == MessageTypes.Success) {\r\n\t\t\t\tthis.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n\t\t\t\tif (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n\t\t\t\t\t// if last item in list: get previous page\r\n\t\t\t\t\tthis.getList(this.prevPage, this.page.dialogSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not last item in list: get current page\r\n\t\t\t\t\tthis.getList(this.currentPage, this.page.dialogSize);\r\n\t\t\t\t}\r\n\t\t\t\tthis.changUpdated.emit(true);\r\n\t\t\t\tif (employeeAddressInfo.id == this.formCtrls.id.value) this.clearForm();\r\n\t\t\t} else this.errorList(res.message.messages);\r\n\t\t\tthis.hideLoading();\r\n\t\t});\r\n\t}\r\n\r\n\tclearForm() {\r\n\t\tthis.form.reset({ id: 0 });\r\n\t\tthis.submitted = false;\r\n\t}\r\n}\r\n","<div #dialogContainer>\r\n  <p class=\"divider-title\">\r\n    {{ \"address\" | translate | titlecase }}\r\n  </p>\r\n\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-country-dropdown\r\n          [control]=\"formCtrls.countryId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-country-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-governorate-by-country-dropdown\r\n          [control]=\"formCtrls.Governorate_ID\"\r\n          [countryControl]=\"formCtrls.countryId\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-governorate-by-country-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input [control]=\"formCtrls.address\" [submitted]=\"submitted\" label=\"address\">\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12 mbottom-20 mtop-14\">\r\n        <app-check-box [control]=\"formCtrls.primary\" label=\"primary\"></app-check-box>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [actions]=\"rowFunctions\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      [page]=\"page\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeAddressToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  empContactCard,\r\n  employeeAddressToMap,\r\n} from \"app/personnel-setup/mapper/emp-contact-address\";\r\nimport {\r\n  IEmployeeAddress,\r\n  IEmployeeAddressModel,\r\n  IEmployeeContactCard,\r\n  IEmployeeContactResponse,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeAddressService } from \"app/personnel-setup/services/employees/personal-info/employee-address.service\";\r\nimport { EmployeeContactService } from \"app/personnel-setup/services/employees/personal-info/employee-contact.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { EmployeeContactAndAddressDialogComponent } from \"../emp-contact-and-address-dialog/emp-contact-and-address-dialog.component\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\n\r\n@Component({\r\n  selector: \"emp-contact-and-address-card\",\r\n  templateUrl: \"./emp-contact-and-address-card.component.html\",\r\n  styleUrls: [\"./emp-contact-and-address-card.component.scss\"],\r\n})\r\nexport class EmployeeContactAndAddressCardComponent\r\n  extends AppHelpers\r\n  implements OnInit {\r\n  employeeId: number;\r\n  empContacts: IEmployeeContactCard;\r\n  employeeAddressInfo: IEmployeeAddress;\r\n\r\n  isContactLoaded: boolean = false;\r\n  isAddressLoaded: boolean = false;\r\n\r\n  constructor(\r\n    private employeeContactService: EmployeeContactService,\r\n    private employeeAddressService: EmployeeAddressService\r\n  ) {\r\n    super();\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empContacts = null;\r\n    this.employeeAddressInfo = null;\r\n    if (this.employeeId > 0 && this.checkNoBusinessOrCompany()) {\r\n      this.GetAllEmpContacts();\r\n      this.GetAllEmpAddress();\r\n    }\r\n    else {\r\n      this.isContactLoaded = true;\r\n      this.isAddressLoaded = true;\r\n    }\r\n  }\r\n\r\n  GetAllEmpContacts() {\r\n    return this.employeeContactService\r\n      .GetAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeContactResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.isContactLoaded = true;\r\n          this.empContacts = empContactCard(res.data);\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  GetAllEmpAddress() {\r\n    return this.employeeAddressService\r\n      .getAll(this.employeeId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeAddressModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.isAddressLoaded = true;\r\n          let employeeAddressesFromNewest: IEmployeeAddress[] =\r\n            employeeAddressToMap(res.data).reverse();\r\n          this.employeeAddressInfo =\r\n            employeeAddressesFromNewest.find(\r\n              (address) => address.primary == true\r\n            ) ?? employeeAddressesFromNewest[0];\r\n        }\r\n        else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmployeeContactAndAddressDialogComponent)\r\n      .afterClosed()\r\n      .subscribe(\r\n        (data: { isAddressUpdated: boolean; isContactUpdated: boolean }) => {\r\n          if (data.isContactUpdated) {\r\n            this.isContactLoaded = false;\r\n            this.GetAllEmpContacts();\r\n          }\r\n          if (data.isAddressUpdated) {\r\n            this.isAddressLoaded = false;\r\n            this.GetAllEmpAddress();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  iteration(a, b): number {\r\n    return a.key - b.key;\r\n  }\r\n}\r\n","<div class=\"card-view border-bottom\" *ngIf=\"isContactLoaded || isAddressLoaded; else notLoaded\">\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-2\">\r\n      <card-header [isEdit]=\"empContacts || employeeAddressInfo\"\r\n                   [isLoaded]=\"isContactLoaded\"\r\n                   (onClickIcon)=\"openAddEditDialog()\"\r\n                   cardTitle=\"contact_Address\"\r\n                   class=\"side_title\">\r\n      </card-header>\r\n    </div>\r\n\r\n    <div class=\"col-10\">\r\n      <div class=\"view-data-row-container\">\r\n        <div class=\"w-20\" *ngIf=\"!isContactLoaded\">\r\n          <p-skeleton width=\"7rem\" styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n        </div>\r\n\r\n        <div class=\"w-20\" *ngIf=\"!isContactLoaded\">\r\n          <p-skeleton width=\"7rem\" styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n        </div>\r\n\r\n        <div class=\"w-20\" *ngIf=\"!isAddressLoaded\">\r\n          <p-skeleton width=\"7rem\" styleClass=\"p-mb-2\" borderRadius=\"10px\"></p-skeleton>\r\n        </div>\r\n\r\n\r\n        <div class=\"w-15\" *ngFor=\"let contactType of empContacts | keyvalue : iteration\">\r\n          <div class=\"col\">\r\n            <p class=\"view-data-title\">{{ contactType.key | translate | titlecase }}</p>\r\n            <div class=\"view-data-value\">\r\n              <div class=\"d-inline-block\">\r\n                <ng-container *ngFor=\"let contact of contactType.value; let lst = last\">\r\n\r\n                  <!-- if not Social Accounts (haven't ICON) -->\r\n                  <span *ngIf=\"!contact?.comm_Contact_Category?.icon\">\r\n                          {{ contact.value }} {{ !lst ? \"-\" : \"\" }}\r\n                  </span>\r\n\r\n                  <!-- if Social Accounts (have ICON) -->\r\n                  <span *ngIf=\"contact?.comm_Contact_Category?.icon\">\r\n                    <a [href]=\"contact.value\"\r\n                       target=\"_blank\"\r\n                       class=\"mr-1 ml-1 font-medium-3\">\r\n                      <i [class]=\"contact.comm_Contact_Category.icon\"></i>\r\n                    </a>\r\n                  </span>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!--        <div class=\"rowItem\">-->\r\n          <!--          <div class=\"row\">-->\r\n          <!--            <div class=\"col-6\">-->\r\n          <!--              <p>{{ contactType.key | translate | titlecase }}</p>-->\r\n          <!--            </div>-->\r\n          <!--            <div class=\"col-6\">-->\r\n          <!--              <ng-container *ngFor=\"let contact of contactType.value; let lst = last\">-->\r\n\r\n          <!--                &lt;!&ndash; if not Social Accounts (haven't ICON) &ndash;&gt;-->\r\n          <!--                <span *ngIf=\"!contact?.comm_Contact_Category?.icon\">-->\r\n          <!--\t\t\t\t\t    \t{{ contact.value }} {{ !lst ? \"-\" : \"\" }}-->\r\n          <!--\t\t\t\t\t    </span>-->\r\n\r\n          <!--                &lt;!&ndash; if Social Accounts (have ICON) &ndash;&gt;-->\r\n          <!--                <span *ngIf=\"contact?.comm_Contact_Category?.icon\">-->\r\n          <!--                <a [href]=\"contact.value\" target=\"_blank\" class=\"mr-1 ml-1 font-medium-3\">-->\r\n          <!--                  <i [class]=\"contact.comm_Contact_Category.icon\"></i>-->\r\n          <!--                </a>-->\r\n          <!--              </span>-->\r\n          <!--              </ng-container>-->\r\n          <!--            </div>-->\r\n          <!--          </div>-->\r\n          <!--        </div>-->\r\n\r\n          <!--          <card-row-item [label]=\"contactType.key\" [displayPlaceholder]=\"false\">-->\r\n          <!--            <ng-container *ngFor=\"let contact of contactType.value; let lst = last\">-->\r\n\r\n          <!--              &lt;!&ndash; if not Social Accounts (haven't ICON) &ndash;&gt;-->\r\n          <!--              <span *ngIf=\"!contact?.comm_Contact_Category?.icon\">-->\r\n          <!--        \t\t\t\t\t    \t{{ contact.value }} {{ !lst ? \"-\" : \"\" }}-->\r\n          <!--        \t\t\t\t\t    </span>-->\r\n\r\n          <!--              &lt;!&ndash; if Social Accounts (have ICON) &ndash;&gt;-->\r\n          <!--              <span *ngIf=\"contact?.comm_Contact_Category?.icon\">-->\r\n          <!--                        <a [href]=\"contact.value\" target=\"_blank\" class=\"mr-1 ml-1 font-medium-3\">-->\r\n          <!--                          <i [class]=\"contact.comm_Contact_Category.icon\"></i>-->\r\n          <!--                        </a>-->\r\n          <!--                      </span>-->\r\n          <!--            </ng-container>-->\r\n          <!--          </card-row-item>-->\r\n\r\n        </div>\r\n        <card-row-item class=\"w-15\" *ngIf=\"isAddressLoaded\" label=\"address\"\r\n                       [value]=\"employeeAddressInfo?.allAddress\"></card-row-item>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton [rowNo]=\"5\"></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"app-employee-contact-and-address-dialog\",\r\n\ttemplateUrl: \"./emp-contact-and-address-dialog.component.html\",\r\n\tstyleUrls: [\"./emp-contact-and-address-dialog.component.scss\"],\r\n})\r\nexport class EmployeeContactAndAddressDialogComponent extends AppHelpers implements OnInit {\r\n\temployeeId: number = 0;\r\n\tisContactUpdated: boolean;\r\n\tisAddressUpdated: boolean;\r\n\tconstructor(\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n\t\tpublic dialogRef: MatDialogRef<EmployeeContactAndAddressDialogComponent>\r\n\t) {\r\n\t\tsuper();\r\n\t\tthis.employeeId = EmpGeneralInfoService.EmployeeId;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n\tcontactUpdated(value: boolean) {\r\n\t\tthis.isContactUpdated = value;\r\n\t\t//  this.data.updateCard();\r\n\t}\r\n\r\n\taddressUpdated(value: boolean) {\r\n\t\tthis.isAddressUpdated = value;\r\n\t\t//\tthis.data.updateCard();\r\n\t}\r\n\r\n\tonCloseDialog() {\r\n\t\tthis.dialogRef.close({\r\n\t\t\tisContactUpdated: this.isContactUpdated,\r\n\t\t\tisAddressUpdated: this.isAddressUpdated,\r\n\t\t});\r\n\t}\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n\t<h4>\r\n\t\t<page-title class=\"d-inline-block mtop-5\" title=\"contact_Address\"> </page-title>\r\n\t</h4>\r\n\r\n\t<button mat-icon-button class=\"float-right mb-1 mr-1\" (click)=\"onCloseDialog()\">\r\n\t\t<i class=\"pi pi-times\"></i>\r\n\t</button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\">\r\n\t<employee-contact-section (changUpdated)=\"contactUpdated($event)\"></employee-contact-section>\r\n\t<div class=\"clearfix\"></div>\r\n\r\n\t<mat-divider class=\"mtop-20\"></mat-divider>\r\n\r\n\t<employee-address-section (changUpdated)=\"addressUpdated($event)\"></employee-address-section>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import {Component, EventEmitter, OnInit, Output} from \"@angular/core\";\r\nimport {FormGroup, Validators} from \"@angular/forms\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {IContactTypeModel} from \"app/system-setup/hr-setup/models/contact-type\";\r\nimport {empContactDisplay} from \"app/personnel-setup/mapper/emp-contact-address\";\r\nimport {\r\n  IEmployeeContactDeleteParams,\r\n  IEmployeeContactDisplay,\r\n  IEmployeeContactRequest,\r\n  IEmployeeContactResponse,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\n\r\nimport {EmployeeContactService} from \"app/personnel-setup/services/employees/personal-info/employee-contact.service\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IPageParams} from \"app/shared/interfaces/params\";\r\nimport {IResponse, IResponseList} from \"app/shared/interfaces/responces\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {ViewsManager} from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"employee-contact-section\",\r\n  templateUrl: \"./emp-contact-section.component.html\",\r\n  styleUrls: [\"./emp-contact-section.component.scss\"],\r\n})\r\nexport class EmployeeContactDialogComponent extends AppHelpers implements OnInit {\r\n  employeeId: number = 0;\r\n  @Output() changUpdated = new EventEmitter<boolean>();\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    \"contactType\",\r\n    \"contactCategory\",\r\n    \"contact\",\r\n    \"primary\",\r\n    \"display_in_emp_card\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeContactDisplay>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private employeeContactService: EmployeeContactService) {\r\n    super();\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_contact_address_sec\r\n    );\r\n    this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, {nonNullable: true}],\r\n      contacT_TYPE_ID: [null, [Validators.required]],\r\n      contacT_Category_ID: [null],\r\n      value: [null, [Validators.required]],\r\n      isPrimary: [null],\r\n      isShow: [null],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0) this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeContactService\r\n      .GetList(this.employeeId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeContactResponse[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(empContactDisplay(res.data));\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeContactRequest = {\r\n        EmployeeData: {\r\n          Person_ID: this.employeeId,\r\n          Comm_Contact: {\r\n            id: this.form.value.id,\r\n            contacT_TYPE_ID: this.form.value.contacT_TYPE_ID,\r\n            contacT_Category_ID: this.form.value.contacT_Category_ID,\r\n            value: this.form.value.value,\r\n            isVaild: this.form.value.isPrimary ?? false,\r\n            isShow: this.form.value.isShow ?? false,\r\n          },\r\n        },\r\n      };\r\n      model.EmployeeData.Comm_Contact.id == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeContactRequest) {\r\n    this.showLoading();\r\n    this.employeeContactService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeContactResponse>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.firstPage);\r\n          this.changUpdated.emit(true);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeContactRequest) {\r\n    this.showLoading();\r\n    this.employeeContactService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmployeeContactResponse>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.changUpdated.emit(true);\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeContactToEdit(empContacts: IEmployeeContactDisplay) {\r\n    this.form.patchValue(empContacts);\r\n    this.formCtrls.value.setValue(empContacts.contact);\r\n    this.formCtrls.id.setValue(empContacts.contact_ID);\r\n    this.formCtrls.isPrimary.setValue(empContacts.primary);\r\n    this.formCtrls.isShow.setValue(empContacts.display_in_emp_card);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(employeeContactInfo: IEmployeeContactDisplay): void {\r\n    let msg = employeeContactInfo.contact;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employeeContactInfo);\r\n    });\r\n  }\r\n\r\n  delete(employeeContactInfo: IEmployeeContactDisplay) {\r\n    let deleteParams: IEmployeeContactDeleteParams = {\r\n      Person_ID: this.employeeId,\r\n      Contact_ID: employeeContactInfo.contact_ID,\r\n    };\r\n    this.showLoading();\r\n    this.employeeContactService.Delete(deleteParams).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.dialogSize);\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.dialogSize);\r\n        }\r\n        this.changUpdated.emit(true);\r\n        if (employeeContactInfo.contact_ID == this.formCtrls.id.value) this.clearForm();\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({id: 0});\r\n    this.submitted = false;\r\n  }\r\n\r\n  onChangeContactType(contact: IContactTypeModel[]) {\r\n    if (contact)\r\n      this.formCtrls.value.setValidators([Validators.pattern(contact[0]?.regularExpression)]);\r\n    else this.formCtrls.value.removeValidators([Validators.pattern(contact[0]?.regularExpression)]);\r\n  }\r\n}\r\n","<div #dialogContainer>\r\n  <p class=\"divider-title\">\r\n    {{ \"contact\" | translate | titlecase }}\r\n  </p>\r\n\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-contact-type-dropdown\r\n          [control]=\"formCtrls.contacT_TYPE_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n          (change)=\"onChangeContactType($event)\"\r\n        >\r\n        </app-contact-type-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <contact-categories-by-contact-dropdown\r\n          [control]=\"formCtrls.contacT_Category_ID\"\r\n          [contactTypControl]=\"formCtrls.contacT_TYPE_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        >\r\n        </contact-categories-by-contact-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input [control]=\"formCtrls.value\" [submitted]=\"submitted\" label=\"contact\"></app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12 mbottom-14 mtop-14\">\r\n        <app-check-box [control]=\"formCtrls.isPrimary\" label=\"primary\"></app-check-box>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12 mbottom-14 mtop-14\">\r\n        <app-check-box [control]=\"formCtrls.isShow\" label=\"display_in_emp_card\"></app-check-box>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\"></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      [showFilter]=\"false\"\r\n                      [isDialogSize]=\"true\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeContactToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</div>\r\n","import {Component, OnInit} from \"@angular/core\";\r\nimport {MessageTypes} from \"app/shared/enums/message-types.enum\";\r\nimport {IResponse} from \"app/shared/interfaces/responces\";\r\nimport {AppHelpers} from \"app/shared/resources/app-helpers\";\r\nimport {EmpS4HanaDialogComponent} from \"../emp-s4-hana-dialog/emp-s4-hana-dialog.component\";\r\nimport {EmployeeS4HanaService} from \"app/personnel-setup/services/employees/sap-integration/employee-s4-hana.service\";\r\nimport {IEmployeeS4HanaModel} from \"app/personnel-setup/models/emp-sap-integration/s4-hana\";\r\nimport {EmpGeneralInfoService} from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\n\r\n@Component({\r\n  selector: \"app-emp-s4-hana-card\",\r\n  templateUrl: \"./emp-s4-hana-card.component.html\",\r\n  styleUrls: [\"./emp-s4-hana-card.component.scss\"],\r\n})\r\nexport class EmpS4HanaCardComponent extends AppHelpers implements OnInit {\r\n  // employeeId: number;\r\n  employeeInstanceId: number;\r\n  empS4: IEmployeeS4HanaModel;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private employeeS4HanaService: EmployeeS4HanaService) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getAllByEmployeeId();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empS4 = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllByEmployeeId();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAllByEmployeeId() {\r\n    this.empS4 = null;\r\n    this.employeeS4HanaService\r\n      .getAll(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeS4HanaModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // sort by id (from new to old)\r\n          res.data.sort(\r\n            (a, b) => new Date(b.id).getTime() - new Date(a.id).getTime()\r\n          );\r\n          this.empS4 = res.data[0];\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpS4HanaDialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAllByEmployeeId();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"empS4\"\r\n    cardTitle=\"s4Hana\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <card-row-item\r\n      label=\"costCentres\"\r\n      [value]=\"empS4?.costCenter\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item [value]=\"empS4?.costCenter_Text\"></card-row-item>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"2\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empS4CostCenterDisplay } from \"app/personnel-setup/mapper/emp-sap-integration\";\r\nimport {\r\n  IEmployeeS4HanaModel,\r\n  IEmployeeS4HanaRequest,\r\n  IS4CostCenter,\r\n} from \"app/personnel-setup/models/emp-sap-integration/s4-hana\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeS4HanaService } from \"app/personnel-setup/services/employees/sap-integration/employee-s4-hana.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-emp-s4-hana-dialog\",\r\n  templateUrl: \"./emp-s4-hana-dialog.component.html\",\r\n  styleUrls: [\"./emp-s4-hana-dialog.component.scss\"],\r\n})\r\nexport class EmpS4HanaDialogComponent extends AppHelpers implements OnInit {\r\n  // employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  updated: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"s4SystemInstance\",\r\n    \"costCenter\",\r\n    \"costCenter_Text\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [];\r\n  dataSource: MatTableDataSource<IEmployeeS4HanaModel>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private employeeS4HanaService: EmployeeS4HanaService,\r\n    public dialogRef: MatDialogRef<EmpS4HanaDialogComponent>\r\n  ) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_S4Hana_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      systemInstance_ID: [null, [Validators.required]],\r\n      costCenter: [null, [Validators.required]],\r\n      costCenter_Text: [null/* , [Validators.required] */],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.updated);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeInstanceId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeS4HanaService\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeS4HanaModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empS4CostCenterDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeS4HanaRequest = {\r\n        EmployeeData: {\r\n          Person_Instance_ID: this.employeeInstanceId,\r\n          ID: this.form.value.id,\r\n          SystemInstance_ID: this.form.value.systemInstance_ID,\r\n          CostCenter: this.form.value.costCenter,\r\n          CostCenter_Text: this.form.value.costCenter_Text,\r\n        },\r\n      };\r\n\r\n      model.EmployeeData.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeS4HanaRequest) {\r\n    this.showLoading();\r\n    this.employeeS4HanaService\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeS4HanaModel>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeS4HanaRequest) {\r\n    this.showLoading();\r\n    this.employeeS4HanaService\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmployeeS4HanaModel>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeS4HanaToEdit(employeeS4HanaInfo: IEmployeeS4HanaModel) {\r\n    this.form.patchValue(employeeS4HanaInfo);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(employeeS4HanaInfo: IEmployeeS4HanaModel): void {\r\n    let msg = employeeS4HanaInfo.s4SystemInstance;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employeeS4HanaInfo);\r\n    });\r\n  }\r\n\r\n  delete(employeeS4HanaInfo: IEmployeeS4HanaModel) {\r\n    this.showLoading();\r\n    this.employeeS4HanaService\r\n      .Delete(employeeS4HanaInfo.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.updated = true;\r\n          if (employeeS4HanaInfo.id == this.formCtrls.id.value)\r\n            this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n\r\n  changeCostCenterText(costCenters: IS4CostCenter[]) {\r\n    this.formCtrls.costCenter_Text.setValue(\r\n      costCenters[0]?.costCenter_Text ?? null\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"s4Hana\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-s4-system-instance-dropdown\r\n          [control]=\"formCtrls.systemInstance_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-s4-system-instance-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <app-cost-center-by-s4-system-instance-dropdown\r\n          [control]=\"formCtrls.costCenter\"\r\n          [s4SystemInstanceControl]=\"formCtrls.systemInstance_ID\"\r\n          [submitted]=\"submitted\"\r\n          [appendTo]=\"dialogContainer\"\r\n          (change)=\"changeCostCenterText($event)\"\r\n        >\r\n        </app-cost-center-by-s4-system-instance-dropdown>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeS4HanaToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport {\r\n  IEmployeeSapB1Display,\r\n  IEmployeeSapB1Model,\r\n} from \"app/personnel-setup/models/emp-sap-integration/sap-b1\";\r\nimport { EmpSapB1DialogComponent } from \"../emp-sap-b1-dialog/emp-sap-b1-dialog.component\";\r\nimport { EmployeeSapB1Service } from \"app/personnel-setup/services/employees/sap-integration/employee-sap-b1.service\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { empSapCostCenterDisplay } from \"app/personnel-setup/mapper/emp-sap-integration\";\r\n\r\n@Component({\r\n  selector: \"app-emp-sap-b1-card\",\r\n  templateUrl: \"./emp-sap-b1-card.component.html\",\r\n  styleUrls: [\"./emp-sap-b1-card.component.scss\"],\r\n})\r\nexport class EmpSapB1CardComponent extends AppHelpers implements OnInit {\r\n  // employeeId: number;\r\n  employeeInstanceId: number;\r\n  empSapB1: IEmployeeSapB1Display;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  constructor(private employeeSapB1Service: EmployeeSapB1Service) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n    EmpGeneralInfoService.employeeInstanceId$.subscribe((empInstanceId) => {\r\n      this.employeeInstanceId = empInstanceId;\r\n      if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany()) {\r\n        this.isLoaded = false;\r\n        this.getAllByEmployeeId();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    this.empSapB1 = null;\r\n    if (this.employeeInstanceId > 0 && this.checkNoBusinessOrCompany())\r\n      this.getAllByEmployeeId();\r\n    else this.isLoaded = true;\r\n  }\r\n\r\n  getAllByEmployeeId() {\r\n    this.empSapB1 = null;\r\n    this.employeeSapB1Service\r\n      .getAll(this.employeeInstanceId)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponse<IEmployeeSapB1Model[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          // // sort by id (from new to old)\r\n          // res.data.sort(\r\n          //   (a, b) => new Date(b.id).getTime() - new Date(a.id).getTime()\r\n          // );\r\n          this.empSapB1 = empSapCostCenterDisplay(\r\n            res.data.reverse().slice(0, 1)\r\n          )[0];\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  openAddEditDialog(): void {\r\n    this.dialogsService\r\n      .addEditDialog(EmpSapB1DialogComponent)\r\n      .afterClosed()\r\n      .subscribe((updated: boolean) => {\r\n        if (updated) {\r\n          this.isLoaded = false;\r\n          this.getAllByEmployeeId();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"cardSection\" *ngIf=\"isLoaded; else notLoaded\">\r\n  <card-header\r\n    [isEdit]=\"empSapB1\"\r\n    cardTitle=\"sapB1\"\r\n    [isLoaded]=\"isLoaded\"\r\n    (onClickIcon)=\"openAddEditDialog()\"\r\n  ></card-header>\r\n\r\n  <div class=\"cardSectionBody\">\r\n    <card-row-item\r\n      label=\"sapSystemInstance\"\r\n      [value]=\"empSapB1?.sapSystemInstance\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"projectCode\"\r\n      [value]=\"empSapB1?.projectCode\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"defualtOcrCode1\"\r\n      [value]=\"empSapB1?.defualtOcrCode1\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"defualtOcrCode2\"\r\n      [value]=\"empSapB1?.defualtOcrCode2\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"defualtOcrCode3\"\r\n      [value]=\"empSapB1?.defualtOcrCode3\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"defualtOcrCode4\"\r\n      [value]=\"empSapB1?.defualtOcrCode4\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      label=\"defualtOcrCode5\"\r\n      [value]=\"empSapB1?.defualtOcrCode5\"\r\n    ></card-row-item>\r\n\r\n    <!-- <card-row-item\r\n      label=\"costCentres\"\r\n      [value]=\"empSapB1?.proj_Code\"\r\n    ></card-row-item>\r\n\r\n    <card-row-item\r\n      [value]=\"empSapB1?.sapSystemInstance\"\r\n    ></card-row-item> -->\r\n  </div>\r\n</div>\r\n\r\n<ng-template #notLoaded>\r\n  <app-employee-profile-card-skeleton\r\n    [rowNo]=\"7\"\r\n  ></app-employee-profile-card-skeleton>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { empSapCostCenterDisplay } from \"app/personnel-setup/mapper/emp-sap-integration\";\r\nimport {\r\n  IEmployeeSapB1Display,\r\n  IEmployeeSapB1Model,\r\n  IEmployeeSapB1Request,\r\n} from \"app/personnel-setup/models/emp-sap-integration/sap-b1\";\r\nimport { EmpGeneralInfoService } from \"app/personnel-setup/services/employees/general-info/emp-general-info.service\";\r\nimport { EmployeeSapB1Service } from \"app/personnel-setup/services/employees/sap-integration/employee-sap-b1.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\n@Component({\r\n  selector: \"app-emp-sap-b1-dialog\",\r\n  templateUrl: \"./emp-sap-b1-dialog.component.html\",\r\n  styleUrls: [\"./emp-sap-b1-dialog.component.scss\"],\r\n})\r\nexport class EmpSapB1DialogComponent extends AppHelpers implements OnInit {\r\n  // employeeId: number = 0;\r\n  employeeInstanceId: number = 0;\r\n  updated: boolean = false;\r\n\r\n  mandatoryColomns: string[] = [\r\n    \"Ser\",\r\n    // \"id\",\r\n    \"sapSystemInstance\",\r\n    \"projectCode\",\r\n    \"actions\",\r\n  ];\r\n  optionalColomns: string[] = [\r\n    \"defualtOcrCode1\",\r\n    \"defualtOcrCode2\",\r\n    \"defualtOcrCode3\",\r\n    \"defualtOcrCode4\",\r\n    \"defualtOcrCode5\",\r\n  ];\r\n  dataSource: MatTableDataSource<IEmployeeSapB1Display>;\r\n\r\n  isLoaded: boolean = false;\r\n\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private employeeSapB1Service: EmployeeSapB1Service,\r\n    public dialogRef: MatDialogRef<EmpSapB1DialogComponent>\r\n  ) {\r\n    super();\r\n    // this.employeeId = EmpGeneralInfoService.EmployeeId;\r\n    this.employeeInstanceId = EmpGeneralInfoService.EmployeeInstanceId;\r\n\r\n    this.rowFunctions = this.getSubRowFunctions(\r\n      this.getParentViewName,\r\n      ViewsManager.emp_SAPB1_sec\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      systemInstance_ID: [null, [Validators.required]],\r\n      proj_Code: [null /* , [Validators.required] */],\r\n      ocrCode1: [null],\r\n      ocrCode2: [null],\r\n      ocrCode3: [null],\r\n      ocrCode4: [null],\r\n      ocrCode5: [null],\r\n    });\r\n\r\n    this.dialogRef.backdropClick().subscribe((ele) => {\r\n      this.onCloseDialog();\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onCloseDialog() {\r\n    this.dialogRef.close(this.updated);\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId(): void {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) {\r\n      if (this.employeeInstanceId > 0) this.getList(this.firstPage);\r\n    }\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.dialogSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.dialogSize,\r\n    };\r\n    this.employeeSapB1Service\r\n      .getList(this.employeeInstanceId, params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IEmployeeSapB1Model[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(\r\n            empSapCostCenterDisplay(res.data)\r\n          );\r\n          this.page.length = res.meta.totalItemCount;\r\n          this.isLoaded = true;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IEmployeeSapB1Request = {\r\n        EmployeeData: {\r\n          Person_Instance_ID: this.employeeInstanceId,\r\n          ID: this.form.value.id,\r\n          SystemInstance_ID: this.form.value.systemInstance_ID,\r\n          Proj_Code: this.form.value.proj_Code,\r\n          OcrCode1: this.form.value.ocrCode1,\r\n          OcrCode2: this.form.value.ocrCode2,\r\n          OcrCode3: this.form.value.ocrCode3,\r\n          OcrCode4: this.form.value.ocrCode4,\r\n          OcrCode5: this.form.value.ocrCode5,\r\n        },\r\n      };\r\n\r\n      model.EmployeeData.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IEmployeeSapB1Request) {\r\n    this.showLoading();\r\n    this.employeeSapB1Service\r\n      .create(model)\r\n      .subscribe((res: IResponse<IEmployeeSapB1Model>) => {\r\n        if (res?.message?.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.lastPageDialog);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  update(model: IEmployeeSapB1Request) {\r\n    this.showLoading();\r\n    this.employeeSapB1Service\r\n      .update(model)\r\n      .subscribe((res: IResponse<IEmployeeSapB1Model>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.clearForm();\r\n          this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n          this.getList(this.currentPage);\r\n          this.updated = true;\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  employeeSapB1ToEdit(employeeSapB1Info: IEmployeeSapB1Display) {\r\n    this.form.patchValue(employeeSapB1Info);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(employeeSapB1Info: IEmployeeSapB1Display): void {\r\n    let msg = employeeSapB1Info.sapSystemInstance;\r\n    this.deleteDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(employeeSapB1Info);\r\n    });\r\n  }\r\n\r\n  delete(employeeSapB1Info: IEmployeeSapB1Display) {\r\n    this.showLoading();\r\n    this.employeeSapB1Service\r\n      .Delete(employeeSapB1Info.id)\r\n      .subscribe((res: IResponse) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n          if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n            // if last item in list: get previous page\r\n            this.getList(this.prevPage, this.page.dialogSize);\r\n          } else {\r\n            // if not last item in list: get current page\r\n            this.getList(this.currentPage, this.page.dialogSize);\r\n          }\r\n          this.updated = true;\r\n          if (employeeSapB1Info.id == this.formCtrls.id.value) this.clearForm();\r\n        } else this.errorList(res.message.messages);\r\n        this.hideLoading();\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div mat-dialog-title class=\"primary-color font-size-20 m-0\">\r\n  <h4>\r\n    <page-title class=\"d-inline-block mtop-5\" title=\"sapB1\"></page-title>\r\n  </h4>\r\n\r\n  <button\r\n    mat-icon-button\r\n    class=\"float-right mb-1 mr-1\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    <i class=\"pi pi-times\"></i>\r\n  </button>\r\n</div>\r\n\r\n<mat-dialog-content class=\"container-fluid mx-0\" #dialogContainer>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row ptop-20\">\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-sap-system-instance-dropdown\r\n          [control]=\"formCtrls.systemInstance_ID\"\r\n          [submitted]=\"submitted\"\r\n          [filter]=\"true\"\r\n          [appendTo]=\"dialogContainer\"\r\n        ></app-sap-system-instance-dropdown>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.proj_Code\"\r\n          [submitted]=\"submitted\"\r\n          label=\"projectCode\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.ocrCode1\"\r\n          [submitted]=\"submitted\"\r\n          label=\"defualtOcrCode1\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.ocrCode2\"\r\n          [submitted]=\"submitted\"\r\n          label=\"defualtOcrCode2\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.ocrCode3\"\r\n          [submitted]=\"submitted\"\r\n          label=\"defualtOcrCode3\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.ocrCode4\"\r\n          [submitted]=\"submitted\"\r\n          label=\"defualtOcrCode4\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 col-sm-6 col-12\">\r\n        <app-input\r\n          [control]=\"formCtrls.ocrCode5\"\r\n          [submitted]=\"submitted\"\r\n          label=\"defualtOcrCode5\"\r\n        >\r\n        </app-input>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"emp-form-btns-float\">\r\n    <reset-form-btn\r\n      *ngIf=\"formCtrls.id.value > 0\"\r\n      (click)=\"clearForm()\"\r\n    ></reset-form-btn>\r\n\r\n    <submit-btn\r\n      [id]=\"formCtrls.id.value\"\r\n      (onClick)=\"submit()\"\r\n      [color]=\"btn.darkBlue\"\r\n      [disabled]=\"!employeeInstanceId\"\r\n    >\r\n    </submit-btn>\r\n  </div>\r\n  <div class=\"clearfix\"></div>\r\n\r\n  <app-material-table *ngIf=\"employeeInstanceId > 0\"\r\n                      [isLoaded]=\"isLoaded\"\r\n                      [dataSource]=\"dataSource\"\r\n                      [mandatoryColomns]=\"mandatoryColomns\"\r\n                      [optionalColomns]=\"optionalColomns\"\r\n                      [page]=\"page\"\r\n                      [actions]=\"rowFunctions\"\r\n                      (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n                      (editRow)=\"employeeSapB1ToEdit($event)\"\r\n                      (deleteRow)=\"onDelete($event)\"\r\n                      [isDialogSize]=\"true\"\r\n                      [showFilter]=\"false\"\r\n                      class=\"table-in-forms\">\r\n  </app-material-table>\r\n</mat-dialog-content>\r\n\r\n<!-- <mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-raised-button\r\n    class=\"btn bg-light-secondary\"\r\n    (click)=\"onCloseDialog()\"\r\n  >\r\n    {{ \"General.close\" | translate }}\r\n  </button>\r\n</mat-dialog-actions> -->\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { IGUIModel } from \"app/shared/interfaces/user-views\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\n\r\n@Component({\r\n\tselector: \"emp-sap-integration-core\",\r\n\ttemplateUrl: \"./emp-sap-integration-core.component.html\",\r\n\tstyleUrls: [\"./emp-sap-integration-core.component.scss\"],\r\n})\r\nexport class EmpSapIntegrationCoreComponent extends AppHelpers implements OnInit {\r\n\t@Input() icon: string;\r\n\tallowedSections: IGUIModel[];\r\n\tviewsManager = ViewsManager;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\toverride onModulesChanged() {\r\n\t\tthis.allowedSections = this.getCustomViewChildren(\r\n\t\t\tthis.getParentViewName,\r\n\t\t\tViewsManager.emp_sap_integration_tab\r\n\t\t);\r\n\t\t//  console.log(\"sap_integration\", this.allowedSections);\r\n\t}\r\n}\r\n","<!-- <ngx-spinner></ngx-spinner> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title class=\"main-card-title border-bottom\">\r\n        <page-title\r\n          title=\"sapIntegration\"\r\n          [icon]=\"icon\"\r\n          color=\"info\"\r\n        ></page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid p-0\">\r\n        <div class=\"row mx-md-n2\">\r\n          <!-- sap b1  -->\r\n          <div\r\n            class=\"col-md-6 col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_SAPB1_sec)\"\r\n          >\r\n            <app-emp-sap-b1-card> </app-emp-sap-b1-card>\r\n          </div>\r\n\r\n          <!-- s4 -->\r\n          <div\r\n            class=\"col-md-6 col-12 p-0 px-md-2\"\r\n            *ngIf=\"isViewAllowed(viewsManager.emp_S4Hana_sec)\"\r\n          >\r\n            <app-emp-s4-hana-card> </app-emp-s4-hana-card>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IEmpPermissionDisplayModel,\r\n  IEmpPermissionModel,\r\n} from \"../models/emp-balances/permission\";\r\nimport {\r\n  IEmpVacationDisplayModel,\r\n  IEmpVacationModel,\r\n} from \"../models/emp-balances/vacation\";\r\n\r\nexport function empVacationDisplay(\r\n  data: IEmpVacationModel[]\r\n): IEmpVacationDisplayModel[] {\r\n  return data.map((vacation) => {\r\n    return <IEmpVacationDisplayModel>{\r\n      ...vacation,\r\n      vacation: msgTranslate(\r\n        vacation.vacation_ArName,\r\n        vacation.vacation_EnName\r\n      ),\r\n      startDate: HelpersFunctions.mapDate(vacation.opening_balance_date),\r\n      endDate: HelpersFunctions.mapDate(vacation.closing_balance_date),\r\n      balance: vacation.vacationBalanceOriginal,\r\n      used: vacation.vacation_Done_Balance,\r\n      remaining: vacation.vacation_balance,\r\n    };\r\n  });\r\n}\r\n\r\nexport function empPermissionDisplay(\r\n  data: IEmpPermissionModel[]\r\n): IEmpPermissionDisplayModel[] {\r\n  return data.map((permission) => {\r\n    return <IEmpPermissionDisplayModel>{\r\n      ...permission,\r\n      permission: permission.permission_Setup_Name,\r\n      startDate: HelpersFunctions.mapDate(permission.opening_balance_date),\r\n      endDate: HelpersFunctions.mapDate(permission.closing_balance_date),\r\n      balance: permission.permission_balance,\r\n      used: permission.taken_permission_Yearly,\r\n      remaining: permission.remaining_Balance,\r\n      newHireCloseDate: HelpersFunctions.mapDate(permission.newHireCloseDate),\r\n    };\r\n  });\r\n}\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IEmployeeAddress,\r\n  IEmployeeAddressModel,\r\n  IEmployeeContactCard,\r\n  IEmployeeContactDisplay,\r\n  IEmployeeContactModel,\r\n  IEmployeeContactResponse,\r\n} from \"../models/emp-personal-info/contact-address\";\r\n\r\nexport function empContactDisplay(\r\n  empContacts: IEmployeeContactResponse[]\r\n): IEmployeeContactDisplay[] {\r\n  return empContacts.map((contact) => {\r\n    return <IEmployeeContactDisplay>{\r\n      contactType: msgTranslate(\r\n        contact?.comm_Contact?.comm_Contact_Type?.ar_Name,\r\n        contact?.comm_Contact?.comm_Contact_Type?.en_Name\r\n      ),\r\n      contactCategory: msgTranslate(\r\n        contact?.comm_Contact?.comm_Contact_Category?.ar_Name,\r\n        contact?.comm_Contact?.comm_Contact_Category?.en_Name\r\n      ),\r\n      contact: contact?.comm_Contact?.value,\r\n      primary: contact?.comm_Contact?.isVaild,\r\n      display_in_emp_card: contact?.comm_Contact?.isShow,\r\n      person_ID: contact.person_ID,\r\n      contact_ID: contact.contact_ID,\r\n      contacT_TYPE_ID: contact.comm_Contact?.contacT_TYPE_ID,\r\n      contacT_Category_ID: contact.comm_Contact?.contacT_Category_ID,\r\n    };\r\n  });\r\n}\r\n\r\nexport function empContactCard(empContacts: IEmployeeContactResponse[]): IEmployeeContactCard {\r\n  let list: IEmployeeContactModel[] = [];\r\n  empContacts.map((element) => {\r\n    element.comm_Contact.comm_Contact_Type.displayName = msgTranslate(\r\n      element.comm_Contact?.comm_Contact_Type.ar_Name,\r\n      element.comm_Contact?.comm_Contact_Type.en_Name\r\n    );\r\n    if (element.comm_Contact?.isShow) list.push(element.comm_Contact);\r\n  });\r\n\r\n  let data: IEmployeeContactCard = list.reduce((g: any, contact: IEmployeeContactModel) => {\r\n    g[contact.comm_Contact_Type?.displayName] = g[contact.comm_Contact_Type?.displayName] || [];\r\n    g[contact.comm_Contact_Type?.displayName].push(contact);\r\n    return g;\r\n  }, {});\r\n  return data;\r\n}\r\n\r\nexport function employeeAddressToMap(\r\n  employeeAddresss: IEmployeeAddressModel[]\r\n): IEmployeeAddress[] {\r\n  let addresses: IEmployeeAddress[] = employeeAddresss.map((employeeAddress) => {\r\n    return <IEmployeeAddress>{\r\n      ...employeeAddress.comm_Address,\r\n      country: msgTranslate(\r\n        employeeAddress.comm_Address.comm_Governorate?.comm_Country?.ar_Name,\r\n        employeeAddress.comm_Address.comm_Governorate?.comm_Country?.en_NAme\r\n      ),\r\n      governorate: msgTranslate(\r\n        employeeAddress.comm_Address.comm_Governorate?.ar_Name,\r\n        employeeAddress.comm_Address.comm_Governorate?.en_Name\r\n      ),\r\n      address: employeeAddress.comm_Address.en_Name,\r\n      primary: employeeAddress.comm_Address.isVaild,\r\n    };\r\n  });\r\n\r\n  // to display in card as >> value, governorate, country\r\n  addresses.map((employeeAddresss) => {\r\n    employeeAddresss.allAddress = `${employeeAddresss.address}, ${\r\n      employeeAddresss.governorate ?? \"-\"\r\n    }, ${employeeAddresss.country ?? \"-\"}`;\r\n  });\r\n\r\n  return addresses;\r\n}\r\n","import { EEmpHireDocType } from \"app/shared/enums/emp-hire-doc-type.enum\";\r\nimport {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IEmpAssignManagerDisplayModel,\r\n  IEmpAssignManagerModel,\r\n} from \"../models/emp-employment-info/assign-as-org-manager\";\r\nimport {\r\n  IContractModel,\r\n  IEmpContractDisplayModel,\r\n} from \"../models/emp-employment-info/contract\";\r\nimport { IEmpCustodyModel } from \"../models/emp-employment-info/custodies\";\r\nimport {\r\n  IEmpLocationDisplayModel,\r\n  IEmpLocationModel,\r\n} from \"../models/emp-employment-info/emp-location\";\r\nimport {\r\n  IEmpHiringDocumentDisplayModel,\r\n  IEmpHiringDocumentModel,\r\n} from \"../models/emp-employment-info/hiring-documents\";\r\nimport { IEmpSocialInsuranceModel } from \"../models/emp-employment-info/social-insurance\";\r\nimport {\r\n  IEmpSupervisorDisplayModel,\r\n  IEmpSupervisorModel,\r\n} from \"../models/emp-employment-info/supervisor\";\r\nimport { IEmployeeWorkScheduleModel } from \"../models/emp-employment-info/work-schedule\";\r\n\r\nexport function empCustodyDisplay(\r\n  data: IEmpCustodyModel[]\r\n): IEmpCustodyModel[] {\r\n  return data.map((custody) => {\r\n    return <IEmpCustodyModel>{\r\n      ...custody,\r\n      custodies: msgTranslate(\r\n        custody.core_Covenant?.ar_Name,\r\n        custody.core_Covenant?.en_Name\r\n      ),\r\n      froM_DATE: HelpersFunctions.mapDate(custody.fromDate),\r\n      endDate: HelpersFunctions.mapDate(custody.toDate),\r\n      date:\r\n        HelpersFunctions.mapDate(custody?.fromDate) +\r\n        (custody?.toDate\r\n          ? \" - \" + HelpersFunctions.mapDate(custody?.toDate)\r\n          : \"\"),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empWorkScheduleDisplay(\r\n  data: IEmployeeWorkScheduleModel[]\r\n): IEmployeeWorkScheduleModel[] {\r\n  return data.map((plan) => {\r\n    return <IEmployeeWorkScheduleModel>{\r\n      ...plan,\r\n      plan: msgTranslate(plan.att_Plan?.ar_Name, plan.att_Plan?.en_Name),\r\n      employee: msgTranslate(\r\n        plan.core_Person_Instance?.core_Person?.ar_Name,\r\n        plan.core_Person_Instance?.core_Person?.en_Name\r\n      ),\r\n      startDate: HelpersFunctions.mapDate(plan.fromDate),\r\n      toDateOriginal: plan.toDate,\r\n      toDate: HelpersFunctions.mapDate(plan.toDate),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empInsuranceOfficeDisplay(\r\n  data: IEmpSocialInsuranceModel[]\r\n): IEmpSocialInsuranceModel[] {\r\n  return data.map((office) => {\r\n    return <IEmpSocialInsuranceModel>{\r\n      ...office,\r\n      insuranceOffice: msgTranslate(\r\n        office.core_Insurance_Office?.ar_Name,\r\n        office.core_Insurance_Office?.en_Name\r\n      ),\r\n      fromDate: HelpersFunctions.mapDate(office.froM_DATE),\r\n      endDate: HelpersFunctions.mapDate(office.enD_DATE),\r\n      date:\r\n        HelpersFunctions.mapDate(office?.froM_DATE) +\r\n        (office?.enD_DATE\r\n          ? \" - \" + HelpersFunctions.mapDate(office?.enD_DATE)\r\n          : \"\"),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empLocationDisplay(\r\n  data: IEmpLocationModel[]\r\n): IEmpLocationDisplayModel[] {\r\n  let locations: IEmpLocationDisplayModel[] = data.map((location) => {\r\n    return <IEmpLocationDisplayModel>{\r\n      ...location,\r\n      country: msgTranslate(\r\n        location.comm_Country?.ar_Name,\r\n        location.comm_Country?.en_NAme\r\n      ),\r\n      governorate: msgTranslate(\r\n        location.comm_Governorate?.ar_Name,\r\n        location.comm_Governorate?.en_Name\r\n      ),\r\n      froM_DATE: HelpersFunctions.mapDate(location.from_Date),\r\n      tO_DATE: HelpersFunctions.mapDate(location.to_Date),\r\n    };\r\n  });\r\n\r\n  // to use properties from first map\r\n  locations.map((location) => {\r\n    location.allAddress = `${location.location ?? \"-\"}, ${\r\n      location.governorate ?? \"-\"\r\n    }`;\r\n    location.date =\r\n      location?.froM_DATE +\r\n      (location?.to_Date ? \" - \" + location?.tO_DATE : \"\");\r\n  });\r\n\r\n  return locations;\r\n}\r\n\r\nexport function empHiringDocumentDisplay(\r\n  data: IEmpHiringDocumentModel[]\r\n): IEmpHiringDocumentDisplayModel[] {\r\n  return data.map((doc) => {\r\n    return <IEmpHiringDocumentDisplayModel>{\r\n      ...doc,\r\n      documentName: msgTranslate(doc.ar_Name_Type, doc.en_Name_Type),\r\n      attachmentType: EEmpHireDocType.getValue(doc.is_Attached),\r\n      attachment: doc.attachmentFilePath ? \"/\" + doc.attachmentFilePath : \"\",\r\n    };\r\n  });\r\n}\r\n\r\nexport function empContractDisplay(\r\n  data: IContractModel[]\r\n): IEmpContractDisplayModel[] {\r\n  return data.map((contract) => {\r\n    return <IEmpContractDisplayModel>{\r\n      ...contract,\r\n      contractType: msgTranslate(\r\n        contract.core_Contract_Type?.ar_Name,\r\n        contract.core_Contract_Type?.en_Name\r\n      ),\r\n      start_date: HelpersFunctions.mapDate(contract.starT_DATE),\r\n      end_date: HelpersFunctions.mapDate(contract.enD_DATE),\r\n      actual_End_Date: HelpersFunctions.mapDate(contract.actual_End_Date),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empSupervisorDisplay(\r\n  data: IEmpSupervisorModel[]\r\n): IEmpSupervisorDisplayModel[] {\r\n  return data.map((ele) => {\r\n    return <IEmpSupervisorDisplayModel>{\r\n      ...ele,\r\n      supervisor: msgTranslate(\r\n        ele.manager?.core_Person?.ar_Name,\r\n        ele.manager?.core_Person?.en_Name\r\n      ),\r\n      fromDate: HelpersFunctions.mapDate(ele.from_Date),\r\n      toDate: HelpersFunctions.mapDate(ele.tO_Date),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empAssignManagerDisplay(\r\n  data: IEmpAssignManagerModel[]\r\n): IEmpAssignManagerDisplayModel[] {\r\n  return data.map((ele) => {\r\n    return <IEmpAssignManagerDisplayModel>{\r\n      ...ele,\r\n      employee: msgTranslate(\r\n        ele.core_Person_Instance?.core_Person?.ar_Name,\r\n        ele.core_Person_Instance?.core_Person?.en_Name\r\n      ),\r\n      startDate: HelpersFunctions.mapDate(ele.from_Date),\r\n      endDate: HelpersFunctions.mapDate(ele.to_Date),\r\n    };\r\n  });\r\n}\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport { IEmployeeBankingAccountModel } from \"../models/payments-information/emp-bank-account\";\r\nimport {\r\n  IEmployeePayVariableDisplayModel,\r\n  IEmployeePayrollDisplayModel,\r\n  IEmployeePayrollModel,\r\n  IEmployeePayrollVariableModel,\r\n} from \"../models/payments-information/emp-payroll-data\";\r\n\r\nexport function empBankingAccountDisplay(\r\n  data: IEmployeeBankingAccountModel[]\r\n): IEmployeeBankingAccountModel[] {\r\n  return data.map((bankAccount) => {\r\n    return <IEmployeeBankingAccountModel>{\r\n      ...bankAccount,\r\n      bank: msgTranslate(\r\n        bankAccount.comm_Bank?.ar_Name,\r\n        bankAccount.comm_Bank?.en_Name\r\n      ),\r\n      startDate: HelpersFunctions.mapDate(bankAccount.from_Date),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empPayrollDisplay(\r\n  data: IEmployeePayrollModel\r\n): IEmployeePayrollDisplayModel[] {\r\n  // global section\r\n  let list: IEmployeePayrollDisplayModel[] = [\r\n    {\r\n      paymentId: 0,\r\n      payment: msgTranslate(\"المتغيرات العامه\", \"Global Variable\"),\r\n      variables: [],\r\n    },\r\n  ];\r\n  // payments section\r\n  data.lstPayments.map((payment) =>\r\n    list.push({\r\n      paymentId: payment.id,\r\n      payment: msgTranslate(payment.ar_Name, payment.en_Name),\r\n      variables: [],\r\n    })\r\n  );\r\n\r\n  // global variables\r\n  data.lstFixedVAriableGlobal.map((variable) =>\r\n    list[0].variables.push(...getVariableList(variable))\r\n  );\r\n\r\n  // payments variables\r\n  data.perssonPeriodLsts.map((ele) => {\r\n    let paymentIndex = getIndexInList(list, ele.payment?.id);\r\n    ele.lstpersperiodcalculations.forEach((variable) =>\r\n      list[paymentIndex].variables.push(...getVariableList(variable))\r\n    );\r\n  });\r\n\r\n  data.lstFixedVAriable.map((variable) => {\r\n    if (\r\n      (variable.paY_Variable?.pay_Payment_Variable?.length != 0 &&\r\n        getIndexInList(\r\n          list,\r\n          variable.paY_Variable?.pay_Payment_Variable[0].Payment_ID\r\n        ) >= 0) ||\r\n      variable.paY_Variable?.pay_Payment_Variable?.length == 0\r\n    ) {\r\n      let paymentIndex = getIndexInList(\r\n        list,\r\n        variable.paY_PeriodCalculation?.payment_ID\r\n      );\r\n      if (\r\n        data.lstAuthorize.find(\r\n          (ele) =>\r\n            ele.variable_ID == variable.variable_ID &&\r\n            ele.payment_ID == list[paymentIndex].paymentId\r\n        )\r\n      )\r\n        list[paymentIndex].variables.push(...getVariableList(variable));\r\n    }\r\n  });\r\n\r\n  return list;\r\n}\r\n\r\nfunction getIndexInList(\r\n  list: IEmployeePayrollDisplayModel[],\r\n  paymentId: number\r\n) {\r\n  return list.findIndex((ele) => ele.paymentId == paymentId);\r\n}\r\n\r\nfunction getVariableList(payrollElement: IEmployeePayrollVariableModel) {\r\n  let variables: IEmployeePayVariableDisplayModel[] = [];\r\n  variables.push({\r\n    variable: msgTranslate(\r\n      payrollElement.paY_Variable?.arName,\r\n      payrollElement.paY_Variable?.name\r\n    ),\r\n    value: payrollElement.variable_Value,\r\n  });\r\n  return variables;\r\n}\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport {\r\n  IEmployeeSapB1Display,\r\n  IEmployeeSapB1Model,\r\n} from \"../models/emp-sap-integration/sap-b1\";\r\nimport { IEmployeeS4HanaModel } from \"../models/emp-sap-integration/s4-hana\";\r\n\r\nexport function empS4CostCenterDisplay(\r\n  data: IEmployeeS4HanaModel[]\r\n): IEmployeeS4HanaModel[] {\r\n  return data.map((s4Item) => {\r\n    return <IEmployeeS4HanaModel>{\r\n      ...s4Item,\r\n      s4SystemInstance: msgTranslate(\r\n        s4Item.s4_SystemInstance?.ar_Name,\r\n        s4Item.s4_SystemInstance?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function empSapCostCenterDisplay(\r\n  data: IEmployeeSapB1Model[]\r\n): IEmployeeSapB1Display[] {\r\n  return data.map((sapItem) => {\r\n    return <IEmployeeSapB1Display>{\r\n      ...sapItem,\r\n      sapSystemInstance: msgTranslate(\r\n        sapItem.saP_SystemInstance?.ar_Name,\r\n        sapItem.saP_SystemInstance?.en_Name\r\n      ),\r\n      projectCode: sapItem.proj_Code,\r\n      defualtOcrCode1: sapItem.ocrCode1,\r\n      defualtOcrCode2: sapItem.ocrCode2,\r\n      defualtOcrCode3: sapItem.ocrCode3,\r\n      defualtOcrCode4: sapItem.ocrCode4,\r\n      defualtOcrCode5: sapItem.ocrCode5,\r\n    };\r\n  });\r\n}\r\n","import { IEmpCustodyModel } from \"app/personnel-setup/models/emp-employment-info/custodies\";\r\nimport { IEmpJobStatusPositionCardModel, IEmpStatusCardDisplayModel } from \"app/personnel-setup/models/employee-employment-info\";\r\nimport { HelpersFunctions, msgTranslate } from \"app/shared/resources/helpers-functions\";\r\n\r\nexport function empStatusCardDisplay(data: IEmpJobStatusPositionCardModel): IEmpStatusCardDisplayModel {\r\n  return <IEmpStatusCardDisplayModel>{\r\n\r\n    status_name: msgTranslate(data?.core_Person_Instance_Status?.core_Status?.ar_Name, data?.core_Person_Instance_Status?.core_Status?.en_Name),\r\n\r\n    status_from_date: HelpersFunctions.mapDate(data?.core_Person_Instance_Status?.from_Date),\r\n\r\n    status_to_date: HelpersFunctions.mapDate(data?.core_Person_Instance_Status?.to_Date),\r\n\r\n    status_properties_name: msgTranslate(\r\n      data?.core_Person_Instance_Status?.core_Status_Properties?.ar_Name,\r\n      data?.core_Person_Instance_Status?.core_Status_Properties?.ar_Name),\r\n\r\n    org_name: msgTranslate(data?.positions?.core_Org?.ar_Name, data?.positions?.core_Org?.en_Name),\r\n\r\n    org_from_date: HelpersFunctions.mapDate(data?.positions?.orgFromDate),\r\n\r\n    job_name: msgTranslate(data?.positions?.core_Job_Title?.ar_Name, data?.positions?.core_Job_Title?.en_Name),\r\n\r\n    time_in_position:\r\n      data?.positions?.time_In_Position ?\r\n        `${data?.positions?.time_In_Position?.years} years, ${data?.positions?.time_In_Position?.months} months, ${data?.positions?.time_In_Position?.days} days` :\r\n        \"---\",\r\n\r\n    time_in_company: data?.time_In_Company ?\r\n      `${data?.time_In_Company?.years} years, ${data?.time_In_Company?.months} months, ${data?.time_In_Company?.days} days` :\r\n      \"---\",\r\n\r\n    contract_name: msgTranslate(data?.core_Contract?.contracT_NO),\r\n\r\n    contract_duration: data?.core_Contract ? `${HelpersFunctions.mapDate(data?.core_Contract?.starT_DATE)}, ${HelpersFunctions.mapDate(data?.core_Contract?.enD_DATE)}` : \"---\",\r\n    policies: data.policies\r\n  };\r\n}\r\n","import {\r\n  HelpersFunctions,\r\n  msgTranslate,\r\n} from \"app/shared/resources/helpers-functions\";\r\nimport { IEmployeeMaritalModel } from \"../models/emp-personal-info/marital-status\";\r\nimport { IEmployeeMilitaryModel } from \"../models/emp-personal-info/military-status\";\r\nimport { IEmployeeDependantModel } from \"../models/emp-personal-info/dependants\";\r\nimport {\r\n  IEmployeeDocumentDataModel,\r\n  IEmployeeDocumentModel,\r\n} from \"../models/emp-personal-info/employee-documents\";\r\n\r\nexport function employeeDependentToMap(\r\n  maritalStatus: IEmployeeDependantModel[]\r\n): IEmployeeDependantModel[] {\r\n  return maritalStatus.map((dependent) => {\r\n    return <IEmployeeDependantModel>{\r\n      ...dependent,\r\n      originalBirthDateFormat: dependent.birthDate,\r\n      dependentName: dependent.flower_Name,\r\n      birthDate: HelpersFunctions.mapDate(dependent.birthDate),\r\n      relationship: msgTranslate(\r\n        dependent.corE_Family_Relation?.ar_Name,\r\n        dependent.corE_Family_Relation?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function employeeMaritalStatusToMap(\r\n  maritalStatus: IEmployeeMaritalModel[]\r\n): IEmployeeMaritalModel[] {\r\n  return maritalStatus.map((status) => {\r\n    return <IEmployeeMaritalModel>{\r\n      ...status,\r\n      originalDateFormat: status.statusDate,\r\n      statusDate: HelpersFunctions.mapDate(status.statusDate),\r\n      maritalStatus: msgTranslate(\r\n        status.comm_Marital_Status?.ar_Name,\r\n        status.comm_Marital_Status?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function employeeMilitaryStatusToMap(\r\n  militaryStatus: IEmployeeMilitaryModel[]\r\n): IEmployeeMilitaryModel[] {\r\n  return militaryStatus.map((military) => {\r\n    return <IEmployeeMilitaryModel>{\r\n      ...military,\r\n      status: msgTranslate(\r\n        military.comm_Military_Status?.ar_Name,\r\n        military.comm_Military_Status?.en_Name\r\n      ),\r\n      grade: msgTranslate(\r\n        military.comm_Military_Grade?.ar_Name,\r\n        military.comm_Military_Grade?.en_Name\r\n      ),\r\n      statusDate: HelpersFunctions.mapDate(military.statusDate),\r\n      endDate: HelpersFunctions.mapDate(military.endDate),\r\n    };\r\n  });\r\n}\r\n\r\nexport function employeePersonalDocumentToMap(\r\n  data: IEmployeeDocumentModel[]\r\n): IEmployeeDocumentDataModel[] {\r\n  return data.map((doc) => {\r\n    return <IEmployeeDocumentDataModel>{\r\n      ...doc.employeeData,\r\n      documentName:\r\n        doc.employeeData?.core_Personal_Identity_Type?.identity_TypeTital,\r\n      originalIssuingDate: doc.employeeData?.dateof_issue,\r\n      originalExpirationDate: doc.employeeData?.expire_Date,\r\n      dateof_issue: HelpersFunctions.mapDate(doc.employeeData?.dateof_issue),\r\n      expire_Date: HelpersFunctions.mapDate(doc.employeeData?.expire_Date),\r\n      attachment_En_Name: doc.attachment_En_Name,\r\n      attachmentID: doc.attachmentID,\r\n      attachment: doc.attachmentFilePath ? \"/\" + doc.attachmentFilePath : \"\",\r\n    };\r\n  });\r\n}\r\n","import { msgTranslate } from \"app/shared/resources/helpers-functions\";\r\nimport { IEmployeeActivationModel } from \"../models/employees-activation\";\r\n\r\nexport function empActivationDisplay(\r\n  data: IEmployeeActivationModel[]\r\n): IEmployeeActivationModel[] {\r\n  return data.map((ele) => {\r\n    return <IEmployeeActivationModel>{\r\n      ...ele,\r\n      employee: msgTranslate(\r\n        ele.core_Person?.ar_Name,\r\n        ele.core_Person?.en_Name\r\n      ),\r\n      job: msgTranslate(\r\n        ele.core_Person_Instance_Job_Title[0]?.core_Job_Title?.ar_Name,\r\n        ele.core_Person_Instance_Job_Title[0]?.core_Job_Title?.en_Name\r\n      ),\r\n    };\r\n  });\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { pathMatch } from \"app/shared/enums/route-path-match.enum\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\nimport { AddEmployeeComponent } from \"./components/employees/add-employee/add-employee.component\";\r\nimport { EmployeesIndexComponent } from \"./components/employees/employees-index/employees-index.component\";\r\nimport { AssignPlanComponent } from \"./components/employees/assign-plan/assign-plan.component\";\r\nimport { EmployeesActivationComponent } from \"./components/employees-activation/employees-activation.component\";\r\nimport { CheckIsViewAllowedGuard } from \"app/shared/Guards/check-is-allowd.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"employees\",\r\n    data: {view: ViewsManager.employees},\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: pathMatch.full,\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: EmployeesIndexComponent,\r\n        data: {view: ViewsManager.employees_index},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"add\",\r\n        component: AddEmployeeComponent,\r\n        data: {view: ViewsManager.employee_profile},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"edit/:employeeId\",\r\n        component: AddEmployeeComponent,\r\n        data: {view: ViewsManager.employee_profile},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n      {\r\n        path: \"assign-plan\",\r\n        component: AssignPlanComponent,\r\n        data: {view: ViewsManager.assign_plan},\r\n        canActivate: [CheckIsViewAllowedGuard],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"employees-activation\",\r\n    component: EmployeesActivationComponent,\r\n    data: {view: ViewsManager.employees_activation},\r\n    canActivate: [CheckIsViewAllowedGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PersonnelSetupRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { PersonnelSetupRoutingModule } from \"./personnel-setup-routing.module\";\r\nimport { EmployeesIndexComponent } from \"./components/employees/employees-index/employees-index.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { AddEmployeeComponent } from \"./components/employees/add-employee/add-employee.component\";\r\nimport {\r\n  EmployeeGeneralInfoDialogComponent\r\n} from \"./components/employees/employee-general-info/emp-general-info-dialog/emp-general-info-dialog.component\";\r\nimport {\r\n  EmployeeGeneralInfoCardComponent\r\n} from \"./components/employees/employee-general-info/emp-general-info-card/emp-general-info-card.component\";\r\nimport { CardHeaderComponent } from \"./components/employees/card-shared-components/card-header/card-header.component\";\r\nimport { CardRowItemComponent } from \"./components/employees/card-shared-components/card-row-item/card-row-item.component\";\r\nimport { EmployeeCareerCoreComponent } from \"./components/employees/employee-career/emp-career-core/emp-career-core.component\";\r\nimport {\r\n  EmployeeWorkExperienceDialogComponent\r\n} from \"./components/employees/employee-career/emp-work-experience/emp-work-experience-dialog/employee-work-experience-dialog.component\";\r\nimport {\r\n  EmpGeneralInfoCoreComponent\r\n} from \"./components/employees/employee-general-info/emp-general-info-core/emp-general-info-core.component\";\r\nimport {\r\n  EmployeePersonalInfoCoreComponent\r\n} from \"./components/employees/personal-information/emp-personal-info-core/empl-personal-info-core.component\";\r\nimport {\r\n  EmployeeAddressDialogComponent\r\n} from \"./components/employees/personal-information/old-emp-contact-and-address/emp-address-section/emp-address-section.component\";\r\nimport {\r\n  EmployeeContactAndAddressCardComponent\r\n} from \"./components/employees/personal-information/old-emp-contact-and-address/emp-contact-and-address-card/emp-contact-and-address-card.component\";\r\nimport {\r\n  EmployeeContactAndAddressDialogComponent\r\n} from \"./components/employees/personal-information/old-emp-contact-and-address/emp-contact-and-address-dialog/emp-contact-and-address-dialog.component\";\r\nimport {\r\n  EmployeeContactDialogComponent\r\n} from \"./components/employees/personal-information/old-emp-contact-and-address/emp-contact-section/emp-contact-section.component\";\r\nimport {\r\n  EmployeeDependantsCardComponent\r\n} from \"./components/employees/personal-information/emp-dependants/emp-dependants-card/emp-dependants-card.component\";\r\nimport {\r\n  EmployeeDependantsDialogComponent\r\n} from \"./components/employees/personal-information/emp-dependants/emp-dependants-dialog/emp-dependants-dialog.component\";\r\nimport {\r\n  EmployeeDocumentsCardComponent\r\n} from \"./components/employees/personal-information/emp-documents/emp-documents-card/emp-documents-card.component\";\r\nimport {\r\n  EmployeeDocumentsDialogComponent\r\n} from \"./components/employees/personal-information/emp-documents/emp-documents-dialog/emp-documents-dialog.component\";\r\nimport {\r\n  EmployeeMilitaryDataCardComponent\r\n} from \"./components/employees/personal-information/emp-military-data/emp-military-data-card/emp-military-data-card.component\";\r\nimport {\r\n  EmployeeMilitaryDataDialogComponent\r\n} from \"./components/employees/personal-information/emp-military-data/emp-military-data-dialog/emp-military-data-dialog.component\";\r\nimport {\r\n  EmployeePersonalInfoCardComponent\r\n} from \"./components/employees/personal-information/emp-personal-info/emp-personal-info-card/emp-personal-info-card.component\";\r\nimport {\r\n  EmployeePersonalInfoDialogComponent\r\n} from \"./components/employees/personal-information/emp-personal-info/emp-personal-info-dialog/emp-personal-info-dialog.component\";\r\nimport {\r\n  EmployeeEducationCardComponent\r\n} from \"./components/employees/employee-career/emp-education/emp-education-card/emp-education-card.component\";\r\nimport {\r\n  EmployeeEducationDialogComponent\r\n} from \"./components/employees/employee-career/emp-education/emp-education-dialog/emp-education-dialog.component\";\r\nimport {\r\n  EmployeeWorkExperienceCardComponent\r\n} from \"./components/employees/employee-career/emp-work-experience/emp-work-experience-card/emp-work-experience-card.component\";\r\nimport {\r\n  EmployementInformationComponent\r\n} from \"./components/employees/employement-information/employement-info-core/employement-info-core.component\";\r\nimport {\r\n  EmpJobInfoCardComponent\r\n} from \"./components/employees/employement-information/emp-job-info/emp-job-info-card/emp-job-info-card.component\";\r\nimport {\r\n  EmpJobInfoDialogComponent\r\n} from \"./components/employees/employement-information/emp-job-info/emp-job-info-dialog/emp-job-info-dialog.component\";\r\nimport {\r\n  EmpWorkScheduleCardComponent\r\n} from \"./components/employees/employement-information/emp-work-schedule/emp-work-schedule-card/emp-work-schedule-card.component\";\r\nimport {\r\n  EmpWorkScheduleDialogComponent\r\n} from \"./components/employees/employement-information/emp-work-schedule/emp-work-schedule-dialog/emp-work-schedule-dialog.component\";\r\nimport {\r\n  EmpHiringDocumentsCardComponent\r\n} from \"./components/employees/employement-information/emp-hiring-documents/emp-hiring-documents-card/emp-hiring-documents-card.component\";\r\nimport {\r\n  EmpHiringDocumentsDialogComponent\r\n} from \"./components/employees/employement-information/emp-hiring-documents/emp-hiring-documents-dialog/emp-hiring-documents-dialog.component\";\r\nimport {\r\n  EmpLocationCardComponent\r\n} from \"./components/employees/employement-information/emp-location/emp-location-card/emp-location-card.component\";\r\nimport {\r\n  EmpLocationDialogComponent\r\n} from \"./components/employees/employement-information/emp-location/emp-location-dialog/emp-location-dialog.component\";\r\nimport {\r\n  EmpCustodiesCardComponent\r\n} from \"./components/employees/employement-information/emp-custodies/emp-custodies-card/emp-custodies-card.component\";\r\nimport {\r\n  EmpCustodiesDialogComponent\r\n} from \"./components/employees/employement-information/emp-custodies/emp-custodies-dialog/emp-custodies-dialog.component\";\r\nimport {\r\n  EmpSocialInsuranceCardComponent\r\n} from \"./components/employees/employement-information/emp-social-insurance/emp-social-insurance-card/emp-social-insurance-card.component\";\r\n\r\nimport {\r\n  EmpMedicalInsuranceCardComponent\r\n} from \"./components/employees/employement-information/emp-medical-insurance/emp-medical-insurance-card/emp-medical-insurance-card.component\";\r\nimport {\r\n  EmpMedicalInsuranceDialogComponent\r\n} from \"./components/employees/employement-information/emp-medical-insurance/emp-medical-insurance-dialog/emp-medical-insurance-dialog.component\";\r\nimport {\r\n  EmpJobDataDialogComponent\r\n} from \"./components/employees/employement-information/emp-job-info/emp-job-section/emp-job-section.component\";\r\nimport {\r\n  EmpContractDetailsDialogComponent\r\n} from \"./components/employees/employement-information/emp-job-info/emp-contract-section/emp-contract-section.component\";\r\nimport {\r\n  EmpVacationCardComponent\r\n} from \"./components/employees/employee-balances/emp-vacation/emp-vacation-card/emp-vacation-card.component\";\r\nimport {\r\n  EmpVacationDialogComponent\r\n} from \"./components/employees/employee-balances/emp-vacation/emp-vacation-dialog/emp-vacation-dialog.component\";\r\nimport {\r\n  EmpPermissionCardComponent\r\n} from \"./components/employees/employee-balances/emp-permission/emp-permission-card/emp-permission-card.component\";\r\nimport {\r\n  EmployeeBalancesCoreComponent\r\n} from \"./components/employees/employee-balances/employee-balances-core/employee-balances-core.component\";\r\nimport {\r\n  EmpPermissionDialogComponent\r\n} from \"./components/employees/employee-balances/emp-permission/emp-permission-dialog/emp-permission-dialog.component\";\r\nimport {\r\n  EmpSapIntegrationCoreComponent\r\n} from \"./components/employees/sap-integration/emp-sap-integration-core/emp-sap-integration-core.component\";\r\nimport {\r\n  EmpPaymentsInfoCoreComponent\r\n} from \"./components/employees/payments-information/emp-payments-info-core/emp-payments-info-core.component\";\r\nimport { EmpSapB1CardComponent } from \"./components/employees/sap-integration/emp-sap-b1/emp-sap-b1-card/emp-sap-b1-card.component\";\r\nimport { EmpSapB1DialogComponent } from \"./components/employees/sap-integration/emp-sap-b1/emp-sap-b1-dialog/emp-sap-b1-dialog.component\";\r\nimport { EmpS4HanaCardComponent } from \"./components/employees/sap-integration/emp-s4-hana/emp-s4-hana-card/emp-s4-hana-card.component\";\r\nimport {\r\n  EmpS4HanaDialogComponent\r\n} from \"./components/employees/sap-integration/emp-s4-hana/emp-s4-hana-dialog/emp-s4-hana-dialog.component\";\r\nimport {\r\n  EmpPayrollDataCardComponent\r\n} from \"./components/employees/payments-information/emp-payroll-data/emp-payroll-data-card/emp-payroll-data-card.component\";\r\nimport {\r\n  EmpPayrollDataDialogComponent\r\n} from \"./components/employees/payments-information/emp-payroll-data/emp-payroll-data-dialog/emp-payroll-data-dialog.component\";\r\nimport {\r\n  EmpBankingAccountDataCardComponent\r\n} from \"./components/employees/payments-information/emp-banking-account-data/emp-banking-account-data-card/emp-banking-account-data-card.component\";\r\nimport {\r\n  EmpBankingAccountDataDialogComponent\r\n} from \"./components/employees/payments-information/emp-banking-account-data/emp-banking-account-data-dialog/emp-banking-account-data-dialog.component\";\r\nimport {\r\n  EmpGeneralInfoFormComponent\r\n} from \"./components/employees/employee-general-info/emp-general-info-form/emp-general-info-form.component\";\r\nimport {\r\n  EmpMedicalAndBloodTypeDialogComponent\r\n} from \"./components/employees/employement-information/emp-medical-insurance/emp-blood-type-section/emp-blood-type-section.component\";\r\nimport {\r\n  EmpSocialInsuranceDialogComponent\r\n} from \"app/personnel-setup/components/employees/employement-information/emp-social-insurance/emp-insurance-office-dialog/emp-social-insurance-dialog.component\";\r\nimport { OrgManagementModule } from \"app/org-management/org-management.module\";\r\nimport {\r\n  EmpContractAttachmentSectionComponent\r\n} from \"./components/employees/employement-information/emp-job-info/emp-contract-attachment-section/emp-contract-attachment-section.component\";\r\nimport { AssignPlanComponent } from \"./components/employees/assign-plan/assign-plan.component\";\r\nimport { EmployeesActivationComponent } from \"./components/employees-activation/employees-activation.component\";\r\nimport { EmpSupervisorSectionComponent } from \"./components/employees/employement-information/emp-job-info/emp-supervisor-section/emp-supervisor-section.component\";\r\nimport { AssignAsOrgManagerDialogComponent } from \"./components/employees/employement-information/emp-job-info/assign-as-org-manager-dialog/assign-as-org-manager-dialog.component\";\r\nimport { CloseJobDialogComponent } from './components/employees/employement-information/emp-job-info/close-job-dialog/close-job-dialog.component';\r\nimport { EmpDependantsTableComponent } from './components/employees/personal-information/emp-dependants/emp-dependants-table/emp-dependants-table.component';\r\nimport { EmpAddressCardComponent } from \"./components/employees/personal-information/emp-address/emp-address-card/emp-address-card.component\";\r\nimport { EmpAddressDialogComponent } from \"./components/employees/personal-information/emp-address/emp-address-dialog/emp-address-dialog.component\";\r\nimport { EmpAddressTableComponent } from \"./components/employees/personal-information/emp-address/emp-address-table/emp-address-table.component\";\r\nimport { EmpContactCardComponent } from \"./components/employees/personal-information/emp-contact/emp-contact-card/emp-contact-card.component\";\r\nimport { EmpContactDialogComponent } from \"./components/employees/personal-information/emp-contact/emp-contact-dialog/emp-contact-dialog.component\";\r\nimport { EmpContactTableComponent } from \"./components/employees/personal-information/emp-contact/emp-contact-table/emp-contact-table.component\";\r\nimport { EmpMaritalStatusTableComponent } from './components/employees/personal-information/emp-personal-info/emp-marital-status-table/emp-marital-status-table.component';\r\nimport { SeeMoreBtnComponent } from \"./components/employees/card-shared-components/see-more-btn/see-more-btn.component\";\r\nimport { EmpMilitaryTableComponent } from './components/employees/personal-information/emp-military-data/emp-military-table/emp-military-table.component';\r\nimport { EmpDocumentsTableComponent } from './components/employees/personal-information/emp-documents/emp-documents-table/emp-documents-table.component';\r\nimport { EmpEducationTableComponent } from \"./components/employees/employee-career/emp-education/emp-education-table/emp-education-table.component\";\r\nimport { EmpWorkExperienceTableComponent } from \"./components/employees/employee-career/emp-work-experience/emp-work-experience-table/emp-work-experience-table.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmployeesIndexComponent,\r\n    AddEmployeeComponent,\r\n    EmployeeGeneralInfoDialogComponent,\r\n    EmployeeGeneralInfoCardComponent,\r\n    CardHeaderComponent,\r\n    CardRowItemComponent,\r\n    EmployeePersonalInfoCoreComponent,\r\n    EmployeePersonalInfoCardComponent,\r\n    EmployeePersonalInfoDialogComponent,\r\n    EmployeeContactAndAddressCardComponent,\r\n    EmployeeContactAndAddressDialogComponent,\r\n    EmployeeContactDialogComponent,\r\n    EmpAddressCardComponent,\r\n    EmpAddressDialogComponent,\r\n    EmpAddressTableComponent,\r\n    EmpContactCardComponent,\r\n    EmpContactDialogComponent,\r\n    EmpContactTableComponent,\r\n    EmployeeAddressDialogComponent,\r\n    EmployeeDependantsCardComponent,\r\n    EmployeeDependantsDialogComponent,\r\n    EmployeeMilitaryDataCardComponent,\r\n    EmployeeMilitaryDataDialogComponent,\r\n    EmployeeDocumentsCardComponent,\r\n    EmployeeDocumentsDialogComponent,\r\n    EmployeeCareerCoreComponent,\r\n    EmployeeEducationCardComponent,\r\n    EmployeeEducationDialogComponent,\r\n    EmployeeWorkExperienceCardComponent,\r\n    EmployeeWorkExperienceDialogComponent,\r\n    EmpGeneralInfoCoreComponent,\r\n    EmployementInformationComponent,\r\n    EmpJobInfoCardComponent,\r\n    EmpJobInfoDialogComponent,\r\n    EmpWorkScheduleCardComponent,\r\n    EmpWorkScheduleDialogComponent,\r\n    EmpHiringDocumentsCardComponent,\r\n    EmpHiringDocumentsDialogComponent,\r\n    EmpLocationCardComponent,\r\n    EmpLocationDialogComponent,\r\n    EmpCustodiesCardComponent,\r\n    EmpCustodiesDialogComponent,\r\n    EmpSocialInsuranceCardComponent,\r\n    EmpSocialInsuranceDialogComponent,\r\n    EmpMedicalInsuranceCardComponent,\r\n    EmpMedicalInsuranceDialogComponent,\r\n    EmpJobDataDialogComponent,\r\n    EmpContractDetailsDialogComponent,\r\n    EmployeeBalancesCoreComponent,\r\n    EmpVacationCardComponent,\r\n    EmpVacationDialogComponent,\r\n    EmpPermissionCardComponent,\r\n    EmpPermissionDialogComponent,\r\n    EmpSapIntegrationCoreComponent,\r\n    EmpPaymentsInfoCoreComponent,\r\n    EmpSapB1CardComponent,\r\n    EmpSapB1DialogComponent,\r\n    EmpS4HanaCardComponent,\r\n    EmpS4HanaDialogComponent,\r\n    EmpPayrollDataCardComponent,\r\n    EmpPayrollDataDialogComponent,\r\n    EmpBankingAccountDataCardComponent,\r\n    EmpBankingAccountDataDialogComponent,\r\n    EmpGeneralInfoFormComponent,\r\n    EmpMedicalAndBloodTypeDialogComponent,\r\n    EmpSocialInsuranceDialogComponent,\r\n    EmpContractAttachmentSectionComponent,\r\n    AssignPlanComponent,\r\n    EmployeesActivationComponent,\r\n    EmpSupervisorSectionComponent,\r\n    AssignAsOrgManagerDialogComponent,\r\n    CloseJobDialogComponent,\r\n    EmpDependantsTableComponent,\r\n    EmpMaritalStatusTableComponent,\r\n    SeeMoreBtnComponent,\r\n    EmpMilitaryTableComponent,\r\n    EmpDocumentsTableComponent,\r\n    EmpEducationTableComponent,\r\n    EmpWorkExperienceTableComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PersonnelSetupRoutingModule,\r\n    SharedModule,\r\n    OrgManagementModule,\r\n  ],\r\n})\r\nexport class PersonnelSetupModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IEmployeeActivationModel } from \"../models/employees-activation\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeesActivationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeActivationModel[]>>(\r\n      \"Personnel/EmployeeActivation/GetNonActivationEmployeesList\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  activate(id: number) {\r\n    return this.post<IResponse<IEmployeeActivationModel[]>>(\r\n      \"Personnel/EmployeeActivation/Activate\",\r\n      null,\r\n      {\r\n        params: { id: id },\r\n      }\r\n    );\r\n  }\r\n\r\n  exportExcel() {\r\n    // return this.getAll();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n\tIEmpWorkExperienceModel,\r\n\tIEmpWorkExperienceRequest,\r\n} from \"app/personnel-setup/models/employee-career/emp-work-experience\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class EmployeeWorkExperienceService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: IEmpWorkExperienceRequest) {\r\n\t\treturn this.post<IResponse<IEmpWorkExperienceModel>>(\r\n\t\t\t\"Personnel/Employees/Create_EmployeeWorkExperience\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tupdate(data: IEmpWorkExperienceRequest) {\r\n\t\treturn this.post<IResponse<IEmpWorkExperienceModel>>(\r\n\t\t\t\"Personnel/Employees/Edit_EmployeeWorkExperience\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tgetList(Person_Instance_ID: number, params: IPageParams) {\r\n\t\treturn this.get<IResponse<IEmpWorkExperienceModel[]>>(\r\n\t\t\t\"Personnel/Employees/GetList_EmployeeWorkExperience\",\r\n\t\t\t{\r\n\t\t\t\tparams: {\r\n\t\t\t\t\t...params,\r\n\t\t\t\t\t$filter: `Person_Instance_ID  eq ${Person_Instance_ID}`,\r\n\t\t\t\t\t$expand: `${db.Core_Person_Instance}/${db.Core_Person}`,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgetAll(Person_Instance_ID: number) {\r\n\t\treturn this.get<IResponse<IEmpWorkExperienceModel[]>>(\r\n\t\t\t\"Personnel/Employees/GetAll_EmployeeWorkExperience\",\r\n\t\t\t{\r\n\t\t\t\tparams: {\r\n\t\t\t\t\t$filter: `Person_Instance_ID  eq ${Person_Instance_ID}`,\r\n\t\t\t\t\t$expand: `${db.Core_Person_Instance}/${db.Core_Person}`,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tDelete(Id: number) {\r\n\t\treturn this.delete<IResponse>(\"Personnel/Employees/Delete_EmployeeWorkExperience\", {\r\n\t\t\tparams: { ID: Id },\r\n\t\t});\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IEmpPermissionModel } from \"app/personnel-setup/models/emp-balances/permission\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeePermissionService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // create(data: IEmpPermissionRequest) {\r\n  //   return this.post<IResponse<IEmpPermissionModel>>(\r\n  //     \"Personnel/Employees/Create_Permission\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  // update(data: IEmpPermissionRequest) {\r\n  //   return this.post<IResponse<IEmpPermissionModel>>(\r\n  //     \"Personnel/Employees/Edit_Permission\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  getList(employeeInstanceId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmpPermissionModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeePermission\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          person_instance_id: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeInstanceId: number) {\r\n    return this.get<IResponse<IEmpPermissionModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeePermission\",\r\n      {\r\n        params: {\r\n          person_instance_id: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  // Delete(Id: number) {\r\n  //   return this.delete<IResponse>(\"Personnel/Employees/Delete_Permission\", {\r\n  //     params: { Id: Id },\r\n  //   });\r\n  // }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpVacationModel,\r\n  IEmpVacationRequest,\r\n} from \"app/personnel-setup/models/emp-balances/vacation\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeVacationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  update(data: IEmpVacationRequest) {\r\n    return this.post<IResponse<IEmpVacationModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeVacationBalance\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeInstanceId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmpVacationModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeVacationBalance\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          PersonInstanceID: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeInstanceId: number) {\r\n    return this.get<IResponse<IEmpVacationModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeVacationBalance\",\r\n      {\r\n        params: {\r\n          person_instance_id: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(data: IEmpVacationRequest) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeVacationBalance\",\r\n      {\r\n        body: data,\r\n      }\r\n    );\r\n  }\r\n\r\n  getCard(employeeInstanceId: number) {\r\n    return this.get<IResponse<IEmpVacationModel[]>>(\r\n      \"Personnel/Employees/GetAllCard_LastVactionBalance\",\r\n      {\r\n        params: {\r\n          person_instance_id: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  regenerateBalance(employeeInstanceId: number) {\r\n    return this.post<IResponse>(\"Personnel/Employees/RegenerateBalance\", null, {\r\n      params: {\r\n        person_instance_id: employeeInstanceId,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpAssignManagerDeleteRequest,\r\n  IEmpAssignManagerModel,\r\n  IEmpAssignManagerRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/assign-as-org-manager\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeAssignAsOrgManagerService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmpAssignManagerRequest) {\r\n    return this.post<IResponse<IEmpAssignManagerModel>>(\r\n      \"Personnel/Employees/Create_EmployeeManger\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(\r\n    // employeeInstanceId: number,\r\n    orgId: number,\r\n    params: IPageParams\r\n  ) {\r\n    return this.get<IResponseList<IEmpAssignManagerModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeManger\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          // prtid: employeeInstanceId,\r\n          orgid: orgId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeInstanceId: number, orgId: number) {\r\n    return this.get<IResponse<IEmpAssignManagerModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeManger\",\r\n      {\r\n        params: {\r\n          prtid: employeeInstanceId,\r\n          orgid: orgId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmpAssignManagerDeleteRequest) {\r\n    return this.delete<IResponse>(\"Personnel/Employees/Delete_EmployeeManger\", {\r\n      params: params,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IEmpContractDeleteRequest } from \"app/personnel-setup/models/emp-employment-info/contract\";\r\nimport { IFileApiModel } from \"app/shared/interfaces/files\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeContractAttachmentService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: FormData) {\r\n    return this.post<IResponse<IFileApiModel>>(\r\n      \"Personnel/Employees/Create_EmployeeContract_Attachments\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll(contractId: number) {\r\n    return this.get<IResponse<IFileApiModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeContract_Attachments\",\r\n      {\r\n        params: {\r\n          Contract_ID: contractId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmpContractDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeContract_Attachments\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IContractModel,\r\n  IEmpContractDetailsRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/contract\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeContractDetailsService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmpContractDetailsRequest) {\r\n    return this.post<IResponse<IContractModel>>(\r\n      \"Personnel/Employees/Create_EmployeeContract\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmpContractDetailsRequest) {\r\n    return this.post<IResponse<IContractModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeContract\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IContractModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeContract\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_ID eq ${employeeId}`,\r\n          $expand: db.core_Contract_Type,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IContractModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeContract\",\r\n      {\r\n        params: {\r\n          $filter: `Person_ID eq ${employeeId}`,\r\n          $expand: db.core_Contract_Type,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeContract\",\r\n      {\r\n        params: { ID: Id },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpLocationDeleteRequest,\r\n  IEmpLocationEditRequest,\r\n  IEmpLocationModel,\r\n  IEmpLocationRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/emp-location\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeLocationService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmpLocationRequest) {\r\n    return this.post<IResponse<IEmpLocationModel>>(\r\n      \"Personnel/Employees/Create_EmployeeLocation\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmpLocationEditRequest) {\r\n    return this.post<IResponse<IEmpLocationModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeLocation\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(personInstancId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmpLocationModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeLocation\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_Instance_ID eq ${personInstancId}`,\r\n          $expand: db.Core_Location,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(personInstancId: number) {\r\n    return this.get<IResponse<IEmpLocationModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeLocation\",\r\n      {\r\n        params: {\r\n          $filter: `Person_Instance_ID eq ${personInstancId}`,\r\n          $expand: db.Core_Location,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  close(params: IEmpLocationDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Close_EmployeeLocation\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmpLocationDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeLocation\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpMedicalInsuranceModel,\r\n  IEmpMedicalInsuranceRequest,\r\n} from \"app/personnel-setup/models/employee-employment-info\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeMedicalInsuranceService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmpMedicalInsuranceRequest) {\r\n    return this.post<IResponse<IEmpMedicalInsuranceModel>>(\r\n      \"Personnel/Employees/Create_dependant\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmpMedicalInsuranceRequest) {\r\n    return this.post<IResponse<IEmpMedicalInsuranceModel>>(\r\n      \"Personnel/Employees/Edit_dependant\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllByEmployeeId(employeeId: number) {\r\n    return this.get<IResponse<IEmpMedicalInsuranceModel[]>>(\r\n      \"Personnel/Employees/GetAll_dependant\",\r\n      {\r\n        params: {\r\n          $filter: `id eq ${employeeId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"Personnel/Employees/Delete_dependant\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport {\r\n  IEmpSocialInsuranceDelete,\r\n  IEmpSocialInsuranceModel,\r\n  IEmpSocialInsuranceRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/social-insurance\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeSocialInsuranceService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmpSocialInsuranceRequest) {\r\n    return this.post<IResponse<IEmpSocialInsuranceModel>>(\r\n      \"Personnel/Employees/Create_EmployeeInsurance\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmpSocialInsuranceRequest) {\r\n    return this.post<IResponse<IEmpSocialInsuranceModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeInsurance\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmpSocialInsuranceModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeInsurance\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_ID  eq ${employeeId}`,\r\n          $expand: db.core_Insurance_Office,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmpSocialInsuranceModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeInsurance\",\r\n      {\r\n        params: {\r\n          $filter: `Person_ID eq ${employeeId}`,\r\n          $expand: db.core_Insurance_Office,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmpSocialInsuranceDelete) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeInsurance\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmpSupervisorDeleteRequest,\r\n  IEmpSupervisorModel,\r\n  IEmpSupervisorRequest,\r\n} from \"app/personnel-setup/models/emp-employment-info/supervisor\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeSupervisorService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmpSupervisorRequest) {\r\n    return this.post<IResponse<IEmpSupervisorModel>>(\r\n      \"Personnel/Employees/Create_EmployeeSupervisor\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeInstanceId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmpSupervisorModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeSupervisor\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          prtid: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeInstanceId: number) {\r\n    return this.get<IResponse<IEmpSupervisorModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeSupervisor\",\r\n      {\r\n        params: {\r\n          prtid: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmpSupervisorDeleteRequest) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeSupervisor\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEditEmployeeWorkScheduleRequest,\r\n  IEmpWorkScheduleCardModel,\r\n  IEmpWorkScheduleDeleteParams,\r\n  IEmployeeWorkScheduleModel,\r\n  IEmployeeWorkScheduleRequest,\r\n  IHoursSummary,\r\n  IVacationSummary,\r\n} from \"app/personnel-setup/models/emp-employment-info/work-schedule\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeWorkScheduleService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeWorkScheduleRequest) {\r\n    return this.post<IResponse<IEmployeeWorkScheduleModel>>(\r\n      \"Personnel/Employees/Create_EmployeeAttendencePlan\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEditEmployeeWorkScheduleRequest) {\r\n    return this.post<IResponse<IEmployeeWorkScheduleModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeAttendencePlan\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeInstanceId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeWorkScheduleModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeAttendencePlan\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_Instance_ID eq ${employeeInstanceId}`,\r\n          $expand: db.att_Plan,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeInstanceId: number) {\r\n    return this.get<IResponse<IEmployeeWorkScheduleModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeAttendencePlan\",\r\n      {\r\n        params: {\r\n          $filter: `Person_Instance_ID eq ${employeeInstanceId}`,\r\n          $expand: db.att_Plan,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmpWorkScheduleDeleteParams) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeAttendencePlan\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n  getCard(employeeInstanceId: number) {\r\n    return this.get<IResponse<IEmpWorkScheduleCardModel>>(\r\n      \"Personnel/Employees/Get_AttendancePlanCard\",\r\n      {\r\n        params: {\r\n          Person_Instance_ID: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAnnualCasualDashboard(employeeInstanceId: number) {\r\n    return this.get<IResponse<IVacationSummary>>(\r\n      \"Dashboards/VacationSummary/GetAnnualCasualSummery\",\r\n      {\r\n        params: {\r\n          Person_Instance_ID: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getSickLeaveDashboard(employeeInstanceId: number) {\r\n    return this.get<IResponse<IVacationSummary>>(\r\n      \"Dashboards/VacationSummary/GetSickLeaveSummery\",\r\n      {\r\n        params: {\r\n          Person_Instance_ID: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getWorkingHoursDashboard(employeeInstanceId: number) {\r\n    return this.get<IResponse<IHoursSummary>>(\r\n      \"Dashboards/WorkingHoursSummary/GetCurrentMonthWorkingHoursSummary\",\r\n      {\r\n        params: {\r\n          Person_Instance_ID: employeeInstanceId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEditEmployeeBankingAccountRequest,\r\n  IEmployeeBankingAccountDeleteParams,\r\n  IEmployeeBankingAccountModel,\r\n  IEmployeeBankingAccountRequest,\r\n} from \"app/personnel-setup/models/payments-information/emp-bank-account\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeBankingAccountService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeBankingAccountRequest) {\r\n    return this.post<IResponse<IEmployeeBankingAccountModel>>(\r\n      \"Personnel/Employees/Create_EmployeeBank\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEditEmployeeBankingAccountRequest) {\r\n    return this.post<IResponse<IEmployeeBankingAccountModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeBank\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeInstanceId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeBankingAccountModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeBank\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_Instance_ID  eq ${employeeInstanceId}`,\r\n          $expand: db.comm_Bank,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeInstanceId: number) {\r\n    return this.get<IResponse<IEmployeeBankingAccountModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeBank\",\r\n      {\r\n        params: {\r\n          $filter: `Person_Instance_ID  eq ${employeeInstanceId}`,\r\n          $expand: db.comm_Bank,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmployeeBankingAccountDeleteParams) {\r\n    return this.delete<IResponse>(\"Personnel/Employees/Delete_EmployeeBank\", {\r\n      params: params,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IEmployeePayrollModel } from \"app/personnel-setup/models/payments-information/emp-payroll-data\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeePayrollService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // create(data: IEmployeePayrollRequest) {\r\n  //   return this.post<IResponse<IEmployeePayrollModel>>(\r\n  //     \"Personnel/Employees/Create_address\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  // update(data: IEmployeePayrollRequest) {\r\n  //   return this.post<IResponse<IEmployeePayrollModel>>(\r\n  //     \"Personnel/Employees/Edit_address\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeePayrollModel>>(\r\n      \"Personnel/Employees/GetAll_EmployeePayment\",\r\n      {\r\n        params: {\r\n          person_id: employeeId,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  // Delete(Id: number) {\r\n  //   return this.delete<IResponse>(\"Personnel/Employees/Delete_address\", {\r\n  //     params: { Id: Id },\r\n  //   });\r\n  // }\r\n\r\n  // getAllPaymentMethods() {\r\n  //   return this.get<IResponse<Idropdown[]>>(\r\n  //     \"Personnel/Employees/getAllPaymentMethods\"\r\n  //   );\r\n  // }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport {\r\n\tIEmployeeAddressRequest,\r\n\tIEmployeeAddressModel,\r\n\tIEmployeeAddressDeleteParams,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class EmployeeAddressService extends AppClientService {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tcreate(data: IEmployeeAddressRequest) {\r\n\t\treturn this.post<IResponse<IEmployeeAddressModel>>(\r\n\t\t\t\"Personnel/Employees/Create_EmployeeAddress\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tupdate(data: IEmployeeAddressRequest) {\r\n\t\treturn this.post<IResponse<IEmployeeAddressModel>>(\r\n\t\t\t\"Personnel/Employees/Edit_EmployeeAddress\",\r\n\t\t\tdata\r\n\t\t);\r\n\t}\r\n\r\n\tGetList(employeeId: number, params: IPageParams) {\r\n\t\treturn this.get<IResponseList<IEmployeeAddressModel[]>>(\r\n\t\t\t\"Personnel/Employees/GetList_EmployeeAddress\",\r\n\t\t\t{\r\n\t\t\t\tparams: {\r\n\t\t\t\t\t...params,\r\n\t\t\t\t\t$filter: `Person_ID eq ${employeeId}`,\r\n\t\t\t\t\t$expand: `${db.comm_Address}.${db.comm_Governorate}.${db.comm_Country}`,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgetAll(employeeId: number) {\r\n\t\treturn this.get<IResponse<IEmployeeAddressModel[]>>(\r\n\t\t\t\"Personnel/Employees/GetAll_EmployeeAddress\",\r\n\t\t\t{\r\n\t\t\t\tparams: {\r\n\t\t\t\t\t$filter: `Person_ID eq ${employeeId}`,\r\n\t\t\t\t\t$expand: `${db.comm_Address}.${db.comm_Governorate}.${db.comm_Country}`,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tDelete(params: IEmployeeAddressDeleteParams) {\r\n\t\treturn this.delete<IResponse>(\"Personnel/Employees/Delete_EmployeeAddress\", {\r\n\t\t\tparams: params,\r\n\t\t});\r\n\t}\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {AppClientService} from \"app/shared/services/app-client.service\";\r\n\r\nimport {IResponse, IResponseList} from \"app/shared/interfaces/responces\";\r\nimport {db} from \"app/shared/resources/database-tabels\";\r\nimport {\r\n  IEmployeeContactRequest,\r\n  IEmployeeContactResponse,\r\n  IEmployeeContactDeleteParams,\r\n} from \"app/personnel-setup/models/emp-personal-info/contact-address\";\r\nimport {IPageParams} from \"app/shared/interfaces/params\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeContactService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeContactRequest) {\r\n    return this.post<IResponse<IEmployeeContactResponse>>(\r\n      \"Personnel/Employees/Create_EmployeeContactType\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmployeeContactRequest) {\r\n    return this.post<IResponse<IEmployeeContactResponse>>(\r\n      \"Personnel/Employees/Edit_EmployeeContactType\",\r\n      data\r\n    );\r\n  }\r\n\r\n\r\n  GetList(employeeId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeContactResponse[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeContactType\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_ID eq ${employeeId}`,\r\n          $expand: `${db.comm_Contact}.${db.comm_Contact_Type},${db.comm_Contact}.${db.comm_Contact_Category}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  GetAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeContactResponse[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeContactType\",\r\n      {\r\n        params: {\r\n          $filter: `Person_ID eq ${employeeId}`,\r\n          $expand: `${db.comm_Contact}.${db.comm_Contact_Type},${db.comm_Contact}.${db.comm_Contact_Category}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmployeeContactDeleteParams) {\r\n    return this.delete<IResponse>(\"Personnel/Employees/Delete_EmployeeContactType\", {\r\n      params: params,\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {IEmployeeDocumentModel,} from 'app/personnel-setup/models/emp-personal-info/employee-documents';\r\nimport {IResponse, IResponseList} from 'app/shared/interfaces/responces';\r\nimport {AppClientService} from 'app/shared/services/app-client.service';\r\nimport {db} from 'app/shared/resources/database-tabels';\r\nimport {IPageParams} from 'app/shared/interfaces/params';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeDocumentsService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: FormData) {\r\n    return this.post<IResponse<IEmployeeDocumentModel>>(\r\n      \"Personnel/Employees/Create_EmployeeIdentityInformation\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: FormData) {\r\n    return this.post<IResponse<IEmployeeDocumentModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeIdentityInformation\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeDocumentModel[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeIdentityInformation\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `PersonID eq ${employeeId}`,\r\n          $expand: db.Core_Personal_Identity_Type,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeDocumentModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeIdentityInformation\",\r\n      {\r\n        params: {\r\n          $filter: `PersonID eq ${employeeId}`,\r\n          $expand: db.Core_Personal_Identity_Type,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeIdentityInformation\",\r\n      {\r\n        params: { Id: Id },\r\n      }\r\n    );\r\n  }\r\n\r\n  // delete by emp_attach id\r\n  DeleteAttachment(Id: number) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeIdentityInformation_Attachment\",\r\n      {\r\n        params: { ID: Id },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEditEmployeeMaritalRequest,\r\n  IEmployeeMaritalDeleteParams,\r\n  IEmployeeMaritalModel,\r\n  IEmployeeMaritalRequest,\r\n} from \"app/personnel-setup/models/emp-personal-info/marital-status\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeMaritalDataService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeMaritalRequest) {\r\n    return this.post<IResponse<IEmployeeMaritalModel>>(\r\n      \"Personnel/Employees/Create_EmployeeMaritalStatus\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEditEmployeeMaritalRequest) {\r\n    return this.post<IResponse<IEmployeeMaritalModel>>(\r\n      \"Personnel/Employees/Edit_EmployeeMaritalStatus\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeMaritalModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeMaritalStatus\",\r\n      {\r\n        params: {\r\n          $expand: db.comm_Marital_Status,\r\n          $filter: `PersonID eq ${employeeId}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmployeeMaritalDeleteParams) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeMaritalStatus\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmployeeMilitaryDeleteParams,\r\n  IEmployeeMilitaryModel,\r\n  IEmployeeMilitaryRequest,\r\n} from \"app/personnel-setup/models/emp-personal-info/military-status\";\r\nimport { IResponse } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeMilitaryDataService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeMilitaryRequest) {\r\n    return this.post<IResponse<IEmployeeMilitaryModel>>(\r\n      \"Personnel/Employees/Create_EmployeeMilitaryStatus\",\r\n      data\r\n    );\r\n  }\r\n\r\n  // update(data: IEmployeeMilitaryRequest) {\r\n  //   return this.post<IResponse<IEmployeeMilitaryModel>>(\r\n  //     \"Personnel/Employees/Edit_EmployeeMilitaryStatus\",\r\n  //     data\r\n  //   );\r\n  // }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeMilitaryModel[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeMilitaryStatus\",\r\n      {\r\n        params: {\r\n          $filter: `PersonID eq ${employeeId}`,\r\n          $expand: `${db.comm_Military_Status},${db.comm_Military_Grade}`,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(params: IEmployeeMilitaryDeleteParams) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeMilitaryStatus\",\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  IEmployeeSapB1Model,\r\n  IEmployeeSapB1Request,\r\n} from \"app/personnel-setup/models/emp-sap-integration/sap-b1\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { db } from \"app/shared/resources/database-tabels\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmployeeSapB1Service extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IEmployeeSapB1Request) {\r\n    return this.post<IResponse<IEmployeeSapB1Model>>(\r\n      \"Personnel/Employees/Create_EmployeeSapCostCenter\",\r\n      data\r\n    );\r\n  }\r\n\r\n  update(data: IEmployeeSapB1Request) {\r\n    return this.post<IResponse<IEmployeeSapB1Model>>(\r\n      \"Personnel/Employees/Edit_EmployeeSapCostCenter\",\r\n      data\r\n    );\r\n  }\r\n\r\n  getList(employeeId: number, params: IPageParams) {\r\n    return this.get<IResponseList<IEmployeeSapB1Model[]>>(\r\n      \"Personnel/Employees/GetList_EmployeeSapCostCenter\",\r\n      {\r\n        params: {\r\n          ...params,\r\n          $filter: `Person_Instance_ID eq ${employeeId}`,\r\n          $expand: db.saP_SystemInstance,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAll(employeeId: number) {\r\n    return this.get<IResponse<IEmployeeSapB1Model[]>>(\r\n      \"Personnel/Employees/GetAll_EmployeeSapCostCenter\",\r\n      {\r\n        params: {\r\n          $filter: `Person_Instance_ID eq ${employeeId}`,\r\n          $expand: db.saP_SystemInstance,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\r\n      \"Personnel/Employees/Delete_EmployeeSapCostCenter\",\r\n      {\r\n        params: { Id: Id },\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {\r\n  trigger,\r\n  animate,\r\n  style,\r\n  transition,\r\n  state, AnimationTriggerMetadata, group\r\n} from \"@angular/animations\";\r\n\r\n\r\nexport const slideInOut = [\r\n  trigger(\"slideInOut\", [\r\n    state(\"1\", style({height: \"*\"})),\r\n    state(\"0\", style({height: \"0px\"})),\r\n    transition(\"1 <=> 0\", animate(200))\r\n  ])\r\n];\r\n\r\nexport function FadeIn(timingIn: number, height: boolean = false): AnimationTriggerMetadata {\r\n  return trigger(\"fadeIn\", [\r\n    transition(\":enter\", [\r\n      style(height ? {opacity: 0, height: 0,} : {opacity: 0,}),\r\n      animate(timingIn, style(height ? {opacity: 1, height: \"fit-content\"} : {opacity: 1,})),\r\n    ]),\r\n  ]);\r\n}\r\n\r\nexport function fadeOut(timingOut: number, height: boolean = false): AnimationTriggerMetadata {\r\n  return trigger(\"fadeOut\", [\r\n    transition(\":leave\", [\r\n      animate(timingOut, style(height ? {opacity: 0, height: 0,} : {opacity: 0,})),\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport function FadeInOut(timingIn: number, timingOut: number, height: boolean = false): AnimationTriggerMetadata {\r\n  return trigger(\"fadeInOut\", [\r\n    transition(\":enter\", [\r\n      style(height ? {opacity: 0, height: 0,} : {opacity: 0,}),\r\n      animate(timingIn, style(height ? {opacity: 1, height: \"fit-content\"} : {opacity: 1,})),\r\n    ]),\r\n    transition(\":leave\", [\r\n      animate(timingOut, style(height ? {opacity: 0, height: 0,} : {opacity: 0,})),\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const SlideInOutAnimation = [\r\n  trigger(\"slideInOut\", [\r\n    state(\"in\", style({\r\n      \"max-height\": \"500px\", \"opacity\": \"1\", \"visibility\": \"visible\"\r\n    })),\r\n    state(\"out\", style({\r\n      \"max-height\": \"0px\", \"opacity\": \"0\", \"visibility\": \"hidden\"\r\n    })),\r\n    transition(\"in => out\", [group([\r\n        animate(\"400ms ease-in-out\", style({\r\n          \"opacity\": \"0\"\r\n        })),\r\n        animate(\"600ms ease-in-out\", style({\r\n          \"max-height\": \"0px\"\r\n        })),\r\n        animate(\"700ms ease-in-out\", style({\r\n          \"visibility\": \"hidden\"\r\n        }))\r\n      ]\r\n    )]),\r\n    transition(\"out => in\", [group([\r\n        animate(\"1ms ease-in-out\", style({\r\n          \"visibility\": \"visible\"\r\n        })),\r\n        animate(\"600ms ease-in-out\", style({\r\n          \"max-height\": \"500px\"\r\n        })),\r\n        animate(\"800ms ease-in-out\", style({\r\n          \"opacity\": \"1\"\r\n        }))\r\n      ]\r\n    )])\r\n  ]),\r\n];\r\n","export enum EEmpHireDocType {\r\n  attached = 1,\r\n  handDelivery = 2,\r\n  notNeed = 3,\r\n}\r\n\r\nexport namespace EEmpHireDocType {\r\n  export function getValue(docType: EEmpHireDocType | number): string {\r\n    switch (docType) {\r\n      case EEmpHireDocType.attached:\r\n        return \"attachment\";\r\n      case EEmpHireDocType.handDelivery:\r\n        return \"isHandDelivered\";\r\n      case EEmpHireDocType.notNeed:\r\n        return \"notNeed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}