{"version":3,"file":"src_app_pms-setup_pms-setup_module_ts.js","mappings":"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","sources":["./src/app/pms-setup/components/unit/unit.component.ts","./src/app/pms-setup/components/unit/unit.component.html","./src/app/pms-setup/pms-setup-routing.module.ts","./src/app/pms-setup/pms-setup.module.ts","./src/app/pms-setup/services/unit.service.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IUnitModel, IUnitRequest } from \"app/pms-setup/models/unit\";\r\nimport { UnitService } from \"app/pms-setup/services/unit.service\";\r\nimport { MessageTypes } from \"app/shared/enums/message-types.enum\";\r\nimport { IPageParams } from \"app/shared/interfaces/params\";\r\nimport { IResponse, IResponseList } from \"app/shared/interfaces/responces\";\r\nimport { AppHelpers } from \"app/shared/resources/app-helpers\";\r\nimport { CustomValidator } from \"app/shared/validators/custom.validator\";\r\n\r\n@Component({\r\n  selector: \"app-unit\",\r\n  templateUrl: \"./unit.component.html\",\r\n  styleUrls: [\"./unit.component.scss\"],\r\n})\r\nexport class UnitComponent extends AppHelpers implements OnInit {\r\n  form: FormGroup;\r\n  submitted: boolean = false;\r\n  mandatoryColomns: string[] = [\"Ser\", \"id\", \"en_Name\", \"ar_Name\", \"actions\"];\r\n  isLoaded: boolean = false;\r\n  optionalColomns: string[] = [];\r\n\r\n  dataSource: MatTableDataSource<IUnitModel>;\r\n\r\n  constructor(public unitService: UnitService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.CheckNoBusinessOrCompany()) this.getList(this.currentPage);\r\n\r\n    this.form = this.fb.group({\r\n      id: [0, { nonNullable: true }],\r\n      ar_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n      en_Name: [null, [Validators.required, CustomValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get formCtrls() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  override onChangeBusinessAndCompanyId() {\r\n    if (this.dataSource?.data?.length > 0)\r\n      this.dataSource = new MatTableDataSource(null);\r\n    if (this.checkNoBusinessOrCompany()) this.getList(this.firstPage);\r\n  }\r\n\r\n  getList(page: number, pageSize?: number) {\r\n    this.page.pageIndex = page;\r\n    if (pageSize) this.page.pageSize = pageSize;\r\n    let params: IPageParams = {\r\n      PageNumber: page,\r\n      pageSize: this.page.pageSize,\r\n    };\r\n    this.unitService\r\n      .getList(params)\r\n      .pipe(this.cancelRequest())\r\n      .subscribe((res: IResponseList<IUnitModel[]>) => {\r\n        if (res.message.messageType == MessageTypes.Success) {\r\n          this.dataSource = new MatTableDataSource(res.data);\r\n          this.isLoaded = true;\r\n          this.page.length = res.meta.totalItemCount;\r\n        } else this.errorList(res.message.messages);\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.form.value);\r\n    this.submitted = true;\r\n    if (this.form.valid) {\r\n      const model: IUnitRequest = {\r\n        ID: this.form.value.id,\r\n        Ar_Name: this.form.value.ar_Name,\r\n        En_Name: this.form.value.en_Name,\r\n      };\r\n\r\n      model.ID == 0 ? this.create(model) : this.update(model);\r\n    } // else this.toastr.error(\"General.formNotValid\");\r\n  }\r\n\r\n  create(model: IUnitRequest) {\r\n    this.showLoading();\r\n    this.unitService.create(model).subscribe((res: IResponse<IUnitModel>) => {\r\n      if (res?.message?.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize);\r\n        this.addSuccessfullyMsg(res?.message?.messageTypeName);\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  update(model: IUnitRequest) {\r\n    this.showLoading();\r\n    this.unitService.update(model).subscribe((res: IResponse<IUnitModel>) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.clearForm();\r\n        this.getList(this.currentPage, this.page.pageSize); // current page after update\r\n        this.updateSuccessfullyMsg(res?.message?.messageTypeName);\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  unitToEdit(unit: IUnitModel) {\r\n    this.form.patchValue(unit);\r\n    // console.log(this.form.value);\r\n  }\r\n\r\n  onDelete(unit: IUnitModel): void {\r\n    let msg = this.msgTranslate(unit.ar_Name, unit.en_Name);\r\n    this.deleateDialog(msg).subscribe((confirm) => {\r\n      if (confirm) this.delete(unit);\r\n    });\r\n  }\r\n\r\n  delete(unit: IUnitModel) {\r\n    this.showLoading();\r\n    this.unitService.Delete(unit.id).subscribe((res: IResponse) => {\r\n      if (res.message.messageType == MessageTypes.Success) {\r\n        this.deleteSuccessfullyMsg(res?.message?.messageTypeName);\r\n        if (this.dataSource.data.length == 1 && this.currentPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getList(this.prevPage, this.page.pageSize);\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getList(this.currentPage, this.page.pageSize);\r\n        }\r\n        if (unit.id == this.formCtrls.id.value) this.clearForm();\r\n      } else this.errorList(res.message.messages);\r\n      this.hideLoading();\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    this.form.reset({ id: 0 });\r\n    this.submitted = false;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"form-card\">\r\n      <mat-card-title>\r\n        <page-title\r\n          [id]=\"formCtrls.id.value\"\r\n          addTitle=\"unit\"\r\n          editTitle=\"editUnit\"\r\n        >\r\n        </page-title>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"form\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.en_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"en_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <app-input\r\n                    [control]=\"formCtrls.ar_Name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"ar_Name\"\r\n                  >\r\n                  </app-input>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <submit-btn [id]=\"formCtrls.id.value\" (onClick)=\"submit()\">\r\n        </submit-btn>\r\n        <reset-form-btn *ngIf=\"formCtrls.id.value > 0\" (click)=\"clearForm()\">\r\n        </reset-form-btn>\r\n      </mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n\r\n      <app-material-table\r\n        [isLoaded]=\"isLoaded\"\r\n        [dataSource]=\"dataSource\"\r\n        [mandatoryColomns]=\"mandatoryColomns\"\r\n        [optionalColomns]=\"optionalColomns\"\r\n        [page]=\"page\"\r\n        [exportService]=\"unitService\"\r\n        (onChangePage)=\"getList($event.pageIndex + 1, $event.pageSize)\"\r\n        [actions]=\"rowFunctions\"\r\n        (editRow)=\"unitToEdit($event)\"\r\n        (deleteRow)=\"onDelete($event)\"\r\n      >\r\n      </app-material-table>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { UnitComponent } from \"./components/unit/unit.component\";\r\nimport { ViewsManager } from \"app/shared/resources/views-manager\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"unit\",\r\n    component: UnitComponent,\r\n    data: { view: ViewsManager.unit },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PMSSetupRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { PMSSetupRoutingModule } from \"./pms-setup-routing.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { UnitComponent } from './components/unit/unit.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UnitComponent\r\n  ],\r\n  imports: [CommonModule, PMSSetupRoutingModule, SharedModule],\r\n})\r\nexport class PMSSetupModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {AppClientService} from 'app/shared/services/app-client.service';\r\nimport {IUnitModel, IUnitRequest} from '../models/unit';\r\nimport {IResponse, IResponseList} from 'app/shared/interfaces/responces';\r\nimport {IPageParams} from 'app/shared/interfaces/params';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UnitService extends AppClientService {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  create(data: IUnitRequest) {\r\n    return this.post<IResponse<IUnitModel>>(\"UnitSetup/Create\", data);\r\n  }\r\n\r\n  update(data: IUnitRequest) {\r\n    return this.post<IResponse<IUnitModel>>(\"UnitSetup/Edit\", data);\r\n  }\r\n\r\n  getList(params: IPageParams) {\r\n    return this.get<IResponseList<IUnitModel[]>>(\"UnitSetup/GetList\", {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.get<IResponse<IUnitModel[]>>(\"UnitSetup/GetAll\")\r\n    // .pipe(\r\n    //   map((res: IResponse<IUnitModel[]>) => {\r\n    //     return res.data;\r\n    //   })\r\n    // );\r\n  }\r\n\r\n  Delete(Id: number) {\r\n    return this.delete<IResponse>(\"UnitSetup/Delete\", {\r\n      params: { Id: Id },\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n    this.getAll();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}