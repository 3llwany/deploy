{"version":3,"file":"src_app_admin_pages_setup_setup_module_ts.js","mappings":"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","sources":["./src/app/admin/pages/setup/announcements/announcement-index/announcement-index.component.ts","./src/app/admin/pages/setup/announcements/announcement-index/announcement-index.component.html","./src/app/admin/pages/setup/announcements/announcement-setup/announcement-setup.component.ts","./src/app/admin/pages/setup/announcements/announcement-setup/announcement-setup.component.html","./src/app/admin/pages/setup/exceptional-views/exceptional-views.component.ts","./src/app/admin/pages/setup/exceptional-views/exceptional-views.component.html","./src/app/admin/pages/setup/generate-balance-codes/generate-balance-codes.component.ts","./src/app/admin/pages/setup/generate-balance-codes/generate-balance-codes.component.html","./src/app/admin/pages/setup/manage-views/manage-views.component.ts","./src/app/admin/pages/setup/manage-views/manage-views.component.html","./src/app/admin/pages/setup/manual-cash-payment/manual-cash-payment.component.ts","./src/app/admin/pages/setup/manual-cash-payment/manual-cash-payment.component.html","./src/app/admin/pages/setup/points-setup/points-setup.component.ts","./src/app/admin/pages/setup/points-setup/points-setup.component.html","./src/app/admin/pages/setup/question-student-settings/question-student-settings.component.ts","./src/app/admin/pages/setup/question-student-settings/question-student-settings.component.html","./src/app/admin/pages/setup/send-singular-whatsapp-msg/send-singular-whatsapp-msg.component.ts","./src/app/admin/pages/setup/send-singular-whatsapp-msg/send-singular-whatsapp-msg.component.html","./src/app/admin/pages/setup/send-whatsapp-msg/send-whatsapp-msg.component.ts","./src/app/admin/pages/setup/send-whatsapp-msg/send-whatsapp-msg.component.html","./src/app/admin/pages/setup/setup-routing.module.ts","./src/app/admin/pages/setup/setup.module.ts","./src/app/admin/pages/setup/subscription-payment-plan/subscription-payment-plan.component.ts","./src/app/admin/pages/setup/subscription-payment-plan/subscription-payment-plan.component.html","./src/app/admin/pages/setup/teacher-setup/add-teacher/add-teacher.component.ts","./src/app/admin/pages/setup/teacher-setup/add-teacher/add-teacher.component.html","./src/app/admin/pages/setup/teacher-setup/assign-subject-to-teacher/assign-subject-to-teacher.component.ts","./src/app/admin/pages/setup/teacher-setup/assign-subject-to-teacher/assign-subject-to-teacher.component.html","./src/app/admin/pages/setup/whatsapp/whatsApp-index/whatsApp-index.component.ts","./src/app/admin/pages/setup/whatsapp/whatsApp-index/whatsApp-index.component.html","./src/app/admin/pages/setup/whatsapp/whatsapp-add/whatsapp-add.component.ts","./src/app/admin/pages/setup/whatsapp/whatsapp-add/whatsapp-add.component.html","./src/app/admin/services/Admin/cash-payment.service.ts","./src/app/admin/services/Admin/subscription-payment-plan.service.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AnnouncementVM } from \"app/admin/models/admin/AnnouncementVM\";\r\nimport { AnnouncementService } from \"app/admin/services/Admin/announcement.service\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\n@Component({\r\n  selector: \"app-announcement-index\",\r\n  templateUrl: \"./announcement-index.component.html\",\r\n  styleUrls: [\"./announcement-index.component.scss\"],\r\n})\r\nexport class AnnouncementIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  EduCompId: any;\r\n  Teachers: teacherByEduCompId[] = [];\r\n  displayedColumns: string[] = [\r\n    \"announcementText\",\r\n    \"fromDate\",\r\n    \"toDate\",\r\n    \"img\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<AnnouncementVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authserv: AuthService,\r\n    private dialog: MatDialog,\r\n    private GeneralService: GeneralService,\r\n    private announcementService: AnnouncementService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      teacherUserId: [\"\", Validators.required],\r\n    });\r\n    this.getTeachersByEducompId();\r\n  }\r\n\r\n  get teacherUserIdCtrl() {\r\n    return this.myForm.get(\"teacherUserId\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeacherAnnouncement(1);\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getTeacherAnnouncement(p: number) {\r\n    if (this.teacherUserIdCtrl.value) {\r\n      this.spinner.show();\r\n      this.announcementService\r\n        .getAllAnnouncements(this.teacherUserIdCtrl.value, p)\r\n        .subscribe((res: any) => {\r\n          this.dataSource = new MatTableDataSource(res.list);\r\n          this.itemsCount = res.ItemsCount;\r\n          this.spinner.hide();\r\n        });\r\n    } else {\r\n      this.toastr.error(\"يجب ادخال المدرس\");\r\n    }\r\n  }\r\n\r\n  getTeachersByEducompId() {\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n        this.teacherUserIdCtrl.setValue(res.lstTeachers[0]?.teacherUserId);\r\n        this.getTeacherAnnouncement(1);\r\n      }\r\n    );\r\n  }\r\n\r\n  openDeleateDialog(group: AnnouncementVM): void {\r\n    // this.dialog\r\n    //   .open(DeleteDialogComponent, {\r\n    //     data: {\r\n    //       msg: group.Name,\r\n    //     },\r\n    //   })\r\n    //   .afterClosed()\r\n    //   .subscribe((confirm) => {\r\n    //     if (confirm) this.removeGroup(group);\r\n    //   });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../announcement-setup\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n          {{ \"labels.AddAnnounce\" | translate }}\r\n        </a>\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getTeacherAnnouncement(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search\"></i> {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Material.Teacher\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"teacherUserId\">\r\n                      <mat-option value=\"\">\r\n                        {{ \"Material.Teacher\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let teach of Teachers\"\r\n                        [value]=\"teach.teacherUserId\"\r\n                      >\r\n                        {{ teach.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        teacherUserIdCtrl?.invalid && teacherUserIdCtrl?.touched\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"teacherIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Announcement\" | translate }}\r\n      </mat-card-title>\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"fromDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.From_Date | date: \"dd-MM-yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"toDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.To_Date | date: \"dd-MM-yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"announcementText\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Announcement\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span\r\n                  class=\"contetnt\"\r\n                  [innerHtml]=\"ele.announcement_text | sliceAnnouncement\"\r\n                  [title]=\"ele.announcement_text\"\r\n                >\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"img\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.AnnouncePicture\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <a href=\"mozakretyapi{{ ele.attach_path }}\" target=\"_blank\">\r\n                  <img\r\n                    class=\"card-img-top img-fluid imgtablesize\"\r\n                    src=\"mozakretyapi{{ ele.attach_path }}\"\r\n                    [alt]=\"\"\r\n                  />\r\n                </a>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let announce\">\r\n                <button\r\n                  mat-mini-fab\r\n                  matTooltip=\"Edit\"\r\n                  routerLink=\"../announcement-setup\"\r\n                  [queryParams]=\"{\r\n                    announceId: announce.Id,\r\n                    functionId: functionId\r\n                  }\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getTeacherAnnouncement($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { teacherBySubEduComp } from \"app/admin/models/admin/educations\";\r\nimport { AnnouncementService } from \"app/admin/services/Admin/announcement.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-announcement-setup\",\r\n  templateUrl: \"./announcement-setup.component.html\",\r\n  styleUrls: [\"./announcement-setup.component.css\"],\r\n})\r\nexport class AnnouncementSetupComponent implements OnInit {\r\n  announceId: number = 0;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  myForm!: FormGroup;\r\n  picturePath?: any;\r\n  EduCompId: any;\r\n  Teachers: teacherBySubEduComp[];\r\n  submitted = false;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private announcementService: AnnouncementService\r\n  ) {\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.announceId = Number(params.get(\"announceId\"));\r\n      if (this.announceId > 0) {\r\n        this.getAnnounceById(this.announceId);\r\n      }\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  getAnnounceById(announceId: number) {\r\n    this.announcementService\r\n      .getAnnounceById(announceId)\r\n      .subscribe((res: any) => {\r\n        console.log(\"getGroupById\", res);\r\n        this.announceId = res.Id;\r\n        this.FormCtrls.Id.setValue(res.Id);\r\n        this.FormCtrls.fromDate.setValue(res.From_Date);\r\n        this.FormCtrls.toDate.setValue(res.To_Date);\r\n        this.FormCtrls.teacherUserId.setValue(res.teacherUserId);\r\n        this.FormCtrls.announcementText.setValue(res.announcement_text);\r\n        this.FormCtrls.announcementPicture.setValue(res.attach_path);\r\n        this.picturePath = `mozakretyapi${res.attach_path}`;\r\n        console.log(\"picture path\", this.picturePath);\r\n      });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      Id: \"\",\r\n      announcementText: [],\r\n      announcementPicture: [\"\"],\r\n      fromDate: [, Validators.required],\r\n      toDate: [, Validators.required],\r\n      teacherUserId: [],\r\n      eduCompId: [this.EduCompId],\r\n    });\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    if (EduCompId) {\r\n      this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n        (res: any) => {\r\n          this.Teachers = res.lstTeachers;\r\n          this.FormCtrls.teacherUserId.setValue(\r\n            res.lstTeachers[0]?.teacherUserId\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.FormCtrls.fromDate.value > this.FormCtrls.toDate.value) {\r\n      this.msg.error(\"تاريخ بداية الفترة أكبر من تاريخ نهاية الفترة\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.FormCtrls.announcementText.value &&\r\n      !this.FormCtrls.announcementPicture.value\r\n    ) {\r\n      this.msg.error(\"يجب ادخال صيغة الاعلان أو صورة الاعلان أو كلاهما\");\r\n      return;\r\n    }\r\n    if (this.announceId == 0) {\r\n      if (this.myForm.valid) {\r\n        this.spinner.show();\r\n        this.FormCtrls.fromDate.setValue(\r\n          this.datePipe.transform(this.FormCtrls.fromDate.value)\r\n        );\r\n        this.FormCtrls.toDate.setValue(\r\n          this.datePipe.transform(this.FormCtrls.toDate.value)\r\n        );\r\n        this.announcementService\r\n          .addAnnouncement(this.myForm.value)\r\n          .subscribe((res: any) => {\r\n            if (res.returnValue != -1) {\r\n              this.msg.success(\"تم اضافة الاعلان بنجاح\");\r\n              //   this.myForm.reset();\r\n              this.submitted = false;\r\n            } else {\r\n              this.msg.error(\"خطأ أثناء اضافة الاعلان\");\r\n            }\r\n\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    } else {\r\n      if (this.myForm.valid) {\r\n        this.FormCtrls.Id.setValue(this.announceId);\r\n        this.FormCtrls.fromDate.setValue(\r\n          this.datePipe.transform(this.FormCtrls.fromDate.value)\r\n        );\r\n        this.FormCtrls.toDate.setValue(\r\n          this.datePipe.transform(this.FormCtrls.toDate.value)\r\n        );\r\n        this.announcementService\r\n          .addAnnouncement(this.myForm.value)\r\n          .subscribe((res: any) => {\r\n            if (res.returnValue != -1) {\r\n              this.msg.success(\"تم تعديل الاعلان بنجاح\");\r\n              // this.myForm.reset();\r\n              this.submitted = false;\r\n              // this.returnProfile();\r\n            } else {\r\n              this.msg.error(\"خطأ أثناء تعديل الاعلان\");\r\n            }\r\n            this.spinner.hide();\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  DeletePic() {\r\n    this.spinner.show();\r\n    this.announcementService\r\n      .deleteAttach(this.FormCtrls.Id.value)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.msg.success(\"تم حذف صورة الاعلان\");\r\n          this.picturePath = \"mozakretyapinull\";\r\n        } else this.msg.warning(res);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.FormCtrls.announcementPicture.setValue(data);\r\n        this.picturePath = fileReder;\r\n      };\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"announceId == 0\">\r\n          {{ \"labels.AddAnnounce\" | translate }}\r\n        </span>\r\n        <span *ngIf=\"announceId > 0\">\r\n          {{ \"labels.EditAnnounce\" | translate }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../announcement-index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"px-0 mb-sm-2\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-sm bg-light-primary mb-1 mb-sm-0\"\r\n            mat-raised-button\r\n            (click)=\"fileInput.click()\"\r\n          >\r\n            {{ \"labels.AnnouncePicture\" | translate }}\r\n          </button>\r\n          <input\r\n            hidden\r\n            (change)=\"onChange($event)\"\r\n            #fileInput\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            id=\"file\"\r\n          />\r\n          <button\r\n            *ngIf=\"announceId > 0 && picturePath !== 'mozakretyapinull'\"\r\n            type=\"button\"\r\n            class=\"btn btn-sm bg-light-primary mb-1 mb-sm-0\"\r\n            mat-raised-button\r\n            (click)=\"DeletePic()\"\r\n          >\r\n            {{ \"labels.DeleteAnnouncePic\" | translate }}\r\n          </button>\r\n\r\n          <!-- <img\r\n            src=\"{{ picturePath }}\"\r\n            alt=\"No Image\"\r\n            class=\"users-avatar-shadow avatar mr-3 rounded-circle\"\r\n            height=\"64\"\r\n            width=\"64\"\r\n          /> -->\r\n          <div class=\"question-img\">\r\n            <img class=\"img-fluid\" [src]=\"picturePath\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"teacherUserId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of Teachers\"\r\n                        [value]=\"teacher.teacherUserId\"\r\n                      >\r\n                        {{ teacher.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.teacherUserId.invalid &&\r\n                        (FormCtrls.teacherUserId.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.teacherId.errors?.required\">\r\n                        Must Choose a value\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-lg-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.fromDate.invalid &&\r\n                        (FormCtrls.fromDate.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.fromDate.errors?.required\">\r\n                        You must choose a value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-lg-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"toDate\">\r\n                    </mat-datepicker-toggle>\r\n\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.toDate?.invalid &&\r\n                        (FormCtrls.toDate?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.toDate?.errors?.required\">\r\n                        You must choose a value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!--\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Announcement\" | translate }}\r\n                    </mat-label>\r\n                    <textarea\r\n                      matInput\r\n                      cols=\"20\"\r\n                      formControlName=\"announcementText\"\r\n                    >\r\n                    </textarea>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.Announcement\" | translate }}\r\n                  </mat-label>\r\n                  <quill-editor\r\n                    formControlName=\"announcementText\"\r\n                    placeholder=\"type your announcement\"\r\n                  >\r\n                  </quill-editor>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" *ngIf=\"announceId > 0\">\r\n        <button\r\n          *ngIf=\"announceId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"announceId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { ManageViewsService } from \"app/admin/services/Admin/manage-views.service\";\r\nimport {\r\n  teacherByEduCompId,\r\n  GeneralDropdownVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-exceptional-views\",\r\n  templateUrl: \"./exceptional-views.component.html\",\r\n  styleUrls: [\"./exceptional-views.component.scss\"],\r\n})\r\nexport class ExceptionalViewsComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[];\r\n  stages: GeneralDropdownVM[];\r\n  years: GeneralDropdownVM[];\r\n  units: GeneralDropdownVM[];\r\n  lessons: GeneralDropdownVM[];\r\n  lectures: GeneralDropdownVM[];\r\n  materials: GeneralDropdownVM[];\r\n  EduCompId: number;\r\n  branchId: number;\r\n  searchForm!: FormGroup;\r\n  resetForm!: FormGroup;\r\n  submitted = false;\r\n  email?: string = \"\";\r\n  username?: string = \"\";\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private ManageViewsService: ManageViewsService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private CashPaymentService: CashPaymentService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.resetForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [\"\", [Validators.required]],\r\n      itemTypeId: [15],\r\n      paymentMethod: [\"\", [Validators.required]],\r\n      extraViews: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      paidAmount: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      toDate: [\"\", [Validators.required]],\r\n      resetTemplate: [false],\r\n      teacherUserId: [\"\"],\r\n      stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n    });\r\n  }\r\n\r\n  get resetFormCtrl() {\r\n    return this.resetForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.email = res.email;\r\n        this.username = res.username;\r\n        this.resetFormCtrl.userId.setValue(res.userId);\r\n        this.resetFormCtrl.yearId.setValue(res.yearId);\r\n      } else {\r\n        this.toastr.error(res.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  addExceptionalViews() {\r\n    this.submitted = true;\r\n    if (!this.resetFormCtrl.itemTypeId.value) {\r\n      this.toastr.warning(\"Must Select \");\r\n    }\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.ManageViewsService.addExceptionalViews(\r\n        this.EduCompId,\r\n        this.resetForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.resetForm.reset();\r\n          this.searchForm.reset();\r\n          this.toastr.success(\"تم إضافة المشاهدات\");\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  //  getStageByTeacherId(teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.teacherUserId.value) {\r\n  //     this.EducationalService.getStageByTeacherId(teacherId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //  getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.stageId.value) {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //      });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.yearId.value) {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId: teacherId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.subjectId.value) {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n      // this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.unitId.value) {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      // this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLessonWithEnded(lessonId: any, teacherId: any) {\r\n    this.CashPaymentService.GetItemsByLessonWithEnded(\r\n      this.EduCompId,\r\n      lessonId,\r\n      this.resetFormCtrl?.itemTypeId.value,\r\n      teacherId,\r\n      true\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    this.CashPaymentService.GetItemsByUnit(\r\n      this.EduCompId,\r\n      unitId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    this.CashPaymentService.GetItemsBySubject(\r\n      this.EduCompId,\r\n      subjectId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ManageViews\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ExceptionalViews\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"form-container\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"resetFormCtrl.userId.value\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Student\" | translate }} - {{ username }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"resetForm\" class=\"form-container\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"itemTypeId\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"15\">\r\n                    {{ \"Material.Lecture\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"16\">\r\n                    {{ \"labels.Exam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"3\">\r\n                    {{ \"labels.Template\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"username\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"email\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\" *ngIf=\"resetFormCtrl.itemTypeId.value == 3\">\r\n              <mat-radio-group formControlName=\"resetTemplate\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.DeleteTemplate\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.DeleteStudentAnswers\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"teacherUserId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <!--\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"stageId\"\r\n                  (selectionChange)=\"\r\n                    getYearsByStageId(resetFormCtrl.stageId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let stage of stages\"\r\n                    [value]=\"stage.Value\"\r\n                  >\r\n                    {{ stage.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"yearId\"\r\n                  (selectionChange)=\"\r\n                    getSubjectsByYearId(\r\n                      resetFormCtrl.yearId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year.Value\">\r\n                    {{ year.Text_Ar }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <app-subjects-by-teacherid\r\n                [subjectControl]=\"resetFormCtrl.subjectId\"\r\n                [teacherIdControl]=\"resetFormCtrl.teacherUserId\"\r\n                [submitted]=\"submitted\"\r\n                (selectionChange)=\"getUnitsBySubjectId($event)\"\r\n              >\r\n              </app-subjects-by-teacherid>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"unitId\"\r\n                  (selectionChange)=\"\r\n                    getLessonsByUnitId(resetFormCtrl.unitId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let unit of units\" [value]=\"unit.Value\">\r\n                    {{ unit.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"lessonId\"\r\n                  (selectionChange)=\"\r\n                    GetItemsByLessonWithEnded(\r\n                      resetFormCtrl.lessonId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let lesson of lessons\"\r\n                    [value]=\"lesson.Value\"\r\n                  >\r\n                    {{ lesson.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Material.Lecture\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"itemId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let material of materials\"\r\n                    [value]=\"material.Value\"\r\n                  >\r\n                    {{ material.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.itemId.invalid &&\r\n                    (resetFormCtrl.itemId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.itemId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Balance.PaymentMethod\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"paymentMethod\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option [value]=\"1\">\r\n                    {{ \"Balance.Balance\" | translate }}</mat-option\r\n                  >\r\n                  <mat-option [value]=\"2\">\r\n                    {{ \"Balance.ManualPayment\" | translate }}</mat-option\r\n                  >\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paymentMethod.invalid &&\r\n                    (resetFormCtrl.paymentMethod.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paymentMethod.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.NumberViews\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"extraViews\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.extraViews.invalid &&\r\n                    (resetFormCtrl.extraViews.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Amount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"paidAmount\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paidAmount.invalid &&\r\n                    (resetFormCtrl.paidAmount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                <input\r\n                  matInput\r\n                  [matDatepicker]=\"toDate\"\r\n                  formControlName=\"toDate\"\r\n                />\r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"toDate\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-datepicker #toDate></mat-datepicker>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.toDate.invalid &&\r\n                    (resetFormCtrl.toDate.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.toDate.errors?.required\">\r\n                    You must choose a Date.\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"addExceptionalViews()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { GenerateCodesService } from \"../../../services/Admin/generate-codes.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { teacherBySubEduComp } from \"app/admin/models/admin/educations\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { environment } from \"environments/environment\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport {\r\n  CodeTypesModel,\r\n  IGenerateBalanceCodesVM,\r\n} from \"app/admin/models/admin/admin\";\r\nimport { FileService } from \"app/shared/services/General/upload-file.service\";\r\n\r\n@Component({\r\n  selector: \"app-generate-balance-codes\",\r\n  templateUrl: \"./generate-balance-codes.component.html\",\r\n  styleUrls: [\"./generate-balance-codes.component.scss\"],\r\n})\r\nexport class GenerateBalanceCodesComponent implements OnInit {\r\n  EduCompId: number;\r\n  branchId: number;\r\n  Teachers: teacherBySubEduComp[];\r\n  codeTypes: CodeTypesModel[];\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private generateCodesService: GenerateCodesService,\r\n    private authService: AuthService,\r\n    private fileService: FileService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService\r\n  ) {\r\n    //Get Code Types List\r\n    generateCodesService.getCodeTypes().subscribe((res: CodeTypesModel[]) => {\r\n      this.codeTypes = res;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n    this.myForm = this.fb.group({\r\n      teacherId: [\"\", Validators.required],\r\n      CodeTypeId: [\"\", Validators.required],\r\n      Amount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      Price: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId(e.EduCompId);\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  GenerateBalanceCodes() {\r\n    this.submitted = true;\r\n    let data: IGenerateBalanceCodesVM = {\r\n      Amount: this.FormCtrls.Amount.value,\r\n      Price: this.FormCtrls.Price.value,\r\n      teacherId: this.FormCtrls.teacherId.value,\r\n      CodeTypeId: this.FormCtrls.CodeTypeId.value,\r\n      EduCompId: this.EduCompId,\r\n    };\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.generateCodesService\r\n        .GenerateBalanceCodes(data)\r\n        .subscribe((res: any) => {\r\n          //  console.log(\"GenerateBalanceCodes\", res);\r\n          this.submitted = false;\r\n          if (res.returnValue == 1) {\r\n            this.fileService.downloadFile(res.path);\r\n            this.myForm.reset();\r\n          } else this.toastr.error(res.returnString, \"Codes Not Generated !\");\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    if (EduCompId) {\r\n      this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n        (res: any) => {\r\n          this.Teachers = res.lstTeachers;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title\r\n        >{{ \"Navbar.GenerateBalanceCodes\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"form-horizontal\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Type\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"CodeTypeId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let type of codeTypes\" [value]=\"type.id\">\r\n                    {{ type.name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.CodeTypeId.invalid &&\r\n                    (FormCtrls.CodeTypeId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.CodeTypeId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"teacherId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.teacherId.invalid &&\r\n                    (FormCtrls.teacherId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.teacherId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.CodesCount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"Amount\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Amount.invalid &&\r\n                    (FormCtrls.Amount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.Amount.errors?.required ||\r\n                      FormCtrls.Amount.errors?.bigZero\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.CodePrice\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"Price\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Price.invalid &&\r\n                    (FormCtrls.Price.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.Price.errors?.required ||\r\n                      FormCtrls.Price.errors?.bigZero\r\n                    \"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"GenerateBalanceCodes()\"\r\n        >\r\n          {{ \"General.Generate\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<ngx-spinner></ngx-spinner>\r\n","import { ManageViewsService } from \"./../../../services/Admin/manage-views.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  teacherByEduCompId,\r\n  GeneralDropdownVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\n\r\n@Component({\r\n  selector: \"app-manage-views\",\r\n  templateUrl: \"./manage-views.component.html\",\r\n  styleUrls: [\"./manage-views.component.scss\"],\r\n})\r\nexport class ManageViewsComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[] = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  units: GeneralDropdownVM[] = [];\r\n  lessons: GeneralDropdownVM[] = [];\r\n  lectures: GeneralDropdownVM[] = [];\r\n  materials: GeneralDropdownVM[] = [];\r\n  EduCompId: number;\r\n  branchId: number;\r\n  searchForm!: FormGroup;\r\n  resetForm!: FormGroup;\r\n  submitted = false;\r\n  email?: string = \"\";\r\n  username?: string = \"\";\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private ManageViewsService: ManageViewsService,\r\n    private toastr: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private CashPaymentService: CashPaymentService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authService.getEduCompId());\r\n    this.branchId = Number(this.authService.getEduCompId());\r\n    this.getTeachersByEducompId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.resetForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [\"\", [Validators.required]],\r\n      itemTypeId: [6],\r\n      paymentMethod: [\"\", [Validators.required]],\r\n      extraViews: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      paidAmount: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      resetTemplate: [false],\r\n      teacherUserId: [\"\"],\r\n      // stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n    });\r\n  }\r\n\r\n  get resetFormCtrl() {\r\n    return this.resetForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.email = res.email;\r\n        this.username = res.username;\r\n        this.resetFormCtrl.userId.setValue(res.userId);\r\n        this.resetFormCtrl.yearId.setValue(res.yearId);\r\n      } else {\r\n        this.toastr.error(res.returnString);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  resetViews() {\r\n    this.submitted = true;\r\n    if (!this.resetFormCtrl.userId.value) {\r\n      this.toastr.warning(\"Must Choose Student\");\r\n      return;\r\n    }\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.ManageViewsService.resetViews(\r\n        this.EduCompId,\r\n        this.resetForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.resetForm.reset();\r\n          this.searchForm.reset();\r\n          this.resetFormCtrl?.itemTypeId.setValue(6);\r\n          this.toastr.success(\"تم إضافة المشاهدات\");\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  //Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  //  getStageByTeacherId(teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.teacherUserId.value) {\r\n  //     this.EducationalService.getStageByTeacherId(teacherId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //  getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.stageId.value) {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //      });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (this.resetFormCtrl.yearId.value) {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId: teacherId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.subjectId.value) {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (this.resetFormCtrl.unitId.value) {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLesson(lessonId: any, teacherId: any) {\r\n    if (!this.resetFormCtrl?.itemTypeId.value) {\r\n      this.toastr.warning(\"يجب اختيار النوع\");\r\n      return;\r\n    }\r\n    if (lessonId) {\r\n      this.CashPaymentService.GetItemsByLesson(\r\n        this.EduCompId,\r\n        lessonId,\r\n        this.resetFormCtrl?.itemTypeId.value,\r\n        teacherId\r\n      ).subscribe((res: any) => {\r\n        this.materials = res;\r\n        console.log(\"materials\", this.materials);\r\n      });\r\n    }\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    this.CashPaymentService.GetItemsByUnit(\r\n      this.EduCompId,\r\n      unitId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      this.materials = res;\r\n    });\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    this.CashPaymentService.GetItemsBySubject(\r\n      this.EduCompId,\r\n      subjectId,\r\n      this.resetFormCtrl.itemTypeId.value,\r\n      this.resetFormCtrl.teacherUserId.value\r\n    ).subscribe((res: any) => {\r\n      //   console.log('GetMaterialByLesson', res);\r\n      this.materials = res;\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ManageViews\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ManageViews\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"form-container\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"resetFormCtrl.userId.value\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Student\" | translate }} - {{ username }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"resetForm\" class=\"form-container\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"itemTypeId\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"6\">\r\n                    {{ \"Material.Lecture\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"5\">\r\n                    {{ \"labels.Exam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"11\">\r\n                    {{ \"labels.Template\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"username\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" redonly [value]=\"email\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\" *ngIf=\"resetFormCtrl.itemTypeId.value == 11\">\r\n              <mat-radio-group formControlName=\"resetTemplate\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.DeleteTemplate\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.DeleteStudentAnswers\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"teacherUserId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let teacher of Teachers\"\r\n                    [value]=\"teacher.teacherUserId\"\r\n                  >\r\n                    {{ teacher.teacher_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!-- <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"stageId\"\r\n                  (selectionChange)=\"\r\n                    getYearsByStageId(resetFormCtrl.stageId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let stage of stages\"\r\n                    [value]=\"stage.Value\"\r\n                  >\r\n                    {{ stage.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"yearId\"\r\n                  (selectionChange)=\"\r\n                    getSubjectsByYearId(\r\n                      resetFormCtrl.yearId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year.Value\">\r\n                    {{ year.Text_Ar }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div> -->\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <app-subjects-by-teacherid\r\n                [subjectControl]=\"resetFormCtrl.subjectId\"\r\n                [teacherIdControl]=\"resetFormCtrl.teacherUserId\"\r\n                [submitted]=\"submitted\"\r\n                (selectionChange)=\"getUnitsBySubjectId($event)\"\r\n              >\r\n              </app-subjects-by-teacherid>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"unitId\"\r\n                  (selectionChange)=\"\r\n                    getLessonsByUnitId(resetFormCtrl.unitId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let unit of units\" [value]=\"unit.Value\">\r\n                    {{ unit.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                <mat-select\r\n                  formControlName=\"lessonId\"\r\n                  (selectionChange)=\"\r\n                    GetItemsByLesson(\r\n                      resetFormCtrl.lessonId.value,\r\n                      resetFormCtrl.teacherUserId.value\r\n                    )\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let lesson of lessons\"\r\n                    [value]=\"lesson.Value\"\r\n                  >\r\n                    {{ lesson.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Material.Lecture\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"itemId\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let material of materials\"\r\n                    [value]=\"material.Value\"\r\n                  >\r\n                    {{ material.Text }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.itemId.invalid &&\r\n                    (resetFormCtrl.itemId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.itemId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"Balance.PaymentMethod\" | translate }}</mat-label>\r\n                <mat-select formControlName=\"paymentMethod\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option [value]=\"1\">\r\n                    {{ \"Balance.Balance\" | translate }}</mat-option\r\n                  >\r\n                  <mat-option [value]=\"2\">\r\n                    {{ \"Balance.ManualPayment\" | translate }}</mat-option\r\n                  >\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paymentMethod.invalid &&\r\n                    (resetFormCtrl.paymentMethod.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paymentMethod.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.NumberViews\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"extraViews\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.extraViews.invalid &&\r\n                    (resetFormCtrl.extraViews.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.extraViews.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Amount\" | translate }}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"paidAmount\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    resetFormCtrl.paidAmount.invalid &&\r\n                    (resetFormCtrl.paidAmount.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"resetFormCtrl.paidAmount.errors?.minusNum\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"resetViews()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { forkJoin } from \"rxjs\";\r\nimport { CashPaymentService } from \"app/admin/services/Admin/cash-payment.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  Form,\r\n  FormBuilder,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport {\r\n  ICahsPaymentsTableMV,\r\n  IPostCahsPaymentByExcelVM,\r\n} from \"app/admin/models/admin/cash-payment-table\";\r\nimport {\r\n  ErrorClass,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralDropdownVM } from \"app/admin/models/admin/educations\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Component({\r\n  selector: \"app-manual-cash-payment\",\r\n  templateUrl: \"./manual-cash-payment.component.html\",\r\n  styleUrls: [\"./manual-cash-payment.component.scss\"],\r\n})\r\nexport class ManualCashPaymentComponent implements OnInit {\r\n  Errors: ErrorClass[] = [];\r\n  Teachers: teacherByEduCompId[] = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  units: GeneralDropdownVM[] = [];\r\n  lessons: GeneralDropdownVM[] = [];\r\n  lectures: GeneralDropdownVM[] = [];\r\n  materials: GeneralDropdownVM[] = [];\r\n  userPaymentsHistories: ICahsPaymentsTableMV[] = [];\r\n  EduCompId: any;\r\n  branchId: any;\r\n  searchForm!: FormGroup;\r\n  paymentForm!: FormGroup;\r\n  submitted = false;\r\n  alreadyBought: boolean = false;\r\n  selectedUserDate: any = \"\";\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  PaymentByExcel: any = null;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private CashPaymentService: CashPaymentService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authService.getEduCompId();\r\n    this.branchId = this.authService.getBranchId();\r\n\r\n    this.searchForm = this.fb.group({\r\n      code: [\"\"],\r\n      mobile: [\"\"],\r\n      centerCode: [\"\"],\r\n      searchedMail: [\"\"],\r\n      searchedName: [\"\"],\r\n    });\r\n\r\n    this.paymentForm = this.fb.group({\r\n      userId: [null, [Validators.required]],\r\n      itemId: [null],\r\n      itemTypeId: [6],\r\n      teacherUserId: [null, Validators.required],\r\n      balance: [null],\r\n      userMobile: [\"\"],\r\n      userEmail: [\"\"],\r\n      userName: [\"\"],\r\n      currentBalance: [null],\r\n      uploadedFile: [null],\r\n      itemPrice: [null],\r\n      isPaymentExcel: [false],\r\n\r\n      // stageId: [\"\"],\r\n      yearId: [null],\r\n      subjectId: [null],\r\n      unitId: [null],\r\n      lessonId: [null],\r\n    });\r\n    this.getTeachersByEducompId();\r\n    this.paymentForm.valueChanges.subscribe((e) => {\r\n      this.getFormValidationErrors(this.paymentForm);\r\n    });\r\n\r\n    this.paymentFormCtrl.userMobile.disable();\r\n    this.paymentFormCtrl.userEmail.disable();\r\n    this.paymentFormCtrl.userName.disable();\r\n    this.paymentFormCtrl.currentBalance.disable();\r\n    this.paymentFormCtrl.itemPrice.disable();\r\n    this.isPaymentExcelValidators();\r\n    this.itemTypeIdValidators();\r\n  }\r\n\r\n  get paymentFormCtrl() {\r\n    return this.paymentForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId();\r\n      this.getPaymentsHistory();\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  CashPaymentSearch() {\r\n    this.spinner.show();\r\n    this.CashPaymentService.CashPaymentSearch(\r\n      this.searchForm.value,\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      //console.log(\"PaymentSearch\", res);\r\n      if (res.model?.userId) {\r\n        //  this.Teachers = res.lstTeachers;\r\n        this.paymentFormCtrl.userId.setValue(res.model.userId);\r\n        this.paymentFormCtrl.yearId.setValue(res.model.yearId);\r\n        this.getPaymentsHistory();\r\n        this.paymentFormCtrl.userMobile.setValue(res.model.userMobile);\r\n        this.paymentFormCtrl.userEmail.setValue(res.model.userEmail);\r\n        this.paymentFormCtrl.userName.setValue(res.model.userName);\r\n        this.paymentFormCtrl.currentBalance.setValue(res.model.currentBalance);\r\n      } else if (res.returnValue == 0) this.toastr.info(res.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  AddCashPayment() {\r\n    this.itemTypeIdValidators();\r\n    this.isPaymentExcelValidators();\r\n\r\n    this.submitted = true;\r\n    // console.log('add', this.paymentForm.value);\r\n    let valid = this.paymentForm.valid;\r\n    if (valid) {\r\n      this.spinner.show();\r\n      this.CashPaymentService.CashPaymentPost(\r\n        this.EduCompId,\r\n        this.paymentForm.value\r\n      ).subscribe((res: any) => {\r\n        //  console.log('AddCashPayment', res);\r\n        if (res.returnValue == 1 && res.returnString == \"Success\") {\r\n          this.toastr.success(\"تم الدفع \");\r\n          this.getPaymentsHistory();\r\n          this.CashPaymentSearch();\r\n          this.submitted = false;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  ManualPaymentByExcel() {\r\n    if (!this.paymentFormCtrl.uploadedFile.value) {\r\n      this.toastr.warning(\"يجب اختيار شيت اكسل\");\r\n      return;\r\n    }\r\n    // console.log(this.paymentForm.value);\r\n    if (this.paymentFormCtrl.uploadedFile.value) {\r\n      this.spinner.show();\r\n      let data = {} as IPostCahsPaymentByExcelVM;\r\n      data.itemId = this.paymentFormCtrl.itemId.value;\r\n      data.itemTypeId = this.paymentFormCtrl.itemTypeId.value;\r\n      data.uploadedFile = this.paymentFormCtrl.uploadedFile.value;\r\n\r\n      //   console.log(\"Add\", data);\r\n      this.CashPaymentService.ManualPaymentByExcel(\r\n        this.EduCompId,\r\n        data\r\n      ).subscribe((res: any) => {\r\n        // console.log(\"ByExcel\", res);\r\n        if (res.returnValue == 1) {\r\n          this.toastr.success(\"تم الدفع \");\r\n        } else console.log(\"ERROR_UPLOAD_EXCEL\", res);\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getPaymentsExcelSheetSample() {\r\n    this.spinner.show();\r\n    this.CashPaymentService.getPaymentsExcelSheetSample().subscribe(\r\n      (res: any) => {\r\n        //  console.log(\"getPaymentsExcelSheetSample\", res);\r\n        if (res.returnValue == 1) {\r\n          window.open(\r\n            environment.apiURL.replace(\"/api/\", \"\") + res.path,\r\n            \"_blank\"\r\n          );\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  getPaymentsHistory() {\r\n    this.spinner.show();\r\n    this.CashPaymentService.getPaymentsHistory(\r\n      this.p,\r\n      this.paymentFormCtrl.userId.value,\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      //console.log('getPaymentsHistory', res);\r\n      this.userPaymentsHistories = res.userPayments;\r\n      this.itemsCount = res.totalCount;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //  Get Teachers By EduCompID\r\n  getTeachersByEducompId() {\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    this.paymentFormCtrl.subjectId.setValue(null);\r\n    this.paymentFormCtrl.unitId.setValue(null);\r\n    this.paymentFormCtrl.lessonId.setValue(null);\r\n    this.paymentFormCtrl.itemId.setValue(null);\r\n    this.spinner.show();\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        // console.log(res);\r\n        this.Teachers = res.lstTeachers;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  // getStageByTeacherId(teacherUserId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.stages = [];\r\n  //   this.materials = [];\r\n  //   if (teacherUserId != \"\") {\r\n  //     this.EducationalService.getStageByTeacherId(teacherUserId).subscribe(\r\n  //       (res: any) => {\r\n  //         this.stages = res;\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // getYearsByStageId(stageId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.years = [];\r\n  //   this.materials = [];\r\n  //   if (stageId != \"\") {\r\n  //     this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n  //       this.years = res;\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  //  getSubjectsByYearId(yearId: any, teacherUserId: any) {\r\n  //   this.lessons = [];\r\n  //   this.units = [];\r\n  //   this.subjects = [];\r\n  //   this.materials = [];\r\n  //   if (yearId != \"\") {\r\n  //     let data = {\r\n  //       yearId: yearId,\r\n  //       teacherUserId,\r\n  //     };\r\n  //     this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n  //       (res: any) => {\r\n  //         this.subjects = res;\r\n  //        }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  //return Units BY SubjectId\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.paymentFormCtrl.lessonId.setValue(null);\r\n    this.paymentFormCtrl.itemId.setValue(null);\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    if (this.paymentFormCtrl.subjectId?.value) {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        //console.log(res);\r\n      });\r\n\r\n      this.GetItemsBySubject(SubjectId);\r\n    }\r\n  }\r\n\r\n  //return Lessons BY unitId\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.paymentFormCtrl.itemId.setValue(null);\r\n    this.lessons = [];\r\n    this.materials = [];\r\n    if (this.paymentFormCtrl.unitId?.value) {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        //console.log(res);\r\n      });\r\n      this.GetItemsByUnit(unitId);\r\n    }\r\n  }\r\n\r\n  GetItemsByLesson(lessonId: any) {\r\n    if (this.paymentFormCtrl.lessonId?.value) {\r\n      this.CashPaymentService.GetItemsByLesson(\r\n        this.EduCompId,\r\n        lessonId,\r\n        this.paymentFormCtrl.itemTypeId.value,\r\n        this.paymentFormCtrl.teacherUserId.value\r\n      ).subscribe((res: any) => {\r\n        //   console.log('GetMaterialByLesson', res);\r\n        this.materials = res;\r\n      });\r\n    }\r\n  }\r\n\r\n  GetItemsByUnit(unitId: any) {\r\n    if (this.paymentFormCtrl.unitId?.value) {\r\n      this.CashPaymentService.GetItemsByUnit(\r\n        this.EduCompId,\r\n        unitId,\r\n        this.paymentFormCtrl.itemTypeId.value,\r\n        this.paymentFormCtrl.teacherUserId.value\r\n      ).subscribe((res: any) => {\r\n        this.materials = res;\r\n      });\r\n    }\r\n  }\r\n\r\n  GetItemsBySubject(subjectId: any) {\r\n    if (this.paymentFormCtrl.subjectId?.value) {\r\n      this.CashPaymentService.GetItemsBySubject(\r\n        this.EduCompId,\r\n        subjectId,\r\n        this.paymentFormCtrl.itemTypeId.value,\r\n        this.paymentFormCtrl.teacherUserId.value\r\n      ).subscribe((res: any) => {\r\n        //   console.log('GetMaterialByLesson', res);\r\n        this.materials = res;\r\n      });\r\n    }\r\n  }\r\n\r\n  geItemPrice() {\r\n    if (\r\n      this.paymentFormCtrl.isPaymentExcel.value == false &&\r\n      this.paymentFormCtrl.itemId.value\r\n    ) {\r\n      this.CashPaymentService.geItemPrice(\r\n        this.paymentFormCtrl.itemId.value,\r\n        this.paymentFormCtrl.userId.value,\r\n        this.paymentFormCtrl.itemTypeId.value\r\n      ).subscribe((res: any) => {\r\n        if (res.price) this.paymentFormCtrl.itemPrice.setValue(res.price);\r\n        if (res.returnValue == 1) {\r\n          //not prushased\r\n          this.alreadyBought = false;\r\n        } else if (res.returnValue == -5) {\r\n          // already Bought\r\n          this.toastr.warning(\"تم الشراء مسبقا\");\r\n          this.alreadyBought = true;\r\n        } else if (res.returnValue == 95) {\r\n          //unavilable\r\n          this.toastr.warning(\"غير متاح حاليا\");\r\n          this.alreadyBought = true;\r\n        } else console.log(\"gerMaterialPrice\", res);\r\n      });\r\n    }\r\n  }\r\n\r\n  isPaymentExcelValidators() {\r\n    let isPaymentExcel = this.paymentFormCtrl.isPaymentExcel.value;\r\n    if (isPaymentExcel == false) {\r\n      this.paymentFormCtrl.uploadedFile.setValue(\"\");\r\n      this.paymentFormCtrl.uploadedFile.clearValidators();\r\n    }\r\n\r\n    if (isPaymentExcel == true) {\r\n      this.paymentFormCtrl.uploadedFile.setValidators([Validators.required]);\r\n    }\r\n\r\n    this.paymentFormCtrl.itemTypeId.updateValueAndValidity();\r\n    this.paymentFormCtrl.uploadedFile.updateValueAndValidity();\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.userId;\r\n  }\r\n\r\n  getFormValidationErrors(form: FormGroup) {\r\n    let totalErrors = 0;\r\n    this.Errors = [];\r\n    Object.keys(form.controls).forEach((key) => {\r\n      const controlErrors: ValidationErrors = form.get(key).errors;\r\n      if (controlErrors != null) {\r\n        totalErrors++;\r\n        Object.keys(controlErrors).forEach((keyError) => {\r\n          // Errors.push(controlErrors[keyError]);\r\n          this.Errors.push({ key: key, error: keyError });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  itemTypeIdValidators() {\r\n    let itemTypeId = this.paymentFormCtrl.itemTypeId.value;\r\n    if (itemTypeId == 4) {\r\n      this.paymentFormCtrl.balance.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n      this.paymentFormCtrl.itemId.reset();\r\n      this.paymentFormCtrl.itemId.clearValidators();\r\n    }\r\n\r\n    if (itemTypeId != 4) {\r\n      this.paymentFormCtrl.itemId.setValidators([Validators.required]);\r\n      this.paymentFormCtrl.balance.reset();\r\n      this.paymentFormCtrl.balance.clearValidators();\r\n    }\r\n\r\n    this.paymentFormCtrl.itemId.updateValueAndValidity();\r\n    this.paymentFormCtrl.balance.updateValueAndValidity();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder.replace(\r\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\",\r\n            \"\"\r\n          ),\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.PaymentByExcel = data;\r\n        //  console.log(data);\r\n        this.paymentForm.controls[\"uploadedFile\"].setValue(data);\r\n      };\r\n    }\r\n  }\r\n\r\n  resetCashForm() {\r\n    this.alreadyBought = false;\r\n    this.lessons = [];\r\n    this.units = [];\r\n    this.materials = [];\r\n    this.paymentFormCtrl.teacherUserId.setValue(null);\r\n    this.paymentFormCtrl.subjectId.setValue(null);\r\n    this.paymentFormCtrl.unitId.setValue(null);\r\n    this.paymentFormCtrl.lessonId.setValue(null);\r\n    this.paymentFormCtrl.itemId.setValue(null);\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Balance.ManualPayment\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"searchForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Name\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"searchedName\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"code\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"centerCode\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"searchedMail\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          (click)=\"CashPaymentSearch()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Balance.ManualPayment\" | translate }} -\r\n        {{ paymentFormCtrl.userName?.value }}\r\n\r\n        <button\r\n          *ngIf=\"paymentFormCtrl.isPaymentExcel.value\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          (click)=\"getPaymentsExcelSheetSample()\"\r\n          matTooltip=\"Download Excel Sheet Sample\"\r\n        >\r\n          <i class=\"fa fa-download\"></i>\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"paymentForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group formControlName=\"isPaymentExcel\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        (change)=\"resetCashForm()\"\r\n                      >\r\n                        {{ \"labels.Individually\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        (change)=\"resetCashForm()\"\r\n                      >\r\n                        {{ \"labels.group\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- Student Data -->\r\n                <ng-container *ngIf=\"!paymentFormCtrl.isPaymentExcel.value\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userName\">الإسم بالكامل</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userName\"\r\n                      formControlName=\"userName\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userEmail\">البريد الإلكترونى</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userEmail\"\r\n                      formControlName=\"userEmail\"\r\n                      type=\"email\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"currentBalance\">الرصيد الحالي</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"currentBalance\"\r\n                      formControlName=\"currentBalance\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <label for=\"userMobile\">رقم الموبايل</label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      id=\"userMobile\"\r\n                      formControlName=\"userMobile\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <!--  items TypeId Lecture - Exam - Template - Balance -->\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group\r\n                    name=\"itemTypeId\"\r\n                    formControlName=\"itemTypeId\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"6\" (change)=\"resetCashForm()\">\r\n                        {{ \"labels.Lecture\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <ng-container *ngIf=\"!paymentFormCtrl.isPaymentExcel.value\">\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button\r\n                          [value]=\"5\"\r\n                          (change)=\"resetCashForm()\"\r\n                        >\r\n                          {{ \"labels.Exam\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button\r\n                          [value]=\"11\"\r\n                          (change)=\"resetCashForm()\"\r\n                        >\r\n                          {{ \"labels.Template\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-12\">\r\n                        <mat-radio-button\r\n                          [value]=\"4\"\r\n                          (change)=\"resetCashForm()\"\r\n                        >\r\n                          {{ \"labels.Balance\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                    </ng-container>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.itemTypeId.value != 4\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                      <mat-select formControlName=\"teacherUserId\">\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let teacher of Teachers\"\r\n                          [value]=\"teacher.teacherUserId\"\r\n                        >\r\n                          {{ teacher.teacher_ar_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <!--\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"stageId\"\r\n                        (selectionChange)=\"\r\n                          getYearsByStageId(paymentFormCtrl.stageId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let stage of stages\"\r\n                          [value]=\"stage.Value\"\r\n                        >\r\n                          {{ stage.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"yearId\"\r\n                        (selectionChange)=\"\r\n                          getSubjectsByYearId(\r\n                            paymentFormCtrl.yearId.value,\r\n                            paymentFormCtrl.teacherUserId.value\r\n                          )\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let year of years\"\r\n                          [value]=\"year.Value\"\r\n                        >\r\n                          {{ year.Text_Ar }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div> -->\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <app-subjects-by-teacherid\r\n                      [subjectControl]=\"paymentFormCtrl.subjectId\"\r\n                      [teacherIdControl]=\"paymentFormCtrl.teacherUserId\"\r\n                      [submitted]=\"submitted\"\r\n                      (selectionChange)=\"getUnitsBySubjectId($event)\"\r\n                    >\r\n                    </app-subjects-by-teacherid>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"unitId\"\r\n                        (selectionChange)=\"\r\n                          getLessonsByUnitId(paymentFormCtrl.unitId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let unit of units\"\r\n                          [value]=\"unit.Value\"\r\n                        >\r\n                          {{ unit.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"lessonId\"\r\n                        (selectionChange)=\"\r\n                          GetItemsByLesson(paymentFormCtrl.lessonId.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let lesson of lessons\"\r\n                          [value]=\"lesson.Value\"\r\n                        >\r\n                          {{ lesson.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"Material.Lecture\" | translate\r\n                      }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"itemId\"\r\n                        (selectionChange)=\"geItemPrice()\"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let material of materials\"\r\n                          [value]=\"material.Value\"\r\n                        >\r\n                          {{ material.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          paymentFormCtrl.itemId.invalid &&\r\n                          (paymentFormCtrl.itemId.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"paymentFormCtrl.itemId.errors?.required\">\r\n                          {{ \"labels.MustChoosevalue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div\r\n                    class=\"col-md-3 col-12\"\r\n                    *ngIf=\"!paymentFormCtrl.isPaymentExcel.value\"\r\n                  >\r\n                    <mat-label>{{ \"labels.Price\" | translate }}</mat-label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      formControlName=\"itemPrice\"\r\n                      type=\"number\"\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.itemTypeId.value == 4\">\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"teacherUserId\"\r\n                        (selectionChange)=\"\r\n                          getStageByTeacherId(\r\n                            paymentFormCtrl.teacherUserId.value\r\n                          )\r\n                        \"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let teacher of Teachers\"\r\n                          [value]=\"teacher.teacherUserId\"\r\n                        >\r\n                          {{ teacher.teacher_ar_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"Balance.Balance\" | translate }}</mat-label>\r\n                      <input matInput type=\"number\" formControlName=\"balance\" />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          paymentFormCtrl.balance.invalid &&\r\n                          (paymentFormCtrl.balance.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"paymentFormCtrl.balance.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"paymentFormCtrl.balance.errors?.minusNum\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"this.paymentForm\"></span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"paymentFormCtrl.isPaymentExcel.value\">\r\n                  <div class=\"col-md-4 col-12\">\r\n                    <label for=\"uploadedFile\">Excel Sheet</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".xlsx,.xls\"\r\n                      (change)=\"onChange($event)\"\r\n                      name=\"uploadedFile\"\r\n                      class=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"paymentFormCtrl.isPaymentExcel.value == false\"\r\n          [disabled]=\"alreadyBought\"\r\n          id=\"submitButton\"\r\n          type=\"button\"\r\n          (click)=\"AddCashPayment()\"\r\n          class=\"btn btn-primary pull-left font-dro\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i> اشتراك\r\n        </button>\r\n\r\n        <!--  [disabled]=\"!this.paymentFormCtrl.uploadedFile.value\" -->\r\n        <button\r\n          *ngIf=\"paymentFormCtrl.isPaymentExcel.value == true\"\r\n          id=\"submitButton\"\r\n          type=\"button\"\r\n          (click)=\"ManualPaymentByExcel()\"\r\n          class=\"btn btn-primary pull-left font-dro\"\r\n        >\r\n          <i class=\"fa fa-upload\"></i> Upload\r\n        </button>\r\n        <!-- <span>\r\n          <ng-container *ngFor=\"let error of this.Errors\">\r\n            {{ error.key }} - {{ error.error }}\r\n          </ng-container>\r\n        </span> -->\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"userPaymentsHistories?.length != 0\">\r\n  <table class=\"table table-striped table-hover table-full-width rtl\">\r\n    <thead>\r\n      <tr>\r\n        <!--\r\n       <th>النوع</th>\r\n       <th>الاسم</th>\r\n        <th>المادة</th> -->\r\n        <th>السنتر</th>\r\n        <th>المدرس</th>\r\n        <th>القيمه</th>\r\n        <th>طريقة الاشتراك</th>\r\n        <th>التاريخ</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        *ngFor=\"\r\n          let payment of userPaymentsHistories\r\n            | paginate\r\n              : {\r\n                  itemsPerPage: 10,\r\n                  currentPage: p,\r\n                  totalItems: itemsCount\r\n                };\r\n          let i = index;\r\n          trackBy: track\r\n        \"\r\n      >\r\n        <td>{{ payment?.centerName }}</td>\r\n        <td>{{ payment?.teacherName }}</td>\r\n        <td>{{ payment?.amount }}</td>\r\n        <td>{{ payment?.payment_method }}</td>\r\n        <td>{{ payment?.Date | NewDate }} - {{ payment?.Date | Time }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <div class=\"paginator-box\" *ngIf=\"itemsCount > 10\">\r\n    <pagination-controls\r\n      dir=\"ltr\"\r\n      [maxSize]=\"maxSize\"\r\n      (pageChange)=\"p = $event; getPaymentsHistory()\"\r\n      previousLabel=\"\"\r\n      nextLabel=\"\"\r\n    >\r\n    </pagination-controls>\r\n  </div>\r\n</ng-container>\r\n","import { GeneralDropdownVM } from \"app/admin/models/admin/educations\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { PointsService } from \"./../../../services/Admin/points.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  IAddExamPointsVM,\r\n  IAddLecturesPointsVM,\r\n  IExamPointVM,\r\n  ILecturePointVM,\r\n  IPointSystemVM,\r\n} from \"app/admin/models/admin/point\";\r\nimport { teacherByEduCompId } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-points-setup\",\r\n  templateUrl: \"./points-setup.component.html\",\r\n  styleUrls: [\"./points-setup.component.scss\"],\r\n})\r\nexport class PointsSetupComponent implements OnInit {\r\n  Teachers: teacherByEduCompId[];\r\n  subjects: GeneralDropdownVM[];\r\n  lecturePoints: IPointSystemVM[];\r\n  ExamPoints: IPointSystemVM[];\r\n  EduCompId: any;\r\n\r\n  lecturesForm!: FormGroup;\r\n  lecsubmitted = false;\r\n\r\n  ExamForm!: FormGroup;\r\n  ExamSubmitted = false;\r\n\r\n  LecturePage: number = 1;\r\n  ExamPage: number = 1;\r\n  maxSize = 9;\r\n  SubjectId: number;\r\n  teacherUserId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authserv: AuthService,\r\n    private GeneralService: GeneralService,\r\n    private PointsService: PointsService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.getTeachersByEducompId();\r\n\r\n    this.lecturesForm = this.fb.group({\r\n      ByQuestion: [false, [Validators.required]],\r\n      from: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      to: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      value: [0, [Validators.required, CustomeValidator.minusNum]],\r\n      questionAttempt: [true, [Validators.required]],\r\n      questionAttempts: [0, [CustomeValidator.minusNum]],\r\n      attendancevalue: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      absencevalue: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.ExamForm = this.fb.group({\r\n      ByQuestion: [false, [Validators.required]],\r\n      from: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      to: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      value: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.changeQuestionAttemptsValidation(true);\r\n    this.ByQuestionValidators(true);\r\n    this.ByQuestionValidatorsLectures(true);\r\n  }\r\n\r\n  get lecturesFormCtrls() {\r\n    return this.lecturesForm.controls;\r\n  }\r\n\r\n  get ExamFormCtrls() {\r\n    return this.ExamForm.controls;\r\n  }\r\n\r\n  addLecturePoint() {\r\n    this.lecsubmitted = true;\r\n    if (this.teacherUserId == null) {\r\n      this.toastr.warning(\"Please select teacher\");\r\n      return;\r\n    }\r\n\r\n    // if (this.SubjectId == null) {\r\n    //   this.toastr.warning(\"Please select Subject\");\r\n    //   return;\r\n    // }\r\n\r\n    let data: IAddLecturesPointsVM = {\r\n      ByQuestion: this.lecturesFormCtrls?.ByQuestion.value,\r\n      from: null, //this.lecturesFormCtrls?.from.value,\r\n      to: null, // this.lecturesFormCtrls?.to.value,\r\n      selectedTeacherId: this.teacherUserId,\r\n      value: this.lecturesFormCtrls?.value.value,\r\n      absencevalue: this.lecturesFormCtrls?.absencevalue.value,\r\n      attendancevalue: this.lecturesFormCtrls?.attendancevalue.value,\r\n      questionAttempt: this.lecturesFormCtrls?.questionAttempt.value,\r\n      questionAttempts: this.lecturesFormCtrls?.questionAttempts.value,\r\n      isLecture: true,\r\n    };\r\n\r\n    if (this.lecturesForm.valid) {\r\n      this.spinner.show();\r\n      this.PointsService.addPoints(this.EduCompId, data).subscribe(\r\n        (res: any) => {\r\n          //console.log(\"addLecturePoint\", res);\r\n\r\n          if (res.returnValue == 1) {\r\n            this.getLeturePoints();\r\n            this.toastr.success(\"تم إاضافة النقاط\");\r\n            this.lecsubmitted = false;\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  //Exams Points\r\n  addExamPoint() {\r\n    this.ExamSubmitted = true;\r\n\r\n    if (this.teacherUserId == null) {\r\n      this.toastr.warning(\"Please select teacher\");\r\n      return;\r\n    }\r\n\r\n    // if (this.SubjectId == null) {\r\n    //   this.toastr.warning(\"Please select Subject\");\r\n    //   return;\r\n    // }\r\n\r\n    let data: IAddExamPointsVM = {\r\n      ByQuestion: this.ExamFormCtrls?.ByQuestion.value,\r\n      from: this.ExamFormCtrls?.from.value,\r\n      to: this.ExamFormCtrls?.to.value,\r\n      value: this.ExamFormCtrls?.value.value,\r\n      selectedTeacherId: this.teacherUserId,\r\n      isLecture: false,\r\n    };\r\n    if (this.ExamForm.valid) {\r\n      this.spinner.show();\r\n      this.PointsService.addPoints(this.EduCompId, data).subscribe(\r\n        (res: any) => {\r\n          //console.log(\"addExamPoint\", res);\r\n          if (res.returnValue == 1) {\r\n            this.getExamPoints();\r\n            this.toastr.success(\"تم إاضافة النقاط\");\r\n            this.ExamSubmitted = false;\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getLeturePoints() {\r\n    this.spinner.show();\r\n    this.PointsService.getPoints<IPointSystemVM[]>(\r\n      this.teacherUserId,\r\n      4, //type= 4 for lecture\r\n      this.EduCompId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        console.log(\"LeturePoints\", res);\r\n        this.lecturePoints = res;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  getExamPoints() {\r\n    this.spinner.show();\r\n    this.PointsService.getPoints<IPointSystemVM[]>(\r\n      this.teacherUserId,\r\n      1, //type= 1 for exam\r\n      this.EduCompId\r\n    ).subscribe((res) => {\r\n      if (res) {\r\n        console.log(\"ExamPoints\", res);\r\n        this.ExamPoints = res;\r\n      }\r\n\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  deletePoint(point: IPointSystemVM, type: string) {\r\n    this.spinner.show();\r\n    this.PointsService.deletePoint(point.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        if (type == \"lecture\") {\r\n          let i = this.lecturePoints.findIndex((e) => e == point);\r\n          this.lecturePoints.splice(i, 1);\r\n        } else {\r\n          //type ==Exam\r\n          let i = this.ExamPoints.findIndex((e) => e == point);\r\n          this.ExamPoints.splice(i, 1);\r\n        }\r\n\r\n        this.toastr.success(\"تم الحذف\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  DeleatePointDialog(point: IPointSystemVM, type: string): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${point.Value}: points`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deletePoint(point, type);\r\n      });\r\n  }\r\n\r\n  //############################################################################\r\n\r\n  //######################################################################\r\n  getTeachersByEducompId() {\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n      }\r\n    );\r\n  }\r\n\r\n  onChangeTeacher(teacheruserId: number) {\r\n    if (teacheruserId != null) {\r\n      this.teacherUserId = teacheruserId;\r\n      this.getExamPoints();\r\n      this.getLeturePoints();\r\n      // this.GeneralService.getSubjectByTeacherId(teacheruserId).subscribe(\r\n      //   (res: any) => {\r\n      //     this.subjects = res.lsts;\r\n      //   }\r\n      // );\r\n    }\r\n  }\r\n\r\n  onChangeSunbject(SubjectId: number) {\r\n    this.SubjectId = SubjectId;\r\n    this.ExamFormCtrls.selectedSubjectId.setValue(SubjectId);\r\n  }\r\n\r\n  changeQuestionAttemptsValidation(questionAttempt: boolean) {\r\n    if (questionAttempt == true) {\r\n      this.lecturesForm.controls[\"questionAttempts\"].setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n    }\r\n\r\n    if (questionAttempt == false) {\r\n      this.lecturesForm.controls[\"questionAttempts\"].reset();\r\n      this.lecturesForm.controls[\"questionAttempts\"].clearValidators();\r\n    }\r\n    this.lecturesFormCtrls.questionAttempts.updateValueAndValidity();\r\n  }\r\n\r\n  ByQuestionValidators(ByQuestion: boolean) {\r\n    if (ByQuestion == true) {\r\n      this.ExamFormCtrls.from.reset();\r\n      this.ExamFormCtrls.from.clearValidators();\r\n      this.ExamFormCtrls.to.reset();\r\n      this.ExamFormCtrls.to.clearValidators();\r\n    } else {\r\n      this.ExamFormCtrls.from.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.ExamFormCtrls.to.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.bigZero,\r\n      ]);\r\n    }\r\n    this.ExamFormCtrls.from.updateValueAndValidity();\r\n    this.ExamFormCtrls.to.updateValueAndValidity();\r\n  }\r\n\r\n  ByQuestionValidatorsLectures(ByQuestion: boolean) {\r\n    if (ByQuestion == true) {\r\n      this.lecturesFormCtrls.from.reset();\r\n      this.lecturesFormCtrls.from.clearValidators();\r\n      this.lecturesFormCtrls.to.reset();\r\n      this.lecturesFormCtrls.to.clearValidators();\r\n    } else {\r\n      this.lecturesFormCtrls.from.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.lecturesFormCtrls.to.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.bigZero,\r\n      ]);\r\n    }\r\n    this.lecturesFormCtrls.from.updateValueAndValidity();\r\n    this.lecturesFormCtrls.to.updateValueAndValidity();\r\n  }\r\n\r\n  track(index: number, point: ILecturePointVM): number {\r\n    return point.Id;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Points\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <!-- Teacher -->\r\n          <div class=\"col-lg-6 col-12\">\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n              <mat-select\r\n                name=\"teacherUserId\"\r\n                #teacherUserId\r\n                (selectionChange)=\"onChangeTeacher(teacherUserId.value)\"\r\n                required\r\n              >\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let teacher of Teachers\"\r\n                  [value]=\"teacher.teacherUserId\"\r\n                >\r\n                  {{ teacher.teacher_ar_name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <!-- Subject -->\r\n          <!-- <div class=\"col-lg-6 col-12\">\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n              <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n              <mat-select\r\n                name=\"subjectId\"\r\n                #subjectId\r\n                (selectionChange)=\"onChangeSunbject(subjectId.value)\"\r\n                required\r\n              >\r\n                <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                <mat-option\r\n                  *ngFor=\"let subject of subjects\"\r\n                  [value]=\"subject.Value\"\r\n                >\r\n                  {{ subject.Text }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-tab-group>\r\n              <!-- Start Lecture Points setup -->\r\n              <mat-tab label=\"{{ 'Material.Lectures' | translate }}\">\r\n                <form [formGroup]=\"lecturesForm\">\r\n                  <div class=\"row\">\r\n                    <!-- ByQuestion -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.ByQuestionLabel\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (change)=\"ByQuestionValidatorsLectures(true)\"\r\n                          >\r\n                            {{ \"labels.ByQuestion\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (change)=\"ByQuestionValidatorsLectures(false)\"\r\n                            >{{ \"labels.ByGroupQuestions\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <!-- lecturesFormCtrls.ByQuestion.value == false -->\r\n                    <ng-container *ngIf=\"\">\r\n                      <!--  from    -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <mat-form-field appearance=\"legacy\">\r\n                          <mat-label>\r\n                            {{ \"labels.From\" | translate }}\r\n                          </mat-label>\r\n                          <input\r\n                            matInput\r\n                            type=\"number\"\r\n                            formControlName=\"from\"\r\n                          />\r\n                          <mat-hint\r\n                            class=\"text-danger\"\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.from.invalid &&\r\n                              (lecturesFormCtrls.from.touched || ExamSubmitted)\r\n                            \"\r\n                          >\r\n                            <span\r\n                              *ngIf=\"\r\n                                lecturesFormCtrls.from.errors?.required ||\r\n                                lecturesFormCtrls.from.errors?.minusNum\r\n                              \"\r\n                            >\r\n                              You must enter a value.\r\n                            </span>\r\n                          </mat-hint>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <!-- to  -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <mat-form-field appearance=\"legacy\">\r\n                          <mat-label>\r\n                            {{ \"labels.To\" | translate }}\r\n                          </mat-label>\r\n                          <input matInput type=\"number\" formControlName=\"to\" />\r\n                          <mat-hint\r\n                            class=\"text-danger\"\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.to.invalid &&\r\n                              (lecturesFormCtrls.to.touched || ExamSubmitted)\r\n                            \"\r\n                          >\r\n                            <span\r\n                              *ngIf=\"\r\n                                lecturesFormCtrls.to.errors?.required ||\r\n                                lecturesFormCtrls.to.errors?.minusNum\r\n                              \"\r\n                            >\r\n                              You must enter a value.\r\n                            </span>\r\n                          </mat-hint>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </ng-container>\r\n\r\n                    <!-- value  ==> points Number   -->\r\n                    <!-- <div class=\"col-lg-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"value\" />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            lecturesFormCtrls.value.invalid &&\r\n                            (lecturesFormCtrls.value.touched || lecsubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.value.errors?.required ||\r\n                              lecturesFormCtrls.value.errors?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!--  attendance value   -->\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.AttendancePoints\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"number\"\r\n                          formControlName=\"attendancevalue\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            lecturesFormCtrls.attendancevalue.invalid &&\r\n                            (lecturesFormCtrls.attendancevalue.touched ||\r\n                              lecsubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.attendancevalue.errors\r\n                                ?.required ||\r\n                              lecturesFormCtrls.attendancevalue.errors?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!--  absence value   -->\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.AbsencePoints\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"number\"\r\n                          formControlName=\"absencevalue\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            lecturesFormCtrls.absencevalue.invalid &&\r\n                            (lecturesFormCtrls.absencevalue.touched ||\r\n                              lecsubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.absencevalue.errors?.required ||\r\n                              lecturesFormCtrls.absencevalue.errors?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- questionAttempt -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.questionAttempt\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group\r\n                        formControlName=\"questionAttempt\"\r\n                        class=\"row\"\r\n                      >\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (click)=\"changeQuestionAttemptsValidation(true)\"\r\n                          >\r\n                            {{ \"labels.Yes\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (click)=\"changeQuestionAttemptsValidation(false)\"\r\n                            >{{ \"labels.No\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <!--  question Attempts    -->\r\n                    <!-- <div\r\n                      class=\"col-lg-4 col-12\"\r\n                      *ngIf=\"lecturesFormCtrls.questionAttempt.value == true\"\r\n                    >\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.questionAttempts\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"number\"\r\n                          formControlName=\"questionAttempts\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            lecturesFormCtrls.questionAttempts.invalid &&\r\n                            (lecturesFormCtrls.questionAttempts.touched ||\r\n                              lecsubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              lecturesFormCtrls.questionAttempts.errors\r\n                                ?.required ||\r\n                              lecturesFormCtrls.questionAttempts.errors\r\n                                ?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div> -->\r\n                  </div>\r\n                  <mat-card-actions align=\"end\">\r\n                    <button\r\n                      mat-raised-button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary\"\r\n                      (click)=\"addLecturePoint()\"\r\n                    >\r\n                      {{ \"General.Add\" | translate }}\r\n                    </button>\r\n                  </mat-card-actions>\r\n                </form>\r\n\r\n                <!--  Lectures points table    -->\r\n                <ng-container>\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <!-- <th>\r\n                          {{ \"labels.PointApplyedTo\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.questionAttempts\" | translate }}\r\n                        </th> -->\r\n\r\n                        <th>\r\n                          {{ \"labels.AttendancePoints\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.AbsencePoints\" | translate }}\r\n                        </th>\r\n                        <!--\r\n                        <th>\r\n                          {{ \"labels.From\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.To\" | translate }}\r\n                        </th> -->\r\n                        <th>actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr\r\n                        *ngFor=\"\r\n                          let point of lecturePoints\r\n                            | paginate\r\n                              : {\r\n                                  itemsPerPage: 9,\r\n                                  currentPage: LecturePage,\r\n                                  id: 'lecture'\r\n                                };\r\n                          let i = index;\r\n                          trackBy: track\r\n                        \"\r\n                      >\r\n                        <!-- <td\r\n                          *ngIf=\"\r\n                            point.FromValue == null && point.ToValue == null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </td>\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue != null && point.ToValue != null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByGroupQuestions\" | translate }}\r\n                        </td>\r\n                        <td>{{ point.Value }}</td>\r\n                        <td>\r\n                          {{ point?.QuestionAttempts }}\r\n                        </td> -->\r\n                        <td>\r\n                          {{ point.AttendanceValue }}\r\n                        </td>\r\n                        <td>\r\n                          {{ point.AbsenceValue }}\r\n                        </td>\r\n                        <!-- <td>\r\n                          {{ point.FromValue }}\r\n                        </td>\r\n                        <td>{{ point.ToValue }}</td> -->\r\n                        <td>\r\n                          <button\r\n                            (click)=\"DeleatePointDialog(point, 'lecture')\"\r\n                            mat-mini-fab\r\n                            color=\"warn\"\r\n                          >\r\n                            <mat-icon>delete</mat-icon>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                    <!-- Start  Pagination -->\r\n                    <div class=\"paginator-box\">\r\n                      <pagination-controls\r\n                        *ngIf=\"lecturePoints?.length > 9\"\r\n                        [maxSize]=\"maxSize\"\r\n                        (pageChange)=\"LecturePage = $event\"\r\n                        previousLabel=\"\"\r\n                        nextLabel=\"\"\r\n                        id=\"lecture\"\r\n                      >\r\n                      </pagination-controls>\r\n                    </div>\r\n                  </table>\r\n                </ng-container>\r\n              </mat-tab>\r\n\r\n              <!--  #######################################################################################################################################\r\n              ##############################################################################################################################################-->\r\n\r\n              <!-- Start Exams Points setup -->\r\n              <mat-tab label=\"{{ 'Material.Exams' | translate }}\">\r\n                <form [formGroup]=\"ExamForm\">\r\n                  <div class=\"row\">\r\n                    <!--  ByQuestion    -->\r\n                    <!-- <div class=\"col-12\">\r\n                      <mat-label>\r\n                        {{ \"labels.ByQuestionLabel\" | translate }}\r\n                      </mat-label>\r\n                      <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                        <div class=\"col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"true\"\r\n                            (click)=\"ByQuestionValidators(true)\"\r\n                          >\r\n                            {{ \"labels.ByQuestion\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                          <mat-radio-button\r\n                            [value]=\"false\"\r\n                            (click)=\"ByQuestionValidators(false)\"\r\n                            >{{ \"labels.ByExam\" | translate }}\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div> -->\r\n\r\n                    <ng-container\r\n                      *ngIf=\"ExamFormCtrls.ByQuestion.value == false\"\r\n                    >\r\n                      <!--  from    -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <mat-form-field appearance=\"legacy\">\r\n                          <mat-label>\r\n                            {{ \"labels.From\" | translate }}\r\n                          </mat-label>\r\n                          <input\r\n                            matInput\r\n                            type=\"number\"\r\n                            formControlName=\"from\"\r\n                          />\r\n                          <mat-hint\r\n                            class=\"text-danger\"\r\n                            *ngIf=\"\r\n                              ExamFormCtrls.from.invalid &&\r\n                              (ExamFormCtrls.from.touched || ExamSubmitted)\r\n                            \"\r\n                          >\r\n                            <span\r\n                              *ngIf=\"\r\n                                ExamFormCtrls.from.errors?.required ||\r\n                                ExamFormCtrls.from.errors?.minusNum\r\n                              \"\r\n                            >\r\n                              You must enter a value.\r\n                            </span>\r\n                          </mat-hint>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <!-- to  -->\r\n                      <div class=\"col-lg-4 col-12\">\r\n                        <mat-form-field appearance=\"legacy\">\r\n                          <mat-label>\r\n                            {{ \"labels.To\" | translate }}\r\n                          </mat-label>\r\n                          <input matInput type=\"number\" formControlName=\"to\" />\r\n                          <mat-hint\r\n                            class=\"text-danger\"\r\n                            *ngIf=\"\r\n                              ExamFormCtrls.to.invalid &&\r\n                              (ExamFormCtrls.to.touched || ExamSubmitted)\r\n                            \"\r\n                          >\r\n                            <span\r\n                              *ngIf=\"\r\n                                ExamFormCtrls.to.errors?.required ||\r\n                                ExamFormCtrls.to.errors?.minusNum\r\n                              \"\r\n                            >\r\n                              You must enter a value.\r\n                            </span>\r\n                          </mat-hint>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </ng-container>\r\n                    <!-- value ==> points Number  -->\r\n                    <div class=\"col-lg-4 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"value\" />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            ExamFormCtrls.value.invalid &&\r\n                            (ExamFormCtrls.value.touched || ExamSubmitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              ExamFormCtrls.value.errors?.required ||\r\n                              ExamFormCtrls.value.errors?.minusNum\r\n                            \"\r\n                          >\r\n                            You must enter a value.\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <mat-card-actions align=\"end\">\r\n                    <button\r\n                      mat-raised-button\r\n                      type=\"button\"\r\n                      class=\"btn btn-primary\"\r\n                      (click)=\"addExamPoint()\"\r\n                    >\r\n                      {{ \"General.Add\" | translate }}\r\n                    </button>\r\n                  </mat-card-actions>\r\n                </form>\r\n\r\n                <!-- Start Exams points Table -->\r\n                <ng-container>\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.From\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.To\" | translate }}\r\n                        </th>\r\n\r\n                        <th>\r\n                          {{ \"labels.pointsNumber\" | translate }}\r\n                        </th>\r\n\r\n                        <th>actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr\r\n                        *ngFor=\"\r\n                          let point of ExamPoints\r\n                            | paginate\r\n                              : {\r\n                                  itemsPerPage: 9,\r\n                                  currentPage: ExamPage,\r\n                                  id: 'exam'\r\n                                };\r\n                          let i = index;\r\n                          trackBy: track\r\n                        \"\r\n                      >\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue == null && point.ToValue == null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByQuestion\" | translate }}\r\n                        </td>\r\n                        <td\r\n                          *ngIf=\"\r\n                            point.FromValue != null && point.ToValue != null\r\n                          \"\r\n                        >\r\n                          {{ \"labels.ByGroupQuestions\" | translate }}\r\n                        </td>\r\n                        <td>{{ point.FromValue || \"-\" }}</td>\r\n                        <td>{{ point.ToValue || \"-\" }}</td>\r\n                        <td>{{ point.Value || \"-\" }}</td>\r\n                        <td>\r\n                          <button\r\n                            (click)=\"DeleatePointDialog(point, 'Exam')\"\r\n                            mat-mini-fab\r\n                            color=\"warn\"\r\n                          >\r\n                            <mat-icon>delete</mat-icon>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                    <div class=\"paginator-box\">\r\n                      <pagination-controls\r\n                        *ngIf=\"ExamPoints?.length > 9\"\r\n                        [maxSize]=\"maxSize\"\r\n                        (pageChange)=\"ExamPage = $event\"\r\n                        previousLabel=\"\"\r\n                        nextLabel=\"\"\r\n                        id=\"exam\"\r\n                      >\r\n                      </pagination-controls>\r\n                    </div>\r\n                  </table>\r\n                </ng-container>\r\n              </mat-tab>\r\n            </mat-tab-group>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { teacherBySubEduComp } from 'app/admin/models/admin/educations';\r\nimport { GeneralService } from 'app/shared/services/General/general.service';\r\nimport { AuthService } from 'app/shared/services/auth/auth.service'; \r\nimport { SubjectsService } from 'app/admin/services/Admin/subjects.service'; \r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomeValidator } from 'app/shared/validators/customeValid.validator'; \r\n\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-question-student-settings',\r\n  templateUrl: './question-student-settings.component.html',\r\n  styleUrls: ['./question-student-settings.component.scss'],\r\n})\r\nexport class QuestionStudentsSettingsComponent implements OnInit {\r\n  EduCompId: any;\r\n  subjectId: any;\r\n  Teachers: teacherBySubEduComp[] = [];\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private SubjectsService: SubjectsService,\r\n    private authserv: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.subjectId = params.get('subjectId');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.getTeacherByEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      subjectId: [this.subjectId, Validators.required],\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      teacherId: ['', Validators.required],\r\n      typeId: ['', Validators.required],\r\n      PrivatePrice: ['', Validators.required],\r\n      PublicPrice: ['', Validators.required],\r\n      IfPublicAccessibleAfterLecturesCount: ['', Validators.required],\r\n    });\r\n    this.changeType();\r\n  }\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //On Add Question Settinges\r\n  addQuestionSettings() {\r\n    this.submitted = true;\r\n    let isValid = this.myForm.valid;\r\n    if (isValid) {\r\n      $('#loadingGif').show();\r\n      this.SubjectsService.addQuestionSettings(\r\n        this.EduCompId,\r\n        this.myForm.value\r\n      ).subscribe((res: any) => {\r\n        if (res.returnString == 'Success' && res.returnValue == 1) {\r\n          this.toastr.success('settings added successfully');\r\n          this.resetManual();\r\n          $('#loadingGif').hide();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //get Teacher By EduCompId\r\n  getTeacherByEduCompId() {\r\n    $('#loadingGif').show();\r\n    this.SubjectsService.getTeacherBySubjectAndEduCompId(\r\n      this.EduCompId,\r\n      this.subjectId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.Teachers = res.teachers;\r\n        $('#loadingGif').hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  //OnChange  Type\r\n  changeType() {\r\n    this.myForm.controls['typeId'].valueChanges.subscribe((data) => {\r\n      this.changeValidators();\r\n    });\r\n  }\r\n\r\n  //OnChange Type Change Validators\r\n  changeValidators() {\r\n    let typeId = this.myForm.controls['typeId'].value;\r\n\r\n    if (typeId == '1' || typeId == 1) {\r\n      this.myForm.controls['PrivatePrice'].clearValidators();\r\n      this.myForm.controls['PrivatePrice'].reset();\r\n\r\n      this.myForm.controls['PublicPrice'].setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.myForm.controls[\r\n        'IfPublicAccessibleAfterLecturesCount'\r\n      ].setValidators([Validators.required, CustomeValidator.minusNum]);\r\n    }\r\n\r\n    if (typeId == '2' || typeId == 2) {\r\n      this.myForm.controls['PublicPrice'].clearValidators();\r\n      this.myForm.controls['PublicPrice'].reset();\r\n\r\n      this.myForm.controls[\r\n        'IfPublicAccessibleAfterLecturesCount'\r\n      ].clearValidators();\r\n\r\n      this.myForm.controls['IfPublicAccessibleAfterLecturesCount'].reset();\r\n\r\n      this.myForm.controls['PrivatePrice'].setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n    }\r\n\r\n    this.myForm.controls['PublicPrice'].updateValueAndValidity();\r\n    this.myForm.controls['PrivatePrice'].updateValueAndValidity();\r\n    this.myForm.controls[\r\n      'IfPublicAccessibleAfterLecturesCount'\r\n    ].updateValueAndValidity();\r\n  }\r\n\r\n  resetManual() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n    this.myForm.controls['teacherId'].setValue('');\r\n    this.myForm.controls['typeId'].setValue('');\r\n  }\r\n}\r\n","<div class=\"form-conainer\">\r\n    <div class=\"dc-content-title\">\r\n      <h5 class=\"xsm black header\">إعدادات اسئلة الطلاب</h5>\r\n      <button\r\n        routerLink=\"/dashboard/educational-subject/index\"\r\n        type=\"submit\"\r\n        class=\"btn btn-primary pull-left ad-qus font-dro\"\r\n      >\r\n        <i class=\"fa fa-arrow-right\"></i> الرجوع\r\n      </button>\r\n    </div>\r\n  \r\n    <div class=\"unit-body dc-item-body\">\r\n      <form [formGroup]=\"myForm\" class=\"form-horizontal\">\r\n        <div class=\"form-group\">\r\n          <label class=\"col-sm-3 control-label\"> المدرس </label>\r\n          <div class=\"col-sm-5\">\r\n            <select class=\"form-control font-dro\" formControlName=\"teacherId\">\r\n              <option value=\"\">المدرس</option>\r\n              <option\r\n                *ngFor=\"let teacher of Teachers\"\r\n                [value]=\"teacher.teacher_ID\"\r\n              >\r\n                {{ teacher.teacher_ar_name }}\r\n              </option>\r\n            </select>\r\n            <span\r\n              class=\"text-danger\"\r\n              *ngIf=\"\r\n                FormCtrl.teacherId.invalid &&\r\n                (FormCtrl.teacherId.touched || submitted)\r\n              \"\r\n            >\r\n              <span *ngIf=\"FormCtrl.teacherId.errors?.required\">\r\n                You must choose a value.\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label class=\"col-md-3 col-sm-3 control-label\"> النوع </label>\r\n          <div class=\"col-md-5\">\r\n            <select\r\n              class=\"form-control\"\r\n              #type\r\n              (change)=\"changeType()\"\r\n              formControlName=\"typeId\"\r\n            >\r\n              <option value=\"\">اختر</option>\r\n              <option value=\"1\">عام</option>\r\n              <option value=\"2\">خاص</option>\r\n              <option value=\"3\">إغلاق</option>\r\n            </select>\r\n            <span\r\n              class=\"text-danger\"\r\n              *ngIf=\"\r\n                FormCtrl.typeId.invalid && (FormCtrl.typeId.touched || submitted)\r\n              \"\r\n            >\r\n              <span *ngIf=\"FormCtrl.typeId.errors?.required\">\r\n                You must choose a value.\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n  \r\n        <div id=\"IsPrivateContainer\" *ngIf=\"type.value == '2'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> السعر </label>\r\n            <div class=\"col-sm-5\">\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"PrivatePrice\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.PrivatePrice.invalid &&\r\n                  (FormCtrl.PrivatePrice.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.PrivatePrice.errors?.required\">\r\n                  You must enter a value.\r\n                </span>\r\n                <span *ngIf=\"FormCtrl.PrivatePrice.errors?.minusNum\">\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div id=\"IsPublicContainer\" *ngIf=\"type.value == '1'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> السعر </label>\r\n            <div class=\"col-sm-5\">\r\n              <!-- Is public -->\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"PublicPrice\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.PublicPrice.invalid &&\r\n                  (FormCtrl.PublicPrice.touched || submitted)\r\n                \"\r\n              >\r\n                <span *ngIf=\"FormCtrl.PublicPrice.errors?.required\">\r\n                  You must enter a value.\r\n                </span>\r\n                <span *ngIf=\"FormCtrl.PublicPrice.errors?.minusNum\">\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- if Public show lecture Count -->\r\n          <div class=\"form-group\">\r\n            <label class=\"col-sm-3 control-label\"> عدد المحاضرات </label>\r\n            <div class=\"col-sm-5\">\r\n              <input\r\n                class=\"form-control font-dro\"\r\n                formControlName=\"IfPublicAccessibleAfterLecturesCount\"\r\n                type=\"number\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  FormCtrl.IfPublicAccessibleAfterLecturesCount.invalid &&\r\n                  (FormCtrl.IfPublicAccessibleAfterLecturesCount.touched ||\r\n                    submitted)\r\n                \"\r\n              >\r\n                <span\r\n                  *ngIf=\"\r\n                    FormCtrl.IfPublicAccessibleAfterLecturesCount.errors?.required\r\n                  \"\r\n                >\r\n                  You must enter a value.\r\n                </span>\r\n                <span\r\n                  *ngIf=\"\r\n                    FormCtrl.IfPublicAccessibleAfterLecturesCount.errors?.minusNum\r\n                  \"\r\n                >\r\n                  You must enter a correct value.\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"form-btn\">\r\n            <div class=\"form-actions\">\r\n              <button\r\n                (click)=\"addQuestionSettings()\"\r\n                type=\"button\"\r\n                class=\"btn btn-primary pull-left\"\r\n              >\r\n                إضافة\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\n import { ManageViewsService } from \"app/admin/services/Admin/manage-views.service\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n import { WhatsAppSetupService } from \"app/admin/services/whatsApp/whatsApp-setup.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { formValidationService } from \"app/shared/services/formValidation.service\";\r\n\r\n@Component({\r\n  selector: \"app-send-singular-whatsapp-msg\",\r\n  templateUrl: \"./send-singular-whatsapp-msg.component.html\",\r\n  styleUrls: [\"./send-singular-whatsapp-msg.component.scss\"],\r\n})\r\nexport class SendSingularWhatsappMsgComponent implements OnInit {\r\n  EduCompId: any;\r\n  myForm: FormGroup;\r\n  searchForm: FormGroup;\r\n  searchResponse: any;\r\n  errors: string[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private whatsappService: WhatsAppSetupService,\r\n    private authService: AuthService,\r\n    private SearchStudentService: ManageViewsService,\r\n    private spinner: NgxSpinnerService,\r\n    private formValidationService: formValidationService,\r\n    private toastr: ToastrService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authService.getEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [\"\", Validators.required],\r\n      AdminEducationCompanyId: [this.EduCompId, Validators.required],\r\n      msg: [\"\", Validators.required],\r\n      sendToStudentWhatsApp: [false],\r\n      sendToFatherWhatsApp: [false],\r\n      sendToMotherWhatsApp: [false],\r\n    });\r\n\r\n    this.searchForm = this.fb.group({\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    //form empty?\r\n    if (!this.formValidationService.isFormEmpty(this.searchForm)) {\r\n      this.SearchStudentService.searchStudent(\r\n        this.EduCompId,\r\n        this.searchForm.value\r\n      ).subscribe((response: any) => {\r\n        if (response.returnValue == 1) {\r\n          //show response and set the userId with the coresponding value\r\n          this.searchResponse = response;\r\n          this.myForm.controls.userId.setValue(response.userId);\r\n        }\r\n      });\r\n    } else this.toastr.error(this.translate.instant(\"Response.EmptyForm\"));\r\n  }\r\n\r\n  onSubmit(event: any) {\r\n    //send message request\r\n    event.target.disabled = true;\r\n\r\n    this.whatsappService\r\n      .sendSingularWhatsAppMsg(this.myForm.value)\r\n      .subscribe((response: any) => {\r\n        event.target.disabled = false;\r\n        if (response) {\r\n          if (response.returnValue == 1)\r\n            this.toastr.success(\"تم إرسال الرسالة\");\r\n          else if (response.returnValue == 0) this.toastr.error(\"لا يوجد حجز\");\r\n\r\n          console.log(response);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <mat-card>\r\n            <mat-card-title>\r\n                {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <form [formGroup]=\"searchForm\" class=\"form-container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <mat-form-field appearance=\"legacy\">\r\n                                        <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                                        <input matInput type=\"text\" formControlName=\"sentEmail\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <div class=\"col-6\">\r\n                                    <mat-form-field appearance=\"legacy\">\r\n                                        <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                                        <input matInput type=\"text\" formControlName=\"sentMobile\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                                <div class=\"col-6\">\r\n                                    <mat-form-field appearance=\"legacy\">\r\n                                        <mat-label> {{ \"labels.Code\" | translate }} </mat-label>\r\n                                        <input matInput type=\"text\" formControlName=\"sentCenterCode\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n\r\n                        <!-- Search Response -->\r\n                        <table *ngIf=\"searchResponse\" class=\"table table-striped table-hover table-full-width rtl\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{ \"labels.Name\" | translate }}</th>\r\n                                    <th>{{ \"labels.Email\" | translate }}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>{{ searchResponse.username }}</td>\r\n                                    <td>{{ searchResponse.email }}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <!-- Search Response -->\r\n\r\n                        <mat-card-actions align=\"end\">\r\n                            <button mat-raised-button class=\"btn btn-primary\" (click)=\"onSearch()\">\r\n                                {{ \"General.Search\" | translate }}\r\n                            </button>\r\n                        </mat-card-actions>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"searchResponse\">\r\n    <div class=\"col-12\">\r\n        <mat-card>\r\n            <mat-card-title>\r\n                {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <form [formGroup]=\"myForm\" class=\"form-container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"row check-box\">\r\n                                        <mat-label class=\"col-12\">\r\n                                            {{ \"labels.SendMessageTo\" | translate }}\r\n                                        </mat-label>\r\n                                        <div class=\"col-md-4 co-12\">\r\n                                            <mat-checkbox formControlName=\"sendToStudentWhatsApp\" [value]=\"true\">\r\n                                                {{ \"labels.ForStudentsWhatsapp\" | translate }}\r\n                                            </mat-checkbox>\r\n                                        </div>\r\n                                        <div class=\"col-md-4 co-12\">\r\n                                            <mat-checkbox formControlName=\"sendToFatherWhatsApp\" [value]=\"true\">\r\n                                                {{ \"labels.ForFatherWhatsapp\" | translate }}\r\n                                            </mat-checkbox>\r\n                                        </div>\r\n                                        <div class=\"col-md-4 co-12\">\r\n                                            <mat-checkbox formControlName=\"sendToMotherWhatsApp\" [value]=\"true\">\r\n                                                {{ \"labels.ForMotherWhatsapp\" | translate }}\r\n                                            </mat-checkbox>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-12\">\r\n                                    <mat-form-field appearance=\"legacy\">\r\n                                        <mat-label> {{ \"labels.Message\" | translate }} </mat-label>\r\n                                        <textarea matInput type=\"text\" formControlName=\"msg\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n\r\n                        <mat-card-actions align=\"end\">\r\n                            <button mat-raised-button class=\"btn btn-primary\" (click)=\"onSubmit($event)\">\r\n                                {{ \"General.Send\" | translate }}\r\n                            </button>\r\n                        </mat-card-actions>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"errors?.length > 0\">\r\n    <div class=\"col-12\">\r\n        <mat-card>\r\n            <mat-card-title>\r\n                {{ \"Labels.FailureList\" | translate }}\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                        <ul class=\"list-group\">\r\n                            <li class=\"list-group-item disabled\" *ngFor=\"let err of errors\">\r\n                                {{ err }}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n\r\n</div>","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IWhatsAppMsgModel,\r\n  IWhatsAppResponse,\r\n} from \"app/admin/models/whatsApp/whatsApp\";\r\n import { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { WhatsAppSetupService } from \"app/admin/services/whatsApp/whatsApp-setup.service\";\r\n\r\n@Component({\r\n  selector: \"app-send-whatsapp-msg\",\r\n  templateUrl: \"./send-whatsapp-msg.component.html\",\r\n  styleUrls: [\"./send-whatsapp-msg.component.scss\"],\r\n})\r\nexport class SendWhatsappMsgComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n\r\n  isSubmitted = false;\r\n  eduCompId: any;\r\n  errors: string[] = [];\r\n\r\n  get sendToStudentWhatsAppCtrl() {\r\n    return this.myForm.get(\"sendToStudentWhatsApp\");\r\n  }\r\n  get sendToFatherWhatsAppCtrl() {\r\n    return this.myForm.get(\"sendToFatherWhatsApp\");\r\n  }\r\n  get sendToMotherWhatsAppCtrl() {\r\n    return this.myForm.get(\"sendToMotherWhatsApp\");\r\n  }\r\n  get msgCtrl() {\r\n    return this.myForm.get(\"msg\");\r\n  }\r\n  get fileCtrl() {\r\n    return this.myForm.get(\"file\");\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private whatsAppService: WhatsAppSetupService,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.eduCompId = this.authService.getEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      sendToStudentWhatsApp: [false],\r\n      sendToFatherWhatsApp: [false],\r\n      sendToMotherWhatsApp: [false],\r\n      msg: [\"\", Validators.required],\r\n      file: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.fileCtrl?.setValue(data);\r\n      };\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (\r\n      this.sendToStudentWhatsAppCtrl?.value === false &&\r\n      this.sendToFatherWhatsAppCtrl?.value === false &&\r\n      this.sendToMotherWhatsAppCtrl?.value === false\r\n    ) {\r\n      this.toastr.warning(\r\n        \"Please select who can receive your what's app message\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.isSubmitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IWhatsAppMsgModel;\r\n\r\n      obj.adminEducationCompanyId = +this.eduCompId;\r\n      obj.sendToStudentWhatsApp = this.sendToStudentWhatsAppCtrl?.value;\r\n      obj.sendToFatherWhatsApp = this.sendToFatherWhatsAppCtrl?.value;\r\n      obj.sendToMotherWhatsApp = this.sendToMotherWhatsAppCtrl?.value;\r\n      obj.msg = this.msgCtrl?.value;\r\n      obj.file = this.fileCtrl?.value;\r\n\r\n      this.whatsAppService.sendWhatsAppMsg(obj).subscribe((response) => {\r\n        if (response) {\r\n          if ((response as IWhatsAppResponse).isSendAllSuccess) {\r\n            this.toastr.success(\"Message has been send to all success\");\r\n            this.myForm.reset();\r\n          } else if (!(response as IWhatsAppResponse).isSendAllSuccess) {\r\n            //console.log('ERRORS: ', (response as IWhatsAppResponse).errors);\r\n            this.toastr.success(\"Message has been send to some success\");\r\n            this.errors = (response as IWhatsAppResponse).errors;\r\n          }\r\n          this.myForm.reset();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.MustHasColCodes\" | translate }}\r\n                  </mat-label>\r\n                  <input\r\n                    (change)=\"onChange($event)\"\r\n                    type=\"file\"\r\n                    accept=\".xlsx,.xls\"\r\n                    class=\"form-control\"\r\n                  />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      fileCtrl?.invalid && (fileCtrl?.touched || isSubmitted)\r\n                    \"\r\n                  >\r\n                    <span *ngIf=\"fileCtrl?.errors?.required\">\r\n                      You must select file.\r\n                    </span>\r\n                  </mat-hint>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <div class=\"row check-box\">\r\n                    <mat-label class=\"col-12\">\r\n                      {{ \"labels.SendMessageTo\" | translate }}\r\n                    </mat-label>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToStudentWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForStudentsWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToFatherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForFatherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"col-md-4 co-12\">\r\n                      <mat-checkbox\r\n                        formControlName=\"sendToMotherWhatsApp\"\r\n                        [value]=\"true\"\r\n                      >\r\n                        {{ \"labels.ForMotherWhatsapp\" | translate }}\r\n                      </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Message\" | translate }} </mat-label>\r\n                    <textarea matInput type=\"text\" formControlName=\"msg\">\r\n                    </textarea>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        msgCtrl?.invalid && (msgCtrl?.touched || isSubmitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"msgCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"msgCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <div class=\"alert bg-light-warning mb-2\" role=\"alert\">\r\n                    أقصي عدد يمكن الإرسال له في المره الواحده:\r\n                    <a class=\"alert-link\"> 9999</a>.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <mat-card-actions align=\"end\">\r\n              <button\r\n                mat-raised-button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"onSubmit()\"\r\n              >\r\n                {{ \"General.Send\" | translate }}\r\n              </button>\r\n            </mat-card-actions>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"errors?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Labels.FailureList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item disabled\" *ngFor=\"let err of errors\">\r\n                {{ err }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { IsAdminGuard } from \"app/shared/services/auth/Guards/roles/is-admin.guard\";\r\nimport { ManualCashPaymentComponent } from \"./manual-cash-payment/manual-cash-payment.component\";\r\nimport { GenerateBalanceCodesComponent } from \"./generate-balance-codes/generate-balance-codes.component\";\r\nimport { ManageViewsComponent } from \"./manage-views/manage-views.component\";\r\nimport { SendWhatsappMsgComponent } from \"./send-whatsapp-msg/send-whatsapp-msg.component\";\r\nimport { ExceptionalViewsComponent } from \"./exceptional-views/exceptional-views.component\";\r\nimport { SendSingularWhatsappMsgComponent } from \"./send-singular-whatsapp-msg/send-singular-whatsapp-msg.component\";\r\nimport { AnnouncementSetupComponent } from \"./announcements/announcement-setup/announcement-setup.component\";\r\nimport { PointsSetupComponent } from \"./points-setup/points-setup.component\";\r\nimport { AnnouncementIndexComponent } from \"./announcements/announcement-index/announcement-index.component\";\r\nimport { AddTeacherComponent } from \"./teacher-setup/add-teacher/add-teacher.component\";\r\nimport { AssignSubjectToTeacherComponent } from \"./teacher-setup/assign-subject-to-teacher/assign-subject-to-teacher.component\";\r\nimport { WhatsappAddComponent } from \"./whatsapp/whatsapp-add/whatsapp-add.component\";\r\nimport { WhatsAppIndexComponent } from \"./whatsapp/whatsApp-index/whatsApp-index.component\";\r\nimport { SubscriptionPaymentPlanComponent } from \"./subscription-payment-plan/subscription-payment-plan.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"manual-cash-payment\",\r\n    component: ManualCashPaymentComponent,\r\n  },\r\n\r\n  {\r\n    path: \"generate-balance-codes\",\r\n    component: GenerateBalanceCodesComponent,\r\n  },\r\n  {\r\n    path: \"manage-views\",\r\n    component: ManageViewsComponent,\r\n  },\r\n  {\r\n    path: \"send-whatsapp-msg\",\r\n    component: SendWhatsappMsgComponent,\r\n  },\r\n  {\r\n    path: \"send-singular-whatsapp-msg\",\r\n    component: SendSingularWhatsappMsgComponent,\r\n  },\r\n  {\r\n    path: \"exceptional-views\",\r\n    component: ExceptionalViewsComponent,\r\n  },\r\n  {\r\n    path: \"announcement-index\",\r\n    component: AnnouncementIndexComponent,\r\n  },\r\n  {\r\n    path: \"announcement-setup\",\r\n    component: AnnouncementSetupComponent,\r\n  },\r\n  {\r\n    path: \"points\",\r\n    component: PointsSetupComponent,\r\n  },\r\n  {\r\n    path: \"teachers\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"add-teacher\", pathMatch: \"full\" },\r\n\r\n      {\r\n        path: \"add-teacher\",\r\n        component: AddTeacherComponent,\r\n      },\r\n      {\r\n        path: \"assign-subject-to-teacher/:teacherUserId\",\r\n        component: AssignSubjectToTeacherComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"whatsapp-index\",\r\n    component: WhatsAppIndexComponent,\r\n  },\r\n\r\n  {\r\n    path: \"whatsapp-setup\",\r\n    component: WhatsappAddComponent,\r\n  },\r\n\r\n  {\r\n    path: \"subscription-payment-plan\",\r\n    component: SubscriptionPaymentPlanComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SetupRoutingModule {}\r\n","import { AssignSubjectToTeacherComponent } from \"./teacher-setup/assign-subject-to-teacher/assign-subject-to-teacher.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { SetupRoutingModule } from \"./setup-routing.module\";\r\nimport { ManageViewsComponent } from \"./manage-views/manage-views.component\";\r\nimport { GenerateBalanceCodesComponent } from \"./generate-balance-codes/generate-balance-codes.component\";\r\nimport { ManualCashPaymentComponent } from \"./manual-cash-payment/manual-cash-payment.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { SendWhatsappMsgComponent } from \"./send-whatsapp-msg/send-whatsapp-msg.component\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { ExceptionalViewsComponent } from \"./exceptional-views/exceptional-views.component\";\r\nimport { QuestionStudentsSettingsComponent } from \"./question-student-settings/question-student-settings.component\";\r\nimport { SendSingularWhatsappMsgComponent } from \"./send-singular-whatsapp-msg/send-singular-whatsapp-msg.component\";\r\nimport { PointsSetupComponent } from \"./points-setup/points-setup.component\";\r\nimport { AnnouncementSetupComponent } from \"./announcements/announcement-setup/announcement-setup.component\";\r\nimport { AnnouncementIndexComponent } from \"./announcements/announcement-index/announcement-index.component\";\r\nimport { AddTeacherComponent } from \"./teacher-setup/add-teacher/add-teacher.component\";\r\nimport { QuillModule } from \"ngx-quill\";\r\nimport { WhatsappAddComponent } from \"./whatsapp/whatsapp-add/whatsapp-add.component\";\r\nimport { WhatsAppIndexComponent } from \"./whatsapp/whatsApp-index/whatsApp-index.component\";\r\nimport { SubscriptionPaymentPlanComponent } from \"./subscription-payment-plan/subscription-payment-plan.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GenerateBalanceCodesComponent,\r\n    ManualCashPaymentComponent,\r\n    ManageViewsComponent,\r\n    SendWhatsappMsgComponent,\r\n    ExceptionalViewsComponent,\r\n    QuestionStudentsSettingsComponent,\r\n    SendSingularWhatsappMsgComponent,\r\n    PointsSetupComponent,\r\n    AnnouncementSetupComponent,\r\n    AnnouncementIndexComponent,\r\n    AddTeacherComponent,\r\n    AssignSubjectToTeacherComponent,\r\n    WhatsappAddComponent,\r\n    WhatsAppIndexComponent,\r\n    SubscriptionPaymentPlanComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SetupRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    NgxPaginationModule,\r\n    QuillModule.forRoot(),\r\n  ],\r\n})\r\nexport class SetupModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { WhatsAppSetupVM } from \"app/admin/models/whatsApp/whatsAppSetupVM\";\r\nimport { SubscriptionPaymentPlanService } from \"app/admin/services/Admin/subscription-payment-plan.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-subscription-plan\",\r\n  templateUrl: \"./subscription-payment-plan.component.html\",\r\n  styleUrls: [\"./subscription-payment-plan.component.scss\"],\r\n})\r\nexport class SubscriptionPaymentPlanComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCount: number;\r\n  submitted: false;\r\n  displayedColumns: string[] = [\"Id\", \"plan\", \"price\", \"actions\"];\r\n  dataSource: MatTableDataSource<WhatsAppSetupVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authserv: AuthService,\r\n    private dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private subscriptionPaymentPlanService:SubscriptionPaymentPlanService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n    this.myForm = this.fb.group({\r\n      price: [\"\", Validators.required],\r\n      from: [\"\"],\r\n      to: [\"\"]\r\n    });\r\n  }\r\n  get formCtrl(){\r\n    return this.myForm.controls\r\n  }\r\n  getAllPlans(page: number) {}\r\n  getAllSubscriptionPlans(page: number) {\r\n  this.subscriptionPaymentPlanService.getAllSubscriptionPaymentPlans().subscribe((res)=>{\r\n\r\n  })\r\n  }\r\n  deleteSubscruptionPlan(id:number) {\r\n    this.subscriptionPaymentPlanService.deleteSubject(id).subscribe((res)=>{\r\n\r\n    })\r\n\r\n  }\r\n  openDeleateDialog(id:number): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteSubscruptionPlan(id);\r\n      });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> اضافة اشتراك </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"whatsApp.WhatsAppHeader\" | translate\r\n                    }}</mat-label>\r\n                    <input matInput formControlName=\"price\" />\r\n                    <mat-hint class=\"danger\" *ngIf=\"formCtrl.price?.invalid && (formCtrl.price?.touched || submitted)\r\n\"              >\r\n                      <span *ngIf=\"formCtrl.price?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"formCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"from\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-6\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"to\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <a class=\"btn btn-info bg-light-info float-right\">\r\n          <i class=\"fa fa-plus-square\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> الاشتراكات </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"Id\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                #\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.msgId }}\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"plan\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>plan</th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.plan }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"price\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>price</th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"contetnt\">\r\n                <span [innerHTML]=\"ele.msgBody\" [title]=\"ele.msgBody\"></span>\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                    mat-mini-fab\r\n                    color=\"primary\"\r\n                    class=\"mr-2\"\r\n                    routerLink=\"../whatsapp-setup\"\r\n                    [queryParams]=\"{\r\n                      msgId: ele.msgId,\r\n                      functionId: functionId\r\n                    }\"\r\n                  >\r\n                    <mat-icon>edit</mat-icon>\r\n                  </a>\r\n\r\n                  <button\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                    class=\"mr-2\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllSubscriptionPlans($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { IAddTeachersVM, ITeachersVM } from \"app/admin/models/admin/teachers\";\nimport { TeacherService } from \"app/admin/services/Admin/teacher.service\";\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\nimport { GeneralService } from \"app/shared/services/General/general.service\";\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-add-teacher\",\n  templateUrl: \"./add-teacher.component.html\",\n  styleUrls: [\"./add-teacher.component.scss\"],\n})\nexport class AddTeacherComponent implements OnInit {\n  myForm: FormGroup;\n  EduCompId: number;\n  submitted: boolean = false;\n  functionId: number;\n  rowFunctions: IRowFunctionVM[];\n  ProfilePicture: any = null;\n  imgPreview: string;\n\n  displayedColumns: string[] = [\n    \"#\",\n    \"name\",\n    \"email\",\n    \"mobile\",\n    \"Description\",\n    \"option\",\n  ];\n  dataSource: MatTableDataSource<ITeachersVM>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\n  constructor(\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    public authserv: AuthService,\n    public teacherService: TeacherService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private GeneralService: GeneralService\n  ) {\n    route.queryParamMap.subscribe((params) => {\n      this.functionId = Number(params.get(\"functionId\"));\n      //  console.log(\"functionId\", this.functionId);\n      if (this.functionId) {\n        this.authserv\n          .getUserRowFunctions(this.functionId)\n          .subscribe((res: any) => {\n            if (res) {\n              this.rowFunctions = res;\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\n            }\n          });\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.getAllTeachers();\n    this.myForm = this.fb.group(\n      {\n        teacherUserId: [null],\n        name: [\n          null,\n          [\n            Validators.required,\n            Validators.pattern(\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\n            ),\n            CustomeValidator.whiteSpace,\n          ],\n        ],\n        email: [null, [Validators.required, Validators.email]],\n        mobile: [\n          \"\",\n          [\n            Validators.required,\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\n            Validators.minLength(11),\n            Validators.maxLength(11),\n            CustomeValidator.startsWith,\n          ],\n        ],\n        password: [\n          null,\n          [\n            Validators.required,\n            CustomeValidator.whiteSpace,\n            Validators.minLength(3),\n          ],\n        ],\n        confirmedPass: [null],\n        Description: [\"\"],\n      },\n      {\n        validator: CustomeValidator.mustMatch(\"password\", \"confirmedPass\"),\n      }\n    );\n\n    this.EduCompId = Number(this.authserv.getEduCompId());\n  }\n\n  get FormCtrls() {\n    return this.myForm.controls;\n  }\n\n  ngAfterViewInit() {\n    this.authserv.EduCompId.subscribe((e) => {\n      this.EduCompId = e.EduCompId;\n    });\n\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  getAllTeachers() {\n    this.GeneralService.getTeachersByEducompId(0).subscribe((res: any) => {\n      this.dataSource = new MatTableDataSource(res.lstTeachers.reverse());\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  addEditTeacher() {\n    this.submitted = true;\n    // if (this.ProfilePicture == null) {\n    //   this.toastr.warning(\"Must Choose Profile Picture\");\n    //   return;\n    // }\n\n    let obj = {} as IAddTeachersVM;\n    obj.teacherUserId = this.FormCtrls.teacherUserId?.value;\n    obj.name = this.FormCtrls.name?.value;\n    obj.email = this.FormCtrls?.email?.value;\n    obj.mobile = this.FormCtrls.mobile?.value;\n    obj.password = this.FormCtrls.password?.value;\n    obj.confirmedPass = this.FormCtrls.confirmedPass?.value;\n    obj.Description = this.FormCtrls.Description?.value;\n    obj.ProfilePicture = this.ProfilePicture;\n    // console.log(\"obj\", obj);\n    // console.log(\"myForm\", this.myForm.value);\n\n    if (this.myForm.valid) {\n      this.spinner.show();\n      this.teacherService\n        .addEditTeacher<IAddTeachersVM>(obj)\n        .subscribe((response: any) => {\n          if (response.returnValue == 1) {\n            this.submitted = false;\n            this.imgPreview = \"\";\n            this.myForm.reset();\n            this.FormCtrls.teacherUserId.setValue(null);\n            this.getAllTeachers();\n            this.toastr.success(\"Teacher added successfully\");\n          } else this.toastr.warning(response.returnString);\n          this.spinner.hide();\n        });\n    }\n  }\n\n  getTeachertoEdit(teacher: ITeachersVM) {\n    this.myForm.reset();\n    this.myForm.patchValue(teacher);\n    this.FormCtrls.name.setValue(teacher.teacher_ar_name);\n    this.imgPreview = `mozakretyapi${teacher.profilePicture}`;\n  }\n\n  onChange(event: any) {\n    let fileName = <File>event.target.files[0].name;\n    let fileSize = <File>event.target.files[0].size;\n    let fileType = <File>event.target.files[0].type;\n    let LastModified = <File>event.target.files[0].lastModified;\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\n\n    if (event.target.files) {\n      var reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (event: any) => {\n        let fileReder = event.target.result;\n        let data = {\n          FileAsBase64: fileReder,\n          name: fileName,\n          size: fileSize,\n          type: fileType,\n          LastModified: LastModified,\n          LastModifiedDate: LastModifiedDate,\n        };\n        this.ProfilePicture = data;\n        this.imgPreview = fileReder;\n      };\n    }\n  }\n}\n","<ngx-spinner></ngx-spinner>\n<!-- <div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\n  </div>\n</div> -->\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <mat-card>\n      <mat-card-title> {{ \"labels.AddTeacher\" | translate }} </mat-card-title>\n      <mat-card-content class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <form [formGroup]=\"myForm\" class=\"form-container\">\n              <div class=\"row\">\n                <div class=\"col-md-4 col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\n                    <input\n                      matInput\n                      type=\"text\"\n                      formControlName=\"name\"\n                      autocomplete=\"new-password\"\n                    />\n                    <mat-hint\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        FormCtrls.name.invalid &&\n                        (FormCtrls.name.touched || submitted)\n                      \"\n                    >\n                      <span\n                        *ngIf=\"\n                          FormCtrls.name.errors?.required ||\n                          FormCtrls.name.errors?.whiteSpace\n                        \"\n                      >\n                        <i class=\"ft-alert-circle align-middle\"></i>\n                        {{ \"labels.mustEnterValue\" | translate }}\n                      </span>\n                    </mat-hint>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\n                    <mat-hint\n                      *ngIf=\"\n                        FormCtrls.mobile.invalid &&\n                        (FormCtrls.mobile.touched || submitted)\n                      \"\n                      class=\"text-danger\"\n                    >\n                      <span\n                        *ngIf=\"\n                          FormCtrls.mobile.errors?.required ||\n                          FormCtrls.mobile.errors?.whiteSpace ||\n                          FormCtrls.mobile.errors?.pattern\n                        \"\n                      >\n                        <i class=\"ft-alert-circle align-middle\"></i>\n                        {{ \"labels.mustEnterValue\" | translate }}\n                      </span>\n\n                      <span\n                        *ngIf=\"\n                          FormCtrls.mobile.errors?.minlength ||\n                          FormCtrls.mobile.errors?.maxlength\n                        \"\n                      >\n                        <i class=\"ft-alert-circle align-middle\"></i>\n                        {{ \"labels.MobileLength\" | translate }}\n                      </span>\n                      <span *ngIf=\"FormCtrls.mobile.errors?.startsWith\">\n                        <i class=\"ft-alert-circle align-middle\"></i>\n                        {{ \"labels.NumberMustStartWith\" | translate }}\n                      </span>\n                    </mat-hint>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\n                    <input\n                      matInput\n                      type=\"email\"\n                      formControlName=\"email\"\n                      autocomplete=\"new-password\"\n                    />\n                    <mat-hint\n                      *ngIf=\"\n                        FormCtrls.email.invalid &&\n                        (FormCtrls.email.touched || submitted)\n                      \"\n                      class=\"text-danger\"\n                    >\n                      <span *ngIf=\"FormCtrls.email.errors?.required\">\n                        <i class=\"ft-alert-circle align-middle\"></i>\n                        {{ \"labels.mustEnterValue\" | translate }}\n                      </span>\n                      <span *ngIf=\"FormCtrls.email.errors?.email\">\n                        <i class=\"ft-alert-circle align-middle\"></i>\n                        Enter correct Email\n                      </span>\n                    </mat-hint>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label> {{ \"labels.Password\" | translate }} </mat-label>\n                    <input\n                      matInput\n                      type=\"password\"\n                      formControlName=\"password\"\n                      autocomplete=\"new-password\"\n                    />\n                    <mat-hint\n                      *ngIf=\"\n                        FormCtrls.password.invalid &&\n                        (FormCtrls.password.touched || submitted)\n                      \"\n                      class=\"text-danger\"\n                    >\n                      <span *ngIf=\"FormCtrls.password.errors?.required\">\n                        <i class=\"ft-alert-circle align-middle\"></i>\n                        {{ \"labels.mustEnterValue\" | translate }}\n                      </span>\n                    </mat-hint>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>\n                      {{ \"labels.ConfirmPassword\" | translate }}\n                    </mat-label>\n                    <input\n                      matInput\n                      type=\"password\"\n                      formControlName=\"confirmedPass\"\n                    />\n                    <mat-hint\n                      *ngIf=\"\n                        FormCtrls.confirmedPass.invalid &&\n                        (FormCtrls.confirmedPass.touched || submitted)\n                      \"\n                      class=\"text-danger\"\n                    >\n                      <span *ngIf=\"FormCtrls.confirmedPass.errors?.mustMatch\">\n                        <i class=\"ft-alert-circle align-middle\"></i>\n                        New Password and Confirm Password not match\n                      </span>\n                    </mat-hint>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"media\">\n                    <div class=\"media-body\">\n                      <div\n                        class=\"d-flex flex-sm-row flex-column justify-content-start px-0 mb-sm-2\"\n                      >\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-sm bg-light-primary mb-1 mb-sm-0\"\n                          mat-raised-button\n                          (click)=\"fileInput.click()\"\n                        >\n                          {{ \"labels.ProfilePicture\" | translate }}\n                        </button>\n                        <input\n                          hidden\n                          (change)=\"onChange($event)\"\n                          #fileInput\n                          type=\"file\"\n                          accept=\"image/*\"\n                          id=\"file\"\n                        />\n                      </div>\n                    </div>\n                    <img\n                      src=\"{{ imgPreview }}\"\n                      alt=\"avatar\"\n                      class=\"users-avatar-shadow avatar mr-3 rounded-circle\"\n                      height=\"64\"\n                      width=\"64\"\n                    />\n                  </div>\n                </div>\n\n                <div class=\"col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>\n                      {{ \"labels.Description\" | translate }}\n                    </mat-label>\n                    <textarea\n                      matInput\n                      type=\"text\"\n                      formControlName=\"Description\"\n                    >\n                    </textarea>\n                  </mat-form-field>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button\n          #addBtn\n          mat-raised-button\n          class=\"btn btn-primary\"\n          (click)=\"addEditTeacher()\"\n        >\n          {{ \"General.Add\" | translate }}\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <mat-card>\n      <mat-card-title> {{ \"labels.Teachers\" | translate }}</mat-card-title>\n      <mat-card-content>\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Filter</mat-label>\n          <input\n            matInput\n            (keyup)=\"applyFilter($event)\"\n            placeholder=\"Ex. ium\"\n            #input\n          />\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8 f-w\">\n          <table mat-table [dataSource]=\"dataSource\" matSort>\n            <!-- # Column -->\n            <ng-container matColumnDef=\"#\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\n            </ng-container>\n\n            <!-- name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                {{ \"labels.Name\" | translate }}\n              </th>\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.teacher_ar_name }}</td>\n            </ng-container>\n\n            <!-- email Column -->\n            <ng-container matColumnDef=\"email\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                {{ \"labels.Email\" | translate }}\n              </th>\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.email }}</td>\n            </ng-container>\n\n            <!-- mobile Column -->\n            <ng-container matColumnDef=\"mobile\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                {{ \"labels.Mobile\" | translate }}\n              </th>\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\n            </ng-container>\n\n            <!-- Description Column -->\n            <ng-container matColumnDef=\"Description\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                {{ \"labels.Description\" | translate }}\n              </th>\n              <td\n                mat-cell\n                class=\"ellipsis-text description\"\n                *matCellDef=\"let ele\"\n                matTooltip=\"{{ ele.description }}\"\n              >\n                {{ ele.description }}\n              </td>\n            </ng-container>\n\n            <!-- Option Column -->\n            <ng-container matColumnDef=\"option\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n              <td mat-cell *matCellDef=\"let teacher\">\n                <a\n                  (click)=\"getTeachertoEdit(teacher)\"\n                  class=\"success p-0\"\n                  matTooltip=\"edit teacher\"\n                >\n                  <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\n                </a>\n\n                <!-- <a\n                    *ngIf=\"fun.functionName === 'Delete'\"\n                    (click)=\"openDeleateDialog(user)\"\n                    class=\"danger p-0\"\n                    matTooltip=\"Delete User\"\n                  >\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\n                  </a> -->\n\n                <a\n                  routerLink=\"../assign-subject-to-teacher/{{\n                    teacher.teacherUserId\n                  }}\"\n                  [queryParams]=\"{ functionId: functionId }\"\n                  class=\"info p-0\"\n                  matTooltip=\"Add subjects to teacher\"\n                >\n                  <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\n                </a>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n            <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\" colspan=\"4\">\n                No data matching the filter \"{{ input.value }}\"\n              </td>\n            </tr>\n          </table>\n\n          <!--    appMatPaginatorStyle\n            [showTotalPages]=\"3\" -->\n          <mat-paginator\n            [pageSizeOptions]=\"[5, 10, 20]\"\n            [pageSize]=\"10\"\n            showFirstLastButtons\n            aria-label=\"Select page of users\"\n          >\n          </mat-paginator>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IAssignSubjectToTeacherVM } from \"app/admin/models/admin/teachers\";\r\nimport { TeacherService } from \"app/admin/services/Admin/teacher.service\";\r\nimport {\r\n  IStageDropVM,\r\n  ISubjectByTeacherId,\r\n  IYearDropVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-assign-subject-to-teacher\",\r\n  templateUrl: \"./assign-subject-to-teacher.component.html\",\r\n  styleUrls: [\"./assign-subject-to-teacher.component.scss\"],\r\n})\r\nexport class AssignSubjectToTeacherComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  teacherUserId: number;\r\n  Stages: IStageDropVM[] = [];\r\n  Years: IYearDropVM[] = [];\r\n  Subjects: ISubjectByTeacherId[] = [];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    public teacherService: TeacherService,\r\n    public authService: AuthService,\r\n    public generalService: GeneralService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.teacherUserId = Number(params.get(\"teacherUserId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectIds: [[], Validators.required],\r\n    });\r\n    this.generalService\r\n      .getAllEduStagesList<IStageDropVM[]>()\r\n      .subscribe((res) => {\r\n        this.Stages = res;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  get subjectIdsCtrl() {\r\n    return this.myForm.get(\"subjectIds\");\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  assignSubjectToTeacher() {\r\n    if (this.subjectIdsCtrl.value.length == 0) {\r\n      this.toastr.warning(\"Must Choose at least one Subject\");\r\n      return;\r\n    }\r\n    let obj = {} as IAssignSubjectToTeacherVM;\r\n    obj.teacherUserId = this.teacherUserId;\r\n    obj.subjectIds = this.subjectIdsCtrl.value;\r\n    this.spinner.show();\r\n\r\n    this.teacherService\r\n      .assignSubjectToTeacher<IAssignSubjectToTeacherVM>(obj)\r\n      .subscribe((response: any) => {\r\n        if (response.returnValue == 200) {\r\n          this.toastr.success(\"Subject added successfully\");\r\n          this.myForm.reset();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getEduYearByStageId(stageId: any) {\r\n    this.Years = [];\r\n    this.Subjects = [];\r\n    if (stageId) {\r\n      this.generalService\r\n        .getEduYearByStageId<IYearDropVM[]>(stageId)\r\n        .subscribe((res) => {\r\n          this.Years = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  getSubjectsByYearId(YearId: any) {\r\n    this.Subjects = [];\r\n    if (YearId) {\r\n      this.generalService\r\n        .getSubjectsByYearIdNew<ISubjectByTeacherId[]>(YearId) // new api get subjects by yearId\r\n        //  .getSubjectsByYearId<ISubjectByTeacherId[]>(YearId) // Old api get subjects by teachers in year\r\n        .subscribe((res) => {\r\n          this.Subjects = res;\r\n          console.log(res)\r\n        });\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\n<!-- <div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\n  </div>\n</div> -->\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <mat-card>\n      <mat-card-title>\n        {{ \"labels.AddSubjectToTeacher\" | translate }}\n        <a\n          mat-raised-button\n          routerLink=\"/dashboard/setup/teachers/add-teacher\"\n          [queryParams]=\"{\n            functionId: functionId\n          }\"\n          class=\"btn btn-info bg-light-info float-right\"\n        >\n          {{ \"General.Back\" | translate }}\n        </a>\n      </mat-card-title>\n\n      <mat-card-content class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <form [formGroup]=\"myForm\">\n              <div class=\"row\">\n                <div class=\"col-md-4 col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>{{ \"labels.Stage\" | translate }} </mat-label>\n                    <mat-select\n                      formControlName=\"stageId\"\n                      (selectionChange)=\"\n                        getEduYearByStageId(FormCtrls.stageId.value)\n                      \"\n                    >\n                      <mat-option>\n                        {{ \"General.Choose\" | translate }}</mat-option\n                      >\n                      <mat-option\n                        *ngFor=\"let stage of Stages\"\n                        [value]=\"stage.stage_id\"\n                      >\n                        {{ stage.stage_name }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\n                    <mat-select\n                      formControlName=\"yearId\"\n                      (selectionChange)=\"\n                        getSubjectsByYearId(FormCtrls.yearId.value)\n                      \"\n                    >\n                      <mat-option>\n                        {{ \"General.Choose\" | translate }}</mat-option\n                      >\n                      <mat-option\n                        *ngFor=\"let year of Years\"\n                        [value]=\"year.educational_year_id\"\n                      >\n                        {{ year.educational_year_name }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <mat-form-field appearance=\"legacy\">\n                    <mat-label>{{ \"Material.Subject\" | translate }}</mat-label>\n                    <mat-select\n                      name=\"subjectId\"\n                      multiple\n                      formControlName=\"subjectIds\"\n                    >\n                      <!-- <mat-option>\n                        {{ \"General.Choose\" | translate }}\n                      </mat-option> -->\n                      <mat-option\n                        *ngFor=\"let subject of Subjects\"\n                        [value]=\"subject.Value\"\n                      >\n                        {{ subject.Text }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button\n          #addBtn\n          mat-raised-button\n          class=\"btn btn-primary\"\n          (click)=\"assignSubjectToTeacher()\"\n        >\n          {{ \"General.Add\" | translate }}\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { WhatsAppSetupVM } from \"app/admin/models/whatsApp/whatsAppSetupVM\";\r\nimport { WhatsAppSetupService } from \"app/admin/services/whatsApp/whatsApp-setup.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-whatsApp-index\",\r\n  templateUrl: \"./whatsApp-index.component.html\",\r\n  styleUrls: [\"./whatsApp-index.component.scss\"],\r\n})\r\nexport class WhatsAppIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCount: any;\r\n  p: number = 1;\r\n  submitted: false;\r\n  displayedColumns: string[] = [\r\n    \"msgId\",\r\n    \"msgTitle\",\r\n    \"msgHeader\",\r\n    \"msgBody\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<WhatsAppSetupVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authserv: AuthService,\r\n    private dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n    private WhatsAppService: WhatsAppSetupService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  get titleCtrl() {\r\n    return this.myForm.get(\"Msg_Title\");\r\n  }\r\n  ngOnInit() {\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n    this.myForm = this.fb.group({\r\n      Msg_Title: [\"\", Validators.required],\r\n      page: [\"\"],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    this.getAllWhatsAppMsg(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllWhatsAppMsg(1);\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllWhatsAppMsg(p: number) {\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    this.p = p;\r\n    this.spinner.show();\r\n    // console.log(\"form value\", this.myForm.value);\r\n    this.WhatsAppService.getAllWhatsAppMsg(this.myForm.value).subscribe(\r\n      (res: any) => {\r\n        this.dataSource = new MatTableDataSource(res.list);\r\n        this.itemsCount = res.count;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  openDeleateDialog(whatsApp: WhatsAppSetupVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: whatsApp.msgTitle,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeWhatsApp(whatsApp);\r\n      });\r\n  }\r\n\r\n  removeWhatsApp(whatsApp: WhatsAppSetupVM) {\r\n    this.WhatsAppService.RemoveWhatsAppMsg(whatsApp.msgId).subscribe(\r\n      (response) => {\r\n        if (response) {\r\n          //  console.log('deleted: ', response);\r\n          let deletedIndex = this.dataSource.data.findIndex(\r\n            (e) => e.msgId == whatsApp.msgId\r\n          );\r\n          this.dataSource.data.splice(deletedIndex, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.toastr.success(\"تم حذف هذه الرسالة بنجاح\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../whatsapp-setup\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          <i class=\"fa fa-plus-square\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllWhatsAppMsg(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search\"></i> {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"whatsApp.WhatsAppHeader\" | translate\r\n                    }}</mat-label>\r\n                    <input matInput formControlName=\"Msg_Title\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        titleCtrl?.invalid && (titleCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"titleCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"titleCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"whatsApp.WhatAppMsgs\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"msgId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ID\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.msgId }}\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"msgTitle\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"whatsApp.Title\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.msgTitle }}\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"msgHeader\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"whatsApp.Header\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.msgHeader }}\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"msgBody\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"whatsApp.Body\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\" class=\"contetnt\">\r\n                <span   [innerHTML]=\"ele.msgBody\" [title]=\"ele.msgBody\"></span>\r\n              </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                    mat-mini-fab\r\n                    color=\"primary\"\r\n                    class=\"mr-2\"\r\n                    routerLink=\"../whatsapp-setup\"\r\n                    [queryParams]=\"{\r\n                      msgId: ele.msgId,\r\n                      functionId: functionId\r\n                    }\"\r\n                  >\r\n                    <mat-icon>edit</mat-icon>\r\n                  </a>\r\n\r\n                  <button\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                    matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                    class=\"mr-2\"\r\n                    (click)=\"openDeleateDialog(ele)\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllWhatsAppMsg($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IPostWhatsAppSetupVM,\r\n  IWhatsAppVariablesVM,\r\n} from \"app/admin/models/whatsApp/whatsAppSetupVM\";\r\nimport { WhatsAppSetupService } from \"app/admin/services/whatsApp/whatsApp-setup.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-whatsapp-add\",\r\n  templateUrl: \"./whatsapp-add.component.html\",\r\n  styleUrls: [\"./whatsapp-add.component.scss\"],\r\n})\r\nexport class WhatsappAddComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  msgId: number = null;\r\n  EduCompId: number;\r\n  submitted: boolean = false;\r\n  Variables: IWhatsAppVariablesVM[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authserv: AuthService,\r\n    private msg: MessagesService,\r\n    private WhatsAppService: WhatsAppSetupService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.msgId = Number(params.get(\"msgId\"));\r\n      if (this.msgId) this.getMsgById(this.msgId);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    //get variables\r\n    this.WhatsAppService.GetAllWhatsAppVariables().subscribe((res: any) => {\r\n      res.list.map((ele) => {\r\n        ele.Name = \"{\" + ele.Name + \"}\";\r\n      });\r\n      this.Variables = res.list;\r\n    });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n    this.myForm = this.fb.group({\r\n      Id: [this.msgId],\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      Msg_Title: [null, Validators.required],\r\n      Msg_Header: [null, Validators.required],\r\n      Msg_Body: [null, Validators.required],\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  addEditWhatAppMsg() {\r\n    this.submitted = true;\r\n    let body = {} as IPostWhatsAppSetupVM;\r\n    body.Id = this.FormCtrl.Id?.value;\r\n    body.EduCompId = this.EduCompId;\r\n    body.Msg_Body = this.FormCtrl.Msg_Body?.value;\r\n    body.Msg_Header = this.FormCtrl.Msg_Header?.value;\r\n    body.Msg_Title = this.FormCtrl.Msg_Title?.value;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.WhatsAppService.addEditWhatAppMsg(body).subscribe((res: any) => {\r\n        this.submitted = false;\r\n        if (res.returnString == \"Success\") {\r\n          body.Id == null\r\n            ? this.msg.success(\"whatsApp.msgAdded\") //add\r\n            : this.msg.success(\"whatsApp.msgUpdated\"); //update\r\n        } else this.msg.error(res.returnString);\r\n        this.spinner.hide();\r\n      });\r\n    } else this.msg.warning(\"General.FormNotValid\");\r\n  }\r\n\r\n  getMsgById(msgId: number) {\r\n    this.WhatsAppService.getWhatsMsgById(msgId).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.myForm.patchValue(res.msg);\r\n      } else this.msg.error(res.returnString);\r\n    });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"whatsApp.AddMsg\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          routerLink=\"../whatsapp-index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n        <button\r\n          (click)=\"addEditWhatAppMsg()\"\r\n          mat-raised-button\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <!-- add msg -->\r\n          <ng-container *ngIf=\"msgId == 0\">\r\n            <i class=\"fa fa-plus-square\"></i>\r\n            {{ \"General.Add\" | translate }}\r\n          </ng-container>\r\n\r\n          <!-- update msg -->\r\n          <ng-container *ngIf=\"msgId != 0\">\r\n            <i class=\"fa fa-edit\"></i>\r\n            {{ \"General.Update\" | translate }}\r\n          </ng-container>\r\n        </button>\r\n      </mat-card-title>\r\n\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-8\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>{{\r\n                          \"whatsApp.WhatsAppHeader\" | translate\r\n                        }}</mat-label>\r\n                        <input matInput formControlName=\"Msg_Title\" />\r\n                        <mat-hint\r\n                          class=\"danger\"\r\n                          *ngIf=\"\r\n                            FormCtrl?.Msg_Title.invalid &&\r\n                            (FormCtrl?.Msg_Title.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span *ngIf=\"FormCtrl?.Msg_Title.errors?.required\">\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                          <span *ngIf=\"FormCtrl?.Msg_Title.errors?.whiteSpace\">\r\n                            {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>{{\r\n                          \"whatsApp.Header\" | translate\r\n                        }}</mat-label>\r\n                        <input matInput formControlName=\"Msg_Header\" />\r\n                        <mat-hint\r\n                          class=\"danger\"\r\n                          *ngIf=\"\r\n                            FormCtrl?.Msg_Header.invalid &&\r\n                            (FormCtrl?.Msg_Header.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span *ngIf=\"FormCtrl?.Msg_Header.errors?.required\">\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                          <span *ngIf=\"FormCtrl?.Msg_Header.errors?.whiteSpace\">\r\n                            {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>{{ \"whatsApp.Body\" | translate }}</mat-label>\r\n                        <textarea\r\n                          matInput\r\n                          formControlName=\"Msg_Body\"\r\n                          [placeholder]=\"'whatsApp.enterMsgBody' | translate\"\r\n                          rows=\"4\"\r\n                        ></textarea>\r\n\r\n                        <mat-hint\r\n                          class=\"danger\"\r\n                          *ngIf=\"\r\n                            FormCtrl?.Msg_Body.invalid &&\r\n                            (FormCtrl?.Msg_Body.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span *ngIf=\"FormCtrl?.Msg_Body.errors?.required\">\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                          <span *ngIf=\"FormCtrl?.Msg_Body.errors?.whiteSpace\">\r\n                            {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <div class=\"mt pr-10 scrolled350\">\r\n                    <ng-container\r\n                      *ngIf=\"Variables?.length > 0; else emptyVariables\"\r\n                    >\r\n                      <div\r\n                        class=\"media pt-0 pb-2 mt-20\"\r\n                        *ngFor=\"let variable of Variables\"\r\n                      >\r\n                        <div class=\"media-body\">\r\n                          <div class=\"input-group\">\r\n                            <input\r\n                              type=\"text\"\r\n                              class=\"form-control\"\r\n                              [value]=\"variable?.Name | whatsappVariables\"\r\n                              readonly\r\n                            />\r\n                            <div class=\"input-group-append\">\r\n                              <button\r\n                                [cdkCopyToClipboard]=\"variable.Name\"\r\n                                type=\"button\"\r\n                                class=\"btn btn-primary\"\r\n                              >\r\n                                <i class=\"ft-copy\"></i>\r\n                                {{ \"General.Copy\" | translate }}\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </ng-container>\r\n                    <ng-template #emptyVariables>\r\n                      <span class=\"alert bg-light-warning\">\r\n                        {{ \"whatsApp.VariablesIsEmpty\" | translate }}\r\n                      </span>\r\n                    </ng-template>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { environment } from \"environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CashPaymentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  CashPaymentSearch(body: any, EduCompId: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}CashPayment/returnUserDataByPhoneNumber/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  CashPaymentPost(EduCompId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}CashPayment/CashPaymentPost/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  GetItemsByLesson(\r\n    EduCompId: number,\r\n    lessonId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.http.get(\r\n      `${`${environment.apiURL}CashPayment/returnItemsByLessonId`}/${EduCompId}/${lessonId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsByUnit(\r\n    EduCompId: number,\r\n    unitId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.http.get(\r\n      `${`${environment.apiURL}CashPayment/returnItemsByUnitId`}/${EduCompId}/${unitId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsBySubject(\r\n    EduCompId: number,\r\n    subjectId: number,\r\n    itemTypeId: number,\r\n    teacherId: number\r\n  ) {\r\n    return this.http.get(\r\n      `${`${environment.apiURL}CashPayment/returnItemsBySubjectId`}/${EduCompId}/${subjectId}/${itemTypeId}/${teacherId}`\r\n    );\r\n  }\r\n\r\n  GetItemsByLessonWithEnded(\r\n    EduCompId: number,\r\n    lessonId: number,\r\n    itemTypeId: number,\r\n    teacherId: number,\r\n    ended: boolean\r\n  ) {\r\n    return this.http.get(\r\n      `${`${environment.apiURL}CashPayment/returnItemsByLessonIdSpecialViews`}/${EduCompId}/${lessonId}/${itemTypeId}/${teacherId}/${ended}`\r\n    );\r\n  }\r\n\r\n  geItemPrice(id: number, userId: number, itemTypeId: number) {\r\n    return this.http.get(\r\n      `${environment.apiURL}CashPayment/returnMaterialPriceById/${id}/${userId}/${itemTypeId}`\r\n    );\r\n  }\r\n\r\n  getPaymentsHistory(p: number, userId: any, EduCompId: number) {\r\n    return this.http.get(\r\n      `${environment.apiURL}CashPayment/returnUserPaymentsHistoryTable/${p}/${userId}//${EduCompId}`\r\n    );\r\n  }\r\n\r\n  getPaymentsExcelSheetSample() {\r\n    return this.http.get(\r\n      `${environment.apiURL}CashPayment/returnManualPaymentByExcelExampleSheet`\r\n    );\r\n  }\r\n\r\n  ManualPaymentByExcel(EduCompId: number, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}CashPayment/postManualPaymentByExcel/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { addPaymentSubscriptionDetails } from 'app/admin/models/admin/subscriptionPaln';\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubscriptionPaymentPlanService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllSubscriptionPlans() {\r\n    return this.http.get(environment.apiURL + \"AJAX/getAllSubscriptionTypes\");\r\n  }\r\n  getAllSubscriptionPaymentPlans() {\r\n    return this.http.get(environment.apiURL + \"AJAX/getallPaymentPlans\");\r\n  }\r\n\r\n  addEditSubscriptionPaymentPlan(data: addPaymentSubscriptionDetails) {\r\n    return this.http.post(\r\n      `${environment.apiURL}AJAX/addPaymentDetails`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteSubject(id: number) {\r\n    return this.http.delete(`${environment.apiURL}AJAX/deleteSubscription${id}`);\r\n  }\r\n\r\n\r\n}\r\n"],"names":["Validators","MatPaginator","MatSort","MatTableDataSource","i0","ele_r20","AnnouncementIndexComponent","route","fb","toastr","authserv","dialog","GeneralService","announcementService","spinner","queryParamMap","subscribe","params","functionId","Number","get","getUserRowFunctions","res","rowFunctions","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","EduCompId","getEduCompId","myForm","group","teacherUserId","required","getTeachersByEducompId","e","getTeacherAnnouncement","paginator","sort","p","teacherUserIdCtrl","show","getAllAnnouncements","list","itemsCount","ItemsCount","hide","error","Teachers","lstTeachers","setValue","_a","selectors","viewQuery","ctx","ctx_r12","ctx_r19","ctx_r21","AnnouncementSetupComponent","msg","roleService","datePipe","announceId","getAnnounceById","console","log","Id","FormCtrls","fromDate","From_Date","toDate","To_Date","announcementText","announcement_text","announcementPicture","attach_path","picturePath","controls","eduCompId","submitted","valid","transform","addAnnouncement","returnValue","success","deleteAttach","warning","fileName","files","name","fileSize","size","fileType","type","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","result","data","FileAsBase64","decls","vars","consts","template","_r2","CustomeValidator","ctx_r23","ctx_r25","ctx_r26","ctx_r27","ctx_r0","ExceptionalViewsComponent","authService","ManageViewsService","EducationalService","CashPaymentService","branchId","searchForm","sentCode","sentCenterCode","sentMobile","sentEmail","InCenter","resetForm","userId","itemId","itemTypeId","paymentMethod","extraViews","bigZero","paidAmount","minusNum","resetTemplate","stageId","yearId","subjectId","unitId","lessonId","searchStudent","email","username","resetFormCtrl","returnString","addExceptionalViews","reset","SubjectId","lessons","units","materials","GetUnits","GetLessons","teacherId","GetItemsByLessonWithEnded","GetItemsByUnit","GetItemsBySubject","GenerateBalanceCodesComponent","generateCodesService","fileService","getCodeTypes","codeTypes","CodeTypeId","Amount","Price","GenerateBalanceCodes","downloadFile","path","ctx_r20","ctx_r22","ctx_r24","ManageViewsComponent","resetViews","GetItemsByLesson","_b","environment","ctx_r9","ctx_r11","ctx_r13","ctx_r14","ctx_r28","ctx_r29","ctx_r30","ctx_r3","ctx_r37","ctx_r39","ctx_r41","ctx_r43","ctx_r49","ctx_r8","ManualCashPaymentComponent","getBranchId","code","mobile","centerCode","searchedMail","searchedName","paymentForm","balance","userMobile","userEmail","userName","currentBalance","uploadedFile","itemPrice","isPaymentExcel","valueChanges","getFormValidationErrors","paymentFormCtrl","disable","isPaymentExcelValidators","itemTypeIdValidators","getPaymentsHistory","CashPaymentSearch","model","info","CashPaymentPost","ManualPaymentByExcel","getPaymentsExcelSheetSample","window","open","apiURL","replace","userPaymentsHistories","userPayments","totalCount","geItemPrice","price","alreadyBought","clearValidators","setValidators","updateValueAndValidity","index","el","form","totalErrors","Errors","Object","keys","forEach","key","controlErrors","errors","keyError","push","PaymentByExcel","DeleteDialogComponent","ctx_r33","PointsSetupComponent","PointsService","lecturesForm","ByQuestion","from","to","questionAttempt","questionAttempts","attendancevalue","absencevalue","ExamForm","changeQuestionAttemptsValidation","ByQuestionValidators","ByQuestionValidatorsLectures","lecsubmitted","lecturesFormCtrls","selectedTeacherId","_c","_d","_e","_f","isLecture","addPoints","getLeturePoints","ExamSubmitted","ExamFormCtrls","getExamPoints","getPoints","lecturePoints","ExamPoints","point","deletePoint","i","findIndex","splice","Value","afterClosed","confirm","teacheruserId","selectedSubjectId","QuestionStudentsSettingsComponent","SubjectsService","paramMap","getTeacherByEduCompId","typeId","PrivatePrice","PublicPrice","IfPublicAccessibleAfterLecturesCount","changeType","isValid","$","addQuestionSettings","resetManual","getTeacherBySubjectAndEduCompId","retunValue","teachers","changeValidators","SendSingularWhatsappMsgComponent","whatsappService","SearchStudentService","formValidationService","translate","AdminEducationCompanyId","sendToStudentWhatsApp","sendToFatherWhatsApp","sendToMotherWhatsApp","isFormEmpty","response","searchResponse","instant","disabled","sendSingularWhatsAppMsg","SendWhatsappMsgComponent","whatsAppService","file","fileCtrl","sendToStudentWhatsAppCtrl","sendToFatherWhatsAppCtrl","sendToMotherWhatsAppCtrl","isSubmitted","obj","adminEducationCompanyId","msgCtrl","_g","_h","sendWhatsAppMsg","isSendAllSuccess","RouterModule","AddTeacherComponent","AssignSubjectToTeacherComponent","WhatsappAddComponent","WhatsAppIndexComponent","SubscriptionPaymentPlanComponent","routes","component","children","redirectTo","pathMatch","SetupRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","NgbModule","MaterialModule","SharedModule","NgxSpinnerModule","NgxPaginationModule","QuillModule","SetupModule","forRoot","declarations","i1","ele_r19","subscriptionPaymentPlanService","page","getAllSubscriptionPaymentPlans","id","deleteSubject","deleteSubscruptionPlan","ElementRef","teacherService","getAllTeachers","pattern","whiteSpace","minLength","maxLength","startsWith","password","confirmedPass","Description","validator","mustMatch","reverse","ProfilePicture","addEditTeacher","imgPreview","teacher","patchValue","teacher_ar_name","profilePicture","_r5","generalService","subjectIds","getAllEduStagesList","Stages","subjectIdsCtrl","length","assignSubjectToTeacher","Years","Subjects","getEduYearByStageId","YearId","getSubjectsByYearIdNew","WhatsAppService","Msg_Title","getAllWhatsAppMsg","count","whatsApp","msgTitle","removeWhatsApp","RemoveWhatsAppMsg","msgId","deletedIndex","getMsgById","GetAllWhatsAppVariables","map","ele","Name","Variables","Msg_Header","Msg_Body","body","FormCtrl","addEditWhatAppMsg","getWhatsMsgById","_r6","http","post","ended","factory","providedIn","SubscriptionPaymentPlanService","delete"],"sourceRoot":"webpack:///"}