{"version":3,"file":"src_app_admin_dashboard_module_ts.js","mappings":"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","sources":["./src/app/admin/dashboard-routing.module.ts","./src/app/admin/dashboard.module.ts","./src/app/admin/pages/reservation/reservation-details/reservation-details.component.ts","./src/app/admin/pages/reservation/reservation-details/reservation-details.component.html","./src/app/admin/pages/reservation/reservation-edit/reservation-edit.component.ts","./src/app/admin/pages/reservation/reservation-edit/reservation-edit.component.html","./src/app/admin/pages/reservation/reservation-index/reservation-index.component.ts","./src/app/admin/pages/reservation/reservation-index/reservation-index.component.html","./src/app/admin/pages/reservation/reservation-status/reservation-status.component.ts","./src/app/admin/pages/reservation/reservation-status/reservation-status.component.html","./src/app/admin/pages/reservation/student-discount/student-discount.component.ts","./src/app/admin/pages/reservation/student-discount/student-discount.component.html","./src/app/admin/pages/reservation/students/students-index/students-index.component.ts","./src/app/admin/pages/reservation/students/students-index/students-index.component.html","./src/app/admin/pages/users/center-branches/center-branches.component.ts","./src/app/admin/pages/users/center-branches/center-branches.component.html","./src/app/admin/pages/users/functions-setup/functions-setup.component.ts","./src/app/admin/pages/users/functions-setup/functions-setup.component.html","./src/app/admin/pages/users/roles/add-role/add-role.component.ts","./src/app/admin/pages/users/roles/add-role/add-role.component.html","./src/app/admin/pages/users/roles/role-functions/role-functions.component.html","./src/app/admin/pages/users/roles/role-functions/role-functions.component.ts","./src/app/admin/pages/users/user-branches-roles/user-branches-roles.component.ts","./src/app/admin/pages/users/user-branches-roles/user-branches-roles.component.html","./src/app/admin/pages/users/users/users.component.ts","./src/app/admin/pages/users/users/users.component.html","./src/app/admin/services/Admin/manage-views.service.ts","./src/app/admin/services/Admin/reservation.service.ts","./src/app/admin/services/Admin/subjectMaterials.service.ts","./src/app/admin/services/roles/branches.service.ts","./src/app/admin/services/roles/functions.service.ts","./src/app/admin/services/roles/roles.service.ts","./src/app/admin/services/roles/users.service.ts","./src/app/shared/directives/mat-paginator-style.directive.ts","./src/app/shared/services/General/group-by.service.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { UserBalanceDetailsComponent } from \"app/shared/components/user-balance-details/user-balance-details.component\";\r\nimport { IsAdminGuard } from \"app/shared/services/auth/Guards/roles/is-admin.guard\";\r\nimport { ReservationEditComponent } from \"./pages/reservation/reservation-edit/reservation-edit.component\";\r\nimport { ReservationIndexComponent } from \"./pages/reservation/reservation-index/reservation-index.component\";\r\nimport { ReservationStatusComponent } from \"./pages/reservation/reservation-status/reservation-status.component\";\r\nimport { StudentDiscountComponent } from \"./pages/reservation/student-discount/student-discount.component\";\r\nimport { StudentsIndexComponent } from \"./pages/reservation/students/students-index/students-index.component\";\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { UsersComponent } from \"./pages/users/users/users.component\";\r\nimport { HelpingRequestsComponent } from \"app/shared/components/zoom-helping-requests/helping-requests/helping-requests.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"users\",\r\n\t\tcomponent: UsersComponent,\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"user-roles-branches/:userId/:roleId\",\r\n\t\tcomponent: UserBranchesRolesComponent,\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"functions\",\r\n\t\tcomponent: FunctionsSetupComponent,\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"center-branches\",\r\n\t\tcomponent: CenterBranchesComponent,\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"students-index\",\r\n\t\tcomponent: StudentsIndexComponent,\r\n\t},\r\n\t{\r\n\t\tpath: \"roles\",\r\n\t\tcomponent: AddRoleComponent,\r\n\t},\r\n\t{\r\n\t\tpath: \"role-fuctions/:roleId\",\r\n\t\tcomponent: RoleFunctionsComponent,\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"helping-requests\",\r\n\t\tcomponent: HelpingRequestsComponent,\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"reservation\",\r\n\t\tchildren: [\r\n\t\t\t{ path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n\t\t\t{ path: \"index\", component: ReservationIndexComponent },\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit-reservation/:reservationId\",\r\n\t\t\t\tcomponent: ReservationEditComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"reservation-status/:reservationId\",\r\n\t\t\t\tcomponent: ReservationStatusComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"student-discount\",\r\n\t\t\t\tcomponent: StudentDiscountComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"balance-details/:userId\",\r\n\t\t\t\tcomponent: UserBalanceDetailsComponent,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"educational-setup\",\r\n\t\tloadChildren: () =>\r\n\t\t\timport(\"./pages/educational-setup/educational-setup.module\").then(\r\n\t\t\t\t(m) => m.EducationalSetupModule\r\n\t\t\t),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"setup\",\r\n\t\tloadChildren: () => import(\"./pages/setup/setup.module\").then((m) => m.SetupModule),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"exams-setup\",\r\n\t\tloadChildren: () => import(\"./pages/exams-setup/exams.module\").then((m) => m.ExamsModule),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: \"reports\",\r\n\t\tloadChildren: () => import(\"./pages/reports/reports.module\").then((m) => m.ReportsModule),\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"./../shared/shared.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\r\nimport { UsersComponent } from \"./pages/users/users/users.component\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { UserBranchesRolesComponent } from \"./pages/users/user-branches-roles/user-branches-roles.component\";\r\nimport { FunctionsSetupComponent } from \"./pages/users/functions-setup/functions-setup.component\";\r\nimport { CenterBranchesComponent } from \"./pages/users/center-branches/center-branches.component\";\r\nimport { MatPaginatorStyleDirective } from \"app/shared/directives/mat-paginator-style.directive\";\r\nimport { ReservationIndexComponent } from \"./pages/reservation/reservation-index/reservation-index.component\";\r\nimport { ReservationEditComponent } from \"./pages/reservation/reservation-edit/reservation-edit.component\";\r\nimport { ReservationDetailsComponent } from \"./pages/reservation/reservation-details/reservation-details.component\";\r\nimport { ReservationStatusComponent } from \"./pages/reservation/reservation-status/reservation-status.component\";\r\nimport { StudentDiscountComponent } from \"./pages/reservation/student-discount/student-discount.component\";\r\nimport { StudentsIndexComponent } from \"./pages/reservation/students/students-index/students-index.component\";\r\nimport { AddRoleComponent } from \"./pages/users/roles/add-role/add-role.component\";\r\nimport { RoleFunctionsComponent } from \"./pages/users/roles/role-functions/role-functions.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    UserBranchesRolesComponent,\r\n    FunctionsSetupComponent,\r\n    CenterBranchesComponent,\r\n    MatPaginatorStyleDirective,\r\n    ReservationIndexComponent,\r\n    ReservationEditComponent,\r\n    ReservationDetailsComponent,\r\n    ReservationStatusComponent,\r\n    StudentDiscountComponent,\r\n    StudentsIndexComponent,\r\n    AddRoleComponent,\r\n    RoleFunctionsComponent,\r\n\r\n  ],\r\n})\r\nexport class DashboardModule {}\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { IReservationVM } from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-details\",\r\n  templateUrl: \"./reservation-details.component.html\",\r\n  styleUrls: [\"./reservation-details.component.scss\"],\r\n})\r\nexport class ReservationDetailsComponent implements OnInit {\r\n  reservation: IReservationVM;\r\n\r\n  constructor(\r\n    private reservationService: ReservationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    const reservationId = data.reservationId;\r\n    this.reservationService\r\n      .ReservationDetails(reservationId)\r\n      .subscribe((res: any) => {\r\n        this.reservation = res;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<h1 mat-dialog-title>{{ \"Reservation.ReservationDetails\" | translate }}</h1>\r\n<div mat-dialog-content>\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-striped m-0\" *ngIf=\"reservation\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ \"labels.Name\" | translate }}</th>\r\n          <th>{{ \"labels.Email\" | translate }}</th>\r\n          <th>{{ \"labels.Religion\" | translate }}</th>\r\n          <th>{{ \"labels.Gender\" | translate }}</th>\r\n          <th>{{ \"labels.EducationType\" | translate }}</th>\r\n          <th>{{ \"Reservation.AreaReservation\" | translate }}</th>\r\n          <th>{{ \"labels.branchName\" | translate }}</th>\r\n          <th>{{ \"labels.Hobbies\" | translate }}</th>\r\n          <th>{{ \"labels.Competitions\" | translate }}</th>\r\n          <th>{{ \"labels.Workshops\" | translate }}</th>\r\n          <th>{{ \"labels.SchoolName\" | translate }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ reservation?.Name }}</td>\r\n\r\n          <td>{{ reservation?.Email }}</td>\r\n\r\n          <td>{{ reservation?.Religion.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.Gender.gender_ar_name }}</td>\r\n\r\n          <td>{{ reservation?.EducationType.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.Area.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.CenterBranch }}</td>\r\n\r\n          <td>{{ reservation?.Hobbies }}</td>\r\n\r\n          <td>{{ reservation?.Competitions }}</td>\r\n\r\n          <td>{{ reservation?.Workshops }}</td>\r\n\r\n          <td>\r\n            {{ reservation?.SchoolName }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-striped m-0\" *ngIf=\"reservation\">\r\n      <thead>\r\n        <tr>\r\n          <th>{{ \"labels.GuardianJob\" | translate }}</th>\r\n          <th>{{ \"labels.FatherMobile\" | translate }}</th>\r\n          <th>{{ \"labels.FatherWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.MotherMobile\" | translate }}</th>\r\n          <th>{{ \"labels.MotherWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.StudentNumber\" | translate }}</th>\r\n          <th>{{ \"labels.StudentWhatsapp\" | translate }}</th>\r\n          <th>{{ \"labels.HomeTelephone\" | translate }}</th>\r\n          <th>{{ \"labels.Address\" | translate }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ reservation?.GuardianJob }}</td>\r\n\r\n          <td>{{ reservation?.FatherMobile }}</td>\r\n\r\n          <td>{{ reservation?.FatherWhatsAppNumber.Ar_Name }}</td>\r\n\r\n          <td>{{ reservation?.MotherMobile }}</td>\r\n\r\n          <td>{{ reservation?.MotherWhatsAppNumber }}</td>\r\n\r\n          <td>{{ reservation?.StudentNumber }}</td>\r\n\r\n          <td>{{ reservation?.StudentWhatsAppNumber }}</td>\r\n\r\n          <td>{{ reservation?.HomeTelephon }}</td>\r\n\r\n          <td>{{ reservation?.Address }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button\r\n    mat-button\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"btn btn-danger float-right\"\r\n  >\r\n    Close\r\n  </button>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Areas,\r\n  CenterBranchesVM,\r\n  EducationalDivisionsVM,\r\n  EducationTypesVM,\r\n  GendersVM,\r\n  IGetReservationEditVM,\r\n  ISubmitReservationEditVM,\r\n  ReligionsVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-edit\",\r\n  templateUrl: \"./reservation-edit.component.html\",\r\n  styleUrls: [\"./reservation-edit.component.scss\"],\r\n})\r\nexport class ReservationEditComponent implements OnInit {\r\n  reservationId: number;\r\n  EduCompId: any;\r\n  functionId: any;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  ProfilePicture_Path: any;\r\n  ProfilePicture: any;\r\n  Religions: ReligionsVM[];\r\n  Genders: GendersVM[];\r\n  EducationalDivisions: EducationalDivisionsVM[];\r\n  EducationTypes: EducationTypesVM[];\r\n  Areas: Areas[];\r\n  CenterBranches: CenterBranchesVM[];\r\n\r\n  constructor(\r\n    private reservationServ: ReservationService,\r\n    private fb: FormBuilder,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private authserv: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.reservationId = Number(params.get(\"reservationId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.getReservationEdit(this.reservationId);\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [this.reservationId, [Validators.required]],\r\n      Id: [\"\", [Validators.required]],\r\n      UserName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Religion: [\"\", [Validators.required]],\r\n      Gender: [\"\", [Validators.required]],\r\n      EducationTypeId: [\"\", [Validators.required]],\r\n      CenterBranchId: [\"\", [Validators.required]],\r\n      SchoolName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      EducationalDivision: [\"\", [Validators.required]],\r\n      GuardianJob: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      Area: [\"\", [Validators.required]],\r\n      Address: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      StudentNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      StudentWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      FatherMobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      FatherWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      MotherMobile: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      MotherWhatsAppNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(11),\r\n          Validators.minLength(11),\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/),\r\n          CustomeValidator.startsWith,\r\n        ],\r\n      ],\r\n      HomeTelephone: [\r\n        \"\",\r\n        [Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/)],\r\n      ],\r\n      SentviewId: [\"\", [Validators.required]],\r\n      currentYear: [\"\", [Validators.required]],\r\n      EduCompId: [\"\", [Validators.required]],\r\n      City: [\"\"],\r\n      competitions: [\"\"],\r\n      Hobbies: [\"\"],\r\n      workshops: [\"\"],\r\n    });\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.FormCtrls?.EduCompIdCtrl.setValue(e.EduCompId);\r\n    });\r\n  }\r\n\r\n  getReservationEdit(reservationId: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getReservationEdit<IGetReservationEditVM>(reservationId, this.EduCompId)\r\n      .subscribe((res) => {\r\n        // console.log(\"ReservationEditr\", res);\r\n        this.myForm.patchValue(res.Reservation);\r\n        this.Religions = res.Religion;\r\n        this.Genders = res.Gender;\r\n        this.EducationalDivisions = res.EducationalDivision;\r\n        this.EducationTypes = res.EducationTypeId;\r\n        this.Areas = res.Area;\r\n        this.ProfilePicture = res.Reservation?.ProfilePicture_Path;\r\n        this.ProfilePicture_Path = `mozakretyapi${res.Reservation?.ProfilePicture_Path}`;\r\n        this.returnBranchesByEducTypeId(res.Reservation?.EducationTypeId);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SubmitReservation() {\r\n    if (!(this.ProfilePicture || this.ProfilePicture_Path)) {\r\n      this.toaster.warning(\"يجب اختيار صوره شخصية\");\r\n      return;\r\n    }\r\n\r\n    let data: ISubmitReservationEditVM = {\r\n      Reservation: this.myForm.value,\r\n      profilePicture: this.ProfilePicture || this.ProfilePicture_Path,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationServ.SubmitReservationEdit(data).subscribe((res: any) => {\r\n        //  console.log(res);\r\n        if (res.returnValue == 200 && res.returnString == \"Success\") {\r\n          this.toaster.success(\"تم تغير البيانات بنجاح\");\r\n        } else {\r\n          this.toaster.error(res.returnString, res.returnValue);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  returnBranchesByEducTypeId(typeId: any) {\r\n    this.CenterBranches = [];\r\n    this.reservationServ\r\n      .returnBranchesByEducTypeId<CenterBranchesVM[]>(typeId, this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CenterBranches = res;\r\n      });\r\n  }\r\n\r\n  onChange(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.ProfilePicture_Path = fileReder;\r\n        this.ProfilePicture = data;\r\n      };\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"Reservation.ReservationData\" | translate }} -\r\n      {{ FormCtrls.UserName?.value }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"Reservation.ReservationData\" | translate }}\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"form-container form-horizontal\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"UserName\" />\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.UserName.invalid &&\r\n                    (FormCtrls.UserName.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.UserName.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.UserName.errors?.bigZero\">\r\n                    {{ \"labels.MustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Religion\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"Religion\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let Religion of Religions\"\r\n                    [value]=\"Religion.Id\"\r\n                  >\r\n                    {{ Religion.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Religion.invalid &&\r\n                    (FormCtrls.Religion.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Religion.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-2 col-12\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                mat-raised-button\r\n                (click)=\"fileInput.click()\"\r\n              >\r\n                {{ \"labels.ProfilePicture\" | translate }}\r\n              </button>\r\n              <input\r\n                hidden\r\n                (change)=\"onChange($event)\"\r\n                #fileInput\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                id=\"file\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"col-md-2 col-12\">\r\n              <div class=\"media\">\r\n                <img\r\n                  class=\"rounded mr-3\"\r\n                  [src]=\"ProfilePicture_Path\"\r\n                  width=\"70\"\r\n                  height=\"70\"\r\n                  alt=\"avatar\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Gender\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"Gender\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }} </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let Gender of Genders\"\r\n                    [value]=\"Gender.gender_id\"\r\n                  >\r\n                    {{ Gender.gender_ar_name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Gender.invalid &&\r\n                    (FormCtrls.Gender.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Gender.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.EducationType\" | translate }}\r\n                </mat-label>\r\n                <mat-select\r\n                  formControlName=\"EducationTypeId\"\r\n                  (selectionChange)=\"\r\n                    returnBranchesByEducTypeId(FormCtrls.EducationTypeId.value)\r\n                  \"\r\n                >\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let EducationType of EducationTypes\"\r\n                    [value]=\"EducationType.Id\"\r\n                  >\r\n                    {{ EducationType.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.EducationTypeId.invalid &&\r\n                    (FormCtrls.EducationTypeId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.EducationTypeId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.CenterBranch\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"CenterBranchId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }} </mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let CenterBranche of CenterBranches\"\r\n                    [value]=\"CenterBranche.Id\"\r\n                  >\r\n                    {{ CenterBranche.Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.CenterBranchId.invalid &&\r\n                    (FormCtrls.CenterBranchId.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.CenterBranchId.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.SchoolName\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"SchoolName\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.SchoolName.invalid &&\r\n                    (FormCtrls.SchoolName.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.SchoolName.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.SchoolName.errors?.whiteSpace\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.EducationalDivision\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"EducationalDivision\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let EducationalDivision of EducationalDivisions\"\r\n                    [value]=\"EducationalDivision.Id\"\r\n                  >\r\n                    {{ EducationalDivision.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.EducationalDivision.invalid &&\r\n                    (FormCtrls.EducationalDivision.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.EducationalDivision.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.GuardianJob\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"GuardianJob\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.GuardianJob.invalid &&\r\n                    (FormCtrls.GuardianJob.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.GuardianJob.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.GuardianJob.errors?.whiteSpace\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.StudentNumber\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"StudentNumber\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.StudentNumber.invalid &&\r\n                    (FormCtrls.StudentNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.StudentNumber.errors?.maxlength ||\r\n                      FormCtrls.StudentNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentNumber.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.StudentWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"StudentWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.StudentWhatsAppNumber.invalid &&\r\n                    (FormCtrls.StudentWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.required\"\r\n                  >\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.StudentWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.StudentWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.StudentWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.HomeTelephone\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"HomeTelephone\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.HomeTelephone.invalid &&\r\n                    (FormCtrls.HomeTelephone.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.HomeTelephone.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.FatherMobile\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"FatherMobile\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FatherMobile.invalid &&\r\n                    (FormCtrls.FatherMobile.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FatherMobile.errors?.maxlength ||\r\n                      FormCtrls.FatherMobile.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherMobile.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.FatherWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"FatherWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.FatherWhatsAppNumber.invalid &&\r\n                    (FormCtrls.FatherWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.FatherWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.FatherWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.FatherWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.MotherMobile\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"MotherMobile\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.MotherMobile.invalid &&\r\n                    (FormCtrls.MotherMobile.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.MotherMobile.errors?.maxlength ||\r\n                      FormCtrls.MotherMobile.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherMobile.errors?.startsWith\">\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.MotherWhatsapp\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  formControlName=\"MotherWhatsAppNumber\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.MotherWhatsAppNumber.invalid &&\r\n                    (FormCtrls.MotherWhatsAppNumber.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.MotherWhatsAppNumber.errors?.maxlength ||\r\n                      FormCtrls.MotherWhatsAppNumber.errors?.minlength\r\n                    \"\r\n                  >\r\n                    You must enter 11 number.\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.pattern\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf=\"FormCtrls.MotherWhatsAppNumber.errors?.startsWith\"\r\n                  >\r\n                    {{ \"labels.NumberMustStartWith\" | translate }} .\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"Reservation.AreaReservation\" | translate }}\r\n                </mat-label>\r\n                <mat-select formControlName=\"Area\">\r\n                  <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let area of Areas\" [value]=\"area.Id\">\r\n                    {{ area.Ar_Name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Area.invalid &&\r\n                    (FormCtrls.Area.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Area.errors?.required\">\r\n                    {{ \"labels.MustChoosevalue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.Address\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"Address\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.Address.invalid &&\r\n                    (FormCtrls.Address.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"FormCtrls.Address.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"FormCtrls.Address.errors?.whiteSpace\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-radio-group formControlName=\"currentYear\" class=\"row\">\r\n                <div class=\"col-4\">\r\n                  <mat-radio-button [value]=\"1\">\r\n                    {{ \"labels.CurrentYear\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <mat-radio-button [value]=\"0\"\r\n                    >{{ \"labels.NextYear\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitReservation()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<ngx-spinner></ngx-spinner>\r\n","import { NgxSpinnerModule, NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Status,\r\n  city,\r\n  StudentGroupVM,\r\n  IReservationVM,\r\n  IGetReservationListVM,\r\n  ISearchReservationVM,\r\n  IAreaVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ReservationDetailsComponent } from \"../reservation-details/reservation-details.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-index\",\r\n  templateUrl: \"./reservation-index.component.html\",\r\n  styleUrls: [\"./reservation-index.component.scss\"],\r\n})\r\nexport class ReservationIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  // Branches: CenterBranchesVM[];\r\n  //  Dates: any;\r\n  Status: Status[];\r\n  Cities: city[];\r\n  Areas: IAreaVM[];\r\n  Reservations: IReservationVM[];\r\n  groups: StudentGroupVM[];\r\n  itemsCount: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"accountName\",\r\n    \"code\",\r\n    \"branch\",\r\n    \"mobile\",\r\n    \"status\",\r\n    \"group\",\r\n    \"discount\",\r\n    \"date\",\r\n    \"note\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IReservationVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private reservationService: ReservationService,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.myForm = this.fb.group({\r\n      EduCompId: [this.EduCompId, Validators.required],\r\n      branchId: [],\r\n      email: [\"\", Validators.email],\r\n      name: [\"\"],\r\n      mobile: [\"\"],\r\n      code: [\"\"],\r\n      groupId: [\"\"],\r\n      statusId: [\"\"],\r\n      cityId: [\"\"],\r\n      currentYear: [1],\r\n      page: [],\r\n    });\r\n\r\n    //this.returnBranchesByEduCompId();\r\n    this.getGroupsByEduCompId();\r\n    this.returnStatus();\r\n    this.getArea();\r\n    this.getReservationsList(1);\r\n  }\r\n\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchId\");\r\n  }\r\n\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  get currentYearCtrl() {\r\n    return this.myForm.get(\"currentYear\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n      this.branchIdCtrl.setValue(e.branchId);\r\n      this.getReservationsList(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getReservationsList(p) {\r\n    this.page?.setValue(p);\r\n\r\n    // if (!this.branchIdCtrl.value || this.branchIdCtrl.value == \"null\") {\r\n    //   this.toaster.warning(\"You Must Select Branch\");\r\n    //   return;\r\n    // }\r\n\r\n    if (!this.EduCompIdCtrl.value || this.EduCompIdCtrl.value == \"null\") {\r\n      this.toaster.warning(\"You Must Select Center\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationService\r\n        .getReservationsList<ISearchReservationVM, IGetReservationListVM>(\r\n          this.myForm.value\r\n        )\r\n        .subscribe((res: any) => {\r\n          //console.log(\"Reservations\", res);\r\n          this.Reservations = res.list;\r\n          this.dataSource = new MatTableDataSource(res.list);\r\n          this.itemsCount = res.itemsCount;\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getGroupsByEduCompId() {\r\n    this.SubjectMaterialsService.getGroupsByEduCompId<StudentGroupVM[]>(\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      if (res.retunValue == 1) {\r\n        this.groups = res.lstEduCompGroups;\r\n      }\r\n    });\r\n  }\r\n\r\n  returnStatus() {\r\n    this.reservationService.returnStatus<Status[]>().subscribe((res) => {\r\n      this.Status = res;\r\n    });\r\n  }\r\n\r\n  // returnCities() {\r\n  //   this.reservationService.returnCities<city[]>().subscribe((res) => {\r\n  //     this.Cities = res;\r\n  //   });\r\n  // }\r\n\r\n  getArea() {\r\n    this.reservationService.getArea<IAreaVM[]>().subscribe((res) => {\r\n      this.Areas = res;\r\n    });\r\n  }\r\n\r\n  ReservationDetailsDialog(reservationId: number): void {\r\n    this.dialog\r\n      .open(ReservationDetailsComponent, {\r\n        data: {\r\n          reservationId: reservationId,\r\n        },\r\n        minWidth: \"90vw\",\r\n      })\r\n      .afterClosed()\r\n      .subscribe();\r\n  }\r\n\r\n  Reset() {\r\n    this.myForm.reset();\r\n    this.EduCompIdCtrl.setValue(this.EduCompId);\r\n    this.branchIdCtrl.setValue(this.branchId);\r\n    this.currentYearCtrl.setValue(1);\r\n  }\r\n\r\n  // returnBranchesByEduCompId() {\r\n  //   this.reservationService\r\n  //     .returnBranchesByEduCompId<CenterBranchesVM[]>(this.EduCompId)\r\n  //     .subscribe((res: any) => {\r\n  //       this.Branches = res;\r\n  //     });\r\n  // }\r\n\r\n  // Return Avaliable Dates By BranchId\r\n  // GetAvaliableDatesByBranchId(branchId: any) {\r\n  //   if (branchId) {\r\n  //     this.reservationServ\r\n  //       .GetAvaliableDatesByBranchId(branchId, true, true)\r\n  //       .subscribe((res: any) => {\r\n  //         this.Dates = res;\r\n  //       });\r\n  //   } else {\r\n  //     this.Dates = [];\r\n  //   }\r\n  // }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"name\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"mobile\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.CenterCode\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"code\" formControlName=\"code\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label\r\n                      >{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let branch of Branches\"\r\n                        [value]=\"branch.Id\"\r\n                      >\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{ group.groupName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"statusId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let status of Status\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{ status.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Reservation.AreaReservation\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"cityId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option *ngFor=\"let area of Areas\" [value]=\"area.Id\">\r\n                        {{ area.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-radio-group formControlName=\"currentYear\" class=\"row\">\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button [value]=\"1\">\r\n                        {{ \"labels.CurrentYear\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                      <mat-radio-button [value]=\"0\"\r\n                        >{{ \"labels.NextYear\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getReservationsList(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info\"\r\n          (click)=\"Reset()\"\r\n        >\r\n          {{ \"General.Reset\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.ReservationList\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- accountName Column -->\r\n            <ng-container matColumnDef=\"accountName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.AccountName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.UserName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CenterCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CenterCode }}</td>\r\n            </ng-container>\r\n\r\n            <!-- branch Column -->\r\n            <ng-container matColumnDef=\"branch\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.CenterBranchName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.StudentNumber }}</td>\r\n            </ng-container>\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Status?.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let reservation\">\r\n                <span *ngFor=\"let group of reservation?.Group\">\r\n                  - {{ group.studyingGroup?.groupName }} <br />\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- discount Column -->\r\n            <ng-container matColumnDef=\"discount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.Discount?.Ar_Name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- date Column -->\r\n            <ng-container matColumnDef=\"date\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Date\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.ReservationDate | NewDate }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Status?.Notes }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let reservation\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    routerLink=\"/dashboard/reservation/edit-reservation/{{\r\n                      reservation?.Id\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/reservation/reservation-status/{{\r\n                      reservation?.Id\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Status'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Change Status\"\r\n                  >\r\n                    <i class=\"ft-settings font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Discount'\"\r\n                    routerLink=\"/dashboard/reservation/student-discount/{{\r\n                      reservation?.Status?.userId\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Change Discount\"\r\n                  >\r\n                    <i class=\"fa fa-money font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                  <a\r\n                    (click)=\"ReservationDetailsDialog(reservation.Id)\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    *ngIf=\"fun.functionName === 'Details'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Details\"\r\n                  >\r\n                    <i class=\"ft-alert-circle font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getReservationsList($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  Status,\r\n  StudentStatusListVM,\r\n  StudentGroupVM,\r\n  StatusReasons,\r\n  CenterBranchesVM,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-reservation-status\",\r\n  templateUrl: \"./reservation-status.component.html\",\r\n  styleUrls: [\"./reservation-status.component.scss\"],\r\n})\r\nexport class ReservationStatusComponent implements OnInit {\r\n  reservationId: number;\r\n  EduCompId: any;\r\n  branchId: any;\r\n  functionId: any;\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  AcceptReservation: any;\r\n  userName: string = \"\";\r\n  itemsCount: any;\r\n  statuses: Status[];\r\n  studyingGroups: StudentGroupVM[];\r\n  Reasons: StatusReasons[];\r\n  CenterBranches: CenterBranchesVM[];\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get Id() {\r\n    return this.myForm.get(\"EduCompUser_Status.Id\");\r\n  }\r\n\r\n  get statusId() {\r\n    return this.myForm.get(\"EduCompUser_Status.statusId\");\r\n  }\r\n\r\n  get groupId() {\r\n    return this.myForm.get(\"EduCompUser_Status.groupId\");\r\n  }\r\n\r\n  get note() {\r\n    return this.myForm.get(\"EduCompUser_Status.note\");\r\n  }\r\n\r\n  get EduCompUserId() {\r\n    return this.myForm.get(\"EduCompUser_Status.EduCompUserId\");\r\n  }\r\n\r\n  get statusReasonId() {\r\n    return this.myForm.get(\"EduCompUser_Status.statusReasonId\");\r\n  }\r\n\r\n  get CenterBranchId() {\r\n    return this.myForm.get(\"EduCompUser_Status.CenterBranchId\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"code\",\r\n    \"status\",\r\n    \"reason\",\r\n    \"group\",\r\n    \"from\",\r\n    \"to\",\r\n    \"note\",\r\n  ];\r\n  dataSource: MatTableDataSource<StudentStatusListVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private fb: FormBuilder,\r\n    private reservationServ: ReservationService,\r\n    private toaster: ToastrService,\r\n    private authservice: AuthService\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.reservationId = Number(params.get(\"reservationId\"));\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authservice.getEduCompId();\r\n    this.branchId = this.authservice.getBranchId();\r\n    this.getStudentStatus(this.reservationId, this.EduCompId);\r\n    this.returnBranchesByEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      EduCompUser_Status: this.fb.group({\r\n        Id: [\"\", Validators.required],\r\n        statusId: [\"\", Validators.required],\r\n        groupId: [\"\"],\r\n        note: [\"\"],\r\n        EduCompUserId: [\"\"],\r\n        statusReasonId: [\"\"],\r\n        CenterBranchId: [\"\"],\r\n      }),\r\n      studentUserId: [\"\", Validators.required],\r\n      Code: [\"\"],\r\n      reserveId: [\"\"],\r\n      EduCompId: [\"\"],\r\n      AcceptReservation: [\"\"],\r\n    });\r\n\r\n    this.FormCtrls.AcceptReservation?.setValue(this.AcceptReservation);\r\n    this.FormCtrls.EduCompId?.setValue(this.EduCompId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authservice.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentStatus(this.reservationId, e.EduCompId);\r\n      this.EduCompUserId.setValue(e.EduCompId);\r\n    });\r\n\r\n    this.authservice.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n      this.CenterBranchId.setValue(e.branchId);\r\n    });\r\n\r\n    this.dataSource.paginator! = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getStudentStatus(reservationId: any, EduCompId: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .GetStudentStatus(reservationId, EduCompId)\r\n      .subscribe((res: any) => {\r\n        // console.log('GetStudentStatus', res);\r\n        this.getReasonsByStatusId(res.EduCompUser_Status.statusId);\r\n\r\n        this.statuses = res.statuses;\r\n        this.studyingGroups = res.studyingGroups;\r\n        this.myForm.patchValue(res);\r\n        this.FormCtrls.studentUserId.setValue(res.studentUserId);\r\n        this.userName = res.userName;\r\n        this.FormCtrls.AcceptReservation?.setValue(this.AcceptReservation);\r\n        this.ReservationStatusPaging(1);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  SubmitReservationStatus(event: any) {\r\n    this.CenterBranchId.setValue(this.branchId);\r\n\r\n    if (!this.CenterBranchId?.value) {\r\n      this.toaster.warning(\"يجب اختيار فرع\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      event.target.disabled = true;\r\n      this.spinner.show();\r\n      this.reservationServ\r\n        .SubmitReservationStatus(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          event.target.disabled = false;\r\n          if (res.returnValue == 200 && res.returnString == \"Success\") {\r\n            this.toaster.success(\"تم حفظ التغيرات بنجاح\");\r\n            this.ReservationStatusPaging(1);\r\n            this.getStudentStatus(this.reservationId, this.EduCompId); //retrieving the latest EduCompUserStatus Id\r\n          } else {\r\n            this.toaster.error(res.returnString, res.returnValue);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  ReservationStatusPaging(page: any) {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .ReservationStatusPaging(page, this.EduCompUserId?.value)\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource(res.list);\r\n        this.itemsCount = res.itemsCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getReasonsByStatusId(StatusId: any) {\r\n    this.Reasons = [];\r\n    this.statusReasonId?.setValue(\"\");\r\n    if (StatusId) {\r\n      this.reservationServ\r\n        .getReasonsByStatusId<StatusReasons[]>(StatusId)\r\n        .subscribe((res) => {\r\n          this.Reasons = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  returnBranchesByEduCompId() {\r\n    this.CenterBranches = [];\r\n    this.reservationServ\r\n      .returnBranchesByEduCompId<CenterBranchesVM[]>(this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CenterBranches = res;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"labels.StudentStatusEdit\" | translate }} - {{ userName }}\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"labels.StudentStatusEdit\" | translate }}\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"form-container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" [value]=\"userName\" readonly=\"\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.CenterCode\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"Code\" formControlName=\"Code\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <ng-container formGroupName=\"EduCompUser_Status\">\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                  <mat-select\r\n                    formControlName=\"statusId\"\r\n                    (selectionChange)=\"getReasonsByStatusId(statusId?.value)\"\r\n                  >\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let status of statuses\"\r\n                      [value]=\"status.Id\"\r\n                    >\r\n                      {{ status.Ar_Name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                  <mat-select formControlName=\"groupId\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let group of studyingGroups\"\r\n                      [value]=\"group.Id\"\r\n                    >\r\n                      {{ group.groupName }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div\r\n                class=\"col-md-4 col-12\"\r\n                *ngIf=\"\r\n                  statusId?.value == 2 ||\r\n                  statusId?.value == 4 ||\r\n                  statusId?.value == 5\r\n                \"\r\n              >\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>{{ \"labels.Reason\" | translate }} </mat-label>\r\n                  <mat-select formControlName=\"statusReasonId\">\r\n                    <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let reason of Reasons\"\r\n                      [value]=\"reason.Id\"\r\n                    >\r\n                      {{ reason.reasonText }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col-8\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                  <textarea matInput type=\"text\" formControlName=\"note\">\r\n                  </textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitReservationStatus($event)\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.StudentStatus\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CenterCode\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- status Column -->\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Status\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Status?.Ar_Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- reason Column -->\r\n            <ng-container matColumnDef=\"reason\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Reason\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.reasonText }}</td>\r\n            </ng-container>\r\n\r\n            <!-- group Column -->\r\n            <ng-container matColumnDef=\"group\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Group\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Group.groupName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- from Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let data\">\r\n                {{ data?.FromDate | NewDate }} {{ data?.FromDate | Time }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- to Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let data\">\r\n                {{ data?.ToDate | NewDate }} {{ data?.ToDate | Time }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Note }}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"ReservationStatusPaging($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { ManageViewsService } from \"./../../../services/Admin/manage-views.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  CustomDiscountDropMV,\r\n  IStudentCustomDiscountsMV,\r\n  StudentCustomDiscountsListMV,\r\n} from \"app/admin/models/admin/reservation\";\r\nimport { ReservationService } from \"app/admin/services/Admin/reservation.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-student-discount\",\r\n  templateUrl: \"./student-discount.component.html\",\r\n  styleUrls: [\"./student-discount.component.scss\"],\r\n})\r\nexport class StudentDiscountComponent implements OnInit {\r\n  userId: any;\r\n  functionId: any;\r\n  EduCompId: any;\r\n  myForm!: FormGroup;\r\n  searchForm!: FormGroup;\r\n  userName: string = \" \";\r\n  CustomDiscountList: CustomDiscountDropMV[];\r\n  // StudentCustomDiscountsList: StudentCustomDiscountsListMV[];\r\n\r\n  displayedColumns: string[] = [\"#\", \"name\", \"discount\", \"teacher\", \"note\"];\r\n  dataSource: MatTableDataSource<StudentCustomDiscountsListMV>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private reservationServ: ReservationService,\r\n    private toaster: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private authservice: AuthService,\r\n    private ManageViewsService: ManageViewsService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // this.route.paramMap.subscribe((params) => {\r\n    //   this.userId = params.get(\"userId\");\r\n    // });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authservice.getEduCompId();\r\n    // this.getStudentCustomDiscount();\r\n    this.getCustomDiscount();\r\n    //  this.getStudentCustomDiscountsList();\r\n    this.searchForm = this.fb.group({\r\n      sentCode: [\"\"],\r\n      sentCenterCode: [\"\"],\r\n      sentMobile: [\"\"],\r\n      sentEmail: [\"\"],\r\n      InCenter: [true],\r\n    });\r\n\r\n    this.myForm = this.fb.group({\r\n      userId: [this.userId, Validators.required],\r\n      customDiscountId: [\"\", Validators.required],\r\n      note: [\"\"],\r\n    });\r\n  }\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.authservice.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getCustomDiscount();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  searchStudent() {\r\n    this.spinner.show();\r\n    this.ManageViewsService.searchStudent(\r\n      this.EduCompId,\r\n      this.searchForm.value\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.userId = res.userId;\r\n        this.getStudentCustomDiscount();\r\n        this.getStudentCustomDiscountsList();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  updateStudentCustomDiscount() {\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.reservationServ\r\n        .updateStudentCustomDiscount(this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          this.getStudentCustomDiscountsList();\r\n          this.toaster.success(\"تم التغيير\");\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getStudentCustomDiscount() {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getStudentCustomDiscount<IStudentCustomDiscountsMV>(this.userId)\r\n      .subscribe((res) => {\r\n        console.log(\"getStudentCustomDiscount\", res);\r\n        if (res != null) {\r\n          this.userName = res.User.ar_name;\r\n          this.FormCtrls.userId.setValue(res.User.user_ID);\r\n          this.FormCtrls.customDiscountId.setValue(res.Discount?.Id || \"\");\r\n          this.FormCtrls.note.setValue(res.note);\r\n        } else {\r\n          this.toaster.warning(\"Student not found\");\r\n          this.userName = \"\";\r\n          this.myForm.reset();\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getStudentCustomDiscountsList() {\r\n    this.spinner.show();\r\n    this.reservationServ\r\n      .getStudentCustomDiscountsList<StudentCustomDiscountsListMV[]>(\r\n        this.userId\r\n      )\r\n      .subscribe((res) => {\r\n        this.dataSource = new MatTableDataSource(res.reverse());\r\n        this.dataSource.paginator = this.paginator;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getCustomDiscount() {\r\n    this.reservationServ\r\n      .getCustomDiscount<CustomDiscountDropMV[]>(this.EduCompId)\r\n      .subscribe((res) => {\r\n        this.CustomDiscountList = res;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">\r\n      {{ \"Navbar.ReservationList\" | translate }} -\r\n      {{ \"labels.UpdateDiscount\" | translate }} - {{ userName }}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.SearchStudent\" | translate }}\r\n        <!-- <button\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"/dashboard/reservation/index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </button> -->\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"searchForm\" class=\"form-container\">\r\n          <div class=\"row f-w\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.CenterCode\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCenterCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"sentEmail\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Mobile\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentMobile\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.Code\" | translate }}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"sentCode\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <!--\r\n            <div class=\"col-md-8 col-6\">\r\n              <mat-radio-group formControlName=\"InCenter\" class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"true\">\r\n                    {{ \"labels.InCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-radio-button [value]=\"false\">\r\n                    {{ \"labels.OutCenter\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"searchStudent()\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"example-card\">\r\n      <mat-card-title>\r\n        {{ \"labels.UpdateDiscount\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"myForm\" class=\"form-container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                <input matInput type=\"text\" [value]=\"userName\" readonly=\"\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.DiscountType\" | translate }} </mat-label>\r\n                <mat-select formControlName=\"customDiscountId\">\r\n                  <mat-option> {{ \"General.Choose\" | translate }}</mat-option>\r\n                  <mat-option\r\n                    *ngFor=\"let CustomDiscount of CustomDiscountList\"\r\n                    [value]=\"CustomDiscount?.Id\"\r\n                  >\r\n                    {{ CustomDiscount.PreviewName }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label> {{ \"labels.Notes\" | translate }} </mat-label>\r\n                <textarea matInput type=\"text\" formControlName=\"note\">\r\n                </textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"updateStudentCustomDiscount()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"this.dataSource?.data?.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.Discount\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.UserDetails?.ar_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- discount Column -->\r\n            <ng-container matColumnDef=\"discount\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Discount\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele?.CustomDiscountDetails?.Ar_Name }} -\r\n                {{ ele?.CustomDiscountDetails?.Amount }} %\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- teacher Column -->\r\n            <ng-container matColumnDef=\"teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.Teacher }}</td>\r\n            </ng-container>\r\n\r\n            <!-- note Column -->\r\n            <ng-container matColumnDef=\"note\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Notes\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele?.note }}</td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            >>\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner></ngx-spinner>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { SearchStudentsService } from \"app/admin/services/Admin/searchStudents.service\";\r\nimport { SubjectMaterialsService } from \"app/admin/services/Admin/subjectMaterials.service\";\r\nimport {\r\n  studyingGroupsDropVM,\r\n  statutsDropVM,\r\n  student,\r\n} from \"app/shared/models/general/general\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { studentVM } from \"app/admin/models/admin/student-group\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\n@Component({\r\n  selector: \"app-students-index\",\r\n  templateUrl: \"./students-index.component.html\",\r\n  styleUrls: [\"./students-index.component.scss\"],\r\n})\r\nexport class StudentsIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  functionId: number;\r\n  groups: studyingGroupsDropVM[] = [];\r\n  Statuts: statutsDropVM[] = [];\r\n\r\n  students: student[] = [];\r\n  myForm!: FormGroup;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"name\",\r\n    \"code\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<studentVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  itemsCount: any;\r\n  userId: any = null;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private SearchStudentsService: SearchStudentsService,\r\n    private SubjectMaterialsService: SubjectMaterialsService,\r\n    private authserv: AuthService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    // route.queryParamMap.subscribe((params) => {\r\n    //   this.functionId = Number(params.get(\"functionId\"));\r\n    //   if (this.functionId) {\r\n    //     this.authserv\r\n    //       .getUserRowFunctions(this.functionId)\r\n    //       .subscribe((res: any) => {\r\n    //         if (res) {\r\n    //           this.rowFunctions = res;\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n\r\n    this.myForm = this.fb.group({\r\n      queryStringEm: [\"\", Validators.email],\r\n      queryStringCo: [\"\"],\r\n      queryStringPhoneNumber: [\"\"],\r\n      queryStringMozakretyCode: [\"\"],\r\n      statusId: [\"\"],\r\n      studyingGroup: [\"\"],\r\n      page: [\"\"],\r\n    });\r\n    //this.getGroupsByEduCompId();\r\n    this.getStudentsByEduCompId(1);\r\n    this.getStudentGroupsAndStatuts();\r\n  }\r\n\r\n  //Get Students ByEduCompId\r\n  getStudentsByEduCompId(p: number) {\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n    this.p = p;\r\n    this.spinner.show();\r\n    this.SearchStudentsService.getStudentsByEduCompId(\r\n      this.EduCompId,\r\n      this.myForm.value\r\n    ).subscribe((res: any) => {\r\n      console.log(\"getStudents\", res);\r\n      this.students = res.lists;\r\n      console.log(\"hello\", res.lists);\r\n      this.dataSource = new MatTableDataSource(res.lists);\r\n      this.itemsCount = res.totalCount;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  //Get Students ByEduCompId\r\n  getStudentGroupsAndStatuts() {\r\n    this.spinner.show();\r\n    this.SearchStudentsService.getStudentGroupsAndStatuts(\r\n      this.EduCompId\r\n    ).subscribe((res: any) => {\r\n      this.groups = res.studyingGroups;\r\n      this.Statuts = res.status;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getStudentGroupsAndStatuts();\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.getStudentsByEduCompId(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  deleteStudent(user_ID: number) {\r\n    let confirmed = confirm(\"Are you sure?\");\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.SearchStudentsService.deleteStudent(\r\n        this.EduCompId,\r\n        user_ID\r\n      ).subscribe((res: any) => {\r\n        console.log(\"deleteStudent\", res);\r\n        if (res.returnValue == 1) {\r\n          let i = this.students.findIndex((e) => e.user_ID == user_ID);\r\n          console.log(i);\r\n          this.students.splice(i, 1);\r\n          this.toastr.success(\"تم الحذف\");\r\n        } else console.log(\"Error:\", res);\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getUserId(userId: any) {\r\n    this.userId = userId;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"queryStringEm\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"queryStringPhoneNumber\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.MozakrtyCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"code\"\r\n                      formControlName=\"queryStringMozakretyCode\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.CenterCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"code\"\r\n                      formControlName=\"queryStringCo\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Group\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"groupId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let group of groups\"\r\n                        [value]=\"group.Id\"\r\n                      >\r\n                        {{ group.groupName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Status\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"statusId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let status of Statuts\"\r\n                        [value]=\"status.Id\"\r\n                      >\r\n                        {{ status.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getStudentsByEduCompId(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Students\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- code Column -->\r\n            <ng-container matColumnDef=\"code\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Code\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.code }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let student\">\r\n                <a\r\n                  routerLink=\"/dashboard/reservation/balance-details/{{\r\n                    student?.user_ID\r\n                  }}\"\r\n                  [queryParams]=\"{ functionId: functionId }\"\r\n                  class=\"success p-0\"\r\n                  matTooltip=\"رصيد الطالب \"\r\n                >\r\n                  <i class=\"fa fa-money font-medium-3 mr-2\"></i>\r\n                </a>\r\n                <ng-container *ngFor=\"let fun of rowFunctions\"> </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getStudentsByEduCompId($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IAddEditBranchModel,\r\n  IBranchesViewModel,\r\n  IBranchModel,\r\n  IDistrictDropModel,\r\n} from \"app/admin/models/roles/function\";\r\nimport { BranchesService } from \"app/admin/services/roles/branches.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-center-branches\",\r\n  templateUrl: \"./center-branches.component.html\",\r\n  styleUrls: [\"./center-branches.component.scss\"],\r\n})\r\nexport class CenterBranchesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  EduCompId: any;\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCount: number = 0;\r\n\r\n  branches: IBranchModel[] = [];\r\n  districts: IDistrictDropModel[] = [];\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchId\");\r\n  }\r\n  get branchNameCtrl() {\r\n    return this.myForm.get(\"branchName\");\r\n  }\r\n  //get addressCtrl() { return this.myForm.get('address'); }\r\n  get districtIdCtrl() {\r\n    return this.myForm.get(\"districtId\");\r\n  }\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  displayedColumns: string[] = [\"#\", \"name\", \"region\", \"actions\"];\r\n  dataSource: MatTableDataSource<IBranchModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private branchService: BranchesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //console.log(`row Functions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchId: [0],\r\n      branchName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      //address: [null],\r\n      districtId: [\"\", Validators.required],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchService\r\n      .getAllDistricts<IDistrictDropModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"districts: \", response);\r\n          this.districts = response;\r\n        }\r\n      });\r\n\r\n    this.getAllBranches(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.getAllBranches(1);\r\n    });\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllBranches(pageNumber: number) {\r\n    this.spinner.show();\r\n    console.log(\"Educom\", this.EduCompId);\r\n    this.branchService\r\n      .getAllAllCenterBranches<IBranchesViewModel>(this.EduCompId, pageNumber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"branches: \", response);\r\n          this.branches = response.centerBrnachesList;\r\n          this.dataSource = new MatTableDataSource(response.centerBrnachesList);\r\n          this.itemsCount = response.itemsCount;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editBranch(branch: IBranchModel) {\r\n    this.branchIdCtrl?.setValue(branch.Id);\r\n    this.branchNameCtrl?.setValue(branch.Name);\r\n    //this.addressCtrl?.setValue(branch.address);\r\n    this.districtIdCtrl?.setValue(branch.districtId);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeBranch(branch: IBranchModel) {\r\n    this.spinner.show();\r\n    this.branchService.deleteBranch(branch.Id).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"user: \", response);\r\n        this.getAllBranches(1);\r\n        this.msg.success(\"تم مسح الفرع بنجاح\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditBranchModel;\r\n      obj.Id = this.branchIdCtrl?.value;\r\n      obj.Name = this.branchNameCtrl?.value;\r\n      obj.districtId = this.districtIdCtrl?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n\r\n      //  console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.branchService\r\n        .addEditBranches<IAddEditBranchModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n\r\n          if (response && response.returnValue === 200) {\r\n            this.addBtn.nativeElement.innerText = \"Add\";\r\n            // console.log(\"created: \", response);\r\n\r\n            // let index = this.branches.findIndex(r => r.Id == response.Id);\r\n            // if (index === -1) {\r\n            //   this.msg.success(\"تم إنشاء الصلاحيه بنجاح\");\r\n            //   this.branches.push(response.branch);\r\n            // } else {\r\n            //   this.branches[index] = response.branch;\r\n            //   this.msg.success(\"تم تعديل الصلاحيه بنجاح\");\r\n            // }\r\n\r\n            this.getAllBranches(1);\r\n            this.msg.success(\"تم إضافه/تعديل البيانات الفرع بنجاح\");\r\n            this.myForm.reset();\r\n            //console.log(\"branches: \", this.branches);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(branch: IBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateCenterBranch\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"branchName\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        branchNameCtrl.invalid &&\r\n                        (branchNameCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          branchNameCtrl.errors?.required ||\r\n                          branchNameCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Region\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"districtId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let dis of districts\"\r\n                        [value]=\"dis.Id\"\r\n                      >\r\n                        {{ dis.Ar_Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        districtIdCtrl.invalid &&\r\n                        (districtIdCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"districtIdCtrl.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.CenterBranches\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">{{ branch.Name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- region Column -->\r\n            <ng-container matColumnDef=\"region\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Region\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.districtName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    (click)=\"editBranch(branch)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(branch)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllBranches($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { CustomeValidator } from \"./../../../../shared/validators/customeValid.validator\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionViewModel,\r\n  IAddEditFunctionModel,\r\n} from \"app/admin/models/roles/function\";\r\nimport { IFunctionsModel } from \"app/admin/models/roles/roles\";\r\nimport { FunctionsService } from \"app/admin/services/roles/functions.service\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-functions-setup\",\r\n  templateUrl: \"./functions-setup.component.html\",\r\n  styleUrls: [\"./functions-setup.component.scss\"],\r\n})\r\nexport class FunctionsSetupComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  itemsCount: any;\r\n  functions: IFunctionsModel[] = [];\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  get functionIdCtrl() {\r\n    return this.myForm.get(\"functionId\");\r\n  }\r\n  get functionNameEnCtrl() {\r\n    return this.myForm.get(\"functionNameEn\");\r\n  }\r\n  get functionNameArCtrl() {\r\n    return this.myForm.get(\"functionNameAr\");\r\n  }\r\n  get linkCtrl() {\r\n    return this.myForm.get(\"link\");\r\n  }\r\n\r\n  displayedColumns: string[] = [\"#\", \"arName\", \"enName\", \"link\", \"actions\"];\r\n  dataSource: MatTableDataSource<IFunctionsModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private functionService: FunctionsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      functionId: [0],\r\n      functionNameEn: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      functionNameAr: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      link: [null],\r\n    });\r\n\r\n    this.getAllFunctions(1);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllFunctions(pageNumber: number) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IFunctionViewModel>(pageNumber, false)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"functions: \", response);\r\n          this.functions = response.functions;\r\n          this.dataSource = new MatTableDataSource(response.functions);\r\n          this.itemsCount = response.itemsCount;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editFunction(func: IFunctionsModel) {\r\n    this.functionIdCtrl?.setValue(func.Id);\r\n    this.functionNameEnCtrl?.setValue(func.function_en_name);\r\n    this.functionNameArCtrl?.setValue(func.functionName);\r\n    this.linkCtrl?.setValue(func.functionURL);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeFunction(func: IFunctionsModel) {\r\n    this.spinner.show();\r\n    this.functionService.deleteFunction(func.Id).subscribe((response) => {\r\n      if (response) {\r\n        // console.log(\"function: \", response);\r\n        this.getAllFunctions(1);\r\n        this.msg.success(\"تم مسح الوظيفه بنجاح\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditFunctionModel;\r\n      obj.Id = this.functionIdCtrl?.value;\r\n      obj.functionName = this.functionNameArCtrl?.value;\r\n      obj.function_en_name = this.functionNameEnCtrl?.value;\r\n      obj.functionURL = this.linkCtrl?.value;\r\n\r\n      // console.log(\"NOW CALL SERVER: \", obj);\r\n\r\n      this.functionService\r\n        .addEditFunction<IAddEditFunctionModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.addBtn.nativeElement.innerText = \"Add\";\r\n          this.submitted = false;\r\n          if (response && response.returnValue === 200) {\r\n            //console.log(\"created: \", response);\r\n\r\n            this.getAllFunctions(1);\r\n            this.msg.success(\"تم إضافه/تعديل البيانات الوظيفه بنجاح\");\r\n            this.myForm.reset();\r\n            // console.log(\"functions: \", this.functions);\r\n          }\r\n          this.spinner.show();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(func: IFunctionsModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeFunction(func);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.CreateFunction\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.arName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameAr\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameArCtrl.invalid &&\r\n                        (functionNameArCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameArCtrl.errors?.required ||\r\n                          functionNameArCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.enName\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"functionNameEn\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        functionNameEnCtrl.invalid &&\r\n                        (functionNameEnCtrl.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          functionNameEnCtrl.errors?.required ||\r\n                          functionNameEnCtrl.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Link\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"link\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Functions\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- arName Column -->\r\n            <ng-container matColumnDef=\"arName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.arName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- enName Column -->\r\n            <ng-container matColumnDef=\"enName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.enName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.function_en_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- link Column -->\r\n            <ng-container matColumnDef=\"link\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Link\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.functionURL }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let func\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editFunction(func)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(func)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllFunctions($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { IRolesViewModel } from \"app/admin/models/roles/roles\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-add-role\",\r\n  templateUrl: \"./add-role.component.html\",\r\n  styleUrls: [\"./add-role.component.scss\"],\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  roles: IRolesViewModel[] = [];\r\n  EduCompId: any;\r\n  get roleIdCtrl() {\r\n    return this.myForm.get(\"roleId\");\r\n  }\r\n  get roleNameCtrl() {\r\n    return this.myForm.get(\"roleName\");\r\n  }\r\n  get EduCompIdCtrl() {\r\n    return this.myForm.get(\"EduCompId\");\r\n  }\r\n  displayedColumns: string[] = [\"#\", \"Name\", \"actions\"];\r\n  dataSource: MatTableDataSource<IRolesViewModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              // console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      roleId: [0],\r\n      roleName: [null, [Validators.required]],\r\n      EduCompId: [this.EduCompId],\r\n    });\r\n    this.spinner.show();\r\n    this.roleService.getAllRoles<IRolesViewModel[]>(this.EduCompIdCtrl.value).subscribe((response) => {\r\n      this.spinner.hide();\r\n      if (response) {\r\n          console.log(\"roles init: \", response);\r\n        this.roles = response;\r\n        this.dataSource = new MatTableDataSource(response);\r\n        this.dataSource.paginator = this.paginator;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.EduCompIdCtrl.setValue(e.EduCompId);\r\n      this.roleService.getAllRoles<IRolesViewModel[]>(this.EduCompIdCtrl.value).subscribe((response) => {\r\n        this.spinner.hide();\r\n        if (response) {\r\n            console.log(\"roles after init: \", response);\r\n          this.roles = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      });\r\n    });\r\n   \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  editRole(role: IRolesViewModel) {\r\n    this.roleIdCtrl?.setValue(role.Id);\r\n    this.roleNameCtrl?.setValue(role.roleName);\r\n  this.EduCompIdCtrl.setValue(role.EduCompId);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeRole(role: IRolesViewModel) {\r\n    this.spinner.show();\r\n    this.roleService.deleteRole(role.Id).subscribe((response: any) => {\r\n      if (response.returnString == \"Success\") {\r\n        //  console.log(\"roles: \", response);\r\n        let index = this.dataSource.data.findIndex((r) => r.Id == role.Id);\r\n        this.dataSource.data.splice(index, 1);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.msg.success(\"تم مسح الصلاحيه بنجاح\");\r\n      } else this.msg.warning(response.returnString);\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.roleNameCtrl?.value) {\r\n      this.msg.warning(\"يرجي إدخال اسم الصلاحيه\");\r\n      return;\r\n    }\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IRolesViewModel;\r\n      obj.Id = this.roleIdCtrl?.value;\r\n      obj.roleName = this.roleNameCtrl.value;\r\nobj.EduCompId=this.EduCompIdCtrl.value;\r\nconsole.log(\"role model\",obj);\r\n      this.roleService\r\n        .addEditRole<IRolesViewModel, any>(obj)\r\n        .subscribe((response) => {\r\n          if (response && response.returnValue === 200) {\r\n            // console.log(\"created: \", response);\r\n\r\n            let index = this.roles.findIndex((r) => r.Id == response.role.Id);\r\n            if (index === -1) {\r\n              this.msg.success(\"تم إنشاء الصلاحيه بنجاح\");\r\n              this.dataSource.data.push(response.role);\r\n              this.dataSource.paginator = this.paginator;\r\n            } else {\r\n              this.roles[index] = response.role;\r\n              this.msg.success(\"تم تعديل الصلاحيه بنجاح\");\r\n            }\r\n            this.myForm.reset();\r\n            // console.log(\"roles: \", this.roles);\r\n          }\r\n          this.addBtn.nativeElement.innerText = \"Add\";\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(role: IRolesViewModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: role.roleName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeRole(role);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRole\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"roleName\" />\r\n                    <mat-error *ngIf=\"roleNameCtrl.errors?.required\">\r\n                      {{ \"labels.mustEnterValue\" | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"Navbar.Roles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let role\">{{ role.roleName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let role\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editRole(role)\"\r\n                    class=\"success p-0\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(role)\"\r\n                    class=\"danger p-0\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    routerLink=\"/dashboard/role-fuctions/{{ role.Id }}\"\r\n                    [queryParams]=\"{ parentId: functionId, functionId: fun.Id }\"\r\n                    *ngIf=\"fun.functionName === 'Functions'\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"add functions\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[5, 10, 20]\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddRoleFunctions\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n\r\n              <div class=\"col-12\">\r\n                <mat-checkbox [checked]=\"allChecked\" (change)=\"SelectAll()\" color='accent' class=\"mb-1\">\r\n                  {{ \"General.SelectAll\" | translate }}\r\n                </mat-checkbox>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\" *ngFor=\"let group of groupFunctions\">\r\n                <mat-card>\r\n                  <mat-card-title>{{group.classificationName |translate}}</mat-card-title>\r\n                  <mat-card-content>\r\n                    <div class=\"row\">\r\n                      <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                      <div class=\"col-12 col-xl-6\" *ngFor=\"let func of group.functions; let i = index\">\r\n                        <mat-checkbox id=\"functions{{ func.Id }}\" (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                          [checked]=\"functionIds.includes(func.Id)\">\r\n                          {{ func.functionName | translate }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </div>\r\n\r\n              <div class=\"col-md-4 col-12\">\r\n                <mat-card>\r\n                  <mat-card-title>التقارير</mat-card-title>\r\n                  <mat-card-content>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-12 col-xl-6\" *ngFor=\"let report of reports; let i = index\">\r\n                        <mat-checkbox id=\"report{{ report.ReportId }}\" (change)=\"onReportTogle(report.ReportId, $event)\"\r\n                          [checked]=\"selectedReportsIds.includes(report.ReportId)\">\r\n                          {{ report.ReportNameAr | translate }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button #addBtn mat-raised-button class=\"btn btn-primary\" (click)=\"onAddFunctions()\">\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IFunctionsModel,\r\n  IRoleFunctionsModel,\r\n  IAddEditRoleFunctionsModel,\r\n  IGroupFunctionsModel,\r\n  IReport,\r\n} from \"app/admin/models/roles/roles\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-role-functions\",\r\n  templateUrl: \"./role-functions.component.html\",\r\n  styleUrls: [\"./role-functions.component.scss\"],\r\n})\r\nexport class RoleFunctionsComponent implements OnInit {\r\n  roleId: any;\r\n  functions: IFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsModel[] = [];\r\n  reports: IReport[] = [];\r\n  ownerReports: IReport[] = [];\r\n  roleFunctions: IRoleFunctionsModel[] = [];\r\n  functionIds: number[] = [];\r\n  selectedReportsIds: number[] = [];\r\n  roleName: string = \"\";\r\n  allChecked: boolean = false;\r\n  allFunctionsLength = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: ToastrService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.roleId = param.get(\"roleId\");\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllFunctions();\r\n    this.getAllRoleFunctions();\r\n    this.getAllOwnedReportsByRoleId()\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctions<IGroupFunctionsModel[]>(0, true)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //console.log(\"functions: \", response);\r\n          this.groupFunctions = response;\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength =\r\n              this.allFunctionsLength + g.functions.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllOwnedReportsByRoleId()\r\n  {\r\n      this.roleService\r\n      .getReportsByRoleId<any[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.ownerReports = response;\r\n          for (let i = 0; i < this.ownerReports.length; i++) {\r\n            this.selectedReportsIds.push(this.ownerReports[i].ReportId);\r\n          }\r\n          this.getAllOwnedReports()\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllOwnedReports()\r\n  {\r\n    this.roleService\r\n      .getAllOwnedReports<any[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.reports = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllRoleFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllRoleFunctions<IRoleFunctionsModel[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"role functions: \", response);\r\n          this.roleFunctions = response;\r\n          this.roleName = this.roleFunctions[0].roleName;\r\n\r\n          for (let i = 0; i < this.roleFunctions.length; i++) {\r\n            this.functionIds.push(this.roleFunctions[i].function.Id);\r\n          }\r\n\r\n          if (this.functionIds.length === this.allFunctionsLength)\r\n            this.allChecked = true;\r\n          else this.allChecked = false;\r\n          //  console.log(\"edit functions IDs\", this.functionIds);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.functionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.functionIds.findIndex((id) => id === functionId);\r\n      this.functionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  onReportTogle(reportId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.selectedReportsIds.push(reportId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.selectedReportsIds.findIndex((id) => id === reportId);\r\n      this.selectedReportsIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.functions.forEach((e) => {\r\n          let found = this.functionIds.includes(e.Id);\r\n          if (!found) this.functionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.functionIds = [];\r\n    }\r\n  }\r\n\r\n  onAddFunctions() {\r\n    let obj = {} as IAddEditRoleFunctionsModel;\r\n    obj.roleId = this.roleId;\r\n    obj.functionsList = this.functionIds;\r\n    obj.reportsList = this.selectedReportsIds;\r\n    // if (obj.functionsList.length == 0) {\r\n    //   this.msg.warning(\"يجب اختيار ظيفة واحده علي الاقل\");\r\n    //   return;\r\n    //   } else {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .addEditRoleFunctions<IAddEditRoleFunctionsModel, any>(obj)\r\n      .subscribe((response) => {\r\n        if (response && response.returnValue === 200) {\r\n          this.msg.success(\"تم تعديل وظائف الصلاحيه بنجاح\");\r\n          ///  console.log(\"add/edit functions: \", response);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    //  }\r\n  }\r\n}\r\n","import { GroupByService } from \"./../../../../shared/services/General/group-by.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IGroupFunctionsListVM,\r\n  IRoleFunctionsModel,\r\n} from \"app/admin/models/roles/roles\";\r\nimport {\r\n  IBranchViewModel,\r\n  IUserBranchModel,\r\n  IUserBranchFunctionViewModel,\r\n  IUserFunctionModel,\r\n  IAddUserBranchFunctionsModel,\r\n  IBranchUserModel,\r\n  IUserModel,\r\n} from \"app/admin/models/roles/user\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { UsersService } from \"app/admin/services/roles/users.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-user-branches-roles\",\r\n  templateUrl: \"./user-branches-roles.component.html\",\r\n  styleUrls: [\"./user-branches-roles.component.scss\"],\r\n})\r\nexport class UserBranchesRolesComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  userId: number;\r\n  roleId: number;\r\n  functionId: number;\r\n  EduCompId: number;\r\n  allFunctionsLength = 0;\r\n  submitted: boolean = false;\r\n  allChecked: boolean = false;\r\n  branches: IBranchViewModel[] = [];\r\n  // functions: IRoleFunctionsModel[] = [];\r\n  groupFunctions: IGroupFunctionsListVM[] = [];\r\n  functionIds: number[] = [];\r\n  checkedfunctionIds: number[] = [];\r\n  rowFunctions: IRowFunctionVM[];\r\n  userBranchesWithFunctions: IUserBranchModel[] = [];\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"branchName\",\r\n    \"FunctionName\",\r\n    \"from\",\r\n    \"to\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserBranchModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private msg: ToastrService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    private roleService: RolesService,\r\n    private groupByService: GroupByService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.route.paramMap.subscribe((param) => {\r\n      this.userId = Number(param.get(\"userId\"));\r\n      this.roleId = Number(param.get(\"roleId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  get branchIdCtrl() {\r\n    return this.myForm.get(\"branchsIds\");\r\n  }\r\n  get fromDateCtrl() {\r\n    return this.myForm.get(\"fromDate\");\r\n  }\r\n  get toDateCtrl() {\r\n    return this.myForm.get(\"toDate\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      branchsIds: [[]],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n    });\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    this.getAllBranchesByCenter();\r\n    this.getAllFunctions();\r\n    this.getAllUserBranchesWithFunctions();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllBranchesByCenter() {\r\n    this.spinner.show();\r\n    this.userService\r\n      .getAllBranchesByCenter<IBranchViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"branches: \", response);\r\n          this.branches = response;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllFunctionsByRoleId<IGroupFunctionsListVM[]>(this.roleId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"functions by roleId: \", response);\r\n          this.groupFunctions = this.groupByService.groupBy(\r\n            response,\r\n            \"classificationName\"\r\n          );\r\n\r\n          this.groupFunctions.forEach((g) => {\r\n            this.allFunctionsLength = this.allFunctionsLength + g.List.length;\r\n          });\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onFunctionToogle(functionId: number, $event: any) {\r\n    if ($event.checked === true) {\r\n      this.functionIds.push(functionId);\r\n    } else if ($event.checked === false) {\r\n      let index = this.functionIds.findIndex((id) => id === functionId);\r\n      this.functionIds.splice(index, 1);\r\n    }\r\n\r\n    if (this.functionIds.length === this.allFunctionsLength)\r\n      this.allChecked = true;\r\n    else this.allChecked = false;\r\n  }\r\n\r\n  SelectAll() {\r\n    this.allChecked = !this.allChecked;\r\n    if (this.allChecked) {\r\n      this.groupFunctions.forEach((g) => {\r\n        g.List.forEach((e) => {\r\n          let found = this.functionIds.includes(e.Id);\r\n          if (!found) this.functionIds.push(e.Id);\r\n        });\r\n      });\r\n    } else {\r\n      this.functionIds = [];\r\n    }\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions() {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .getAllUserBranchesWithFunctions<IUserBranchFunctionViewModel>(\r\n        this.userId\r\n      )\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //   console.log(\"brances with functions for user: \", response);\r\n          this.userBranchesWithFunctions = response.branchUserList;\r\n          this.dataSource = new MatTableDataSource(response.branchUserList);\r\n          for (let funParent of this.userBranchesWithFunctions) {\r\n            for (let fun of funParent.roleFunctionsList) {\r\n              this.checkedfunctionIds.push(fun.Id);\r\n            }\r\n          }\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeBranch(branch: IUserBranchModel) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserBranchRoleFunction(this.userId, branch.branchId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"remove brances with functions: \", response);\r\n          let i = this.dataSource.data.findIndex((e) => (e = branch));\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"branch has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onDeleteFunction(func: any) {\r\n    this.spinner.show();\r\n    this.roleService\r\n      .deleteUserRoleFunctions(func.centerBranchUserFuncId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          // console.log(\"remove function: \", response);\r\n          this.getAllUserBranchesWithFunctions();\r\n          this.msg.success(\"function has been deleted success\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // console.log(this.branchIdCtrl?.value);\r\n    if (this.functionIds.length <= 0) {\r\n      this.msg.warning(\"Must select at least one function\");\r\n      return;\r\n    }\r\n\r\n    if (this.branchIdCtrl?.value.length == 0) {\r\n      this.msg.warning(\"Must select at least one branch\");\r\n      return;\r\n    }\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddUserBranchFunctionsModel;\r\n      obj.roleFunctionsIds = this.functionIds;\r\n      obj.branchsIds = this.branchIdCtrl?.value;\r\n      obj.branchUser = {} as IBranchUserModel;\r\n      obj.branchUser.userId = this.userId;\r\n      obj.branchUser.branchId = 0;\r\n      obj.branchUser.from = this.datePipe.transform(this.fromDateCtrl.value);\r\n      obj.branchUser.to = this.datePipe.transform(this.toDateCtrl.value);\r\n\r\n      this.roleService\r\n        .addUserBranchesAndRoleFunctions(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n          if (response) {\r\n            //console.log(\"add new branch with functions: \", response);\r\n            this.getAllUserBranchesWithFunctions();\r\n            this.msg.success(\"branch has been added success\");\r\n            this.myForm.reset();\r\n            this.functionIds = [];\r\n            this.checkedfunctionIds = [];\r\n            this.allChecked = false;\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(branch: IUserBranchModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: branch.branchName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeBranch(branch);\r\n      });\r\n  }\r\n\r\n  openDeleateFunctionDialog(func: IUserFunctionModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: func.functionName,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.onDeleteFunction(func);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddUserBranchesAndRoles\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.branchName\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"branchsIds\" multiple>\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option>\r\n                      <mat-option *ngFor=\"let branch of branches\" [value]=\"branch.Id\">\r\n                        {{ branch.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n\r\n                    <mat-hint *ngIf=\"\r\n                        branchIdCtrl.invalid &&\r\n                        (branchIdCtrl.touched || submitted)\r\n                      \" class=\"text-danger\">\r\n                      <span *ngIf=\"branchIdCtrl.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input matInput [matDatepicker]=\"fromDate\" formControlName=\"fromDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"fromDate\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input matInput [matDatepicker]=\"toDate\" formControlName=\"toDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"toDate\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-12\">\r\n                  <mat-checkbox [checked]=\"allChecked\" (change)=\"SelectAll()\" color='accent'>\r\n                    {{ \"General.SelectAll\" | translate }}\r\n                  </mat-checkbox>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\" *ngFor=\"let group of groupFunctions; let i = index\">\r\n                  <mat-card>\r\n                    <mat-card-title>{{group.key |translate}}</mat-card-title>\r\n                    <mat-card-content>\r\n                      <div class=\"row\">\r\n                        <!-- [checked]=\"checkedfunctionIds.includes(func.Id)\" -->\r\n                        <div class=\"col-12 col-xl-6\" *ngFor=\"let func of group.List; let i = index\">\r\n                          <mat-checkbox id=\"functions{{ func.Id }}\" (change)=\"onFunctionToogle(func.Id, $event)\"\r\n                            [checked]=\"functionIds.includes(func.Id)\">\r\n                            {{ func.function.function_en_name | translate }}\r\n                          </mat-checkbox>\r\n                        </div>\r\n                      </div>\r\n                    </mat-card-content>\r\n                  </mat-card>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button #addBtn mat-raised-button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n          {{ \"General.Save\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.UserBranchesAndRoles\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input matInput (keyup)=\"applyFilter($event)\" #input />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"branchName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.branchName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.branchName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"FunctionName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FunctionName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <tr *ngFor=\"let func of branch.roleFunctionsList; index as i\">\r\n                  <td>{{ func.functionName | translate }}</td>\r\n                  <td>\r\n                    <a (click)=\"openDeleateFunctionDialog(func)\">\r\n                      <i class=\"fa fa-times fa fa-white\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"from\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.FromDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.from | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n            <ng-container matColumnDef=\"to\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ToDate\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                {{ branch.to | date: \"dd/MM/yyyy\" }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let branch\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a *ngIf=\"fun.functionName === 'Delete'\" (click)=\"openDeleateDialog(branch)\" class=\"danger p-0\"\r\n                    matTooltip=\"Delete\">\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input?.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of users\">\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { IRolesViewModel } from \"app/admin/models/roles/roles\";\r\nimport {\r\n  IAddEditUserModel,\r\n  IUserModel,\r\n  IUserViewModel,\r\n} from \"app/admin/models/roles/user\";\r\nimport { RolesService } from \"app/admin/services/roles/roles.service\";\r\nimport { UsersService } from \"app/admin/services/roles/users.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IRowFunctionVM } from \"app/shared/models/general/general\";\r\n\r\n@Component({\r\n  selector: \"app-users\",\r\n  templateUrl: \"./users.component.html\",\r\n  styleUrls: [\"./users.component.scss\"],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  EduCompId: number;\r\n  submitted: boolean = false;\r\n  roles: IRolesViewModel[] = [];\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  itemsCounts: number = 0;\r\n  items: number = 16184;\r\n  p: number = 0;\r\n\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"name\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"role\",\r\n    \"option\",\r\n  ];\r\n  dataSource: MatTableDataSource<IUserModel>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @ViewChild(\"addBtn\", { read: ElementRef }) addBtn: ElementRef;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private userService: UsersService,\r\n    public authserv: AuthService,\r\n    private roleService: RolesService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group(\r\n      {\r\n        userId: [0, [Validators.required]],\r\n        userName: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n            ),\r\n            CustomeValidator.whiteSpace,\r\n          ],\r\n        ],\r\n        email: [null, [Validators.required, Validators.email]],\r\n        phone: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n            Validators.minLength(11),\r\n            Validators.maxLength(11),\r\n            CustomeValidator.startsWith,\r\n          ],\r\n        ],\r\n        roleId: [null, [Validators.required]],\r\n        password: [\r\n          null,\r\n          [\r\n            Validators.required,\r\n            CustomeValidator.whiteSpace,\r\n            Validators.minLength(3),\r\n          ],\r\n        ],\r\n        confirmedPass: [null],\r\n      },\r\n      {\r\n        validator: CustomeValidator.mustMatch(\"password\", \"confirmedPass\"),\r\n      }\r\n    );\r\n\r\n    this.EduCompId = Number(this.authserv.getEduCompId());\r\n\r\n    this.roleService\r\n      .getAllRoles<IRolesViewModel[]>(this.EduCompId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.roles = response;\r\n        }\r\n      });\r\n\r\n    this.getAllUsers(1);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllUsers(1);\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllUsers(pageNumber: number) {\r\n    // this.itemsCounts = 0;\r\n    this.p = pageNumber;\r\n    this.spinner.show();\r\n\r\n    this.userService\r\n      .getAllUsers<IUserViewModel>(this.EduCompId, pageNumber)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"users: \", response);\r\n          this.dataSource = new MatTableDataSource(\r\n            response.centerBrnachesList.reverse()\r\n          );\r\n          this.itemsCounts = response.itemsCounts;\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  editUser(user: IUserModel) {\r\n    this.FormCtrls.userId?.setValue(user.user_ID);\r\n    this.FormCtrls.userName?.setValue(user.ar_name);\r\n    this.FormCtrls.email?.setValue(user.account_email);\r\n    this.FormCtrls.phone?.setValue(user.mobile);\r\n    this.FormCtrls.roleId?.setValue(user.roleId);\r\n    this.FormCtrls.password?.setValue(user.account_password);\r\n    this.FormCtrls.confirmedPass?.setValue(user.account_password);\r\n    this.addBtn.nativeElement.innerText = \"update\";\r\n  }\r\n\r\n  removeUser(user: IUserModel) {\r\n    this.userService.deleteUser(user.user_ID).subscribe((response) => {\r\n      if (response) {\r\n        //    console.log(\"user: \", response);\r\n        this.getAllUsers(1);\r\n        this.toastr.success(\"تم مسح المستخدم بنجاح\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      let obj = {} as IAddEditUserModel;\r\n      obj.user = {} as IUserModel;\r\n      obj.user.user_ID = this.FormCtrls.userId?.value;\r\n      obj.user.ar_name = this.FormCtrls.userName?.value;\r\n      obj.user.account_email = this.FormCtrls?.email?.value;\r\n      obj.user.mobile = this.FormCtrls.phone?.value;\r\n      obj.user.roleId = this.FormCtrls.roleId?.value;\r\n      obj.user.account_password = this.FormCtrls.password?.value;\r\n\r\n      obj.roleId = this.FormCtrls.roleId?.value;\r\n      obj.EduCompId = this.EduCompId;\r\n\r\n      this.userService\r\n        .addEditUser<IAddEditUserModel, any>(obj)\r\n        .subscribe((response) => {\r\n          this.submitted = false;\r\n          //  console.log(\"created: \", response);\r\n\r\n          if (response && response !== null) {\r\n            if (response.returnValue == 0) {\r\n              this.toastr.error(response.returnString);\r\n            } else {\r\n              this.getAllUsers(1);\r\n              this.toastr.success(\"تم إضافه/تعديل البيانات المستخدم بنجاح\");\r\n              this.myForm.reset();\r\n              this.addBtn.nativeElement.innerText = \"Add\";\r\n            }\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  openDeleateDialog(user: IUserModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: user.ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeUser(user);\r\n      });\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"content-header\">{{ \"labels.Users\" | translate }}</div>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.CreateUser\" | translate }} </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\" class=\"form-container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Name\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"userName\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"text-danger\"\r\n                      *ngIf=\"\r\n                        FormCtrls.userName.invalid &&\r\n                        (FormCtrls.userName.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.userName.errors?.required ||\r\n                          FormCtrls.userName.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Mobile\" | translate }} </mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"phone\" />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.phone.invalid &&\r\n                        (FormCtrls.phone.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.phone.errors?.required ||\r\n                          FormCtrls.phone.errors?.whiteSpace ||\r\n                          FormCtrls.phone.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.phone.errors?.minlength ||\r\n                          FormCtrls.phone.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.phone.errors?.startsWith\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.NumberMustStartWith\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Email\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      formControlName=\"email\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.email.invalid &&\r\n                        (FormCtrls.email.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrls.email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        Enter correct Email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Role\" | translate }} </mat-label>\r\n                    <mat-select formControlName=\"roleId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option *ngFor=\"let role of roles\" [value]=\"role.Id\">\r\n                        {{ role.roleName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.roleId.invalid &&\r\n                        (FormCtrls.roleId.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.roleId.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.Password\" | translate }} </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"password\"\r\n                      autocomplete=\"new-password\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.password.invalid &&\r\n                        (FormCtrls.password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ConfirmPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      formControlName=\"confirmedPass\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.confirmedPass.invalid &&\r\n                        (FormCtrls.confirmedPass.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.confirmedPass.errors?.mustMatch\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        New Password and Confirm Password not match\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          #addBtn\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Users\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- email Column -->\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Email\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.account_email }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mobile Column -->\r\n            <ng-container matColumnDef=\"mobile\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Mobile\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mobile }}</td>\r\n            </ng-container>\r\n\r\n            <!-- role Column -->\r\n            <ng-container matColumnDef=\"role\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Role\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.roleName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- Option Column -->\r\n            <ng-container matColumnDef=\"option\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Update'\"\r\n                    (click)=\"editUser(user)\"\r\n                    class=\"success p-0\"\r\n                    matTooltip=\"Edit User\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(user)\"\r\n                    class=\"danger p-0\"\r\n                    matTooltip=\"Delete User\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Branches'\"\r\n                    routerLink=\"../user-roles-branches/{{ user.user_ID }}/{{\r\n                      user.roleId\r\n                    }}\"\r\n                    [queryParams]=\"{ functionId: functionId }\"\r\n                    class=\"info p-0\"\r\n                    matTooltip=\"Add branch and role\"\r\n                  >\r\n                    <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllUsers($event.pageIndex + 1)\"\r\n            [length]=\"itemsCounts\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ManageViewsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  searchStudent(EduCompId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/searchUSer/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  resetViews(EduCompId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/resetViewsCount/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  addExceptionalViews(EduCompId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/ExceptionalViewsResetCount/${EduCompId}`,\r\n      body\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ReservationService {\r\n  constructor(private http?: HttpClient) {}\r\n\r\n  InputSettings(viewId: any) {\r\n    return this.http.get(`${environment.apiURL}AJAX/InputSettings/${viewId}`);\r\n  }\r\n\r\n  SubmitInputsSettings(data: any) {\r\n    return this.http.post(environment.apiURL + \"AJAX/InputSettings\", data);\r\n  }\r\n\r\n  returnBranchesByEduCompId<T>(EduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}AJAX/returnBranchesByEduCompId/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  GetAvaliableDatesByBranchId(\r\n    BranchId: any,\r\n    MustHaveStudents: boolean,\r\n    DontShowMaxed: boolean\r\n  ) {\r\n    return this.http.get(\r\n      `${`${environment.apiURL}AJAX/GetAvaliableDatesByBranchId/${BranchId}`}/${MustHaveStudents}/${DontShowMaxed}`\r\n    );\r\n  }\r\n\r\n  returnCities<T>() {\r\n    return this.http.get<T>(environment.apiURL + \"AJAX/returnCities\");\r\n  }\r\n\r\n  getArea<T>() {\r\n    return this.http.get<T>(environment.apiURL + \"AJAX/returnArea\");\r\n  }\r\n\r\n  returnStatus<T>() {\r\n    return this.http.get<T>(environment.apiURL + \"AJAX/returnStatus\");\r\n  }\r\n\r\n  getReservationsList<T, TE>(data: T) {\r\n    return this.http.post<TE>(\r\n      environment.apiURL + \"AJAX/returnReservations\",\r\n      data\r\n    );\r\n  }\r\n\r\n  ReservationDetails(id: any) {\r\n    return this.http.get(`${environment.apiURL}AJAX/ReservationDetails/${id}`);\r\n  }\r\n\r\n  getReservationEdit<T>(id: any, EduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}AJAX/ReservationEdit/${id}/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  SubmitReservationEdit(data: any) {\r\n    return this.http.post(environment.apiURL + \"AJAX/ReservationEdit\", data);\r\n  }\r\n\r\n  GetStudentStatus(Id: any, EduCompId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}AJAX/ReservationStatus/${Id}/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  SubmitReservationStatus(data: any) {\r\n    return this.http.post(environment.apiURL + \"AJAX/ReservationStatus\", data);\r\n  }\r\n\r\n  ReservationStatusPaging<T>(page: any, EduCompUserId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}AJAX/ReservationStatusPaging/${page}/${EduCompUserId}`\r\n    );\r\n  }\r\n\r\n  getReasonsByStatusId<T>(StatusId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnReasonsByStatusId/${StatusId}`\r\n    );\r\n  }\r\n\r\n  updateStudentCustomDiscount(body: any) {\r\n    return this.http.post(\r\n      environment.apiURL + \"CustomDiscountsUsers/SaveCustomDiscountUser\",\r\n      body\r\n    );\r\n  }\r\n\r\n  getStudentCustomDiscount<T>(userId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}CustomDiscountsUsers/returnUserCustomDiscountDetails/${userId}`\r\n    );\r\n  }\r\n\r\n  getCustomDiscount<T>(EduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}CustomDiscountsUsers/returnCustomDiscountsByEduCompId/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  getStudentCustomDiscountsList<T>(userId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}CustomDiscountsUsers/returnUserCustomDiscountsByUserId/${userId}`\r\n    );\r\n  }\r\n\r\n  getCustomReservation(EduCompId: any) {\r\n    return this.http.get(\r\n      environment.apiURL + \"Reservations/CustomReservation/\" + EduCompId\r\n    );\r\n  }\r\n\r\n  returnBranchesByEducTypeId<T>(typeId: any, EduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Reservations/returnCenterBranchesByEducationalTypeId/${typeId}/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  addReservationDate<T, TV>(data: T) {\r\n    return this.http.post<TV>(\r\n      `${environment.apiURL}reservation/add-date`,\r\n      data\r\n    );\r\n  }\r\n\r\n  getAllReservationDate<T>(page: number) {\r\n    return this.http.get<T>(`${environment.apiURL}reservation/get-all/${page}`);\r\n  }\r\n\r\n  downloadTemplate() {\r\n    return this.http.get(\r\n      environment.apiURL + \"reservation/download-date-template\"\r\n    );\r\n  }\r\n\r\n  getAvailableGroups(teacherId: any, EduCompId: any, isOnline: boolean) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Reservations/returnAvailableStudyingGroupsByTeacherId/${teacherId}/${EduCompId}/${isOnline}`\r\n    );\r\n  }\r\n\r\n  CompletaReservation(data: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Reservations/reservationPaymentAndAddStudentToGroup/${data.groupId}/${data.teacherUserId}/${data.eduCompId}`\r\n    );\r\n  }\r\n\r\n  getReservationInfo<T>(EduCompId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Reservations/returnReservationInfo/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  checkUserBalance(EduCompId: any, teacherId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Reservations/isUserHasBalanceForCustomTeacher/${EduCompId}/${teacherId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ISearchMaterialVM } from \"app/admin/models/admin/educations\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class SubjectMaterialsService {\r\n  getParts2URL = environment.apiURL + \"Admin/returnMaterialPartsByMaterialId/\";\r\n  AttendanceURL = environment.apiURL + \"Admin/postOfflineLectureView/\";\r\n  materialsattacAttendeesURL =\r\n    environment.apiURL + \"MaterialsAttach/offline-lecture-attendees/\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addEditMaterial(EduCompId: any, branchId: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/AddSubjectMaterialForm/${EduCompId}/${branchId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  getMaterialById<T>(subjectId: any, materialId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/showSubjectMaterialView/${subjectId}/${materialId}`\r\n    );\r\n  }\r\n\r\n  updateMaterialForm(EduCompId: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/AddSubjectMaterialForm/${EduCompId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteMaterial(materialId: any) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}Admin/RemoveMaterial/${materialId}`\r\n    );\r\n  }\r\n\r\n  publishMaterial(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/PublishDepublishhMaterial/${materialId}`\r\n    );\r\n  }\r\n\r\n  getGroupsByEduCompId<T>(EduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnListEduCompIdGroupByEduCompID/${EduCompId}`\r\n    );\r\n  }\r\n\r\n  returnSearchedUnitsBySubjectId<T>(subjectId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnSearchedUnitsBySubjectId/${subjectId}`\r\n    );\r\n  }\r\n\r\n  returnSearchedLessonsByUnitId<T>(UnitId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnSearchedLessonsByUnitId/${UnitId}`\r\n    );\r\n  }\r\n\r\n  searcheMaterial<T>(data: ISearchMaterialVM) {\r\n    return this.http.get<T>(\r\n      `${`${environment.apiURL}Admin/returnSearchedMaterialViewResult/${data.p}`}/${\r\n        data?.searchedItemId\r\n      }/${data.searchedItemType}/${data.IsOnline}/${data.searchedTeacherId}/${data.subjectId}`\r\n    );\r\n  }\r\n\r\n  showVideoByMaterialId(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/showVideoByMaterialId/${materialId}`\r\n    );\r\n  }\r\n\r\n  dawnloadLectureAttendees(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/offlineLectureAttendees/${materialId}`\r\n    );\r\n  }\r\n\r\n  getMaterialParts(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/materialPartsTable/${materialId}`\r\n    );\r\n  }\r\n\r\n  getPartById<T>(partId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/getMaterialPartByID/${partId}`\r\n    );\r\n  }\r\n\r\n  addPart(data: any) {\r\n    return this.http.post(environment.apiURL + \"Admin/AddMaterialPart\", data);\r\n  }\r\n\r\n  // updatePart(data: any) {\r\n  //   return this.http.post(this.updatePartURL, data);\r\n  // }\r\n\r\n  deletePart(partId: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/RemoveMaterialPart/${partId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  getMaterialAttaches(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/materialAttachsTable/${materialId}`\r\n    );\r\n  }\r\n\r\n  addAttach(data: any) {\r\n    return this.http.post(environment.apiURL + \"Admin/AddMaterialAttach\", data);\r\n  }\r\n\r\n  deleteAttach(AttachId: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/RemoveMaterialAttach/${AttachId}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  getExamsAndTemplates(eduCompId: any, subjectId: any, materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/showMaterialQuiz/${eduCompId}/${subjectId}/${materialId}`\r\n    );\r\n  }\r\n\r\n  getMaterialQuizes<T>(materialId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/returnExamsByMaterialId/${materialId}`\r\n    );\r\n  }\r\n\r\n  addMaterialQuiz(materialIdHiddenQuiz: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/AddQuizForm/${materialIdHiddenQuiz}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteMaterialQuiz(Id: any) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}Admin/RemoveMaterialQuiz/${Id}`\r\n    );\r\n  }\r\n\r\n  AddPopQuestion(materialId: any, body: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/AddPopQuestion/${materialId}`,\r\n      body\r\n    );\r\n  }\r\n\r\n  getPopQuestions(materialId: any) {\r\n    return this.http.get(\r\n      `${environment.apiURL}Admin/returnMaterialPopQuestionsByMaterialId/${materialId}`\r\n    );\r\n  }\r\n\r\n  deletePopQuestion(id: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/DeleteMaterialPopQuestion/${id}`,\r\n      null\r\n    );\r\n  }\r\n\r\n  UploadStudentAttendance(LectureID: any, attendance: any, data: any) {\r\n    return this.http.post(\r\n      `${environment.apiURL}Admin/postOfflineLectureAttendees/${attendance}/${LectureID}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  offlineLectureAttendeesTable<T>(LectureID: any, page: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/offlineLectureAttendeesTable/${LectureID}/${page}`\r\n    );\r\n  }\r\n\r\n  searchAttendanceManual(data: any) {\r\n    return this.http.post(\r\n      environment.apiURL + \"Admin/offlineLectureAttendees\",\r\n      data\r\n    );\r\n  }\r\n\r\n  updateAttendanceManual(data: any) {\r\n    return this.http.post(\r\n      environment.apiURL + \"Admin/editOfflineLectureAttendeeState\",\r\n      data\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BranchesService {\r\n  getAllBranchesURL =\r\n    environment.apiURL + \"usermanagement/returnCenterBranchesByEduComp/\";\r\n  addEditBranchesURL = environment.apiURL + \"usermanagement/AddEditBranch\";\r\n  deleteBranchesURL = environment.apiURL + \"usermanagement/deleteBranch\";\r\n\r\n  getAllDistrictsURL =\r\n    environment.apiURL + \"usermanagement/returnDistrictsList\"; // DropDownMenu\r\n  getAllAllCenterBranchesURL =\r\n    environment.apiURL + \"usermanagement/returnAllCenterBranches\"; // /{page} => paginated\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllBranches<T>(eduCompId: any) {\r\n    return this.http.get<T>(this.getAllBranchesURL + \"/\" + eduCompId);\r\n  }\r\n\r\n  getAllAllCenterBranches<T>(eduCompId:number ,page: number) {\r\n    return this.http.get<T>(this.getAllAllCenterBranchesURL + \"/\" + eduCompId+\"/\"+page);\r\n  }\r\n\r\n  addEditBranches<T, TV>(obj: T) {\r\n    return this.http.post<TV>(this.addEditBranchesURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":18,\r\n  //     \"EduCompId\":2,\r\n  //     \"Name\":\"Test edit Branch\",\r\n  //     \"districtId\":2\r\n  // }\r\n\r\n  deleteBranch<T>(branchId: number) {\r\n    return this.http.delete<T>(this.deleteBranchesURL + \"/\" + branchId);\r\n  }\r\n\r\n  getAllDistricts<T>() {\r\n    return this.http.get<T>(this.getAllDistrictsURL);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FunctionsService {\r\n  addEditFunctionURL = environment.apiURL + \"usermanagement/AddEditFunction\";\r\n  deleteFunctionURL = environment.apiURL + \"usermanagement/deleteFunction\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addEditFunction<T, TV>(obj: T) {\r\n    return this.http.post<TV>(this.addEditFunctionURL, obj);\r\n  }\r\n  //   {\r\n  //     \"Id\":0,\r\n  //     \"functionName\":\"test عربي\",\r\n  //     \"function_en_name\":\"test Eng\",\r\n  //     \"functionURL\":\"url test\"\r\n  // }\r\n\r\n  deleteFunction<T>(functionId: number) {\r\n    return this.http.delete<T>(this.deleteFunctionURL + \"/\" + functionId);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RolesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllRoles<T>(EduCompId :number) {\r\n    return this.http.get<T>(environment.apiURL + \"usermanagement/returnRoles\"+\"/\"+EduCompId);\r\n  }\r\n\r\n  addEditRole<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      `${environment.apiURL}usermanagement/create-role`,\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteRole(roleId: number) {\r\n    return this.http.delete(\r\n      environment.apiURL + \"usermanagement/deleteRole\" + \"/\" + roleId\r\n    );\r\n  }\r\n\r\n  getAllFunctions<T>(page: number, getAll: boolean) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/getAllFunctions/${page}/${getAll}`\r\n    );\r\n  }\r\n\r\n  getAllOwnedReports<T>() {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/get-all-reports-index`\r\n    );\r\n  }\r\n  getReportsByRoleId<T>(roleId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/get-all-reports-by-roleId/${roleId}`\r\n    );\r\n  }\r\n    \r\n  \r\n  getAllReports<T>() {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}Admin/get-all-reports`\r\n    );\r\n  }\r\n\r\n  getAllRoleFunctions<T>(roleId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnRoleFunctionsByRoleID/${roleId}`\r\n    );\r\n  }\r\n\r\n  addEditRoleFunctions<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.apiURL + \"usermanagement/add-function-to-role\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  getAllFunctionsByRoleId<T>(roleId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnRoleFunctionsByRoleID/${roleId}`\r\n    );\r\n  }\r\n\r\n  getAllUserBranchesWithFunctions<T>(userId: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnAllBranchUserAllRoleFunction/${userId}`\r\n    );\r\n  }\r\n\r\n  addUserBranchesAndRoleFunctions<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.apiURL + \"usermanagement/addUserBranchesAndRoleFunctions\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteUserRoleFunctions(functionId: number) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}usermanagement/deleteBranchUserRoleFunction/${functionId}`\r\n    );\r\n  }\r\n\r\n  deleteUserBranchRoleFunction(userId: number, branchId: number) {\r\n    return this.http.delete(\r\n      `${environment.apiURL}usermanagement/deleteBranchUserAllRoleFunction/${userId}/${branchId}`\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UsersService {\r\n  deleteUserURL = environment.apiURL + \"usermanagement/deleteUser\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllUsers<T>(eduCompId: any, page: number) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnUsersByEduComp/${eduCompId}/${page}`\r\n    );\r\n  }\r\n\r\n  addEditUser<T, TV>(obj: T) {\r\n    return this.http.post<TV>(\r\n      environment.apiURL + \"usermanagement/create-user-account\",\r\n      obj\r\n    );\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    return this.http.delete(this.deleteUserURL + \"/\" + userId);\r\n  }\r\n\r\n  getAllBranchesByCenter<T>(eduCompId: any) {\r\n    return this.http.get<T>(\r\n      `${environment.apiURL}usermanagement/returnCenterBranchesByEduComp/${eduCompId}`\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  ViewContainerRef,\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\n\r\n@Directive({\r\n  selector: \"[appMatPaginatorStyle]\",\r\n})\r\nexport class MatPaginatorStyleDirective {\r\n  private _currentPage = 1;\r\n  private _pageGapTxt = \"...\";\r\n  private _rangeStart;\r\n  private _rangeEnd;\r\n  private _buttons = [];\r\n\r\n  @Input()\r\n  get showTotalPages(): number {\r\n    return this._showTotalPages;\r\n  }\r\n  set showTotalPages(value: number) {\r\n    this._showTotalPages = value % 2 == 0 ? value + 1 : value;\r\n  }\r\n  private _showTotalPages = 2;\r\n\r\n  constructor(\r\n    @Host() @Self() @Optional() private readonly matPag: MatPaginator,\r\n    private vr: ViewContainerRef,\r\n    private ren: Renderer2\r\n  ) {\r\n    //Sub to rerender buttons when next page and last page is used\r\n    this.matPag.page.subscribe((v) => {\r\n      this.switchPage(v.pageIndex);\r\n    });\r\n  }\r\n\r\n  private buildPageNumbers() {\r\n    const actionContainer = this.vr.element.nativeElement.querySelector(\r\n      \"div.mat-paginator-range-actions\"\r\n    );\r\n    const nextPageNode = this.vr.element.nativeElement.querySelector(\r\n      \"button.mat-paginator-navigation-next\"\r\n    );\r\n    const prevButtonCount = this._buttons.length;\r\n\r\n    // remove buttons before creating new ones\r\n    if (this._buttons.length > 0) {\r\n      this._buttons.forEach((button) => {\r\n        this.ren.removeChild(actionContainer, button);\r\n      });\r\n      //Empty state array\r\n      this._buttons.length = 0;\r\n    }\r\n\r\n    //initialize next page and last page buttons\r\n    if (this._buttons.length == 0) {\r\n      let nodeArray =\r\n        this.vr.element.nativeElement.childNodes[0].childNodes[0].childNodes[2]\r\n          .childNodes;\r\n      setTimeout(() => {\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          if (nodeArray[i].nodeName === \"BUTTON\") {\r\n            if (nodeArray[i].disabled) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(190, 130, 130, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgba(255, 0, 0, 1)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    let dots = false;\r\n\r\n    for (let i = 0; i < this.matPag.getNumberOfPages(); i = i + 1) {\r\n      if (\r\n        (i < this._showTotalPages &&\r\n          this._currentPage < this._showTotalPages &&\r\n          i > this._rangeStart) ||\r\n        (i >= this._rangeStart && i <= this._rangeEnd)\r\n      ) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(i, this.matPag.pageIndex),\r\n          nextPageNode\r\n        );\r\n      } else {\r\n        if (i > this._rangeEnd && !dots) {\r\n          this.ren.insertBefore(\r\n            actionContainer,\r\n            this.createButton(this._pageGapTxt, this.matPag.pageIndex),\r\n            nextPageNode\r\n          );\r\n          dots = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButton(i: any, pageIndex: number): any {\r\n    const linkBtn = this.ren.createElement(\"mat-button\");\r\n    this.ren.addClass(linkBtn, \"mat-mini-fab\");\r\n    this.ren.setStyle(linkBtn, \"margin\", \"1%\");\r\n\r\n    const pagingTxt = isNaN(i) ? this._pageGapTxt : +(i + 1);\r\n    const text = this.ren.createText(pagingTxt + \"\");\r\n\r\n    this.ren.addClass(linkBtn, \"mat-custom-page\");\r\n    switch (i) {\r\n      case pageIndex:\r\n        this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        break;\r\n      case this._pageGapTxt:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(this._currentPage + this._showTotalPages);\r\n        });\r\n        break;\r\n      default:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(i);\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.ren.appendChild(linkBtn, text);\r\n    //Add button to private array for state\r\n    this._buttons.push(linkBtn);\r\n    return linkBtn;\r\n  }\r\n\r\n  private initPageRange(): void {\r\n    this._rangeStart = this._currentPage - this._showTotalPages / 2;\r\n    this._rangeEnd = this._currentPage + this._showTotalPages / 2;\r\n\r\n    this.buildPageNumbers();\r\n  }\r\n\r\n  private switchPage(i: number): void {\r\n    this._currentPage = i;\r\n    this.matPag.pageIndex = i;\r\n    this.initPageRange();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.initPageRange();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GroupByService {\r\n  constructor() {}\r\n\r\n  //group response data by DayName\r\n  groupBy(collection: any[], property: string): any[] {\r\n    if (!collection) {\r\n      // return null;\r\n    }\r\n    const groupedCollection = collection.reduce((previous, current) => {\r\n      if (!previous[current[property]]) {\r\n        previous[current[property]] = [current];\r\n      } else {\r\n        previous[current[property]].push(current);\r\n      }\r\n      return previous;\r\n    }, {});\r\n    return Object.keys(groupedCollection).map((key) => ({\r\n      key,\r\n      List: groupedCollection[key],\r\n    }));\r\n  }\r\n}\r\n"],"names":["RouterModule","UserBalanceDetailsComponent","ReservationEditComponent","ReservationIndexComponent","ReservationStatusComponent","StudentDiscountComponent","StudentsIndexComponent","CenterBranchesComponent","FunctionsSetupComponent","AddRoleComponent","RoleFunctionsComponent","UserBranchesRolesComponent","UsersComponent","HelpingRequestsComponent","routes","path","component","children","redirectTo","pathMatch","loadChildren","then","m","EducationalSetupModule","SetupModule","ExamsModule","ReportsModule","DashboardRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","SharedModule","MaterialModule","NgxSpinnerModule","NgbModule","MatPaginatorStyleDirective","ReservationDetailsComponent","DashboardModule","declarations","MAT_DIALOG_DATA","i0","reservationService","data","reservationId","ReservationDetails","subscribe","res","reservation","selectors","decls","vars","consts","template","Validators","CustomeValidator","reservationServ","fb","toaster","route","spinner","authserv","paramMap","params","Number","get","queryParamMap","functionId","EduCompId","getEduCompId","getReservationEdit","myForm","group","userId","required","Id","UserName","whiteSpace","Religion","Gender","EducationTypeId","CenterBranchId","SchoolName","EducationalDivision","GuardianJob","Area","Address","StudentNumber","maxLength","minLength","pattern","startsWith","StudentWhatsAppNumber","FatherMobile","FatherWhatsAppNumber","MotherMobile","MotherWhatsAppNumber","HomeTelephone","SentviewId","currentYear","City","competitions","Hobbies","workshops","controls","e","FormCtrls","_a","EduCompIdCtrl","setValue","show","patchValue","Reservation","Religions","Genders","EducationalDivisions","EducationTypes","Areas","ProfilePicture","ProfilePicture_Path","_b","returnBranchesByEducTypeId","_c","hide","warning","value","profilePicture","valid","SubmitReservationEdit","returnValue","returnString","success","error","typeId","CenterBranches","event","fileName","target","files","name","fileSize","size","fileType","type","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","result","FileAsBase64","_r3","ctx","MatPaginator","MatSort","MatTableDataSource","ctx_r58","SubjectMaterialsService","dialog","getUserRowFunctions","rowFunctions","branchId","getBranchId","email","mobile","code","groupId","statusId","cityId","page","getGroupsByEduCompId","returnStatus","getArea","getReservationsList","branchIdCtrl","dataSource","paginator","sort","filterValue","filter","trim","toLowerCase","p","Reservations","list","itemsCount","retunValue","groups","lstEduCompGroups","Status","open","minWidth","afterClosed","reset","currentYearCtrl","viewQuery","authservice","getStudentStatus","returnBranchesByEduCompId","EduCompUser_Status","note","EduCompUserId","statusReasonId","studentUserId","Code","reserveId","AcceptReservation","GetStudentStatus","getReasonsByStatusId","statuses","studyingGroups","userName","ReservationStatusPaging","disabled","SubmitReservationStatus","StatusId","Reasons","ctx_r23","ManageViewsService","getCustomDiscount","searchForm","sentCode","sentCenterCode","sentMobile","sentEmail","InCenter","customDiscountId","searchStudent","getStudentCustomDiscount","getStudentCustomDiscountsList","updateStudentCustomDiscount","console","log","User","ar_name","user_ID","Discount","reverse","CustomDiscountList","toastr","SearchStudentsService","queryStringEm","queryStringCo","queryStringPhoneNumber","queryStringMozakretyCode","studyingGroup","getStudentsByEduCompId","getStudentGroupsAndStatuts","students","lists","totalCount","Statuts","status","confirmed","confirm","deleteStudent","i","findIndex","splice","ElementRef","DeleteDialogComponent","ctx_r27","ctx_r30","msg","branchService","branchName","districtId","getAllDistricts","response","districts","getAllBranches","pageNumber","getAllAllCenterBranches","branches","centerBrnachesList","branch","branchNameCtrl","Name","districtIdCtrl","addBtn","nativeElement","innerText","deleteBranch","submitted","obj","addEditBranches","removeBranch","ctx_r28","ctx_r31","roleService","functionService","functionNameEn","functionNameAr","link","getAllFunctions","functions","func","functionIdCtrl","functionNameEnCtrl","function_en_name","functionNameArCtrl","functionName","linkCtrl","_d","functionURL","deleteFunction","addEditFunction","removeFunction","ctx_r20","roleId","roleName","getAllRoles","roles","role","roleIdCtrl","roleNameCtrl","deleteRole","index","r","addEditRole","push","removeRole","ctx_r7","ctx_r11","router","param","getAllRoleFunctions","getAllOwnedReportsByRoleId","groupFunctions","forEach","g","allFunctionsLength","length","getReportsByRoleId","ownerReports","selectedReportsIds","ReportId","getAllOwnedReports","reports","roleFunctions","functionIds","function","allChecked","$event","checked","id","reportId","found","includes","functionsList","reportsList","addEditRoleFunctions","ctx_r29","ctx_r37","ctx_r45","userService","groupByService","datePipe","branchsIds","fromDate","toDate","getAllBranchesByCenter","getAllUserBranchesWithFunctions","getAllFunctionsByRoleId","groupBy","List","userBranchesWithFunctions","branchUserList","funParent","roleFunctionsList","fun","checkedfunctionIds","deleteUserBranchRoleFunction","deleteUserRoleFunctions","centerBranchUserFuncId","roleFunctionsIds","branchUser","from","transform","fromDateCtrl","to","toDateCtrl","addUserBranchesAndRoleFunctions","onDeleteFunction","ctx_r48","phone","password","confirmedPass","validator","mustMatch","getAllUsers","itemsCounts","user","account_email","_e","_f","account_password","_g","deleteUser","_h","addEditUser","removeUser","environment","http","body","post","apiURL","factory","providedIn","ReservationService","viewId","BranchId","MustHaveStudents","DontShowMaxed","teacherId","isOnline","teacherUserId","eduCompId","subjectId","materialId","delete","UnitId","searchedItemId","searchedItemType","IsOnline","searchedTeacherId","partId","AttachId","materialIdHiddenQuiz","LectureID","attendance","BranchesService","getAllBranchesURL","getAllAllCenterBranchesURL","addEditBranchesURL","deleteBranchesURL","getAllDistrictsURL","FunctionsService","addEditFunctionURL","deleteFunctionURL","RolesService","getAll","UsersService","deleteUserURL","matPag","vr","ren","v","switchPage","pageIndex","_showTotalPages","actionContainer","element","querySelector","nextPageNode","prevButtonCount","_buttons","button","removeChild","nodeArray","childNodes","setTimeout","nodeName","setStyle","dots","getNumberOfPages","_currentPage","_rangeStart","_rangeEnd","insertBefore","createButton","_pageGapTxt","linkBtn","createElement","addClass","pagingTxt","isNaN","text","createText","setAttribute","listen","appendChild","buildPageNumbers","initPageRange","inputs","showTotalPages","GroupByService","collection","property","groupedCollection","reduce","previous","current","Object","keys","map","key"],"sourceRoot":"webpack:///"}