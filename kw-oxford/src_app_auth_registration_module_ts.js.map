{"version":3,"file":"src_app_auth_registration_module_ts.js","mappings":"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","sources":["./src/app/auth/educational-details/educational-details.component.ts","./src/app/auth/educational-details/educational-details.component.html","./src/app/auth/error/error-page.component.ts","./src/app/auth/error/error-page.component.html","./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/forgot-password/forgot-password.component.html","./src/app/auth/login/login-page.component.ts","./src/app/auth/login/login-page.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/registration-routing.module.ts","./src/app/auth/registration.module.ts","./src/app/shared/services/auth/Guards/auth/not-user.guard.ts"],"sourcesContent":["import {\r\n  EditEduDataVM,\r\n  IStageDropVM,\r\n  IYearDropVM,\r\n} from \"./../../shared/models/general/general\";\r\nimport { CustomeValidator } from \"./../../shared/validators/customeValid.validator\";\r\nimport { Component, HostListener, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { StudentService } from \"app/student/services/student.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ComponentCanDeactivate } from \"app/shared/services/auth/Guards/auth/pending-changes.guard\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-educational-details\",\r\n  templateUrl: \"./educational-details.component.html\",\r\n  styleUrls: [\"./educational-details.component.scss\"],\r\n})\r\nexport class EducationalDetailsComponent\r\n  implements OnInit, ComponentCanDeactivate\r\n{\r\n  @HostListener(\"window:beforeunload\")\r\n  canDeactivate(): Observable<boolean> | boolean {\r\n    if (this.myForm.valid) return true;\r\n    else return false;\r\n  }\r\n\r\n  EduStages: IStageDropVM[] = [];\r\n  EduYears: IYearDropVM[] = [];\r\n  stageID: any;\r\n\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  isFailed = false;\r\n  errMsg = \"\";\r\n  matcher = new ErrorStateMatcher();\r\n  NewReservation: number; //(1) for new year. (0) for current year\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private generalServ: GeneralService,\r\n    private studentServ: StudentService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private toaster: ToastrService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    this.NewReservation = authService.getNewReservation();\r\n  }\r\n  ngOnInit(): void {\r\n    this.getEduStagesList();\r\n\r\n    this.myForm = this.fb.group({\r\n      stageID: [\"\", [Validators.required]],\r\n      EduYearID: [\"\", [Validators.required]],\r\n      parentName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          CustomeValidator.whiteSpace,\r\n          Validators.pattern(\r\n            /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n          ),\r\n        ],\r\n      ],\r\n      parentPhoneNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\-\\(\\)\\S*$]*$/),\r\n          Validators.minLength(11),\r\n          Validators.maxLength(11),\r\n        ],\r\n      ],\r\n    });\r\n\r\n    if (this.NewReservation) {\r\n      this.FormCtrls.stageID.setValue(14);\r\n      this.getEduYearByStageId(14);\r\n      this.FormCtrls.EduYearID.setValue(36);\r\n    }\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  //Return Educational Stages List\r\n  getEduStagesList() {\r\n    this.generalServ.getAllEduStagesList<IStageDropVM[]>().subscribe((res) => {\r\n      this.EduStages = res;\r\n    });\r\n  }\r\n\r\n  //Return Educational Years List By Stage Id\r\n  getEduYearByStageId(stageId: any) {\r\n    this.EduYears = [];\r\n    this.FormCtrls.EduYearID.setValue(\"\");\r\n    if (stageId) {\r\n      this.generalServ\r\n        .getEduYearByStageId<IYearDropVM[]>(stageId)\r\n        .subscribe((res) => {\r\n          this.EduYears = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  // Save Student Educational Stage Data\r\n  SaveStudenStage() {\r\n    this.submitted = true;\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.studentServ\r\n        .SaveStudenStage<EditEduDataVM, any>(this.myForm.value)\r\n        .subscribe((res) => {\r\n          this.spinner.hide();\r\n          if (res.returnValue == 1) {\r\n            this.isFailed = false;\r\n            this.toaster.success(\r\n              \"تم انشاء الحساب بنجاح، من فضلك قم بتسجيل الدخول \"\r\n            );\r\n            this.authService.logout();\r\n            this.router.navigateByUrl(\"/auth/login\");\r\n          } else {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<!--Registration Page Starts-->\r\n<section id=\"regestration\" class=\"auth-height\">\r\n  <div class=\"row full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/register.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"350\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"card-title mb-2\">\r\n                  {{ \"auth.ConfirmRegister\" | translate }}\r\n                </h4>\r\n                <p>\r\n                  {{ \"auth.CompleteRegisterMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"myForm\">\r\n\r\n\r\n                  <!-- Show stage, year if old reservation -->\r\n                  <ng-container *ngIf=\"!NewReservation\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                      <mat-label> {{ \"labels.Stage\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"stageID\"\r\n                        [errorStateMatcher]=\"matcher\"\r\n                        (selectionChange)=\"\r\n                          getEduYearByStageId(FormCtrls.stageID?.value)\r\n                        \"\r\n                      >\r\n                        <mat-option>\r\n                          {{ \"General.Choose\" | translate }}\r\n                        </mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let stage of EduStages\"\r\n                          [value]=\"stage.stage_id\"\r\n                        >\r\n                          {{ stage.stage_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-hint\r\n                        *ngIf=\"\r\n                          FormCtrls.stageID.invalid &&\r\n                          (FormCtrls.stageID.touched || submitted)\r\n                        \"\r\n                        class=\"text-danger\"\r\n                      >\r\n                        <span *ngIf=\"FormCtrls.stageID.errors?.required\">\r\n                          {{ \"labels.MustChoosevalue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"fill\">\r\n                      <mat-label> {{ \"labels.Year\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"EduYearID\"\r\n                        [errorStateMatcher]=\"matcher\"\r\n                      >\r\n                        <mat-option>\r\n                          {{ \"General.Choose\" | translate }}</mat-option\r\n                        >\r\n                        <mat-option\r\n                          *ngFor=\"let year of EduYears\"\r\n                          [value]=\"year.educational_year_id\"\r\n                        >\r\n                          {{ year.educational_year_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-hint\r\n                        *ngIf=\"\r\n                          FormCtrls.EduYearID.invalid &&\r\n                          (FormCtrls.EduYearID.touched || submitted)\r\n                        \"\r\n                        class=\"text-danger\"\r\n                      >\r\n                        <span *ngIf=\"FormCtrls.EduYearID.errors?.required\">\r\n                          {{ \"labels.MustChoosevalue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </ng-container>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ParentName\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"parentName\"\r\n                      placeholder=\"Parent Name\"\r\n                    />\r\n\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.parentName.invalid &&\r\n                        (FormCtrls.parentName.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"FormCtrls.parentName.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.parentName.errors?.whiteSpace ||\r\n                          FormCtrls.parentName.errors?.pattern\r\n                        \"\r\n                      >\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ParentMobile\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"parentPhoneNumber\"\r\n                      placeholder=\"Parent Mobile\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        FormCtrls.parentPhoneNumber.invalid &&\r\n                        (FormCtrls.parentPhoneNumber.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.parentPhoneNumber.errors?.required ||\r\n                          FormCtrls.parentPhoneNumber.errors?.whiteSpace ||\r\n                          FormCtrls.parentPhoneNumber.errors?.pattern\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span\r\n                        *ngIf=\"\r\n                          FormCtrls.parentPhoneNumber.errors?.minlength ||\r\n                          FormCtrls.parentPhoneNumber.errors?.maxlength\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.MobileLength\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </form>\r\n\r\n                <br />\r\n                <div\r\n                  class=\"d-flex justify-content-between flex-sm-row flex-column\"\r\n                >\r\n                  <a\r\n                    mat-raised-button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"SaveStudenStage()\"\r\n                  >\r\n                    {{ \"General.Confirm\" | translate }}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Page Ends-->\r\n<ngx-spinner></ngx-spinner>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-error-page',\r\n    templateUrl: './error-page.component.html',\r\n    styleUrls: ['./error-page.component.scss']\r\n})\r\n\r\nexport class ErrorPageComponent {\r\n\r\n}","<!--Error page starts-->\r\n<section id=\"error\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row auth-height full-height-vh\">\r\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\r\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\r\n            <div class=\"w-75 error-text mx-auto mt-4\">\r\n              <p>The page you are looking for might have beel removed, had it's name changed, or is temporarily unavailable.</p>\r\n            </div>\r\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Error page ends-->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { CustomeValidator } from \"./../../shared/validators/customeValid.validator\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  resetForm: FormGroup;\r\n  newPassForm: FormGroup;\r\n  submitted = false;\r\n  isFailed: boolean = false;\r\n  errMsg = \"\";\r\n  ifHaveCode: boolean = false;\r\n\r\n  constructor(\r\n    private authServ: AuthService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm = this.fb.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n\r\n    this.newPassForm = this.fb.group({\r\n      verificationCode: [\r\n        \"\",\r\n        [Validators.required, CustomeValidator.whiteSpace],\r\n      ],\r\n\r\n      new_password: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n    });\r\n  }\r\n\r\n  get email() {\r\n    return this.resetForm.controls[\"email\"];\r\n  }\r\n\r\n  get newPassCtrls() {\r\n    return this.newPassForm.controls;\r\n  }\r\n\r\n  // START Forgot Password\r\n  forgotPassword() {\r\n    if (this.resetForm.valid) {\r\n      this.spinner.show();\r\n      this.authServ\r\n        .forgotPassword(this.resetForm.value)\r\n        .subscribe((res: any) => {\r\n          console.log(res);\r\n          if (res.returnValue == 0) {\r\n            this.ifHaveCode = true;\r\n            this.isFailed = false;\r\n            this.errMsg = \"تم إرسال كود التأكيد الي البريد الإلكتروني الخاص بك\";\r\n          } else {\r\n            this.ifHaveCode = false;\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          }\r\n\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  // START Forgot Password\r\n  resetPassword() {\r\n    this.isFailed = false;\r\n    if (this.newPassCtrls.valid) {\r\n      this.spinner.show();\r\n      this.authServ\r\n        .resetPassword(this.newPassCtrls.value)\r\n        .subscribe((res: any) => {\r\n          console.log(res);\r\n          if (\r\n            res.returnValue == -1 &&\r\n            res.returnString == \"Verification code is invalid.\"\r\n          ) {\r\n            this.isFailed = true;\r\n            this.errMsg = res.returnString;\r\n          } else if (\r\n            res.returnValue == 0 &&\r\n            res.returnString == \"Password changed successfully.\"\r\n          ) {\r\n            this.router.navigateByUrl(\"auth/login\");\r\n            this.toastr.success(\r\n              \" تم تغير كلمة المرور بنجاح قم بتسجيل الدخول بكلمة المرور الجديدة\"\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n\r\n<!--Forgot Password Starts-->\r\n<section id=\"forgot-password\" class=\"auth-height\">\r\n  <div\r\n    class=\"row full-height-vh m-0 d-flex align-items-center justify-content-center\"\r\n  >\r\n    <div class=\"col-md-7 col-12\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\"\r\n              >\r\n                <img\r\n                  src=\"/assets/img/gallery/forgot.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"260\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <!-- Search  Email-->\r\n              <div *ngIf=\"!ifHaveCode\" class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">\r\n                  {{ \"auth.RecoverPassword\" | translate }}\r\n                </h4>\r\n                <p class=\"card-text mb-3\">\r\n                  {{ \"auth.RecoverPasswordMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"resetForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Email\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      formControlName=\"email\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"email.invalid && (email.touched || submitted)\"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"email.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"email.errors?.email\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        please enter a correct email\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </form>\r\n                <br />\r\n                <div\r\n                  class=\"d-flex flex-sm-row flex-column justify-content-between\"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    (click)=\"forgotPassword()\"\r\n                    class=\"btn btn-primary ml-sm-1\"\r\n                  >\r\n                    {{ \"General.SendCode\" | translate }}\r\n                  </button>\r\n                  <a\r\n                    mat-raised-button\r\n                    routerLink=\"/auth/login\"\r\n                    class=\"btn bg-light-primary mb-2 mb-sm-0\"\r\n                  >\r\n                    {{ \"auth.BackToLogin\" | translate }}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Send Code -->\r\n              <div *ngIf=\"ifHaveCode\" class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">\r\n                  {{ \"auth.NewPassword\" | translate }}\r\n                </h4>\r\n                <p class=\"card-text mb-3\">\r\n                  {{ \"auth.EnterVerificationCodeMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  *ngIf=\"isFailed\"\r\n                  (close)=\"isFailed = false\"\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"newPassForm\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"auth.VerificationCode\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      placeholder=\"Enter verification code\"\r\n                      formControlName=\"verificationCode\"\r\n                      autocomplete=\"off\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        newPassCtrls.verificationCode.invalid &&\r\n                        (newPassCtrls.verificationCode.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          newPassCtrls.verificationCode.errors?.required ||\r\n                          newPassCtrls.verificationCode.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"auth.NewPassword\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"password\"\r\n                      placeholder=\"Enter New Password\"\r\n                      formControlName=\"new_password\"\r\n                      autocomplete=\"off\"\r\n                    />\r\n                    <mat-hint\r\n                      *ngIf=\"\r\n                        newPassCtrls.new_password.invalid &&\r\n                        (newPassCtrls.new_password.touched || submitted)\r\n                      \"\r\n                      class=\"text-danger\"\r\n                    >\r\n                      <span *ngIf=\"newPassCtrls.new_password.errors?.required\">\r\n                        <i class=\"ft-alert-circle align-middle\"></i>\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span></mat-hint\r\n                    >\r\n                  </mat-form-field>\r\n                </form>\r\n                <br />\r\n                <div\r\n                  class=\"d-flex flex-sm-row flex-column justify-content-between\"\r\n                >\r\n                  <button\r\n                    mat-raised-button\r\n                    (click)=\"resetPassword()\"\r\n                    class=\"btn btn-primary ml-sm-1 flex-right\"\r\n                  >\r\n                    {{ \"General.Save\" | translate }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Forgot Password Ends-->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { loginMV } from \"app/shared/models/auth/auth\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n\tselector: \"app-login-page\",\r\n\ttemplateUrl: \"./login-page.component.html\",\r\n\tstyleUrls: [\"./login-page.component.scss\"],\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\tsubmitted = false;\r\n\tisFailed = false;\r\n\terrMsg = \"\";\r\n\treturnUrl?: any;\r\n\tloginForm: FormGroup;\r\n\r\n\tNewReservation: number; //(1) for new year. (0) for current year\r\n\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate spinner: NgxSpinnerService,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.NewReservation = this.authService.getNewReservation();\r\n\t\tthis.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"];\r\n\t\tthis.loginForm = this.fb.group({\r\n\t\t\t// account_email: [\"\", [Validators.required, Validators.email]],\r\n\t\t\tmobile: [\r\n\t\t\t\t\"\",\r\n\t\t\t\t[\r\n\t\t\t\t\tValidators.required,\r\n\t\t\t\t\tValidators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n\t\t\t\t\tValidators.minLength(8),\r\n\t\t\t\t\tValidators.maxLength(8),\r\n\t\t\t\t],\r\n\t\t\t],\r\n\t\t\taccount_password: [\"\", [Validators.required]],\r\n\t\t});\r\n\t}\r\n\r\n\tget FormCtrls() {\r\n\t\treturn this.loginForm.controls;\r\n\t}\r\n\r\n\t// login\r\n\tlogin() {\r\n\t\tObject.keys(localStorage).forEach((key) => {\r\n\t\t\tif (!(key.includes(\"currentLang\") || key.includes(\"NewReservation\")))\r\n\t\t\t\tdelete localStorage[key];\r\n\t\t});\r\n\t\tthis.submitted = true;\r\n\t\tif (this.loginForm.valid) {\r\n\t\t\tthis.spinner.show();\r\n\t\t\tthis.authService.login<loginMV, any>(this.loginForm.value).subscribe((res) => {\r\n\t\t\t\tthis.spinner.hide();\r\n\t\t\t\tthis.submitted = false;\r\n\t\t\t\tthis.isFailed = false;\r\n\t\t\t\t//  console.log(\"login\", res);\r\n\t\t\t\tif (res.returnValue == 0) {\r\n\t\t\t\t\tlocalStorage.setItem(\"token\", res.authToken.token);\r\n\t\t\t\t\tlocalStorage.setItem(\"user_type_Id\", res.user_type_id); //res.user_type_id; //res.authToken.type_Id;\r\n\t\t\t\t\tlocalStorage.setItem(\"yearId\", res.yearId);\r\n\t\t\t\t\tlocalStorage.setItem(\"stageId\", res.user_stageId);\r\n\t\t\t\t\tlocalStorage.setItem(\"EduCompList\", res.authToken.EduCompList);\r\n\t\t\t\t\tthis.authService.setEduCompId(res.authToken.EduCompList[0]);\r\n\t\t\t\t\t//  localStorage.setItem(\"EduCompId\", res.authToken.EduCompList[0]);\r\n\r\n\t\t\t\t\tif (res.user_type_id == 2)\r\n\t\t\t\t\t\tthis.router.navigateByUrl(\r\n\t\t\t\t\t\t\tthis.returnUrl ?? `/student/custom-year-subjects/${res.user_stageId}/${res.yearId}`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\telse if (res.user_type_id == 6) this.router.navigateByUrl(\"/support/search\" ?? \"home\");\r\n\t\t\t\t\telse this.router.navigateByUrl(\"/home\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if login Error\r\n\t\t\t\telse if (res.returnValue == -1) {\r\n\t\t\t\t\tthis.isFailed = true;\r\n\t\t\t\t\tthis.errMsg = \"رقم الموبايل او كلمه السر غير صحيحه\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.isFailed = true;\r\n\t\t\t\t\tthis.errMsg = res.returnString;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","<!--Login Page Starts-->\r\n<section id=\"login\">\r\n  <div class=\"row auth-height full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/login.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"300\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">\r\n                  {{ \"auth.Login\" | translate }}\r\n                </h4>\r\n\r\n                <!-- <div\r\n                  class=\"alert bg-light-info mb-2 mt-2 text-center font-medium-3\"\r\n                  *ngIf=\"NewReservation\"\r\n                >\r\n                  لحجز العام الجديد 2023 - 2024 لدكتور تامر القاضي\r\n                </div> -->\r\n\r\n                <p>{{ \"auth.WelcomeBackMsg\" | translate }}</p>\r\n\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isFailed\"\r\n                  (closed)=\"isFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"loginForm\">\r\n                  <!-- <app-input\r\n                    [control]=\"FormCtrls.account_email\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Email\"\r\n                    placeholder=\"labels.Email\"\r\n                    type=\"text\"\r\n                  ></app-input> -->\r\n\r\n                  <app-input\r\n                    [control]=\"FormCtrls.mobile\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Mobile\"\r\n                    placeholder=\"labels.Mobile\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n\r\n                  <app-input\r\n                    [control]=\"FormCtrls.account_password\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Password\"\r\n                    placeholder=\"labels.Password\"\r\n                    type=\"password\"\r\n                  ></app-input>\r\n\r\n                  <br />\r\n\r\n                  <div\r\n                    class=\"d-sm-flex justify-content-between mb-3 font-small-2\"\r\n                  >\r\n                    <a routerLink=\"/auth/reset-password\">\r\n                      {{ \"auth.ForgotPassword\" | translate }}</a\r\n                    >\r\n                  </div>\r\n                  <div class=\"\">\r\n                    <a\r\n                      mat-raised-button\r\n                      class=\"btn btn-primary mb-1 mb-sm-0 btn-block\"\r\n                      (click)=\"login()\"\r\n                    >\r\n                      {{ \"auth.Login\" | translate }}\r\n                    </a>\r\n                    <a\r\n                      mat-raised-button\r\n                      routerLink=\"/auth/register\"\r\n                      class=\"btn bg-light-primary mb-sm-0 btn-block\"\r\n                    >\r\n                      {{ \"auth.CreateAccount\" | translate }}\r\n                    </a>\r\n                  </div>\r\n                </form>\r\n                <hr />\r\n                <ngx-spinner></ngx-spinner>\r\n                <!-- <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <h6 class=\"text-primary m-0\">Or Login With</h6>\r\n\r\n                  <div class=\"login-options\">\r\n                    <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\r\n                    <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\r\n                  </div>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Login Page Ends-->\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { RegisterMV } from \"app/shared/models/auth/auth\";\r\nimport { IStageDropVM, IYearDropVM } from \"app/shared/models/general/general\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n\tselector: \"app-register\",\r\n\ttemplateUrl: \"./register.component.html\",\r\n\tstyleUrls: [\"./register.component.scss\"],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\tmyForm: FormGroup;\r\n\tsubmitted = false;\r\n\tisFailed = false;\r\n\terrMsg = \"\";\r\n\tNewReservation: number; //(1) for new year. (0) for current year\r\n\treturnUrl?: any;\r\n\r\n\tEduStages: IStageDropVM[] = [];\r\n\tEduYears: IYearDropVM[] = [];\r\n\r\n\tmatcher = new ErrorStateMatcher();\r\n\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate toastr: MessagesService,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate spinner: NgxSpinnerService,\r\n\t\tprivate generalServ: GeneralService,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.NewReservation = this.authService.getNewReservation();\r\n\t\tthis.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"];\r\n\r\n\t\tthis.getEduStagesList();\r\n\r\n\t\tthis.myForm = this.fb.group(\r\n\t\t\t{\r\n\t\t\t\t// Id: [null],\r\n\t\t\t\tuserTypeId: [2, Validators.required],\r\n\t\t\t\t// ar_name: [\r\n\t\t\t\t//   \"\",\r\n\t\t\t\t//   [\r\n\t\t\t\t//     Validators.required,\r\n\t\t\t\t//     Validators.pattern(\r\n\t\t\t\t//       /^[a-zA-Z \\u0600-\\u065F\\u066A-\\u06EF\\u06FA-\\u06FF]+$/\r\n\t\t\t\t//     ),\r\n\t\t\t\t//     CustomeValidator.whiteSpace,\r\n\t\t\t\t//   ],\r\n\t\t\t\t// ],\r\n\t\t\t\tmobile: [\r\n\t\t\t\t\t\"\",\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tValidators.required,\r\n\t\t\t\t\t\tValidators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_ \\-\\(\\)\\S*$]*$/),\r\n\t\t\t\t\t\tValidators.minLength(8),\r\n\t\t\t\t\t\tValidators.maxLength(8),\r\n\t\t\t\t\t],\r\n\t\t\t\t],\r\n\t\t\t\tstageID: [\"\", [Validators.required]],\r\n\t\t\t\tEduYearID: [\"\", [Validators.required]],\r\n\t\t\t\t// account_email: [\"\", [Validators.required, Validators.email]],\r\n\t\t\t\taccount_password: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n\t\t\t\tconfirmPassword: [\"\", [Validators.required]],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalidator: CustomeValidator.mustMatch(\"account_password\", \"confirmPassword\"),\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tget FormCtrls() {\r\n\t\treturn this.myForm.controls;\r\n\t}\r\n\r\n\t//Return Educational Stages List\r\n\tgetEduStagesList() {\r\n\t\tthis.generalServ.getAllEduStagesList<IStageDropVM[]>().subscribe((res) => {\r\n\t\t\tthis.EduStages = res;\r\n\t\t});\r\n\t}\r\n\r\n\t//Return Educational Years List By Stage Id\r\n\tgetEduYearByStageId(stageId: any) {\r\n\t\tthis.EduYears = [];\r\n\t\tthis.FormCtrls.EduYearID.setValue(\"\");\r\n\t\tif (stageId) {\r\n\t\t\tthis.generalServ.getEduYearByStageId<IYearDropVM[]>(stageId).subscribe((res) => {\r\n\t\t\t\tthis.EduYears = res;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.submitted = true;\r\n\r\n\t\tif (this.myForm.valid) {\r\n\t\t\tthis.spinner.show();\r\n\t\t\tthis.authService.Registeration<RegisterMV, any>(this.myForm.value).subscribe((res) => {\r\n\t\t\t\t/// console.log(res);\r\n\t\t\t\tthis.spinner.hide();\r\n\t\t\t\tthis.submitted = false;\r\n\t\t\t\tthis.isFailed = false;\r\n\t\t\t\tif (res.returnValue == 1) {\r\n\t\t\t\t\tlocalStorage.setItem(\"token\", res.token.token);\r\n\t\t\t\t\tlocalStorage.setItem(\"user_type_Id\", res.user_type_id);\r\n\t\t\t\t\tlocalStorage.setItem(\"yearId\", res.user_eduYearId);\r\n\t\t\t\t\tlocalStorage.setItem(\"stageId\", res.user_stageId);\r\n\t\t\t\t\tlocalStorage.setItem(\"EduCompList\", res.token.EduCompList);\r\n\t\t\t\t\tif (res.token.EduCompList) this.authService.setEduCompId(res.token.EduCompList[0]);\r\n\r\n\t\t\t\t\tif (res.user_type_id == 2) {\r\n\t\t\t\t\t\tthis.toastr.success(\"auth.registerSuccess\");\r\n\t\t\t\t\t\tthis.router.navigateByUrl(\r\n\t\t\t\t\t\t\tthis.returnUrl ??\r\n\t\t\t\t\t\t\t\t`/student/custom-year-subjects/${res.user_stageId}/${res.user_eduYearId}`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else this.router.navigateByUrl(\"/home\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (res.returnValue == 0) {\r\n\t\t\t\t\tthis.isFailed = true;\r\n\t\t\t\t\tthis.errMsg = res.returnString;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","<!--Registration Page Starts-->\r\n<section id=\"regestration\" class=\"auth-height\">\r\n  <div class=\"row full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/register.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"350\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-md-12 px-4 py-3\">\r\n                <h4 class=\"card-title mb-2\">\r\n                  {{ \"auth.CreateAccount\" | translate }}\r\n                </h4>\r\n\r\n                <!-- <div\r\n                  class=\"alert bg-light-info mb-2 mt-2 text-center font-medium-3\"\r\n                  *ngIf=\"NewReservation\"\r\n                >\r\n                  لحجز العام الجديد 2023 - 2024 لدكتور تامر القاضي\r\n                </div> -->\r\n\r\n                <p>\r\n                  {{ \"auth.FillFormMsg\" | translate }}\r\n                </p>\r\n\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isFailed\"\r\n                  (closed)=\"isFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">{{ errMsg }}</p>\r\n                </ngb-alert>\r\n\r\n                <form [formGroup]=\"myForm\">\r\n                  <!-- <app-input\r\n                    [control]=\"FormCtrls.ar_name\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Name\"\r\n                    placeholder=\"labels.Name\"\r\n                  ></app-input> -->\r\n\r\n                  <app-input\r\n                    [control]=\"FormCtrls.mobile\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Mobile\"\r\n                    placeholder=\"labels.Mobile\"\r\n                    type=\"text\"\r\n                  ></app-input>\r\n\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-label> {{ \"labels.Stage\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"stageID\"\r\n                      [errorStateMatcher]=\"matcher\"\r\n                      (selectionChange)=\"\r\n                        getEduYearByStageId(FormCtrls.stageID?.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of EduStages\"\r\n                        [value]=\"stage.stage_id\"\r\n                      >\r\n                        {{ stage.stage_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>\r\n                      <input-validation-msg\r\n                        [control]=\"FormCtrls.stageID\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\"\r\n                      >\r\n                      </input-validation-msg>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-label> {{ \"labels.Year\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"EduYearID\"\r\n                      [errorStateMatcher]=\"matcher\"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let year of EduYears\"\r\n                        [value]=\"year.educational_year_id\"\r\n                      >\r\n                        {{ year.educational_year_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>\r\n                      <input-validation-msg\r\n                        [control]=\"FormCtrls.EduYearID\"\r\n                        [submitted]=\"submitted\"\r\n                        [isSelect]=\"true\"\r\n                      >\r\n                      </input-validation-msg>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <!-- <app-input\r\n                    [control]=\"FormCtrls.account_email\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Email\"\r\n                    placeholder=\"labels.Email\"\r\n                    type=\"text\"\r\n                  ></app-input> -->\r\n\r\n                  <app-input\r\n                    [control]=\"FormCtrls.account_password\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.Password\"\r\n                    placeholder=\"labels.Password\"\r\n                    type=\"password\"\r\n                  ></app-input>\r\n\r\n                  <app-input\r\n                    [control]=\"FormCtrls.confirmPassword\"\r\n                    [submitted]=\"submitted\"\r\n                    label=\"labels.ConfirmPassword\"\r\n                    placeholder=\"labels.ConfirmPassword\"\r\n                    type=\"password\"\r\n                  ></app-input>\r\n\r\n                  <!-- <mat-radio-group formControlName=\"userTypeId\" class=\"row\">\r\n                    <div class=\"col-6\">\r\n                      <mat-radio-button [value]=\"2\">\r\n                        {{ \"labels.Studnt\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n\r\n                    <div class=\"col-6\">\r\n                      <mat-radio-button [value]=\"3\">\r\n                        {{ \"labels.Parent\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group> -->\r\n                </form>\r\n\r\n                <br />\r\n                <div>\r\n                  <a\r\n                    mat-raised-button\r\n                    (click)=\"onSubmit()\"\r\n                    class=\"btn btn-primary mb-1 mb-sm-0 btn-block text-center\"\r\n                  >\r\n                    {{ \"auth.CreateAccount\" | translate }}\r\n                  </a>\r\n                  <a\r\n                    mat-raised-button\r\n                    routerLink=\"/auth/login\"\r\n                    class=\"btn bg-light-primary btn-block mb-sm-0 text-center\"\r\n                  >\r\n                    {{ \"auth.BackToLogin\" | translate }}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Registration Page Ends-->\r\n<ngx-spinner></ngx-spinner>\r\n","import { EducationalDetailsComponent } from \"./educational-details/educational-details.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { NotUserGuard } from \"app/shared/services/auth/Guards/auth/not-user.guard\";\r\nimport { IsStudentGuard } from \"app/shared/services/auth/Guards/roles/is-student.guard\";\r\nimport { PendingChangesGuard } from \"app/shared/services/auth/Guards/auth/pending-changes.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"error\",\r\n        component: ErrorPageComponent,\r\n      },\r\n\r\n      {\r\n        path: \"login\",\r\n        component: LoginPageComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n\r\n      {\r\n        path: \"register\",\r\n        component: RegisterComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n      {\r\n        path: \"reset-password\",\r\n        component: ForgotPasswordComponent,\r\n        canActivate: [NotUserGuard],\r\n      },\r\n\r\n      {\r\n        path: \"educational-details\",\r\n        component: EducationalDetailsComponent,\r\n       // canActivate: [IsStudentGuard],\r\n        canDeactivate: [PendingChangesGuard],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistrationRoutingModule {}\r\n","import { TranslateModule } from \"@ngx-translate/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { MaterialModule } from \"./../shared/material/material.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nimport { RegistrationRoutingModule } from \"./registration-routing.module\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { EducationalDetailsComponent } from \"./educational-details/educational-details.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RegistrationRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    TranslateModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    ErrorPageComponent,\r\n    LoginPageComponent,\r\n    RegisterComponent,\r\n    EducationalDetailsComponent,\r\n    ForgotPasswordComponent,\r\n  ],\r\n})\r\nexport class RegistrationModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from \"@angular/router\";\r\nimport { AuthService } from \"../../auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class NotUserGuard implements CanActivate {\r\n  constructor(private route: Router, private authservice: AuthService) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (!localStorage.getItem(\"token\")) {\r\n      return true;\r\n    } else {\r\n      this.route.navigateByUrl(\"\");\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"names":["CustomeValidator","Validators","ErrorStateMatcher","i0","ctx_r14","EducationalDetailsComponent","authService","generalServ","studentServ","fb","router","toaster","spinner","NewReservation","getNewReservation","myForm","valid","getEduStagesList","group","stageID","required","EduYearID","parentName","whiteSpace","pattern","parentPhoneNumber","minLength","maxLength","FormCtrls","setValue","getEduYearByStageId","controls","getAllEduStagesList","subscribe","res","EduStages","stageId","EduYears","submitted","show","SaveStudenStage","value","hide","returnValue","isFailed","success","logout","navigateByUrl","errMsg","returnString","selectors","hostBindings","ctx","ErrorPageComponent","decls","vars","consts","template","ctx_r8","ctx_r17","ForgotPasswordComponent","authServ","toastr","resetForm","email","newPassForm","verificationCode","new_password","forgotPassword","console","log","ifHaveCode","newPassCtrls","resetPassword","LoginPageComponent","route","returnUrl","snapshot","queryParams","loginForm","mobile","account_password","Object","keys","localStorage","forEach","key","includes","login","setItem","authToken","token","user_type_id","yearId","user_stageId","EduCompList","setEduCompId","_a","RegisterComponent","userTypeId","confirmPassword","validator","mustMatch","Registeration","user_eduYearId","RouterModule","NotUserGuard","PendingChangesGuard","routes","path","children","component","canActivate","canDeactivate","RegistrationRoutingModule","forChild","imports","exports","TranslateModule","MaterialModule","CommonModule","FormsModule","ReactiveFormsModule","NgbModule","NgxSpinnerModule","SharedModule","RegistrationModule","declarations","authservice","state","getItem","factory","providedIn"],"sourceRoot":"webpack:///"}