{"version":3,"file":"src_app_admin_pages_exams-setup_exams_module_ts.js","mappings":"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,CAVD;IAWD;EA7KH;IAAA;IAAA,OA+KE,2BAAkBiG,IAAlB,EAA4B;MAAA;;MAC1B,KAAKpI,MAAL,CACG2E,IADH,CACQ4J,sHADR,EAC+B;QAC3BhP,IAAI,EAAE;UACJK,GAAG,EAAEwI,IAAI,CAACI;QADN;MADqB,CAD/B,EAMG5D,WANH,GAOG5C,SAPH,CAOa,UAAC6C,OAAD,EAAY;QACrB,IAAIA,OAAJ,EAAa;UACX,MAAI,CAACoN,UAAL,CAAgB7J,IAAhB;QACD;MACF,CAXH;IAYD;EA5LH;IAAA;IAAA,OA8LE,uBAAcA,IAAd,EAAkC;MAAA;;MAChC,KAAKtI,WAAL,CACGoS,WADH,CAC+B9J,IAAI,CAAC6C,EADpC,EAEGjJ,SAFH,CAEa,UAACqC,QAAD,EAAa;QACtB,IAAIA,QAAJ,EAAc;UACZ,IAAIsG,CAAC,GAAG,MAAI,CAACgH,KAAL,CAAWrF,SAAX,CAAqB,UAACC,CAAD;YAAA,OAAOA,CAAC,KAAKnE,IAAb;UAAA,CAArB,CAAR;;UACA,MAAI,CAACuJ,KAAL,CAAWhH,CAAX,EAAcwH,SAAd,GAA0B,CAAC,MAAI,CAACR,KAAL,CAAWhH,CAAX,EAAcwH,SAAzC,CAFY,CAGZ;UACA;UACA;UACA;UACA;UACA;;UACA,MAAI,CAACvS,GAAL,CAASuC,OAAT,CAAiB,MAAjB;QACD;MACF,CAdH;IAeD,CA9MH,CAgNE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;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","sources":["./src/app/admin/pages/exams-setup/exam-correction/correction-dialog/correction-dialog.component.ts","./src/app/admin/pages/exams-setup/exam-correction/correction-dialog/correction-dialog.component.html","./src/app/admin/pages/exams-setup/exam-correction/correction-index/correction-index.component.ts","./src/app/admin/pages/exams-setup/exam-correction/correction-index/correction-index.component.html","./src/app/admin/pages/exams-setup/exams-routing.module.ts","./src/app/admin/pages/exams-setup/exams.module.ts","./src/app/admin/pages/exams-setup/exams/exam-preview/exam-preview.component.ts","./src/app/admin/pages/exams-setup/exams/exam-preview/exam-preview.component.html","./src/app/admin/pages/exams-setup/exams/exams-custome-points/exams-custome-points.component.ts","./src/app/admin/pages/exams-setup/exams/exams-custome-points/exams-custome-points.component.html","./src/app/admin/pages/exams-setup/exams/exams-index/exams-index.component.ts","./src/app/admin/pages/exams-setup/exams/exams-index/exams-index.component.html","./src/app/admin/pages/exams-setup/questions-banck/add-question/add-question.component.ts","./src/app/admin/pages/exams-setup/questions-banck/add-question/add-question.component.html","./src/app/admin/pages/exams-setup/questions-banck/questions-index/questions-index.component.ts","./src/app/admin/pages/exams-setup/questions-banck/questions-index/questions-index.component.html","./src/app/admin/pages/exams-setup/surveys/add-sub-question/add-sub-question.component.ts","./src/app/admin/pages/exams-setup/surveys/add-sub-question/add-sub-question.component.html","./src/app/admin/pages/exams-setup/surveys/add-survey/add-survey.component.ts","./src/app/admin/pages/exams-setup/surveys/add-survey/add-survey.component.html","./src/app/admin/pages/exams-setup/surveys/surveys-index/surveys-index.component.ts","./src/app/admin/pages/exams-setup/surveys/surveys-index/surveys-index.component.html","./src/app/admin/pages/exams-setup/templates/add-template/add-template.component.ts","./src/app/admin/pages/exams-setup/templates/add-template/add-template.component.html","./src/app/admin/pages/exams-setup/templates/templates-custome-points/templates-custome-points.component.ts","./src/app/admin/pages/exams-setup/templates/templates-custome-points/templates-custome-points.component.html","./src/app/admin/pages/exams-setup/templates/templates-index/templates-index.component.ts","./src/app/admin/pages/exams-setup/templates/templates-index/templates-index.component.html","./src/app/teacher/services/templates.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { subjectsDropdownVM } from \"app/admin/models/admin/educations\";\r\nimport {  ITeacherDropModel } from \"app/admin/models/admin/exam\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-correction-dialog\",\r\n  templateUrl: \"./correction-dialog.component.html\",\r\n  styleUrls: [\"./correction-dialog.component.css\"],\r\n})\r\nexport class CorrectionDialogComponent implements OnInit {\r\n  EduCompId: any;\r\n  functionId: number;\r\n  submitted:false;\r\n  myForm!: FormGroup;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private router: Router,\r\n    private msg: ToastrService,\r\n    private GeneralService: GeneralService,\r\n    // private toastr: ToastrService,\r\n    private examService: ExamsService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    // this.route.queryParamMap.subscribe((params) => {\r\n    //   this.groupId = Number(params.get(\"groupId\"));\r\n\r\n\r\n    //   this.functionId = Number(params.get(\"functionId\"));\r\n    //   //  console.log(\"functionId\", this.functionId);\r\n    //   if (this.functionId) {\r\n    //     this.authserv\r\n    //       .getUserRowFunctions(this.functionId)\r\n    //       .subscribe((res: any) => {\r\n    //         if (res) {\r\n    //           this.rowFunctions = res;\r\n    //           //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n \r\n  get questionNameCtrl() {\r\n    return this.myForm.get(\"questionName\");\r\n  }\r\n  get questionAnswerCtrl() {\r\n    return this.myForm.get(\"studentAnswer\");\r\n  }\r\n  get markCtrl() {\r\n    return this.myForm.get(\"mark\");\r\n  }\r\n  get teacherCommentCtrl() {\r\n    return this.myForm.get(\"teacherComment\");\r\n  }\r\n  get questionIdCtrl() {\r\n    return this.myForm.get(\"questionId\");\r\n  }\r\n  get examStudentIdCtrl() {\r\n    return this.myForm.get(\"examStudentId\");\r\n  }\r\n  get teacherUserIdCtrl() {\r\n    return this.myForm.get(\"teacherUserId\");\r\n  }\r\n  get questionMarkCtrl(){\r\n    return this.myForm.get(\"questionMark\");\r\n  }\r\n  get FormCtrl(){\r\n    return this.myForm.controls;\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(\"data\",this.data);\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      questionName:[''],\r\n      studentAnswer:[''],\r\n      questionId: [],\r\n      examStudentId:[],\r\n      teacherComment:['',Validators.required],\r\n      teacherUserId:[],\r\n      questionMark:[],\r\n      mark:[,Validators.required],\r\n\r\n    });\r\nthis.questionNameCtrl.setValue(this.data.msg.questionName);\r\nthis.questionNameCtrl.disable();\r\nthis.questionIdCtrl.setValue(this.data.msg.questionId);\r\nthis.examStudentIdCtrl.setValue(this.data.msg.examStudentId);\r\nthis.teacherUserIdCtrl.setValue(this.data.msg.teacherUserId);\r\nthis.questionMarkCtrl.setValue(this.data.msg.questionMark);\r\nthis.FormCtrl.studentAnswer.setValue(this.data.msg.studentAnswer);\r\n  }\r\n  \r\n\r\n  CorrectQuestion()\r\n  {\r\n\r\n    let valid = this.myForm.valid;\r\n    if (valid) {\r\n      console.log(\"my form\",this.myForm.value);\r\nif(this.markCtrl.value>this.questionMarkCtrl.value)\r\n{\r\n  this.msg.error(\"يجب ادخال قيمة النتيجة أقل من القية النهائية\");\r\n  return;\r\n}\r\nelse{\r\n\r\n\r\n  this.spinner.show();\r\n      // console.log(\"form data\", this.myForm.value);\r\n      this.examService.submitCorrection(this.myForm.value).subscribe(\r\n        (res: any) => {\r\n          if (res.returnValue == 1) {\r\n\r\n              this.msg.success(\"تم تصحيح السؤال\");\r\n              this.dialog.closeAll();\r\n          } else this.msg.error(res.returnString);\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  \r\n    }\r\n  }\r\n\r\n  \r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span> {{ \"labels.Correct\" | translate }} </span>\r\n        <a\r\n          mat-raised-button\r\n          [mat-dialog-close]=\"false\"\r\n          class=\"btn btn-danger float-right\"\r\n        >\r\n          {{ \"General.Close\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.َQuestionContent\" | translate\r\n                    }}</mat-label>\r\n\r\n                    <textarea\r\n                      matInput\r\n                      cols=\"20\"\r\n                      formControlName=\"questionName\"\r\n                      readonly\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-12 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.َQuestionContent\" | translate\r\n                    }}</mat-label>\r\n\r\n                    <textarea\r\n                      matInput\r\n                      cols=\"20\"\r\n                      formControlName=\"studentAnswer\"\r\n                      readonly\r\n                    ></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-12 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <img\r\n                      class=\"img-fluid\"\r\n                      [src]=\"data.imageAttatch\"\r\n                      alt=\"Question Image\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.TeacherComment\" | translate\r\n                    }}</mat-label>\r\n                    <input matInput formControlName=\"teacherComment\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        teacherCommentCtrl?.invalid &&\r\n                        (teacherCommentCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"teacherCommentCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"teacherCommentCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Mark\" | translate }}</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"mark\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        markCtrl?.invalid && (markCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"markCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"markCtrl?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"CorrectQuestion()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IRowFunctionVM } from 'app/shared/models/general/general';\r\nimport { AuthService } from 'app/shared/services/auth/auth.service';\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ICorrectionQuestionViewModel } from 'app/admin/models/admin/exam';\r\nimport { CorrectionDialogComponent } from '../correction-dialog/correction-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n@Component({\r\n  selector: 'app-correction-index',\r\n  templateUrl: './correction-index.component.html',\r\n  styleUrls: ['./correction-index.component.css']\r\n})\r\nexport class CorrectionIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  EduCompId: any;\r\n  itemsCount: any;\r\n  \r\n  correction:ICorrectionQuestionViewModel[]=[];\r\n  displayedColumns: string[] = [\r\n     \"examName\",\r\n  \"questionName\",\r\n     \"teacherName\",\r\n    \"actions\",\r\n  ];\r\n  rowFunctions: IRowFunctionVM[];\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n  get CorrectedQuestionsIdCtrl() {\r\n    return this.myForm.get(\"CorrectedQuestions\");\r\n  }\r\n  dataSource: MatTableDataSource<IRowFunctionVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private examService: ExamsService,\r\n    private route: ActivatedRoute,\r\n    private authserv: AuthService,\r\n    private fb: FormBuilder,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n\r\n  ) { \r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      page: [\"\"],\r\n      EduCompId: [this.EduCompId],\r\n      CorrectedQuestions:[1]\r\n    });\r\n//this.openCorrectDialog();\r\nthis.getAllQuestions(1,1);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getAllQuestions(p: number,CorrectedQuestions: number) {\r\n    this.myForm.controls[\"page\"]?.setValue(p);\r\n   // this.myForm.controls[\"CorrectedQuestions\"].value;\r\n    this.spinner.show();\r\n    this.examService.getQuestionByCorrectionType(p, CorrectedQuestions).subscribe((response: any) => {\r\n      if (response) {\r\n          console.log('quesions not corrected: ', response.examsList);\r\n          this.correction=response.examsList.examQuestions;\r\n\r\n          console.log(\"correct list\",this.correction);\r\n          \r\n       //   this.question=response.examsList.examQuestions;\r\n        this.dataSource = new MatTableDataSource(response.examsList);\r\n        // this.correction = response.examList;\r\n         this.itemsCount = response.itemsCount;\r\n         this.spinner.hide();\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  openCorrectDialog(item :ICorrectionQuestionViewModel): void {\r\n    this.dialog\r\n      .open(CorrectionDialogComponent, {\r\n        data: {\r\n          msg: item,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) console.log(\"dialog\");\r\n      });\r\n  }\r\n\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.ExamsCorrection\" | translate }}\r\n\r\n        <a mat-raised-button class=\"btn btn-info float-right\">\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-12\">\r\n                  <mat-radio-group\r\n                    formControlName=\"CorrectedQuestions\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"0\"\r\n                        (change)=\"getAllQuestions(1, 0)\"\r\n                      >\r\n                        {{ \"labels.CorrectedQuestions\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"1\"\r\n                        (change)=\"getAllQuestions(1, 1)\"\r\n                      >\r\n                        {{ \"labels.UnCorrectedQuestions\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.ExamsCorrection\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"examName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ExamNm\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.examName }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"questionName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.َQuestionContent\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.questionName }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"teacherName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.teacherName }}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>actions</th>\r\n              <td mat-cell *matCellDef=\"let question\">\r\n                <button\r\n                  (click)=\"openCorrectDialog(question)\"\r\n                  mat-mini-fab\r\n                  color=\"warn\"\r\n                >\r\n                  <mat-icon>done</mat-icon>\r\n                </button>\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"\r\n              getAllQuestions(\r\n                $event.pageIndex + 1,\r\n                CorrectedQuestionsIdCtrl.value\r\n              )\r\n            \"\r\n            [length]=\"0\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { TemplatesCustomePointsComponent } from \"./templates/templates-custome-points/templates-custome-points.component\";\r\nimport { AddTemplateComponent } from \"./templates/add-template/add-template.component\";\r\nimport { AddQuestionComponent } from \"./questions-banck/add-question/add-question.component\";\r\nimport { QuestionsIndexComponent } from \"./questions-banck/questions-index/questions-index.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { IsAdminGuard } from \"app/shared/services/auth/Guards/roles/is-admin.guard\";\r\nimport { AddExamComponent } from \"./exams/add-exam/add-exam.component\";\r\nimport { ExamsIndexComponent } from \"./exams/exams-index/exams-index.component\";\r\nimport { TemplatesIndexComponent } from \"./templates/templates-index/templates-index.component\";\r\nimport { CorrectionIndexComponent } from \"./exam-correction/correction-index/correction-index.component\";\r\nimport { ExamPreviewComponent } from \"./exams/exam-preview/exam-preview.component\";\r\nimport { ExamsCustomePointsComponent } from \"./exams/exams-custome-points/exams-custome-points.component\";\r\nimport { SurveysIndexComponent } from \"./surveys/surveys-index/surveys-index.component\";\r\nimport { AddSurveyComponent } from \"./surveys/add-survey/add-survey.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"exam\",\r\n    pathMatch: \"full\",\r\n  },\r\n\r\n  {\r\n    path: \"exam-preview/:examId/:type\",\r\n    component: ExamPreviewComponent,\r\n  },\r\n\r\n  {\r\n    path: \"exam/:courseId/:typeId\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        //http://localhost:4200/dashboard/exams-setup/exam/add-exam/3?functionId=23\r\n        path: \"index\",\r\n        component: ExamsIndexComponent,\r\n      },\r\n\r\n      {\r\n        path: \"add-exam\",\r\n        component: AddExamComponent,\r\n      },\r\n      {\r\n        path: \"exam-points/:examId\",\r\n        component: ExamsCustomePointsComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"survey/:courseId/:typeId\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: SurveysIndexComponent,\r\n      },\r\n\r\n      {\r\n        path: \"add-survey\",\r\n        component: AddSurveyComponent,\r\n      }\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"question-bank\",\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"index\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"index\",\r\n        component: QuestionsIndexComponent,\r\n      },\r\n      {\r\n        path: \"add-question\",\r\n        component: AddQuestionComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: \"templates\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n      { path: \"index\", component: TemplatesIndexComponent },\r\n      { path: \"add-template\", component: AddTemplateComponent },\r\n      {\r\n        path: \"template-points/:templateId\",\r\n        component: TemplatesCustomePointsComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"exam-correction\",\r\n    children: [\r\n      { path: \"\", redirectTo: \"index\", pathMatch: \"full\" },\r\n      { path: \"index\", component: CorrectionIndexComponent },\r\n      // { path: \"add-template\", component: AddTemplateComponent },\r\n    ],\r\n  },\r\n  // { path: \"templates-index\", component: TemplatesIndexComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ExamsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ExamsRoutingModule } from \"./exams-routing.module\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { MaterialModule } from \"app/shared/material/material.module\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { AddExamComponent } from \"./exams/add-exam/add-exam.component\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { QuestionsIndexComponent } from \"./questions-banck/questions-index/questions-index.component\";\r\nimport { AddQuestionComponent } from \"./questions-banck/add-question/add-question.component\";\r\nimport { ExamsIndexComponent } from \"./exams/exams-index/exams-index.component\";\r\nimport { AddSubQuestionComponent } from \"./exams/add-sub-question/add-sub-question.component\";\r\nimport { TemplatesIndexComponent } from \"./templates/templates-index/templates-index.component\";\r\nimport { AddTemplateComponent } from \"./templates/add-template/add-template.component\";\r\nimport { CorrectionIndexComponent } from \"./exam-correction/correction-index/correction-index.component\";\r\nimport { CorrectionDialogComponent } from \"./exam-correction/correction-dialog/correction-dialog.component\";\r\nimport { ExamPreviewComponent } from \"./exams/exam-preview/exam-preview.component\";\r\nimport { TemplatesCustomePointsComponent } from \"./templates/templates-custome-points/templates-custome-points.component\";\r\nimport { ExamsCustomePointsComponent } from \"./exams/exams-custome-points/exams-custome-points.component\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS,\r\n} from \"app/shared/validators/date.adapter\";\r\nimport { AddSurveyComponent } from \"./surveys/add-survey/add-survey.component\";\r\nimport { SurveysIndexComponent } from \"./surveys/surveys-index/surveys-index.component\";\r\nimport { AddSurvaySubQuestionComponent } from \"./surveys/add-sub-question/add-sub-question.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExamsIndexComponent,\r\n    AddExamComponent,\r\n    AddSubQuestionComponent,\r\n    QuestionsIndexComponent,\r\n    AddQuestionComponent,\r\n    TemplatesIndexComponent,\r\n    AddTemplateComponent,\r\n    CorrectionIndexComponent,\r\n    CorrectionDialogComponent,\r\n    ExamPreviewComponent,\r\n    ExamsCustomePointsComponent,\r\n    TemplatesCustomePointsComponent,\r\n    SurveysIndexComponent,\r\n    AddSurveyComponent,\r\n    AddSurvaySubQuestionComponent\r\n  ],\r\n  imports: [\r\n    ExamsRoutingModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n    NgxPaginationModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: AppDateAdapter,\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: APP_DATE_FORMATS,\r\n    },\r\n  ],\r\n})\r\nexport class ExamsModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatRadioChange } from \"@angular/material/radio\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IExamGroupsVM, IPickedChoiceIdVM } from \"app/admin/models/admin/exam\";\r\nimport { SaveExamDialogComponent } from \"app/shared/components/dialogs/save-exam-dialog/save-exam-dialog.component\";\r\nimport { StudentService } from \"app/student/services/student.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { timer } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-exam-preview\",\r\n  templateUrl: \"./exam-preview.component.html\",\r\n  styleUrls: [\"./exam-preview.component.scss\"],\r\n})\r\nexport class ExamPreviewComponent implements OnInit {\r\n  //Exams Lists\r\n  ExamDetails: any = [];\r\n  ExamGroups: IExamGroupsVM[] = null;\r\n  solvedQuestionNumberArr: any = []; // previously Solved Question\r\n  AnswerdQuestionsNumber: any = []; // Current Answerd Question\r\n  questionNumber: any; // Number Of Question In Exam\r\n  studentUserId: any;\r\n  examId: any;\r\n  ExamName: any;\r\n  TeacherName: any;\r\n  SubjectName: any;\r\n  examTotalMark: any;\r\n  student_grade: any;\r\n  IsAvaliable: any = true;\r\n  solvedExamStudent_ID: any;\r\n  ExamStarTime: any;\r\n  exam_period_minute?: any = 0;\r\n  isSolviedResultsOff: any;\r\n\r\n  // Solved Exam\r\n  isSolved: any = false;\r\n  IsResultAvalable: any;\r\n  showResult: any;\r\n  studentMark: any;\r\n  PointsGained: any;\r\n  examResultTime: any;\r\n  examResultDate: any;\r\n  examDuration: any;\r\n\r\n  // Repeate Exam\r\n  repeatable: any;\r\n  repeatableExam_Count: any;\r\n\r\n  // Returned Res from submit exam\r\n  solvidResults: any;\r\n   type:number;\r\n  constructor(\r\n    private studentServ: StudentService,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    public dialog: MatDialog\r\n  ) {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.examId = params.get(\"examId\");\r\n      this.type = Number(params.get(\"type\"));\r\n      console.log(\"this.examId\", this.examId);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnStudentExam(this.examId);\r\n  }\r\n\r\n  returnStudentExam(examId: any) {\r\n    this.spinner.show();\r\n    this.studentServ.returnStudentExam(examId).subscribe((res: any) => {\r\n      console.log(\"exam: \", res);\r\n\r\n      if (res.returnValue === -5) {\r\n        this.spinner.hide();\r\n        this.returnExamResults(res.examId);\r\n        // this.toastr.warning(\"تم حل الامتحان مسبقاً\");\r\n        return;\r\n      }\r\n      if (res.returnValue === 505) {\r\n        this.toastr.warning(\"يجب شراء المحاضرة اولا\");\r\n        this.router.navigateByUrl(\"/home\");\r\n        this.spinner.hide();\r\n        return;\r\n      } else if (res.returnValue === 200) {\r\n        this.isSolved = false;\r\n        this.ExamGroups = res.exam.groups;\r\n        this.ExamName = res.exam.details.exam_ar_name;\r\n        this.IsAvaliable = res.mv.IsAvailable;\r\n        this.TeacherName = res.teacherName;\r\n        this.SubjectName = res.mv.subject.subject_ar_name;\r\n        this.studentUserId = res.mv.exam_student.studentUserId;\r\n        this.examTotalMark = res.mv.examTotalMark;\r\n        this.exam_period_minute = res.exam.details.exam_period_minute;\r\n        this.solvedExamStudent_ID = res.mv.solvedExamStudent_ID;\r\n        this.student_grade = res.mv.exam_student.student_grade;\r\n        // this.questionNumber = res.exam.groups[0].Heads[0].Questions.length;\r\n\r\n        let GL = res.exam.groups.length, // length of Groups\r\n          num = 0;\r\n        for (let k = 0; k < GL; k++) {\r\n          let HL = res.exam.groups[k].Heads.length; // length of Heads\r\n          if (HL != 0) {\r\n            for (let m = 0; m < HL; m++) {\r\n              let QL = res.exam.groups[k].Heads[m].Questions.length; //Length of Questions\r\n              num = num + QL;\r\n            }\r\n          }\r\n          this.questionNumber = num;\r\n        }\r\n\r\n        // if  Exam Have Time Run Timer\r\n        if (\r\n          res.exam.details.exam_period_minute != 0 &&\r\n          res.exam.details.exam_period_minute != null\r\n        ) {\r\n          this.timer(res.exam.details.exam_period_minute);\r\n        }\r\n\r\n        // get Exam  Start Time\r\n        let currentTime = new Date();\r\n        let hh = currentTime.getHours();\r\n        let mm = currentTime.getMinutes();\r\n        let ss = currentTime.getSeconds();\r\n        this.ExamStarTime = hh + \":\" + mm + \":\" + ss;\r\n\r\n        // If Repeated Exam get number of solved questions\r\n        let j = res.exam.groups[0].Heads[0].Questions.length,\r\n          i;\r\n        for (i = 0; i <= j; i++) {\r\n          if (\r\n            res.exam.groups[0].Heads[0].Questions[i] &&\r\n            res.exam.groups[0].Heads[0].Questions[i].QuestionDetails &&\r\n            res.exam.groups[0].Heads[0].Questions[i].QuestionDetails\r\n              .StudentChoice\r\n          ) {\r\n            if (\r\n              res.exam.groups[0].Heads[0].Questions[i].QuestionDetails\r\n                .StudentChoice.RESULT == \"T\"\r\n            ) {\r\n              // console.log(i)\r\n              this.solvedQuestionNumberArr.push({ id: i });\r\n            }\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Exam Results\r\n  returnExamResults(examId: any) {\r\n    this.spinner.show();\r\n    this.studentServ.returnStudentExamResults(examId).subscribe((res: any) => {\r\n      //  console.log(\"resultes: \", res);\r\n      this.isSolved = true;\r\n      this.ExamGroups = res.item.groups;\r\n      this.ExamName = res.item.details.exam_ar_name;\r\n      this.TeacherName = res.teacherName;\r\n      this.SubjectName = res.SubjectName;\r\n      //this.studentId = res.ex.exam_student.student_id;\r\n      //this.IsAvaliable = res.item.details.IsAvaliable;\r\n      this.examTotalMark = res.ex.total_mark;\r\n      this.student_grade = res.ex.exam_student?.student_grade;\r\n      this.studentMark = res.ex.exam_result;\r\n      this.examDuration = res.ex.examDuration;\r\n      this.examResultDate = res.ex.examResultDate;\r\n      this.examResultTime = res.ex.examResultTime;\r\n      this.IsResultAvalable = res.ex.IsResultAvalable;\r\n      this.isSolviedResultsOff = !res.ex.IsResultAvalable;\r\n      this.showResult = res.ex.showResult;\r\n      this.PointsGained = res.ex.PointsGained;\r\n      this.repeatable = res.ex.repeatable;\r\n      this.repeatableExam_Count = res.ex.repeatableExam_Count;\r\n\r\n      this.solvidResults = [];\r\n      this.spinner.hide();\r\n      // $('.closeMod').hide();\r\n      // $('#resultsMV').hide();\r\n      // $('.modal-backdrop').removeClass('fade show in');\r\n    });\r\n  }\r\n\r\n  PickedChoiceId: IPickedChoiceIdVM[] = [];\r\n  onRadioChange(event: MatRadioChange, questionID: number) {\r\n    // this.PickedChoices = event.value;\r\n\r\n    let answer: IPickedChoiceIdVM = {\r\n      questionId: questionID,\r\n      choiceId: event.value,\r\n    };\r\n\r\n    let question = this.PickedChoiceId.findIndex(\r\n      (e) => e.questionId === questionID\r\n    );\r\n    console.log(question);\r\n    if (question >= 0) this.PickedChoiceId[question] = answer;\r\n    else this.PickedChoiceId.push(answer);\r\n\r\n    //  console.log(\"PickedChoiceId\", this.PickedChoiceId);\r\n  }\r\n\r\n  SingleQuestionForm(questionId: any) {\r\n    let answer = this.PickedChoiceId.find((e) => e.questionId === questionId);\r\n    // console.log(\"answerFromSigleQ\", answer);\r\n    if (answer?.choiceId == null || answer?.choiceId == undefined) {\r\n      this.toastr.warning(\"من فضلك اختر إجابة\");\r\n      return;\r\n    } else {\r\n      let data = {\r\n        examId: this.examId,\r\n        studentUserId: this.studentUserId,\r\n        PickedChoiceId: answer.choiceId,\r\n        questionId: questionId,\r\n        // AnswerText: AnswerText,\r\n      };\r\n\r\n      // console.log(\"SingleQuestionData: \", data);\r\n      this.studentServ.SubmitSingleQuestion(data).subscribe((res: any) => {\r\n        //    console.log(\"SubmitSingleQuestion\", res);\r\n\r\n        if (res.returnValue == 200) {\r\n          //this.PickedChoiceId = null;\r\n          document.getElementById(`alert-${questionId}`).style.display = \"none\";\r\n          let element = document.querySelector(\"#btn-\" + questionId);\r\n          element.classList.remove(\"btn-primary\");\r\n          element.classList.add(\"btn-success\");\r\n          element.innerHTML = \"تم حفظ الإجابة\";\r\n          let ansMsg = document.getElementById(`stu-cho-${questionId}`);\r\n          ansMsg.style.display = \"block\";\r\n          ansMsg.innerHTML = `تم اختيار الإجابة : (\"${res.returnedChoice}\")`;\r\n\r\n          let founded = this.AnswerdQuestionsNumber.find(\r\n            (x: any) => x.questionId === questionId\r\n          );\r\n          if (!founded) {\r\n            this.AnswerdQuestionsNumber.push({ questionId: questionId });\r\n          }\r\n        }\r\n        if (res.returnValue == 505) {\r\n          document.querySelector(\"#alert-\" + questionId).innerHTML =\r\n            \"من فضلك تأكد من إختيار إجابه\";\r\n          this.toastr.error(\"من فضلك تأكد من إختيار إجابه\", \"خطأ\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  SubmitExam() {\r\n    //let confirmed = confirm('هل انت متأكد من حفظ الإمتحان والخروج؟');\r\n    if (\r\n      this.questionNumber - this.solvedQuestionNumberArr.length >\r\n      this.AnswerdQuestionsNumber.length\r\n    ) {\r\n      let msg =\r\n        ' لم يتم إجابة جميع الاسئله، عدد الاسئله التي لم يتم إجابتها \"' +\r\n        (this.questionNumber -\r\n          this.solvedQuestionNumberArr.length -\r\n          this.AnswerdQuestionsNumber.length) +\r\n        '\" سؤال';\r\n      this.toastr.error(msg);\r\n    } else {\r\n      this.spinner.show();\r\n      let data = {\r\n        examId: this.examId,\r\n        studentUserId: this.studentUserId,\r\n        solvedExamStudent_ID: this.solvedExamStudent_ID,\r\n        ExamStarTime: this.ExamStarTime,\r\n      };\r\n      this.studentServ.SubmitExam(data).subscribe((res: any) => {\r\n        //   console.log(\"submited\", res);\r\n        if (res.returnValue == 0) {\r\n          this.toastr.warning(\" تم حل الإمتحان من قبل\", \"خطأ\");\r\n          this.spinner.hide();\r\n        } else {\r\n          //console.log(res);\r\n          this.solvidResults = res;\r\n          this.openDialog(res);\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Start Exam Timer\r\n  counter: any;\r\n  timer(Examtime: any) {\r\n    // Exam Timer\r\n    //let countDown: any;\r\n    let time: any = Examtime * 60;\r\n    let counter = time;\r\n    let tick = 1000;\r\n\r\n    //this.oberserableTimer()\r\n    let countDown: any = timer(0, tick).subscribe(() => {\r\n      if (counter > 0) {\r\n        if (counter == time / 2) {\r\n          let msg = 'باقي من وقت الإمتحان  \" ' + Examtime / 2 + '\" دقيقه';\r\n          this.toastr.warning(msg);\r\n        }\r\n        if (counter == time / 4) {\r\n          let msg = 'باقي من وقت الإمتحان  \" ' + Examtime / 4 + '\" دقيقه';\r\n          this.toastr.warning(msg);\r\n        }\r\n        --counter;\r\n        this.counter = counter;\r\n      } else if (counter == 0) {\r\n        this.toastr.error(\"تم إنتهاء الوقت \");\r\n        countDown == null;\r\n        counter = null;\r\n\r\n        this.spinner.show();\r\n        let data = {\r\n          examId: this.examId,\r\n          studentUserId: this.studentUserId,\r\n          solvedExamStudent_ID: this.solvedExamStudent_ID,\r\n          ExamStarTime: this.ExamStarTime,\r\n        };\r\n        this.studentServ.SubmitExam(data).subscribe((res: any) => {\r\n          if (res.returnValue == 0) {\r\n            this.toastr.error(\" تم حل الإمتحان من قبل\", \"خطأ\");\r\n            this.spinner.hide();\r\n          } else {\r\n            // console.log(res);\r\n            this.solvidResults = res;\r\n            this.openDialog(res);\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openDialog(solvidResults): void {\r\n    const dialogRef = this.dialog.open(SaveExamDialogComponent, {\r\n      data: {\r\n        solvidResults: solvidResults,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((repeatable) => {\r\n      if (repeatable) this.refresh();\r\n      else this.router.navigateByUrl(`/home`);\r\n    });\r\n  }\r\n  // Refresh Page\r\n  refresh() {\r\n    window.location.reload();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"ExamGroups\">\r\n  <div class=\"row exam-container\">\r\n    <!-- Right Col  Exam Option-->\r\n    <div class=\"col-md-3 col-12\">\r\n      <div class=\"row\">\r\n        <!-- Exam Name -->\r\n        <div class=\"col-12\">\r\n          <div class=\"alert bg-light-primary mb-2\" role=\"alert\">\r\n            <span class=\"badge bg-primary mb-1 mr-2\">\r\n              {{ ExamName }}\r\n            </span>\r\n\r\n            <span class=\"badge bg-primary mb-1 mr-2\">\r\n              {{ TeacherName }}\r\n            </span>\r\n\r\n            <span class=\"badge bg-primary mb-1 mr-2\">\r\n              {{ SubjectName }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- If Exam not Solved -->\r\n        <ng-container *ngIf=\"!isSolved\">\r\n          <!-- exam Total Mark  -->\r\n          <div class=\"col-12\">\r\n            <mat-card class=\"card card-inverse bg-info\" *ngIf=\"type==3\">\r\n              <mat-card-content >\r\n                <div class=\"media\">\r\n                  <div class=\"media-body text-left\">\r\n                    <h4 class=\"card-text\">\r\n                      {{ \"labels.TotalMark\" | translate }}\r\n                    </h4>\r\n                    <h5>{{ examTotalMark }}</h5>\r\n                  </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </div>\r\n        </ng-container>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Left Col - Exam Content -->\r\n    <div class=\"col-md-9 col-12\">\r\n      <mat-card>\r\n        <mat-card-title>\r\n          <!-- <span *ngIf=\"!isSolved\">\r\n            {{ \"labels.StudentExamMsg\" | translate }}\r\n          </span>\r\n          <span *ngIf=\"isSolved\">\r\n            {{ \"labels.ExamSolved\" | translate }}\r\n          </span> -->\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <!-- Tab panes -->\r\n          <mat-tab-group>\r\n            <mat-tab label=\"{{ group.GroupName }}\" *ngFor=\"let group of ExamGroups\" class=\"group-{{ group.GroupId }}\">\r\n              <mat-card *ngFor=\"let head of group.Heads\">\r\n                <mat-card-title> {{ head.HeadName }}</mat-card-title>\r\n                <mat-card-content>\r\n                  <form *ngFor=\"let Question of head?.Questions; let i = index\">\r\n                    <p>\r\n                      {{ i + 1 }}) {{ Question.QuestionDetails?.questionText }}\r\n                    </p>\r\n\r\n                    <img class=\"examimage\" *ngIf=\"Question.QuestionDetails?.questionAttach\" src=\"https://schoolsystem.cloudiax.com{{\r\n                        Question.QuestionDetails?.questionAttach | sliceExamPic\r\n                      }}\" />\r\n\r\n\r\n                    <div class=\"row\">\r\n                      <mat-radio-group class=\"exam-radio-group\" #choice\r\n                        id=\"question-{{ Question.QuestionDetails?.questionId }}\">\r\n                        <div class=\"col-12\" *ngFor=\"let mcq of Question.MCQ\">\r\n                          <mat-radio-button [value]=\"mcq.Id\" [disabled]=\"true\">\r\n                            <span>\r\n                              {{ mcq.MCQText }}\r\n                              <img class=\"examimage\" *ngIf=\"mcq.MCQAttach\" src=\"https://schoolsystem.cloudiax.com{{\r\n                                mcq.MCQAttach | sliceExamPic\r\n                              }}\" />\r\n                            </span>\r\n                          </mat-radio-button>\r\n                        </div>\r\n                      </mat-radio-group>\r\n                    </div>\r\n                    <mat-card-actions>\r\n                      <!-- <button *ngIf=\"\r\n                          (!isSolved &&\r\n                            Question.QuestionDetails.StudentChoice == null) ||\r\n                          (!isSolved &&\r\n                            Question.QuestionDetails.StudentChoice != null &&\r\n                            Question.QuestionDetails.StudentChoice.RESULT ==\r\n                              'F')\r\n                        \" id=\"btn-{{ Question.QuestionDetails.questionId }}\" [disabled]=\"\r\n                          !isSolved &&\r\n                          Question.QuestionDetails.StudentChoice != null &&\r\n                          Question.QuestionDetails.StudentChoice.RESULT == 'T'\r\n                        \" class=\"btn btn-primary\" type=\"button\" id=\"btn-{{ Question.QuestionDetails.questionId }}\"\r\n                        (click)=\"\r\n                          SingleQuestionForm(\r\n                            Question.QuestionDetails?.questionId\r\n                          )\r\n                        \">\r\n                        {{ \"General.SaveQuestion\" | translate }}\r\n                      </button> -->\r\n                    </mat-card-actions>\r\n                    <!-- <span *ngIf=\"\r\n                        (!isSolved &&\r\n                          Question.QuestionDetails.StudentChoice == null) ||\r\n                        (!isSolved &&\r\n                          Question.QuestionDetails.StudentChoice != null &&\r\n                          Question.QuestionDetails.StudentChoice.RESULT == 'F')\r\n                      \" class=\"danger\" id=\"alert-{{ Question.QuestionDetails.questionId }}\">\r\n                      {{ \"labels.ansWillNotSave\" | translate }}\r\n                    </span> -->\r\n                    <!--\r\n                    <span *ngIf=\"\r\n                        !isSolved &&\r\n                        Question.QuestionDetails.StudentChoice != null &&\r\n                        Question.QuestionDetails.StudentChoice.RESULT == 'T'\r\n                      \" class=\"success\">\r\n                      تم حفظ الإجابة من قبل\r\n                    </span>\r\n                    <span *ngIf=\"\r\n                        (!isSolved &&\r\n                          Question.QuestionDetails.StudentChoice == null) ||\r\n                        (!isSolved &&\r\n                          Question.QuestionDetails.StudentChoice != null &&\r\n                          Question.QuestionDetails.StudentChoice.RESULT == 'F')\r\n                      \" id=\"stu-cho-{{ Question.QuestionDetails.questionId }}\" class=\"warning\">\r\n                    </span> -->\r\n                    <hr />\r\n                  </form>\r\n                </mat-card-content>\r\n              </mat-card>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </mat-card-content>\r\n        <mat-card-actions align=\"end\">\r\n          <!-- <button (click)=\"SubmitExam()\" id=\"btnSubmit\" type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!solvidResults\">\r\n            {{ \"General.SubmitAnswer\" | translate }}\r\n          </button> -->\r\n\r\n          <!-- <button *ngIf=\"isSolved\" class=\"btn btn-warning\" routerLink=\"/home\">\r\n            {{ \"General.BackToHome\" | translate }}\r\n          </button> -->\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<!-- Exam Not Avaliable Section -->\r\n<!-- <section *ngIf=\"!IsAvaliable\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 text-center\">\r\n      <img src=\"assets/img/gallery/lock.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\" />\r\n      <h1 class=\"mt-4\">\r\n        {{ \"labels.ExamNotAvaliable\" | translate }}\r\n      </h1>\r\n      <a [routerLink]=\"['/']\" class=\"btn btn-warning bg-light-warning my-2\">\r\n        {{ \"General.BackToHome\" | translate }}</a>\r\n    </div>\r\n  </div>\r\n</section> -->\r\n\r\n<!-- Exam Results not Avaliable Section -->\r\n<!-- <section *ngIf=\"!IsResultAvalable && isSolved\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 text-center\">\r\n      <img src=\"assets/img/gallery/maintenance.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\" />\r\n      <h1 class=\"mt-4\">\r\n        {{ \"labels.ExamResultNotAvaliable\" | translate }}\r\n      </h1>\r\n      <div class=\"w-75 error-text mx-auto mt-4\">\r\n        <p>\r\n          {{ \"labels.ExamResultDate\" | translate }}: {{ examResultDate | date }}\r\n          <br />\r\n          {{ \"labels.examResultTime\" | translate }}:\r\n          {{ examResultTime }}\r\n          <br />\r\n          {{ \"labels.StudentMark\" | translate }} : {{ studentMark }} /\r\n          {{ examTotalMark }}\r\n          <br />\r\n          {{ \"labels.StudentAnswerPeriod\" | translate }} : {{ examDuration }}\r\n        </p>\r\n      </div>\r\n      <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\r\n    </div>\r\n  </div>\r\n</section> -->\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  IAddExamCustomePointsVM,\r\n  IAddExamPointsVM,\r\n  IExamPointVM,\r\n} from \"app/admin/models/admin/point\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { PointsService } from \"app/admin/services/Admin/points.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"app-exams-custome-points\",\r\n  templateUrl: \"./exams-custome-points.component.html\",\r\n  styleUrls: [\"./exams-custome-points.component.scss\"],\r\n})\r\nexport class ExamsCustomePointsComponent implements OnInit {\r\n  Points: IExamPointVM[];\r\n  myForm!: FormGroup;\r\n  Submitted = false;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  ItemsCount?: number;\r\n  examId: number;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authserv: AuthService,\r\n    private route: ActivatedRoute,\r\n    private PointsService: PointsService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.examId = Number(params.get(\"examId\"));\r\n    });\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getExamCustomPoints(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      ByQuestion: [false, [Validators.required]],\r\n      from: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      to: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      value: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.ByQuestionValidators(false);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  addExamCustomPoint() {\r\n    this.Submitted = true;\r\n\r\n    let data: IAddExamCustomePointsVM = {\r\n      itemId: this.examId,\r\n      ByQuestion: this.FormCtrls?.ByQuestion.value,\r\n      from: this.FormCtrls?.from.value,\r\n      to: this.FormCtrls?.to.value,\r\n      value: this.FormCtrls?.value.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.PointsService.addExamCustomPoint(data).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.getExamCustomPoints(1);\r\n          this.toastr.success(\"تم إاضافة النقاط\");\r\n          this.Submitted = false;\r\n          this.myForm.reset();\r\n          this.FormCtrls?.ByQuestion.setValue(false);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getExamCustomPoints(p: Number) {\r\n    this.spinner.show();\r\n    this.PointsService.getExamCustomPoints<IExamPointVM>(\r\n      p,\r\n      this.examId\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.ItemsCount = res.itemsCount;\r\n        this.Points = res.points;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  deleteExamCustomPoint(point: IExamPointVM) {\r\n    this.spinner.show();\r\n    this.PointsService.deleteExamCustomPoint(point.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.Points.findIndex((e) => e == point);\r\n        this.Points.splice(i, 1);\r\n        this.toastr.success(\"تم الحذف\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  openDeleateExamPointDialog(point: IExamPointVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${point.Value}: points`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteExamCustomPoint(point);\r\n      });\r\n  }\r\n\r\n  track(index: number, point: IExamPointVM): number {\r\n    return point.Id;\r\n  }\r\n\r\n  ByQuestionValidators(ByQuestion: boolean) {\r\n    if (ByQuestion == true) {\r\n      this.FormCtrls.from.reset();\r\n      this.FormCtrls.from.clearValidators();\r\n      this.FormCtrls.to.reset();\r\n      this.FormCtrls.to.clearValidators();\r\n    } else {\r\n      this.FormCtrls.from.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.FormCtrls.to.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.bigZero,\r\n      ]);\r\n    }\r\n    this.FormCtrls.from.updateValueAndValidity();\r\n    this.FormCtrls.to.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.ExamPoints\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/exams-setup/exam/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <!--  ByQuestion    -->\r\n            <!-- <div class=\"col-12\">\r\n              <mat-label>\r\n                {{ \"labels.ByQuestionLabel\" | translate }}\r\n              </mat-label>\r\n              <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-radio-button\r\n                    [value]=\"true\"\r\n                    (click)=\"ByQuestionValidators(true)\"\r\n                  >\r\n                    {{ \"labels.ByQuestion\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <mat-radio-button\r\n                    [value]=\"false\"\r\n                    (click)=\"ByQuestionValidators(false)\"\r\n                  >\r\n                    {{ \"labels.ByExam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n            <ng-container *ngIf=\"FormCtrls.ByQuestion.value === false\">\r\n              <!--  from    -->\r\n              <div class=\"col-lg-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.From\" | translate }}\r\n                  </mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"from\" />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      FormCtrls.from.invalid &&\r\n                      (FormCtrls.from.touched || Submitted)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.from.errors?.required ||\r\n                        FormCtrls.from.errors?.minusNum\r\n                      \"\r\n                    >\r\n                      You must enter a value.\r\n                    </span>\r\n                  </mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <!-- to  -->\r\n              <div class=\"col-lg-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.To\" | translate }}\r\n                  </mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"to\" />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      FormCtrls.to.invalid &&\r\n                      (FormCtrls.to.touched || Submitted)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.to.errors?.required ||\r\n                        FormCtrls.to.errors?.minusNum\r\n                      \"\r\n                    >\r\n                      You must enter a value.\r\n                    </span>\r\n                  </mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <!-- value ==> points Number  -->\r\n            <div class=\"col-lg-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.pointsNumber\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"value\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.value.invalid &&\r\n                    (FormCtrls.value.touched || Submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.value.errors?.required ||\r\n                      FormCtrls.value.errors?.minusNum\r\n                    \"\r\n                  >\r\n                    You must enter a value.\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <mat-card-actions align=\"end\">\r\n            <button\r\n              mat-raised-button\r\n              type=\"button\"\r\n              class=\"btn btn-primary bg-light-info\"\r\n              (click)=\"addExamCustomPoint()\"\r\n            >\r\n              <i class=\"fa fa-plus\"></i>\r\n              {{ \"General.Add\" | translate }}\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n\r\n        <!-- Start Exams points Table -->\r\n        <ng-container>\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  {{ \"labels.ByQuestion\" | translate }}\r\n                </th>\r\n                <th>\r\n                  {{ \"labels.From\" | translate }}\r\n                </th>\r\n\r\n                <th>\r\n                  {{ \"labels.To\" | translate }}\r\n                </th>\r\n\r\n                <th>\r\n                  {{ \"labels.pointsNumber\" | translate }}\r\n                </th>\r\n\r\n                <th>actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"\r\n                  let point of Points\r\n                    | paginate\r\n                      : {\r\n                          itemsPerPage: 5,\r\n                          currentPage: p,\r\n                          totalItems: ItemsCount\r\n                        };\r\n                  let i = index;\r\n                  trackBy: track\r\n                \"\r\n              >\r\n                <td *ngIf=\"point.ByQuestion\">\r\n                  {{ \"labels.ByQuestion\" | translate }}\r\n                </td>\r\n                <td *ngIf=\"!point.ByQuestion\">\r\n                  {{ \"labels.ByExam\" | translate }}\r\n                </td>\r\n                <td>{{ point.FromValue }}</td>\r\n                <td>{{ point.ToValue }}</td>\r\n                <td>{{ point.Value }}</td>\r\n                <td>\r\n                  <button\r\n                    (click)=\"openDeleateExamPointDialog(point)\"\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <!-- Start  Pagination -->\r\n            <pagination-controls\r\n              *ngIf=\"Points?.length > 5\"\r\n              dir=\"ltr\"\r\n              [maxSize]=\"maxSize\"\r\n              (pageChange)=\"p = $event; getExamCustomPoints($event)\"\r\n              previousLabel=\"\"\r\n              nextLabel=\"\"\r\n            >\r\n            </pagination-controls>\r\n          </table>\r\n        </ng-container>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Exam } from \"./../../../../models/admin/exam\";\r\nimport { CourseService } from \"./../../../../services/Admin/setup/course.service\";\r\nimport { IndexExam } from \"./../../../../models/setup/index-exam\";\r\nimport { GeneralService } from \"./../../../../../shared/services/General/general.service\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\n\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  IExamViewModel,\r\n  ICountrieDropModel,\r\n  IStageDropModel,\r\n  IEducationYearDropModel,\r\n  ISubjectDropModel,\r\n  ITeacherDropModel,\r\n  Puplish,\r\n} from \"app/admin/models/admin/exam\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: \"app-exams-index\",\r\n  templateUrl: \"./exams-index.component.html\",\r\n  styleUrls: [\"./exams-index.component.scss\"],\r\n})\r\nexport class ExamsIndexComponent implements OnInit {\r\n  totalItems: any;\r\n  EduCompId: any;\r\n  branchId: any;\r\n  exams: IExamViewModel[] = [];\r\n  countries: ICountrieDropModel[] = [];\r\n  stages: IStageDropModel[] = [];\r\n  educationYears: IEducationYearDropModel[] = [];\r\n  subjects: ISubjectDropModel[] = [];\r\n  teachers: teacherByEduCompId[];\r\n  type: number;\r\n  subId: number;\r\n  exms: Puplish[] = [];\r\n  exam: Puplish[] = [];\r\n  displayedColumns: string[] = [\"#\", \"name\", \"course\", \"publish\", \"actions\"];\r\n  dataSource: MatTableDataSource<Exam>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  myForm!: FormGroup;\r\n  functionId: number; // exam functions\r\n  parentId: number; // sub course functions\r\n  rowFunctions: IRowFunctionVM[];\r\n  curLang: string;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private examService: ExamsService,\r\n    private msg: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private generalService: GeneralService,\r\n    private dialog: MatDialog,\r\n    private courseser: CourseService,\r\n    private translate: TranslateService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.type = Number(params.get(\"typeId\"));\r\n    });\r\n    route.paramMap.subscribe((params) => {\r\n      this.subId = Number(params.get(\"courseId\"));\r\n    });\r\n    this.translate.onLangChange.subscribe((lang) => {\r\n      this.curLang = lang.lang;\r\n    });\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.parentId = Number(params.get(\"parentId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.myForm = this.fb.group({\r\n      examName: [\"\", Validators.required],\r\n      //   countryId: [\"\"],\r\n      //   stageId: [\"\"],\r\n      //   educationYearId: [\"\"],\r\n      //   subjectId: [\"0\"],\r\n      //   teacherUserId: [\"0\"],\r\n      //   page: [\"\"],\r\n      //   EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    //  this.stageIdCtrl?.disable();\r\n    //  this.educationYearIdCtrl?.disable();\r\n    //  this.subjectIdCtrl?.disable();\r\n    //this.teacherIdCtrl?.disable();\r\n\r\n    // this.getAllCountieres();\r\n    this.getAllExams(1);\r\n  }\r\n  get examNameCtrl() {\r\n    return this.myForm.get(\"examName\");\r\n  }\r\n  // get countryIdCtrl() {\r\n  //   return this.myForm.get(\"countryId\");\r\n  // }\r\n\r\n  // get stageIdCtrl() {\r\n  //   return this.myForm.get(\"stageId\");\r\n  // }\r\n\r\n  // get educationYearIdCtrl() {\r\n  //   return this.myForm.get(\"educationYearId\");\r\n  // }\r\n\r\n  // get subjectIdCtrl() {\r\n  //   return this.myForm.get(\"subjectId\");\r\n  // }\r\n\r\n  // get teacherUserIdCtrl() {\r\n  //   return this.myForm.get(\"teacherUserId\");\r\n  // }\r\n\r\n  // get page() {\r\n  //   return this.myForm.get(\"page\");\r\n  // }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllExams(1);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  //   getcoursebyId(){\r\n  // this.courseser.getMainCourseById(this.subId).subscribe((res:any)=>{\r\n  //   if(res){\r\n  //     return res;\r\n  //   }\r\n  // })\r\n  //   }\r\n\r\n  getAllExams(p: number) {\r\n    // this.page?.setValue(p);\r\n    // this.myForm.controls[\"EduCompId\"].setValue(this.EduCompId);\r\n    let data = {\r\n      typeId: this.type,\r\n      page: p,\r\n      EduCompId: this.EduCompId,\r\n      subjectId: this.subId,\r\n      examName: this.examNameCtrl?.value,\r\n    };\r\n    this.spinner.show();\r\n    this.examService.getAllNormalExams(data).subscribe((response: any) => {\r\n      if (response) {\r\n        this.dataSource = new MatTableDataSource(response.examList);\r\n        this.exams = response.examList;\r\n        this.totalItems = response.totalCount;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  removeExam(exam: Exam) {\r\n    this.examService.deleteExam<any>(exam.id).subscribe((response) => {\r\n      if (response) {\r\n        //  console.log('deleted: ', response);\r\n        let deletedIndex = this.dataSource.data.findIndex((gh) => gh == exam);\r\n\r\n        this.dataSource.data.splice(deletedIndex, 1);\r\n\r\n        this.exams.splice(deletedIndex, 1);\r\n        this.msg.success(\"تم حذف الإمتحان\");\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(exam: Exam): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: exam.exam_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) {\r\n          this.removeExam(exam);\r\n        }\r\n      });\r\n  }\r\n\r\n  onPublishExam(exam: IExamViewModel) {\r\n    this.examService\r\n      .publishExam<IExamViewModel>(exam.id)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          let i = this.exams.findIndex((e) => e === exam);\r\n          this.exams[i].isPublish = !this.exams[i].isPublish;\r\n          // for (const obj of this.exms) {\r\n          //   if (obj.id === exam.id) {\r\n          //     obj.isPublish = !obj.isPublish;\r\n          //     break;\r\n          //   }\r\n          // }\r\n          this.msg.success(\"Done\");\r\n        }\r\n      });\r\n  }\r\n\r\n  // getAllCountieres() {\r\n  //   this.examService\r\n  //     .getAllCountries<ICountrieDropModel[]>()\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         //console.log(\"COUNTIRES: \", response);\r\n  //         this.countries = response;\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // onSelectCountry() {\r\n  //   this.stageIdCtrl?.setValue(\"\");\r\n  //   this.educationYearIdCtrl?.setValue(\"\");\r\n  //   this.subjectIdCtrl?.setValue(\"\");\r\n  //   this.teacherUserIdCtrl?.setValue(\"\");\r\n  //   if (this.countryIdCtrl?.value) {\r\n  //     //  console.log('SELECTED country: ', this.countryIdCtrl?.value);\r\n  //     this.examService\r\n  //       .getAllStages<IStageDropModel[]>(this.countryIdCtrl?.value)\r\n  //       .subscribe((response) => {\r\n  //         if (response) {\r\n  //           this.stages = response;\r\n  //           //console.log(\"STAGES:\", response);\r\n  //           this.stageIdCtrl?.enable();\r\n  //         }\r\n  //       });\r\n  //   } else {\r\n  //     this.stageIdCtrl?.disable();\r\n  //     this.educationYearIdCtrl?.disable();\r\n  //     this.subjectIdCtrl?.disable();\r\n  //     this.teacherUserIdCtrl?.disable();\r\n  //   }\r\n  // }\r\n\r\n  // onSelectStages() {\r\n  //   this.educationYearIdCtrl?.setValue(\"\");\r\n  //   this.subjectIdCtrl?.setValue(\"\");\r\n  //   this.teacherUserIdCtrl?.setValue(\"\");\r\n  //   if (this.stageIdCtrl?.value) {\r\n  //     //console.log(\"SELECTED stages: \", this.stageIdCtrl?.value);\r\n  //     this.examService\r\n  //       .getAllEducationYears<IEducationYearDropModel[]>(\r\n  //         this.stageIdCtrl?.value\r\n  //       )\r\n  //       .subscribe((response) => {\r\n  //         if (response) {\r\n  //           this.educationYears = response;\r\n  //           //console.log(\"YEARS:\", response);\r\n  //           this.educationYearIdCtrl?.enable();\r\n  //         }\r\n  //       });\r\n  //   } else {\r\n  //     this.educationYearIdCtrl?.disable();\r\n  //     this.subjectIdCtrl?.disable();\r\n  //     this.teacherUserIdCtrl?.disable();\r\n  //   }\r\n  // }\r\n\r\n  // onSelectEducationYears() {\r\n  //   this.subjectIdCtrl?.setValue(\"\");\r\n  //   this.teacherUserIdCtrl?.setValue(\"\");\r\n  //   if (this.educationYearIdCtrl?.value) {\r\n  //     //console.log(\"SELECTED YEARS: \", this.stageIdCtrl?.value);\r\n  //     this.examService\r\n  //       .getAllSubjects<ISubjectDropModel[]>(this.educationYearIdCtrl?.value)\r\n  //       .subscribe((response) => {\r\n  //         if (response) {\r\n  //           this.subjects = response;\r\n  //           //console.log(\"SUBJECTS:\", response);\r\n  //           this.subjectIdCtrl?.enable();\r\n  //         }\r\n  //       });\r\n  //   } else {\r\n  //     this.subjectIdCtrl?.disable();\r\n  //     this.teacherUserIdCtrl?.disable();\r\n  //   }\r\n  // }\r\n\r\n  // onSelectSubjects() {\r\n  //   this.teacherUserIdCtrl?.setValue(\"\");\r\n  //   if (this.subjectIdCtrl?.value) {\r\n  //     //console.log(\"SELECTED subject: \", this.stageIdCtrl?.value);\r\n  //     this.generalService\r\n  //       .getTeacherBySubjectAndEduCompId(\r\n  //         this.EduCompId,\r\n  //         this.subjectIdCtrl?.value\r\n  //       )\r\n  //       .subscribe((response: any) => {\r\n  //         if (response) {\r\n  //           this.teachers = response.teachers;\r\n  //           console.log(\"teachers:\", response);\r\n  //           this.teacherUserIdCtrl?.enable();\r\n  //         }\r\n  //       });\r\n  //   } else {\r\n  //     this.teacherUserIdCtrl?.disable();\r\n  //   }\r\n  // }\r\n  track(index: number, el: any): number {\r\n    return el.Id;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12 mb-3\">\r\n    <mat-card class=\"\">\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/setup/course/sub-course\"\r\n          [queryParams]=\"{\r\n            functionId: parentId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../add-exam\"\r\n          [queryParams]=\"{\r\n            functionId: functionId,\r\n            parentId: parentId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right mb-2\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label *ngIf=\"type == 3\">{{\r\n                      \"labels.ExamName\" | translate\r\n                    }}</mat-label>\r\n                    <mat-label *ngIf=\"type == 5\">{{\r\n                      \"labels.SurveyName\" | translate\r\n                    }}</mat-label>\r\n\r\n                    <input type=\"text\" matInput formControlName=\"examName\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"examNameCtrl?.invalid && examNameCtrl?.touched\"\r\n                    >\r\n                      <span *ngIf=\"myForm.examNameCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <!--<div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Country\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"countryId\"\r\n                      (selectionChange)=\"onSelectCountry()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let country of countries\"\r\n                        [value]=\"country.country_id\"\r\n                      >\r\n                        {{ country.country_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n             <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"stageId\"\r\n                      (selectionChange)=\"onSelectStages()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of stages\"\r\n                        [value]=\"stage.id\"\r\n                      >\r\n                        {{ stage.stage_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                 <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"educationYearId\"\r\n                      (selectionChange)=\"onSelectEducationYears()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let year of educationYears\"\r\n                        [value]=\"year.id\"\r\n                      >\r\n                        {{ year.Educational_year_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                 <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"subjectId\"\r\n                      (selectionChange)=\"onSelectSubjects()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let sub of subjects\"\r\n                        [value]=\"sub.subject_id\"\r\n                      >\r\n                        {{ sub.subject_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                 <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"teacherUserId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of teachers\"\r\n                        [value]=\"teacher.teacherUserId\"\r\n                      >\r\n                        {{ teacher.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllExams(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title *ngIf=\"type == 3\">\r\n        {{ \"Navbar.Exams\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-title *ngIf=\"type == 5\">\r\n        {{ \"Navbar.Surveys\" | translate }}</mat-card-title\r\n      >\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.exam_ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- subject Column -->\r\n            <ng-container matColumnDef=\"course\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CourseName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ curLang == \"ar\" ? ele.course_ar_name : ele.course_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- year Column -->\r\n            <!-- <ng-container matColumnDef=\"year\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Year\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.eduYearId }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- teacher Column -->\r\n            <!-- <ng-container matColumnDef=\"teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Teacher }}</td>\r\n            </ng-container> -->\r\n\r\n            <!-- publish Column -->\r\n            <ng-container matColumnDef=\"publish\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ThePublish\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let exam\">\r\n                <span *ngIf=\"exam?.isPublish\">\r\n                  {{ \"labels.Published\" | translate }}\r\n                  <i class=\"fa fa-check-circle success ml-1\" aria-hidden=\"true\">\r\n                  </i>\r\n                </span>\r\n                <span *ngIf=\"!exam?.isPublish\">\r\n                  {{ \"labels.UnPublished\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let exam\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-primary\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'publish'\"\r\n                        (click)=\"onPublishExam(exam)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <span *ngIf=\"!exam.isPublish\">\r\n                          <i class=\"ft-upload font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Publish\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"exam.isPublish\">\r\n                          <i class=\"ft-download font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Unpublish\" | translate }}\r\n                        </span>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"../add-exam\"\r\n                        [queryParams]=\"{\r\n                          examId: exam.id,\r\n                          functionId: functionId,\r\n                          parentId: parentId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(exam)\"\r\n                      >\r\n                        <i class=\"fa fa-times font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Show'\"\r\n                        ngbDropdownItem\r\n                        target=\"_blank\"\r\n                        routerLink=\"/dashboard/exams-setup/exam-preview/{{\r\n                          exam.id\r\n                        }}/{{type}}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-video-camera font-medium-3 mr-2\"> </i>\r\n                        {{ \"General.ExamPreview\" | translate }}\r\n                      </a>\r\n\r\n                      <!-- <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Points'\"\r\n                        routerLink=\"../exam-points/{{ exam.Id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                        ><i class=\"fa fa-gift font-medium-3 mr-2\"></i>النقاط</a\r\n                      >\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Grades'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/educational-setup/subjects/upload-exam-student-grades/{{\r\n                          exam.Id\r\n                        }}\"\r\n                      >\r\n                        <i class=\"fa fa-upload font-medium-3 mr-2\"></i>\r\n                        {{ \"Exam.StudentGradesUpload\" | translate }}\r\n                      </a> -->\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n              [class.bg-light-info]=\"!row?.isPublish\"\r\n            ></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllExams($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport {\r\n  GeneralDropdownVM,\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { IMcqChoiceVM } from \"app/admin/models/admin/exams\";\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-add-question\",\r\n  templateUrl: \"./add-question.component.html\",\r\n  styleUrls: [\"./add-question.component.scss\"],\r\n})\r\nexport class AddQuestionComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  questionID: any = null;\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  Teachers: teacherByEduCompId[];\r\n  subjects: GeneralDropdownVM[];\r\n  units: GeneralDropdownVM[];\r\n  lessons: GeneralDropdownVM[];\r\n  topics: GeneralDropdownVM[];\r\n\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n\r\n  //Images\r\n  QuestionAttachPath: any = null;\r\n\r\n  questionsInputs: IMcqChoiceVM[] = [\r\n    {\r\n      choice_id: 0,\r\n      choice_text: \"\",\r\n      thumbnailPic: \"\",\r\n      ChoiceAttachPath: \"\",\r\n      //  IsCorrect: false,\r\n      remove_image: false,\r\n    },\r\n    {\r\n      choice_id: 1,\r\n      choice_text: \"\",\r\n      thumbnailPic: \"\",\r\n      ChoiceAttachPath: \"\",\r\n      // IsCorrect: false,\r\n      remove_image: false,\r\n    },\r\n    {\r\n      choice_id: 2,\r\n      choice_text: \"\",\r\n      thumbnailPic: \"\",\r\n      ChoiceAttachPath: \"\",\r\n      // IsCorrect: false,\r\n      remove_image: false,\r\n    },\r\n    {\r\n      choice_id: 3,\r\n      choice_text: \"\",\r\n      thumbnailPic: \"\",\r\n      ChoiceAttachPath: \"\",\r\n      // IsCorrect: false,\r\n      remove_image: false,\r\n    },\r\n  ];\r\n\r\n  get choices() {\r\n    return this.myForm.get(\"choices\") as FormArray;\r\n  }\r\n\r\n  get QuestionId() {\r\n    return this.myForm.get(\"questionBank.question.id\");\r\n  }\r\n\r\n  get question_type_id() {\r\n    return this.myForm.get(\"questionBank.question.question_type_id\");\r\n  }\r\n\r\n  get teacherUserId() {\r\n    return this.myForm.get(\"questionBank.question.teacherUserId\");\r\n  }\r\n\r\n  get picked_choice_index() {\r\n    return this.myForm.get(\"picked_choice_index\");\r\n  }\r\n\r\n  get QuestionBankId() {\r\n    return this.myForm.get(\"questionBank.Id\");\r\n  }\r\n\r\n  get main_subject_id() {\r\n    return this.myForm.get(\"questionBank.main_subject_id\");\r\n  }\r\n\r\n  get question_id() {\r\n    return this.myForm.get(\"questionBank.question_id\");\r\n  }\r\n\r\n  get unitId() {\r\n    return this.myForm.get(\"questionBank.unitId\");\r\n  }\r\n\r\n  get lessonId() {\r\n    return this.myForm.get(\"questionBank.lessonId\");\r\n  }\r\n\r\n  get topicId() {\r\n    return this.myForm.get(\"questionBank.topicId\");\r\n  }\r\n\r\n  get difficulty_level() {\r\n    return this.myForm.get(\"questionBank.difficulty_level\");\r\n  }\r\n\r\n  get question_ar_text() {\r\n    return this.myForm.get(\"questionBank.question.question_ar_text\");\r\n  }\r\n\r\n  get perfect_answer() {\r\n    return this.myForm.get(\"questionBank.question.perfect_answer\");\r\n  }\r\n\r\n  get mark() {\r\n    return this.myForm.get(\"questionBank.mark\");\r\n  }\r\n\r\n  get remove_image() {\r\n    return this.myForm.get(\"questionBank.question.remove_image\");\r\n  }\r\n\r\n  get thumbnailPic() {\r\n    return this.myForm.get(\"questionBank.question.thumbnailPic\");\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private authService: AuthService,\r\n    private examsService: ExamsService,\r\n    private GeneralService: GeneralService,\r\n    private datePipe: DatePipe,\r\n    private EducationalService: EducationalService\r\n  ) {\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.questionID = params.get(\"questionId\");\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n\r\n      if (this.questionID) {\r\n        this.getQuestionByID(this.questionID);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get Current EduCompId\r\n    this.EduCompId = this.authService.getEduCompId();\r\n    this.branchId = this.authService.getBranchId();\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n\r\n    this.myForm = this.fb.group({\r\n      questionBank: this.fb.group({\r\n        Id: [0],\r\n        main_subject_id: [\"\", Validators.required],\r\n        unitId: [\"\"],\r\n        lessonId: [\"\"],\r\n        topicId: [\"\"],\r\n        mark: [, [Validators.required, CustomeValidator.minusNum]],\r\n        difficulty_level: [\"1\", [Validators.required]],\r\n        question_id: [0],\r\n\r\n        question: this.fb.group({\r\n          id: [0, [Validators.required]],\r\n          question_type_id: [\"\", Validators.required],\r\n          teacherUserId: [\"\"],\r\n          question_ar_text: [\"\"],\r\n          perfect_answer: [],\r\n          remove_image: [false],\r\n          thumbnailPic: [null],\r\n        }),\r\n      }),\r\n      picked_choice_index: [null],\r\n      choices: this.fb.array([]),\r\n    });\r\n\r\n    this.changeQuestionType();\r\n    this.setDefaultChoises();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId(e.EduCompId);\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    //console.log(\"choices \", this.choices.value);\r\n    //  console.log(\"choices controls \", this.choices.controls);\r\n  }\r\n\r\n  private setDefaultChoises() {\r\n    this.questionsInputs.map((d) =>\r\n      this.choices.push(\r\n        this.fb.group({\r\n          choice_id: d.choice_id,\r\n          choice_text: d.choice_text,\r\n          thumbnailPic: d.thumbnailPic,\r\n          remove_image: d.remove_image,\r\n          //IsCorrect: d.IsCorrect,\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  getQuestionByID(id: any) {\r\n    this.spinner.show();\r\n    this.examsService.getQuestionByID(id).subscribe((res: any) => {\r\n      //console.log(\"getQuestionByID: \", res);\r\n      if (res.QuestionId != null) {\r\n        this.teacherUserId?.enable();\r\n        this.main_subject_id?.enable();\r\n        this.getSubjectByTeacherId(res.TeacherUserId);\r\n        this.GetUnits(res.SubjectId);\r\n        this.GetLessons(res.UnitId);\r\n        this.GetTopics(res.LessonId);\r\n\r\n        this.QuestionBankId?.setValue(res.QuestionBankId);\r\n        this.QuestionId?.setValue(res.QuestionId);\r\n        this.question_id?.setValue(res.QuestionId);\r\n        this.main_subject_id?.setValue(String(res.SubjectId));\r\n        this.question_type_id?.setValue(res.QuestionTypeId);\r\n        this.teacherUserId?.setValue(res.TeacherUserId);\r\n        this.unitId?.setValue(String(res.UnitId));\r\n        this.lessonId?.setValue(String(res.LessonId));\r\n        this.topicId?.setValue(String(res.TopicId));\r\n        this.difficulty_level?.setValue(res.DifficultyLevel);\r\n        this.question_ar_text?.setValue(res.QuestionTextAr);\r\n        this.perfect_answer?.setValue(res.PerfectAnswer);\r\n        this.mark?.setValue(res.Mark);\r\n        this.thumbnailPic?.setValue(res.QuestionAttachId);\r\n\r\n        this.QuestionAttachPath =\r\n          res.QuestionAttachPath != null\r\n            ? \"mozakretyapi\" + res.QuestionAttachPath\r\n            : null;\r\n\r\n        if (res.Choices.length != 0) {\r\n          let d = res.Choices;\r\n          this.choices.clear();\r\n          this.questionsInputs = res.Choices;\r\n          this.questionsInputs.map((d: any) =>\r\n            this.choices.push(\r\n              this.fb.group({\r\n                choice_id: d.ChoiceId,\r\n                choice_text: d.ChoiceText,\r\n                thumbnailPic: d.thumbnailPic,\r\n                ChoiceAttachPath:\r\n                  d.ChoiceAttachPath != null\r\n                    ? \"mozakretyapi\" + d.ChoiceAttachPath\r\n                    : null,\r\n                //  IsCorrect: d.IsCorrect,\r\n                remove_image: d.remove_image || false,\r\n              })\r\n            )\r\n          );\r\n          // console.log(\"this.questionsInputs\", this.questionsInputs);\r\n          // console.log(\"this.Choices\", this.choices.value);\r\n\r\n          for (let obj of res.Choices) {\r\n            if (obj.IsCorrect == true) {\r\n              let i = res.Choices.findIndex(\r\n                (item: any) => item.IsCorrect === true\r\n              );\r\n              this.picked_choice_index?.setValue(i);\r\n            }\r\n          }\r\n        } else {\r\n          this.setDefaultChoises();\r\n        }\r\n      }\r\n\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  addUpdateQuestion() {\r\n    this.submitted = true;\r\n    // console.log(\"valid?: \", this.myForm.valid);\r\n\r\n    //If MCQ Validation\r\n    if (\r\n      this.question_type_id?.value == 2 ||\r\n      this.question_type_id?.value == 3\r\n    ) {\r\n      //answer 1\r\n      if (\r\n        !this.choices.value[0].thumbnailPic &&\r\n        !this.choices.value[0].choice_text\r\n      ) {\r\n        this.toastr.warning(\"Must Enter answer 1 text or picture\");\r\n        return;\r\n      }\r\n\r\n      //answer 2\r\n      if (\r\n        !this.choices.value[1].thumbnailPic &&\r\n        !this.choices.value[1].choice_text\r\n      ) {\r\n        this.toastr.warning(\"Must Enter answer 2 text or picture\");\r\n        return;\r\n      }\r\n\r\n      //answer 3\r\n      if (\r\n        !this.choices.value[2].thumbnailPic &&\r\n        !this.choices.value[2].choice_text\r\n      ) {\r\n        this.toastr.warning(\"Must Enter answer 3 text or picture\");\r\n        return;\r\n      }\r\n\r\n      //answer 4\r\n      if (\r\n        !this.choices.value[3].thumbnailPic &&\r\n        !this.choices.value[3].choice_text\r\n      ) {\r\n        this.toastr.warning(\"Must Enter answer 4 text or picture\");\r\n        return;\r\n      }\r\n\r\n      //Correct answer\r\n      if (this.FormCtrl.picked_choice_index.value < 0) {\r\n        this.toastr.warning(\"Must Choose Correct answer \");\r\n        return;\r\n      }\r\n    }\r\n\r\n    console.log(\"myFormValue \", this.myForm.value);\r\n    if (this.myForm.valid) {\r\n      //  console.log(\"Call API\");\r\n      this.spinner.show();\r\n      this.examsService\r\n        .addEditQuestion(this.EduCompId, this.myForm.value)\r\n        .subscribe((res: any) => {\r\n          if (res.questionId != null) {\r\n            this.question_id.setValue(res.questionId);\r\n            this.questionID = res.questionId;\r\n\r\n            this.toastr.success(\"Question Added Successful\");\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    // this.main_subject_id?.setValue(\"\");\r\n    // this.unitId?.setValue(\"\");\r\n    // this.lessonId?.setValue(\"\");\r\n    // this.topicId?.setValue(\"\");\r\n    if (EduCompId != null) {\r\n      this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n        (res: any) => {\r\n          this.Teachers = res.lstTeachers;\r\n          this.teacherUserId?.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.teacherUserId?.setValue(\"\");\r\n      this.teacherUserId?.disable();\r\n      this.main_subject_id?.disable();\r\n      this.unitId?.disable();\r\n      this.lessonId?.disable();\r\n      this.topicId?.disable();\r\n    }\r\n  }\r\n\r\n  getSubjectByTeacherId(teacherId: any) {\r\n    if (teacherId != null) {\r\n      this.GeneralService.getSubjectByTeacherId(teacherId).subscribe(\r\n        (res: any) => {\r\n          this.subjects = res.lsts;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  GetUnits(SubjectId: any) {\r\n    // this.unitId?.setValue(\"\");\r\n    // this.lessonId?.setValue(\"\");\r\n    // this.topicId?.setValue(\"\");\r\n    if (SubjectId != \"\") {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        this.unitId?.enable();\r\n      });\r\n    } else {\r\n      this.unitId?.setValue(\"\");\r\n      this.unitId?.disable();\r\n      this.lessonId?.disable();\r\n      this.topicId?.disable();\r\n    }\r\n  }\r\n\r\n  GetLessons(unitId: any) {\r\n    // this.lessonId?.setValue(\"\");\r\n    // this.topicId?.setValue(\"\");\r\n    if (unitId != \"\") {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        this.lessonId?.enable();\r\n      });\r\n    } else {\r\n      this.lessonId?.setValue(\"\");\r\n      this.lessonId?.disable();\r\n      this.topicId?.disable();\r\n    }\r\n  }\r\n\r\n  GetTopics(LessonId: any) {\r\n    //  this.topicId?.setValue(\"\");\r\n    if (LessonId != \"\") {\r\n      this.EducationalService.GetTopics(LessonId).subscribe((res: any) => {\r\n        this.topics = res;\r\n        this.topicId?.enable();\r\n      });\r\n    } else {\r\n      this.topicId?.setValue(\"\");\r\n      this.topicId?.disable();\r\n    }\r\n  }\r\n\r\n  setMainSubjectToForm(SubjectId: any) {\r\n    this.main_subject_id?.setValue(SubjectId);\r\n  }\r\n\r\n  //OnChange Question Type\r\n  changeQuestionType() {\r\n    this.question_type_id?.valueChanges.subscribe((data) => {\r\n      this.changeValidators();\r\n    });\r\n  }\r\n\r\n  //OnChange Question Type Change Validators\r\n  changeValidators() {\r\n    let question_type = this.question_type_id?.value;\r\n\r\n    if (question_type == 1) {\r\n      // this.myForm.controls['slectans'].clearValidators();\r\n      this.perfect_answer.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.whiteSpace,\r\n      ]);\r\n    }\r\n\r\n    if (question_type == 2 || question_type == 3) {\r\n      this.perfect_answer.clearValidators();\r\n      this.perfect_answer.reset();\r\n      //  this.myForm.controls['slectans'].setValidators([]);\r\n    }\r\n\r\n    this.perfect_answer.updateValueAndValidity();\r\n    // this.myForm.controls['slectans'].updateValueAndValidity();\r\n  }\r\n\r\n  resetManual() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n    //this.myForm.controls['Year_to_join'].setValue('');\r\n  }\r\n\r\n  // Choose Question and answer Imgs\r\n  onChange(event: any, i: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        // if main question img\r\n        if (i == -1) {\r\n          this.thumbnailPic?.setValue(data);\r\n          this.QuestionAttachPath = fileReder;\r\n        } else {\r\n          for (const obj of this.choices.value) {\r\n            let objIndex = this.choices.value.indexOf(obj);\r\n            if (objIndex === i) {\r\n              obj.thumbnailPic = data;\r\n              obj.ChoiceAttachPath = fileReder;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        //  console.log(\"questionsInputs: \", this.questionsInputs);\r\n        // console.log(\"choices.value: \", this.choices.value);\r\n      };\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"col-12\">\r\n  <div class=\"content-header\">\r\n    {{ \"Navbar.QuestionsBank\" | translate }}\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.AddQuestion\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n          routerLink=\"../index\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <ng-container formGroupName=\"questionBank\">\r\n                <div class=\"row\">\r\n                  <ng-container formGroupName=\"question\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.QuestionType\" | translate }}\r\n                        </mat-label>\r\n                        <mat-select\r\n                          formControlName=\"question_type_id\"\r\n                          (selectionChange)=\"changeQuestionType()\"\r\n                        >\r\n                          <mat-option>\r\n                            {{ \"General.Choose\" | translate }}\r\n                          </mat-option>\r\n\r\n                          <mat-option [value]=\"1\">\r\n                            {{ \"labels.Article\" | translate }}\r\n                          </mat-option>\r\n\r\n                          <mat-option [value]=\"2\">\r\n                            {{ \"labels.Mcq\" | translate }}\r\n                          </mat-option>\r\n\r\n                          <!--      <mat-option [value]=\"3\">\r\n                        {{ \"labels.questionChoose\" | translate }}\r\n                      </mat-option> -->\r\n                        </mat-select>\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            question_type_id?.invalid &&\r\n                            (question_type_id?.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span *ngIf=\"question_type_id?.errors?.required\">\r\n                            {{ \"labels.MustChoosevalue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>{{\r\n                          \"labels.Teacher\" | translate\r\n                        }}</mat-label>\r\n                        <mat-select\r\n                          formControlName=\"teacherUserId\"\r\n                          (selectionChange)=\"\r\n                            getSubjectByTeacherId(teacherUserId?.value)\r\n                          \"\r\n                        >\r\n                          <mat-option>{{\r\n                            \"General.Choose\" | translate\r\n                          }}</mat-option>\r\n                          <mat-option\r\n                            *ngFor=\"let teacher of Teachers\"\r\n                            [value]=\"teacher.teacherUserId\"\r\n                          >\r\n                            {{ teacher.teacher_ar_name }}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            teacherUserId?.invalid &&\r\n                            (teacherUserId?.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span *ngIf=\"teacherUserId?.errors?.required\">\r\n                            {{ \"labels.MustChoosevalue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </ng-container>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"main_subject_id\"\r\n                        (selectionChange)=\"GetUnits(main_subject_id?.value)\"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let subject of subjects\"\r\n                          [value]=\"subject.Value\"\r\n                        >\r\n                          {{ subject.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          main_subject_id?.invalid &&\r\n                          (main_subject_id?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"main_subject_id?.errors?.required\">\r\n                          {{ \"labels.MustChoosevalue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"unitId\"\r\n                        (selectionChange)=\"GetLessons(unitId?.value)\"\r\n                      >\r\n                        <mat-option>{{\r\n                          \"General.Choose\" | translate\r\n                        }}</mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let unit of units\"\r\n                          [value]=\"unit.Value\"\r\n                        >\r\n                          {{ unit.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                      <mat-select\r\n                        formControlName=\"lessonId\"\r\n                        (selectionChange)=\"GetTopics(lessonId?.value)\"\r\n                      >\r\n                        <mat-option>\r\n                          {{ \"General.Choose\" | translate }}\r\n                        </mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let lesson of lessons\"\r\n                          [value]=\"lesson.Value\"\r\n                        >\r\n                          {{ lesson.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Topic\" | translate }}</mat-label>\r\n                      <mat-select formControlName=\"topicId\">\r\n                        <mat-option>\r\n                          {{ \"General.Choose\" | translate }}\r\n                        </mat-option>\r\n                        <mat-option\r\n                          *ngFor=\"let topic of topics\"\r\n                          [value]=\"topic.Value\"\r\n                        >\r\n                          {{ topic.Text }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{ \"labels.Level\" | translate }}</mat-label>\r\n                      <mat-select formControlName=\"difficulty_level\">\r\n                        <mat-option>\r\n                          {{ \"General.Choose\" | translate }}\r\n                        </mat-option>\r\n                        <mat-option [value]=\"1\">سهل</mat-option>\r\n                        <mat-option [value]=\"5\">متوسط</mat-option>\r\n                        <mat-option [value]=\"10\">صعب</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>\r\n                        {{ \"labels.QuestionMark\" | translate }}\r\n                      </mat-label>\r\n                      <input matInput type=\"number\" formControlName=\"mark\" />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"mark.invalid && (mark.touched || submitted)\"\r\n                      >\r\n                        <span *ngIf=\"mark?.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span *ngIf=\"mark?.errors?.minusNum\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <ng-container formGroupName=\"question\">\r\n                    <div class=\"col-12\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.question_ar_text\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"text\"\r\n                          formControlName=\"question_ar_text\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            question_ar_text.invalid &&\r\n                            (question_ar_text.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              question_ar_text?.errors?.required ||\r\n                              question_ar_text?.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- Question Picture -->\r\n                    <ng-container>\r\n                      <div class=\"col-md-4 col-12\">\r\n                        <mat-label>\r\n                          {{ \"labels.QuestionImage\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          class=\"form-control font-dro clearInputs\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          (change)=\"onChange($event, -1)\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div class=\"col-md-8 col-12\">\r\n                        <div class=\"question-img\">\r\n                          <mat-checkbox\r\n                            *ngIf=\"QuestionAttachPath\"\r\n                            formControlName=\"remove_image\"\r\n                            [value]=\"true\"\r\n                            class=\"remove_image\"\r\n                          >\r\n                            Remove Image\r\n                          </mat-checkbox>\r\n                          <img class=\"img-fluid\" [src]=\"QuestionAttachPath\" />\r\n                        </div>\r\n                      </div>\r\n                    </ng-container>\r\n\r\n                    <!-- Perfect answer -->\r\n                    <div class=\"col-12\" *ngIf=\"question_type_id.value == 1\">\r\n                      <mat-form-field appearance=\"legacy\">\r\n                        <mat-label>\r\n                          {{ \"labels.perfect_answer\" | translate }}\r\n                        </mat-label>\r\n                        <input\r\n                          matInput\r\n                          type=\"text\"\r\n                          formControlName=\"perfect_answer\"\r\n                        />\r\n                        <mat-hint\r\n                          class=\"text-danger\"\r\n                          *ngIf=\"\r\n                            perfect_answer.invalid &&\r\n                            (perfect_answer.touched || submitted)\r\n                          \"\r\n                        >\r\n                          <span\r\n                            *ngIf=\"\r\n                              perfect_answer?.errors?.required ||\r\n                              perfect_answer?.errors?.whiteSpace\r\n                            \"\r\n                          >\r\n                            {{ \"labels.mustEnterValue\" | translate }}\r\n                          </span>\r\n                        </mat-hint>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </ng-container>\r\n                </div>\r\n              </ng-container>\r\n              <hr />\r\n\r\n              <!-- If Question type multiple choice -->\r\n              <ng-container\r\n                *ngIf=\"\r\n                  question_type_id.value == 2 || question_type_id.value == 3\r\n                \"\r\n              >\r\n                <!-- MCQ -->\r\n                <!--  let question of choices.ccontrols; -->\r\n                <mat-card\r\n                  formArrayName=\"choices\"\r\n                  *ngFor=\"\r\n                    let question of choices.controls;\r\n                    let questionIndex = index\r\n                  \"\r\n                  class=\"card bg-light\"\r\n                >\r\n                  <mat-card-subtitle>\r\n                    {{ \"labels.AnswerNumber\" | translate }}({{\r\n                      questionIndex + 1\r\n                    }})\r\n                  </mat-card-subtitle>\r\n                  <mat-card-content [formGroupName]=\"questionIndex\">\r\n                    <div class=\"row\">\r\n                      <!-- <input type=\"hidden\" formControlName=\"id\" /> -->\r\n                      <div class=\"col-12\">\r\n                        <mat-form-field appearance=\"legacy\">\r\n                          <mat-label>\r\n                            {{ \"labels.AnswerText\" | translate }}({{\r\n                              questionIndex + 1\r\n                            }})\r\n                          </mat-label>\r\n                          <input\r\n                            matInput\r\n                            type=\"text\"\r\n                            formControlName=\"choice_text\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"col-12\">\r\n                        <!-- Question Pic -->\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4 col-12\">\r\n                            <mat-label>\r\n                              {{ \"labels.AnswerPic\" | translate }}\r\n                              ({{ questionIndex + 1 }})\r\n                            </mat-label>\r\n                            <input\r\n                              class=\"form-control font-dro clearInputs\"\r\n                              type=\"file\"\r\n                              accept=\"image/*\"\r\n                              (change)=\"onChange($event, questionIndex)\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div class=\"col-md-8 col-12\">\r\n                            <div class=\"question-img\">\r\n                              <mat-checkbox\r\n                                *ngIf=\"\r\n                                  question.value?.ChoiceAttachPath !== null\r\n                                \"\r\n                                formControlName=\"remove_image\"\r\n                                [value]=\"true\"\r\n                                class=\"remove_image\"\r\n                              >\r\n                                Remove Image\r\n                              </mat-checkbox>\r\n                              <img\r\n                                class=\"img-fluid\"\r\n                                [src]=\"question.value?.ChoiceAttachPath\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n\r\n                <!-- Correct Choice -->\r\n                <mat-card class=\"bg-light-info\">\r\n                  <mat-card-title>\r\n                    {{ \"labels.ChooseCorrectAnswer\" | translate }}\r\n                  </mat-card-title>\r\n                  <mat-card-content>\r\n                    <mat-radio-group\r\n                      formControlName=\"picked_choice_index\"\r\n                      class=\"row\"\r\n                    >\r\n                      <div class=\"col-3\">\r\n                        <mat-radio-button [value]=\"0\">\r\n                          {{ \"labels.AnswerOne\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-3\">\r\n                        <mat-radio-button [value]=\"1\">\r\n                          {{ \"labels.AnswerTwo\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-3\">\r\n                        <mat-radio-button [value]=\"2\">\r\n                          {{ \"labels.AnswerThree\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                      <div class=\"col-3\">\r\n                        <mat-radio-button [value]=\"3\">\r\n                          {{ \"labels.AnswerFour\" | translate }}\r\n                        </mat-radio-button>\r\n                      </div>\r\n                    </mat-radio-group>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </ng-container>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"QuestionId.value == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"addUpdateQuestion()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"QuestionId.value > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"addUpdateQuestion()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormControl, FormBuilder } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IQuestionsBankVM } from \"app/admin/models/admin/questionsBank\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {\r\n  GeneralDropdownVM,\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-questions-index\",\r\n  templateUrl: \"./questions-index.component.html\",\r\n  styleUrls: [\"./questions-index.component.scss\"],\r\n})\r\nexport class QuestionsIndexComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  itemsCount: number;\r\n  myForm: FormGroup;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  Teachers: teacherByEduCompId[];\r\n  stages: GeneralDropdownVM[];\r\n  years: GeneralDropdownVM[];\r\n  subjects: GeneralDropdownVM[];\r\n  units: GeneralDropdownVM[];\r\n  lessons: GeneralDropdownVM[];\r\n  topics: GeneralDropdownVM[];\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"questionID\",\r\n    \"questionText\",\r\n    \"questionType\",\r\n    \"subjectName\",\r\n    \"unitName\",\r\n    \"lessonName\",\r\n    \"topicName\",\r\n    \"mark\",\r\n    \"levelName\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IQuestionsBankVM>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authService: AuthService,\r\n    private examServ: ExamsService,\r\n    private GeneralService: GeneralService,\r\n    private EducationalService: EducationalService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authService\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      teacherUserId: [\"\"],\r\n      stageId: [\"\"],\r\n      yearId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n      topicId: [\"\"],\r\n    });\r\n\r\n    this.EduCompId = this.authService.getEduCompId();\r\n    this.branchId = this.authService.getBranchId();\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n    this.getQuestions(1);\r\n    this.FormCtrl.stageId.disable();\r\n    this.FormCtrl.yearId.disable();\r\n    this.FormCtrl.subjectId.disable();\r\n    this.FormCtrl.unitId.disable();\r\n    this.FormCtrl.lessonId.disable();\r\n    this.FormCtrl.topicId.disable();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authService.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTeachersByEducompId(e.EduCompId);\r\n      this.getQuestions(1);\r\n    });\r\n\r\n    this.authService.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getQuestions(page: any) {\r\n    this.spinner.show();\r\n    this.examServ\r\n      .getQuestions(page, this.EduCompId, this.myForm.value)\r\n      .subscribe((res: any) => {\r\n        this.dataSource = new MatTableDataSource(res.returnModel);\r\n        this.itemsCount = res.itemsCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  deleteQuestion(question: IQuestionsBankVM) {\r\n    this.spinner.show();\r\n    this.examServ\r\n      .deleteQuestion(this.EduCompId, question.questionID)\r\n      .subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          let i = this.dataSource.data.findIndex((e) => e === question);\r\n          this.dataSource.data.splice(i, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.toastr.success(\"Done\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(question: IQuestionsBankVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${question.questionID} - ${question.questionTypeEnglishName}`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteQuestion(question);\r\n      });\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n      }\r\n    );\r\n  }\r\n\r\n  getStageByTeacherId(teacherId: any) {\r\n    this.FormCtrl.stageId.setValue(\"\");\r\n    this.FormCtrl.yearId.setValue(\"\");\r\n    this.FormCtrl.subjectId.setValue(\"\");\r\n    this.FormCtrl.unitId.setValue(\"\");\r\n    this.FormCtrl.lessonId.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (teacherId != \"\") {\r\n      this.EducationalService.getStageByTeacherId(teacherId).subscribe(\r\n        (res: any) => {\r\n          this.stages = res;\r\n          this.FormCtrl.stageId.enable();\r\n          //console.log(res);\r\n        }\r\n      );\r\n    } else {\r\n      this.FormCtrl.stageId.setValue(\"\");\r\n      this.FormCtrl.stageId.disable();\r\n      this.FormCtrl.yearId.disable();\r\n      this.FormCtrl.subjectId.disable();\r\n      this.FormCtrl.unitId.disable();\r\n      this.FormCtrl.lessonId.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  getYearsByStageId(stageId: any) {\r\n    this.FormCtrl.yearId.setValue(\"\");\r\n    this.FormCtrl.subjectId.setValue(\"\");\r\n    this.FormCtrl.unitId.setValue(\"\");\r\n    this.FormCtrl.lessonId.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (stageId != \"\") {\r\n      this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n        this.years = res;\r\n        this.FormCtrl.yearId.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.yearId.setValue(\"\");\r\n      this.FormCtrl.yearId.disable();\r\n      this.FormCtrl.subjectId.disable();\r\n      this.FormCtrl.unitId.disable();\r\n      this.FormCtrl.lessonId.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  //return Teacher Subjects   //{ \"yearId\" : 36, \"teacherId\" : 17}\r\n  getSubjectsByYearId(yearId: any) {\r\n    this.FormCtrl.subjectId.setValue(\"\");\r\n    this.FormCtrl.unitId.setValue(\"\");\r\n    this.FormCtrl.lessonId.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (yearId != \"\") {\r\n      let data = {\r\n        yearId: yearId,\r\n        teacherUserId: this.FormCtrl.teacherUserId?.value,\r\n      };\r\n      this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n        (res: any) => {\r\n          this.subjects = res;\r\n          this.FormCtrl.subjectId.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.FormCtrl.subjectId.setValue(\"\");\r\n      this.FormCtrl.subjectId.disable();\r\n      this.FormCtrl.unitId.disable();\r\n      this.FormCtrl.lessonId.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  getUnitsBySubjectId(SubjectId: any) {\r\n    this.FormCtrl.unitId.setValue(\"\");\r\n    this.FormCtrl.lessonId.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (SubjectId != \"\") {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        this.FormCtrl.unitId.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.unitId.setValue(\"\");\r\n      this.FormCtrl.unitId.disable();\r\n      this.FormCtrl.lessonId.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  getLessonsByUnitId(unitId: any) {\r\n    this.FormCtrl.lessonId.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (unitId != \"\") {\r\n      this.EducationalService.GetLessons(unitId).subscribe((res: any) => {\r\n        this.lessons = res;\r\n        this.FormCtrl.lessonId.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.lessonId.setValue(\"\");\r\n      this.FormCtrl.lessonId.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  GetTopicsByLessonId(LessonId: any) {\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (this.FormCtrl.lessonId.value) {\r\n      this.EducationalService.GetTopics(LessonId).subscribe((res: any) => {\r\n        this.topics = res;\r\n        this.FormCtrl.topicId.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.topicId.setValue(\"\");\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  resetManual() {\r\n    this.myForm.controls[\"teacherUserId\"].setValue(\"\");\r\n    this.myForm.controls[\"yearId\"].setValue(\"\");\r\n    this.myForm.controls[\"stageId\"].setValue(\"\");\r\n    this.myForm.controls[\"subjectId\"].setValue(\"\");\r\n    this.myForm.controls[\"unitId\"].setValue(\"\");\r\n    this.myForm.controls[\"lessonId\"].setValue(\"\");\r\n    this.myForm.controls[\"topicId\"].setValue(\"\");\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"col-12\">\r\n  <div class=\"content-header\">\r\n    {{ \"Navbar.QuestionsBank\" | translate }}\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.QuestionsSearch\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n          routerLink=\"../add-question\"\r\n          [queryParams]=\"{ functionId: functionId }\"\r\n        >\r\n          {{ \"labels.AddQuestion\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\"  >\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"teacherUserId\"\r\n                      (selectionChange)=\"\r\n                        getStageByTeacherId(FormCtrl.teacherUserId.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of Teachers\"\r\n                        [value]=\"teacher.teacherUserId\"\r\n                      >\r\n                        {{ teacher.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"stageId\"\r\n                      (selectionChange)=\"\r\n                        getYearsByStageId(FormCtrl.stageId.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of stages\"\r\n                        [value]=\"stage.Value\"\r\n                      >\r\n                        {{ stage.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"yearId\"\r\n                      (selectionChange)=\"\r\n                        getSubjectsByYearId(FormCtrl.yearId.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let year of years\"\r\n                        [value]=\"year.Value\"\r\n                      >\r\n                        {{ year.Text_Ar }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"subjectId\"\r\n                      (selectionChange)=\"\r\n                        getUnitsBySubjectId(FormCtrl.subjectId.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let subject of subjects\"\r\n                        [value]=\"subject.Value\"\r\n                      >\r\n                        {{ subject.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"unitId\"\r\n                      (selectionChange)=\"\r\n                        getLessonsByUnitId(FormCtrl.unitId.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let unit of units\"\r\n                        [value]=\"unit.Value\"\r\n                      >\r\n                        {{ unit.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"lessonId\"\r\n                      (selectionChange)=\"\r\n                        GetTopicsByLessonId(FormCtrl.lessonId.value)\r\n                      \"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let lesson of lessons\"\r\n                        [value]=\"lesson.Value\"\r\n                      >\r\n                        {{ lesson.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Topic\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"topicId\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let topic of topics\"\r\n                        [value]=\"topic.Value\"\r\n                      >\r\n                        {{ topic.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"getQuestions(1)\"\r\n        >\r\n          {{ \"General.Search\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title> {{ \"labels.Questions\" | translate }}</mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- questionID Column -->\r\n            <ng-container matColumnDef=\"questionID\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.questionID }}</td>\r\n            </ng-container>\r\n\r\n            <!-- questionText Column -->\r\n            <ng-container matColumnDef=\"questionText\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.question_ar_text\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.questionName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- questionType Column -->\r\n            <ng-container matColumnDef=\"questionType\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.QuestionType\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.questionTypeArabicName }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- subjectName Column -->\r\n            <ng-container matColumnDef=\"subjectName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Subject\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.subjectName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- unitName Column -->\r\n            <ng-container matColumnDef=\"unitName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Unit\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.unitName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- lessonName Column -->\r\n            <ng-container matColumnDef=\"lessonName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Lesson\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.lessonName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- topicName Column -->\r\n            <ng-container matColumnDef=\"topicName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Topic\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.topicName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- mark Column -->\r\n            <ng-container matColumnDef=\"mark\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.QuestionMark\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.mark }}</td>\r\n            </ng-container>\r\n\r\n            <!-- levelName Column -->\r\n            <ng-container matColumnDef=\"levelName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Level\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.levelName }}</td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let question\">\r\n                <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Edit'\"\r\n                    class=\"success p-0\"\r\n                     matTooltip=\"Edit\"\r\n                    routerLink=\"../add-question\"\r\n                    [queryParams]=\"{\r\n                      questionId: question.questionID,\r\n                      functionId: functionId\r\n                    }\"\r\n                  >\r\n                    <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                  </a>\r\n\r\n                  <a\r\n                    *ngIf=\"fun.functionName === 'Delete'\"\r\n                    (click)=\"openDeleateDialog(question)\"\r\n                    class=\"danger p-0\"\r\n                     matTooltip=\"Delete\"\r\n                  >\r\n                    <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                  </a>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <!--    appMatPaginatorStyle\r\n            [showTotalPages]=\"3\" -->\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getQuestions($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { UploadFileService } from \"app/shared/services/General/upload-file.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  IQuestionForGridModel,\r\n  examQuestionImage,\r\n  IAddEditQuestionTextModel,\r\n  ISurveyMcqChoices,\r\n  IAddEditQuestionMcqModel,\r\n  IAddedTextExamResponse,\r\n  IQuestionDetailsForEditModel,\r\n} from \"app/admin/models/admin/AddEditQuestionModel\";\r\nimport { IUnitModel, ILessionModel } from \"app/admin/models/admin/exam\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Component({\r\n  selector: \"app-add-sub-question\",\r\n  templateUrl: \"./add-sub-question.component.html\",\r\n  styleUrls: [\"./add-sub-question.component.scss\"],\r\n})\r\nexport class AddSurvaySubQuestionComponent implements OnInit {\r\n  examId: number;\r\n  examGroupHeaderId: number;\r\n  subjectId: number;\r\n  // @Input(\"examId\") examId: any;\r\n  // @Input(\"examGroupHeaderId\") examGroupHeaderId: any = 0;\r\n  // @Input(\"subjectId\") subjectId: any = 0;\r\n  unitId: number = 0;\r\n  lessonId: number = 0;\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n\r\n  questionsInGrid: IQuestionForGridModel[] = [];\r\n\r\n  questionId: number = 0;\r\n\r\n  myForm!: FormGroup;\r\n  submitted = false;\r\n  educationCompanyId: any;\r\n  oneIsCorrect: boolean = false;\r\n  twoIsCorrect: boolean = false;\r\n  threeIsCorrect: boolean = false;\r\n  fourIsCorrect: boolean = false;\r\n  questionFile: any = null;\r\n  answerOneFile: any = null;\r\n  answerTwoFile: any = null;\r\n  answerThreeFile: any = null;\r\n  answerFourFile: any = null;\r\n  perfectAnswerAttach_preview: any = null;\r\n\r\n  get mainQuestionCtrl() {\r\n    return this.myForm.get(\"mainQuestion\");\r\n  }\r\n\r\n  get questionTypeIdCtrl() {\r\n    return this.myForm.get(\"questionTypeId\");\r\n  }\r\n\r\n  get questionImageCtrl() {\r\n    return this.myForm.get(\"questionImage\");\r\n  }\r\n\r\n  get unitIdCtrl() {\r\n    return this.myForm.get(\"unitId\");\r\n  }\r\n\r\n  get lessonIdCtrl() {\r\n    return this.myForm.get(\"lessonId\");\r\n  }\r\n\r\n  get questionTextCtrl() {\r\n    return this.myForm.get(\"exam_question_text\");\r\n  }\r\n\r\n  get questionPerfectAnswerCtrl() {\r\n    return this.myForm.get(\"questionPerfectAnswer\");\r\n  }\r\n\r\n  get perfect_answer_attachCtrl() {\r\n    return this.myForm.get(\"perfect_answer_attach\");\r\n  }\r\n\r\n  get questionMarkCtrl() {\r\n    return this.myForm.get(\"questionMark\");\r\n  }\r\n\r\n  get answerOneIdCtrl() {\r\n    return this.myForm.get(\"answerOneId\");\r\n  }\r\n\r\n  get answerOneCtrl() {\r\n    return this.myForm.get(\"answerOne\");\r\n  }\r\n\r\n  get answerOneIsCorrectCtrl() {\r\n    return this.myForm.get(\"answerOneIsCorrect\");\r\n  }\r\n\r\n  get answerOneImageCtrl() {\r\n    return this.myForm.get(\"answerOneImage\");\r\n  }\r\n\r\n  get answerTwoIdCtrl() {\r\n    return this.myForm.get(\"answerTwoId\");\r\n  }\r\n\r\n  get answerTwoCtrl() {\r\n    return this.myForm.get(\"answerTwo\");\r\n  }\r\n\r\n  get answerTwoIsCorrectCtrl() {\r\n    return this.myForm.get(\"answerTwoIsCorrect\");\r\n  }\r\n\r\n  get answerTwoImageCtrl() {\r\n    return this.myForm.get(\"answerTwoImage\");\r\n  }\r\n\r\n  get answerThreeIdCtrl() {\r\n    return this.myForm.get(\"answerThreeId\");\r\n  }\r\n\r\n  get answerThreeCtrl() {\r\n    return this.myForm.get(\"answerThree\");\r\n  }\r\n\r\n  get answerThreeIsCorrectCtrl() {\r\n    return this.myForm.get(\"answerThreeIsCorrect\");\r\n  }\r\n\r\n  get answerThreeImageCtrl() {\r\n    return this.myForm.get(\"answerThreeImage\");\r\n  }\r\n\r\n  get answerFourIdCtrl() {\r\n    return this.myForm.get(\"answerFourId\");\r\n  }\r\n\r\n  get answerFourCtrl() {\r\n    return this.myForm.get(\"answerFour\");\r\n  }\r\n\r\n  get answerFourIsCorrectCtrl() {\r\n    return this.myForm.get(\"answerFourIsCorrect\");\r\n  }\r\n\r\n  get answerFourImageCtrl() {\r\n    return this.myForm.get(\"answerFourImage\");\r\n  }\r\n\r\n  get answerOneRemove_imageCtrl() {\r\n    return this.myForm.get(\"answerOneRemove_image\");\r\n  }\r\n\r\n  get answerTwoRemove_imageCtrl() {\r\n    return this.myForm.get(\"answerTwoRemove_image\");\r\n  }\r\n\r\n  get answerThreeRemove_imageCtrl() {\r\n    return this.myForm.get(\"answerThreeRemove_image\");\r\n  }\r\n\r\n  get answerFourRemove_imageCtrl() {\r\n    return this.myForm.get(\"answerFourRemove_image\");\r\n  }\r\n\r\n  get questionImageRemove_imageCtrl() {\r\n    return this.myForm.get(\"remove_image\");\r\n  }\r\n\r\n  get answerOneMarkCtrl() {\r\n    return this.myForm.get(\"answerOneMark\");\r\n  }\r\n\r\n  get answerTwoMarkCtrl() {\r\n    return this.myForm.get(\"answerTwoMark\");\r\n  }\r\n\r\n  get answerThreeMarkCtrl() {\r\n    return this.myForm.get(\"answerThreeMark\");\r\n  }\r\n\r\n  get answerFourMarkCtrl() {\r\n    return this.myForm.get(\"answerFourMark\");\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private examService: ExamsService,\r\n    public authserv: AuthService,\r\n    public toastr: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    public fileService: UploadFileService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.examId = data.examId;\r\n    this.examGroupHeaderId = data.examGroupHeaderId;\r\n    this.subjectId = data.subjectId;\r\n    if (this.examGroupHeaderId != 0) this.getAllQuestionsByHeadId();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      mainQuestion: [null],\r\n      questionTypeId: [2, Validators.required],\r\n      questionImage: [null],\r\n      remove_image: [false],\r\n      unitId: [null],\r\n      lessionId: [null],\r\n      exam_question_text: [null],\r\n      questionPerfectAnswer: [null],\r\n      perfect_answer_attach: [null],\r\n      questionMark: [0],\r\n      answerOneId: [null],\r\n      answerOne: [null],\r\n      answerOneMark: [null],\r\n      answerTwoMark: [null],\r\n      answerThreeMark: [null],\r\n      answerFourMark: [null],\r\n      answerOneIsCorrect: [],\r\n      answerOneImage: [null],\r\n      answerTwoId: [null],\r\n      answerTwo: [null],\r\n      answerTwoIsCorrect: [],\r\n      answerTwoImage: [null],\r\n      answerThreeId: [null],\r\n      answerThree: [null],\r\n      answerThreeIsCorrect: [],\r\n      answerThreeImage: [null],\r\n      answerFourId: [null],\r\n      answerFour: [null],\r\n      answerFourIsCorrect: [],\r\n      answerFourImage: [null],\r\n      answerOneRemove_image: [false],\r\n      answerTwoRemove_image: [false],\r\n      answerThreeRemove_image: [false],\r\n      answerFourRemove_image: [false],\r\n    });\r\n    //remove_image: d.remove_image,\r\n    this.educationCompanyId = this.authserv.getEduCompId();\r\n  }\r\n\r\n  //get all question for this header\r\n  getAllQuestionsByHeadId() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getAllQuestionsByHeadId<IQuestionForGridModel[]>(this.examGroupHeaderId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          console.log(\"getAllQuestionsByHeadId\", response);\r\n          this.questionsInGrid = [];\r\n          this.questionsInGrid = response;\r\n          this.spinner.hide();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // MCQ\r\n    if (this.questionTypeIdCtrl?.value == 2) {\r\n      let image: examQuestionImage = this.questionFile || null;\r\n      let questionImagePath = this.questionImageCtrl;\r\n\r\n      let imageOne: examQuestionImage = this.answerOneFile || null;\r\n      let choice1: ISurveyMcqChoices = {\r\n        choice_id: this.answerOneIdCtrl?.value ?? 0,\r\n        choice_text: this.answerOneCtrl?.value,\r\n        mark: this.answerOneMarkCtrl?.value,\r\n        is_correct: this.answerOneIsCorrectCtrl.value === 0 ? true : false,\r\n        choice_image: imageOne,\r\n        remove_image: this.answerOneRemove_imageCtrl?.value,\r\n        path: this.answerOneImageCtrl?.value,\r\n      };\r\n\r\n      let imageTwo: examQuestionImage = this.answerTwoFile || null;\r\n      let choice2: ISurveyMcqChoices = {\r\n        choice_id: this.answerTwoIdCtrl?.value ?? 0,\r\n        choice_text: this.answerTwoCtrl?.value,\r\n        mark: this.answerTwoMarkCtrl?.value,\r\n        is_correct: this.answerTwoIsCorrectCtrl?.value ? true : false,\r\n        choice_image: imageTwo,\r\n        remove_image: this.answerTwoRemove_imageCtrl?.value,\r\n        path: this.answerTwoImageCtrl?.value,\r\n      };\r\n\r\n      let imageThree: examQuestionImage = this.answerThreeFile || null;\r\n      let choice3: ISurveyMcqChoices = {\r\n        choice_id: this.answerThreeIdCtrl?.value ?? 0,\r\n        choice_text: this.answerThreeCtrl?.value,\r\n        mark: this.answerThreeMarkCtrl?.value,\r\n        is_correct: this.answerThreeIsCorrectCtrl?.value ? true : false,\r\n        choice_image: imageThree,\r\n        remove_image: this.answerThreeRemove_imageCtrl?.value,\r\n        path: this.answerThreeImageCtrl?.value,\r\n      };\r\n\r\n      let imageFour: examQuestionImage = this.answerFourFile || null;\r\n      let choice4: ISurveyMcqChoices = {\r\n        choice_id: this.answerFourIdCtrl?.value ?? 0,\r\n        choice_text: this.answerFourCtrl?.value,\r\n        mark: this.answerFourMarkCtrl?.value,\r\n        is_correct: this.answerFourIsCorrectCtrl?.value ? true : false,\r\n        choice_image: imageFour,\r\n        remove_image: this.answerFourRemove_imageCtrl?.value,\r\n        path: this.answerFourImageCtrl?.value,\r\n      };\r\n\r\n      let toAddEdit: IAddEditQuestionMcqModel = {\r\n        exam_question_main_question: this.mainQuestionCtrl?.value,\r\n        exam_question_mark: this.questionMarkCtrl?.value,\r\n        exam_question_perfect_answer: this.questionPerfectAnswerCtrl?.value,\r\n        //perfect_answer_attach: this.perfectAnswerAttach_preview,\r\n        exam_question_text: this.questionTextCtrl?.value,\r\n        exam_question_type_id: this.questionTypeIdCtrl?.value,\r\n        exam_selected_question_head_id: this.examGroupHeaderId,\r\n        exam_selected_subject_id: this.subjectId,\r\n        exam_question_image: image,\r\n        remove_image: this.questionImageRemove_imageCtrl?.value,\r\n        exam_question_id: this.questionId,\r\n        mcq_choices: [choice1, choice2, choice3, choice4],\r\n      };\r\n\r\n      // if no question Text or img\r\n      if (\r\n        toAddEdit.exam_question_text == null &&\r\n        toAddEdit.exam_question_image == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال او اختيار صوره السؤال\");\r\n        return;\r\n      }\r\n\r\n      // if mcq 1 no text or img\r\n      if (\r\n        choice1.choice_text === null &&\r\n        choice1.choice_image === null &&\r\n        choice1.path == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال الأول او اختيار صورة \");\r\n        return;\r\n      }\r\n\r\n      // if mcq 2 no text or img\r\n      if (\r\n        choice2.choice_text === null &&\r\n        choice2.choice_image === null &&\r\n        choice2.path == null\r\n      ) {\r\n        this.toastr.warning(\"يجب ادخال نص السؤال الثاني او اختيار صورة \");\r\n        return;\r\n      }\r\n\r\n      let mark1 = true;\r\n      let mark2 = true;\r\n      let mark3 = true;\r\n      let mark4 = true;\r\n\r\n      toAddEdit.mcq_choices.forEach((mcq, index) => {\r\n        if (\r\n          (mcq.choice_text != null || mcq.choice_image != null) &&\r\n          mcq.mark == null\r\n        ) {\r\n          this.toastr.warning(\"pleace enter mark for mcq: \" + (index + 1));\r\n          if (index == 0) {\r\n            mark1 = false;\r\n            this.answerOneMarkCtrl?.setValidators([Validators.required]);\r\n          } else {\r\n            mark1 = true;\r\n            this.answerOneMarkCtrl?.clearValidators();\r\n          }\r\n          if (index == 1) {\r\n            mark2 = false;\r\n            this.answerTwoMarkCtrl?.setValidators([Validators.required]);\r\n          } else {\r\n            mark2 = true;\r\n            this.answerTwoMarkCtrl?.clearValidators();\r\n          }\r\n          if (index == 2) {\r\n            mark3 = false;\r\n            this.answerThreeMarkCtrl?.setValidators([Validators.required]);\r\n          } else {\r\n            mark3 = true;\r\n            this.answerThreeMarkCtrl?.clearValidators();\r\n          }\r\n          if (index == 3) {\r\n            mark4 = false;\r\n            this.answerFourMarkCtrl?.setValidators([Validators.required]);\r\n          } else {\r\n            mark4 = true;\r\n            this.answerFourMarkCtrl?.clearValidators();\r\n          }\r\n          return;\r\n        }\r\n      });\r\n\r\n      // console.log(\"toAddEdit\", toAddEdit);\r\n      // console.log(\"myForm\", this.myForm);\r\n      if (mark1 && mark2 && mark3 && mark4) {\r\n        if (this.questionId > 0) {\r\n          this.editMcqQuestion(toAddEdit);\r\n        } else {\r\n          this.addMcqQuestion(toAddEdit);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addSurveyQuestion<IAddedTextExamResponse>(toAddEdit)\r\n        .subscribe((response: any) => {\r\n          //     console.log(\"respooooooonse\", response);\r\n          if (response.returnValue == 200) {\r\n            this.getAllQuestionsByHeadId();\r\n\r\n            this.mainQuestionCtrl?.setValue(null);\r\n            this.questionMarkCtrl?.setValue(null);\r\n            this.questionTypeIdCtrl?.setValue(null);\r\n            this.questionImageCtrl?.setValue(null);\r\n            this.questionTextCtrl?.setValue(null);\r\n            this.questionPerfectAnswerCtrl?.setValue(null);\r\n            this.perfect_answer_attachCtrl?.setValue(null);\r\n            this.unitIdCtrl?.setValue(null);\r\n            this.lessonIdCtrl?.setValue(null);\r\n\r\n            this.myForm.reset();\r\n            this.questionTypeIdCtrl.setValue(2);\r\n            this.resetFileInputs();\r\n            this.submitted = false;\r\n          } else {\r\n            this.toastr.error(response.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  editMcqQuestion(toAddEdit: IAddEditQuestionMcqModel) {\r\n    //console.log(\"editMcqQuestion\", toAddEdit);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .editSurveyQuestion<IQuestionDetailsForEditModel>(toAddEdit)\r\n        .subscribe((response) => {\r\n          //  console.log(\"editMcqQuestion\", response);\r\n          if (response) {\r\n            this.getAllQuestionsByHeadId();\r\n            this.mainQuestionCtrl?.setValue(null);\r\n            this.questionMarkCtrl?.setValue(null);\r\n            this.questionTypeIdCtrl?.setValue(null);\r\n            this.questionImageCtrl?.setValue(null);\r\n            this.questionTextCtrl?.setValue(null);\r\n            this.questionPerfectAnswerCtrl?.setValue(null);\r\n            this.perfect_answer_attachCtrl?.setValue(null);\r\n\r\n            this.unitIdCtrl?.setValue(null);\r\n            this.lessonIdCtrl?.setValue(null);\r\n            this.myForm.reset();\r\n            this.questionTypeIdCtrl.setValue(2);\r\n            this.resetFileInputs();\r\n            this.submitted = false;\r\n\r\n            this.questionId = 0; // return to add mode\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  getQuestionForEditByID(questionId: number) {\r\n    //  console.log('questionIddddddddddddddd', questionId);\r\n    this.spinner.show();\r\n    this.examService\r\n      .getQuestionForEditByID<IQuestionDetailsForEditModel>(questionId)\r\n      .subscribe((response) => {\r\n        //console.log(\"getQuestionForEditByID\", response);\r\n        if (response) {\r\n          this.mainQuestionCtrl?.setValue(response.main_question);\r\n          this.questionMarkCtrl?.setValue(response.mark);\r\n          this.questionTextCtrl?.setValue(response.question_text);\r\n          this.questionImageCtrl?.setValue(\r\n            response?.attach_path != null\r\n              ? this.fileService.previewPicture(response?.attach_path)\r\n              : null\r\n          );\r\n          // this.questionFile.FileAsBase64 = response.attach_path;\r\n          this.questionTypeIdCtrl?.setValue(response.question_type_id);\r\n          this.questionId = questionId;\r\n\r\n          //Mcq\r\n          if (response.question_type_id == 2) {\r\n            this.answerOneIdCtrl?.setValue(response.MCQ_Choices[0]?.Id);\r\n            this.answerOneCtrl?.setValue(response.MCQ_Choices[0]?.Text);\r\n            this.answerOneMarkCtrl?.setValue(response.MCQ_Choices[0]?.Mark);\r\n            this.answerOneImageCtrl?.setValue(\r\n              response?.MCQ_Choices[0]?.Image != null\r\n                ? this.fileService.previewPicture(response?.MCQ_Choices[0]?.Image)\r\n                : null\r\n            );\r\n            this.answerOneIsCorrectCtrl?.setValue(\r\n              response.MCQ_Choices[0]?.Is_Correct\r\n            );\r\n            this.oneIsCorrect = response.MCQ_Choices[0]?.Is_Correct;\r\n\r\n            this.answerTwoIdCtrl?.setValue(response.MCQ_Choices[1]?.Id);\r\n            this.answerTwoCtrl?.setValue(response.MCQ_Choices[1]?.Text);\r\n            this.answerTwoMarkCtrl?.setValue(response.MCQ_Choices[1]?.Mark);\r\n            this.answerTwoImageCtrl?.setValue(\r\n              response?.MCQ_Choices[1]?.Image != null\r\n                ? this.fileService.previewPicture(response?.MCQ_Choices[1]?.Image)\r\n                : null\r\n            );\r\n            //  this.answerTwoImageCtrl?.setValue(response.MCQ_Choices[1].Image);\r\n            // this.answerTwoFile.FileAsBase64 = response.MCQ_Choices[1].Image;\r\n            this.answerTwoIsCorrectCtrl?.setValue(\r\n              response.MCQ_Choices[1]?.Is_Correct\r\n            );\r\n            this.twoIsCorrect = response.MCQ_Choices[1]?.Is_Correct;\r\n\r\n            this.answerThreeIdCtrl?.setValue(response.MCQ_Choices[2]?.Id);\r\n            this.answerThreeCtrl?.setValue(response.MCQ_Choices[2]?.Text);\r\n            this.answerThreeMarkCtrl?.setValue(response.MCQ_Choices[2]?.Mark);\r\n            this.answerThreeImageCtrl?.setValue(\r\n              response?.MCQ_Choices[2]?.Image != null\r\n                ? this.fileService.previewPicture(response?.MCQ_Choices[2]?.Image)\r\n                : null\r\n            );\r\n            // this.answerThreeImageCtrl?.setValue(response.MCQ_Choices[2].Image);\r\n            //  this.answerThreeFile.FileAsBase64 = response.MCQ_Choices[2].Image;\r\n            this.answerThreeIsCorrectCtrl?.setValue(\r\n              response.MCQ_Choices[2]?.Is_Correct\r\n            );\r\n            this.threeIsCorrect = response.MCQ_Choices[2]?.Is_Correct;\r\n\r\n            this.answerFourIdCtrl?.setValue(response.MCQ_Choices[3]?.Id);\r\n            this.answerFourCtrl?.setValue(response.MCQ_Choices[3]?.Text);\r\n            this.answerFourMarkCtrl?.setValue(response.MCQ_Choices[3]?.Mark);\r\n            this.answerFourImageCtrl?.setValue(\r\n              response?.MCQ_Choices[3]?.Image != null\r\n                ? this.fileService.previewPicture(response?.MCQ_Choices[3]?.Image)\r\n                : null\r\n            );\r\n            //  this.answerFourImageCtrl?.setValue(response.MCQ_Choices[3].Image);\r\n            //  this.answerFourFile.FileAsBase64 = response.MCQ_Choices[3].Image;\r\n            this.answerFourIsCorrectCtrl?.setValue(\r\n              response.MCQ_Choices[3]?.Is_Correct\r\n            );\r\n            this.fourIsCorrect = response.MCQ_Choices[3]?.Is_Correct;\r\n          }\r\n\r\n          // console.log(\"answer 1\", this.oneIsCorrect);\r\n          // console.log(\"answer 2\", this.twoIsCorrect);\r\n          // console.log(\"answer 3\", this.threeIsCorrect);\r\n          // console.log(\"answer 4\", this.fourIsCorrect);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamQuestion(questionId: number) {\r\n    let confirmed = confirm(\"هل انت متأكد من الحذف\");\r\n    // console.log('questionId', questionId);\r\n    if (confirmed) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .deleteExamQuestion<any>(questionId)\r\n        .subscribe((response) => {\r\n          // console.log('deleteResponse', response);\r\n          if (response.returnString === \"Done\") {\r\n            let toDeleteIndex = this.questionsInGrid.findIndex(\r\n              (q: any) => q.Id == questionId\r\n            );\r\n            this.questionsInGrid.splice(toDeleteIndex, 1);\r\n          } else this.toastr.info(response.returnString);\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  importFile(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.questionImageCtrl.setValue(fileReder);\r\n        this.questionFile = data;\r\n        //  console.log(\"file selected\", this.questionFile);\r\n      };\r\n    }\r\n  }\r\n\r\n  importOneFile(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.answerOneFile = data;\r\n        this.answerOneImageCtrl.setValue(fileReder);\r\n        //  console.log(\"file selected\", this.answerOneFile);\r\n      };\r\n    }\r\n  }\r\n\r\n  importTwoFile(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.answerTwoFile = data;\r\n        this.answerTwoImageCtrl.setValue(fileReder);\r\n        //  console.log(\"file selected\", this.answerTwoFile);\r\n      };\r\n    }\r\n  }\r\n\r\n  importThreeFile(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.answerThreeFile = data;\r\n        this.answerThreeImageCtrl.setValue(fileReder);\r\n        //  console.log(\"file selected\", this.answerThreeFile);\r\n      };\r\n    }\r\n  }\r\n\r\n  importFourFile(event: any) {\r\n    let fileName = <File>event.target.files[0].name;\r\n    let fileSize = <File>event.target.files[0].size;\r\n    let fileType = <File>event.target.files[0].type;\r\n    let LastModified = <File>event.target.files[0].lastModified;\r\n    let LastModifiedDate = <File>event.target.files[0].lastModifiedDate;\r\n\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        let fileReder = event.target.result;\r\n        let data = {\r\n          FileAsBase64: fileReder,\r\n          name: fileName,\r\n          size: fileSize,\r\n          type: fileType,\r\n          LastModified: LastModified,\r\n          LastModifiedDate: LastModifiedDate,\r\n        };\r\n        this.answerFourFile = data;\r\n        this.answerFourImageCtrl.setValue(fileReder);\r\n        //  console.log(\"file selected\", this.answerFourFile);\r\n      };\r\n    }\r\n  }\r\n\r\n  resetFileInputs() {\r\n    const FileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n    FileInputs.forEach((input: any) => {\r\n      input.value = null;\r\n    });\r\n  }\r\n}\r\n","<!-- <div>\r\n  <div class=\"btn btn-default\" (click)=\"onCancel()\">اغلاق</div>\r\n</div> -->\r\n<h1 mat-dialog-title>{{ \"labels.addSubQuestion\" | translate }}</h1>\r\n<div mat-dialog-content class=\"exam-model-box\">\r\n  <form [formGroup]=\"myForm\" class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <!-- <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>{{ \"labels.mainQuestion\" | translate }} </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"mainQuestion\" />\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              mainQuestionCtrl.invalid &&\r\n              (mainQuestionCtrl.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                mainQuestionCtrl?.errors?.required ||\r\n                mainQuestionCtrl?.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div> -->\r\n\r\n      <!--\r\n      <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.QuestionType\" | translate }}\r\n          </mat-label>\r\n          <mat-select\r\n            formControlName=\"questionTypeId\"\r\n            (selectionChange)=\"questionTypeValidation()\"\r\n          >\r\n\r\n            <mat-option [value]=\"1\">\r\n              {{ \"labels.Article\" | translate }}\r\n            </mat-option>\r\n\r\n            <mat-option [value]=\"2\">\r\n              {{ \"labels.Mcq\" | translate }}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              questionTypeIdCtrl?.invalid &&\r\n              (questionTypeIdCtrl?.touched || submitted)\r\n            \"\r\n          >\r\n            <span *ngIf=\"questionTypeIdCtrl?.errors?.required\">\r\n              {{ \"labels.MustChoosevalue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div> -->\r\n\r\n      <!-- <div class=\"col-md-4 col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.answerMark\" | translate }}\r\n          </mat-label>\r\n          <input matInput type=\"number\" formControlName=\"questionMark\" />\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              questionMarkCtrl.invalid &&\r\n              (questionMarkCtrl.touched || submitted)\r\n            \"\r\n          >\r\n            <span *ngIf=\"questionMarkCtrl.errors?.required\">\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n            <span *ngIf=\"questionMarkCtrl.errors?.bigZero\">\r\n              {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div> -->\r\n\r\n      <!--\r\n    <div class=\"col-md-6 col-12\" *ngIf=\"unitId == 0\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n        <mat-select\r\n          formControlName=\"unitId\"\r\n          (selectionChange)=\"getAllLessonsByUnitId()\"\r\n        >\r\n          <mat-option>{{ \"General.Choose\" | translate }}</mat-option>\r\n          <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n            {{ unit.unit_ar_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-12\" *ngIf=\"lessonId == 0\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n        <mat-select formControlName=\"lessionId\">\r\n          <mat-option>\r\n            {{ \"General.Choose\" | translate }}\r\n          </mat-option>\r\n          <mat-option *ngFor=\"let lesson of lessions\" [value]=\"lesson.id\">\r\n            {{ lesson.lesson_ar_name }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div> -->\r\n\r\n      <!-- question text -->\r\n      <div class=\"col-12\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>{{ \"labels.question_ar_text\" | translate }} </mat-label>\r\n          <textarea\r\n            matInput\r\n            type=\"text\"\r\n            formControlName=\"exam_question_text\"\r\n          ></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- question text Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>{{ \"labels.question_ar_text\" | translate }} </mat-label>\r\n        <quill-editor\r\n          formControlName=\"exam_question_text\"\r\n          [placeholder]=\"'labels.question_ar_text' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <div class=\"col-12\">\r\n        <!-- Question Picture -->\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.QuestionImage\" | translate }}\r\n            </mat-label>\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              name=\"questionImage\"\r\n              accept=\"image/*\"\r\n              (change)=\"importFile($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-md-8 col-12\">\r\n            <div class=\"question-img\">\r\n              <mat-checkbox\r\n                *ngIf=\"questionImageCtrl.value\"\r\n                formControlName=\"remove_image\"\r\n                [value]=\"true\"\r\n                class=\"remove_image\"\r\n              >\r\n                Remove Image\r\n              </mat-checkbox>\r\n              <img class=\"img-fluid\" [src]=\"questionImageCtrl?.value\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Perfect Answer  -->\r\n      <!-- <div class=\"col-12\" *ngIf=\"questionTypeIdCtrl?.value == 1\">\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>\r\n            {{ \"labels.perfect_answer\" | translate }}\r\n          </mat-label>\r\n          <input matInput type=\"text\" formControlName=\"questionPerfectAnswer\" />\r\n          <mat-hint\r\n            class=\"text-danger\"\r\n            *ngIf=\"\r\n              questionPerfectAnswerCtrl.invalid &&\r\n              (questionPerfectAnswerCtrl.touched || submitted)\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                questionPerfectAnswerCtrl?.errors?.required ||\r\n                questionPerfectAnswerCtrl?.errors?.whiteSpace\r\n              \"\r\n            >\r\n              {{ \"labels.mustEnterValue\" | translate }}\r\n            </span>\r\n          </mat-hint>\r\n        </mat-form-field>\r\n      </div> -->\r\n\r\n      <!--  perfect Answer Editor -->\r\n      <!-- <div class=\"col-12\">\r\n        <mat-label>\r\n          {{ \"labels.perfect_answer\" | translate }}\r\n        </mat-label>\r\n        <quill-editor\r\n          formControlName=\"questionPerfectAnswer\"\r\n          [placeholder]=\"'labels.perfect_answer' | translate\"\r\n        >\r\n        </quill-editor>\r\n      </div> -->\r\n\r\n      <!-- perfect answer attach-->\r\n      <!-- <div class=\"col-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4 col-12\">\r\n            <mat-label>\r\n              {{ \"labels.perfectAnswerAttach\" | translate }}\r\n            </mat-label>\r\n            <input\r\n              class=\"form-control font-dro clearInputs\"\r\n              type=\"file\"\r\n              accept=\"xlsx,.xls,image/*,audio/*,.pdf\"\r\n              (change)=\"perfectAnswerAttach($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"col-md-8 col-12\">\r\n            <div class=\"question-img\">\r\n              <iframe\r\n                [src]=\"perfect_answer_attachCtrl.value | safe\"\r\n                width=\"100%\"\r\n                class=\"border-0 img-fluid\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n\r\n    <hr />\r\n\r\n    <ng-container *ngIf=\"questionTypeIdCtrl?.value == 2\" class=\"row\">\r\n      <!-- answer one -->\r\n      <mat-card>\r\n        <!-- <mat-radio-group formControlName=\"answerOneIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"0\"\r\n            [checked]=\"oneIsCorrect\"\r\n            (click)=\"onSelectCorrect(0)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group> -->\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (1)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.answerMark\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"answerOneMark\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    answerOneMarkCtrl.invalid &&\r\n                    (answerOneMarkCtrl.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"answerOneMarkCtrl.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"answerOneMarkCtrl.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.AnswerText\" | translate }} (1)\r\n                </mat-label>\r\n\r\n                <input matInput type=\"text\" formControlName=\"answerOne\" />\r\n              </mat-form-field>\r\n\r\n              <!-- answer  one Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (1) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerOne\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (1)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerOneImage\"\r\n                    (change)=\"importOneFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <mat-checkbox\r\n                    *ngIf=\"answerOneImageCtrl.value\"\r\n                    formControlName=\"answerOneRemove_image\"\r\n                    [value]=\"true\"\r\n                    class=\"remove_image\"\r\n                  >\r\n                    Remove Image\r\n                  </mat-checkbox>\r\n                  <div class=\"question-img\">\r\n                    <img class=\"img-fluid\" [src]=\"answerOneImageCtrl.value\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Two -->\r\n      <mat-card>\r\n        <!-- <mat-radio-group formControlName=\"answerTwoIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"1\"\r\n            [checked]=\"twoIsCorrect\"\r\n            (click)=\"onSelectCorrect(1)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group> -->\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (2)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.answerMark\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"answerTwoMark\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    answerTwoMarkCtrl.invalid &&\r\n                    (answerTwoMarkCtrl.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"answerTwoMarkCtrl.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"answerTwoMarkCtrl.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.AnswerText\" | translate }} (2)\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"answerTwo\" />\r\n              </mat-form-field>\r\n\r\n              <!-- answer two Editor-->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (2) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerTwo\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (2)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerTwoImage\"\r\n                    (change)=\"importTwoFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"answerTwoImageCtrl.value\"\r\n                      formControlName=\"answerTwoRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n                    <img class=\"img-fluid\" [src]=\"answerTwoImageCtrl.value\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Three -->\r\n      <mat-card>\r\n        <!-- <mat-radio-group formControlName=\"answerThreeIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"2\"\r\n            [checked]=\"threeIsCorrect\"\r\n            (click)=\"onSelectCorrect(2)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group> -->\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (3)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.answerMark\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  formControlName=\"answerThreeMark\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    answerThreeMarkCtrl.invalid &&\r\n                    (answerThreeMarkCtrl.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"answerThreeMarkCtrl.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"answerThreeMarkCtrl.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.AnswerText\" | translate }} (3)\r\n                </mat-label>\r\n\r\n                <input matInput type=\"text\" formControlName=\"answerThree\" />\r\n              </mat-form-field>\r\n\r\n              <!-- answer three  Editor-->\r\n              <!--\r\n              <mat-label> {{ \"labels.AnswerText\" | translate }} (3) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerThree\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (3)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerThreeImage\"\r\n                    (change)=\"importThreeFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"answerThreeImageCtrl.value\"\r\n                      formControlName=\"answerThreeRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n\r\n                    <img class=\"img-fluid\" [src]=\"answerThreeImageCtrl.value\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- answer Four -->\r\n      <mat-card>\r\n        <!-- <mat-radio-group formControlName=\"answerFourIsCorrect\">\r\n          <mat-radio-button\r\n            [value]=\"3\"\r\n            [checked]=\"fourIsCorrect\"\r\n            (click)=\"onSelectCorrect(3)\"\r\n          >\r\n          </mat-radio-button>\r\n        </mat-radio-group> -->\r\n\r\n        <mat-card-subtitle>\r\n          {{ \"labels.AnswerNumber\" | translate }} (4)\r\n        </mat-card-subtitle>\r\n        <mat-card-content>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.answerMark\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  formControlName=\"answerFourMark\"\r\n                />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    answerFourMarkCtrl.invalid &&\r\n                    answerFourMarkCtrl.invalid &&\r\n                    (answerFourMarkCtrl.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"answerFourMarkCtrl.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                  <span *ngIf=\"answerFourMarkCtrl.errors?.bigZero\">\r\n                    {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.AnswerText\" | translate }} (4)\r\n                </mat-label>\r\n                <input matInput type=\"text\" formControlName=\"answerFour\" />\r\n              </mat-form-field>\r\n\r\n              <!-- answer four Editor -->\r\n              <!-- <mat-label> {{ \"labels.AnswerText\" | translate }} (4) </mat-label>\r\n              <quill-editor\r\n                formControlName=\"answerFour\"\r\n                [placeholder]=\"'labels.AnswerText' | translate\"\r\n              >\r\n              </quill-editor> -->\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <!-- Question Pic -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.AnswerPic\" | translate }}\r\n                    (4)\r\n                  </mat-label>\r\n\r\n                  <label for=\"radio-0\">\r\n                    <i class=\"icon icon_radio\"></i>\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control font-dro clearInputs\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    name=\"answerFourImage\"\r\n                    (change)=\"importFourFile($event)\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-md-8 col-12\">\r\n                  <div class=\"question-img\">\r\n                    <mat-checkbox\r\n                      *ngIf=\"answerFourImageCtrl.value\"\r\n                      formControlName=\"answerFourRemove_image\"\r\n                      [value]=\"true\"\r\n                      class=\"remove_image\"\r\n                    >\r\n                      Remove Image\r\n                    </mat-checkbox>\r\n                    <img class=\"img-fluid\" [src]=\"answerFourImageCtrl.value\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </ng-container>\r\n\r\n    <mat-card-actions class=\"col-12\">\r\n      <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-primary bg-light-info\"\r\n        (click)=\"onSubmit()\"\r\n        *ngIf=\"questionId == 0\"\r\n      >\r\n        <i class=\"fa fa-plus\"></i>\r\n        {{ \"General.Add\" | translate }}\r\n      </button>\r\n      <!-- <button\r\n        mat-raised-button\r\n        id=\"examQuestionsButton\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"resetFileInputs()\"\r\n      >\r\n        reset\r\n      </button> -->\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"onSubmit()\"\r\n        id=\"editQuestionButton\"\r\n        class=\"btn btn-primary\"\r\n        *ngIf=\"questionId > 0\"\r\n      >\r\n        {{ \"General.Update\" | translate }}\r\n      </button>\r\n    </mat-card-actions>\r\n\r\n    <div class=\"col-md-12\">\r\n      <div class=\"full-wid-table\" style=\"overflow: hidden !important\">\r\n        <table\r\n          class=\"table table-striped table-hover table-full-width rtl\"\r\n          id=\"sotbmod\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>{{ \"labels.question_ar_text\" | translate }}</th>\r\n              <!-- <th>{{ \"labels.QuestionImage\" | translate }}</th> -->\r\n              <th>{{ \"labels.QuestionType\" | translate }}</th>\r\n              <th>­</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"addedExamQuestionsHolder\">\r\n            <tr id=\"ExamQuestion-2626853\" *ngFor=\"let ques of questionsInGrid\">\r\n              <td>{{ ques.ExamQuestId }}</td>\r\n              <td>{{ ques.Text }}</td>\r\n              <!-- <td>\r\n                <a\r\n                  *ngIf=\"ques.Image != null || ques.Image != ''; else noImg\"\r\n                  [href]=\"ques.Image\"\r\n                  target=\"_blank\"\r\n                >\r\n                  عرض\r\n                </a>\r\n                <span #noImg>لايوجد صورة</span>\r\n              </td> -->\r\n              <td>{{ ques.QuestionTypeAr }}</td>\r\n              <td>\r\n                <button\r\n                  (click)=\"getQuestionForEditByID(ques.ExamQuestId)\"\r\n                  mat-mini-fab\r\n                  color=\"primary\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n\r\n                <button\r\n                  (click)=\"removeExamQuestion(ques.ExamQuestId)\"\r\n                  mat-mini-fab\r\n                  color=\"warn\"\r\n                >\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button class=\"btn-danger\" mat-raised-button mat-dialog-close>Close</button>\r\n</div>\r\n<ngx-spinner></ngx-spinner>\r\n","import { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport {\r\n  IExamResponse,\r\n  IExamResponseInDetails,\r\n} from \"../../../../models/admin/addEditExam\";\r\nimport { DatePipe, Location } from \"@angular/common\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthService } from \"../../../../../shared/services/auth/auth.service\";\r\nimport { ExamsService } from \"../../../../services/Admin/exams.service\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport {\r\n  ICountrieDropModel,\r\n  IDiscountTypeModel,\r\n  IEducationYearDropModel,\r\n  IExamTypeModel,\r\n  ILessionModel,\r\n  IStageDropModel,\r\n  ISubjectDropModel,\r\n  ITeacherDropModel,\r\n  IUnitModel,\r\n} from \"../../../../models/admin/exam\";\r\nimport {\r\n  IAddEditExamHeaderModel,\r\n  IAddEditExamModel,\r\n} from \"../../../../models/admin/addEditExam\";\r\nimport { forkJoin, Observable } from \"rxjs\";\r\nimport {\r\n  IAddExamGroupHeaderModel,\r\n  IEditExamGroupHeaderModel,\r\n  IExamGroupHeaderModel,\r\n  IExamModel,\r\n} from \"../../../../models/admin/AddExamGroupHeader\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { AddSurvaySubQuestionComponent } from \"../add-sub-question/add-sub-question.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-survey\",\r\n  templateUrl: \"./add-survey.component.html\",\r\n  styleUrls: [\"./add-survey.component.scss\"],\r\n})\r\nexport class AddSurveyComponent implements OnInit {\r\n  functionId: number;\r\n  parentId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  EduCompId: any;\r\n  branchId: any;\r\n  countries: ICountrieDropModel[] = [];\r\n  stages: IStageDropModel[] = [];\r\n  educationYears: IEducationYearDropModel[] = [];\r\n  subjects: ISubjectDropModel[] = [];\r\n  teachers: teacherByEduCompId[];\r\n  examTypes: IExamTypeModel[] = [];\r\n\r\n  units: IUnitModel[] = [];\r\n  lessions: ILessionModel[] = [];\r\n  discountTypes: IDiscountTypeModel[] = [];\r\n\r\n  examGroups: any[] = [];\r\n  examHeaders: any[] = [];\r\n  filteredExamGroups: Observable<any[]>;\r\n  filteredExamHeaders: Observable<any[]>;\r\n\r\n  GroupsHeadersList: IExamGroupHeaderModel[] = [];\r\n  type: number;\r\n  subId: number;\r\n  examGroupHeaderIdToEdit: number = 0;\r\n  exam_ar_name: string;\r\n  myForm!: FormGroup;\r\n  displayedColumns: string[] = [\r\n    \"#\",\r\n    \"questionNumber\",\r\n    \"questionType\",\r\n    \"question_title\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<IExamGroupHeaderModel>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  GroupHeadersForm!: FormGroup;\r\n  submitted = false;\r\n  itemsCount: any;\r\n  GroupHeadsubmitted = false;\r\n  examId: number = 0;\r\n  editGroupHeaderMode: boolean = false;\r\n  isRepeatableExam: boolean = false;\r\n  isSendWhats: boolean = false;\r\n  examGroupHeaderId: any = 0;\r\n  get countryIdCtrl() {\r\n    return this.myForm.get(\"countryId\");\r\n  }\r\n  get stageIdCtrl() {\r\n    return this.myForm.get(\"stageId\");\r\n  }\r\n  get educationYearIdCtrl() {\r\n    return this.myForm.get(\"educationYearId\");\r\n  }\r\n  get subjectIdCtrl() {\r\n    return this.myForm.get(\"subjectId\");\r\n  }\r\n  get teacherUserIdCtrl() {\r\n    return this.myForm.get(\"teacherUserId\");\r\n  }\r\n  get examTypeIdCtrl() {\r\n    return this.myForm.get(\"examTypeId\");\r\n  }\r\n  get unitIdCtrl() {\r\n    return this.myForm.get(\"unitId\");\r\n  }\r\n  get lessionIdCtrl() {\r\n    return this.myForm.get(\"lessionId\");\r\n  }\r\n  get examNameCtrl() {\r\n    return this.myForm.get(\"examName\");\r\n  }\r\n  get examHoursCtrl() {\r\n    return this.myForm.get(\"examHours\");\r\n  }\r\n  get examMinutesCtrl() {\r\n    return this.myForm.get(\"examMinutes\");\r\n  }\r\n  get examPriceCtrl() {\r\n    return this.myForm.get(\"examPrice\");\r\n  }\r\n  get discountCtrl() {\r\n    return this.myForm.get(\"discount\");\r\n  }\r\n  get discountTypeCtrl() {\r\n    return this.myForm.get(\"discountType\");\r\n  }\r\n  get fromDateCtrl() {\r\n    return this.myForm.get(\"fromDate\");\r\n  }\r\n  get toDateCtrl() {\r\n    return this.myForm.get(\"toDate\");\r\n  }\r\n  get formHourCtrl() {\r\n    return this.myForm.get(\"formHour\");\r\n  }\r\n  get toHoursCtrl() {\r\n    return this.myForm.get(\"toHours\");\r\n  }\r\n  get resualtDateCtrl() {\r\n    return this.myForm.get(\"resualtDate\");\r\n  }\r\n  get resualtTimeCtrl() {\r\n    return this.myForm.get(\"resualtTime\");\r\n  }\r\n  get canSellIndividuallyCtrl() {\r\n    return this.myForm.get(\"canSellIndividually\");\r\n  }\r\n  get isRepeatableCtrl() {\r\n    return this.myForm.get(\"isRepeatable\");\r\n  }\r\n  get repeatNumbersCtrl() {\r\n    return this.myForm.get(\"repeatNumbers\");\r\n  }\r\n  get repeatingPriceCtrl() {\r\n    return this.myForm.get(\"repeatingPrice\");\r\n  }\r\n  get hasCustomDiscountCtrl() {\r\n    return this.myForm.get(\"hasCustomDiscount\");\r\n  }\r\n  get sendWhatsAppMsgCtrl() {\r\n    return this.myForm.get(\"sendWhatsAppMsg\");\r\n  }\r\n  get examGroupCtrl() {\r\n    return this.GroupHeadersForm.get(\"examGroup\");\r\n  }\r\n  get examHeaderCtrl() {\r\n    return this.GroupHeadersForm.get(\"examHeader\");\r\n  }\r\n  get examContentCtrl() {\r\n    return this.GroupHeadersForm.get(\"examContent\");\r\n  }\r\n  get isPublishCtrl() {\r\n    return this.myForm.get(\"isPublish\");\r\n  }\r\n\r\n  constructor(\r\n    public location: Location,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private examService: ExamsService,\r\n    // private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private msg: ToastrService,\r\n    private generalService: GeneralService,\r\n    private dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.type = Number(params.get(\"typeId\"));\r\n    });\r\n    route.paramMap.subscribe((params) => {\r\n      this.subId = Number(params.get(\"courseId\"));\r\n    });\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.examId = Number(params.get(\"examId\"));\r\n      if (this.examId > 0) {\r\n        this.getExamById();\r\n        this.getAllGroupHeaderByExamId();\r\n      }\r\n\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.parentId = Number(params.get(\"parentId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      // countryId: [\"\"],\r\n      // stageId: [\"\"],\r\n      // educationYearId: [\"\"],\r\n      // subjectId: [\"\", [Validators.required]],\r\n      // teacherUserId: [\"\", [Validators.required]],\r\n      //  examTypeId: [\"\", [Validators.required]],\r\n      // unitId: [\"\"],\r\n      // lessionId: [\"\"],\r\n      examName: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      examHours: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      examMinutes: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      // examPrice: [0, [Validators.required, CustomeValidator.minusNum]],\r\n      // discount: [\"\"],\r\n      // discountType: [\"\"],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n      formHour: [\"\"],\r\n      toHours: [\"\"],\r\n      // resualtDate: [\"\"],\r\n      // resualtTime: [\"\"],\r\n      // canSellIndividually: [true, Validators.required],\r\n      // isRepeatable: [false, Validators.required],\r\n      // repeatNumbers: [\"\"],\r\n      // repeatingPrice: [0],\r\n      // hasCustomDiscount: [false, Validators.required],\r\n      // sendWhatsAppMsg: [false, Validators.required],\r\n      // isPublish: [0],\r\n    });\r\n\r\n    this.GroupHeadersForm = this.fb.group({\r\n      examGroup: [\"\", Validators.required],\r\n      examHeader: [\"\", Validators.required],\r\n      examContent: [\"\"],\r\n    });\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.stageIdCtrl?.disable();\r\n    this.educationYearIdCtrl?.disable();\r\n    this.subjectIdCtrl?.disable();\r\n    this.teacherUserIdCtrl?.disable();\r\n    this.unitIdCtrl?.disable();\r\n    this.lessionIdCtrl?.disable();\r\n\r\n    this.getAllCountieres();\r\n    this.getAllExamTypes();\r\n    this.getAllQuestionGroups();\r\n    this.getAllQuestionHeaders();\r\n\r\n    this.examTypeValidator();\r\n    this.RepeatableValidator();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    if (this.examId > 0) this.getExamById();\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  // filter question group\r\n  private filter_question_group(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examGroups.filter((option) =>\r\n      option.question_group_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  // filter question header\r\n  private filter_question_header(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.examHeaders.filter((option) =>\r\n      option.question_head_ar_name.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  getExamById() {\r\n    this.spinner.show();\r\n    this.examService\r\n      .getExamById<IExamResponseInDetails>(this.examId)\r\n      .subscribe((response) => {\r\n        // console.log(\"getExamById\", response);\r\n        if (response) {\r\n          // this.stageIdCtrl?.enable();\r\n          // this.educationYearIdCtrl?.enable();\r\n          // this.subjectIdCtrl?.enable();\r\n          // this.teacherUserIdCtrl?.enable();\r\n          // this.unitIdCtrl?.enable();\r\n          // this.lessionIdCtrl?.enable();\r\n\r\n          this.toHoursCtrl?.setValue(response?.toHour);\r\n          // this.isPublishCtrl?.setValue(response?.isPublish);\r\n          // this.discountCtrl?.setValue(response?.Discount);\r\n          this.examNameCtrl?.setValue(response?.exam_ar_name);\r\n          this.exam_ar_name = response?.exam_ar_name;\r\n          this.formHourCtrl?.setValue(response?.fromHour);\r\n          // this.examPriceCtrl?.setValue(response?.price);\r\n          // this.resualtTimeCtrl?.setValue(response?.ResultTime);\r\n          // this.discountTypeCtrl?.setValue(response?.DiscountType);\r\n          // this.isRepeatableCtrl?.setValue(response?.repeatableExam);\r\n          // this.isRepeatableExam = response?.repeatableExam;\r\n          // this.repeatNumbersCtrl?.setValue(response?.repeatableExam_Count);\r\n          // this.sendWhatsAppMsgCtrl?.setValue(response?.SendWhatsApp);\r\n          // this.isSendWhats = response?.SendWhatsApp;\r\n          // this.hasCustomDiscountCtrl?.setValue(response?.Discount > 0);\r\n          this.canSellIndividuallyCtrl?.setValue(\r\n            response?.Individually_Purchased\r\n          );\r\n          // this.countryIdCtrl?.setValue(response.countryId);\r\n          //  this.examTypeIdCtrl?.setValue(response.examTypeId);\r\n          // this.repeatingPriceCtrl?.setValue(response.StudentRepeatExamCost);\r\n\r\n          let exam_minute = response.exam_period_minute % 60;\r\n          let exam_hour = (response.exam_period_minute - exam_minute) / 60;\r\n          this.examMinutesCtrl?.setValue(exam_minute);\r\n          this.examHoursCtrl?.setValue(exam_hour);\r\n\r\n          // if (response.Lesson_ID != null) this.examTypeIdCtrl?.setValue(1);\r\n          // if (response?.Unit_ID != null && response.Lesson_ID == null)\r\n          //   this.examTypeIdCtrl?.setValue(2);\r\n\r\n          if (\r\n            response?.Subject_ID != null\r\n            // response?.Unit_ID == null &&\r\n            // response.Lesson_ID == null\r\n          )\r\n            if (\r\n              response?.Subject_ID == null &&\r\n              // response?.Unit_ID == null &&\r\n              // response.Lesson_ID == null &&\r\n              response.quiz == 1\r\n            )\r\n              // this.examTypeIdCtrl?.setValue(3);\r\n\r\n              this.examTypeIdCtrl?.setValue(4);\r\n\r\n          this.fromDateCtrl?.setValue(response.Avilable_Date_From);\r\n          this.toDateCtrl?.setValue(response.Avilable_Date_To);\r\n          // this.resualtDateCtrl?.setValue(response.ResultDate);\r\n\r\n          // this.countryIdCtrl?.setValue(1);\r\n          // this.onSelectCountry();\r\n          // this.stageIdCtrl?.setValue(response.stageId);\r\n          // this.onSelectStages();\r\n          // this.educationYearIdCtrl?.setValue(response.eduYearId);\r\n          // this.onSelectEducationYears();\r\n          // this.subjectIdCtrl?.setValue(response?.main_subject_id);\r\n          // this.onSelectSubjects();\r\n          // this.teacherUserIdCtrl?.setValue(response?.teacherUserId);\r\n          // this.unitIdCtrl?.setValue(response?.Unit_ID);\r\n\r\n          // this.onSelectUnit();\r\n          // this.lessionIdCtrl?.setValue(response?.Lesson_ID);\r\n\r\n          // this.stageIdCtrl?.setValue(response.stageId);\r\n          // this.educationYearIdCtrl?.setValue(response.eduYearId);\r\n          // this.teacherUserIdCtrl?.setValue(response?.teacherUserId);\r\n          // this.unitIdCtrl?.setValue(response?.Unit_ID);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  getAllGroupHeaderByExamId() {\r\n    this.examService\r\n      .getAllGroupHeaderByExamId<IExamGroupHeaderModel>(this.examId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //  console.log(\"groupsHeadersLit : \", response);\r\n          this.GroupsHeadersList = response;\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.itemsCount = response.length;\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllQuestionGroups() {\r\n    this.examService.getAllQuestionGroups<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examGroups = response;\r\n        //  console.log(\"examGroups\", this.examGroups);\r\n        this.filteredExamGroups = this.examGroupCtrl.valueChanges.pipe(\r\n          startWith(\"\"),\r\n          map((value) => this.filter_question_group(value || \"\"))\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllQuestionHeaders() {\r\n    this.examService.getAllQuestionHeaders<any>().subscribe((response) => {\r\n      if (response) {\r\n        this.examHeaders = response;\r\n        this.filteredExamHeaders = this.examHeaderCtrl.valueChanges.pipe(\r\n          startWith(\"\"),\r\n          map((value) => this.filter_question_header(value || \"\"))\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    // todo .. check for mandatory firlds\r\n    let exam: IAddEditExamModel = {\r\n      id: this.examId,\r\n      Avilable_Date_From: this.datePipe.transform(this.fromDateCtrl?.value),\r\n      Avilable_Date_To: this.datePipe.transform(this.toDateCtrl.value),\r\n      // CustomDiscountApplied: this.hasCustomDiscountCtrl?.value,\r\n      // Discount: this.discountCtrl?.value,\r\n      // DiscountType: this.discountTypeCtrl?.value,\r\n      EduCompId: this.EduCompId,\r\n      // Individually_Purchased: this.canSellIndividuallyCtrl?.value,\r\n      // ResultDate: this.datePipe.transform(this.resualtDateCtrl.value),\r\n      // ResultTime: this.resualtTimeCtrl?.value,\r\n      // SendWhatsApp: this.sendWhatsAppMsgCtrl?.value,\r\n      // StudentRepeatExamCost: this.repeatingPriceCtrl?.value,\r\n      exam_ar_name: this.examNameCtrl?.value,\r\n      fromHour: this.formHourCtrl?.value,\r\n      // lesson_ID: this.lessionIdCtrl?.value,\r\n      // price: this.examPriceCtrl?.value,\r\n      // repeatableExam: this.isRepeatableCtrl?.value,\r\n      // repeatableExam_Count: this.repeatNumbersCtrl?.value,\r\n      Subject_ID: this.subId,\r\n      // teacherUserId: this.teacherUserIdCtrl?.value,\r\n      // teacher_subject_id: this.subjectIdCtrl?.value,\r\n      toHour: this.toHoursCtrl?.value,\r\n      // unit_ID: this.unitIdCtrl?.value,\r\n      // exam_hour: this.examHoursCtrl?.value,\r\n      // exam_minute: this.examMinutesCtrl?.value,\r\n      // isPublish: this.isPublishCtrl?.value,\r\n      exam_type_id: this.type,\r\n    };\r\n\r\n    let toAddEdit: IAddEditExamHeaderModel = {\r\n      exam_hour: this.examHoursCtrl?.value,\r\n      exam_minute: this.examMinutesCtrl?.value,\r\n      // exam_type_id: this.type,\r\n      exam: exam,\r\n    };\r\n\r\n    console.log(\"toAdd \", toAddEdit);\r\n\r\n    // if exam id = 0 the end point will add >> if the exam id > 0 the end point will edit\r\n    this.addExam(toAddEdit);\r\n  }\r\n\r\n  addExam(toAddEdit: IAddEditExamHeaderModel) {\r\n    let validGroupHeadersForm = this.GroupHeadersForm.valid;\r\n\r\n    this.submitted = true;\r\n    if (this.examId == 0 && !validGroupHeadersForm) {\r\n      this.GroupHeadsubmitted = true;\r\n    } else {\r\n      // if (\r\n      //   this.hasCustomDiscountCtrl?.value == true &&\r\n      //   this.repeatNumbersCtrl.value <= 0\r\n      // ) {\r\n      //   this.msg.warning(\"يجب ادخال عدد مرات التكرار\");\r\n      //   return;\r\n      // }\r\n\r\n      // if (\r\n      //   this.hasCustomDiscountCtrl?.value == true &&\r\n      //   this.repeatingPriceCtrl.value < 0\r\n      // ) {\r\n      //   this.msg.warning(\"يجب ادخال سعر تجديد الامتحان \");\r\n      //   return;\r\n      // }\r\n\r\n      if (this.myForm.valid) {\r\n        this.spinner.show();\r\n        this.examService\r\n          .addExam<IAddEditExamHeaderModel, any>(toAddEdit)\r\n          .subscribe((response) => {\r\n            if (response.returnValue == 1 && response.examId > 0) {\r\n              console.log(\"addExam\", response);\r\n              this.examId = response.examId;\r\n              this.router.navigate([], {\r\n                queryParams: {\r\n                  examId: response.examId,\r\n                },\r\n                queryParamsHandling: \"merge\",\r\n              });\r\n              this.onAddExamGroupHeader();\r\n\r\n              this.msg.success(\"Done\");\r\n              this.submitted = false;\r\n              // this.examId=0;\r\n              // this.myForm.reset();\r\n            }\r\n            this.spinner.hide();\r\n          });\r\n      } else this.msg.error(\"Check your inputs\");\r\n    }\r\n  }\r\n\r\n  onAddExamGroupHeader() {\r\n    // let sameGroupWithSameHeader = this.GroupsHeadersList.find(\r\n    //   (gh) =>\r\n    //     gh.group_name == this.examGroupCtrl?.value &&\r\n    //     gh.head_name == this.examHeaderCtrl?.value\r\n    // );\r\n    let sameGroupWithSameHeader = this.dataSource?.data?.find(\r\n      (gh) =>\r\n        gh.group_name == this.examGroupCtrl?.value &&\r\n        gh.head_name == this.examHeaderCtrl?.value\r\n    );\r\n\r\n    if (sameGroupWithSameHeader) {\r\n      this.msg.info(\"Cannot add the same header with same group\");\r\n      return;\r\n    }\r\n\r\n    let tempExam: IExamModel = {\r\n      id: this.examId,\r\n    };\r\n\r\n    let ToAddExamGroupHeader: IAddExamGroupHeaderModel = {\r\n      exam_question_group_text: this.examGroupCtrl?.value,\r\n      exam_question_head_title: this.examContentCtrl?.value,\r\n      exam_question_head_text: this.examHeaderCtrl?.value,\r\n      exam: tempExam,\r\n    };\r\n\r\n    if (this.GroupHeadersForm.valid) {\r\n      this.spinner.show();\r\n      this.examService\r\n        .addExamGroupHeader<IAddExamGroupHeaderModel, any>(ToAddExamGroupHeader)\r\n        .subscribe((headerResponse) => {\r\n          if (headerResponse) {\r\n            //  console.log('addExamGroupHeader', headerResponse);\r\n            this.getAllGroupHeaderByExamId();\r\n            //   this.msg.success(\"تم الإضافة\");\r\n            let tempExcamGroupHeader = {\r\n              Id: headerResponse.exam_question_head_id,\r\n              group_name: this.examGroupCtrl?.value,\r\n              head_name: this.examHeaderCtrl?.value,\r\n              question_title: this.examContentCtrl?.value,\r\n            };\r\n\r\n            //   this.GroupsHeadersList.push(tempExcamGroupHeader);\r\n\r\n            // console.log(\"this.GroupsHeadersList\", this.GroupsHeadersList);\r\n\r\n            this.examContentCtrl?.setValue(null);\r\n            this.spinner.hide();\r\n          }\r\n        });\r\n    } else {\r\n      if (this.examId == 0) this.msg.error(\"Check your inputs\");\r\n    }\r\n  }\r\n\r\n  getExamHeadById(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.editGroupHeaderMode = true;\r\n    this.examGroupHeaderIdToEdit = examGroupHeader.id;\r\n    this.examGroupCtrl?.setValue(examGroupHeader?.questionNumber);\r\n    this.examContentCtrl?.setValue(examGroupHeader?.question_title);\r\n    this.examHeaderCtrl?.setValue(examGroupHeader?.questionType);\r\n  }\r\n\r\n  editExamGroupHead() {\r\n    let toEdit: IEditExamGroupHeaderModel = {\r\n      exam_question_head_id: this.examGroupHeaderIdToEdit,\r\n      group: this.examGroupCtrl?.value,\r\n      head: this.examHeaderCtrl?.value,\r\n      title: this.examContentCtrl?.value,\r\n    };\r\n\r\n    // console.log('toEdit', toEdit);\r\n    this.spinner.show();\r\n    this.examService\r\n      .editExamGroupHeader<IEditExamGroupHeaderModel, any>(toEdit)\r\n      .subscribe((editResponse) => {\r\n        if (editResponse) {\r\n          //   console.log('editResponse', editResponse);\r\n\r\n          let toReplace = this.dataSource.data.find(\r\n            (gh) => gh.id == this.examGroupHeaderIdToEdit\r\n          );\r\n\r\n          if (toReplace) {\r\n            toReplace.questionNumber = toEdit.group;\r\n            toReplace.questionType = toEdit.head;\r\n            toReplace.question_title = this.examContentCtrl?.value;\r\n          }\r\n\r\n          this.editGroupHeaderMode = false;\r\n          this.examContentCtrl?.setValue(null);\r\n          this.msg.success(\"تم التعديل بنجاح\");\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  removeExamGroupHead(examGroupHeader: IExamGroupHeaderModel) {\r\n    this.spinner.show();\r\n    this.examService\r\n      .deleteExamGroupHeader(examGroupHeader.id)\r\n      .subscribe((deleteResponse: any) => {\r\n        // console.log('deleteResponse', deleteResponse);\r\n        if (deleteResponse.returnValue == 1) {\r\n          let todeleteIndex = this.dataSource.data.findIndex(\r\n            (gh) => gh == examGroupHeader\r\n          );\r\n\r\n          this.dataSource.data.splice(todeleteIndex, 1);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.msg.success(\"تم الحذف\");\r\n        } else this.msg.error(deleteResponse.returnString);\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  openDeleateDialog(examGroupHeader: IExamGroupHeaderModel): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: examGroupHeader.questionNumber,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.removeExamGroupHead(examGroupHeader);\r\n      });\r\n  }\r\n\r\n  addSubQuestionDialog(groupHeader: IExamGroupHeaderModel): void {\r\n    console.log(groupHeader);\r\n    this.dialog\r\n      .open(AddSurvaySubQuestionComponent, {\r\n        data: {\r\n          examId: this.examId,\r\n          examGroupHeaderId: groupHeader.id,\r\n          subjectId: this.subId,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) {\r\n        }\r\n      });\r\n  }\r\n\r\n  addSubQuestion(examGroupHeaderId: number) {\r\n    this.examGroupHeaderId = examGroupHeaderId;\r\n    let obj: any = {\r\n      examGroupHeaderId: examGroupHeaderId,\r\n      subjectId: this.subjectIdCtrl?.value,\r\n      unitId: this.unitIdCtrl?.value,\r\n      lessonId: this.lessionIdCtrl?.value,\r\n    };\r\n  }\r\n\r\n  getAllExamTypes() {\r\n    this.examService\r\n      .getAllExamType<IExamTypeModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.examTypes = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectExamType() {\r\n    //  console.log('exam type: ', this.examTypeIdCtrl?.value);\r\n\r\n    if (this.examTypeIdCtrl?.value == 1) {\r\n      this.unitIdCtrl?.enable();\r\n      this.lessionIdCtrl?.enable();\r\n    } else if (this.examTypeIdCtrl?.value == 2) {\r\n      this.unitIdCtrl?.enable();\r\n      this.lessionIdCtrl?.disable();\r\n    } else {\r\n      this.unitIdCtrl?.disable();\r\n      this.lessionIdCtrl?.disable();\r\n    }\r\n  }\r\n\r\n  getAllCountieres() {\r\n    this.examService\r\n      .getAllCountries<ICountrieDropModel[]>()\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          //console.log(\"COUNTIRES: \", response);\r\n          this.countries = response;\r\n        }\r\n      });\r\n  }\r\n\r\n  onSelectCountry() {\r\n    // this.stageIdCtrl?.setValue(\"\");\r\n    // this.educationYearIdCtrl?.setValue(\"\");\r\n    // this.subjectIdCtrl?.setValue(\"\");\r\n    // this.teacherUserIdCtrl?.setValue(\"\");\r\n    if (this.countryIdCtrl?.value) {\r\n      //   console.log('SELECTED country: ', this.countryIdCtrl?.value);\r\n      this.examService\r\n        .getAllStages<IStageDropModel[]>(this.countryIdCtrl?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.stages = response;\r\n            //console.log(\"STAGES:\", response);\r\n            this.stageIdCtrl?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.stageIdCtrl?.disable();\r\n      this.educationYearIdCtrl?.disable();\r\n      this.subjectIdCtrl?.disable();\r\n      this.teacherUserIdCtrl?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectStages() {\r\n    // console.log('onSelectStages: ', this.stageIdCtrl?.value);\r\n    this.educationYearIdCtrl?.setValue(\"\");\r\n    this.subjectIdCtrl?.setValue(\"\");\r\n    this.teacherUserIdCtrl?.setValue(\"\");\r\n    if (this.stageIdCtrl?.value) {\r\n      this.examService\r\n        .getAllEducationYears<IEducationYearDropModel[]>(\r\n          this.stageIdCtrl?.value\r\n        )\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.educationYears = response;\r\n            //console.log(\"YEARS:\", response);\r\n            this.educationYearIdCtrl?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.educationYearIdCtrl?.disable();\r\n      this.subjectIdCtrl?.disable();\r\n      this.teacherUserIdCtrl?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectEducationYears() {\r\n    //   console.log('onSelectEducationYears: ', this.educationYearIdCtrl?.value);\r\n    this.subjectIdCtrl?.setValue(\"\");\r\n    this.teacherUserIdCtrl?.setValue(\"\");\r\n    if (this.educationYearIdCtrl?.value) {\r\n      this.examService\r\n        .getAllSubjects<ISubjectDropModel[]>(this.educationYearIdCtrl?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.subjects = response;\r\n            //console.log(\"SUBJECTS:\", response);\r\n            this.subjectIdCtrl?.enable();\r\n          }\r\n        });\r\n    } else {\r\n      this.subjectIdCtrl?.disable();\r\n      this.teacherUserIdCtrl?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectSubjects() {\r\n    // console.log('onSelectSubjects: ', this.subjectIdCtrl?.value);\r\n    //   this.teacherUserIdCtrl?.setValue(\"\");\r\n    if (this.subjectIdCtrl?.value) {\r\n      forkJoin([\r\n        this.generalService.getTeacherBySubjectAndEduCompId(\r\n          this.EduCompId,\r\n          this.subjectIdCtrl?.value\r\n        ),\r\n        this.examService.getAllUnitsBySublectId<any[]>(\r\n          this.subjectIdCtrl?.value\r\n        ),\r\n      ]).subscribe((results: any) => {\r\n        this.teachers = results[0].teachers;\r\n        this.units = results[1];\r\n        this.teacherUserIdCtrl?.enable();\r\n      });\r\n    } else {\r\n      this.teacherUserIdCtrl?.disable();\r\n    }\r\n  }\r\n\r\n  onSelectUnit() {\r\n    if (this.unitIdCtrl?.value != null) {\r\n      this.examService\r\n        .getAllLessonsByUnitId<any>(this.unitIdCtrl?.value)\r\n        .subscribe((response) => {\r\n          if (response) {\r\n            this.lessions = response;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  examTypeValidator() {\r\n    let examTypeId = this.examTypeIdCtrl?.value;\r\n    if (examTypeId == 1) {\r\n      this.unitIdCtrl?.setValidators([Validators.required]);\r\n      this.lessionIdCtrl?.setValidators([Validators.required]);\r\n    } else if (examTypeId == 2) {\r\n      this.unitIdCtrl?.setValidators([Validators.required]);\r\n      this.lessionIdCtrl?.clearValidators();\r\n      this.lessionIdCtrl?.reset();\r\n    } else {\r\n      this.unitIdCtrl?.clearValidators();\r\n      this.unitIdCtrl?.reset();\r\n      this.lessionIdCtrl?.clearValidators();\r\n      this.lessionIdCtrl?.reset();\r\n    }\r\n    this.unitIdCtrl?.updateValueAndValidity();\r\n    this.lessionIdCtrl?.updateValueAndValidity();\r\n  }\r\n\r\n  RepeatableValidator() {\r\n    let CustomDiscount = this.hasCustomDiscountCtrl?.value;\r\n    if (CustomDiscount == true) {\r\n      this.repeatNumbersCtrl?.setValidators([Validators.required]);\r\n      this.repeatingPriceCtrl?.setValidators([Validators.required]);\r\n    } else if (CustomDiscount == false) {\r\n      this.repeatNumbersCtrl?.clearValidators();\r\n      this.repeatingPriceCtrl?.clearValidators();\r\n      this.repeatNumbersCtrl?.reset();\r\n      this.repeatingPriceCtrl?.reset();\r\n    }\r\n    this.repeatNumbersCtrl?.updateValueAndValidity();\r\n    this.repeatingPriceCtrl?.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- Add Exam -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <!-- <span *ngIf=\"examId == 0 && type == 3\">\r\n          {{ \"Navbar.newexam\" | translate }}\r\n        </span> -->\r\n        <span  *ngIf=\"examId == 0\">\r\n          {{ \"Navbar.newesurvay\" | translate }}\r\n        </span>\r\n        <span *ngIf=\"examId > 0\">\r\n          <!-- <span *ngIf=\"type == 3\">{{ \"labels.EditExam\" | translate }}</span> -->\r\n          <span>{{ \"labels.EditSurvey\" | translate }}</span>\r\n\r\n          - {{ exam_ar_name }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../\"\r\n          [queryParams]=\"{\r\n            functionId: functionId,\r\n            parentId: parentId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Country\" | translate }} </mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"onSelectCountry()\"\r\n                      formControlName=\"countryId\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"labels.Country\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let country of countries\"\r\n                        [value]=\"country.country_id\"\r\n                      >\r\n                        {{ country.country_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        countryIdCtrl?.invalid &&\r\n                        (countryIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"myForm.countryIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n                <!--\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Navbar.EducationalStage\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"onSelectStages()\"\r\n                      formControlName=\"stageId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"Navbar.EducationalStage\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of stages\"\r\n                        [value]=\"stage.id\"\r\n                      >\r\n                        {{ stage.stage_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        stageIdCtrl?.invalid &&\r\n                        (stageIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"myForm.stageIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.EducationalYear\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"onSelectEducationYears()\"\r\n                      formControlName=\"educationYearId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"labels.EducationalYear\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let year of educationYears\"\r\n                        [value]=\"year.id\"\r\n                      >\r\n                        {{ year.Educational_year_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        educationYearIdCtrl?.invalid &&\r\n                        (educationYearIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"educationYearIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Material.Subjects\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"onSelectSubjects()\"\r\n                      formControlName=\"subjectId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"Material.Subjects\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let sub of subjects\"\r\n                        [value]=\"sub.subject_id\"\r\n                      >\r\n                        {{ sub.subject_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        subjectIdCtrl?.invalid &&\r\n                        (subjectIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"subjectIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n                <!--\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Material.Teacher\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"onSelectSubjects()\"\r\n                      formControlName=\"teacherUserId\"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"Material.Teacher\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of teachers\"\r\n                        [value]=\"teacher.teacherUserId\"\r\n                      >\r\n                        {{ teacher.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        teacherUserIdCtrl?.invalid &&\r\n                        (teacherUserIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"teacherUserIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Material.ExamType\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"\r\n                        onSelectExamType(); examTypeValidator()\r\n                      \"\r\n                      formControlName=\"examTypeId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"Material.ExamType\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let type of examTypes\"\r\n                        [value]=\"type.exam_type_id\"\r\n                      >\r\n                        {{ type.exam_ar_type_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examTypeIdCtrl?.invalid &&\r\n                        (examTypeIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examTypeIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"onSelectUnit()\"\r\n                      formControlName=\"unitId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"labels.Unit\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option *ngFor=\"let unit of units\" [value]=\"unit.id\">\r\n                        {{ unit.unit_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        unitIdCtrl?.invalid &&\r\n                        (unitIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"unitIdCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"lessionId\">\r\n                      <mat-option value=\"\">{{\r\n                        \"labels.Lesson\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        [value]=\"lession.id\"\r\n                        *ngFor=\"let lession of lessions\"\r\n                      >\r\n                        {{ lession.lesson_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        lessionIdCtrl?.invalid &&\r\n                        (lessionIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"lessionIdCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div> -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.SurveyName\" | translate }}</mat-label>\r\n                    <input matInput formControlName=\"examName\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examNameCtrl?.invalid &&\r\n                        (examNameCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"\r\n                          examNameCtrl?.errors?.required ||\r\n                          examNameCtrl?.errors?.whiteSpace\r\n                        \"\r\n                      >\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.SurveyHours\" | translate }}</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"examHours\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examHoursCtrl?.invalid &&\r\n                        (examHoursCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examHoursCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.SurveyMinute\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"examMinutes\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examMinutesCtrl?.invalid &&\r\n                        (examMinutesCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examMinutesCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamPrice\" | translate }} </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"examPrice\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        examPriceCtrl?.invalid &&\r\n                        (examPriceCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"examPriceCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Discount\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"discount\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.DiscountType\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"discountType\">\r\n                      <mat-option value=\"\"\r\n                        >{{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option value=\"1\">عام</mat-option>\r\n                      <mat-option value=\"2\">خاص</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"fromDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"toDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.FromTime\" | translate }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"formHour\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ToTime\" | translate }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"toHours\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- resualtDate -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ExamResultDate\" | translate }}</mat-label\r\n                    >\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"resualtDate\"\r\n                      formControlName=\"resualtDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"resualtDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #resualtDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.examResultTime\" | translate\r\n                    }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"resualtTime\" />\r\n                  </mat-form-field>\r\n                </div> -->\r\n\r\n                <!-- can Sell Individually -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.SellExamOnly\" | translate }}\r\n                  </mat-label>\r\n                  <mat-radio-group\r\n                    formControlName=\"canSellIndividually\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div> -->\r\n\r\n                <!-- isRepeatable -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.RepeatedExam\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group formControlName=\"isRepeatable\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        (change)=\"RepeatableValidator()\"\r\n                      >\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        (change)=\"RepeatableValidator()\"\r\n                      >\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div> -->\r\n\r\n                <!-- send WhatsApp Msg -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group\r\n                    formControlName=\"sendWhatsAppMsg\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div> -->\r\n\r\n                <!-- Custom Discount -->\r\n                <!-- <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.CustomDiscount\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group\r\n                    formControlName=\"hasCustomDiscount\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div> -->\r\n\r\n                <!-- <ng-container *ngIf=\"isRepeatableCtrl?.value == true\">\r\n                  <div class=\"col-md-6 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"labels.repeatNumbers\" | translate\r\n                      }}</mat-label>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        formControlName=\"repeatNumbers\"\r\n                      />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          repeatNumbersCtrl?.invalid &&\r\n                          (repeatNumbersCtrl?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"repeatNumbersCtrl?.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span *ngIf=\"repeatNumbersCtrl?.errors?.bigZero\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"labels.repeatingPrice\" | translate\r\n                      }}</mat-label>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        formControlName=\"repeatingPrice\"\r\n                      />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          repeatingPriceCtrl?.invalid &&\r\n                          (repeatingPriceCtrl?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span *ngIf=\"repeatingPriceCtrl?.errors?.required\">\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span *ngIf=\"repeatingPriceCtrl?.errors?.minusNum\">\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\" *ngIf=\"examId > 0\">\r\n        <button\r\n          *ngIf=\"examId > 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- START: ADD/EDIT EXAM GROUP AND HEADER -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>{{ \"labels.addGxamGroups\" | translate }}</span>\r\n        <!-- <span>{{ \"labels.addSurveyGroups\" | translate }}</span> -->\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"GroupHeadersForm\" class=\"form-horizontal\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.َQuestionNumber\" | translate }}\r\n                </mat-label>\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examGroup\"\r\n                  [matAutocomplete]=\"autoExamGroup\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamGroup=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamGroups | async\"\r\n                    [value]=\"val.question_group_ar_name\"\r\n                  >\r\n                    {{ val.question_group_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    examGroupCtrl?.invalid &&\r\n                    (examGroupCtrl?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"examGroupCtrl?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{ \"labels.QuestionHeader\" | translate }}</mat-label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"examHeader\"\r\n                  [matAutocomplete]=\"autoExamHeader\"\r\n                />\r\n\r\n                <mat-autocomplete #autoExamHeader=\"matAutocomplete\">\r\n                  <mat-option\r\n                    *ngFor=\"let val of filteredExamHeaders | async\"\r\n                    [value]=\"val.question_head_ar_name\"\r\n                  >\r\n                    {{ val.question_head_ar_name }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n\r\n                <mat-hint\r\n                  class=\"danger\"\r\n                  *ngIf=\"\r\n                    examHeaderCtrl?.invalid &&\r\n                    (examHeaderCtrl?.touched || submitted)\r\n                  \"\r\n                >\r\n                  <span *ngIf=\"examHeaderCtrl?.errors?.required\">\r\n                    {{ \"labels.mustEnterValue\" | translate }}\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>{{\r\n                  \"labels.َQuestionContent\" | translate\r\n                }}</mat-label>\r\n                <textarea\r\n                  matInput\r\n                  formControlName=\"examContent\"\r\n                  cols=\"20\"\r\n                ></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"examId == 0\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"onSubmit()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"\r\n            GroupsHeadersList.length > 0 && !editGroupHeaderMode && examId > 0\r\n          \"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onAddExamGroupHeader()\"\r\n        >\r\n          {{ \"labels.AddQuestion\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"editGroupHeaderMode\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"editExamGroupHead()\"\r\n        >\r\n          {{ \"labels.UpdateQuestion\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"GroupsHeadersList.length > 0\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.QuestionsGroup\" | translate }}</mat-card-title\r\n      >\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"mat-elevation-z8 f-w\">\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <!-- # Column -->\r\n                <ng-container matColumnDef=\"#\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\r\n                  <td mat-cell *matCellDef=\"let i = index\">\r\n                    {{ i + 1 }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- questionNumber Column -->\r\n                <ng-container matColumnDef=\"questionNumber\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionNumber\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionNumber }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- questionType Column -->\r\n                <ng-container matColumnDef=\"questionType\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.QuestionHeader\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.questionType }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- question_title Column -->\r\n                <ng-container matColumnDef=\"question_title\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{ \"labels.َQuestionContent\" | translate }}\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let ele\">\r\n                    {{ ele.question_title }}\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <!-- actions Column -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    actions\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let groupHeader\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'EditGroup'\"\r\n                        (click)=\"getExamHeadById(groupHeader)\"\r\n                        class=\"success p-0\"\r\n                        matTooltip=\"{{ 'General.Edit' | translate }}\"\r\n                      >\r\n                        <i class=\"ft-edit-2 font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'DeleteGroup'\"\r\n                        (click)=\"openDeleateDialog(groupHeader)\"\r\n                        class=\"danger p-0\"\r\n                        matTooltip=\"{{ 'General.Delete' | translate }}\"\r\n                      >\r\n                        <i class=\"ft-trash font-medium-3 mr-2\"></i>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'addSubQuestion'\"\r\n                        (click)=\"addSubQuestionDialog(groupHeader)\"\r\n                        class=\"info p-0\"\r\n                        matTooltip=\"Add sub question\"\r\n                      >\r\n                        <i class=\"ft-git-branch font-medium-3 mr-2\"></i>\r\n                      </a>\r\n                    </ng-container>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                  mat-row\r\n                  *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                  <td class=\"mat-cell\" colspan=\"4\">\r\n                    No data matching the filter \"{{ input.value }}\"\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n\r\n              <mat-paginator\r\n                [pageSizeOptions]=\"[10]\"\r\n                showFirstLastButtons\r\n                aria-label=\"Select page of users\"\r\n              >\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { ExamsService } from \"app/admin/services/Admin/exams.service\";\r\n\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  IExamViewModel,\r\n  ICountrieDropModel,\r\n  IStageDropModel,\r\n  IEducationYearDropModel,\r\n  ISubjectDropModel,\r\n  ITeacherDropModel,\r\n  Puplish,\r\n  Exam,\r\n} from \"app/admin/models/admin/exam\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport {\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { CourseService } from \"app/admin/services/Admin/setup/course.service\";\r\nimport { LanguageService } from \"app/shared/services/language.service\";\r\nimport { MessagesService } from \"app/shared/services/messages.service\";\r\n\r\n@Component({\r\n  selector: \"app-surveys-index\",\r\n  templateUrl: \"./surveys-index.component.html\",\r\n  styleUrls: [\"./surveys-index.component.scss\"],\r\n})\r\nexport class SurveysIndexComponent implements OnInit {\r\n  totalItems: any;\r\n  EduCompId: any;\r\n  branchId: any;\r\n  exams: IExamViewModel[] = [];\r\n  countries: ICountrieDropModel[] = [];\r\n  stages: IStageDropModel[] = [];\r\n  educationYears: IEducationYearDropModel[] = [];\r\n  subjects: ISubjectDropModel[] = [];\r\n  teachers: teacherByEduCompId[];\r\n  type: number;\r\n  subId: number;\r\n  exms: Puplish[] = [];\r\n  exam: Puplish[] = [];\r\n  displayedColumns: string[] = [\"#\", \"exam_ar_name\", \"course\", \"isPublish\", \"actions\"];\r\n  dataSource: MatTableDataSource<Exam>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  myForm!: FormGroup;\r\n  functionId: number; // exam functions\r\n  parentId: number; // sub course functions\r\n  rowFunctions: IRowFunctionVM[];\r\n  curPage:number=1;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    public authserv: AuthService,\r\n    private examService: ExamsService,\r\n    private toastr: MessagesService,\r\n    private spinner: NgxSpinnerService,\r\n    private generalService: GeneralService,\r\n    private dialog: MatDialog,\r\n    private courseser: CourseService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.type = Number(params.get(\"typeId\"));\r\n    });\r\n    route.paramMap.subscribe((params) => {\r\n      this.subId = Number(params.get(\"courseId\"));\r\n    });\r\n\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      this.parentId = Number(params.get(\"parentId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n\r\n    this.myForm = this.fb.group({\r\n      examName: [\"\", Validators.required],\r\n      //   countryId: [\"\"],\r\n      //   stageId: [\"\"],\r\n      //   educationYearId: [\"\"],\r\n      //   subjectId: [\"0\"],\r\n      //   teacherUserId: [\"0\"],\r\n      //   page: [\"\"],\r\n      //   EduCompId: [this.EduCompId],\r\n    });\r\n\r\n    //  this.stageIdCtrl?.disable();\r\n    //  this.educationYearIdCtrl?.disable();\r\n    //  this.subjectIdCtrl?.disable();\r\n    //this.teacherIdCtrl?.disable();\r\n\r\n    // this.getAllCountieres();\r\n    this.getAllExams(1);\r\n  }\r\n  get examNameCtrl() {\r\n    return this.myForm.get(\"examName\");\r\n  }\r\n  // get countryIdCtrl() {\r\n  //   return this.myForm.get(\"countryId\");\r\n  // }\r\n\r\n  // get stageIdCtrl() {\r\n  //   return this.myForm.get(\"stageId\");\r\n  // }\r\n\r\n  // get educationYearIdCtrl() {\r\n  //   return this.myForm.get(\"educationYearId\");\r\n  // }\r\n\r\n  // get subjectIdCtrl() {\r\n  //   return this.myForm.get(\"subjectId\");\r\n  // }\r\n\r\n  // get teacherUserIdCtrl() {\r\n  //   return this.myForm.get(\"teacherUserId\");\r\n  // }\r\n\r\n  // get page() {\r\n  //   return this.myForm.get(\"page\");\r\n  // }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getAllExams(1);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.startSortingTable();\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  //   getcoursebyId(){\r\n  // this.courseser.getMainCourseById(this.subId).subscribe((res:any)=>{\r\n  //   if(res){\r\n  //     return res;\r\n  //   }\r\n  // })\r\n  //   }\r\n\r\n  getAllExams(p: number) {\r\n    this.curPage=p;\r\n    this.spinner.show();\r\n\r\n    // this.page?.setValue(p);\r\n    // this.myForm.controls[\"EduCompId\"].setValue(this.EduCompId);\r\n    let data = {\r\n      typeId: this.type,\r\n      page: p,\r\n      EduCompId: this.EduCompId,\r\n      subjectId: this.subId,\r\n      examName: this.examNameCtrl?.value,\r\n    };\r\n    this.examService.getAllNormalExams(data).subscribe((response: any) => {\r\n      if (response) {\r\n        this.dataSource = new MatTableDataSource(response.examList);\r\n        this.exams = response.examList;\r\n        this.totalItems = response.totalCount;\r\n        this.startSortingTable();\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  removeExam(exam: Exam) {\r\n    this.examService.deleteExam<any>(exam.id).subscribe((response) => {\r\n      if (response) {\r\n        this.toastr.success(\"General.DeleteSuccessfully\");\r\n        if (this.dataSource.data.length == 1 && this.curPage > 1) {\r\n          // if last item in list: get previous page\r\n          this.getAllExams(this.curPage - 1);\r\n          this.paginator.pageIndex = this.curPage - 1;\r\n        } else {\r\n          // if not last item in list: get current page\r\n          this.getAllExams(this.curPage);\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(exam: Exam): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: exam.exam_ar_name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) {\r\n          this.removeExam(exam);\r\n        }\r\n      });\r\n  }\r\n\r\n  onPublishExam(exam: IExamViewModel) {\r\n    this.examService\r\n      .publishExam<IExamViewModel>(exam.id)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          let i = this.exams.findIndex((e) => e === exam);\r\n          this.exams[i].isPublish = !this.exams[i].isPublish;\r\n          // for (const obj of this.exms) {\r\n          //   if (obj.id === exam.id) {\r\n          //     obj.isPublish = !obj.isPublish;\r\n          //     break;\r\n          //   }\r\n          // }\r\n          this.toastr.success(\"General.Done\");\r\n        }\r\n      });\r\n  }\r\n\r\n  // getAllCountieres() {\r\n  //   this.examService\r\n  //     .getAllCountries<ICountrieDropModel[]>()\r\n  //     .subscribe((response) => {\r\n  //       if (response) {\r\n  //         //console.log(\"COUNTIRES: \", response);\r\n  //         this.countries = response;\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // onSelectCountry() {\r\n  //   this.stageIdCtrl?.setValue(\"\");\r\n  //   this.educationYearIdCtrl?.setValue(\"\");\r\n  //   this.subjectIdCtrl?.setValue(\"\");\r\n  //   this.teacherUserIdCtrl?.setValue(\"\");\r\n  //   if (this.countryIdCtrl?.value) {\r\n  //     //  console.log('SELECTED country: ', this.countryIdCtrl?.value);\r\n  //     this.examService\r\n  //       .getAllStages<IStageDropModel[]>(this.countryIdCtrl?.value)\r\n  //       .subscribe((response) => {\r\n  //         if (response) {\r\n  //           this.stages = response;\r\n  //           //console.log(\"STAGES:\", response);\r\n  //           this.stageIdCtrl?.enable();\r\n  //         }\r\n  //       });\r\n  //   } else {\r\n  //     this.stageIdCtrl?.disable();\r\n  //     this.educationYearIdCtrl?.disable();\r\n  //     this.subjectIdCtrl?.disable();\r\n  //     this.teacherUserIdCtrl?.disable();\r\n  //   }\r\n  // }\r\n\r\n  // onSelectStages() {\r\n  //   this.educationYearIdCtrl?.setValue(\"\");\r\n  //   this.subjectIdCtrl?.setValue(\"\");\r\n  //   this.teacherUserIdCtrl?.setValue(\"\");\r\n  //   if (this.stageIdCtrl?.value) {\r\n  //     //console.log(\"SELECTED stages: \", this.stageIdCtrl?.value);\r\n  //     this.examService\r\n  //       .getAllEducationYears<IEducationYearDropModel[]>(\r\n  //         this.stageIdCtrl?.value\r\n  //       )\r\n  //       .subscribe((response) => {\r\n  //         if (response) {\r\n  //           this.educationYears = response;\r\n  //           //console.log(\"YEARS:\", response);\r\n  //           this.educationYearIdCtrl?.enable();\r\n  //         }\r\n  //       });\r\n  //   } else {\r\n  //     this.educationYearIdCtrl?.disable();\r\n  //     this.subjectIdCtrl?.disable();\r\n  //     this.teacherUserIdCtrl?.disable();\r\n  //   }\r\n  // }\r\n\r\n  // onSelectEducationYears() {\r\n  //   this.subjectIdCtrl?.setValue(\"\");\r\n  //   this.teacherUserIdCtrl?.setValue(\"\");\r\n  //   if (this.educationYearIdCtrl?.value) {\r\n  //     //console.log(\"SELECTED YEARS: \", this.stageIdCtrl?.value);\r\n  //     this.examService\r\n  //       .getAllSubjects<ISubjectDropModel[]>(this.educationYearIdCtrl?.value)\r\n  //       .subscribe((response) => {\r\n  //         if (response) {\r\n  //           this.subjects = response;\r\n  //           //console.log(\"SUBJECTS:\", response);\r\n  //           this.subjectIdCtrl?.enable();\r\n  //         }\r\n  //       });\r\n  //   } else {\r\n  //     this.subjectIdCtrl?.disable();\r\n  //     this.teacherUserIdCtrl?.disable();\r\n  //   }\r\n  // }\r\n\r\n  // onSelectSubjects() {\r\n  //   this.teacherUserIdCtrl?.setValue(\"\");\r\n  //   if (this.subjectIdCtrl?.value) {\r\n  //     //console.log(\"SELECTED subject: \", this.stageIdCtrl?.value);\r\n  //     this.generalService\r\n  //       .getTeacherBySubjectAndEduCompId(\r\n  //         this.EduCompId,\r\n  //         this.subjectIdCtrl?.value\r\n  //       )\r\n  //       .subscribe((response: any) => {\r\n  //         if (response) {\r\n  //           this.teachers = response.teachers;\r\n  //           console.log(\"teachers:\", response);\r\n  //           this.teacherUserIdCtrl?.enable();\r\n  //         }\r\n  //       });\r\n  //   } else {\r\n  //     this.teacherUserIdCtrl?.disable();\r\n  //   }\r\n  // }\r\n  track(index: number, el: any): number {\r\n    return el.Id;\r\n  }\r\n  startSortingTable() {\r\n    // custom sort\r\n    this.dataSource.sortingDataAccessor = (item, property) => {\r\n      switch (property) {\r\n        case \"course\":\r\n          return this.languageService.isArabic\r\n            ? item.course_ar_name\r\n            : item.course_en_name;\r\n        default:\r\n          return item[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12 mb-3\">\r\n    <mat-card class=\"\">\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/setup/course/index\"\r\n          [queryParams]=\"{\r\n            functionId: parentId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../add-survey\"\r\n          [queryParams]=\"{\r\n            functionId: functionId,\r\n            parentId: parentId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right mb-2\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 col-12\">\r\n                  <app-input\r\n                  [control]=\"examNameCtrl\"\r\n                  label=\"labels.SurveyName\"\r\n                ></app-input>\r\n\r\n                </div>\r\n                <!--<div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Country\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"countryId\"\r\n                      (selectionChange)=\"onSelectCountry()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let country of countries\"\r\n                        [value]=\"country.country_id\"\r\n                      >\r\n                        {{ country.country_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n             <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Stage\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"stageId\"\r\n                      (selectionChange)=\"onSelectStages()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of stages\"\r\n                        [value]=\"stage.id\"\r\n                      >\r\n                        {{ stage.stage_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                 <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Year\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"educationYearId\"\r\n                      (selectionChange)=\"onSelectEducationYears()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let year of educationYears\"\r\n                        [value]=\"year.id\"\r\n                      >\r\n                        {{ year.Educational_year_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                 <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Subject\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"subjectId\"\r\n                      (selectionChange)=\"onSelectSubjects()\"\r\n                    >\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let sub of subjects\"\r\n                        [value]=\"sub.subject_id\"\r\n                      >\r\n                        {{ sub.subject_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                 <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Teacher\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"teacherUserId\">\r\n                      <mat-option>{{\r\n                        \"General.Choose\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of teachers\"\r\n                        [value]=\"teacher.teacherUserId\"\r\n                      >\r\n                        {{ teacher.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getAllExams(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <!-- <mat-card-title *ngIf=\"type == 3\">\r\n        {{ \"Navbar.Exams\" | translate }}</mat-card-title\r\n      > -->\r\n      <mat-card-title>\r\n        {{ \"Navbar.Surveys\" | translate }}</mat-card-title\r\n      >\r\n\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>{{\"General.Search\"|translate}}</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- # Column -->\r\n            <ng-container matColumnDef=\"#\">\r\n              <th mat-header-cell *matHeaderCellDef>#</th>\r\n              <td mat-cell *matCellDef=\"let i = index\">{{ i + 1 }}</td>\r\n            </ng-container>\r\n\r\n            <!-- name Column -->\r\n            <ng-container matColumnDef=\"exam_ar_name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.exam_ar_name }}</td>\r\n            </ng-container>\r\n\r\n            <!-- subject Column -->\r\n            <ng-container matColumnDef=\"course\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.CourseName\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ this.languageService.isArabic? ele.course_ar_name : ele.course_en_name }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- year Column -->\r\n            <!-- <ng-container matColumnDef=\"year\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Year\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                {{ ele.eduYearId }}\r\n              </td>\r\n            </ng-container> -->\r\n\r\n            <!-- teacher Column -->\r\n            <!-- <ng-container matColumnDef=\"teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Teacher }}</td>\r\n            </ng-container> -->\r\n\r\n            <!-- publish Column -->\r\n            <ng-container matColumnDef=\"isPublish\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ThePublish\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let exam\">\r\n                <span *ngIf=\"exam?.isPublish\">\r\n                  {{ \"labels.Published\" | translate }}\r\n                  <i class=\"fa fa-check-circle success ml-1\" aria-hidden=\"true\">\r\n                  </i>\r\n                </span>\r\n                <span *ngIf=\"!exam?.isPublish\">\r\n                  {{ \"labels.UnPublished\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <!-- actions Column -->\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n              <td mat-cell *matCellDef=\"let exam\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-primary\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'publish'\"\r\n                        (click)=\"onPublishExam(exam)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <span *ngIf=\"!exam.isPublish\">\r\n                          <i class=\"ft-upload font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Publish\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"exam.isPublish\">\r\n                          <i class=\"ft-download font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Unpublish\" | translate }}\r\n                        </span>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"../add-survey\"\r\n                        [queryParams]=\"{\r\n                          examId: exam.id,\r\n                          functionId: functionId,\r\n                          parentId: parentId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(exam)\"\r\n                      >\r\n                        <i class=\"fa fa-times font-medium-3 mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Show'\"\r\n                        ngbDropdownItem\r\n                        target=\"_blank\"\r\n                        routerLink=\"/dashboard/exams-setup/exam-preview/{{\r\n                          exam.id\r\n                        }}/{{type}}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-video-camera font-medium-3 mr-2\"> </i>\r\n                        {{ \"General.SurveyPreview\" | translate }}\r\n                      </a>\r\n\r\n                      <!-- <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Points'\"\r\n                        routerLink=\"../exam-points/{{ exam.Id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                        ><i class=\"fa fa-gift font-medium-3 mr-2\"></i>النقاط</a\r\n                      >\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Grades'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"/dashboard/educational-setup/subjects/upload-exam-student-grades/{{\r\n                          exam.Id\r\n                        }}\"\r\n                      >\r\n                        <i class=\"fa fa-upload font-medium-3 mr-2\"></i>\r\n                        {{ \"Exam.StudentGradesUpload\" | translate }}\r\n                      </a> -->\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n              [class.bg-light-info]=\"!row?.isPublish\"\r\n            ></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getAllExams($event.pageIndex + 1)\"\r\n            [length]=\"totalItems\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { DatePipe } from \"@angular/common\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  IAddTemplateVM,\r\n  ITemlateVM,\r\n  TemplateDetailsVM,\r\n} from \"app/admin/models/admin/exams\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport {\r\n  teacherByEduCompId,\r\n  GeneralDropdownVM,\r\n  IRowFunctionVM,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { TemplatesService } from \"app/teacher/services/templates.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"app-add-template\",\r\n  templateUrl: \"./add-template.component.html\",\r\n  styleUrls: [\"./add-template.component.scss\"],\r\n})\r\nexport class AddTemplateComponent implements OnInit {\r\n  EduCompId: any;\r\n  branchId: any;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  Teachers: teacherByEduCompId[] = [];\r\n  QuestionDetails: TemplateDetailsVM[] = [];\r\n  Presets: any = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  subjects: GeneralDropdownVM[] = [];\r\n  units: any = [];\r\n  lessons: any = [];\r\n  topics: any = [];\r\n  unitsForDetails: GeneralDropdownVM[];\r\n  lessonsForDetails: GeneralDropdownVM[];\r\n  topicsForDetails: GeneralDropdownVM[];\r\n  myForm!: FormGroup;\r\n  DetailForm!: FormGroup;\r\n  submitted = false;\r\n  DetailSubmitted = false;\r\n  templateId: any = null;\r\n  templateName: string;\r\n  functionId: number;\r\n  rowFunctions: IRowFunctionVM[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    public spinner: NgxSpinnerService,\r\n    public authserv: AuthService,\r\n    private TemplatesService: TemplatesService,\r\n    private dialog: MatDialog,\r\n    private GeneralService: GeneralService,\r\n    private datePipe: DatePipe,\r\n    private EducationalService: EducationalService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.templateId = params.get(\"templateId\");\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.templateId) {\r\n        this.getTemplateById();\r\n        this.getQuestionDetails(this.templateId);\r\n      }\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.myForm = this.fb.group({\r\n      EduCompId: [this.EduCompId],\r\n      Id: [this.templateId],\r\n      presetTemplateId: [\"\"],\r\n      teacherUserId: [\"\", Validators.required],\r\n      yearId: [\"\", Validators.required],\r\n      stageId: [\"\", Validators.required],\r\n      subjectId: [\"\", Validators.required],\r\n      UnitRevisionID: [\"\"],\r\n      LessonID: [\"\"],\r\n      topicId: [\"\"],\r\n      Name: [\"\", [Validators.required, CustomeValidator.whiteSpace]],\r\n      price: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      exam_minute: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      exam_hour: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      priceDiscount: [\"\"],\r\n      Avilable_Date_From: [\"\"],\r\n      priceDiscountType: [0],\r\n      Avilable_Date_To: [\"\"],\r\n      fromHour: [\"\"],\r\n      toHour: [\"\"],\r\n      ResultDate: [\"\"],\r\n      ResultTime: [\"\"],\r\n      Individually_Purchased: [false],\r\n      repeatableExam: [false],\r\n      repeatableExam_Count: [false],\r\n      SendWhatsApp: [false],\r\n      CustomDiscountApplied: [false],\r\n      StudentRepeatExamCost: [\"\"],\r\n      Publish: [false],\r\n    });\r\n\r\n    this.DetailForm = this.fb.group({\r\n      templateId: [this.templateId, Validators.required],\r\n      questionsLevel: [\"\", Validators.required],\r\n      mark: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n      questionsCount: [\"\", [Validators.required, CustomeValidator.bigZero]],\r\n      unitRevisionID: [\"\", Validators.required],\r\n      lessonID: [\"\", Validators.required],\r\n      TopicID: [\"\"],\r\n    });\r\n\r\n    if (this.templateId != null) {\r\n      //  this.FormCtrl.Id.setValue(this.templateId);\r\n      //  this.DetailsCtrl.templateId.setValue(this.templateId);\r\n      //  this.getQuestionDetails(this.templateId);\r\n    } else {\r\n      this.FormCtrl.stageId.disable();\r\n      this.FormCtrl.yearId.disable();\r\n      this.FormCtrl.subjectId.disable();\r\n      this.FormCtrl.UnitRevisionID.disable();\r\n      this.FormCtrl.LessonID.disable();\r\n      this.FormCtrl.topicId.disable();\r\n\r\n      this.DetailsCtrl.questionsCount.disable();\r\n      this.DetailsCtrl.unitRevisionID.disable();\r\n      this.DetailsCtrl.lessonID.disable();\r\n      this.DetailsCtrl.TopicID.disable();\r\n      this.DetailsCtrl.mark.disable();\r\n    }\r\n\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.branchId = this.authserv.getBranchId();\r\n    this.getTeachersByEducompId(this.EduCompId);\r\n    this.getPresets();\r\n\r\n    this.FormCtrl.EduCompId.setValue(this.EduCompId);\r\n    this.repeatableExamValidators();\r\n  }\r\n\r\n  get FormCtrl() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get DetailsCtrl() {\r\n    return this.DetailForm.controls;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      this.branchId = e.branchId;\r\n    });\r\n  }\r\n\r\n  addUpdateTemplate() {\r\n    this.submitted = true;\r\n\r\n    //this.datePipe.transform(this.resualtDateCtrl.value),\r\n    let obj: IAddTemplateVM = this.myForm.value;\r\n    obj.Avilable_Date_From = this.datePipe.transform(\r\n      this.FormCtrl.Avilable_Date_From.value\r\n    );\r\n    obj.Avilable_Date_To = this.datePipe.transform(\r\n      this.FormCtrl.Avilable_Date_To.value\r\n    );\r\n\r\n    obj.ResultDate = this.datePipe.transform(this.FormCtrl.ResultDate.value);\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.TemplatesService.addUpdateTemplate({\r\n        presetTemplateId: obj.presetTemplateId,\r\n        template: obj,\r\n      }).subscribe((res: any) => {\r\n        console.log(\"createTemplate\", res);\r\n        if (res.returnValue) {\r\n          this.DetailsCtrl.templateId.setValue(res.returnValue);\r\n          this.FormCtrl.Id.setValue(res.returnValue);\r\n          this.getQuestionDetails(res.returnValue);\r\n          this.submitted = false;\r\n          // this.myForm.reset();\r\n          this.DetailsCtrl.questionsCount.enable();\r\n          this.DetailsCtrl.unitRevisionID.enable();\r\n          this.DetailsCtrl.lessonID.enable();\r\n          this.DetailsCtrl.TopicID.enable();\r\n          this.DetailsCtrl.mark.enable();\r\n          this.toastr.success(\"Done\");\r\n          // } else {\r\n          //this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getTemplateById() {\r\n    this.spinner.show();\r\n    this.TemplatesService.getTemplateById<ITemlateVM[]>(\r\n      this.templateId\r\n    ).subscribe((res: any) => {\r\n      //   console.log(\"getTemplateById\", res);\r\n\r\n      this.getStageByTeacherId(res.teacherUserId);\r\n      this.FormCtrl.teacherUserId.setValue(res.teacherUserId);\r\n      this.returnYears(res.stage_id);\r\n      this.returnTeacherSubjects(res.educational_year_id);\r\n      this.GetUnits(res.subjectId);\r\n      this.GetLessons(res.UnitRevisionID);\r\n      this.GetTopics(res.LessonID);\r\n      this.myForm.patchValue(res);\r\n      this.myForm.patchValue(res);\r\n      this.FormCtrl.stageId.setValue(String(res.stage_id));\r\n      this.FormCtrl.yearId.setValue(String(res.educational_year_id));\r\n      this.FormCtrl.subjectId.setValue(String(res.subjectId));\r\n      this.FormCtrl.UnitRevisionID.setValue(String(res.UnitRevisionID));\r\n      this.FormCtrl.LessonID.setValue(String(res.LessonID));\r\n      this.templateName = res.Name;\r\n\r\n      let exam_minute = res.exam_period_minute % 60;\r\n      let exam_hour = (res.exam_period_minute - exam_minute) / 60;\r\n      this.FormCtrl.exam_minute.setValue(exam_minute);\r\n      this.FormCtrl.exam_hour.setValue(exam_hour);\r\n\r\n      this.FormCtrl.fromHour.setValue(res.fromHour);\r\n      this.FormCtrl.toHour.setValue(res.toHour);\r\n      this.GetUnitsForDetails();\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  addTemplateDetails() {\r\n    this.DetailSubmitted = true;\r\n    let valid = this.DetailForm.valid;\r\n    // console.log(this.DetailForm.value);\r\n    if (valid) {\r\n      this.spinner.show();\r\n      this.TemplatesService.addTemplateDetails(this.DetailForm.value).subscribe(\r\n        (res: any) => {\r\n          //     console.log(\"addDetails\", res);\r\n          if (res.returnValue == 1) {\r\n            this.DetailSubmitted = false;\r\n            // this.DetailForm.reset();\r\n            this.getQuestionDetails(this.DetailsCtrl.templateId.value);\r\n            this.DetailsCtrl.questionsCount.reset();\r\n            this.DetailsCtrl.unitRevisionID.setValue(\"\");\r\n            this.DetailsCtrl.lessonID.setValue(\"\");\r\n            this.DetailsCtrl.TopicID.setValue(\"\");\r\n            this.DetailsCtrl.mark.reset();\r\n            this.toastr.success(\"Questiopn added\");\r\n          } else {\r\n            this.toastr.error(res.returnString);\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getQuestionDetails(templateId: any) {\r\n    this.spinner.show();\r\n    this.TemplatesService.getQuestionDetails(templateId).subscribe(\r\n      (res: any) => {\r\n        // console.log(\"getDetails\", res);\r\n        this.QuestionDetails = res;\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  getPresets() {\r\n    this.spinner.show();\r\n    this.TemplatesService.getPresets(this.EduCompId).subscribe((res: any) => {\r\n      // console.log('getPresets', res);\r\n      this.Presets = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  DeleteDetails(question: TemplateDetailsVM) {\r\n    this.spinner.show();\r\n    this.TemplatesService.DeleteDetails(question.Id).subscribe((res: any) => {\r\n      //console.log('DeleteDetails', res);\r\n      if (res.Id == question.Id) {\r\n        let i = this.QuestionDetails.findIndex((e) => e == question);\r\n        this.QuestionDetails.splice(i, 1);\r\n        this.toastr.success(\" Deleted\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  openDeleateDialog(question: TemplateDetailsVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: \"\",\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.DeleteDetails(question);\r\n      });\r\n  }\r\n\r\n  getTeachersByEducompId(EduCompId: any) {\r\n    this.GeneralService.getTeachersByEducompId(EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n      }\r\n    );\r\n  }\r\n\r\n  getStageByTeacherId(teacherId: any) {\r\n    this.FormCtrl.stageId.setValue(\"\");\r\n    this.FormCtrl.yearId.setValue(\"\");\r\n    this.FormCtrl.subjectId.setValue(\"\");\r\n    this.FormCtrl.UnitRevisionID.setValue(\"\");\r\n    this.FormCtrl.LessonID.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (teacherId != \"\") {\r\n      this.EducationalService.getStageByTeacherId(teacherId).subscribe(\r\n        (res: any) => {\r\n          this.stages = res;\r\n          this.FormCtrl.stageId.enable();\r\n          //console.log(res);\r\n        }\r\n      );\r\n    } else {\r\n      this.FormCtrl.stageId.setValue(\"\");\r\n      this.FormCtrl.stageId.disable();\r\n      this.FormCtrl.yearId.disable();\r\n      this.FormCtrl.subjectId.disable();\r\n      this.FormCtrl.UnitRevisionID.disable();\r\n      this.FormCtrl.LessonID.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  returnYears(stageId: any) {\r\n    this.FormCtrl.yearId.setValue(\"\");\r\n    this.FormCtrl.subjectId.setValue(\"\");\r\n    this.FormCtrl.UnitRevisionID.setValue(\"\");\r\n    this.FormCtrl.LessonID.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (stageId != \"\") {\r\n      this.EducationalService.returnYears(stageId).subscribe((res: any) => {\r\n        this.years = res;\r\n        this.FormCtrl.yearId.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.yearId.setValue(\"\");\r\n      this.FormCtrl.yearId.disable();\r\n      this.FormCtrl.subjectId.disable();\r\n      this.FormCtrl.UnitRevisionID.disable();\r\n      this.FormCtrl.LessonID.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  returnTeacherSubjects(yearId: any) {\r\n    this.FormCtrl.subjectId.setValue(\"\");\r\n    this.FormCtrl.UnitRevisionID.setValue(\"\");\r\n    this.FormCtrl.LessonID.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (yearId != \"\") {\r\n      let data = {\r\n        yearId: yearId,\r\n        teacherUserId: this.FormCtrl.teacherUserId.value,\r\n      };\r\n      this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n        (res: any) => {\r\n          this.subjects = res;\r\n          this.FormCtrl.subjectId.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.FormCtrl.subjectId.setValue(\"\");\r\n      this.FormCtrl.subjectId.disable();\r\n      this.FormCtrl.UnitRevisionID.disable();\r\n      this.FormCtrl.LessonID.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  GetUnits(SubjectId: any) {\r\n    this.FormCtrl.UnitRevisionID.setValue(\"\");\r\n    this.FormCtrl.LessonID.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (SubjectId != \"\") {\r\n      this.EducationalService.GetUnits(SubjectId).subscribe((res: any) => {\r\n        this.units = res;\r\n        this.FormCtrl.UnitRevisionID.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.UnitRevisionID.setValue(\"\");\r\n      this.FormCtrl.UnitRevisionID.disable();\r\n      this.FormCtrl.LessonID.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  GetLessons(UnitRevisionID: any) {\r\n    this.FormCtrl.LessonID.setValue(\"\");\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (UnitRevisionID != \"\") {\r\n      this.EducationalService.GetLessons(UnitRevisionID).subscribe(\r\n        (res: any) => {\r\n          this.lessons = res;\r\n          this.FormCtrl.LessonID.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.FormCtrl.LessonID.setValue(\"\");\r\n      this.FormCtrl.LessonID.disable();\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  GetTopics(LessonId: any) {\r\n    this.FormCtrl.topicId.setValue(\"\");\r\n    if (LessonId != \"\") {\r\n      this.EducationalService.GetTopics(LessonId).subscribe((res: any) => {\r\n        this.topics = res;\r\n        this.FormCtrl.topicId.enable();\r\n      });\r\n    } else {\r\n      this.FormCtrl.topicId.setValue(\"\");\r\n      this.FormCtrl.topicId.disable();\r\n    }\r\n  }\r\n\r\n  //#####################################################################\r\n  GetUnitsForDetails() {\r\n    this.DetailsCtrl.unitRevisionID.setValue(\"\");\r\n    this.DetailsCtrl.lessonID.setValue(\"\");\r\n    this.DetailsCtrl.TopicID.setValue(\"\");\r\n    if (this.FormCtrl.subjectId?.value) {\r\n      this.EducationalService.GetUnits(\r\n        this.FormCtrl.subjectId?.value\r\n      ).subscribe((res: any) => {\r\n        this.unitsForDetails = res;\r\n        this.DetailsCtrl.unitRevisionID.enable();\r\n      });\r\n    } else {\r\n      this.DetailsCtrl.unitRevisionID.setValue(\"\");\r\n      this.DetailsCtrl.UnitRevisionID.disable();\r\n      this.DetailsCtrl.lessonID.disable();\r\n      this.DetailsCtrl.TopicID.disable();\r\n    }\r\n  }\r\n\r\n  GetLessonsForDetails(unitRevisionID: any) {\r\n    this.DetailsCtrl.lessonID.setValue(\"\");\r\n    this.DetailsCtrl.TopicID.setValue(\"\");\r\n    if (unitRevisionID != \"\") {\r\n      this.EducationalService.GetLessons(unitRevisionID).subscribe(\r\n        (res: any) => {\r\n          this.lessonsForDetails = res;\r\n          this.DetailsCtrl.lessonID.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.DetailsCtrl.lessonID.setValue(\"\");\r\n      this.DetailsCtrl.lessonID.disable();\r\n      this.DetailsCtrl.TopicID.disable();\r\n    }\r\n  }\r\n\r\n  GetTopicsForDetails(LessonId: any) {\r\n    this.DetailsCtrl.TopicID.setValue(\"\");\r\n    if (LessonId != \"\") {\r\n      this.EducationalService.GetTopics(LessonId).subscribe((res: any) => {\r\n        this.topicsForDetails = res;\r\n        this.DetailsCtrl.TopicID.enable();\r\n      });\r\n    } else {\r\n      this.DetailsCtrl.TopicID.setValue(\"\");\r\n      this.DetailsCtrl.TopicID.disable();\r\n    }\r\n  }\r\n\r\n  resetManual() {\r\n    this.myForm.controls[\"teacherUserId\"].setValue(\"\");\r\n    this.myForm.controls[\"yearId\"].setValue(\"\");\r\n    this.myForm.controls[\"stageId\"].setValue(\"\");\r\n    this.myForm.controls[\"subjectId\"].setValue(\"\");\r\n    this.myForm.controls[\"UnitRevisionID\"].setValue(\"\");\r\n    this.myForm.controls[\"lessonId\"].setValue(\"\");\r\n    this.myForm.controls[\"topicId\"].setValue(\"\");\r\n  }\r\n\r\n  track(index: number, el: any): number {\r\n    return el.Id;\r\n  }\r\n\r\n  repeatableExamValidators() {\r\n    let repeatableExam = this.FormCtrl.repeatableExam.value;\r\n    if (repeatableExam == true) {\r\n      this.FormCtrl.repeatableExam_Count.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.FormCtrl.StudentRepeatExamCost.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n    } else {\r\n      this.FormCtrl.repeatableExam_Count.clearValidators();\r\n      this.FormCtrl.repeatableExam_Count.reset();\r\n      this.FormCtrl.StudentRepeatExamCost.clearValidators();\r\n      this.FormCtrl.StudentRepeatExamCost.reset();\r\n    }\r\n    this.FormCtrl.repeatableExam_Count.updateValueAndValidity();\r\n    this.FormCtrl.StudentRepeatExamCost.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<!-- Template Details -->\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span *ngIf=\"this.FormCtrl.Id.value == null\">\r\n          {{ \"labels.AddTemplate\" | translate }}\r\n        </span>\r\n        <span *ngIf=\"this.FormCtrl.Id.value != null\">\r\n          {{ \"labels.UpdateTemplate\" | translate }} - {{ templateName }}\r\n        </span>\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn bbtn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\">\r\n              <div class=\"row\">\r\n                <!-- Preset -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>Preset</mat-label>\r\n                    <mat-select formControlName=\"presetTemplateId\">\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let Preset of Presets\"\r\n                        [value]=\"Preset.Id\"\r\n                      >\r\n                        {{ Preset.Name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Teacher -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Material.Teacher\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"\r\n                        getStageByTeacherId(FormCtrl.teacherUserId.value)\r\n                      \"\r\n                      formControlName=\"teacherUserId\"\r\n                    >\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let teacher of Teachers\"\r\n                        [value]=\"teacher.teacherUserId\"\r\n                      >\r\n                        {{ teacher.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.teacherUserIdCtrl?.invalid &&\r\n                        (FormCtrl.teacherUserIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"FormCtrl.teacherUserIdCtrl?.errors?.required\"\r\n                      >\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Stage -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Navbar.EducationalStage\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"returnYears(FormCtrl.stageId?.value)\"\r\n                      formControlName=\"stageId\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of stages\"\r\n                        [value]=\"stage.Value\"\r\n                      >\r\n                        {{ stage.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.stageId?.invalid &&\r\n                        (FormCtrl.stageId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.stageId?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Year -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.EducationalYear\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"\r\n                        returnTeacherSubjects(FormCtrl.yearId?.value)\r\n                      \"\r\n                      formControlName=\"yearId\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let year of years\"\r\n                        [value]=\"year.Value\"\r\n                      >\r\n                        {{ year.Text_Ar }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.yearId?.invalid &&\r\n                        (FormCtrl.yearId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.yearId.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Subject -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Material.Subjects\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"\r\n                        GetUnits(FormCtrl.subjectId?.value);\r\n                        GetUnitsForDetails()\r\n                      \"\r\n                      formControlName=\"subjectId\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let subject of subjects\"\r\n                        [value]=\"subject.Value\"\r\n                      >\r\n                        {{ subject.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.subjectId?.invalid &&\r\n                        (FormCtrl.subjectId?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.subjectId?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Unit -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"\r\n                        GetLessons(FormCtrl.UnitRevisionID?.value)\r\n                      \"\r\n                      formControlName=\"UnitRevisionID\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let unit of units\"\r\n                        [value]=\"unit.Value\"\r\n                      >\r\n                        {{ unit.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.UnitRevisionID?.invalid &&\r\n                        (FormCtrl.UnitRevisionID?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.UnitRevisionID?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Lesson -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"LessonID\">\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let lesson of lessons\"\r\n                        [value]=\"lesson.Value\"\r\n                      >\r\n                        {{ lesson.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.LessonID?.invalid &&\r\n                        (FormCtrl.LessonID?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.LessonID?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Template Name -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.TemplateName\" | translate\r\n                    }}</mat-label>\r\n                    <input matInput formControlName=\"Name\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.Name?.invalid &&\r\n                        (FormCtrl.Name?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.Name?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrl.Name?.errors?.whiteSpace\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Exam Hours -->\r\n                <div class=\"col-md-2 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamHours\" | translate }}</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"exam_hour\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.exam_hour?.invalid &&\r\n                        (FormCtrl.exam_hour?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.exam_hour?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"FormCtrl.exam_hour?.errors?.minusNum\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Exam minute -->\r\n                <div class=\"col-md-2 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamMinute\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"exam_minute\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.exam_minute?.invalid &&\r\n                        (FormCtrl.exam_minute?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.exam_minute?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n\r\n                      <span *ngIf=\"FormCtrl.exam_minute?.errors?.minusNum\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Exam price -->\r\n                <div class=\"col-md-2 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ExamPrice\" | translate }} </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"price\" />\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        FormCtrl.price?.invalid &&\r\n                        (FormCtrl.price?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"FormCtrl.price?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                      <span *ngIf=\"price?.errors?.minusNum\">\r\n                        {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Discount -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.Discount\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"priceDiscount\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Discount Type -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.DiscountType\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"priceDiscountType\">\r\n                      <mat-option value=\"\"\r\n                        >{{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option value=\"1\">عام</mat-option>\r\n                      <mat-option value=\"2\">خاص</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- From Date -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.FromDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"fromDate\"\r\n                      formControlName=\"Avilable_Date_From\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"fromDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fromDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- to Date -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label> {{ \"labels.ToDate\" | translate }}</mat-label>\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"toDate\"\r\n                      formControlName=\"Avilable_Date_To\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"toDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #toDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- From Time -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.FromTime\" | translate }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"fromHour\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- to Time -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.ToTime\" | translate }}</mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"toHour\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- resualt Date -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.ExamResultDate\" | translate }}</mat-label\r\n                    >\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"resualtDate\"\r\n                      formControlName=\"ResultDate\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"resualtDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #resualtDate></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Result Time -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.examResultTime\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"time\" formControlName=\"ResultTime\" />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- can Sell Individually -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.SellExamOnly\" | translate }}\r\n                  </mat-label>\r\n                  <mat-radio-group\r\n                    formControlName=\"Individually_Purchased\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- is Repeatable -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.RepeatedExam\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group formControlName=\"repeatableExam\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"false\"\r\n                        (change)=\"repeatableExamValidators()\"\r\n                      >\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button\r\n                        [value]=\"true\"\r\n                        (change)=\"repeatableExamValidators()\"\r\n                      >\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- send WhatsApp Msg -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"Navbar.SendWhatsappMsg\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group formControlName=\"SendWhatsApp\" class=\"row\">\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <!-- Custom Discount -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-label>\r\n                    {{ \"labels.CustomDiscount\" | translate }}\r\n                  </mat-label>\r\n\r\n                  <mat-radio-group\r\n                    formControlName=\"CustomDiscountApplied\"\r\n                    class=\"row\"\r\n                  >\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"false\">\r\n                        {{ \"labels.No\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                    <div class=\"col-md-3 col-12\">\r\n                      <mat-radio-button [value]=\"true\">\r\n                        {{ \"labels.Yes\" | translate }}\r\n                      </mat-radio-button>\r\n                    </div>\r\n                  </mat-radio-group>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"FormCtrl.repeatableExam?.value == true\">\r\n                  <!-- repeat Numbers -->\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"labels.repeatNumbers\" | translate\r\n                      }}</mat-label>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        formControlName=\"repeatableExam_Count\"\r\n                      />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          FormCtrl.repeatableExam_Count?.invalid &&\r\n                          (FormCtrl.repeatableExam_Count?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span\r\n                          *ngIf=\"\r\n                            FormCtrl.repeatableExam_Count?.errors?.required\r\n                          \"\r\n                        >\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span\r\n                          *ngIf=\"FormCtrl.repeatableExam_Count?.errors?.bigZero\"\r\n                        >\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <!-- repeating Price -->\r\n                  <div class=\"col-md-3 col-12\">\r\n                    <mat-form-field appearance=\"legacy\">\r\n                      <mat-label>{{\r\n                        \"labels.repeatingPrice\" | translate\r\n                      }}</mat-label>\r\n                      <input\r\n                        matInput\r\n                        type=\"number\"\r\n                        formControlName=\"StudentRepeatExamCost\"\r\n                      />\r\n                      <mat-hint\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"\r\n                          FormCtrl.StudentRepeatExamCost?.invalid &&\r\n                          (FormCtrl.StudentRepeatExamCost?.touched || submitted)\r\n                        \"\r\n                      >\r\n                        <span\r\n                          *ngIf=\"\r\n                            FormCtrl.StudentRepeatExamCost?.errors?.required\r\n                          \"\r\n                        >\r\n                          {{ \"labels.mustEnterValue\" | translate }}\r\n                        </span>\r\n                        <span\r\n                          *ngIf=\"\r\n                            FormCtrl.StudentRepeatExamCost?.errors?.minusNum\r\n                          \"\r\n                        >\r\n                          {{ \"labels.mustEnterCorrectValue\" | translate }}\r\n                        </span>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"this.FormCtrl.Id.value == null\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"addUpdateTemplate()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n\r\n        <button\r\n          *ngIf=\"this.FormCtrl.Id.value != null\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"addUpdateTemplate()\"\r\n        >\r\n          {{ \"General.Update\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- Question Details -->\r\n<div class=\"row\" *ngIf=\"this.FormCtrl.Id.value != null\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>\r\n          {{ \"labels.QuestionData\" | translate }}\r\n        </span>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"DetailForm\">\r\n              <div class=\"row\">\r\n                <!-- questions Count -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.questionsCount\" | translate }}\r\n                    </mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"questionsCount\"\r\n                    />\r\n                    <mat-hint\r\n                      class=\"rtl has-error pull-right\"\r\n                      *ngIf=\"\r\n                        DetailsCtrl.questionsCount.invalid &&\r\n                        (DetailsCtrl.questionsCount.touched || DetailSubmitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"DetailsCtrl.questionsCount.errors?.required\"\r\n                      >\r\n                        You must enter a value.\r\n                      </span>\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"DetailsCtrl.questionsCount.errors?.bigZero\"\r\n                      >\r\n                        You must enter a correct value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- questions Level -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Level\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"questionsLevel\">\r\n                      <mat-option>\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option [value]=\"1\">سهل</mat-option>\r\n                      <mat-option [value]=\"5\">متوسط</mat-option>\r\n                      <mat-option [value]=\"10\">صعب</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Question Mark -->\r\n                <div class=\"col-md-3 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"labels.QuestionMark\" | translate }}\r\n                    </mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"mark\" />\r\n                    <mat-hint\r\n                      class=\"rtl has-error pull-right\"\r\n                      *ngIf=\"\r\n                        DetailsCtrl.mark.invalid &&\r\n                        (DetailsCtrl.mark.touched || DetailSubmitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"DetailsCtrl.mark.errors?.required\"\r\n                      >\r\n                        You must enter a value.\r\n                      </span>\r\n                      <span\r\n                        class=\"text-danger\"\r\n                        *ngIf=\"DetailsCtrl.mark.errors?.minusNum\"\r\n                      >\r\n                        You must enter a correct value.\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Unit -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"\r\n                        GetLessonsForDetails(DetailsCtrl.unitRevisionID?.value)\r\n                      \"\r\n                      formControlName=\"unitRevisionID\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let unit of unitsForDetails\"\r\n                        [value]=\"unit.Value\"\r\n                      >\r\n                        {{ unit.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        DetailsCtrl.unitRevisionID?.invalid &&\r\n                        (DetailsCtrl.unitRevisionID?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"DetailsCtrl.unitRevisionID?.errors?.required\"\r\n                      >\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Lesson -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"lessonID\"\r\n                      (selectionChange)=\"\r\n                        GetTopicsForDetails(DetailsCtrl.lessonID?.value)\r\n                      \"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let lesson of lessonsForDetails\"\r\n                        [value]=\"lesson.Value\"\r\n                      >\r\n                        {{ lesson.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        DetailsCtrl.LessonID?.invalid &&\r\n                        (DetailsCtrl.LessonID?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"DetailsCtrl.LessonID?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <!-- Topic -->\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Topic\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"TopicID\">\r\n                      <mat-option value=\"\">\r\n                        {{ \"General.Choose\" | translate }}\r\n                      </mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let topic of topicsForDetails\"\r\n                        [value]=\"topic.Value\"\r\n                      >\r\n                        {{ topic.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button\r\n          *ngIf=\"this.FormCtrl.Id.value != null\"\r\n          mat-raised-button\r\n          class=\"btn btn-primary bg-light-info\"\r\n          (click)=\"addTemplateDetails()\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- Question List  -->\r\n<div class=\"row\" *ngIf=\"this.FormCtrl.Id.value != null\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        <span>\r\n          {{ \"labels.Questions\" | translate }}\r\n        </span>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <table class=\"table table-striped table-hover table-full-width rtl\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>{{ \"labels.questionsCount\" | translate }}</th>\r\n                  <th>{{ \"labels.QuestionMark\" | translate }}</th>\r\n                  <th>{{ \"labels.Level\" | translate }}</th>\r\n                  <th>{{ \"labels.Subject\" | translate }}</th>\r\n                  <th>{{ \"labels.Unit\" | translate }}</th>\r\n                  <th>{{ \"labels.Lesson\" | translate }}</th>\r\n                  <th>{{ \"labels.Topic\" | translate }}</th>\r\n                  <th>­</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  *ngFor=\"\r\n                    let detail of QuestionDetails\r\n                      | paginate\r\n                        : {\r\n                            itemsPerPage: 5,\r\n                            currentPage: p,\r\n                            totalItems: QuestionDetails.length\r\n                          };\r\n                    let i = index;\r\n                    trackBy: track\r\n                  \"\r\n                >\r\n                  <td>{{ i + 1 }}</td>\r\n\r\n                  <td>{{ detail?.questionsCount }}</td>\r\n                  <td>{{ detail?.mark }}</td>\r\n                  <td *ngIf=\"detail?.questionsLevel == 1\">سهل</td>\r\n                  <td *ngIf=\"detail?.questionsLevel == 5\">متوسط</td>\r\n                  <td *ngIf=\"detail?.questionsLevel == 10\">صعب</td>\r\n                  <td>{{ detail?.SubjectName }}</td>\r\n                  <td>{{ detail?.UnitName }}</td>\r\n                  <td>{{ detail?.LessonName }}</td>\r\n                  <td>{{ detail?.TopicName }}</td>\r\n\r\n                  <td class=\"text-center\">\r\n                    <button\r\n                      (click)=\"openDeleateDialog(detail)\"\r\n                      mat-mini-fab\r\n                      color=\"warn\"\r\n                      matTooltip=\"delete questions\"\r\n                    >\r\n                      <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- Start Pagination -->\r\n            <div class=\"paginator-box\" *ngIf=\"QuestionDetails.length > 5\">\r\n              <pagination-controls\r\n                dir=\"ltr\"\r\n                [maxSize]=\"maxSize\"\r\n                (pageChange)=\"p = $event\"\r\n                previousLabel=\"\"\r\n                nextLabel=\"\"\r\n              >\r\n              </pagination-controls>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n  IAddExamCustomePointsVM,\r\n  IAddExamPointsVM,\r\n  IExamPointVM,\r\n} from \"app/admin/models/admin/point\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { PointsService } from \"app/admin/services/Admin/points.service\";\r\nimport { CustomeValidator } from \"app/shared/validators/customeValid.validator\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"app-templates-custome-points\",\r\n  templateUrl: \"./templates-custome-points.component.html\",\r\n  styleUrls: [\"./templates-custome-points.component.scss\"],\r\n})\r\nexport class TemplatesCustomePointsComponent implements OnInit {\r\n  Points: IExamPointVM[];\r\n  myForm!: FormGroup;\r\n  Submitted = false;\r\n  p: number = 1;\r\n  maxSize = 9;\r\n  ItemsCount?: number;\r\n  templateId: number;\r\n  EduCompId: number;\r\n  functionId: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private authserv: AuthService,\r\n    private route: ActivatedRoute,\r\n    private PointsService: PointsService,\r\n    private dialog: MatDialog,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.paramMap.subscribe((params) => {\r\n      this.templateId = Number(params.get(\"templateId\"));\r\n    });\r\n\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTemplateCustomPoints(1);\r\n\r\n    this.myForm = this.fb.group({\r\n      ByQuestion: [false, [Validators.required]],\r\n      from: [\"\"],\r\n      to: [\"\"],\r\n      value: [\"\", [Validators.required, CustomeValidator.minusNum]],\r\n    });\r\n\r\n    this.ByQuestionValidators(false);\r\n  }\r\n\r\n  get FormCtrls() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  addTemplateCustomPoint() {\r\n    this.Submitted = true;\r\n\r\n    let data: IAddExamCustomePointsVM = {\r\n      itemId: this.templateId,\r\n      ByQuestion: this.FormCtrls?.ByQuestion.value,\r\n      from: this.FormCtrls?.from.value,\r\n      to: this.FormCtrls?.to.value,\r\n      value: this.FormCtrls?.value.value,\r\n    };\r\n\r\n    if (this.myForm.valid) {\r\n      this.spinner.show();\r\n      this.PointsService.addTemplateCustomPoint(data).subscribe((res: any) => {\r\n        if (res.returnValue == 1) {\r\n          this.getTemplateCustomPoints(1);\r\n          this.toastr.success(\"تم إاضافة النقاط\");\r\n          this.Submitted = false;\r\n          this.myForm.reset();\r\n          this.FormCtrls?.ByQuestion.setValue(true);\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n    }\r\n  }\r\n\r\n  getTemplateCustomPoints(p: Number) {\r\n    this.spinner.show();\r\n    this.PointsService.getTemplateCustomPoints<IExamPointVM>(\r\n      p,\r\n      this.templateId\r\n    ).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        this.ItemsCount = res.itemsCount;\r\n        this.Points = res.points;\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  deleteExamCustomPoint(point: IExamPointVM) {\r\n    this.spinner.show();\r\n    this.PointsService.deleteExamCustomPoint(point.Id).subscribe((res: any) => {\r\n      if (res.returnValue == 1) {\r\n        let i = this.Points.findIndex((e) => e == point);\r\n        this.Points.splice(i, 1);\r\n        this.toastr.success(\"تم الحذف\");\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  openDeleateExamPointDialog(point: IExamPointVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: `${point.Value}: points`,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteExamCustomPoint(point);\r\n      });\r\n  }\r\n\r\n  track(index: number, point: IExamPointVM): number {\r\n    return point.Id;\r\n  }\r\n\r\n  ByQuestionValidators(ByQuestion: boolean) {\r\n    if (ByQuestion == true) {\r\n      this.FormCtrls.from.reset();\r\n      this.FormCtrls.from.clearValidators();\r\n      this.FormCtrls.to.reset();\r\n      this.FormCtrls.to.clearValidators();\r\n    } else {\r\n      this.FormCtrls.from.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.minusNum,\r\n      ]);\r\n\r\n      this.FormCtrls.to.setValidators([\r\n        Validators.required,\r\n        CustomeValidator.bigZero,\r\n      ]);\r\n    }\r\n    this.FormCtrls.from.updateValueAndValidity();\r\n    this.FormCtrls.to.updateValueAndValidity();\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"labels.TemplatePoints\" | translate }}\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"/dashboard/exams-setup/templates/index\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-warning bg-light-warning float-right\"\r\n        >\r\n          {{ \"General.Back\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <form [formGroup]=\"myForm\">\r\n          <div class=\"row\">\r\n            <!--  ByQuestion    -->\r\n            <!-- <div class=\"col-12\">\r\n              <mat-label>\r\n                {{ \"labels.ByQuestionLabel\" | translate }}\r\n              </mat-label>\r\n              <mat-radio-group formControlName=\"ByQuestion\" class=\"row\">\r\n                <div class=\"col-6\">\r\n                  <mat-radio-button\r\n                    [value]=\"true\"\r\n                    (click)=\"ByQuestionValidators(true)\"\r\n                  >\r\n                    {{ \"labels.ByQuestion\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <mat-radio-button\r\n                    [value]=\"false\"\r\n                    (click)=\"ByQuestionValidators(false)\"\r\n                  >\r\n                    {{ \"labels.ByExam\" | translate }}\r\n                  </mat-radio-button>\r\n                </div>\r\n              </mat-radio-group>\r\n            </div> -->\r\n\r\n            <ng-container *ngIf=\"FormCtrls.ByQuestion.value === false\">\r\n              <!--  from    -->\r\n              <div class=\"col-lg-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.From\" | translate }}\r\n                  </mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"from\" />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      FormCtrls.from.invalid &&\r\n                      (FormCtrls.from.touched || Submitted)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.from.errors?.required ||\r\n                        FormCtrls.from.errors?.minusNum\r\n                      \"\r\n                    >\r\n                      You must enter a value.\r\n                    </span>\r\n                  </mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <!-- to  -->\r\n              <div class=\"col-lg-4 col-12\">\r\n                <mat-form-field appearance=\"legacy\">\r\n                  <mat-label>\r\n                    {{ \"labels.To\" | translate }}\r\n                  </mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"to\" />\r\n                  <mat-hint\r\n                    class=\"text-danger\"\r\n                    *ngIf=\"\r\n                      FormCtrls.to.invalid &&\r\n                      (FormCtrls.to.touched || Submitted)\r\n                    \"\r\n                  >\r\n                    <span\r\n                      *ngIf=\"\r\n                        FormCtrls.to.errors?.required ||\r\n                        FormCtrls.to.errors?.minusNum\r\n                      \"\r\n                    >\r\n                      You must enter a value.\r\n                    </span>\r\n                  </mat-hint>\r\n                </mat-form-field>\r\n              </div>\r\n            </ng-container>\r\n\r\n            <!-- value ==> points Number  -->\r\n            <div class=\"col-lg-4 col-12\">\r\n              <mat-form-field appearance=\"legacy\">\r\n                <mat-label>\r\n                  {{ \"labels.pointsNumber\" | translate }}\r\n                </mat-label>\r\n                <input matInput type=\"number\" formControlName=\"value\" />\r\n                <mat-hint\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    FormCtrls.value.invalid &&\r\n                    (FormCtrls.value.touched || Submitted)\r\n                  \"\r\n                >\r\n                  <span\r\n                    *ngIf=\"\r\n                      FormCtrls.value.errors?.required ||\r\n                      FormCtrls.value.errors?.minusNum\r\n                    \"\r\n                  >\r\n                    You must enter a value.\r\n                  </span>\r\n                </mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <mat-card-actions align=\"end\">\r\n            <button\r\n              mat-raised-button\r\n              type=\"button\"\r\n              class=\"btn btn-primary bg-light-info\"\r\n              (click)=\"addTemplateCustomPoint()\"\r\n            >\r\n              <i class=\"fa fa-plus\"></i>\r\n              {{ \"General.Add\" | translate }}\r\n            </button>\r\n          </mat-card-actions>\r\n        </form>\r\n\r\n        <!-- Start Exams points Table -->\r\n        <ng-container>\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  {{ \"labels.ByQuestion\" | translate }}\r\n                </th>\r\n                <th>\r\n                  {{ \"labels.From\" | translate }}\r\n                </th>\r\n\r\n                <th>\r\n                  {{ \"labels.To\" | translate }}\r\n                </th>\r\n\r\n                <th>\r\n                  {{ \"labels.pointsNumber\" | translate }}\r\n                </th>\r\n\r\n                <th>actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"\r\n                  let point of Points\r\n                    | paginate\r\n                      : {\r\n                          itemsPerPage: 5,\r\n                          currentPage: p,\r\n                          totalItems: ItemsCount\r\n                        };\r\n                  let i = index;\r\n                  trackBy: track\r\n                \"\r\n              >\r\n                <td *ngIf=\"point.ByQuestion\">\r\n                  {{ \"labels.ByQuestion\" | translate }}\r\n                </td>\r\n                <td *ngIf=\"!point.ByQuestion\">\r\n                  {{ \"labels.ByExam\" | translate }}\r\n                </td>\r\n                <td>{{ point.FromValue }}</td>\r\n                <td>{{ point.ToValue }}</td>\r\n                <td>{{ point.Value }}</td>\r\n                <td>\r\n                  <button\r\n                    (click)=\"openDeleateExamPointDialog(point)\"\r\n                    mat-mini-fab\r\n                    color=\"warn\"\r\n                  >\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <!-- Start  Pagination -->\r\n            <pagination-controls\r\n              *ngIf=\"Points?.length > 5\"\r\n              dir=\"ltr\"\r\n              [maxSize]=\"maxSize\"\r\n              (pageChange)=\"p = $event; getExamCustomPoints($event)\"\r\n              previousLabel=\"\"\r\n              nextLabel=\"\"\r\n            >\r\n            </pagination-controls>\r\n          </table>\r\n        </ng-container>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport {\r\n  GeneralDropdownVM,\r\n  IRowFunctionVM,\r\n  teacherByEduCompId,\r\n} from \"app/shared/models/general/general\";\r\nimport { AuthService } from \"app/shared/services/auth/auth.service\";\r\nimport { GeneralService } from \"app/shared/services/General/general.service\";\r\nimport { EducationalService } from \"app/admin/services/Admin/educational.service\";\r\nimport { IEducationYearDropModel } from \"app/admin/models/admin/exam\";\r\nimport { TemplatesService } from \"app/teacher/services/templates.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { ITemplateListVM } from \"app/admin/models/admin/exams\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DeleteDialogComponent } from \"app/shared/components/dialogs/delete-dialog/delete-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { StudentService } from \"app/student/services/student.service\";\r\n@Component({\r\n  selector: \"app-templates-index\",\r\n  templateUrl: \"./templates-index.component.html\",\r\n  styleUrls: [\"./templates-index.component.css\"],\r\n})\r\nexport class TemplatesIndexComponent implements OnInit {\r\n  myForm!: FormGroup;\r\n  functionId: number;\r\n  itemsCount: any;\r\n  Templates: ITemplateListVM[] = [];\r\n  Teachers: teacherByEduCompId[] = [];\r\n  stages: GeneralDropdownVM[] = [];\r\n  years: GeneralDropdownVM[] = [];\r\n  educationYears: IEducationYearDropModel[] = [];\r\n  subjects: GeneralDropdownVM[] = [];\r\n  units: any = [];\r\n  lessons: any = [];\r\n  topics: any = [];\r\n  EduCompId: any;\r\n  submitted = false;\r\n  rowFunctions: IRowFunctionVM[];\r\n  displayedColumns: string[] = [\r\n    \"Name\",\r\n    \"Teacher\",\r\n    \"Subject\",\r\n    \"Year\",\r\n    \"publish\",\r\n    \"actions\",\r\n  ];\r\n  dataSource: MatTableDataSource<ITemplateListVM>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private GeneralService: GeneralService,\r\n    private authserv: AuthService,\r\n    private fb: FormBuilder,\r\n    private EducationalService: EducationalService,\r\n    private StudentService: StudentService,\r\n    private TemplatesService: TemplatesService,\r\n    private spinner: NgxSpinnerService\r\n  ) {\r\n    route.queryParamMap.subscribe((params) => {\r\n      this.functionId = Number(params.get(\"functionId\"));\r\n      //  console.log(\"functionId\", this.functionId);\r\n      if (this.functionId) {\r\n        this.authserv\r\n          .getUserRowFunctions(this.functionId)\r\n          .subscribe((res: any) => {\r\n            if (res) {\r\n              this.rowFunctions = res;\r\n              //  console.log(`RowFunctions for\"${this.functionId}\": `, res);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  get stageIdCtrl() {\r\n    return this.myForm.get(\"stageId\");\r\n  }\r\n\r\n  get teacherUserIdCtrl() {\r\n    return this.myForm.get(\"teacherUserId\");\r\n  }\r\n\r\n  get educationYearIdCtrl() {\r\n    return this.myForm.get(\"yearId\");\r\n  }\r\n\r\n  get subjectIdCtrl() {\r\n    return this.myForm.get(\"subjectId\");\r\n  }\r\n\r\n  get unitIdCtrl() {\r\n    return this.myForm.get(\"unitId\");\r\n  }\r\n\r\n  get lessonIdCtrl() {\r\n    return this.myForm.get(\"lessonId\");\r\n  }\r\n\r\n  get topicIdCtrl() {\r\n    return this.myForm.get(\"topicId\");\r\n  }\r\n\r\n  get page() {\r\n    return this.myForm.get(\"page\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.EduCompId = this.authserv.getEduCompId();\r\n    this.myForm = this.fb.group({\r\n      teacherUserId: [\"\"],\r\n      yearId: [\"\"],\r\n      stageId: [\"\"],\r\n      subjectId: [\"\"],\r\n      unitId: [\"\"],\r\n      lessonId: [\"\"],\r\n      topicId: [\"\"],\r\n      page: [\"\"],\r\n    });\r\n    this.getTeachersByEducompId();\r\n    this.getTemplates(1);\r\n    this.getTeachersByEducompId();\r\n\r\n    this.stageIdCtrl.disable();\r\n    this.educationYearIdCtrl.disable();\r\n    this.subjectIdCtrl.disable();\r\n    this.unitIdCtrl.disable();\r\n    this.lessonIdCtrl.disable();\r\n    this.topicIdCtrl.disable();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.authserv.EduCompId.subscribe((e) => {\r\n      this.EduCompId = e.EduCompId;\r\n      this.getTemplates(1);\r\n    });\r\n\r\n    this.authserv.branchId.subscribe((e) => {\r\n      //this.branchId = e.branchId;\r\n    });\r\n\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getTemplates(p: number) {\r\n    this.spinner.show();\r\n    this.page?.setValue(p);\r\n    this.TemplatesService.getTemplates(\r\n      this.EduCompId,\r\n      p,\r\n      this.myForm.value\r\n    ).subscribe((res: any) => {\r\n      //  console.log('getTemplates',res);\r\n      this.Templates = res.result;\r\n      this.dataSource = new MatTableDataSource(res.result);\r\n      this.itemsCount = res.TotalItemCount;\r\n      this.spinner.hide();\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  PublishDepublishTemplate(templateId: any) {\r\n    this.spinner.show();\r\n    this.TemplatesService.PublishDepublishTemplate(templateId).subscribe(\r\n      (res: any) => {\r\n        if (res.returnString == \"Done\") {\r\n          for (const obj of this.Templates) {\r\n            if (obj.Id === templateId) {\r\n              obj.isPublish = !obj.isPublish;\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  openDeleateDialog(template: ITemplateListVM): void {\r\n    this.dialog\r\n      .open(DeleteDialogComponent, {\r\n        data: {\r\n          msg: template.Name,\r\n        },\r\n      })\r\n      .afterClosed()\r\n      .subscribe((confirm) => {\r\n        if (confirm) this.deleteTemplate(template);\r\n      });\r\n  }\r\n\r\n  deleteTemplate(template: ITemplateListVM) {\r\n    this.TemplatesService.deleteTemplate(template.Id).subscribe((res: any) => {\r\n      let deletedIndex = this.Templates.findIndex((e) => e.Id == template.Id);\r\n      this.Templates.splice(deletedIndex, 1);\r\n      this.toastr.success(\" Deleted\");\r\n      this.getTemplates(1);\r\n    });\r\n  }\r\n\r\n  getTeachersByEducompId() {\r\n    this.GeneralService.getTeachersByEducompId(this.EduCompId).subscribe(\r\n      (res: any) => {\r\n        this.Teachers = res.lstTeachers;\r\n\r\n        //console.log(\"lst\",this.Teachers);\r\n      }\r\n    );\r\n    this.getStageByTeacherId();\r\n  }\r\n\r\n  getStageByTeacherId() {\r\n    this.stageIdCtrl.setValue(\"\");\r\n    this.educationYearIdCtrl.setValue(\"\");\r\n    this.subjectIdCtrl.setValue(\"\");\r\n    this.unitIdCtrl.setValue(\"\");\r\n    this.lessonIdCtrl.setValue(\"\");\r\n    this.topicIdCtrl.setValue(\"\");\r\n    if (this.teacherUserIdCtrl.value != \"\") {\r\n      console.log(\"teacher\", this.teacherUserIdCtrl.value);\r\n      this.EducationalService.getStageByTeacherId(\r\n        this.teacherUserIdCtrl.value\r\n      ).subscribe((res: any) => {\r\n        console.log(res);\r\n        this.stages = res;\r\n        this.stageIdCtrl.enable();\r\n        //console.log(res);\r\n      });\r\n    } else {\r\n      this.stageIdCtrl.setValue(\"\");\r\n      this.stageIdCtrl.disable();\r\n      this.educationYearIdCtrl.disable();\r\n      this.subjectIdCtrl.disable();\r\n      this.unitIdCtrl.disable();\r\n      this.lessonIdCtrl.disable();\r\n      this.topicIdCtrl.disable();\r\n    }\r\n  }\r\n\r\n  returnYears() {\r\n    this.educationYearIdCtrl.setValue(\"\");\r\n    this.subjectIdCtrl.setValue(\"\");\r\n    this.unitIdCtrl.setValue(\"\");\r\n    this.lessonIdCtrl.setValue(\"\");\r\n    this.topicIdCtrl.setValue(\"\");\r\n    if (this.stageIdCtrl.value != \"\") {\r\n      this.EducationalService.returnYears(this.stageIdCtrl.value).subscribe(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.years = res;\r\n          this.educationYearIdCtrl.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.educationYearIdCtrl.setValue(\"\");\r\n      this.educationYearIdCtrl.disable();\r\n      this.subjectIdCtrl.disable();\r\n      this.unitIdCtrl.disable();\r\n      this.lessonIdCtrl.disable();\r\n      this.topicIdCtrl.disable();\r\n    }\r\n  }\r\n\r\n  returnTeacherSubjects() {\r\n    this.subjectIdCtrl.setValue(\"\");\r\n    this.unitIdCtrl.setValue(\"\");\r\n    this.lessonIdCtrl.setValue(\"\");\r\n    this.topicIdCtrl.setValue(\"\");\r\n    if (this.educationYearIdCtrl.value != \"\") {\r\n      let data = {\r\n        yearId: this.educationYearIdCtrl.value,\r\n        teacherUserId: this.myForm.controls[\"teacherUserId\"].value,\r\n      };\r\n      console.log(data);\r\n      this.EducationalService.returnTeacherSubjects(data).subscribe(\r\n        (res: any) => {\r\n          console.log(\"subjects\", res);\r\n          this.subjects = res;\r\n          this.subjectIdCtrl.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.subjectIdCtrl.setValue(\"\");\r\n      this.subjectIdCtrl.disable();\r\n      this.unitIdCtrl.disable();\r\n      this.lessonIdCtrl.disable();\r\n      this.topicIdCtrl.disable();\r\n    }\r\n  }\r\n\r\n  GetUnits() {\r\n    this.unitIdCtrl.setValue(\"\");\r\n    this.lessonIdCtrl.setValue(\"\");\r\n    this.topicIdCtrl.setValue(\"\");\r\n    if (this.subjectIdCtrl.value != \"\") {\r\n      this.EducationalService.GetUnits(this.subjectIdCtrl.value).subscribe(\r\n        (res: any) => {\r\n          console.log(\"unit\", res);\r\n          this.units = res;\r\n          this.unitIdCtrl.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.unitIdCtrl.setValue(\"\");\r\n      this.unitIdCtrl.disable();\r\n      this.lessonIdCtrl.disable();\r\n      this.topicIdCtrl.disable();\r\n    }\r\n  }\r\n\r\n  GetLessons() {\r\n    this.lessonIdCtrl.setValue(\"\");\r\n    this.topicIdCtrl.setValue(\"\");\r\n    if (this.unitIdCtrl.value != \"\") {\r\n      this.EducationalService.GetLessons(this.unitIdCtrl.value).subscribe(\r\n        (res: any) => {\r\n          console.log(\"lesson\", res);\r\n          this.lessons = res;\r\n          this.lessonIdCtrl.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.lessonIdCtrl.setValue(\"\");\r\n      this.lessonIdCtrl.disable();\r\n      this.topicIdCtrl.disable();\r\n    }\r\n  }\r\n\r\n  GetTopics() {\r\n    this.topicIdCtrl.setValue(\"\");\r\n    if (this.lessonIdCtrl.value != \"\") {\r\n      this.EducationalService.GetTopics(this.lessonIdCtrl.value).subscribe(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.topics = res;\r\n          this.topicIdCtrl.enable();\r\n        }\r\n      );\r\n    } else {\r\n      this.topicIdCtrl.setValue(\"\");\r\n      this.topicIdCtrl.disable();\r\n    }\r\n  }\r\n\r\n  GenerateExamFromTemplate(templateId: any) {\r\n    this.spinner.show();\r\n    this.StudentService.GenerateExamFromTemplate(templateId).subscribe(\r\n      (res: any) => {\r\n        if ((res.returnValue = 200 && res.examId)) {\r\n          let url = `/dashboard/exams-setup/exam-preview/${res.examId}?templateId=${templateId}`;\r\n          window.open(url, \"_blank\");\r\n          // this.router\r\n          //   .navigate([`/dashboard/exams-setup/exam-preview/${res.examId}`], {\r\n          //     queryParams: { templateId: templateId },\r\n          //   })\r\n          //   .then((result) => {\r\n          //     window.open(url, \"_blank\");\r\n          //   });\r\n        } else {\r\n          this.toastr.error(res.returnString);\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ngx-spinner></ngx-spinner>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"General.Search\" | translate }}\r\n\r\n        <a\r\n          mat-raised-button\r\n          routerLink=\"../add-template\"\r\n          [queryParams]=\"{\r\n            functionId: functionId\r\n          }\"\r\n          class=\"btn btn-info bg-light-info float-right\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          {{ \"General.Add\" | translate }}\r\n        </a>\r\n\r\n        <a\r\n          mat-raised-button\r\n          (click)=\"getTemplates(1)\"\r\n          class=\"btn btn-info float-right\"\r\n        >\r\n          <i class=\"fa fa-search mr-1\"></i>\r\n          {{ \"General.Search\" | translate }}\r\n        </a>\r\n      </mat-card-title>\r\n      <mat-card-content class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <form [formGroup]=\"myForm\"  >\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>\r\n                      {{ \"Material.Teacher\" | translate }}\r\n                    </mat-label>\r\n                    <mat-select\r\n                      formControlName=\"teacherUserId\"\r\n                      (selectionChange)=\"getStageByTeacherId()\"\r\n                    >\r\n                      <mat-option value=\"\">\r\n                        {{ \"Material.Teacher\" | translate }}</mat-option\r\n                      >\r\n                      <mat-option\r\n                        *ngFor=\"let teach of Teachers\"\r\n                        [value]=\"teach.teacherUserId\"\r\n                      >\r\n                        {{ teach.teacher_ar_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"Navbar.EducationalStage\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"returnYears()\"\r\n                      formControlName=\"stageId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"Navbar.EducationalStage\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let stage of stages\"\r\n                        [value]=\"stage.Value\"\r\n                      >\r\n                        {{ stage.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        stageIdCtrl?.invalid &&\r\n                        (stageIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"myForm.stageIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{\r\n                      \"labels.EducationalYear\" | translate\r\n                    }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"returnTeacherSubjects()\"\r\n                      formControlName=\"yearId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"labels.EducationalYear\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let year of years\"\r\n                        [value]=\"year.Value\"\r\n                      >\r\n                        {{ year.Text_Ar }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        educationYearIdCtrl?.invalid &&\r\n                        (educationYearIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"educationYearIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"Material.Subjects\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"GetUnits()\"\r\n                      formControlName=\"subjectId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"Material.Subjects\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let sub of subjects\"\r\n                        [value]=\"sub.Value\"\r\n                      >\r\n                        {{ sub.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        subjectIdCtrl?.invalid &&\r\n                        (subjectIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"subjectIdCtrl?.errors?.required\">\r\n                        {{ \"labels.MustChoosevalue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Unit\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      (selectionChange)=\"GetLessons()\"\r\n                      formControlName=\"unitId\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"labels.Unit\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        *ngFor=\"let unit of units\"\r\n                        [value]=\"unit.Value\"\r\n                      >\r\n                        {{ unit.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        unitIdCtrl?.invalid &&\r\n                        (unitIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"unitIdCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Lesson\" | translate }}</mat-label>\r\n                    <mat-select\r\n                      formControlName=\"lessonId\"\r\n                      (selectionChange)=\"GetTopics()\"\r\n                    >\r\n                      <mat-option value=\"\">{{\r\n                        \"labels.Lesson\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        [value]=\"lession.Value\"\r\n                        *ngFor=\"let lession of lessons\"\r\n                      >\r\n                        {{ lession.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        lessonIdCtrl?.invalid &&\r\n                        (lessonIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"lessionIdCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4 col-12\">\r\n                  <mat-form-field appearance=\"legacy\">\r\n                    <mat-label>{{ \"labels.Topic\" | translate }}</mat-label>\r\n                    <mat-select formControlName=\"topicId\">\r\n                      <mat-option value=\"\">{{\r\n                        \"labels.Topic\" | translate\r\n                      }}</mat-option>\r\n                      <mat-option\r\n                        [value]=\"topic.Value\"\r\n                        *ngFor=\"let topic of topics\"\r\n                      >\r\n                        {{ topic.Text }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint\r\n                      class=\"danger\"\r\n                      *ngIf=\"\r\n                        lessonIdCtrl?.invalid &&\r\n                        (lessonIdCtrl?.touched || submitted)\r\n                      \"\r\n                    >\r\n                      <span *ngIf=\"lessionIdCtrl?.errors?.required\">\r\n                        {{ \"labels.mustEnterValue\" | translate }}\r\n                      </span>\r\n                    </mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <mat-card>\r\n      <mat-card-title>\r\n        {{ \"Navbar.Templates\" | translate }}\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Filter</mat-label>\r\n          <input\r\n            matInput\r\n            (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"Ex. ium\"\r\n            #input\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"mat-elevation-z8 f-w\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"Name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Name\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Name }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Subject\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Materials\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Subject }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Year\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.EducationalYear\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Year }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"Teacher\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.Teacher\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">{{ ele.Teacher }}</td>\r\n            </ng-container>\r\n\r\n            <!-- publish Column -->\r\n            <ng-container matColumnDef=\"publish\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                {{ \"labels.ThePublish\" | translate }}\r\n              </th>\r\n              <td mat-cell *matCellDef=\"let ele\">\r\n                <span *ngIf=\"ele?.isPublish\">\r\n                  {{ \"labels.Published\" | translate }}\r\n                  <i class=\"fa fa-check-circle success ml-1\" aria-hidden=\"true\">\r\n                  </i>\r\n                </span>\r\n                <span *ngIf=\"!ele?.isPublish\">\r\n                  {{ \"labels.UnPublished\" | translate }}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n\r\n              <td mat-cell *matCellDef=\"let template\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-primary\"\r\n                    id=\"dropdownBasic1\"\r\n                    ngbDropdownToggle\r\n                  >\r\n                    actions\r\n                    <!-- <i class=\"fa fa-ellipsis-h\"></i> -->\r\n                  </button>\r\n                  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                    <ng-container *ngFor=\"let fun of rowFunctions\">\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Publish'\"\r\n                        (click)=\"PublishDepublishTemplate(template.Id)\"\r\n                        ngbDropdownItem\r\n                      >\r\n                        <span *ngIf=\"!template.isPublish\">\r\n                          <i class=\"ft-upload font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Publish\" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"template.isPublish\">\r\n                          <i class=\"ft-download font-medium-3 mr-2\"></i>\r\n                          {{ \"labels.Unpublish\" | translate }}\r\n                        </span>\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'Edit'\"\r\n                        ngbDropdownItem\r\n                        routerLink=\"../add-template\"\r\n                        [queryParams]=\"{\r\n                          templateId: template.Id,\r\n                          functionId: functionId\r\n                        }\"\r\n                      >\r\n                        <i class=\"fa fa-edit mr-2\"></i>\r\n                        {{ \"General.Edit\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        *ngIf=\"fun.functionName === 'previewTemplate'\"\r\n                        ngbDropdownItem\r\n                        (click)=\"GenerateExamFromTemplate(template.Id)\"\r\n                      >\r\n                        <i class=\"fa fa-video-camera mr-2\"> </i>\r\n                        {{ \"General.ExamPreview\" | translate }}\r\n                      </a>\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Points'\"\r\n                        routerLink=\"../template-points/{{ template.Id }}\"\r\n                        [queryParams]=\"{\r\n                          functionId: functionId\r\n                        }\"\r\n                        ><i class=\"fa fa-gift font-medium-3 mr-2\"></i>النقاط</a\r\n                      >\r\n\r\n                      <a\r\n                        ngbDropdownItem\r\n                        *ngIf=\"fun.functionName === 'Delete'\"\r\n                        (click)=\"openDeleateDialog(template)\"\r\n                      >\r\n                        <i class=\"fa fa-times mr-2\"></i>\r\n                        {{ \"General.Delete\" | translate }}\r\n                      </a>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr\r\n              mat-row\r\n              *matRowDef=\"let row; columns: displayedColumns\"\r\n              [class.bg-light-info]=\"!row?.isPublish\"\r\n            ></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">\r\n                No data matching the filter \"{{ input.value }}\"\r\n              </td>\r\n            </tr>\r\n          </table>\r\n          <mat-paginator\r\n            [pageSizeOptions]=\"[10]\"\r\n            (page)=\"getTemplates($event.pageIndex + 1)\"\r\n            [length]=\"itemsCount\"\r\n            [pageSize]=\"10\"\r\n            showFirstLastButtons\r\n            aria-label=\"Select page of users\"\r\n          >\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppClientService } from \"app/shared/services/app-client.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TemplatesService extends AppClientService {\r\n  constructor(private http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getTemplates(eduCompID: any, page: number, body: any) {\r\n    return this.post(`Admin/getTemplates/${eduCompID}/${page}`, body);\r\n  }\r\n\r\n  getTemplateById<T>(templateId: any) {\r\n    return this.get<T>(`template/returnTemplateById/${templateId}`);\r\n  }\r\n\r\n  deleteTemplate(id: any) {\r\n    return this.get(`template/deleteTemplateById/${id}`);\r\n  }\r\n\r\n  PublishDepublishTemplate(id: any) {\r\n    return this.post(`template/PublishDepublishTemplate/${id}`, null);\r\n  }\r\n\r\n  getPresets(eduCompId: any) {\r\n    return this.get(`template/returnPresetsByEduCompId/${eduCompId}`);\r\n  }\r\n\r\n  addUpdateTemplate(data: any) {\r\n    return this.post(\"template/addtemplate\", data);\r\n  }\r\n\r\n  addTemplateDetails(data: any) {\r\n    return this.post(\"AJAX/addTemplateDetail\", data);\r\n  }\r\n\r\n  getQuestionDetails(templateId: any) {\r\n    return this.get(`AJAX/returnTemplateDetails/${templateId}`);\r\n  }\r\n\r\n  DeleteDetails(id: any) {\r\n    return this.get(`template/deleteTemplateDetailById/${id}`);\r\n  }\r\n\r\n  getTemplatePoints(templateId: any, page: any) {\r\n    return this.get(\r\n      `template/returnCustomPointTemplateByTemplateId/${templateId}/${page}`\r\n    );\r\n  }\r\n\r\n  addTemplatePoint(body: any) {\r\n    return this.post(\"template/CustomTemplatePoint\", body);\r\n  }\r\n\r\n  deleteTemplatePoint(pointId: any) {\r\n    return this.delete(`template/DeleteCustomTemplatePoint/${pointId}`);\r\n  }\r\n}\r\n"],"names":["Validators","MAT_DIALOG_DATA","i0","CorrectionDialogComponent","data","fb","route","authserv","router","msg","GeneralService","examService","spinner","dialog","myForm","get","controls","console","log","EduCompId","getEduCompId","group","questionName","studentAnswer","questionId","examStudentId","teacherComment","required","teacherUserId","questionMark","mark","questionNameCtrl","setValue","disable","questionIdCtrl","examStudentIdCtrl","teacherUserIdCtrl","questionMarkCtrl","FormCtrl","valid","value","markCtrl","error","show","submitCorrection","subscribe","res","returnValue","success","closeAll","returnString","hide","selectors","decls","vars","consts","template","ctx","MatPaginator","MatSort","MatTableDataSource","ctx_r16","CorrectionIndexComponent","queryParamMap","params","functionId","Number","getUserRowFunctions","rowFunctions","page","CorrectedQuestions","getAllQuestions","event","filterValue","target","dataSource","filter","trim","toLowerCase","p","_a","getQuestionByCorrectionType","response","examsList","correction","examQuestions","itemsCount","item","open","afterClosed","confirm","viewQuery","TemplatesCustomePointsComponent","AddTemplateComponent","AddQuestionComponent","QuestionsIndexComponent","RouterModule","AddExamComponent","ExamsIndexComponent","TemplatesIndexComponent","ExamPreviewComponent","ExamsCustomePointsComponent","SurveysIndexComponent","AddSurveyComponent","routes","path","redirectTo","pathMatch","component","children","ExamsRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","SharedModule","MaterialModule","NgbModule","NgxSpinnerModule","NgxPaginationModule","AddSubQuestionComponent","DateAdapter","MAT_DATE_FORMATS","AppDateAdapter","APP_DATE_FORMATS","AddSurvaySubQuestionComponent","ExamsModule","provide","useClass","useValue","declarations","SaveExamDialogComponent","timer","studentServ","toastr","paramMap","examId","type","returnStudentExam","returnExamResults","warning","navigateByUrl","isSolved","ExamGroups","exam","groups","ExamName","details","exam_ar_name","IsAvaliable","mv","IsAvailable","TeacherName","teacherName","SubjectName","subject","subject_ar_name","studentUserId","exam_student","examTotalMark","exam_period_minute","solvedExamStudent_ID","student_grade","GL","length","num","k","HL","Heads","m","QL","Questions","questionNumber","currentTime","Date","hh","getHours","mm","getMinutes","ss","getSeconds","ExamStarTime","j","i","QuestionDetails","StudentChoice","RESULT","solvedQuestionNumberArr","push","id","returnStudentExamResults","ex","total_mark","studentMark","exam_result","examDuration","examResultDate","examResultTime","IsResultAvalable","isSolviedResultsOff","showResult","PointsGained","repeatable","repeatableExam_Count","solvidResults","questionID","answer","choiceId","question","PickedChoiceId","findIndex","e","find","undefined","SubmitSingleQuestion","document","getElementById","style","display","element","querySelector","classList","remove","add","innerHTML","ansMsg","returnedChoice","founded","AnswerdQuestionsNumber","x","SubmitExam","openDialog","Examtime","time","counter","tick","countDown","dialogRef","refresh","window","location","reload","CustomeValidator","DeleteDialogComponent","ctx_r13","ctx_r15","PointsService","getExamCustomPoints","ByQuestion","from","minusNum","to","ByQuestionValidators","Submitted","itemId","FormCtrls","_b","_c","_d","addExamCustomPoint","reset","ItemsCount","Points","points","point","deleteExamCustomPoint","Id","splice","Value","index","clearValidators","setValidators","bigZero","updateValueAndValidity","ctx_r35","ctx_r40","generalService","courseser","translate","subId","onLangChange","lang","curLang","parentId","branchId","getBranchId","examName","getAllExams","paginator","sort","typeId","subjectId","examNameCtrl","getAllNormalExams","examList","exams","totalItems","totalCount","deleteExam","deletedIndex","gh","removeExam","publishExam","isPublish","el","ctx_r32","ctx_r34","ctx_r36","authService","examsService","datePipe","EducationalService","choice_id","choice_text","thumbnailPic","ChoiceAttachPath","remove_image","getQuestionByID","getTeachersByEducompId","questionBank","main_subject_id","unitId","lessonId","topicId","difficulty_level","question_id","question_type_id","question_ar_text","perfect_answer","picked_choice_index","choices","array","changeQuestionType","setDefaultChoises","questionsInputs","map","d","QuestionId","enable","getSubjectByTeacherId","TeacherUserId","GetUnits","SubjectId","GetLessons","UnitId","GetTopics","LessonId","QuestionBankId","_e","_f","String","_g","QuestionTypeId","_h","_j","_k","_l","TopicId","_m","DifficultyLevel","_o","QuestionTextAr","_p","PerfectAnswer","_q","Mark","_r","QuestionAttachId","QuestionAttachPath","Choices","clear","ChoiceId","ChoiceText","obj","IsCorrect","_s","submitted","addEditQuestion","Teachers","lstTeachers","teacherId","subjects","lsts","units","lessons","topics","valueChanges","changeValidators","question_type","whiteSpace","fileName","files","name","fileSize","size","fileType","LastModified","lastModified","LastModifiedDate","lastModifiedDate","reader","FileReader","readAsDataURL","onload","fileReder","result","FileAsBase64","objIndex","indexOf","ctx_r56","examServ","stageId","yearId","getQuestions","returnModel","deleteQuestion","questionTypeEnglishName","getStageByTeacherId","stages","returnYears","years","returnTeacherSubjects","ctx_r21","ctx_r23","ctx_r24","ctx_r25","ctx_r26","ctx_r28","ctx_r31","ctx_r33","fileService","examGroupHeaderId","getAllQuestionsByHeadId","mainQuestion","questionTypeId","questionImage","lessionId","exam_question_text","questionPerfectAnswer","perfect_answer_attach","answerOneId","answerOne","answerOneMark","answerTwoMark","answerThreeMark","answerFourMark","answerOneIsCorrect","answerOneImage","answerTwoId","answerTwo","answerTwoIsCorrect","answerTwoImage","answerThreeId","answerThree","answerThreeIsCorrect","answerThreeImage","answerFourId","answerFour","answerFourIsCorrect","answerFourImage","answerOneRemove_image","answerTwoRemove_image","answerThreeRemove_image","answerFourRemove_image","educationCompanyId","questionsInGrid","questionTypeIdCtrl","image","questionFile","questionImagePath","questionImageCtrl","imageOne","answerOneFile","choice1","answerOneIdCtrl","answerOneCtrl","answerOneMarkCtrl","is_correct","answerOneIsCorrectCtrl","choice_image","answerOneRemove_imageCtrl","answerOneImageCtrl","imageTwo","answerTwoFile","choice2","answerTwoIdCtrl","answerTwoCtrl","answerTwoMarkCtrl","answerTwoIsCorrectCtrl","answerTwoRemove_imageCtrl","answerTwoImageCtrl","imageThree","answerThreeFile","choice3","answerThreeIdCtrl","answerThreeCtrl","answerThreeMarkCtrl","_t","answerThreeIsCorrectCtrl","_u","answerThreeRemove_imageCtrl","_v","answerThreeImageCtrl","_w","imageFour","answerFourFile","choice4","answerFourIdCtrl","_x","_y","answerFourCtrl","_z","answerFourMarkCtrl","_0","answerFourIsCorrectCtrl","_1","answerFourRemove_imageCtrl","_2","answerFourImageCtrl","_3","toAddEdit","exam_question_main_question","mainQuestionCtrl","_4","exam_question_mark","_5","exam_question_perfect_answer","questionPerfectAnswerCtrl","_6","questionTextCtrl","_7","exam_question_type_id","_8","exam_selected_question_head_id","exam_selected_subject_id","exam_question_image","questionImageRemove_imageCtrl","_9","exam_question_id","mcq_choices","mark1","mark2","mark3","mark4","forEach","mcq","editMcqQuestion","addMcqQuestion","addSurveyQuestion","perfect_answer_attachCtrl","unitIdCtrl","lessonIdCtrl","resetFileInputs","editSurveyQuestion","getQuestionForEditByID","main_question","question_text","attach_path","previewPicture","MCQ_Choices","Text","Image","Is_Correct","oneIsCorrect","twoIsCorrect","_10","_11","_12","_13","_14","_15","threeIsCorrect","_16","_17","_18","_19","_20","_21","_22","_23","_24","_25","_26","_27","fourIsCorrect","_28","confirmed","deleteExamQuestion","toDeleteIndex","q","info","FileInputs","querySelectorAll","input","forkJoin","startWith","ctx_r22","ctx_r30","ctx_r57","ctx_r60","ctx_r63","getExamById","getAllGroupHeaderByExamId","GroupHeadersForm","examHours","examMinutes","fromDate","toDate","formHour","toHours","examGroup","examHeader","examContent","stageIdCtrl","educationYearIdCtrl","subjectIdCtrl","lessionIdCtrl","getAllCountieres","getAllExamTypes","getAllQuestionGroups","getAllQuestionHeaders","examTypeValidator","RepeatableValidator","examGroups","option","question_group_ar_name","includes","examHeaders","question_head_ar_name","toHoursCtrl","toHour","formHourCtrl","fromHour","canSellIndividuallyCtrl","Individually_Purchased","exam_minute","exam_hour","examMinutesCtrl","examHoursCtrl","Subject_ID","quiz","examTypeIdCtrl","fromDateCtrl","Avilable_Date_From","toDateCtrl","Avilable_Date_To","GroupsHeadersList","filteredExamGroups","examGroupCtrl","pipe","filter_question_group","filteredExamHeaders","examHeaderCtrl","filter_question_header","transform","exam_type_id","addExam","validGroupHeadersForm","GroupHeadsubmitted","navigate","queryParams","queryParamsHandling","onAddExamGroupHeader","sameGroupWithSameHeader","group_name","head_name","tempExam","ToAddExamGroupHeader","exam_question_group_text","exam_question_head_title","examContentCtrl","exam_question_head_text","addExamGroupHeader","headerResponse","tempExcamGroupHeader","exam_question_head_id","question_title","examGroupHeader","editGroupHeaderMode","examGroupHeaderIdToEdit","questionType","toEdit","head","title","editExamGroupHeader","editResponse","toReplace","deleteExamGroupHeader","deleteResponse","todeleteIndex","removeExamGroupHead","groupHeader","getAllExamType","examTypes","getAllCountries","countries","countryIdCtrl","getAllStages","getAllEducationYears","educationYears","getAllSubjects","getTeacherBySubjectAndEduCompId","getAllUnitsBySublectId","results","teachers","getAllLessonsByUnitId","lessions","examTypeId","CustomDiscount","hasCustomDiscountCtrl","repeatNumbersCtrl","repeatingPriceCtrl","ctx_r29","languageService","startSortingTable","curPage","pageIndex","sortingDataAccessor","property","isArabic","course_ar_name","course_en_name","ctx_r54","ctx_r75","ctx_r77","ctx_r79","ctx_r87","TemplatesService","templateId","getTemplateById","getQuestionDetails","presetTemplateId","UnitRevisionID","LessonID","Name","price","priceDiscount","priceDiscountType","ResultDate","ResultTime","repeatableExam","SendWhatsApp","CustomDiscountApplied","StudentRepeatExamCost","Publish","DetailForm","questionsLevel","questionsCount","unitRevisionID","lessonID","TopicID","DetailsCtrl","getPresets","repeatableExamValidators","addUpdateTemplate","stage_id","educational_year_id","patchValue","templateName","GetUnitsForDetails","DetailSubmitted","addTemplateDetails","Presets","DeleteDetails","unitsForDetails","lessonsForDetails","topicsForDetails","getTemplateCustomPoints","addTemplateCustomPoint","ctx_r59","ctx_r64","ctx_r68","StudentService","getTemplates","topicIdCtrl","Templates","TotalItemCount","PublishDepublishTemplate","deleteTemplate","GenerateExamFromTemplate","url","AppClientService","http","eduCompID","body","post","eduCompId","pointId","delete","factory","providedIn"],"sourceRoot":"webpack:///"}